/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomFloodlightVariable model module.
 * @module model/CustomFloodlightVariable
 * @version v3.3
 */
class CustomFloodlightVariable {
    /**
     * Constructs a new <code>CustomFloodlightVariable</code>.
     * A custom floodlight variable. This field may only be used when calling batchinsert; it is not supported by batchupdate.
     * @alias module:model/CustomFloodlightVariable
     */
    constructor() { 
        
        CustomFloodlightVariable.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomFloodlightVariable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomFloodlightVariable} obj Optional instance to populate.
     * @return {module:model/CustomFloodlightVariable} The populated <code>CustomFloodlightVariable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomFloodlightVariable();

            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomFloodlightVariable</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomFloodlightVariable</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#customFloodlightVariable\".
 * @member {String} kind
 */
CustomFloodlightVariable.prototype['kind'] = undefined;

/**
 * The type of custom floodlight variable to supply a value for. These map to the \"u[1-20]=\" in the tags.
 * @member {module:model/CustomFloodlightVariable.TypeEnum} type
 */
CustomFloodlightVariable.prototype['type'] = undefined;

/**
 * The value of the custom floodlight variable. The length of string must not exceed 100 characters.
 * @member {String} value
 */
CustomFloodlightVariable.prototype['value'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CustomFloodlightVariable['TypeEnum'] = {

    /**
     * value: "U1"
     * @const
     */
    "U1": "U1",

    /**
     * value: "U2"
     * @const
     */
    "U2": "U2",

    /**
     * value: "U3"
     * @const
     */
    "U3": "U3",

    /**
     * value: "U4"
     * @const
     */
    "U4": "U4",

    /**
     * value: "U5"
     * @const
     */
    "U5": "U5",

    /**
     * value: "U6"
     * @const
     */
    "U6": "U6",

    /**
     * value: "U7"
     * @const
     */
    "U7": "U7",

    /**
     * value: "U8"
     * @const
     */
    "U8": "U8",

    /**
     * value: "U9"
     * @const
     */
    "U9": "U9",

    /**
     * value: "U10"
     * @const
     */
    "U10": "U10",

    /**
     * value: "U11"
     * @const
     */
    "U11": "U11",

    /**
     * value: "U12"
     * @const
     */
    "U12": "U12",

    /**
     * value: "U13"
     * @const
     */
    "U13": "U13",

    /**
     * value: "U14"
     * @const
     */
    "U14": "U14",

    /**
     * value: "U15"
     * @const
     */
    "U15": "U15",

    /**
     * value: "U16"
     * @const
     */
    "U16": "U16",

    /**
     * value: "U17"
     * @const
     */
    "U17": "U17",

    /**
     * value: "U18"
     * @const
     */
    "U18": "U18",

    /**
     * value: "U19"
     * @const
     */
    "U19": "U19",

    /**
     * value: "U20"
     * @const
     */
    "U20": "U20",

    /**
     * value: "U21"
     * @const
     */
    "U21": "U21",

    /**
     * value: "U22"
     * @const
     */
    "U22": "U22",

    /**
     * value: "U23"
     * @const
     */
    "U23": "U23",

    /**
     * value: "U24"
     * @const
     */
    "U24": "U24",

    /**
     * value: "U25"
     * @const
     */
    "U25": "U25",

    /**
     * value: "U26"
     * @const
     */
    "U26": "U26",

    /**
     * value: "U27"
     * @const
     */
    "U27": "U27",

    /**
     * value: "U28"
     * @const
     */
    "U28": "U28",

    /**
     * value: "U29"
     * @const
     */
    "U29": "U29",

    /**
     * value: "U30"
     * @const
     */
    "U30": "U30",

    /**
     * value: "U31"
     * @const
     */
    "U31": "U31",

    /**
     * value: "U32"
     * @const
     */
    "U32": "U32",

    /**
     * value: "U33"
     * @const
     */
    "U33": "U33",

    /**
     * value: "U34"
     * @const
     */
    "U34": "U34",

    /**
     * value: "U35"
     * @const
     */
    "U35": "U35",

    /**
     * value: "U36"
     * @const
     */
    "U36": "U36",

    /**
     * value: "U37"
     * @const
     */
    "U37": "U37",

    /**
     * value: "U38"
     * @const
     */
    "U38": "U38",

    /**
     * value: "U39"
     * @const
     */
    "U39": "U39",

    /**
     * value: "U40"
     * @const
     */
    "U40": "U40",

    /**
     * value: "U41"
     * @const
     */
    "U41": "U41",

    /**
     * value: "U42"
     * @const
     */
    "U42": "U42",

    /**
     * value: "U43"
     * @const
     */
    "U43": "U43",

    /**
     * value: "U44"
     * @const
     */
    "U44": "U44",

    /**
     * value: "U45"
     * @const
     */
    "U45": "U45",

    /**
     * value: "U46"
     * @const
     */
    "U46": "U46",

    /**
     * value: "U47"
     * @const
     */
    "U47": "U47",

    /**
     * value: "U48"
     * @const
     */
    "U48": "U48",

    /**
     * value: "U49"
     * @const
     */
    "U49": "U49",

    /**
     * value: "U50"
     * @const
     */
    "U50": "U50",

    /**
     * value: "U51"
     * @const
     */
    "U51": "U51",

    /**
     * value: "U52"
     * @const
     */
    "U52": "U52",

    /**
     * value: "U53"
     * @const
     */
    "U53": "U53",

    /**
     * value: "U54"
     * @const
     */
    "U54": "U54",

    /**
     * value: "U55"
     * @const
     */
    "U55": "U55",

    /**
     * value: "U56"
     * @const
     */
    "U56": "U56",

    /**
     * value: "U57"
     * @const
     */
    "U57": "U57",

    /**
     * value: "U58"
     * @const
     */
    "U58": "U58",

    /**
     * value: "U59"
     * @const
     */
    "U59": "U59",

    /**
     * value: "U60"
     * @const
     */
    "U60": "U60",

    /**
     * value: "U61"
     * @const
     */
    "U61": "U61",

    /**
     * value: "U62"
     * @const
     */
    "U62": "U62",

    /**
     * value: "U63"
     * @const
     */
    "U63": "U63",

    /**
     * value: "U64"
     * @const
     */
    "U64": "U64",

    /**
     * value: "U65"
     * @const
     */
    "U65": "U65",

    /**
     * value: "U66"
     * @const
     */
    "U66": "U66",

    /**
     * value: "U67"
     * @const
     */
    "U67": "U67",

    /**
     * value: "U68"
     * @const
     */
    "U68": "U68",

    /**
     * value: "U69"
     * @const
     */
    "U69": "U69",

    /**
     * value: "U70"
     * @const
     */
    "U70": "U70",

    /**
     * value: "U71"
     * @const
     */
    "U71": "U71",

    /**
     * value: "U72"
     * @const
     */
    "U72": "U72",

    /**
     * value: "U73"
     * @const
     */
    "U73": "U73",

    /**
     * value: "U74"
     * @const
     */
    "U74": "U74",

    /**
     * value: "U75"
     * @const
     */
    "U75": "U75",

    /**
     * value: "U76"
     * @const
     */
    "U76": "U76",

    /**
     * value: "U77"
     * @const
     */
    "U77": "U77",

    /**
     * value: "U78"
     * @const
     */
    "U78": "U78",

    /**
     * value: "U79"
     * @const
     */
    "U79": "U79",

    /**
     * value: "U80"
     * @const
     */
    "U80": "U80",

    /**
     * value: "U81"
     * @const
     */
    "U81": "U81",

    /**
     * value: "U82"
     * @const
     */
    "U82": "U82",

    /**
     * value: "U83"
     * @const
     */
    "U83": "U83",

    /**
     * value: "U84"
     * @const
     */
    "U84": "U84",

    /**
     * value: "U85"
     * @const
     */
    "U85": "U85",

    /**
     * value: "U86"
     * @const
     */
    "U86": "U86",

    /**
     * value: "U87"
     * @const
     */
    "U87": "U87",

    /**
     * value: "U88"
     * @const
     */
    "U88": "U88",

    /**
     * value: "U89"
     * @const
     */
    "U89": "U89",

    /**
     * value: "U90"
     * @const
     */
    "U90": "U90",

    /**
     * value: "U91"
     * @const
     */
    "U91": "U91",

    /**
     * value: "U92"
     * @const
     */
    "U92": "U92",

    /**
     * value: "U93"
     * @const
     */
    "U93": "U93",

    /**
     * value: "U94"
     * @const
     */
    "U94": "U94",

    /**
     * value: "U95"
     * @const
     */
    "U95": "U95",

    /**
     * value: "U96"
     * @const
     */
    "U96": "U96",

    /**
     * value: "U97"
     * @const
     */
    "U97": "U97",

    /**
     * value: "U98"
     * @const
     */
    "U98": "U98",

    /**
     * value: "U99"
     * @const
     */
    "U99": "U99",

    /**
     * value: "U100"
     * @const
     */
    "U100": "U100"
};



export default CustomFloodlightVariable;

