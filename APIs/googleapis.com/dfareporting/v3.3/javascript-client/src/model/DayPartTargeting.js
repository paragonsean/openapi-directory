/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DayPartTargeting model module.
 * @module model/DayPartTargeting
 * @version v3.3
 */
class DayPartTargeting {
    /**
     * Constructs a new <code>DayPartTargeting</code>.
     * Day Part Targeting.
     * @alias module:model/DayPartTargeting
     */
    constructor() { 
        
        DayPartTargeting.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DayPartTargeting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DayPartTargeting} obj Optional instance to populate.
     * @return {module:model/DayPartTargeting} The populated <code>DayPartTargeting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DayPartTargeting();

            if (data.hasOwnProperty('daysOfWeek')) {
                obj['daysOfWeek'] = ApiClient.convertToType(data['daysOfWeek'], ['String']);
            }
            if (data.hasOwnProperty('hoursOfDay')) {
                obj['hoursOfDay'] = ApiClient.convertToType(data['hoursOfDay'], ['Number']);
            }
            if (data.hasOwnProperty('userLocalTime')) {
                obj['userLocalTime'] = ApiClient.convertToType(data['userLocalTime'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DayPartTargeting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DayPartTargeting</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['daysOfWeek'])) {
            throw new Error("Expected the field `daysOfWeek` to be an array in the JSON data but got " + data['daysOfWeek']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['hoursOfDay'])) {
            throw new Error("Expected the field `hoursOfDay` to be an array in the JSON data but got " + data['hoursOfDay']);
        }

        return true;
    }


}



/**
 * Days of the week when the ad will serve. Acceptable values are: - \"SUNDAY\" - \"MONDAY\" - \"TUESDAY\" - \"WEDNESDAY\" - \"THURSDAY\" - \"FRIDAY\" - \"SATURDAY\" 
 * @member {Array.<module:model/DayPartTargeting.DaysOfWeekEnum>} daysOfWeek
 */
DayPartTargeting.prototype['daysOfWeek'] = undefined;

/**
 * Hours of the day when the ad will serve, where 0 is midnight to 1 AM and 23 is 11 PM to midnight. Can be specified with days of week, in which case the ad would serve during these hours on the specified days. For example if Monday, Wednesday, Friday are the days of week specified and 9-10am, 3-5pm (hours 9, 15, and 16) is specified, the ad would serve Monday, Wednesdays, and Fridays at 9-10am and 3-5pm. Acceptable values are 0 to 23, inclusive.
 * @member {Array.<Number>} hoursOfDay
 */
DayPartTargeting.prototype['hoursOfDay'] = undefined;

/**
 * Whether or not to use the user's local time. If false, the America/New York time zone applies.
 * @member {Boolean} userLocalTime
 */
DayPartTargeting.prototype['userLocalTime'] = undefined;





/**
 * Allowed values for the <code>daysOfWeek</code> property.
 * @enum {String}
 * @readonly
 */
DayPartTargeting['DaysOfWeekEnum'] = {

    /**
     * value: "MONDAY"
     * @const
     */
    "MONDAY": "MONDAY",

    /**
     * value: "TUESDAY"
     * @const
     */
    "TUESDAY": "TUESDAY",

    /**
     * value: "WEDNESDAY"
     * @const
     */
    "WEDNESDAY": "WEDNESDAY",

    /**
     * value: "THURSDAY"
     * @const
     */
    "THURSDAY": "THURSDAY",

    /**
     * value: "FRIDAY"
     * @const
     */
    "FRIDAY": "FRIDAY",

    /**
     * value: "SATURDAY"
     * @const
     */
    "SATURDAY": "SATURDAY",

    /**
     * value: "SUNDAY"
     * @const
     */
    "SUNDAY": "SUNDAY"
};



export default DayPartTargeting;

