/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DimensionValue from './DimensionValue';
import LastModifiedInfo from './LastModifiedInfo';
import PricingSchedule from './PricingSchedule';

/**
 * The PlacementGroup model module.
 * @module model/PlacementGroup
 * @version v3.3
 */
class PlacementGroup {
    /**
     * Constructs a new <code>PlacementGroup</code>.
     * Contains properties of a package or roadblock.
     * @alias module:model/PlacementGroup
     */
    constructor() { 
        
        PlacementGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlacementGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlacementGroup} obj Optional instance to populate.
     * @return {module:model/PlacementGroup} The populated <code>PlacementGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlacementGroup();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('advertiserId')) {
                obj['advertiserId'] = ApiClient.convertToType(data['advertiserId'], 'String');
            }
            if (data.hasOwnProperty('advertiserIdDimensionValue')) {
                obj['advertiserIdDimensionValue'] = DimensionValue.constructFromObject(data['advertiserIdDimensionValue']);
            }
            if (data.hasOwnProperty('archived')) {
                obj['archived'] = ApiClient.convertToType(data['archived'], 'Boolean');
            }
            if (data.hasOwnProperty('campaignId')) {
                obj['campaignId'] = ApiClient.convertToType(data['campaignId'], 'String');
            }
            if (data.hasOwnProperty('campaignIdDimensionValue')) {
                obj['campaignIdDimensionValue'] = DimensionValue.constructFromObject(data['campaignIdDimensionValue']);
            }
            if (data.hasOwnProperty('childPlacementIds')) {
                obj['childPlacementIds'] = ApiClient.convertToType(data['childPlacementIds'], ['String']);
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('contentCategoryId')) {
                obj['contentCategoryId'] = ApiClient.convertToType(data['contentCategoryId'], 'String');
            }
            if (data.hasOwnProperty('createInfo')) {
                obj['createInfo'] = LastModifiedInfo.constructFromObject(data['createInfo']);
            }
            if (data.hasOwnProperty('directorySiteId')) {
                obj['directorySiteId'] = ApiClient.convertToType(data['directorySiteId'], 'String');
            }
            if (data.hasOwnProperty('directorySiteIdDimensionValue')) {
                obj['directorySiteIdDimensionValue'] = DimensionValue.constructFromObject(data['directorySiteIdDimensionValue']);
            }
            if (data.hasOwnProperty('externalId')) {
                obj['externalId'] = ApiClient.convertToType(data['externalId'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('idDimensionValue')) {
                obj['idDimensionValue'] = DimensionValue.constructFromObject(data['idDimensionValue']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedInfo')) {
                obj['lastModifiedInfo'] = LastModifiedInfo.constructFromObject(data['lastModifiedInfo']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('placementGroupType')) {
                obj['placementGroupType'] = ApiClient.convertToType(data['placementGroupType'], 'String');
            }
            if (data.hasOwnProperty('placementStrategyId')) {
                obj['placementStrategyId'] = ApiClient.convertToType(data['placementStrategyId'], 'String');
            }
            if (data.hasOwnProperty('pricingSchedule')) {
                obj['pricingSchedule'] = PricingSchedule.constructFromObject(data['pricingSchedule']);
            }
            if (data.hasOwnProperty('primaryPlacementId')) {
                obj['primaryPlacementId'] = ApiClient.convertToType(data['primaryPlacementId'], 'String');
            }
            if (data.hasOwnProperty('primaryPlacementIdDimensionValue')) {
                obj['primaryPlacementIdDimensionValue'] = DimensionValue.constructFromObject(data['primaryPlacementIdDimensionValue']);
            }
            if (data.hasOwnProperty('siteId')) {
                obj['siteId'] = ApiClient.convertToType(data['siteId'], 'String');
            }
            if (data.hasOwnProperty('siteIdDimensionValue')) {
                obj['siteIdDimensionValue'] = DimensionValue.constructFromObject(data['siteIdDimensionValue']);
            }
            if (data.hasOwnProperty('subaccountId')) {
                obj['subaccountId'] = ApiClient.convertToType(data['subaccountId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlacementGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlacementGroup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['advertiserId'] && !(typeof data['advertiserId'] === 'string' || data['advertiserId'] instanceof String)) {
            throw new Error("Expected the field `advertiserId` to be a primitive type in the JSON string but got " + data['advertiserId']);
        }
        // validate the optional field `advertiserIdDimensionValue`
        if (data['advertiserIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['advertiserIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['campaignId'] && !(typeof data['campaignId'] === 'string' || data['campaignId'] instanceof String)) {
            throw new Error("Expected the field `campaignId` to be a primitive type in the JSON string but got " + data['campaignId']);
        }
        // validate the optional field `campaignIdDimensionValue`
        if (data['campaignIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['campaignIdDimensionValue']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['childPlacementIds'])) {
            throw new Error("Expected the field `childPlacementIds` to be an array in the JSON data but got " + data['childPlacementIds']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['contentCategoryId'] && !(typeof data['contentCategoryId'] === 'string' || data['contentCategoryId'] instanceof String)) {
            throw new Error("Expected the field `contentCategoryId` to be a primitive type in the JSON string but got " + data['contentCategoryId']);
        }
        // validate the optional field `createInfo`
        if (data['createInfo']) { // data not null
          LastModifiedInfo.validateJSON(data['createInfo']);
        }
        // ensure the json data is a string
        if (data['directorySiteId'] && !(typeof data['directorySiteId'] === 'string' || data['directorySiteId'] instanceof String)) {
            throw new Error("Expected the field `directorySiteId` to be a primitive type in the JSON string but got " + data['directorySiteId']);
        }
        // validate the optional field `directorySiteIdDimensionValue`
        if (data['directorySiteIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['directorySiteIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['externalId'] && !(typeof data['externalId'] === 'string' || data['externalId'] instanceof String)) {
            throw new Error("Expected the field `externalId` to be a primitive type in the JSON string but got " + data['externalId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `idDimensionValue`
        if (data['idDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['idDimensionValue']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `lastModifiedInfo`
        if (data['lastModifiedInfo']) { // data not null
          LastModifiedInfo.validateJSON(data['lastModifiedInfo']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['placementGroupType'] && !(typeof data['placementGroupType'] === 'string' || data['placementGroupType'] instanceof String)) {
            throw new Error("Expected the field `placementGroupType` to be a primitive type in the JSON string but got " + data['placementGroupType']);
        }
        // ensure the json data is a string
        if (data['placementStrategyId'] && !(typeof data['placementStrategyId'] === 'string' || data['placementStrategyId'] instanceof String)) {
            throw new Error("Expected the field `placementStrategyId` to be a primitive type in the JSON string but got " + data['placementStrategyId']);
        }
        // validate the optional field `pricingSchedule`
        if (data['pricingSchedule']) { // data not null
          PricingSchedule.validateJSON(data['pricingSchedule']);
        }
        // ensure the json data is a string
        if (data['primaryPlacementId'] && !(typeof data['primaryPlacementId'] === 'string' || data['primaryPlacementId'] instanceof String)) {
            throw new Error("Expected the field `primaryPlacementId` to be a primitive type in the JSON string but got " + data['primaryPlacementId']);
        }
        // validate the optional field `primaryPlacementIdDimensionValue`
        if (data['primaryPlacementIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['primaryPlacementIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['siteId'] && !(typeof data['siteId'] === 'string' || data['siteId'] instanceof String)) {
            throw new Error("Expected the field `siteId` to be a primitive type in the JSON string but got " + data['siteId']);
        }
        // validate the optional field `siteIdDimensionValue`
        if (data['siteIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['siteIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['subaccountId'] && !(typeof data['subaccountId'] === 'string' || data['subaccountId'] instanceof String)) {
            throw new Error("Expected the field `subaccountId` to be a primitive type in the JSON string but got " + data['subaccountId']);
        }

        return true;
    }


}



/**
 * Account ID of this placement group. This is a read-only field that can be left blank.
 * @member {String} accountId
 */
PlacementGroup.prototype['accountId'] = undefined;

/**
 * Advertiser ID of this placement group. This is a required field on insertion.
 * @member {String} advertiserId
 */
PlacementGroup.prototype['advertiserId'] = undefined;

/**
 * @member {module:model/DimensionValue} advertiserIdDimensionValue
 */
PlacementGroup.prototype['advertiserIdDimensionValue'] = undefined;

/**
 * Whether this placement group is archived.
 * @member {Boolean} archived
 */
PlacementGroup.prototype['archived'] = undefined;

/**
 * Campaign ID of this placement group. This field is required on insertion.
 * @member {String} campaignId
 */
PlacementGroup.prototype['campaignId'] = undefined;

/**
 * @member {module:model/DimensionValue} campaignIdDimensionValue
 */
PlacementGroup.prototype['campaignIdDimensionValue'] = undefined;

/**
 * IDs of placements which are assigned to this placement group. This is a read-only, auto-generated field.
 * @member {Array.<String>} childPlacementIds
 */
PlacementGroup.prototype['childPlacementIds'] = undefined;

/**
 * Comments for this placement group.
 * @member {String} comment
 */
PlacementGroup.prototype['comment'] = undefined;

/**
 * ID of the content category assigned to this placement group.
 * @member {String} contentCategoryId
 */
PlacementGroup.prototype['contentCategoryId'] = undefined;

/**
 * @member {module:model/LastModifiedInfo} createInfo
 */
PlacementGroup.prototype['createInfo'] = undefined;

/**
 * Directory site ID associated with this placement group. On insert, you must set either this field or the site_id field to specify the site associated with this placement group. This is a required field that is read-only after insertion.
 * @member {String} directorySiteId
 */
PlacementGroup.prototype['directorySiteId'] = undefined;

/**
 * @member {module:model/DimensionValue} directorySiteIdDimensionValue
 */
PlacementGroup.prototype['directorySiteIdDimensionValue'] = undefined;

/**
 * External ID for this placement.
 * @member {String} externalId
 */
PlacementGroup.prototype['externalId'] = undefined;

/**
 * ID of this placement group. This is a read-only, auto-generated field.
 * @member {String} id
 */
PlacementGroup.prototype['id'] = undefined;

/**
 * @member {module:model/DimensionValue} idDimensionValue
 */
PlacementGroup.prototype['idDimensionValue'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementGroup\".
 * @member {String} kind
 */
PlacementGroup.prototype['kind'] = undefined;

/**
 * @member {module:model/LastModifiedInfo} lastModifiedInfo
 */
PlacementGroup.prototype['lastModifiedInfo'] = undefined;

/**
 * Name of this placement group. This is a required field and must be less than 256 characters long.
 * @member {String} name
 */
PlacementGroup.prototype['name'] = undefined;

/**
 * Type of this placement group. A package is a simple group of placements that acts as a single pricing point for a group of tags. A roadblock is a group of placements that not only acts as a single pricing point, but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned placements to be marked as primary for reporting. This field is required on insertion.
 * @member {module:model/PlacementGroup.PlacementGroupTypeEnum} placementGroupType
 */
PlacementGroup.prototype['placementGroupType'] = undefined;

/**
 * ID of the placement strategy assigned to this placement group.
 * @member {String} placementStrategyId
 */
PlacementGroup.prototype['placementStrategyId'] = undefined;

/**
 * @member {module:model/PricingSchedule} pricingSchedule
 */
PlacementGroup.prototype['pricingSchedule'] = undefined;

/**
 * ID of the primary placement, used to calculate the media cost of a roadblock (placement group). Modifying this field will automatically modify the primary field on all affected roadblock child placements.
 * @member {String} primaryPlacementId
 */
PlacementGroup.prototype['primaryPlacementId'] = undefined;

/**
 * @member {module:model/DimensionValue} primaryPlacementIdDimensionValue
 */
PlacementGroup.prototype['primaryPlacementIdDimensionValue'] = undefined;

/**
 * Site ID associated with this placement group. On insert, you must set either this field or the directorySiteId field to specify the site associated with this placement group. This is a required field that is read-only after insertion.
 * @member {String} siteId
 */
PlacementGroup.prototype['siteId'] = undefined;

/**
 * @member {module:model/DimensionValue} siteIdDimensionValue
 */
PlacementGroup.prototype['siteIdDimensionValue'] = undefined;

/**
 * Subaccount ID of this placement group. This is a read-only field that can be left blank.
 * @member {String} subaccountId
 */
PlacementGroup.prototype['subaccountId'] = undefined;





/**
 * Allowed values for the <code>placementGroupType</code> property.
 * @enum {String}
 * @readonly
 */
PlacementGroup['PlacementGroupTypeEnum'] = {

    /**
     * value: "PLACEMENT_PACKAGE"
     * @const
     */
    "PACKAGE": "PLACEMENT_PACKAGE",

    /**
     * value: "PLACEMENT_ROADBLOCK"
     * @const
     */
    "ROADBLOCK": "PLACEMENT_ROADBLOCK"
};



export default PlacementGroup;

