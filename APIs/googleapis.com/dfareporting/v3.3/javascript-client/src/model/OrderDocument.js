/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LastModifiedInfo from './LastModifiedInfo';

/**
 * The OrderDocument model module.
 * @module model/OrderDocument
 * @version v3.3
 */
class OrderDocument {
    /**
     * Constructs a new <code>OrderDocument</code>.
     * Contains properties of a Planning order document.
     * @alias module:model/OrderDocument
     */
    constructor() { 
        
        OrderDocument.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderDocument</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderDocument} obj Optional instance to populate.
     * @return {module:model/OrderDocument} The populated <code>OrderDocument</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderDocument();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('advertiserId')) {
                obj['advertiserId'] = ApiClient.convertToType(data['advertiserId'], 'String');
            }
            if (data.hasOwnProperty('amendedOrderDocumentId')) {
                obj['amendedOrderDocumentId'] = ApiClient.convertToType(data['amendedOrderDocumentId'], 'String');
            }
            if (data.hasOwnProperty('approvedByUserProfileIds')) {
                obj['approvedByUserProfileIds'] = ApiClient.convertToType(data['approvedByUserProfileIds'], ['String']);
            }
            if (data.hasOwnProperty('cancelled')) {
                obj['cancelled'] = ApiClient.convertToType(data['cancelled'], 'Boolean');
            }
            if (data.hasOwnProperty('createdInfo')) {
                obj['createdInfo'] = LastModifiedInfo.constructFromObject(data['createdInfo']);
            }
            if (data.hasOwnProperty('effectiveDate')) {
                obj['effectiveDate'] = ApiClient.convertToType(data['effectiveDate'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('lastSentRecipients')) {
                obj['lastSentRecipients'] = ApiClient.convertToType(data['lastSentRecipients'], ['String']);
            }
            if (data.hasOwnProperty('lastSentTime')) {
                obj['lastSentTime'] = ApiClient.convertToType(data['lastSentTime'], 'Date');
            }
            if (data.hasOwnProperty('orderId')) {
                obj['orderId'] = ApiClient.convertToType(data['orderId'], 'String');
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
            if (data.hasOwnProperty('signed')) {
                obj['signed'] = ApiClient.convertToType(data['signed'], 'Boolean');
            }
            if (data.hasOwnProperty('subaccountId')) {
                obj['subaccountId'] = ApiClient.convertToType(data['subaccountId'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderDocument</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderDocument</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['advertiserId'] && !(typeof data['advertiserId'] === 'string' || data['advertiserId'] instanceof String)) {
            throw new Error("Expected the field `advertiserId` to be a primitive type in the JSON string but got " + data['advertiserId']);
        }
        // ensure the json data is a string
        if (data['amendedOrderDocumentId'] && !(typeof data['amendedOrderDocumentId'] === 'string' || data['amendedOrderDocumentId'] instanceof String)) {
            throw new Error("Expected the field `amendedOrderDocumentId` to be a primitive type in the JSON string but got " + data['amendedOrderDocumentId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['approvedByUserProfileIds'])) {
            throw new Error("Expected the field `approvedByUserProfileIds` to be an array in the JSON data but got " + data['approvedByUserProfileIds']);
        }
        // validate the optional field `createdInfo`
        if (data['createdInfo']) { // data not null
          LastModifiedInfo.validateJSON(data['createdInfo']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['lastSentRecipients'])) {
            throw new Error("Expected the field `lastSentRecipients` to be an array in the JSON data but got " + data['lastSentRecipients']);
        }
        // ensure the json data is a string
        if (data['orderId'] && !(typeof data['orderId'] === 'string' || data['orderId'] instanceof String)) {
            throw new Error("Expected the field `orderId` to be a primitive type in the JSON string but got " + data['orderId']);
        }
        // ensure the json data is a string
        if (data['projectId'] && !(typeof data['projectId'] === 'string' || data['projectId'] instanceof String)) {
            throw new Error("Expected the field `projectId` to be a primitive type in the JSON string but got " + data['projectId']);
        }
        // ensure the json data is a string
        if (data['subaccountId'] && !(typeof data['subaccountId'] === 'string' || data['subaccountId'] instanceof String)) {
            throw new Error("Expected the field `subaccountId` to be a primitive type in the JSON string but got " + data['subaccountId']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Account ID of this order document.
 * @member {String} accountId
 */
OrderDocument.prototype['accountId'] = undefined;

/**
 * Advertiser ID of this order document.
 * @member {String} advertiserId
 */
OrderDocument.prototype['advertiserId'] = undefined;

/**
 * The amended order document ID of this order document. An order document can be created by optionally amending another order document so that the change history can be preserved.
 * @member {String} amendedOrderDocumentId
 */
OrderDocument.prototype['amendedOrderDocumentId'] = undefined;

/**
 * IDs of users who have approved this order document.
 * @member {Array.<String>} approvedByUserProfileIds
 */
OrderDocument.prototype['approvedByUserProfileIds'] = undefined;

/**
 * Whether this order document is cancelled.
 * @member {Boolean} cancelled
 */
OrderDocument.prototype['cancelled'] = undefined;

/**
 * @member {module:model/LastModifiedInfo} createdInfo
 */
OrderDocument.prototype['createdInfo'] = undefined;

/**
 * @member {Date} effectiveDate
 */
OrderDocument.prototype['effectiveDate'] = undefined;

/**
 * ID of this order document.
 * @member {String} id
 */
OrderDocument.prototype['id'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#orderDocument\".
 * @member {String} kind
 */
OrderDocument.prototype['kind'] = undefined;

/**
 * List of email addresses that received the last sent document.
 * @member {Array.<String>} lastSentRecipients
 */
OrderDocument.prototype['lastSentRecipients'] = undefined;

/**
 * @member {Date} lastSentTime
 */
OrderDocument.prototype['lastSentTime'] = undefined;

/**
 * ID of the order from which this order document is created.
 * @member {String} orderId
 */
OrderDocument.prototype['orderId'] = undefined;

/**
 * Project ID of this order document.
 * @member {String} projectId
 */
OrderDocument.prototype['projectId'] = undefined;

/**
 * Whether this order document has been signed.
 * @member {Boolean} signed
 */
OrderDocument.prototype['signed'] = undefined;

/**
 * Subaccount ID of this order document.
 * @member {String} subaccountId
 */
OrderDocument.prototype['subaccountId'] = undefined;

/**
 * Title of this order document.
 * @member {String} title
 */
OrderDocument.prototype['title'] = undefined;

/**
 * Type of this order document
 * @member {module:model/OrderDocument.TypeEnum} type
 */
OrderDocument.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
OrderDocument['TypeEnum'] = {

    /**
     * value: "PLANNING_ORDER_TYPE_INSERTION_ORDER"
     * @const
     */
    "INSERTION_ORDER": "PLANNING_ORDER_TYPE_INSERTION_ORDER",

    /**
     * value: "PLANNING_ORDER_TYPE_CHANGE_ORDER"
     * @const
     */
    "CHANGE_ORDER": "PLANNING_ORDER_TYPE_CHANGE_ORDER"
};



export default OrderDocument;

