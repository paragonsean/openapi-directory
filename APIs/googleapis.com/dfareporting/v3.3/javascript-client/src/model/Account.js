/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReportsConfiguration from './ReportsConfiguration';

/**
 * The Account model module.
 * @module model/Account
 * @version v3.3
 */
class Account {
    /**
     * Constructs a new <code>Account</code>.
     * Contains properties of a Campaign Manager account.
     * @alias module:model/Account
     */
    constructor() { 
        
        Account.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Account</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Account} obj Optional instance to populate.
     * @return {module:model/Account} The populated <code>Account</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Account();

            if (data.hasOwnProperty('accountPermissionIds')) {
                obj['accountPermissionIds'] = ApiClient.convertToType(data['accountPermissionIds'], ['String']);
            }
            if (data.hasOwnProperty('accountProfile')) {
                obj['accountProfile'] = ApiClient.convertToType(data['accountProfile'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('activeAdsLimitTier')) {
                obj['activeAdsLimitTier'] = ApiClient.convertToType(data['activeAdsLimitTier'], 'String');
            }
            if (data.hasOwnProperty('activeViewOptOut')) {
                obj['activeViewOptOut'] = ApiClient.convertToType(data['activeViewOptOut'], 'Boolean');
            }
            if (data.hasOwnProperty('availablePermissionIds')) {
                obj['availablePermissionIds'] = ApiClient.convertToType(data['availablePermissionIds'], ['String']);
            }
            if (data.hasOwnProperty('countryId')) {
                obj['countryId'] = ApiClient.convertToType(data['countryId'], 'String');
            }
            if (data.hasOwnProperty('currencyId')) {
                obj['currencyId'] = ApiClient.convertToType(data['currencyId'], 'String');
            }
            if (data.hasOwnProperty('defaultCreativeSizeId')) {
                obj['defaultCreativeSizeId'] = ApiClient.convertToType(data['defaultCreativeSizeId'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('maximumImageSize')) {
                obj['maximumImageSize'] = ApiClient.convertToType(data['maximumImageSize'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nielsenOcrEnabled')) {
                obj['nielsenOcrEnabled'] = ApiClient.convertToType(data['nielsenOcrEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('reportsConfiguration')) {
                obj['reportsConfiguration'] = ReportsConfiguration.constructFromObject(data['reportsConfiguration']);
            }
            if (data.hasOwnProperty('shareReportsWithTwitter')) {
                obj['shareReportsWithTwitter'] = ApiClient.convertToType(data['shareReportsWithTwitter'], 'Boolean');
            }
            if (data.hasOwnProperty('teaserSizeLimit')) {
                obj['teaserSizeLimit'] = ApiClient.convertToType(data['teaserSizeLimit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Account</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Account</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['accountPermissionIds'])) {
            throw new Error("Expected the field `accountPermissionIds` to be an array in the JSON data but got " + data['accountPermissionIds']);
        }
        // ensure the json data is a string
        if (data['accountProfile'] && !(typeof data['accountProfile'] === 'string' || data['accountProfile'] instanceof String)) {
            throw new Error("Expected the field `accountProfile` to be a primitive type in the JSON string but got " + data['accountProfile']);
        }
        // ensure the json data is a string
        if (data['activeAdsLimitTier'] && !(typeof data['activeAdsLimitTier'] === 'string' || data['activeAdsLimitTier'] instanceof String)) {
            throw new Error("Expected the field `activeAdsLimitTier` to be a primitive type in the JSON string but got " + data['activeAdsLimitTier']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['availablePermissionIds'])) {
            throw new Error("Expected the field `availablePermissionIds` to be an array in the JSON data but got " + data['availablePermissionIds']);
        }
        // ensure the json data is a string
        if (data['countryId'] && !(typeof data['countryId'] === 'string' || data['countryId'] instanceof String)) {
            throw new Error("Expected the field `countryId` to be a primitive type in the JSON string but got " + data['countryId']);
        }
        // ensure the json data is a string
        if (data['currencyId'] && !(typeof data['currencyId'] === 'string' || data['currencyId'] instanceof String)) {
            throw new Error("Expected the field `currencyId` to be a primitive type in the JSON string but got " + data['currencyId']);
        }
        // ensure the json data is a string
        if (data['defaultCreativeSizeId'] && !(typeof data['defaultCreativeSizeId'] === 'string' || data['defaultCreativeSizeId'] instanceof String)) {
            throw new Error("Expected the field `defaultCreativeSizeId` to be a primitive type in the JSON string but got " + data['defaultCreativeSizeId']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
            throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
        }
        // ensure the json data is a string
        if (data['maximumImageSize'] && !(typeof data['maximumImageSize'] === 'string' || data['maximumImageSize'] instanceof String)) {
            throw new Error("Expected the field `maximumImageSize` to be a primitive type in the JSON string but got " + data['maximumImageSize']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `reportsConfiguration`
        if (data['reportsConfiguration']) { // data not null
          ReportsConfiguration.validateJSON(data['reportsConfiguration']);
        }
        // ensure the json data is a string
        if (data['teaserSizeLimit'] && !(typeof data['teaserSizeLimit'] === 'string' || data['teaserSizeLimit'] instanceof String)) {
            throw new Error("Expected the field `teaserSizeLimit` to be a primitive type in the JSON string but got " + data['teaserSizeLimit']);
        }

        return true;
    }


}



/**
 * Account permissions assigned to this account.
 * @member {Array.<String>} accountPermissionIds
 */
Account.prototype['accountPermissionIds'] = undefined;

/**
 * Profile for this account. This is a read-only field that can be left blank.
 * @member {module:model/Account.AccountProfileEnum} accountProfile
 */
Account.prototype['accountProfile'] = undefined;

/**
 * Whether this account is active.
 * @member {Boolean} active
 */
Account.prototype['active'] = undefined;

/**
 * Maximum number of active ads allowed for this account.
 * @member {module:model/Account.ActiveAdsLimitTierEnum} activeAdsLimitTier
 */
Account.prototype['activeAdsLimitTier'] = undefined;

/**
 * Whether to serve creatives with Active View tags. If disabled, viewability data will not be available for any impressions.
 * @member {Boolean} activeViewOptOut
 */
Account.prototype['activeViewOptOut'] = undefined;

/**
 * User role permissions available to the user roles of this account.
 * @member {Array.<String>} availablePermissionIds
 */
Account.prototype['availablePermissionIds'] = undefined;

/**
 * ID of the country associated with this account.
 * @member {String} countryId
 */
Account.prototype['countryId'] = undefined;

/**
 * ID of currency associated with this account. This is a required field. Acceptable values are: - \"1\" for USD - \"2\" for GBP - \"3\" for ESP - \"4\" for SEK - \"5\" for CAD - \"6\" for JPY - \"7\" for DEM - \"8\" for AUD - \"9\" for FRF - \"10\" for ITL - \"11\" for DKK - \"12\" for NOK - \"13\" for FIM - \"14\" for ZAR - \"15\" for IEP - \"16\" for NLG - \"17\" for EUR - \"18\" for KRW - \"19\" for TWD - \"20\" for SGD - \"21\" for CNY - \"22\" for HKD - \"23\" for NZD - \"24\" for MYR - \"25\" for BRL - \"26\" for PTE - \"28\" for CLP - \"29\" for TRY - \"30\" for ARS - \"31\" for PEN - \"32\" for ILS - \"33\" for CHF - \"34\" for VEF - \"35\" for COP - \"36\" for GTQ - \"37\" for PLN - \"39\" for INR - \"40\" for THB - \"41\" for IDR - \"42\" for CZK - \"43\" for RON - \"44\" for HUF - \"45\" for RUB - \"46\" for AED - \"47\" for BGN - \"48\" for HRK - \"49\" for MXN - \"50\" for NGN - \"51\" for EGP 
 * @member {String} currencyId
 */
Account.prototype['currencyId'] = undefined;

/**
 * Default placement dimensions for this account.
 * @member {String} defaultCreativeSizeId
 */
Account.prototype['defaultCreativeSizeId'] = undefined;

/**
 * Description of this account.
 * @member {String} description
 */
Account.prototype['description'] = undefined;

/**
 * ID of this account. This is a read-only, auto-generated field.
 * @member {String} id
 */
Account.prototype['id'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#account\".
 * @member {String} kind
 */
Account.prototype['kind'] = undefined;

/**
 * Locale of this account. Acceptable values are: - \"cs\" (Czech) - \"de\" (German) - \"en\" (English) - \"en-GB\" (English United Kingdom) - \"es\" (Spanish) - \"fr\" (French) - \"it\" (Italian) - \"ja\" (Japanese) - \"ko\" (Korean) - \"pl\" (Polish) - \"pt-BR\" (Portuguese Brazil) - \"ru\" (Russian) - \"sv\" (Swedish) - \"tr\" (Turkish) - \"zh-CN\" (Chinese Simplified) - \"zh-TW\" (Chinese Traditional) 
 * @member {String} locale
 */
Account.prototype['locale'] = undefined;

/**
 * Maximum image size allowed for this account, in kilobytes. Value must be greater than or equal to 1.
 * @member {String} maximumImageSize
 */
Account.prototype['maximumImageSize'] = undefined;

/**
 * Name of this account. This is a required field, and must be less than 128 characters long and be globally unique.
 * @member {String} name
 */
Account.prototype['name'] = undefined;

/**
 * Whether campaigns created in this account will be enabled for Nielsen OCR reach ratings by default.
 * @member {Boolean} nielsenOcrEnabled
 */
Account.prototype['nielsenOcrEnabled'] = undefined;

/**
 * @member {module:model/ReportsConfiguration} reportsConfiguration
 */
Account.prototype['reportsConfiguration'] = undefined;

/**
 * Share Path to Conversion reports with Twitter.
 * @member {Boolean} shareReportsWithTwitter
 */
Account.prototype['shareReportsWithTwitter'] = undefined;

/**
 * File size limit in kilobytes of Rich Media teaser creatives. Acceptable values are 1 to 10240, inclusive.
 * @member {String} teaserSizeLimit
 */
Account.prototype['teaserSizeLimit'] = undefined;





/**
 * Allowed values for the <code>accountProfile</code> property.
 * @enum {String}
 * @readonly
 */
Account['AccountProfileEnum'] = {

    /**
     * value: "ACCOUNT_PROFILE_BASIC"
     * @const
     */
    "BASIC": "ACCOUNT_PROFILE_BASIC",

    /**
     * value: "ACCOUNT_PROFILE_STANDARD"
     * @const
     */
    "STANDARD": "ACCOUNT_PROFILE_STANDARD"
};


/**
 * Allowed values for the <code>activeAdsLimitTier</code> property.
 * @enum {String}
 * @readonly
 */
Account['ActiveAdsLimitTierEnum'] = {

    /**
     * value: "ACTIVE_ADS_TIER_40K"
     * @const
     */
    "40K": "ACTIVE_ADS_TIER_40K",

    /**
     * value: "ACTIVE_ADS_TIER_75K"
     * @const
     */
    "75K": "ACTIVE_ADS_TIER_75K",

    /**
     * value: "ACTIVE_ADS_TIER_100K"
     * @const
     */
    "100K": "ACTIVE_ADS_TIER_100K",

    /**
     * value: "ACTIVE_ADS_TIER_200K"
     * @const
     */
    "200K": "ACTIVE_ADS_TIER_200K",

    /**
     * value: "ACTIVE_ADS_TIER_300K"
     * @const
     */
    "300K": "ACTIVE_ADS_TIER_300K",

    /**
     * value: "ACTIVE_ADS_TIER_500K"
     * @const
     */
    "500K": "ACTIVE_ADS_TIER_500K",

    /**
     * value: "ACTIVE_ADS_TIER_750K"
     * @const
     */
    "750K": "ACTIVE_ADS_TIER_750K",

    /**
     * value: "ACTIVE_ADS_TIER_1M"
     * @const
     */
    "1M": "ACTIVE_ADS_TIER_1M"
};



export default Account;

