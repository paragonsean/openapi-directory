/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Recipient model module.
 * @module model/Recipient
 * @version v3.3
 */
class Recipient {
    /**
     * Constructs a new <code>Recipient</code>.
     * Represents a recipient.
     * @alias module:model/Recipient
     */
    constructor() { 
        
        Recipient.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Recipient</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Recipient} obj Optional instance to populate.
     * @return {module:model/Recipient} The populated <code>Recipient</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Recipient();

            if (data.hasOwnProperty('deliveryType')) {
                obj['deliveryType'] = ApiClient.convertToType(data['deliveryType'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Recipient</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Recipient</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deliveryType'] && !(typeof data['deliveryType'] === 'string' || data['deliveryType'] instanceof String)) {
            throw new Error("Expected the field `deliveryType` to be a primitive type in the JSON string but got " + data['deliveryType']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * The delivery type for the recipient.
 * @member {module:model/Recipient.DeliveryTypeEnum} deliveryType
 */
Recipient.prototype['deliveryType'] = undefined;

/**
 * The email address of the recipient.
 * @member {String} email
 */
Recipient.prototype['email'] = undefined;

/**
 * The kind of resource this is, in this case dfareporting#recipient.
 * @member {String} kind
 */
Recipient.prototype['kind'] = undefined;





/**
 * Allowed values for the <code>deliveryType</code> property.
 * @enum {String}
 * @readonly
 */
Recipient['DeliveryTypeEnum'] = {

    /**
     * value: "LINK"
     * @const
     */
    "LINK": "LINK",

    /**
     * value: "ATTACHMENT"
     * @const
     */
    "ATTACHMENT": "ATTACHMENT"
};



export default Recipient;

