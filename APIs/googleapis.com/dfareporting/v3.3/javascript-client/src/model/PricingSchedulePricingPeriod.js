/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PricingSchedulePricingPeriod model module.
 * @module model/PricingSchedulePricingPeriod
 * @version v3.3
 */
class PricingSchedulePricingPeriod {
    /**
     * Constructs a new <code>PricingSchedulePricingPeriod</code>.
     * Pricing Period
     * @alias module:model/PricingSchedulePricingPeriod
     */
    constructor() { 
        
        PricingSchedulePricingPeriod.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PricingSchedulePricingPeriod</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PricingSchedulePricingPeriod} obj Optional instance to populate.
     * @return {module:model/PricingSchedulePricingPeriod} The populated <code>PricingSchedulePricingPeriod</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PricingSchedulePricingPeriod();

            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('pricingComment')) {
                obj['pricingComment'] = ApiClient.convertToType(data['pricingComment'], 'String');
            }
            if (data.hasOwnProperty('rateOrCostNanos')) {
                obj['rateOrCostNanos'] = ApiClient.convertToType(data['rateOrCostNanos'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('units')) {
                obj['units'] = ApiClient.convertToType(data['units'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PricingSchedulePricingPeriod</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PricingSchedulePricingPeriod</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['pricingComment'] && !(typeof data['pricingComment'] === 'string' || data['pricingComment'] instanceof String)) {
            throw new Error("Expected the field `pricingComment` to be a primitive type in the JSON string but got " + data['pricingComment']);
        }
        // ensure the json data is a string
        if (data['rateOrCostNanos'] && !(typeof data['rateOrCostNanos'] === 'string' || data['rateOrCostNanos'] instanceof String)) {
            throw new Error("Expected the field `rateOrCostNanos` to be a primitive type in the JSON string but got " + data['rateOrCostNanos']);
        }
        // ensure the json data is a string
        if (data['units'] && !(typeof data['units'] === 'string' || data['units'] instanceof String)) {
            throw new Error("Expected the field `units` to be a primitive type in the JSON string but got " + data['units']);
        }

        return true;
    }


}



/**
 * @member {Date} endDate
 */
PricingSchedulePricingPeriod.prototype['endDate'] = undefined;

/**
 * Comments for this pricing period.
 * @member {String} pricingComment
 */
PricingSchedulePricingPeriod.prototype['pricingComment'] = undefined;

/**
 * Rate or cost of this pricing period in nanos (i.e., multipled by 1000000000). Acceptable values are 0 to 1000000000000000000, inclusive.
 * @member {String} rateOrCostNanos
 */
PricingSchedulePricingPeriod.prototype['rateOrCostNanos'] = undefined;

/**
 * @member {Date} startDate
 */
PricingSchedulePricingPeriod.prototype['startDate'] = undefined;

/**
 * Units of this pricing period. Acceptable values are 0 to 10000000000, inclusive.
 * @member {String} units
 */
PricingSchedulePricingPeriod.prototype['units'] = undefined;






export default PricingSchedulePricingPeriod;

