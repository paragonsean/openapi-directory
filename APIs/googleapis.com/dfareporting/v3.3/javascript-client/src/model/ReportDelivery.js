/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Recipient from './Recipient';

/**
 * The ReportDelivery model module.
 * @module model/ReportDelivery
 * @version v3.3
 */
class ReportDelivery {
    /**
     * Constructs a new <code>ReportDelivery</code>.
     * The report&#39;s email delivery settings.
     * @alias module:model/ReportDelivery
     */
    constructor() { 
        
        ReportDelivery.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportDelivery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportDelivery} obj Optional instance to populate.
     * @return {module:model/ReportDelivery} The populated <code>ReportDelivery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportDelivery();

            if (data.hasOwnProperty('emailOwner')) {
                obj['emailOwner'] = ApiClient.convertToType(data['emailOwner'], 'Boolean');
            }
            if (data.hasOwnProperty('emailOwnerDeliveryType')) {
                obj['emailOwnerDeliveryType'] = ApiClient.convertToType(data['emailOwnerDeliveryType'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('recipients')) {
                obj['recipients'] = ApiClient.convertToType(data['recipients'], [Recipient]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportDelivery</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportDelivery</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['emailOwnerDeliveryType'] && !(typeof data['emailOwnerDeliveryType'] === 'string' || data['emailOwnerDeliveryType'] instanceof String)) {
            throw new Error("Expected the field `emailOwnerDeliveryType` to be a primitive type in the JSON string but got " + data['emailOwnerDeliveryType']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        if (data['recipients']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['recipients'])) {
                throw new Error("Expected the field `recipients` to be an array in the JSON data but got " + data['recipients']);
            }
            // validate the optional field `recipients` (array)
            for (const item of data['recipients']) {
                Recipient.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Whether the report should be emailed to the report owner.
 * @member {Boolean} emailOwner
 */
ReportDelivery.prototype['emailOwner'] = undefined;

/**
 * The type of delivery for the owner to receive, if enabled.
 * @member {module:model/ReportDelivery.EmailOwnerDeliveryTypeEnum} emailOwnerDeliveryType
 */
ReportDelivery.prototype['emailOwnerDeliveryType'] = undefined;

/**
 * The message to be sent with each email.
 * @member {String} message
 */
ReportDelivery.prototype['message'] = undefined;

/**
 * The list of recipients to which to email the report.
 * @member {Array.<module:model/Recipient>} recipients
 */
ReportDelivery.prototype['recipients'] = undefined;





/**
 * Allowed values for the <code>emailOwnerDeliveryType</code> property.
 * @enum {String}
 * @readonly
 */
ReportDelivery['EmailOwnerDeliveryTypeEnum'] = {

    /**
     * value: "LINK"
     * @const
     */
    "LINK": "LINK",

    /**
     * value: "ATTACHMENT"
     * @const
     */
    "ATTACHMENT": "ATTACHMENT"
};



export default ReportDelivery;

