/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TargetWindow model module.
 * @module model/TargetWindow
 * @version v3.3
 */
class TargetWindow {
    /**
     * Constructs a new <code>TargetWindow</code>.
     * Target Window.
     * @alias module:model/TargetWindow
     */
    constructor() { 
        
        TargetWindow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TargetWindow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TargetWindow} obj Optional instance to populate.
     * @return {module:model/TargetWindow} The populated <code>TargetWindow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TargetWindow();

            if (data.hasOwnProperty('customHtml')) {
                obj['customHtml'] = ApiClient.convertToType(data['customHtml'], 'String');
            }
            if (data.hasOwnProperty('targetWindowOption')) {
                obj['targetWindowOption'] = ApiClient.convertToType(data['targetWindowOption'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TargetWindow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TargetWindow</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customHtml'] && !(typeof data['customHtml'] === 'string' || data['customHtml'] instanceof String)) {
            throw new Error("Expected the field `customHtml` to be a primitive type in the JSON string but got " + data['customHtml']);
        }
        // ensure the json data is a string
        if (data['targetWindowOption'] && !(typeof data['targetWindowOption'] === 'string' || data['targetWindowOption'] instanceof String)) {
            throw new Error("Expected the field `targetWindowOption` to be a primitive type in the JSON string but got " + data['targetWindowOption']);
        }

        return true;
    }


}



/**
 * User-entered value.
 * @member {String} customHtml
 */
TargetWindow.prototype['customHtml'] = undefined;

/**
 * Type of browser window for which the backup image of the flash creative can be displayed.
 * @member {module:model/TargetWindow.TargetWindowOptionEnum} targetWindowOption
 */
TargetWindow.prototype['targetWindowOption'] = undefined;





/**
 * Allowed values for the <code>targetWindowOption</code> property.
 * @enum {String}
 * @readonly
 */
TargetWindow['TargetWindowOptionEnum'] = {

    /**
     * value: "NEW_WINDOW"
     * @const
     */
    "NEW_WINDOW": "NEW_WINDOW",

    /**
     * value: "CURRENT_WINDOW"
     * @const
     */
    "CURRENT_WINDOW": "CURRENT_WINDOW",

    /**
     * value: "CUSTOM"
     * @const
     */
    "CUSTOM": "CUSTOM"
};



export default TargetWindow;

