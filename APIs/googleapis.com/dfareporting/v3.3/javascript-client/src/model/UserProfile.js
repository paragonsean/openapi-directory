/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserProfile model module.
 * @module model/UserProfile
 * @version v3.3
 */
class UserProfile {
    /**
     * Constructs a new <code>UserProfile</code>.
     * A UserProfile resource lets you list all DFA user profiles that are associated with a Google user account. The profile_id needs to be specified in other API requests. 
     * @alias module:model/UserProfile
     */
    constructor() { 
        
        UserProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserProfile} obj Optional instance to populate.
     * @return {module:model/UserProfile} The populated <code>UserProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserProfile();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('accountName')) {
                obj['accountName'] = ApiClient.convertToType(data['accountName'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('profileId')) {
                obj['profileId'] = ApiClient.convertToType(data['profileId'], 'String');
            }
            if (data.hasOwnProperty('subAccountId')) {
                obj['subAccountId'] = ApiClient.convertToType(data['subAccountId'], 'String');
            }
            if (data.hasOwnProperty('subAccountName')) {
                obj['subAccountName'] = ApiClient.convertToType(data['subAccountName'], 'String');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserProfile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['accountName'] && !(typeof data['accountName'] === 'string' || data['accountName'] instanceof String)) {
            throw new Error("Expected the field `accountName` to be a primitive type in the JSON string but got " + data['accountName']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['profileId'] && !(typeof data['profileId'] === 'string' || data['profileId'] instanceof String)) {
            throw new Error("Expected the field `profileId` to be a primitive type in the JSON string but got " + data['profileId']);
        }
        // ensure the json data is a string
        if (data['subAccountId'] && !(typeof data['subAccountId'] === 'string' || data['subAccountId'] instanceof String)) {
            throw new Error("Expected the field `subAccountId` to be a primitive type in the JSON string but got " + data['subAccountId']);
        }
        // ensure the json data is a string
        if (data['subAccountName'] && !(typeof data['subAccountName'] === 'string' || data['subAccountName'] instanceof String)) {
            throw new Error("Expected the field `subAccountName` to be a primitive type in the JSON string but got " + data['subAccountName']);
        }
        // ensure the json data is a string
        if (data['userName'] && !(typeof data['userName'] === 'string' || data['userName'] instanceof String)) {
            throw new Error("Expected the field `userName` to be a primitive type in the JSON string but got " + data['userName']);
        }

        return true;
    }


}



/**
 * The account ID to which this profile belongs.
 * @member {String} accountId
 */
UserProfile.prototype['accountId'] = undefined;

/**
 * The account name this profile belongs to.
 * @member {String} accountName
 */
UserProfile.prototype['accountName'] = undefined;

/**
 * Etag of this resource.
 * @member {String} etag
 */
UserProfile.prototype['etag'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userProfile\".
 * @member {String} kind
 */
UserProfile.prototype['kind'] = undefined;

/**
 * The unique ID of the user profile.
 * @member {String} profileId
 */
UserProfile.prototype['profileId'] = undefined;

/**
 * The sub account ID this profile belongs to if applicable.
 * @member {String} subAccountId
 */
UserProfile.prototype['subAccountId'] = undefined;

/**
 * The sub account name this profile belongs to if applicable.
 * @member {String} subAccountName
 */
UserProfile.prototype['subAccountName'] = undefined;

/**
 * The user name.
 * @member {String} userName
 */
UserProfile.prototype['userName'] = undefined;






export default UserProfile;

