/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdSlot model module.
 * @module model/AdSlot
 * @version v3.3
 */
class AdSlot {
    /**
     * Constructs a new <code>AdSlot</code>.
     * Ad Slot
     * @alias module:model/AdSlot
     */
    constructor() { 
        
        AdSlot.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdSlot</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdSlot} obj Optional instance to populate.
     * @return {module:model/AdSlot} The populated <code>AdSlot</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdSlot();

            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('compatibility')) {
                obj['compatibility'] = ApiClient.convertToType(data['compatibility'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'String');
            }
            if (data.hasOwnProperty('linkedPlacementId')) {
                obj['linkedPlacementId'] = ApiClient.convertToType(data['linkedPlacementId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('paymentSourceType')) {
                obj['paymentSourceType'] = ApiClient.convertToType(data['paymentSourceType'], 'String');
            }
            if (data.hasOwnProperty('primary')) {
                obj['primary'] = ApiClient.convertToType(data['primary'], 'Boolean');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdSlot</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdSlot</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['compatibility'] && !(typeof data['compatibility'] === 'string' || data['compatibility'] instanceof String)) {
            throw new Error("Expected the field `compatibility` to be a primitive type in the JSON string but got " + data['compatibility']);
        }
        // ensure the json data is a string
        if (data['height'] && !(typeof data['height'] === 'string' || data['height'] instanceof String)) {
            throw new Error("Expected the field `height` to be a primitive type in the JSON string but got " + data['height']);
        }
        // ensure the json data is a string
        if (data['linkedPlacementId'] && !(typeof data['linkedPlacementId'] === 'string' || data['linkedPlacementId'] instanceof String)) {
            throw new Error("Expected the field `linkedPlacementId` to be a primitive type in the JSON string but got " + data['linkedPlacementId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['paymentSourceType'] && !(typeof data['paymentSourceType'] === 'string' || data['paymentSourceType'] instanceof String)) {
            throw new Error("Expected the field `paymentSourceType` to be a primitive type in the JSON string but got " + data['paymentSourceType']);
        }
        // ensure the json data is a string
        if (data['width'] && !(typeof data['width'] === 'string' || data['width'] instanceof String)) {
            throw new Error("Expected the field `width` to be a primitive type in the JSON string but got " + data['width']);
        }

        return true;
    }


}



/**
 * Comment for this ad slot.
 * @member {String} comment
 */
AdSlot.prototype['comment'] = undefined;

/**
 * Ad slot compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop, mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.
 * @member {module:model/AdSlot.CompatibilityEnum} compatibility
 */
AdSlot.prototype['compatibility'] = undefined;

/**
 * Height of this ad slot.
 * @member {String} height
 */
AdSlot.prototype['height'] = undefined;

/**
 * ID of the placement from an external platform that is linked to this ad slot.
 * @member {String} linkedPlacementId
 */
AdSlot.prototype['linkedPlacementId'] = undefined;

/**
 * Name of this ad slot.
 * @member {String} name
 */
AdSlot.prototype['name'] = undefined;

/**
 * Payment source type of this ad slot.
 * @member {module:model/AdSlot.PaymentSourceTypeEnum} paymentSourceType
 */
AdSlot.prototype['paymentSourceType'] = undefined;

/**
 * Primary ad slot of a roadblock inventory item.
 * @member {Boolean} primary
 */
AdSlot.prototype['primary'] = undefined;

/**
 * Width of this ad slot.
 * @member {String} width
 */
AdSlot.prototype['width'] = undefined;





/**
 * Allowed values for the <code>compatibility</code> property.
 * @enum {String}
 * @readonly
 */
AdSlot['CompatibilityEnum'] = {

    /**
     * value: "DISPLAY"
     * @const
     */
    "DISPLAY": "DISPLAY",

    /**
     * value: "DISPLAY_INTERSTITIAL"
     * @const
     */
    "DISPLAY_INTERSTITIAL": "DISPLAY_INTERSTITIAL",

    /**
     * value: "APP"
     * @const
     */
    "APP": "APP",

    /**
     * value: "APP_INTERSTITIAL"
     * @const
     */
    "APP_INTERSTITIAL": "APP_INTERSTITIAL",

    /**
     * value: "IN_STREAM_VIDEO"
     * @const
     */
    "IN_STREAM_VIDEO": "IN_STREAM_VIDEO",

    /**
     * value: "IN_STREAM_AUDIO"
     * @const
     */
    "IN_STREAM_AUDIO": "IN_STREAM_AUDIO"
};


/**
 * Allowed values for the <code>paymentSourceType</code> property.
 * @enum {String}
 * @readonly
 */
AdSlot['PaymentSourceTypeEnum'] = {

    /**
     * value: "PLANNING_PAYMENT_SOURCE_TYPE_AGENCY_PAID"
     * @const
     */
    "AGENCY_PAID": "PLANNING_PAYMENT_SOURCE_TYPE_AGENCY_PAID",

    /**
     * value: "PLANNING_PAYMENT_SOURCE_TYPE_PUBLISHER_PAID"
     * @const
     */
    "PUBLISHER_PAID": "PLANNING_PAYMENT_SOURCE_TYPE_PUBLISHER_PAID"
};



export default AdSlot;

