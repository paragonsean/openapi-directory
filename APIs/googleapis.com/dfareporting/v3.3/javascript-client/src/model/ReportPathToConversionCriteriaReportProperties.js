/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReportPathToConversionCriteriaReportProperties model module.
 * @module model/ReportPathToConversionCriteriaReportProperties
 * @version v3.3
 */
class ReportPathToConversionCriteriaReportProperties {
    /**
     * Constructs a new <code>ReportPathToConversionCriteriaReportProperties</code>.
     * The properties of the report.
     * @alias module:model/ReportPathToConversionCriteriaReportProperties
     */
    constructor() { 
        
        ReportPathToConversionCriteriaReportProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportPathToConversionCriteriaReportProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportPathToConversionCriteriaReportProperties} obj Optional instance to populate.
     * @return {module:model/ReportPathToConversionCriteriaReportProperties} The populated <code>ReportPathToConversionCriteriaReportProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportPathToConversionCriteriaReportProperties();

            if (data.hasOwnProperty('clicksLookbackWindow')) {
                obj['clicksLookbackWindow'] = ApiClient.convertToType(data['clicksLookbackWindow'], 'Number');
            }
            if (data.hasOwnProperty('impressionsLookbackWindow')) {
                obj['impressionsLookbackWindow'] = ApiClient.convertToType(data['impressionsLookbackWindow'], 'Number');
            }
            if (data.hasOwnProperty('includeAttributedIPConversions')) {
                obj['includeAttributedIPConversions'] = ApiClient.convertToType(data['includeAttributedIPConversions'], 'Boolean');
            }
            if (data.hasOwnProperty('includeUnattributedCookieConversions')) {
                obj['includeUnattributedCookieConversions'] = ApiClient.convertToType(data['includeUnattributedCookieConversions'], 'Boolean');
            }
            if (data.hasOwnProperty('includeUnattributedIPConversions')) {
                obj['includeUnattributedIPConversions'] = ApiClient.convertToType(data['includeUnattributedIPConversions'], 'Boolean');
            }
            if (data.hasOwnProperty('maximumClickInteractions')) {
                obj['maximumClickInteractions'] = ApiClient.convertToType(data['maximumClickInteractions'], 'Number');
            }
            if (data.hasOwnProperty('maximumImpressionInteractions')) {
                obj['maximumImpressionInteractions'] = ApiClient.convertToType(data['maximumImpressionInteractions'], 'Number');
            }
            if (data.hasOwnProperty('maximumInteractionGap')) {
                obj['maximumInteractionGap'] = ApiClient.convertToType(data['maximumInteractionGap'], 'Number');
            }
            if (data.hasOwnProperty('pivotOnInteractionPath')) {
                obj['pivotOnInteractionPath'] = ApiClient.convertToType(data['pivotOnInteractionPath'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportPathToConversionCriteriaReportProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportPathToConversionCriteriaReportProperties</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * CM360 checks to see if a click interaction occurred within the specified period of time before a conversion. By default the value is pulled from Floodlight or you can manually enter a custom value. Valid values: 1-90.
 * @member {Number} clicksLookbackWindow
 */
ReportPathToConversionCriteriaReportProperties.prototype['clicksLookbackWindow'] = undefined;

/**
 * CM360 checks to see if an impression interaction occurred within the specified period of time before a conversion. By default the value is pulled from Floodlight or you can manually enter a custom value. Valid values: 1-90.
 * @member {Number} impressionsLookbackWindow
 */
ReportPathToConversionCriteriaReportProperties.prototype['impressionsLookbackWindow'] = undefined;

/**
 * Deprecated: has no effect.
 * @member {Boolean} includeAttributedIPConversions
 */
ReportPathToConversionCriteriaReportProperties.prototype['includeAttributedIPConversions'] = undefined;

/**
 * Include conversions of users with a DoubleClick cookie but without an exposure. That means the user did not click or see an ad from the advertiser within the Floodlight group, or that the interaction happened outside the lookback window.
 * @member {Boolean} includeUnattributedCookieConversions
 */
ReportPathToConversionCriteriaReportProperties.prototype['includeUnattributedCookieConversions'] = undefined;

/**
 * Include conversions that have no associated cookies and no exposures. Itâ€™s therefore impossible to know how the user was exposed to your ads during the lookback window prior to a conversion.
 * @member {Boolean} includeUnattributedIPConversions
 */
ReportPathToConversionCriteriaReportProperties.prototype['includeUnattributedIPConversions'] = undefined;

/**
 * The maximum number of click interactions to include in the report. Advertisers currently paying for E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your network is paying for E2C, you can have up to 5 total exposures per report.
 * @member {Number} maximumClickInteractions
 */
ReportPathToConversionCriteriaReportProperties.prototype['maximumClickInteractions'] = undefined;

/**
 * The maximum number of click interactions to include in the report. Advertisers currently paying for E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your network is paying for E2C, you can have up to 5 total exposures per report.
 * @member {Number} maximumImpressionInteractions
 */
ReportPathToConversionCriteriaReportProperties.prototype['maximumImpressionInteractions'] = undefined;

/**
 * The maximum amount of time that can take place between interactions (clicks or impressions) by the same user. Valid values: 1-90.
 * @member {Number} maximumInteractionGap
 */
ReportPathToConversionCriteriaReportProperties.prototype['maximumInteractionGap'] = undefined;

/**
 * Enable pivoting on interaction path.
 * @member {Boolean} pivotOnInteractionPath
 */
ReportPathToConversionCriteriaReportProperties.prototype['pivotOnInteractionPath'] = undefined;






export default ReportPathToConversionCriteriaReportProperties;

