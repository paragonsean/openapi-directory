/*
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DimensionValue;
import org.openapitools.client.model.LastModifiedInfo;
import org.openapitools.client.model.PricingSchedule;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains properties of a package or roadblock.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:31:12.851901-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PlacementGroup {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_ADVERTISER_ID_DIMENSION_VALUE = "advertiserIdDimensionValue";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID_DIMENSION_VALUE)
  private DimensionValue advertiserIdDimensionValue;

  public static final String SERIALIZED_NAME_ARCHIVED = "archived";
  @SerializedName(SERIALIZED_NAME_ARCHIVED)
  private Boolean archived;

  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "campaignId";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  private String campaignId;

  public static final String SERIALIZED_NAME_CAMPAIGN_ID_DIMENSION_VALUE = "campaignIdDimensionValue";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID_DIMENSION_VALUE)
  private DimensionValue campaignIdDimensionValue;

  public static final String SERIALIZED_NAME_CHILD_PLACEMENT_IDS = "childPlacementIds";
  @SerializedName(SERIALIZED_NAME_CHILD_PLACEMENT_IDS)
  private List<String> childPlacementIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_CONTENT_CATEGORY_ID = "contentCategoryId";
  @SerializedName(SERIALIZED_NAME_CONTENT_CATEGORY_ID)
  private String contentCategoryId;

  public static final String SERIALIZED_NAME_CREATE_INFO = "createInfo";
  @SerializedName(SERIALIZED_NAME_CREATE_INFO)
  private LastModifiedInfo createInfo;

  public static final String SERIALIZED_NAME_DIRECTORY_SITE_ID = "directorySiteId";
  @SerializedName(SERIALIZED_NAME_DIRECTORY_SITE_ID)
  private String directorySiteId;

  public static final String SERIALIZED_NAME_DIRECTORY_SITE_ID_DIMENSION_VALUE = "directorySiteIdDimensionValue";
  @SerializedName(SERIALIZED_NAME_DIRECTORY_SITE_ID_DIMENSION_VALUE)
  private DimensionValue directorySiteIdDimensionValue;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "externalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ID_DIMENSION_VALUE = "idDimensionValue";
  @SerializedName(SERIALIZED_NAME_ID_DIMENSION_VALUE)
  private DimensionValue idDimensionValue;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_INFO = "lastModifiedInfo";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_INFO)
  private LastModifiedInfo lastModifiedInfo;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Type of this placement group. A package is a simple group of placements that acts as a single pricing point for a group of tags. A roadblock is a group of placements that not only acts as a single pricing point, but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned placements to be marked as primary for reporting. This field is required on insertion.
   */
  @JsonAdapter(PlacementGroupTypeEnum.Adapter.class)
  public enum PlacementGroupTypeEnum {
    PACKAGE("PLACEMENT_PACKAGE"),
    
    ROADBLOCK("PLACEMENT_ROADBLOCK");

    private String value;

    PlacementGroupTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PlacementGroupTypeEnum fromValue(String value) {
      for (PlacementGroupTypeEnum b : PlacementGroupTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PlacementGroupTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PlacementGroupTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PlacementGroupTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PlacementGroupTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PlacementGroupTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PLACEMENT_GROUP_TYPE = "placementGroupType";
  @SerializedName(SERIALIZED_NAME_PLACEMENT_GROUP_TYPE)
  private PlacementGroupTypeEnum placementGroupType;

  public static final String SERIALIZED_NAME_PLACEMENT_STRATEGY_ID = "placementStrategyId";
  @SerializedName(SERIALIZED_NAME_PLACEMENT_STRATEGY_ID)
  private String placementStrategyId;

  public static final String SERIALIZED_NAME_PRICING_SCHEDULE = "pricingSchedule";
  @SerializedName(SERIALIZED_NAME_PRICING_SCHEDULE)
  private PricingSchedule pricingSchedule;

  public static final String SERIALIZED_NAME_PRIMARY_PLACEMENT_ID = "primaryPlacementId";
  @SerializedName(SERIALIZED_NAME_PRIMARY_PLACEMENT_ID)
  private String primaryPlacementId;

  public static final String SERIALIZED_NAME_PRIMARY_PLACEMENT_ID_DIMENSION_VALUE = "primaryPlacementIdDimensionValue";
  @SerializedName(SERIALIZED_NAME_PRIMARY_PLACEMENT_ID_DIMENSION_VALUE)
  private DimensionValue primaryPlacementIdDimensionValue;

  public static final String SERIALIZED_NAME_SITE_ID = "siteId";
  @SerializedName(SERIALIZED_NAME_SITE_ID)
  private String siteId;

  public static final String SERIALIZED_NAME_SITE_ID_DIMENSION_VALUE = "siteIdDimensionValue";
  @SerializedName(SERIALIZED_NAME_SITE_ID_DIMENSION_VALUE)
  private DimensionValue siteIdDimensionValue;

  public static final String SERIALIZED_NAME_SUBACCOUNT_ID = "subaccountId";
  @SerializedName(SERIALIZED_NAME_SUBACCOUNT_ID)
  private String subaccountId;

  public PlacementGroup() {
  }

  public PlacementGroup accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Account ID of this placement group. This is a read-only field that can be left blank.
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public PlacementGroup advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * Advertiser ID of this placement group. This is a required field on insertion.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public PlacementGroup advertiserIdDimensionValue(DimensionValue advertiserIdDimensionValue) {
    this.advertiserIdDimensionValue = advertiserIdDimensionValue;
    return this;
  }

  /**
   * Get advertiserIdDimensionValue
   * @return advertiserIdDimensionValue
   */
  @javax.annotation.Nullable
  public DimensionValue getAdvertiserIdDimensionValue() {
    return advertiserIdDimensionValue;
  }

  public void setAdvertiserIdDimensionValue(DimensionValue advertiserIdDimensionValue) {
    this.advertiserIdDimensionValue = advertiserIdDimensionValue;
  }


  public PlacementGroup archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

  /**
   * Whether this placement group is archived.
   * @return archived
   */
  @javax.annotation.Nullable
  public Boolean getArchived() {
    return archived;
  }

  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  public PlacementGroup campaignId(String campaignId) {
    this.campaignId = campaignId;
    return this;
  }

  /**
   * Campaign ID of this placement group. This field is required on insertion.
   * @return campaignId
   */
  @javax.annotation.Nullable
  public String getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(String campaignId) {
    this.campaignId = campaignId;
  }


  public PlacementGroup campaignIdDimensionValue(DimensionValue campaignIdDimensionValue) {
    this.campaignIdDimensionValue = campaignIdDimensionValue;
    return this;
  }

  /**
   * Get campaignIdDimensionValue
   * @return campaignIdDimensionValue
   */
  @javax.annotation.Nullable
  public DimensionValue getCampaignIdDimensionValue() {
    return campaignIdDimensionValue;
  }

  public void setCampaignIdDimensionValue(DimensionValue campaignIdDimensionValue) {
    this.campaignIdDimensionValue = campaignIdDimensionValue;
  }


  public PlacementGroup childPlacementIds(List<String> childPlacementIds) {
    this.childPlacementIds = childPlacementIds;
    return this;
  }

  public PlacementGroup addChildPlacementIdsItem(String childPlacementIdsItem) {
    if (this.childPlacementIds == null) {
      this.childPlacementIds = new ArrayList<>();
    }
    this.childPlacementIds.add(childPlacementIdsItem);
    return this;
  }

  /**
   * IDs of placements which are assigned to this placement group. This is a read-only, auto-generated field.
   * @return childPlacementIds
   */
  @javax.annotation.Nullable
  public List<String> getChildPlacementIds() {
    return childPlacementIds;
  }

  public void setChildPlacementIds(List<String> childPlacementIds) {
    this.childPlacementIds = childPlacementIds;
  }


  public PlacementGroup comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Comments for this placement group.
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public PlacementGroup contentCategoryId(String contentCategoryId) {
    this.contentCategoryId = contentCategoryId;
    return this;
  }

  /**
   * ID of the content category assigned to this placement group.
   * @return contentCategoryId
   */
  @javax.annotation.Nullable
  public String getContentCategoryId() {
    return contentCategoryId;
  }

  public void setContentCategoryId(String contentCategoryId) {
    this.contentCategoryId = contentCategoryId;
  }


  public PlacementGroup createInfo(LastModifiedInfo createInfo) {
    this.createInfo = createInfo;
    return this;
  }

  /**
   * Get createInfo
   * @return createInfo
   */
  @javax.annotation.Nullable
  public LastModifiedInfo getCreateInfo() {
    return createInfo;
  }

  public void setCreateInfo(LastModifiedInfo createInfo) {
    this.createInfo = createInfo;
  }


  public PlacementGroup directorySiteId(String directorySiteId) {
    this.directorySiteId = directorySiteId;
    return this;
  }

  /**
   * Directory site ID associated with this placement group. On insert, you must set either this field or the site_id field to specify the site associated with this placement group. This is a required field that is read-only after insertion.
   * @return directorySiteId
   */
  @javax.annotation.Nullable
  public String getDirectorySiteId() {
    return directorySiteId;
  }

  public void setDirectorySiteId(String directorySiteId) {
    this.directorySiteId = directorySiteId;
  }


  public PlacementGroup directorySiteIdDimensionValue(DimensionValue directorySiteIdDimensionValue) {
    this.directorySiteIdDimensionValue = directorySiteIdDimensionValue;
    return this;
  }

  /**
   * Get directorySiteIdDimensionValue
   * @return directorySiteIdDimensionValue
   */
  @javax.annotation.Nullable
  public DimensionValue getDirectorySiteIdDimensionValue() {
    return directorySiteIdDimensionValue;
  }

  public void setDirectorySiteIdDimensionValue(DimensionValue directorySiteIdDimensionValue) {
    this.directorySiteIdDimensionValue = directorySiteIdDimensionValue;
  }


  public PlacementGroup externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

  /**
   * External ID for this placement.
   * @return externalId
   */
  @javax.annotation.Nullable
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public PlacementGroup id(String id) {
    this.id = id;
    return this;
  }

  /**
   * ID of this placement group. This is a read-only, auto-generated field.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public PlacementGroup idDimensionValue(DimensionValue idDimensionValue) {
    this.idDimensionValue = idDimensionValue;
    return this;
  }

  /**
   * Get idDimensionValue
   * @return idDimensionValue
   */
  @javax.annotation.Nullable
  public DimensionValue getIdDimensionValue() {
    return idDimensionValue;
  }

  public void setIdDimensionValue(DimensionValue idDimensionValue) {
    this.idDimensionValue = idDimensionValue;
  }


  public PlacementGroup kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;dfareporting#placementGroup\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public PlacementGroup lastModifiedInfo(LastModifiedInfo lastModifiedInfo) {
    this.lastModifiedInfo = lastModifiedInfo;
    return this;
  }

  /**
   * Get lastModifiedInfo
   * @return lastModifiedInfo
   */
  @javax.annotation.Nullable
  public LastModifiedInfo getLastModifiedInfo() {
    return lastModifiedInfo;
  }

  public void setLastModifiedInfo(LastModifiedInfo lastModifiedInfo) {
    this.lastModifiedInfo = lastModifiedInfo;
  }


  public PlacementGroup name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of this placement group. This is a required field and must be less than 256 characters long.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public PlacementGroup placementGroupType(PlacementGroupTypeEnum placementGroupType) {
    this.placementGroupType = placementGroupType;
    return this;
  }

  /**
   * Type of this placement group. A package is a simple group of placements that acts as a single pricing point for a group of tags. A roadblock is a group of placements that not only acts as a single pricing point, but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned placements to be marked as primary for reporting. This field is required on insertion.
   * @return placementGroupType
   */
  @javax.annotation.Nullable
  public PlacementGroupTypeEnum getPlacementGroupType() {
    return placementGroupType;
  }

  public void setPlacementGroupType(PlacementGroupTypeEnum placementGroupType) {
    this.placementGroupType = placementGroupType;
  }


  public PlacementGroup placementStrategyId(String placementStrategyId) {
    this.placementStrategyId = placementStrategyId;
    return this;
  }

  /**
   * ID of the placement strategy assigned to this placement group.
   * @return placementStrategyId
   */
  @javax.annotation.Nullable
  public String getPlacementStrategyId() {
    return placementStrategyId;
  }

  public void setPlacementStrategyId(String placementStrategyId) {
    this.placementStrategyId = placementStrategyId;
  }


  public PlacementGroup pricingSchedule(PricingSchedule pricingSchedule) {
    this.pricingSchedule = pricingSchedule;
    return this;
  }

  /**
   * Get pricingSchedule
   * @return pricingSchedule
   */
  @javax.annotation.Nullable
  public PricingSchedule getPricingSchedule() {
    return pricingSchedule;
  }

  public void setPricingSchedule(PricingSchedule pricingSchedule) {
    this.pricingSchedule = pricingSchedule;
  }


  public PlacementGroup primaryPlacementId(String primaryPlacementId) {
    this.primaryPlacementId = primaryPlacementId;
    return this;
  }

  /**
   * ID of the primary placement, used to calculate the media cost of a roadblock (placement group). Modifying this field will automatically modify the primary field on all affected roadblock child placements.
   * @return primaryPlacementId
   */
  @javax.annotation.Nullable
  public String getPrimaryPlacementId() {
    return primaryPlacementId;
  }

  public void setPrimaryPlacementId(String primaryPlacementId) {
    this.primaryPlacementId = primaryPlacementId;
  }


  public PlacementGroup primaryPlacementIdDimensionValue(DimensionValue primaryPlacementIdDimensionValue) {
    this.primaryPlacementIdDimensionValue = primaryPlacementIdDimensionValue;
    return this;
  }

  /**
   * Get primaryPlacementIdDimensionValue
   * @return primaryPlacementIdDimensionValue
   */
  @javax.annotation.Nullable
  public DimensionValue getPrimaryPlacementIdDimensionValue() {
    return primaryPlacementIdDimensionValue;
  }

  public void setPrimaryPlacementIdDimensionValue(DimensionValue primaryPlacementIdDimensionValue) {
    this.primaryPlacementIdDimensionValue = primaryPlacementIdDimensionValue;
  }


  public PlacementGroup siteId(String siteId) {
    this.siteId = siteId;
    return this;
  }

  /**
   * Site ID associated with this placement group. On insert, you must set either this field or the directorySiteId field to specify the site associated with this placement group. This is a required field that is read-only after insertion.
   * @return siteId
   */
  @javax.annotation.Nullable
  public String getSiteId() {
    return siteId;
  }

  public void setSiteId(String siteId) {
    this.siteId = siteId;
  }


  public PlacementGroup siteIdDimensionValue(DimensionValue siteIdDimensionValue) {
    this.siteIdDimensionValue = siteIdDimensionValue;
    return this;
  }

  /**
   * Get siteIdDimensionValue
   * @return siteIdDimensionValue
   */
  @javax.annotation.Nullable
  public DimensionValue getSiteIdDimensionValue() {
    return siteIdDimensionValue;
  }

  public void setSiteIdDimensionValue(DimensionValue siteIdDimensionValue) {
    this.siteIdDimensionValue = siteIdDimensionValue;
  }


  public PlacementGroup subaccountId(String subaccountId) {
    this.subaccountId = subaccountId;
    return this;
  }

  /**
   * Subaccount ID of this placement group. This is a read-only field that can be left blank.
   * @return subaccountId
   */
  @javax.annotation.Nullable
  public String getSubaccountId() {
    return subaccountId;
  }

  public void setSubaccountId(String subaccountId) {
    this.subaccountId = subaccountId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlacementGroup placementGroup = (PlacementGroup) o;
    return Objects.equals(this.accountId, placementGroup.accountId) &&
        Objects.equals(this.advertiserId, placementGroup.advertiserId) &&
        Objects.equals(this.advertiserIdDimensionValue, placementGroup.advertiserIdDimensionValue) &&
        Objects.equals(this.archived, placementGroup.archived) &&
        Objects.equals(this.campaignId, placementGroup.campaignId) &&
        Objects.equals(this.campaignIdDimensionValue, placementGroup.campaignIdDimensionValue) &&
        Objects.equals(this.childPlacementIds, placementGroup.childPlacementIds) &&
        Objects.equals(this.comment, placementGroup.comment) &&
        Objects.equals(this.contentCategoryId, placementGroup.contentCategoryId) &&
        Objects.equals(this.createInfo, placementGroup.createInfo) &&
        Objects.equals(this.directorySiteId, placementGroup.directorySiteId) &&
        Objects.equals(this.directorySiteIdDimensionValue, placementGroup.directorySiteIdDimensionValue) &&
        Objects.equals(this.externalId, placementGroup.externalId) &&
        Objects.equals(this.id, placementGroup.id) &&
        Objects.equals(this.idDimensionValue, placementGroup.idDimensionValue) &&
        Objects.equals(this.kind, placementGroup.kind) &&
        Objects.equals(this.lastModifiedInfo, placementGroup.lastModifiedInfo) &&
        Objects.equals(this.name, placementGroup.name) &&
        Objects.equals(this.placementGroupType, placementGroup.placementGroupType) &&
        Objects.equals(this.placementStrategyId, placementGroup.placementStrategyId) &&
        Objects.equals(this.pricingSchedule, placementGroup.pricingSchedule) &&
        Objects.equals(this.primaryPlacementId, placementGroup.primaryPlacementId) &&
        Objects.equals(this.primaryPlacementIdDimensionValue, placementGroup.primaryPlacementIdDimensionValue) &&
        Objects.equals(this.siteId, placementGroup.siteId) &&
        Objects.equals(this.siteIdDimensionValue, placementGroup.siteIdDimensionValue) &&
        Objects.equals(this.subaccountId, placementGroup.subaccountId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, advertiserId, advertiserIdDimensionValue, archived, campaignId, campaignIdDimensionValue, childPlacementIds, comment, contentCategoryId, createInfo, directorySiteId, directorySiteIdDimensionValue, externalId, id, idDimensionValue, kind, lastModifiedInfo, name, placementGroupType, placementStrategyId, pricingSchedule, primaryPlacementId, primaryPlacementIdDimensionValue, siteId, siteIdDimensionValue, subaccountId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlacementGroup {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    advertiserIdDimensionValue: ").append(toIndentedString(advertiserIdDimensionValue)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    campaignIdDimensionValue: ").append(toIndentedString(campaignIdDimensionValue)).append("\n");
    sb.append("    childPlacementIds: ").append(toIndentedString(childPlacementIds)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    contentCategoryId: ").append(toIndentedString(contentCategoryId)).append("\n");
    sb.append("    createInfo: ").append(toIndentedString(createInfo)).append("\n");
    sb.append("    directorySiteId: ").append(toIndentedString(directorySiteId)).append("\n");
    sb.append("    directorySiteIdDimensionValue: ").append(toIndentedString(directorySiteIdDimensionValue)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idDimensionValue: ").append(toIndentedString(idDimensionValue)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    lastModifiedInfo: ").append(toIndentedString(lastModifiedInfo)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    placementGroupType: ").append(toIndentedString(placementGroupType)).append("\n");
    sb.append("    placementStrategyId: ").append(toIndentedString(placementStrategyId)).append("\n");
    sb.append("    pricingSchedule: ").append(toIndentedString(pricingSchedule)).append("\n");
    sb.append("    primaryPlacementId: ").append(toIndentedString(primaryPlacementId)).append("\n");
    sb.append("    primaryPlacementIdDimensionValue: ").append(toIndentedString(primaryPlacementIdDimensionValue)).append("\n");
    sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
    sb.append("    siteIdDimensionValue: ").append(toIndentedString(siteIdDimensionValue)).append("\n");
    sb.append("    subaccountId: ").append(toIndentedString(subaccountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountId");
    openapiFields.add("advertiserId");
    openapiFields.add("advertiserIdDimensionValue");
    openapiFields.add("archived");
    openapiFields.add("campaignId");
    openapiFields.add("campaignIdDimensionValue");
    openapiFields.add("childPlacementIds");
    openapiFields.add("comment");
    openapiFields.add("contentCategoryId");
    openapiFields.add("createInfo");
    openapiFields.add("directorySiteId");
    openapiFields.add("directorySiteIdDimensionValue");
    openapiFields.add("externalId");
    openapiFields.add("id");
    openapiFields.add("idDimensionValue");
    openapiFields.add("kind");
    openapiFields.add("lastModifiedInfo");
    openapiFields.add("name");
    openapiFields.add("placementGroupType");
    openapiFields.add("placementStrategyId");
    openapiFields.add("pricingSchedule");
    openapiFields.add("primaryPlacementId");
    openapiFields.add("primaryPlacementIdDimensionValue");
    openapiFields.add("siteId");
    openapiFields.add("siteIdDimensionValue");
    openapiFields.add("subaccountId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PlacementGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PlacementGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PlacementGroup is not found in the empty JSON string", PlacementGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PlacementGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PlacementGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accountId") != null && !jsonObj.get("accountId").isJsonNull()) && !jsonObj.get("accountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountId").toString()));
      }
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      // validate the optional field `advertiserIdDimensionValue`
      if (jsonObj.get("advertiserIdDimensionValue") != null && !jsonObj.get("advertiserIdDimensionValue").isJsonNull()) {
        DimensionValue.validateJsonElement(jsonObj.get("advertiserIdDimensionValue"));
      }
      if ((jsonObj.get("campaignId") != null && !jsonObj.get("campaignId").isJsonNull()) && !jsonObj.get("campaignId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaignId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("campaignId").toString()));
      }
      // validate the optional field `campaignIdDimensionValue`
      if (jsonObj.get("campaignIdDimensionValue") != null && !jsonObj.get("campaignIdDimensionValue").isJsonNull()) {
        DimensionValue.validateJsonElement(jsonObj.get("campaignIdDimensionValue"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("childPlacementIds") != null && !jsonObj.get("childPlacementIds").isJsonNull() && !jsonObj.get("childPlacementIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `childPlacementIds` to be an array in the JSON string but got `%s`", jsonObj.get("childPlacementIds").toString()));
      }
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if ((jsonObj.get("contentCategoryId") != null && !jsonObj.get("contentCategoryId").isJsonNull()) && !jsonObj.get("contentCategoryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contentCategoryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contentCategoryId").toString()));
      }
      // validate the optional field `createInfo`
      if (jsonObj.get("createInfo") != null && !jsonObj.get("createInfo").isJsonNull()) {
        LastModifiedInfo.validateJsonElement(jsonObj.get("createInfo"));
      }
      if ((jsonObj.get("directorySiteId") != null && !jsonObj.get("directorySiteId").isJsonNull()) && !jsonObj.get("directorySiteId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `directorySiteId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("directorySiteId").toString()));
      }
      // validate the optional field `directorySiteIdDimensionValue`
      if (jsonObj.get("directorySiteIdDimensionValue") != null && !jsonObj.get("directorySiteIdDimensionValue").isJsonNull()) {
        DimensionValue.validateJsonElement(jsonObj.get("directorySiteIdDimensionValue"));
      }
      if ((jsonObj.get("externalId") != null && !jsonObj.get("externalId").isJsonNull()) && !jsonObj.get("externalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalId").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `idDimensionValue`
      if (jsonObj.get("idDimensionValue") != null && !jsonObj.get("idDimensionValue").isJsonNull()) {
        DimensionValue.validateJsonElement(jsonObj.get("idDimensionValue"));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // validate the optional field `lastModifiedInfo`
      if (jsonObj.get("lastModifiedInfo") != null && !jsonObj.get("lastModifiedInfo").isJsonNull()) {
        LastModifiedInfo.validateJsonElement(jsonObj.get("lastModifiedInfo"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("placementGroupType") != null && !jsonObj.get("placementGroupType").isJsonNull()) && !jsonObj.get("placementGroupType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `placementGroupType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("placementGroupType").toString()));
      }
      // validate the optional field `placementGroupType`
      if (jsonObj.get("placementGroupType") != null && !jsonObj.get("placementGroupType").isJsonNull()) {
        PlacementGroupTypeEnum.validateJsonElement(jsonObj.get("placementGroupType"));
      }
      if ((jsonObj.get("placementStrategyId") != null && !jsonObj.get("placementStrategyId").isJsonNull()) && !jsonObj.get("placementStrategyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `placementStrategyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("placementStrategyId").toString()));
      }
      // validate the optional field `pricingSchedule`
      if (jsonObj.get("pricingSchedule") != null && !jsonObj.get("pricingSchedule").isJsonNull()) {
        PricingSchedule.validateJsonElement(jsonObj.get("pricingSchedule"));
      }
      if ((jsonObj.get("primaryPlacementId") != null && !jsonObj.get("primaryPlacementId").isJsonNull()) && !jsonObj.get("primaryPlacementId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryPlacementId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryPlacementId").toString()));
      }
      // validate the optional field `primaryPlacementIdDimensionValue`
      if (jsonObj.get("primaryPlacementIdDimensionValue") != null && !jsonObj.get("primaryPlacementIdDimensionValue").isJsonNull()) {
        DimensionValue.validateJsonElement(jsonObj.get("primaryPlacementIdDimensionValue"));
      }
      if ((jsonObj.get("siteId") != null && !jsonObj.get("siteId").isJsonNull()) && !jsonObj.get("siteId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `siteId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("siteId").toString()));
      }
      // validate the optional field `siteIdDimensionValue`
      if (jsonObj.get("siteIdDimensionValue") != null && !jsonObj.get("siteIdDimensionValue").isJsonNull()) {
        DimensionValue.validateJsonElement(jsonObj.get("siteIdDimensionValue"));
      }
      if ((jsonObj.get("subaccountId") != null && !jsonObj.get("subaccountId").isJsonNull()) && !jsonObj.get("subaccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subaccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subaccountId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PlacementGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PlacementGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PlacementGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PlacementGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<PlacementGroup>() {
           @Override
           public void write(JsonWriter out, PlacementGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PlacementGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PlacementGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PlacementGroup
   * @throws IOException if the JSON string is invalid with respect to PlacementGroup
   */
  public static PlacementGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PlacementGroup.class);
  }

  /**
   * Convert an instance of PlacementGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

