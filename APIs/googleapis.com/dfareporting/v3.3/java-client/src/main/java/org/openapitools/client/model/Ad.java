/*
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ClickThroughUrl;
import org.openapitools.client.model.ClickThroughUrlSuffixProperties;
import org.openapitools.client.model.CreativeGroupAssignment;
import org.openapitools.client.model.CreativeRotation;
import org.openapitools.client.model.DayPartTargeting;
import org.openapitools.client.model.DefaultClickThroughEventTagProperties;
import org.openapitools.client.model.DeliverySchedule;
import org.openapitools.client.model.DimensionValue;
import org.openapitools.client.model.EventTagOverride;
import org.openapitools.client.model.GeoTargeting;
import org.openapitools.client.model.KeyValueTargetingExpression;
import org.openapitools.client.model.LanguageTargeting;
import org.openapitools.client.model.LastModifiedInfo;
import org.openapitools.client.model.ListTargetingExpression;
import org.openapitools.client.model.PlacementAssignment;
import org.openapitools.client.model.Size;
import org.openapitools.client.model.TechnologyTargeting;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains properties of a Campaign Manager ad.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:31:12.851901-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Ad {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_ADVERTISER_ID_DIMENSION_VALUE = "advertiserIdDimensionValue";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID_DIMENSION_VALUE)
  private DimensionValue advertiserIdDimensionValue;

  public static final String SERIALIZED_NAME_ARCHIVED = "archived";
  @SerializedName(SERIALIZED_NAME_ARCHIVED)
  private Boolean archived;

  public static final String SERIALIZED_NAME_AUDIENCE_SEGMENT_ID = "audienceSegmentId";
  @SerializedName(SERIALIZED_NAME_AUDIENCE_SEGMENT_ID)
  private String audienceSegmentId;

  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "campaignId";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  private String campaignId;

  public static final String SERIALIZED_NAME_CAMPAIGN_ID_DIMENSION_VALUE = "campaignIdDimensionValue";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID_DIMENSION_VALUE)
  private DimensionValue campaignIdDimensionValue;

  public static final String SERIALIZED_NAME_CLICK_THROUGH_URL = "clickThroughUrl";
  @SerializedName(SERIALIZED_NAME_CLICK_THROUGH_URL)
  private ClickThroughUrl clickThroughUrl;

  public static final String SERIALIZED_NAME_CLICK_THROUGH_URL_SUFFIX_PROPERTIES = "clickThroughUrlSuffixProperties";
  @SerializedName(SERIALIZED_NAME_CLICK_THROUGH_URL_SUFFIX_PROPERTIES)
  private ClickThroughUrlSuffixProperties clickThroughUrlSuffixProperties;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  /**
   * Compatibility of this ad. Applicable when type is AD_SERVING_DEFAULT_AD. DISPLAY and DISPLAY_INTERSTITIAL refer to either rendering on desktop or on mobile devices or in mobile apps for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are only used for existing default ads. New mobile placements must be assigned DISPLAY or DISPLAY_INTERSTITIAL and default ads created for those placements will be limited to those compatibility types. IN_STREAM_VIDEO refers to rendering in-stream video ads developed with the VAST standard.
   */
  @JsonAdapter(CompatibilityEnum.Adapter.class)
  public enum CompatibilityEnum {
    DISPLAY("DISPLAY"),
    
    DISPLAY_INTERSTITIAL("DISPLAY_INTERSTITIAL"),
    
    APP("APP"),
    
    APP_INTERSTITIAL("APP_INTERSTITIAL"),
    
    IN_STREAM_VIDEO("IN_STREAM_VIDEO"),
    
    IN_STREAM_AUDIO("IN_STREAM_AUDIO");

    private String value;

    CompatibilityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CompatibilityEnum fromValue(String value) {
      for (CompatibilityEnum b : CompatibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CompatibilityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CompatibilityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CompatibilityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CompatibilityEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CompatibilityEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_COMPATIBILITY = "compatibility";
  @SerializedName(SERIALIZED_NAME_COMPATIBILITY)
  private CompatibilityEnum compatibility;

  public static final String SERIALIZED_NAME_CREATE_INFO = "createInfo";
  @SerializedName(SERIALIZED_NAME_CREATE_INFO)
  private LastModifiedInfo createInfo;

  public static final String SERIALIZED_NAME_CREATIVE_GROUP_ASSIGNMENTS = "creativeGroupAssignments";
  @SerializedName(SERIALIZED_NAME_CREATIVE_GROUP_ASSIGNMENTS)
  private List<CreativeGroupAssignment> creativeGroupAssignments = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATIVE_ROTATION = "creativeRotation";
  @SerializedName(SERIALIZED_NAME_CREATIVE_ROTATION)
  private CreativeRotation creativeRotation;

  public static final String SERIALIZED_NAME_DAY_PART_TARGETING = "dayPartTargeting";
  @SerializedName(SERIALIZED_NAME_DAY_PART_TARGETING)
  private DayPartTargeting dayPartTargeting;

  public static final String SERIALIZED_NAME_DEFAULT_CLICK_THROUGH_EVENT_TAG_PROPERTIES = "defaultClickThroughEventTagProperties";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CLICK_THROUGH_EVENT_TAG_PROPERTIES)
  private DefaultClickThroughEventTagProperties defaultClickThroughEventTagProperties;

  public static final String SERIALIZED_NAME_DELIVERY_SCHEDULE = "deliverySchedule";
  @SerializedName(SERIALIZED_NAME_DELIVERY_SCHEDULE)
  private DeliverySchedule deliverySchedule;

  public static final String SERIALIZED_NAME_DYNAMIC_CLICK_TRACKER = "dynamicClickTracker";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_CLICK_TRACKER)
  private Boolean dynamicClickTracker;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_EVENT_TAG_OVERRIDES = "eventTagOverrides";
  @SerializedName(SERIALIZED_NAME_EVENT_TAG_OVERRIDES)
  private List<EventTagOverride> eventTagOverrides = new ArrayList<>();

  public static final String SERIALIZED_NAME_GEO_TARGETING = "geoTargeting";
  @SerializedName(SERIALIZED_NAME_GEO_TARGETING)
  private GeoTargeting geoTargeting;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ID_DIMENSION_VALUE = "idDimensionValue";
  @SerializedName(SERIALIZED_NAME_ID_DIMENSION_VALUE)
  private DimensionValue idDimensionValue;

  public static final String SERIALIZED_NAME_KEY_VALUE_TARGETING_EXPRESSION = "keyValueTargetingExpression";
  @SerializedName(SERIALIZED_NAME_KEY_VALUE_TARGETING_EXPRESSION)
  private KeyValueTargetingExpression keyValueTargetingExpression;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_LANGUAGE_TARGETING = "languageTargeting";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_TARGETING)
  private LanguageTargeting languageTargeting;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_INFO = "lastModifiedInfo";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_INFO)
  private LastModifiedInfo lastModifiedInfo;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PLACEMENT_ASSIGNMENTS = "placementAssignments";
  @SerializedName(SERIALIZED_NAME_PLACEMENT_ASSIGNMENTS)
  private List<PlacementAssignment> placementAssignments = new ArrayList<>();

  public static final String SERIALIZED_NAME_REMARKETING_LIST_EXPRESSION = "remarketingListExpression";
  @SerializedName(SERIALIZED_NAME_REMARKETING_LIST_EXPRESSION)
  private ListTargetingExpression remarketingListExpression;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Size size;

  public static final String SERIALIZED_NAME_SSL_COMPLIANT = "sslCompliant";
  @SerializedName(SERIALIZED_NAME_SSL_COMPLIANT)
  private Boolean sslCompliant;

  public static final String SERIALIZED_NAME_SSL_REQUIRED = "sslRequired";
  @SerializedName(SERIALIZED_NAME_SSL_REQUIRED)
  private Boolean sslRequired;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_SUBACCOUNT_ID = "subaccountId";
  @SerializedName(SERIALIZED_NAME_SUBACCOUNT_ID)
  private String subaccountId;

  public static final String SERIALIZED_NAME_TARGETING_TEMPLATE_ID = "targetingTemplateId";
  @SerializedName(SERIALIZED_NAME_TARGETING_TEMPLATE_ID)
  private String targetingTemplateId;

  public static final String SERIALIZED_NAME_TECHNOLOGY_TARGETING = "technologyTargeting";
  @SerializedName(SERIALIZED_NAME_TECHNOLOGY_TARGETING)
  private TechnologyTargeting technologyTargeting;

  /**
   * Type of ad. This is a required field on insertion. Note that default ads ( AD_SERVING_DEFAULT_AD) cannot be created directly (see Creative resource).
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    STANDARD_AD("AD_SERVING_STANDARD_AD"),
    
    DEFAULT_AD("AD_SERVING_DEFAULT_AD"),
    
    CLICK_TRACKER("AD_SERVING_CLICK_TRACKER"),
    
    TRACKING("AD_SERVING_TRACKING"),
    
    BRAND_SAFE_AD("AD_SERVING_BRAND_SAFE_AD");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public Ad() {
  }

  public Ad accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Account ID of this ad. This is a read-only field that can be left blank.
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public Ad active(Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * Whether this ad is active. When true, archived must be false.
   * @return active
   */
  @javax.annotation.Nullable
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }


  public Ad advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * Advertiser ID of this ad. This is a required field on insertion.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public Ad advertiserIdDimensionValue(DimensionValue advertiserIdDimensionValue) {
    this.advertiserIdDimensionValue = advertiserIdDimensionValue;
    return this;
  }

  /**
   * Get advertiserIdDimensionValue
   * @return advertiserIdDimensionValue
   */
  @javax.annotation.Nullable
  public DimensionValue getAdvertiserIdDimensionValue() {
    return advertiserIdDimensionValue;
  }

  public void setAdvertiserIdDimensionValue(DimensionValue advertiserIdDimensionValue) {
    this.advertiserIdDimensionValue = advertiserIdDimensionValue;
  }


  public Ad archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

  /**
   * Whether this ad is archived. When true, active must be false.
   * @return archived
   */
  @javax.annotation.Nullable
  public Boolean getArchived() {
    return archived;
  }

  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  public Ad audienceSegmentId(String audienceSegmentId) {
    this.audienceSegmentId = audienceSegmentId;
    return this;
  }

  /**
   * Audience segment ID that is being targeted for this ad. Applicable when type is AD_SERVING_STANDARD_AD.
   * @return audienceSegmentId
   */
  @javax.annotation.Nullable
  public String getAudienceSegmentId() {
    return audienceSegmentId;
  }

  public void setAudienceSegmentId(String audienceSegmentId) {
    this.audienceSegmentId = audienceSegmentId;
  }


  public Ad campaignId(String campaignId) {
    this.campaignId = campaignId;
    return this;
  }

  /**
   * Campaign ID of this ad. This is a required field on insertion.
   * @return campaignId
   */
  @javax.annotation.Nullable
  public String getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(String campaignId) {
    this.campaignId = campaignId;
  }


  public Ad campaignIdDimensionValue(DimensionValue campaignIdDimensionValue) {
    this.campaignIdDimensionValue = campaignIdDimensionValue;
    return this;
  }

  /**
   * Get campaignIdDimensionValue
   * @return campaignIdDimensionValue
   */
  @javax.annotation.Nullable
  public DimensionValue getCampaignIdDimensionValue() {
    return campaignIdDimensionValue;
  }

  public void setCampaignIdDimensionValue(DimensionValue campaignIdDimensionValue) {
    this.campaignIdDimensionValue = campaignIdDimensionValue;
  }


  public Ad clickThroughUrl(ClickThroughUrl clickThroughUrl) {
    this.clickThroughUrl = clickThroughUrl;
    return this;
  }

  /**
   * Get clickThroughUrl
   * @return clickThroughUrl
   */
  @javax.annotation.Nullable
  public ClickThroughUrl getClickThroughUrl() {
    return clickThroughUrl;
  }

  public void setClickThroughUrl(ClickThroughUrl clickThroughUrl) {
    this.clickThroughUrl = clickThroughUrl;
  }


  public Ad clickThroughUrlSuffixProperties(ClickThroughUrlSuffixProperties clickThroughUrlSuffixProperties) {
    this.clickThroughUrlSuffixProperties = clickThroughUrlSuffixProperties;
    return this;
  }

  /**
   * Get clickThroughUrlSuffixProperties
   * @return clickThroughUrlSuffixProperties
   */
  @javax.annotation.Nullable
  public ClickThroughUrlSuffixProperties getClickThroughUrlSuffixProperties() {
    return clickThroughUrlSuffixProperties;
  }

  public void setClickThroughUrlSuffixProperties(ClickThroughUrlSuffixProperties clickThroughUrlSuffixProperties) {
    this.clickThroughUrlSuffixProperties = clickThroughUrlSuffixProperties;
  }


  public Ad comments(String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * Comments for this ad.
   * @return comments
   */
  @javax.annotation.Nullable
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  public Ad compatibility(CompatibilityEnum compatibility) {
    this.compatibility = compatibility;
    return this;
  }

  /**
   * Compatibility of this ad. Applicable when type is AD_SERVING_DEFAULT_AD. DISPLAY and DISPLAY_INTERSTITIAL refer to either rendering on desktop or on mobile devices or in mobile apps for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are only used for existing default ads. New mobile placements must be assigned DISPLAY or DISPLAY_INTERSTITIAL and default ads created for those placements will be limited to those compatibility types. IN_STREAM_VIDEO refers to rendering in-stream video ads developed with the VAST standard.
   * @return compatibility
   */
  @javax.annotation.Nullable
  public CompatibilityEnum getCompatibility() {
    return compatibility;
  }

  public void setCompatibility(CompatibilityEnum compatibility) {
    this.compatibility = compatibility;
  }


  public Ad createInfo(LastModifiedInfo createInfo) {
    this.createInfo = createInfo;
    return this;
  }

  /**
   * Get createInfo
   * @return createInfo
   */
  @javax.annotation.Nullable
  public LastModifiedInfo getCreateInfo() {
    return createInfo;
  }

  public void setCreateInfo(LastModifiedInfo createInfo) {
    this.createInfo = createInfo;
  }


  public Ad creativeGroupAssignments(List<CreativeGroupAssignment> creativeGroupAssignments) {
    this.creativeGroupAssignments = creativeGroupAssignments;
    return this;
  }

  public Ad addCreativeGroupAssignmentsItem(CreativeGroupAssignment creativeGroupAssignmentsItem) {
    if (this.creativeGroupAssignments == null) {
      this.creativeGroupAssignments = new ArrayList<>();
    }
    this.creativeGroupAssignments.add(creativeGroupAssignmentsItem);
    return this;
  }

  /**
   * Creative group assignments for this ad. Applicable when type is AD_SERVING_CLICK_TRACKER. Only one assignment per creative group number is allowed for a maximum of two assignments.
   * @return creativeGroupAssignments
   */
  @javax.annotation.Nullable
  public List<CreativeGroupAssignment> getCreativeGroupAssignments() {
    return creativeGroupAssignments;
  }

  public void setCreativeGroupAssignments(List<CreativeGroupAssignment> creativeGroupAssignments) {
    this.creativeGroupAssignments = creativeGroupAssignments;
  }


  public Ad creativeRotation(CreativeRotation creativeRotation) {
    this.creativeRotation = creativeRotation;
    return this;
  }

  /**
   * Get creativeRotation
   * @return creativeRotation
   */
  @javax.annotation.Nullable
  public CreativeRotation getCreativeRotation() {
    return creativeRotation;
  }

  public void setCreativeRotation(CreativeRotation creativeRotation) {
    this.creativeRotation = creativeRotation;
  }


  public Ad dayPartTargeting(DayPartTargeting dayPartTargeting) {
    this.dayPartTargeting = dayPartTargeting;
    return this;
  }

  /**
   * Get dayPartTargeting
   * @return dayPartTargeting
   */
  @javax.annotation.Nullable
  public DayPartTargeting getDayPartTargeting() {
    return dayPartTargeting;
  }

  public void setDayPartTargeting(DayPartTargeting dayPartTargeting) {
    this.dayPartTargeting = dayPartTargeting;
  }


  public Ad defaultClickThroughEventTagProperties(DefaultClickThroughEventTagProperties defaultClickThroughEventTagProperties) {
    this.defaultClickThroughEventTagProperties = defaultClickThroughEventTagProperties;
    return this;
  }

  /**
   * Get defaultClickThroughEventTagProperties
   * @return defaultClickThroughEventTagProperties
   */
  @javax.annotation.Nullable
  public DefaultClickThroughEventTagProperties getDefaultClickThroughEventTagProperties() {
    return defaultClickThroughEventTagProperties;
  }

  public void setDefaultClickThroughEventTagProperties(DefaultClickThroughEventTagProperties defaultClickThroughEventTagProperties) {
    this.defaultClickThroughEventTagProperties = defaultClickThroughEventTagProperties;
  }


  public Ad deliverySchedule(DeliverySchedule deliverySchedule) {
    this.deliverySchedule = deliverySchedule;
    return this;
  }

  /**
   * Get deliverySchedule
   * @return deliverySchedule
   */
  @javax.annotation.Nullable
  public DeliverySchedule getDeliverySchedule() {
    return deliverySchedule;
  }

  public void setDeliverySchedule(DeliverySchedule deliverySchedule) {
    this.deliverySchedule = deliverySchedule;
  }


  public Ad dynamicClickTracker(Boolean dynamicClickTracker) {
    this.dynamicClickTracker = dynamicClickTracker;
    return this;
  }

  /**
   * Whether this ad is a dynamic click tracker. Applicable when type is AD_SERVING_CLICK_TRACKER. This is a required field on insert, and is read-only after insert.
   * @return dynamicClickTracker
   */
  @javax.annotation.Nullable
  public Boolean getDynamicClickTracker() {
    return dynamicClickTracker;
  }

  public void setDynamicClickTracker(Boolean dynamicClickTracker) {
    this.dynamicClickTracker = dynamicClickTracker;
  }


  public Ad endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public Ad eventTagOverrides(List<EventTagOverride> eventTagOverrides) {
    this.eventTagOverrides = eventTagOverrides;
    return this;
  }

  public Ad addEventTagOverridesItem(EventTagOverride eventTagOverridesItem) {
    if (this.eventTagOverrides == null) {
      this.eventTagOverrides = new ArrayList<>();
    }
    this.eventTagOverrides.add(eventTagOverridesItem);
    return this;
  }

  /**
   * Event tag overrides for this ad.
   * @return eventTagOverrides
   */
  @javax.annotation.Nullable
  public List<EventTagOverride> getEventTagOverrides() {
    return eventTagOverrides;
  }

  public void setEventTagOverrides(List<EventTagOverride> eventTagOverrides) {
    this.eventTagOverrides = eventTagOverrides;
  }


  public Ad geoTargeting(GeoTargeting geoTargeting) {
    this.geoTargeting = geoTargeting;
    return this;
  }

  /**
   * Get geoTargeting
   * @return geoTargeting
   */
  @javax.annotation.Nullable
  public GeoTargeting getGeoTargeting() {
    return geoTargeting;
  }

  public void setGeoTargeting(GeoTargeting geoTargeting) {
    this.geoTargeting = geoTargeting;
  }


  public Ad id(String id) {
    this.id = id;
    return this;
  }

  /**
   * ID of this ad. This is a read-only, auto-generated field.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Ad idDimensionValue(DimensionValue idDimensionValue) {
    this.idDimensionValue = idDimensionValue;
    return this;
  }

  /**
   * Get idDimensionValue
   * @return idDimensionValue
   */
  @javax.annotation.Nullable
  public DimensionValue getIdDimensionValue() {
    return idDimensionValue;
  }

  public void setIdDimensionValue(DimensionValue idDimensionValue) {
    this.idDimensionValue = idDimensionValue;
  }


  public Ad keyValueTargetingExpression(KeyValueTargetingExpression keyValueTargetingExpression) {
    this.keyValueTargetingExpression = keyValueTargetingExpression;
    return this;
  }

  /**
   * Get keyValueTargetingExpression
   * @return keyValueTargetingExpression
   */
  @javax.annotation.Nullable
  public KeyValueTargetingExpression getKeyValueTargetingExpression() {
    return keyValueTargetingExpression;
  }

  public void setKeyValueTargetingExpression(KeyValueTargetingExpression keyValueTargetingExpression) {
    this.keyValueTargetingExpression = keyValueTargetingExpression;
  }


  public Ad kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;dfareporting#ad\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public Ad languageTargeting(LanguageTargeting languageTargeting) {
    this.languageTargeting = languageTargeting;
    return this;
  }

  /**
   * Get languageTargeting
   * @return languageTargeting
   */
  @javax.annotation.Nullable
  public LanguageTargeting getLanguageTargeting() {
    return languageTargeting;
  }

  public void setLanguageTargeting(LanguageTargeting languageTargeting) {
    this.languageTargeting = languageTargeting;
  }


  public Ad lastModifiedInfo(LastModifiedInfo lastModifiedInfo) {
    this.lastModifiedInfo = lastModifiedInfo;
    return this;
  }

  /**
   * Get lastModifiedInfo
   * @return lastModifiedInfo
   */
  @javax.annotation.Nullable
  public LastModifiedInfo getLastModifiedInfo() {
    return lastModifiedInfo;
  }

  public void setLastModifiedInfo(LastModifiedInfo lastModifiedInfo) {
    this.lastModifiedInfo = lastModifiedInfo;
  }


  public Ad name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of this ad. This is a required field and must be less than 256 characters long.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Ad placementAssignments(List<PlacementAssignment> placementAssignments) {
    this.placementAssignments = placementAssignments;
    return this;
  }

  public Ad addPlacementAssignmentsItem(PlacementAssignment placementAssignmentsItem) {
    if (this.placementAssignments == null) {
      this.placementAssignments = new ArrayList<>();
    }
    this.placementAssignments.add(placementAssignmentsItem);
    return this;
  }

  /**
   * Placement assignments for this ad.
   * @return placementAssignments
   */
  @javax.annotation.Nullable
  public List<PlacementAssignment> getPlacementAssignments() {
    return placementAssignments;
  }

  public void setPlacementAssignments(List<PlacementAssignment> placementAssignments) {
    this.placementAssignments = placementAssignments;
  }


  public Ad remarketingListExpression(ListTargetingExpression remarketingListExpression) {
    this.remarketingListExpression = remarketingListExpression;
    return this;
  }

  /**
   * Get remarketingListExpression
   * @return remarketingListExpression
   */
  @javax.annotation.Nullable
  public ListTargetingExpression getRemarketingListExpression() {
    return remarketingListExpression;
  }

  public void setRemarketingListExpression(ListTargetingExpression remarketingListExpression) {
    this.remarketingListExpression = remarketingListExpression;
  }


  public Ad size(Size size) {
    this.size = size;
    return this;
  }

  /**
   * Get size
   * @return size
   */
  @javax.annotation.Nullable
  public Size getSize() {
    return size;
  }

  public void setSize(Size size) {
    this.size = size;
  }


  public Ad sslCompliant(Boolean sslCompliant) {
    this.sslCompliant = sslCompliant;
    return this;
  }

  /**
   * Whether this ad is ssl compliant. This is a read-only field that is auto-generated when the ad is inserted or updated.
   * @return sslCompliant
   */
  @javax.annotation.Nullable
  public Boolean getSslCompliant() {
    return sslCompliant;
  }

  public void setSslCompliant(Boolean sslCompliant) {
    this.sslCompliant = sslCompliant;
  }


  public Ad sslRequired(Boolean sslRequired) {
    this.sslRequired = sslRequired;
    return this;
  }

  /**
   * Whether this ad requires ssl. This is a read-only field that is auto-generated when the ad is inserted or updated.
   * @return sslRequired
   */
  @javax.annotation.Nullable
  public Boolean getSslRequired() {
    return sslRequired;
  }

  public void setSslRequired(Boolean sslRequired) {
    this.sslRequired = sslRequired;
  }


  public Ad startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public Ad subaccountId(String subaccountId) {
    this.subaccountId = subaccountId;
    return this;
  }

  /**
   * Subaccount ID of this ad. This is a read-only field that can be left blank.
   * @return subaccountId
   */
  @javax.annotation.Nullable
  public String getSubaccountId() {
    return subaccountId;
  }

  public void setSubaccountId(String subaccountId) {
    this.subaccountId = subaccountId;
  }


  public Ad targetingTemplateId(String targetingTemplateId) {
    this.targetingTemplateId = targetingTemplateId;
    return this;
  }

  /**
   * Targeting template ID, used to apply preconfigured targeting information to this ad. This cannot be set while any of dayPartTargeting, geoTargeting, keyValueTargetingExpression, languageTargeting, remarketingListExpression, or technologyTargeting are set. Applicable when type is AD_SERVING_STANDARD_AD.
   * @return targetingTemplateId
   */
  @javax.annotation.Nullable
  public String getTargetingTemplateId() {
    return targetingTemplateId;
  }

  public void setTargetingTemplateId(String targetingTemplateId) {
    this.targetingTemplateId = targetingTemplateId;
  }


  public Ad technologyTargeting(TechnologyTargeting technologyTargeting) {
    this.technologyTargeting = technologyTargeting;
    return this;
  }

  /**
   * Get technologyTargeting
   * @return technologyTargeting
   */
  @javax.annotation.Nullable
  public TechnologyTargeting getTechnologyTargeting() {
    return technologyTargeting;
  }

  public void setTechnologyTargeting(TechnologyTargeting technologyTargeting) {
    this.technologyTargeting = technologyTargeting;
  }


  public Ad type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Type of ad. This is a required field on insertion. Note that default ads ( AD_SERVING_DEFAULT_AD) cannot be created directly (see Creative resource).
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ad ad = (Ad) o;
    return Objects.equals(this.accountId, ad.accountId) &&
        Objects.equals(this.active, ad.active) &&
        Objects.equals(this.advertiserId, ad.advertiserId) &&
        Objects.equals(this.advertiserIdDimensionValue, ad.advertiserIdDimensionValue) &&
        Objects.equals(this.archived, ad.archived) &&
        Objects.equals(this.audienceSegmentId, ad.audienceSegmentId) &&
        Objects.equals(this.campaignId, ad.campaignId) &&
        Objects.equals(this.campaignIdDimensionValue, ad.campaignIdDimensionValue) &&
        Objects.equals(this.clickThroughUrl, ad.clickThroughUrl) &&
        Objects.equals(this.clickThroughUrlSuffixProperties, ad.clickThroughUrlSuffixProperties) &&
        Objects.equals(this.comments, ad.comments) &&
        Objects.equals(this.compatibility, ad.compatibility) &&
        Objects.equals(this.createInfo, ad.createInfo) &&
        Objects.equals(this.creativeGroupAssignments, ad.creativeGroupAssignments) &&
        Objects.equals(this.creativeRotation, ad.creativeRotation) &&
        Objects.equals(this.dayPartTargeting, ad.dayPartTargeting) &&
        Objects.equals(this.defaultClickThroughEventTagProperties, ad.defaultClickThroughEventTagProperties) &&
        Objects.equals(this.deliverySchedule, ad.deliverySchedule) &&
        Objects.equals(this.dynamicClickTracker, ad.dynamicClickTracker) &&
        Objects.equals(this.endTime, ad.endTime) &&
        Objects.equals(this.eventTagOverrides, ad.eventTagOverrides) &&
        Objects.equals(this.geoTargeting, ad.geoTargeting) &&
        Objects.equals(this.id, ad.id) &&
        Objects.equals(this.idDimensionValue, ad.idDimensionValue) &&
        Objects.equals(this.keyValueTargetingExpression, ad.keyValueTargetingExpression) &&
        Objects.equals(this.kind, ad.kind) &&
        Objects.equals(this.languageTargeting, ad.languageTargeting) &&
        Objects.equals(this.lastModifiedInfo, ad.lastModifiedInfo) &&
        Objects.equals(this.name, ad.name) &&
        Objects.equals(this.placementAssignments, ad.placementAssignments) &&
        Objects.equals(this.remarketingListExpression, ad.remarketingListExpression) &&
        Objects.equals(this.size, ad.size) &&
        Objects.equals(this.sslCompliant, ad.sslCompliant) &&
        Objects.equals(this.sslRequired, ad.sslRequired) &&
        Objects.equals(this.startTime, ad.startTime) &&
        Objects.equals(this.subaccountId, ad.subaccountId) &&
        Objects.equals(this.targetingTemplateId, ad.targetingTemplateId) &&
        Objects.equals(this.technologyTargeting, ad.technologyTargeting) &&
        Objects.equals(this.type, ad.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, active, advertiserId, advertiserIdDimensionValue, archived, audienceSegmentId, campaignId, campaignIdDimensionValue, clickThroughUrl, clickThroughUrlSuffixProperties, comments, compatibility, createInfo, creativeGroupAssignments, creativeRotation, dayPartTargeting, defaultClickThroughEventTagProperties, deliverySchedule, dynamicClickTracker, endTime, eventTagOverrides, geoTargeting, id, idDimensionValue, keyValueTargetingExpression, kind, languageTargeting, lastModifiedInfo, name, placementAssignments, remarketingListExpression, size, sslCompliant, sslRequired, startTime, subaccountId, targetingTemplateId, technologyTargeting, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ad {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    advertiserIdDimensionValue: ").append(toIndentedString(advertiserIdDimensionValue)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    audienceSegmentId: ").append(toIndentedString(audienceSegmentId)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    campaignIdDimensionValue: ").append(toIndentedString(campaignIdDimensionValue)).append("\n");
    sb.append("    clickThroughUrl: ").append(toIndentedString(clickThroughUrl)).append("\n");
    sb.append("    clickThroughUrlSuffixProperties: ").append(toIndentedString(clickThroughUrlSuffixProperties)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    compatibility: ").append(toIndentedString(compatibility)).append("\n");
    sb.append("    createInfo: ").append(toIndentedString(createInfo)).append("\n");
    sb.append("    creativeGroupAssignments: ").append(toIndentedString(creativeGroupAssignments)).append("\n");
    sb.append("    creativeRotation: ").append(toIndentedString(creativeRotation)).append("\n");
    sb.append("    dayPartTargeting: ").append(toIndentedString(dayPartTargeting)).append("\n");
    sb.append("    defaultClickThroughEventTagProperties: ").append(toIndentedString(defaultClickThroughEventTagProperties)).append("\n");
    sb.append("    deliverySchedule: ").append(toIndentedString(deliverySchedule)).append("\n");
    sb.append("    dynamicClickTracker: ").append(toIndentedString(dynamicClickTracker)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    eventTagOverrides: ").append(toIndentedString(eventTagOverrides)).append("\n");
    sb.append("    geoTargeting: ").append(toIndentedString(geoTargeting)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idDimensionValue: ").append(toIndentedString(idDimensionValue)).append("\n");
    sb.append("    keyValueTargetingExpression: ").append(toIndentedString(keyValueTargetingExpression)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    languageTargeting: ").append(toIndentedString(languageTargeting)).append("\n");
    sb.append("    lastModifiedInfo: ").append(toIndentedString(lastModifiedInfo)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    placementAssignments: ").append(toIndentedString(placementAssignments)).append("\n");
    sb.append("    remarketingListExpression: ").append(toIndentedString(remarketingListExpression)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    sslCompliant: ").append(toIndentedString(sslCompliant)).append("\n");
    sb.append("    sslRequired: ").append(toIndentedString(sslRequired)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    subaccountId: ").append(toIndentedString(subaccountId)).append("\n");
    sb.append("    targetingTemplateId: ").append(toIndentedString(targetingTemplateId)).append("\n");
    sb.append("    technologyTargeting: ").append(toIndentedString(technologyTargeting)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountId");
    openapiFields.add("active");
    openapiFields.add("advertiserId");
    openapiFields.add("advertiserIdDimensionValue");
    openapiFields.add("archived");
    openapiFields.add("audienceSegmentId");
    openapiFields.add("campaignId");
    openapiFields.add("campaignIdDimensionValue");
    openapiFields.add("clickThroughUrl");
    openapiFields.add("clickThroughUrlSuffixProperties");
    openapiFields.add("comments");
    openapiFields.add("compatibility");
    openapiFields.add("createInfo");
    openapiFields.add("creativeGroupAssignments");
    openapiFields.add("creativeRotation");
    openapiFields.add("dayPartTargeting");
    openapiFields.add("defaultClickThroughEventTagProperties");
    openapiFields.add("deliverySchedule");
    openapiFields.add("dynamicClickTracker");
    openapiFields.add("endTime");
    openapiFields.add("eventTagOverrides");
    openapiFields.add("geoTargeting");
    openapiFields.add("id");
    openapiFields.add("idDimensionValue");
    openapiFields.add("keyValueTargetingExpression");
    openapiFields.add("kind");
    openapiFields.add("languageTargeting");
    openapiFields.add("lastModifiedInfo");
    openapiFields.add("name");
    openapiFields.add("placementAssignments");
    openapiFields.add("remarketingListExpression");
    openapiFields.add("size");
    openapiFields.add("sslCompliant");
    openapiFields.add("sslRequired");
    openapiFields.add("startTime");
    openapiFields.add("subaccountId");
    openapiFields.add("targetingTemplateId");
    openapiFields.add("technologyTargeting");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Ad
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Ad.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Ad is not found in the empty JSON string", Ad.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Ad.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Ad` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accountId") != null && !jsonObj.get("accountId").isJsonNull()) && !jsonObj.get("accountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountId").toString()));
      }
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      // validate the optional field `advertiserIdDimensionValue`
      if (jsonObj.get("advertiserIdDimensionValue") != null && !jsonObj.get("advertiserIdDimensionValue").isJsonNull()) {
        DimensionValue.validateJsonElement(jsonObj.get("advertiserIdDimensionValue"));
      }
      if ((jsonObj.get("audienceSegmentId") != null && !jsonObj.get("audienceSegmentId").isJsonNull()) && !jsonObj.get("audienceSegmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audienceSegmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audienceSegmentId").toString()));
      }
      if ((jsonObj.get("campaignId") != null && !jsonObj.get("campaignId").isJsonNull()) && !jsonObj.get("campaignId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaignId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("campaignId").toString()));
      }
      // validate the optional field `campaignIdDimensionValue`
      if (jsonObj.get("campaignIdDimensionValue") != null && !jsonObj.get("campaignIdDimensionValue").isJsonNull()) {
        DimensionValue.validateJsonElement(jsonObj.get("campaignIdDimensionValue"));
      }
      // validate the optional field `clickThroughUrl`
      if (jsonObj.get("clickThroughUrl") != null && !jsonObj.get("clickThroughUrl").isJsonNull()) {
        ClickThroughUrl.validateJsonElement(jsonObj.get("clickThroughUrl"));
      }
      // validate the optional field `clickThroughUrlSuffixProperties`
      if (jsonObj.get("clickThroughUrlSuffixProperties") != null && !jsonObj.get("clickThroughUrlSuffixProperties").isJsonNull()) {
        ClickThroughUrlSuffixProperties.validateJsonElement(jsonObj.get("clickThroughUrlSuffixProperties"));
      }
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if ((jsonObj.get("compatibility") != null && !jsonObj.get("compatibility").isJsonNull()) && !jsonObj.get("compatibility").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `compatibility` to be a primitive type in the JSON string but got `%s`", jsonObj.get("compatibility").toString()));
      }
      // validate the optional field `compatibility`
      if (jsonObj.get("compatibility") != null && !jsonObj.get("compatibility").isJsonNull()) {
        CompatibilityEnum.validateJsonElement(jsonObj.get("compatibility"));
      }
      // validate the optional field `createInfo`
      if (jsonObj.get("createInfo") != null && !jsonObj.get("createInfo").isJsonNull()) {
        LastModifiedInfo.validateJsonElement(jsonObj.get("createInfo"));
      }
      if (jsonObj.get("creativeGroupAssignments") != null && !jsonObj.get("creativeGroupAssignments").isJsonNull()) {
        JsonArray jsonArraycreativeGroupAssignments = jsonObj.getAsJsonArray("creativeGroupAssignments");
        if (jsonArraycreativeGroupAssignments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("creativeGroupAssignments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `creativeGroupAssignments` to be an array in the JSON string but got `%s`", jsonObj.get("creativeGroupAssignments").toString()));
          }

          // validate the optional field `creativeGroupAssignments` (array)
          for (int i = 0; i < jsonArraycreativeGroupAssignments.size(); i++) {
            CreativeGroupAssignment.validateJsonElement(jsonArraycreativeGroupAssignments.get(i));
          };
        }
      }
      // validate the optional field `creativeRotation`
      if (jsonObj.get("creativeRotation") != null && !jsonObj.get("creativeRotation").isJsonNull()) {
        CreativeRotation.validateJsonElement(jsonObj.get("creativeRotation"));
      }
      // validate the optional field `dayPartTargeting`
      if (jsonObj.get("dayPartTargeting") != null && !jsonObj.get("dayPartTargeting").isJsonNull()) {
        DayPartTargeting.validateJsonElement(jsonObj.get("dayPartTargeting"));
      }
      // validate the optional field `defaultClickThroughEventTagProperties`
      if (jsonObj.get("defaultClickThroughEventTagProperties") != null && !jsonObj.get("defaultClickThroughEventTagProperties").isJsonNull()) {
        DefaultClickThroughEventTagProperties.validateJsonElement(jsonObj.get("defaultClickThroughEventTagProperties"));
      }
      // validate the optional field `deliverySchedule`
      if (jsonObj.get("deliverySchedule") != null && !jsonObj.get("deliverySchedule").isJsonNull()) {
        DeliverySchedule.validateJsonElement(jsonObj.get("deliverySchedule"));
      }
      if (jsonObj.get("eventTagOverrides") != null && !jsonObj.get("eventTagOverrides").isJsonNull()) {
        JsonArray jsonArrayeventTagOverrides = jsonObj.getAsJsonArray("eventTagOverrides");
        if (jsonArrayeventTagOverrides != null) {
          // ensure the json data is an array
          if (!jsonObj.get("eventTagOverrides").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `eventTagOverrides` to be an array in the JSON string but got `%s`", jsonObj.get("eventTagOverrides").toString()));
          }

          // validate the optional field `eventTagOverrides` (array)
          for (int i = 0; i < jsonArrayeventTagOverrides.size(); i++) {
            EventTagOverride.validateJsonElement(jsonArrayeventTagOverrides.get(i));
          };
        }
      }
      // validate the optional field `geoTargeting`
      if (jsonObj.get("geoTargeting") != null && !jsonObj.get("geoTargeting").isJsonNull()) {
        GeoTargeting.validateJsonElement(jsonObj.get("geoTargeting"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `idDimensionValue`
      if (jsonObj.get("idDimensionValue") != null && !jsonObj.get("idDimensionValue").isJsonNull()) {
        DimensionValue.validateJsonElement(jsonObj.get("idDimensionValue"));
      }
      // validate the optional field `keyValueTargetingExpression`
      if (jsonObj.get("keyValueTargetingExpression") != null && !jsonObj.get("keyValueTargetingExpression").isJsonNull()) {
        KeyValueTargetingExpression.validateJsonElement(jsonObj.get("keyValueTargetingExpression"));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // validate the optional field `languageTargeting`
      if (jsonObj.get("languageTargeting") != null && !jsonObj.get("languageTargeting").isJsonNull()) {
        LanguageTargeting.validateJsonElement(jsonObj.get("languageTargeting"));
      }
      // validate the optional field `lastModifiedInfo`
      if (jsonObj.get("lastModifiedInfo") != null && !jsonObj.get("lastModifiedInfo").isJsonNull()) {
        LastModifiedInfo.validateJsonElement(jsonObj.get("lastModifiedInfo"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("placementAssignments") != null && !jsonObj.get("placementAssignments").isJsonNull()) {
        JsonArray jsonArrayplacementAssignments = jsonObj.getAsJsonArray("placementAssignments");
        if (jsonArrayplacementAssignments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("placementAssignments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `placementAssignments` to be an array in the JSON string but got `%s`", jsonObj.get("placementAssignments").toString()));
          }

          // validate the optional field `placementAssignments` (array)
          for (int i = 0; i < jsonArrayplacementAssignments.size(); i++) {
            PlacementAssignment.validateJsonElement(jsonArrayplacementAssignments.get(i));
          };
        }
      }
      // validate the optional field `remarketingListExpression`
      if (jsonObj.get("remarketingListExpression") != null && !jsonObj.get("remarketingListExpression").isJsonNull()) {
        ListTargetingExpression.validateJsonElement(jsonObj.get("remarketingListExpression"));
      }
      // validate the optional field `size`
      if (jsonObj.get("size") != null && !jsonObj.get("size").isJsonNull()) {
        Size.validateJsonElement(jsonObj.get("size"));
      }
      if ((jsonObj.get("subaccountId") != null && !jsonObj.get("subaccountId").isJsonNull()) && !jsonObj.get("subaccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subaccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subaccountId").toString()));
      }
      if ((jsonObj.get("targetingTemplateId") != null && !jsonObj.get("targetingTemplateId").isJsonNull()) && !jsonObj.get("targetingTemplateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetingTemplateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetingTemplateId").toString()));
      }
      // validate the optional field `technologyTargeting`
      if (jsonObj.get("technologyTargeting") != null && !jsonObj.get("technologyTargeting").isJsonNull()) {
        TechnologyTargeting.validateJsonElement(jsonObj.get("technologyTargeting"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Ad.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Ad' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Ad> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Ad.class));

       return (TypeAdapter<T>) new TypeAdapter<Ad>() {
           @Override
           public void write(JsonWriter out, Ad value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Ad read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Ad given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Ad
   * @throws IOException if the JSON string is invalid with respect to Ad
   */
  public static Ad fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Ad.class);
  }

  /**
   * Convert an instance of Ad to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

