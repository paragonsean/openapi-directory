/*
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DimensionValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains properties of a targetable remarketing list. Remarketing enables you to create lists of users who have performed specific actions on a site, then target ads to members of those lists. This resource is a read-only view of a remarketing list to be used to faciliate targeting ads to specific lists. Remarketing lists that are owned by your advertisers and those that are shared to your advertisers or account are accessible via this resource. To manage remarketing lists that are owned by your advertisers, use the RemarketingLists resource.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:31:12.851901-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TargetableRemarketingList {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_ADVERTISER_ID_DIMENSION_VALUE = "advertiserIdDimensionValue";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID_DIMENSION_VALUE)
  private DimensionValue advertiserIdDimensionValue;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_LIFE_SPAN = "lifeSpan";
  @SerializedName(SERIALIZED_NAME_LIFE_SPAN)
  private String lifeSpan;

  public static final String SERIALIZED_NAME_LIST_SIZE = "listSize";
  @SerializedName(SERIALIZED_NAME_LIST_SIZE)
  private String listSize;

  /**
   * Product from which this targetable remarketing list was originated.
   */
  @JsonAdapter(ListSourceEnum.Adapter.class)
  public enum ListSourceEnum {
    OTHER("REMARKETING_LIST_SOURCE_OTHER"),
    
    ADX("REMARKETING_LIST_SOURCE_ADX"),
    
    DFP("REMARKETING_LIST_SOURCE_DFP"),
    
    XFP("REMARKETING_LIST_SOURCE_XFP"),
    
    DFA("REMARKETING_LIST_SOURCE_DFA"),
    
    GA("REMARKETING_LIST_SOURCE_GA"),
    
    YOUTUBE("REMARKETING_LIST_SOURCE_YOUTUBE"),
    
    DBM("REMARKETING_LIST_SOURCE_DBM"),
    
    GPLUS("REMARKETING_LIST_SOURCE_GPLUS"),
    
    DMP("REMARKETING_LIST_SOURCE_DMP"),
    
    PLAY_STORE("REMARKETING_LIST_SOURCE_PLAY_STORE");

    private String value;

    ListSourceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ListSourceEnum fromValue(String value) {
      for (ListSourceEnum b : ListSourceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ListSourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ListSourceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ListSourceEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ListSourceEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ListSourceEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LIST_SOURCE = "listSource";
  @SerializedName(SERIALIZED_NAME_LIST_SOURCE)
  private ListSourceEnum listSource;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SUBACCOUNT_ID = "subaccountId";
  @SerializedName(SERIALIZED_NAME_SUBACCOUNT_ID)
  private String subaccountId;

  public TargetableRemarketingList() {
  }

  public TargetableRemarketingList accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Account ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public TargetableRemarketingList active(Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * Whether this targetable remarketing list is active.
   * @return active
   */
  @javax.annotation.Nullable
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }


  public TargetableRemarketingList advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * Dimension value for the advertiser ID that owns this targetable remarketing list.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public TargetableRemarketingList advertiserIdDimensionValue(DimensionValue advertiserIdDimensionValue) {
    this.advertiserIdDimensionValue = advertiserIdDimensionValue;
    return this;
  }

  /**
   * Get advertiserIdDimensionValue
   * @return advertiserIdDimensionValue
   */
  @javax.annotation.Nullable
  public DimensionValue getAdvertiserIdDimensionValue() {
    return advertiserIdDimensionValue;
  }

  public void setAdvertiserIdDimensionValue(DimensionValue advertiserIdDimensionValue) {
    this.advertiserIdDimensionValue = advertiserIdDimensionValue;
  }


  public TargetableRemarketingList description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Targetable remarketing list description.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public TargetableRemarketingList id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Targetable remarketing list ID.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TargetableRemarketingList kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;dfareporting#targetableRemarketingList\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public TargetableRemarketingList lifeSpan(String lifeSpan) {
    this.lifeSpan = lifeSpan;
    return this;
  }

  /**
   * Number of days that a user should remain in the targetable remarketing list without an impression.
   * @return lifeSpan
   */
  @javax.annotation.Nullable
  public String getLifeSpan() {
    return lifeSpan;
  }

  public void setLifeSpan(String lifeSpan) {
    this.lifeSpan = lifeSpan;
  }


  public TargetableRemarketingList listSize(String listSize) {
    this.listSize = listSize;
    return this;
  }

  /**
   * Number of users currently in the list. This is a read-only field.
   * @return listSize
   */
  @javax.annotation.Nullable
  public String getListSize() {
    return listSize;
  }

  public void setListSize(String listSize) {
    this.listSize = listSize;
  }


  public TargetableRemarketingList listSource(ListSourceEnum listSource) {
    this.listSource = listSource;
    return this;
  }

  /**
   * Product from which this targetable remarketing list was originated.
   * @return listSource
   */
  @javax.annotation.Nullable
  public ListSourceEnum getListSource() {
    return listSource;
  }

  public void setListSource(ListSourceEnum listSource) {
    this.listSource = listSource;
  }


  public TargetableRemarketingList name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the targetable remarketing list. Is no greater than 128 characters long.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TargetableRemarketingList subaccountId(String subaccountId) {
    this.subaccountId = subaccountId;
    return this;
  }

  /**
   * Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.
   * @return subaccountId
   */
  @javax.annotation.Nullable
  public String getSubaccountId() {
    return subaccountId;
  }

  public void setSubaccountId(String subaccountId) {
    this.subaccountId = subaccountId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TargetableRemarketingList targetableRemarketingList = (TargetableRemarketingList) o;
    return Objects.equals(this.accountId, targetableRemarketingList.accountId) &&
        Objects.equals(this.active, targetableRemarketingList.active) &&
        Objects.equals(this.advertiserId, targetableRemarketingList.advertiserId) &&
        Objects.equals(this.advertiserIdDimensionValue, targetableRemarketingList.advertiserIdDimensionValue) &&
        Objects.equals(this.description, targetableRemarketingList.description) &&
        Objects.equals(this.id, targetableRemarketingList.id) &&
        Objects.equals(this.kind, targetableRemarketingList.kind) &&
        Objects.equals(this.lifeSpan, targetableRemarketingList.lifeSpan) &&
        Objects.equals(this.listSize, targetableRemarketingList.listSize) &&
        Objects.equals(this.listSource, targetableRemarketingList.listSource) &&
        Objects.equals(this.name, targetableRemarketingList.name) &&
        Objects.equals(this.subaccountId, targetableRemarketingList.subaccountId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, active, advertiserId, advertiserIdDimensionValue, description, id, kind, lifeSpan, listSize, listSource, name, subaccountId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TargetableRemarketingList {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    advertiserIdDimensionValue: ").append(toIndentedString(advertiserIdDimensionValue)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    lifeSpan: ").append(toIndentedString(lifeSpan)).append("\n");
    sb.append("    listSize: ").append(toIndentedString(listSize)).append("\n");
    sb.append("    listSource: ").append(toIndentedString(listSource)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    subaccountId: ").append(toIndentedString(subaccountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountId");
    openapiFields.add("active");
    openapiFields.add("advertiserId");
    openapiFields.add("advertiserIdDimensionValue");
    openapiFields.add("description");
    openapiFields.add("id");
    openapiFields.add("kind");
    openapiFields.add("lifeSpan");
    openapiFields.add("listSize");
    openapiFields.add("listSource");
    openapiFields.add("name");
    openapiFields.add("subaccountId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TargetableRemarketingList
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TargetableRemarketingList.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TargetableRemarketingList is not found in the empty JSON string", TargetableRemarketingList.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TargetableRemarketingList.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TargetableRemarketingList` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accountId") != null && !jsonObj.get("accountId").isJsonNull()) && !jsonObj.get("accountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountId").toString()));
      }
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      // validate the optional field `advertiserIdDimensionValue`
      if (jsonObj.get("advertiserIdDimensionValue") != null && !jsonObj.get("advertiserIdDimensionValue").isJsonNull()) {
        DimensionValue.validateJsonElement(jsonObj.get("advertiserIdDimensionValue"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      if ((jsonObj.get("lifeSpan") != null && !jsonObj.get("lifeSpan").isJsonNull()) && !jsonObj.get("lifeSpan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lifeSpan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lifeSpan").toString()));
      }
      if ((jsonObj.get("listSize") != null && !jsonObj.get("listSize").isJsonNull()) && !jsonObj.get("listSize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `listSize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("listSize").toString()));
      }
      if ((jsonObj.get("listSource") != null && !jsonObj.get("listSource").isJsonNull()) && !jsonObj.get("listSource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `listSource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("listSource").toString()));
      }
      // validate the optional field `listSource`
      if (jsonObj.get("listSource") != null && !jsonObj.get("listSource").isJsonNull()) {
        ListSourceEnum.validateJsonElement(jsonObj.get("listSource"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("subaccountId") != null && !jsonObj.get("subaccountId").isJsonNull()) && !jsonObj.get("subaccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subaccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subaccountId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TargetableRemarketingList.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TargetableRemarketingList' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TargetableRemarketingList> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TargetableRemarketingList.class));

       return (TypeAdapter<T>) new TypeAdapter<TargetableRemarketingList>() {
           @Override
           public void write(JsonWriter out, TargetableRemarketingList value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TargetableRemarketingList read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TargetableRemarketingList given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TargetableRemarketingList
   * @throws IOException if the JSON string is invalid with respect to TargetableRemarketingList
   */
  public static TargetableRemarketingList fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TargetableRemarketingList.class);
  }

  /**
   * Convert an instance of TargetableRemarketingList to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

