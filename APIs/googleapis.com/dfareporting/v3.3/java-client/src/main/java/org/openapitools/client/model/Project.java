/*
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.client.model.LastModifiedInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains properties of a Planning project.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:31:12.851901-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Project {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  /**
   * Audience age group of this project.
   */
  @JsonAdapter(AudienceAgeGroupEnum.Adapter.class)
  public enum AudienceAgeGroupEnum {
    _18_24("PLANNING_AUDIENCE_AGE_18_24"),
    
    _25_34("PLANNING_AUDIENCE_AGE_25_34"),
    
    _35_44("PLANNING_AUDIENCE_AGE_35_44"),
    
    _45_54("PLANNING_AUDIENCE_AGE_45_54"),
    
    _55_64("PLANNING_AUDIENCE_AGE_55_64"),
    
    _65_OR_MORE("PLANNING_AUDIENCE_AGE_65_OR_MORE"),
    
    UNKNOWN("PLANNING_AUDIENCE_AGE_UNKNOWN");

    private String value;

    AudienceAgeGroupEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AudienceAgeGroupEnum fromValue(String value) {
      for (AudienceAgeGroupEnum b : AudienceAgeGroupEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AudienceAgeGroupEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AudienceAgeGroupEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AudienceAgeGroupEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AudienceAgeGroupEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AudienceAgeGroupEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AUDIENCE_AGE_GROUP = "audienceAgeGroup";
  @SerializedName(SERIALIZED_NAME_AUDIENCE_AGE_GROUP)
  private AudienceAgeGroupEnum audienceAgeGroup;

  /**
   * Audience gender of this project.
   */
  @JsonAdapter(AudienceGenderEnum.Adapter.class)
  public enum AudienceGenderEnum {
    MALE("PLANNING_AUDIENCE_GENDER_MALE"),
    
    FEMALE("PLANNING_AUDIENCE_GENDER_FEMALE");

    private String value;

    AudienceGenderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AudienceGenderEnum fromValue(String value) {
      for (AudienceGenderEnum b : AudienceGenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AudienceGenderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AudienceGenderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AudienceGenderEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AudienceGenderEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AudienceGenderEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AUDIENCE_GENDER = "audienceGender";
  @SerializedName(SERIALIZED_NAME_AUDIENCE_GENDER)
  private AudienceGenderEnum audienceGender;

  public static final String SERIALIZED_NAME_BUDGET = "budget";
  @SerializedName(SERIALIZED_NAME_BUDGET)
  private String budget;

  public static final String SERIALIZED_NAME_CLIENT_BILLING_CODE = "clientBillingCode";
  @SerializedName(SERIALIZED_NAME_CLIENT_BILLING_CODE)
  private String clientBillingCode;

  public static final String SERIALIZED_NAME_CLIENT_NAME = "clientName";
  @SerializedName(SERIALIZED_NAME_CLIENT_NAME)
  private String clientName;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private LocalDate endDate;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_INFO = "lastModifiedInfo";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_INFO)
  private LastModifiedInfo lastModifiedInfo;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OVERVIEW = "overview";
  @SerializedName(SERIALIZED_NAME_OVERVIEW)
  private String overview;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private LocalDate startDate;

  public static final String SERIALIZED_NAME_SUBACCOUNT_ID = "subaccountId";
  @SerializedName(SERIALIZED_NAME_SUBACCOUNT_ID)
  private String subaccountId;

  public static final String SERIALIZED_NAME_TARGET_CLICKS = "targetClicks";
  @SerializedName(SERIALIZED_NAME_TARGET_CLICKS)
  private String targetClicks;

  public static final String SERIALIZED_NAME_TARGET_CONVERSIONS = "targetConversions";
  @SerializedName(SERIALIZED_NAME_TARGET_CONVERSIONS)
  private String targetConversions;

  public static final String SERIALIZED_NAME_TARGET_CPA_NANOS = "targetCpaNanos";
  @SerializedName(SERIALIZED_NAME_TARGET_CPA_NANOS)
  private String targetCpaNanos;

  public static final String SERIALIZED_NAME_TARGET_CPC_NANOS = "targetCpcNanos";
  @SerializedName(SERIALIZED_NAME_TARGET_CPC_NANOS)
  private String targetCpcNanos;

  public static final String SERIALIZED_NAME_TARGET_CPM_ACTIVE_VIEW_NANOS = "targetCpmActiveViewNanos";
  @SerializedName(SERIALIZED_NAME_TARGET_CPM_ACTIVE_VIEW_NANOS)
  private String targetCpmActiveViewNanos;

  public static final String SERIALIZED_NAME_TARGET_CPM_NANOS = "targetCpmNanos";
  @SerializedName(SERIALIZED_NAME_TARGET_CPM_NANOS)
  private String targetCpmNanos;

  public static final String SERIALIZED_NAME_TARGET_IMPRESSIONS = "targetImpressions";
  @SerializedName(SERIALIZED_NAME_TARGET_IMPRESSIONS)
  private String targetImpressions;

  public Project() {
  }

  public Project accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Account ID of this project.
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public Project advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * Advertiser ID of this project.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public Project audienceAgeGroup(AudienceAgeGroupEnum audienceAgeGroup) {
    this.audienceAgeGroup = audienceAgeGroup;
    return this;
  }

  /**
   * Audience age group of this project.
   * @return audienceAgeGroup
   */
  @javax.annotation.Nullable
  public AudienceAgeGroupEnum getAudienceAgeGroup() {
    return audienceAgeGroup;
  }

  public void setAudienceAgeGroup(AudienceAgeGroupEnum audienceAgeGroup) {
    this.audienceAgeGroup = audienceAgeGroup;
  }


  public Project audienceGender(AudienceGenderEnum audienceGender) {
    this.audienceGender = audienceGender;
    return this;
  }

  /**
   * Audience gender of this project.
   * @return audienceGender
   */
  @javax.annotation.Nullable
  public AudienceGenderEnum getAudienceGender() {
    return audienceGender;
  }

  public void setAudienceGender(AudienceGenderEnum audienceGender) {
    this.audienceGender = audienceGender;
  }


  public Project budget(String budget) {
    this.budget = budget;
    return this;
  }

  /**
   * Budget of this project in the currency specified by the current account. The value stored in this field represents only the non-fractional amount. For example, for USD, the smallest value that can be represented by this field is 1 US dollar.
   * @return budget
   */
  @javax.annotation.Nullable
  public String getBudget() {
    return budget;
  }

  public void setBudget(String budget) {
    this.budget = budget;
  }


  public Project clientBillingCode(String clientBillingCode) {
    this.clientBillingCode = clientBillingCode;
    return this;
  }

  /**
   * Client billing code of this project.
   * @return clientBillingCode
   */
  @javax.annotation.Nullable
  public String getClientBillingCode() {
    return clientBillingCode;
  }

  public void setClientBillingCode(String clientBillingCode) {
    this.clientBillingCode = clientBillingCode;
  }


  public Project clientName(String clientName) {
    this.clientName = clientName;
    return this;
  }

  /**
   * Name of the project client.
   * @return clientName
   */
  @javax.annotation.Nullable
  public String getClientName() {
    return clientName;
  }

  public void setClientName(String clientName) {
    this.clientName = clientName;
  }


  public Project endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nullable
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }


  public Project id(String id) {
    this.id = id;
    return this;
  }

  /**
   * ID of this project. This is a read-only, auto-generated field.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Project kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;dfareporting#project\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public Project lastModifiedInfo(LastModifiedInfo lastModifiedInfo) {
    this.lastModifiedInfo = lastModifiedInfo;
    return this;
  }

  /**
   * Get lastModifiedInfo
   * @return lastModifiedInfo
   */
  @javax.annotation.Nullable
  public LastModifiedInfo getLastModifiedInfo() {
    return lastModifiedInfo;
  }

  public void setLastModifiedInfo(LastModifiedInfo lastModifiedInfo) {
    this.lastModifiedInfo = lastModifiedInfo;
  }


  public Project name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of this project.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Project overview(String overview) {
    this.overview = overview;
    return this;
  }

  /**
   * Overview of this project.
   * @return overview
   */
  @javax.annotation.Nullable
  public String getOverview() {
    return overview;
  }

  public void setOverview(String overview) {
    this.overview = overview;
  }


  public Project startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }


  public Project subaccountId(String subaccountId) {
    this.subaccountId = subaccountId;
    return this;
  }

  /**
   * Subaccount ID of this project.
   * @return subaccountId
   */
  @javax.annotation.Nullable
  public String getSubaccountId() {
    return subaccountId;
  }

  public void setSubaccountId(String subaccountId) {
    this.subaccountId = subaccountId;
  }


  public Project targetClicks(String targetClicks) {
    this.targetClicks = targetClicks;
    return this;
  }

  /**
   * Number of clicks that the advertiser is targeting.
   * @return targetClicks
   */
  @javax.annotation.Nullable
  public String getTargetClicks() {
    return targetClicks;
  }

  public void setTargetClicks(String targetClicks) {
    this.targetClicks = targetClicks;
  }


  public Project targetConversions(String targetConversions) {
    this.targetConversions = targetConversions;
    return this;
  }

  /**
   * Number of conversions that the advertiser is targeting.
   * @return targetConversions
   */
  @javax.annotation.Nullable
  public String getTargetConversions() {
    return targetConversions;
  }

  public void setTargetConversions(String targetConversions) {
    this.targetConversions = targetConversions;
  }


  public Project targetCpaNanos(String targetCpaNanos) {
    this.targetCpaNanos = targetCpaNanos;
    return this;
  }

  /**
   * CPA that the advertiser is targeting.
   * @return targetCpaNanos
   */
  @javax.annotation.Nullable
  public String getTargetCpaNanos() {
    return targetCpaNanos;
  }

  public void setTargetCpaNanos(String targetCpaNanos) {
    this.targetCpaNanos = targetCpaNanos;
  }


  public Project targetCpcNanos(String targetCpcNanos) {
    this.targetCpcNanos = targetCpcNanos;
    return this;
  }

  /**
   * CPC that the advertiser is targeting.
   * @return targetCpcNanos
   */
  @javax.annotation.Nullable
  public String getTargetCpcNanos() {
    return targetCpcNanos;
  }

  public void setTargetCpcNanos(String targetCpcNanos) {
    this.targetCpcNanos = targetCpcNanos;
  }


  public Project targetCpmActiveViewNanos(String targetCpmActiveViewNanos) {
    this.targetCpmActiveViewNanos = targetCpmActiveViewNanos;
    return this;
  }

  /**
   * vCPM from Active View that the advertiser is targeting.
   * @return targetCpmActiveViewNanos
   */
  @javax.annotation.Nullable
  public String getTargetCpmActiveViewNanos() {
    return targetCpmActiveViewNanos;
  }

  public void setTargetCpmActiveViewNanos(String targetCpmActiveViewNanos) {
    this.targetCpmActiveViewNanos = targetCpmActiveViewNanos;
  }


  public Project targetCpmNanos(String targetCpmNanos) {
    this.targetCpmNanos = targetCpmNanos;
    return this;
  }

  /**
   * CPM that the advertiser is targeting.
   * @return targetCpmNanos
   */
  @javax.annotation.Nullable
  public String getTargetCpmNanos() {
    return targetCpmNanos;
  }

  public void setTargetCpmNanos(String targetCpmNanos) {
    this.targetCpmNanos = targetCpmNanos;
  }


  public Project targetImpressions(String targetImpressions) {
    this.targetImpressions = targetImpressions;
    return this;
  }

  /**
   * Number of impressions that the advertiser is targeting.
   * @return targetImpressions
   */
  @javax.annotation.Nullable
  public String getTargetImpressions() {
    return targetImpressions;
  }

  public void setTargetImpressions(String targetImpressions) {
    this.targetImpressions = targetImpressions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Project project = (Project) o;
    return Objects.equals(this.accountId, project.accountId) &&
        Objects.equals(this.advertiserId, project.advertiserId) &&
        Objects.equals(this.audienceAgeGroup, project.audienceAgeGroup) &&
        Objects.equals(this.audienceGender, project.audienceGender) &&
        Objects.equals(this.budget, project.budget) &&
        Objects.equals(this.clientBillingCode, project.clientBillingCode) &&
        Objects.equals(this.clientName, project.clientName) &&
        Objects.equals(this.endDate, project.endDate) &&
        Objects.equals(this.id, project.id) &&
        Objects.equals(this.kind, project.kind) &&
        Objects.equals(this.lastModifiedInfo, project.lastModifiedInfo) &&
        Objects.equals(this.name, project.name) &&
        Objects.equals(this.overview, project.overview) &&
        Objects.equals(this.startDate, project.startDate) &&
        Objects.equals(this.subaccountId, project.subaccountId) &&
        Objects.equals(this.targetClicks, project.targetClicks) &&
        Objects.equals(this.targetConversions, project.targetConversions) &&
        Objects.equals(this.targetCpaNanos, project.targetCpaNanos) &&
        Objects.equals(this.targetCpcNanos, project.targetCpcNanos) &&
        Objects.equals(this.targetCpmActiveViewNanos, project.targetCpmActiveViewNanos) &&
        Objects.equals(this.targetCpmNanos, project.targetCpmNanos) &&
        Objects.equals(this.targetImpressions, project.targetImpressions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, advertiserId, audienceAgeGroup, audienceGender, budget, clientBillingCode, clientName, endDate, id, kind, lastModifiedInfo, name, overview, startDate, subaccountId, targetClicks, targetConversions, targetCpaNanos, targetCpcNanos, targetCpmActiveViewNanos, targetCpmNanos, targetImpressions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Project {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    audienceAgeGroup: ").append(toIndentedString(audienceAgeGroup)).append("\n");
    sb.append("    audienceGender: ").append(toIndentedString(audienceGender)).append("\n");
    sb.append("    budget: ").append(toIndentedString(budget)).append("\n");
    sb.append("    clientBillingCode: ").append(toIndentedString(clientBillingCode)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    lastModifiedInfo: ").append(toIndentedString(lastModifiedInfo)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    overview: ").append(toIndentedString(overview)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    subaccountId: ").append(toIndentedString(subaccountId)).append("\n");
    sb.append("    targetClicks: ").append(toIndentedString(targetClicks)).append("\n");
    sb.append("    targetConversions: ").append(toIndentedString(targetConversions)).append("\n");
    sb.append("    targetCpaNanos: ").append(toIndentedString(targetCpaNanos)).append("\n");
    sb.append("    targetCpcNanos: ").append(toIndentedString(targetCpcNanos)).append("\n");
    sb.append("    targetCpmActiveViewNanos: ").append(toIndentedString(targetCpmActiveViewNanos)).append("\n");
    sb.append("    targetCpmNanos: ").append(toIndentedString(targetCpmNanos)).append("\n");
    sb.append("    targetImpressions: ").append(toIndentedString(targetImpressions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountId");
    openapiFields.add("advertiserId");
    openapiFields.add("audienceAgeGroup");
    openapiFields.add("audienceGender");
    openapiFields.add("budget");
    openapiFields.add("clientBillingCode");
    openapiFields.add("clientName");
    openapiFields.add("endDate");
    openapiFields.add("id");
    openapiFields.add("kind");
    openapiFields.add("lastModifiedInfo");
    openapiFields.add("name");
    openapiFields.add("overview");
    openapiFields.add("startDate");
    openapiFields.add("subaccountId");
    openapiFields.add("targetClicks");
    openapiFields.add("targetConversions");
    openapiFields.add("targetCpaNanos");
    openapiFields.add("targetCpcNanos");
    openapiFields.add("targetCpmActiveViewNanos");
    openapiFields.add("targetCpmNanos");
    openapiFields.add("targetImpressions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Project
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Project.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Project is not found in the empty JSON string", Project.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Project.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Project` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accountId") != null && !jsonObj.get("accountId").isJsonNull()) && !jsonObj.get("accountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountId").toString()));
      }
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      if ((jsonObj.get("audienceAgeGroup") != null && !jsonObj.get("audienceAgeGroup").isJsonNull()) && !jsonObj.get("audienceAgeGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audienceAgeGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audienceAgeGroup").toString()));
      }
      // validate the optional field `audienceAgeGroup`
      if (jsonObj.get("audienceAgeGroup") != null && !jsonObj.get("audienceAgeGroup").isJsonNull()) {
        AudienceAgeGroupEnum.validateJsonElement(jsonObj.get("audienceAgeGroup"));
      }
      if ((jsonObj.get("audienceGender") != null && !jsonObj.get("audienceGender").isJsonNull()) && !jsonObj.get("audienceGender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audienceGender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audienceGender").toString()));
      }
      // validate the optional field `audienceGender`
      if (jsonObj.get("audienceGender") != null && !jsonObj.get("audienceGender").isJsonNull()) {
        AudienceGenderEnum.validateJsonElement(jsonObj.get("audienceGender"));
      }
      if ((jsonObj.get("budget") != null && !jsonObj.get("budget").isJsonNull()) && !jsonObj.get("budget").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `budget` to be a primitive type in the JSON string but got `%s`", jsonObj.get("budget").toString()));
      }
      if ((jsonObj.get("clientBillingCode") != null && !jsonObj.get("clientBillingCode").isJsonNull()) && !jsonObj.get("clientBillingCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientBillingCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientBillingCode").toString()));
      }
      if ((jsonObj.get("clientName") != null && !jsonObj.get("clientName").isJsonNull()) && !jsonObj.get("clientName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientName").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // validate the optional field `lastModifiedInfo`
      if (jsonObj.get("lastModifiedInfo") != null && !jsonObj.get("lastModifiedInfo").isJsonNull()) {
        LastModifiedInfo.validateJsonElement(jsonObj.get("lastModifiedInfo"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("overview") != null && !jsonObj.get("overview").isJsonNull()) && !jsonObj.get("overview").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `overview` to be a primitive type in the JSON string but got `%s`", jsonObj.get("overview").toString()));
      }
      if ((jsonObj.get("subaccountId") != null && !jsonObj.get("subaccountId").isJsonNull()) && !jsonObj.get("subaccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subaccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subaccountId").toString()));
      }
      if ((jsonObj.get("targetClicks") != null && !jsonObj.get("targetClicks").isJsonNull()) && !jsonObj.get("targetClicks").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetClicks` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetClicks").toString()));
      }
      if ((jsonObj.get("targetConversions") != null && !jsonObj.get("targetConversions").isJsonNull()) && !jsonObj.get("targetConversions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetConversions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetConversions").toString()));
      }
      if ((jsonObj.get("targetCpaNanos") != null && !jsonObj.get("targetCpaNanos").isJsonNull()) && !jsonObj.get("targetCpaNanos").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetCpaNanos` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetCpaNanos").toString()));
      }
      if ((jsonObj.get("targetCpcNanos") != null && !jsonObj.get("targetCpcNanos").isJsonNull()) && !jsonObj.get("targetCpcNanos").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetCpcNanos` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetCpcNanos").toString()));
      }
      if ((jsonObj.get("targetCpmActiveViewNanos") != null && !jsonObj.get("targetCpmActiveViewNanos").isJsonNull()) && !jsonObj.get("targetCpmActiveViewNanos").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetCpmActiveViewNanos` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetCpmActiveViewNanos").toString()));
      }
      if ((jsonObj.get("targetCpmNanos") != null && !jsonObj.get("targetCpmNanos").isJsonNull()) && !jsonObj.get("targetCpmNanos").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetCpmNanos` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetCpmNanos").toString()));
      }
      if ((jsonObj.get("targetImpressions") != null && !jsonObj.get("targetImpressions").isJsonNull()) && !jsonObj.get("targetImpressions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetImpressions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetImpressions").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Project.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Project' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Project> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Project.class));

       return (TypeAdapter<T>) new TypeAdapter<Project>() {
           @Override
           public void write(JsonWriter out, Project value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Project read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Project given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Project
   * @throws IOException if the JSON string is invalid with respect to Project
   */
  public static Project fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Project.class);
  }

  /**
   * Convert an instance of Project to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

