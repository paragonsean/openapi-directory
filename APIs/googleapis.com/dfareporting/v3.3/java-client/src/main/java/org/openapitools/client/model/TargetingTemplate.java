/*
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DayPartTargeting;
import org.openapitools.client.model.DimensionValue;
import org.openapitools.client.model.GeoTargeting;
import org.openapitools.client.model.KeyValueTargetingExpression;
import org.openapitools.client.model.LanguageTargeting;
import org.openapitools.client.model.ListTargetingExpression;
import org.openapitools.client.model.TechnologyTargeting;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains properties of a targeting template. A targeting template encapsulates targeting information which can be reused across multiple ads.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:31:12.851901-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TargetingTemplate {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_ADVERTISER_ID_DIMENSION_VALUE = "advertiserIdDimensionValue";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID_DIMENSION_VALUE)
  private DimensionValue advertiserIdDimensionValue;

  public static final String SERIALIZED_NAME_DAY_PART_TARGETING = "dayPartTargeting";
  @SerializedName(SERIALIZED_NAME_DAY_PART_TARGETING)
  private DayPartTargeting dayPartTargeting;

  public static final String SERIALIZED_NAME_GEO_TARGETING = "geoTargeting";
  @SerializedName(SERIALIZED_NAME_GEO_TARGETING)
  private GeoTargeting geoTargeting;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_KEY_VALUE_TARGETING_EXPRESSION = "keyValueTargetingExpression";
  @SerializedName(SERIALIZED_NAME_KEY_VALUE_TARGETING_EXPRESSION)
  private KeyValueTargetingExpression keyValueTargetingExpression;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_LANGUAGE_TARGETING = "languageTargeting";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_TARGETING)
  private LanguageTargeting languageTargeting;

  public static final String SERIALIZED_NAME_LIST_TARGETING_EXPRESSION = "listTargetingExpression";
  @SerializedName(SERIALIZED_NAME_LIST_TARGETING_EXPRESSION)
  private ListTargetingExpression listTargetingExpression;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SUBACCOUNT_ID = "subaccountId";
  @SerializedName(SERIALIZED_NAME_SUBACCOUNT_ID)
  private String subaccountId;

  public static final String SERIALIZED_NAME_TECHNOLOGY_TARGETING = "technologyTargeting";
  @SerializedName(SERIALIZED_NAME_TECHNOLOGY_TARGETING)
  private TechnologyTargeting technologyTargeting;

  public TargetingTemplate() {
  }

  public TargetingTemplate accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Account ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert.
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public TargetingTemplate advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * Advertiser ID of this targeting template. This is a required field on insert and is read-only after insert.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public TargetingTemplate advertiserIdDimensionValue(DimensionValue advertiserIdDimensionValue) {
    this.advertiserIdDimensionValue = advertiserIdDimensionValue;
    return this;
  }

  /**
   * Get advertiserIdDimensionValue
   * @return advertiserIdDimensionValue
   */
  @javax.annotation.Nullable
  public DimensionValue getAdvertiserIdDimensionValue() {
    return advertiserIdDimensionValue;
  }

  public void setAdvertiserIdDimensionValue(DimensionValue advertiserIdDimensionValue) {
    this.advertiserIdDimensionValue = advertiserIdDimensionValue;
  }


  public TargetingTemplate dayPartTargeting(DayPartTargeting dayPartTargeting) {
    this.dayPartTargeting = dayPartTargeting;
    return this;
  }

  /**
   * Get dayPartTargeting
   * @return dayPartTargeting
   */
  @javax.annotation.Nullable
  public DayPartTargeting getDayPartTargeting() {
    return dayPartTargeting;
  }

  public void setDayPartTargeting(DayPartTargeting dayPartTargeting) {
    this.dayPartTargeting = dayPartTargeting;
  }


  public TargetingTemplate geoTargeting(GeoTargeting geoTargeting) {
    this.geoTargeting = geoTargeting;
    return this;
  }

  /**
   * Get geoTargeting
   * @return geoTargeting
   */
  @javax.annotation.Nullable
  public GeoTargeting getGeoTargeting() {
    return geoTargeting;
  }

  public void setGeoTargeting(GeoTargeting geoTargeting) {
    this.geoTargeting = geoTargeting;
  }


  public TargetingTemplate id(String id) {
    this.id = id;
    return this;
  }

  /**
   * ID of this targeting template. This is a read-only, auto-generated field.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TargetingTemplate keyValueTargetingExpression(KeyValueTargetingExpression keyValueTargetingExpression) {
    this.keyValueTargetingExpression = keyValueTargetingExpression;
    return this;
  }

  /**
   * Get keyValueTargetingExpression
   * @return keyValueTargetingExpression
   */
  @javax.annotation.Nullable
  public KeyValueTargetingExpression getKeyValueTargetingExpression() {
    return keyValueTargetingExpression;
  }

  public void setKeyValueTargetingExpression(KeyValueTargetingExpression keyValueTargetingExpression) {
    this.keyValueTargetingExpression = keyValueTargetingExpression;
  }


  public TargetingTemplate kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;dfareporting#targetingTemplate\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public TargetingTemplate languageTargeting(LanguageTargeting languageTargeting) {
    this.languageTargeting = languageTargeting;
    return this;
  }

  /**
   * Get languageTargeting
   * @return languageTargeting
   */
  @javax.annotation.Nullable
  public LanguageTargeting getLanguageTargeting() {
    return languageTargeting;
  }

  public void setLanguageTargeting(LanguageTargeting languageTargeting) {
    this.languageTargeting = languageTargeting;
  }


  public TargetingTemplate listTargetingExpression(ListTargetingExpression listTargetingExpression) {
    this.listTargetingExpression = listTargetingExpression;
    return this;
  }

  /**
   * Get listTargetingExpression
   * @return listTargetingExpression
   */
  @javax.annotation.Nullable
  public ListTargetingExpression getListTargetingExpression() {
    return listTargetingExpression;
  }

  public void setListTargetingExpression(ListTargetingExpression listTargetingExpression) {
    this.listTargetingExpression = listTargetingExpression;
  }


  public TargetingTemplate name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of this targeting template. This field is required. It must be less than 256 characters long and unique within an advertiser.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TargetingTemplate subaccountId(String subaccountId) {
    this.subaccountId = subaccountId;
    return this;
  }

  /**
   * Subaccount ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert.
   * @return subaccountId
   */
  @javax.annotation.Nullable
  public String getSubaccountId() {
    return subaccountId;
  }

  public void setSubaccountId(String subaccountId) {
    this.subaccountId = subaccountId;
  }


  public TargetingTemplate technologyTargeting(TechnologyTargeting technologyTargeting) {
    this.technologyTargeting = technologyTargeting;
    return this;
  }

  /**
   * Get technologyTargeting
   * @return technologyTargeting
   */
  @javax.annotation.Nullable
  public TechnologyTargeting getTechnologyTargeting() {
    return technologyTargeting;
  }

  public void setTechnologyTargeting(TechnologyTargeting technologyTargeting) {
    this.technologyTargeting = technologyTargeting;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TargetingTemplate targetingTemplate = (TargetingTemplate) o;
    return Objects.equals(this.accountId, targetingTemplate.accountId) &&
        Objects.equals(this.advertiserId, targetingTemplate.advertiserId) &&
        Objects.equals(this.advertiserIdDimensionValue, targetingTemplate.advertiserIdDimensionValue) &&
        Objects.equals(this.dayPartTargeting, targetingTemplate.dayPartTargeting) &&
        Objects.equals(this.geoTargeting, targetingTemplate.geoTargeting) &&
        Objects.equals(this.id, targetingTemplate.id) &&
        Objects.equals(this.keyValueTargetingExpression, targetingTemplate.keyValueTargetingExpression) &&
        Objects.equals(this.kind, targetingTemplate.kind) &&
        Objects.equals(this.languageTargeting, targetingTemplate.languageTargeting) &&
        Objects.equals(this.listTargetingExpression, targetingTemplate.listTargetingExpression) &&
        Objects.equals(this.name, targetingTemplate.name) &&
        Objects.equals(this.subaccountId, targetingTemplate.subaccountId) &&
        Objects.equals(this.technologyTargeting, targetingTemplate.technologyTargeting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, advertiserId, advertiserIdDimensionValue, dayPartTargeting, geoTargeting, id, keyValueTargetingExpression, kind, languageTargeting, listTargetingExpression, name, subaccountId, technologyTargeting);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TargetingTemplate {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    advertiserIdDimensionValue: ").append(toIndentedString(advertiserIdDimensionValue)).append("\n");
    sb.append("    dayPartTargeting: ").append(toIndentedString(dayPartTargeting)).append("\n");
    sb.append("    geoTargeting: ").append(toIndentedString(geoTargeting)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    keyValueTargetingExpression: ").append(toIndentedString(keyValueTargetingExpression)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    languageTargeting: ").append(toIndentedString(languageTargeting)).append("\n");
    sb.append("    listTargetingExpression: ").append(toIndentedString(listTargetingExpression)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    subaccountId: ").append(toIndentedString(subaccountId)).append("\n");
    sb.append("    technologyTargeting: ").append(toIndentedString(technologyTargeting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountId");
    openapiFields.add("advertiserId");
    openapiFields.add("advertiserIdDimensionValue");
    openapiFields.add("dayPartTargeting");
    openapiFields.add("geoTargeting");
    openapiFields.add("id");
    openapiFields.add("keyValueTargetingExpression");
    openapiFields.add("kind");
    openapiFields.add("languageTargeting");
    openapiFields.add("listTargetingExpression");
    openapiFields.add("name");
    openapiFields.add("subaccountId");
    openapiFields.add("technologyTargeting");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TargetingTemplate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TargetingTemplate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TargetingTemplate is not found in the empty JSON string", TargetingTemplate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TargetingTemplate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TargetingTemplate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accountId") != null && !jsonObj.get("accountId").isJsonNull()) && !jsonObj.get("accountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountId").toString()));
      }
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      // validate the optional field `advertiserIdDimensionValue`
      if (jsonObj.get("advertiserIdDimensionValue") != null && !jsonObj.get("advertiserIdDimensionValue").isJsonNull()) {
        DimensionValue.validateJsonElement(jsonObj.get("advertiserIdDimensionValue"));
      }
      // validate the optional field `dayPartTargeting`
      if (jsonObj.get("dayPartTargeting") != null && !jsonObj.get("dayPartTargeting").isJsonNull()) {
        DayPartTargeting.validateJsonElement(jsonObj.get("dayPartTargeting"));
      }
      // validate the optional field `geoTargeting`
      if (jsonObj.get("geoTargeting") != null && !jsonObj.get("geoTargeting").isJsonNull()) {
        GeoTargeting.validateJsonElement(jsonObj.get("geoTargeting"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `keyValueTargetingExpression`
      if (jsonObj.get("keyValueTargetingExpression") != null && !jsonObj.get("keyValueTargetingExpression").isJsonNull()) {
        KeyValueTargetingExpression.validateJsonElement(jsonObj.get("keyValueTargetingExpression"));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // validate the optional field `languageTargeting`
      if (jsonObj.get("languageTargeting") != null && !jsonObj.get("languageTargeting").isJsonNull()) {
        LanguageTargeting.validateJsonElement(jsonObj.get("languageTargeting"));
      }
      // validate the optional field `listTargetingExpression`
      if (jsonObj.get("listTargetingExpression") != null && !jsonObj.get("listTargetingExpression").isJsonNull()) {
        ListTargetingExpression.validateJsonElement(jsonObj.get("listTargetingExpression"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("subaccountId") != null && !jsonObj.get("subaccountId").isJsonNull()) && !jsonObj.get("subaccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subaccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subaccountId").toString()));
      }
      // validate the optional field `technologyTargeting`
      if (jsonObj.get("technologyTargeting") != null && !jsonObj.get("technologyTargeting").isJsonNull()) {
        TechnologyTargeting.validateJsonElement(jsonObj.get("technologyTargeting"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TargetingTemplate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TargetingTemplate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TargetingTemplate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TargetingTemplate.class));

       return (TypeAdapter<T>) new TypeAdapter<TargetingTemplate>() {
           @Override
           public void write(JsonWriter out, TargetingTemplate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TargetingTemplate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TargetingTemplate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TargetingTemplate
   * @throws IOException if the JSON string is invalid with respect to TargetingTemplate
   */
  public static TargetingTemplate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TargetingTemplate.class);
  }

  /**
   * Convert an instance of TargetingTemplate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

