/*
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Gets a summary of active ads in an account.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:31:12.851901-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccountActiveAdSummary {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_ACTIVE_ADS = "activeAds";
  @SerializedName(SERIALIZED_NAME_ACTIVE_ADS)
  private String activeAds;

  /**
   * Maximum number of active ads allowed for the account.
   */
  @JsonAdapter(ActiveAdsLimitTierEnum.Adapter.class)
  public enum ActiveAdsLimitTierEnum {
    _40_K("ACTIVE_ADS_TIER_40K"),
    
    _75_K("ACTIVE_ADS_TIER_75K"),
    
    _100_K("ACTIVE_ADS_TIER_100K"),
    
    _200_K("ACTIVE_ADS_TIER_200K"),
    
    _300_K("ACTIVE_ADS_TIER_300K"),
    
    _500_K("ACTIVE_ADS_TIER_500K"),
    
    _750_K("ACTIVE_ADS_TIER_750K"),
    
    _1_M("ACTIVE_ADS_TIER_1M");

    private String value;

    ActiveAdsLimitTierEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ActiveAdsLimitTierEnum fromValue(String value) {
      for (ActiveAdsLimitTierEnum b : ActiveAdsLimitTierEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ActiveAdsLimitTierEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActiveAdsLimitTierEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActiveAdsLimitTierEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ActiveAdsLimitTierEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ActiveAdsLimitTierEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ACTIVE_ADS_LIMIT_TIER = "activeAdsLimitTier";
  @SerializedName(SERIALIZED_NAME_ACTIVE_ADS_LIMIT_TIER)
  private ActiveAdsLimitTierEnum activeAdsLimitTier;

  public static final String SERIALIZED_NAME_AVAILABLE_ADS = "availableAds";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_ADS)
  private String availableAds;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public AccountActiveAdSummary() {
  }

  public AccountActiveAdSummary accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * ID of the account.
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public AccountActiveAdSummary activeAds(String activeAds) {
    this.activeAds = activeAds;
    return this;
  }

  /**
   * Ads that have been activated for the account
   * @return activeAds
   */
  @javax.annotation.Nullable
  public String getActiveAds() {
    return activeAds;
  }

  public void setActiveAds(String activeAds) {
    this.activeAds = activeAds;
  }


  public AccountActiveAdSummary activeAdsLimitTier(ActiveAdsLimitTierEnum activeAdsLimitTier) {
    this.activeAdsLimitTier = activeAdsLimitTier;
    return this;
  }

  /**
   * Maximum number of active ads allowed for the account.
   * @return activeAdsLimitTier
   */
  @javax.annotation.Nullable
  public ActiveAdsLimitTierEnum getActiveAdsLimitTier() {
    return activeAdsLimitTier;
  }

  public void setActiveAdsLimitTier(ActiveAdsLimitTierEnum activeAdsLimitTier) {
    this.activeAdsLimitTier = activeAdsLimitTier;
  }


  public AccountActiveAdSummary availableAds(String availableAds) {
    this.availableAds = availableAds;
    return this;
  }

  /**
   * Ads that can be activated for the account.
   * @return availableAds
   */
  @javax.annotation.Nullable
  public String getAvailableAds() {
    return availableAds;
  }

  public void setAvailableAds(String availableAds) {
    this.availableAds = availableAds;
  }


  public AccountActiveAdSummary kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;dfareporting#accountActiveAdSummary\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountActiveAdSummary accountActiveAdSummary = (AccountActiveAdSummary) o;
    return Objects.equals(this.accountId, accountActiveAdSummary.accountId) &&
        Objects.equals(this.activeAds, accountActiveAdSummary.activeAds) &&
        Objects.equals(this.activeAdsLimitTier, accountActiveAdSummary.activeAdsLimitTier) &&
        Objects.equals(this.availableAds, accountActiveAdSummary.availableAds) &&
        Objects.equals(this.kind, accountActiveAdSummary.kind);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, activeAds, activeAdsLimitTier, availableAds, kind);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountActiveAdSummary {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    activeAds: ").append(toIndentedString(activeAds)).append("\n");
    sb.append("    activeAdsLimitTier: ").append(toIndentedString(activeAdsLimitTier)).append("\n");
    sb.append("    availableAds: ").append(toIndentedString(availableAds)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountId");
    openapiFields.add("activeAds");
    openapiFields.add("activeAdsLimitTier");
    openapiFields.add("availableAds");
    openapiFields.add("kind");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountActiveAdSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountActiveAdSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountActiveAdSummary is not found in the empty JSON string", AccountActiveAdSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountActiveAdSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountActiveAdSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accountId") != null && !jsonObj.get("accountId").isJsonNull()) && !jsonObj.get("accountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountId").toString()));
      }
      if ((jsonObj.get("activeAds") != null && !jsonObj.get("activeAds").isJsonNull()) && !jsonObj.get("activeAds").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activeAds` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activeAds").toString()));
      }
      if ((jsonObj.get("activeAdsLimitTier") != null && !jsonObj.get("activeAdsLimitTier").isJsonNull()) && !jsonObj.get("activeAdsLimitTier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activeAdsLimitTier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activeAdsLimitTier").toString()));
      }
      // validate the optional field `activeAdsLimitTier`
      if (jsonObj.get("activeAdsLimitTier") != null && !jsonObj.get("activeAdsLimitTier").isJsonNull()) {
        ActiveAdsLimitTierEnum.validateJsonElement(jsonObj.get("activeAdsLimitTier"));
      }
      if ((jsonObj.get("availableAds") != null && !jsonObj.get("availableAds").isJsonNull()) && !jsonObj.get("availableAds").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `availableAds` to be a primitive type in the JSON string but got `%s`", jsonObj.get("availableAds").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountActiveAdSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountActiveAdSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountActiveAdSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountActiveAdSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountActiveAdSummary>() {
           @Override
           public void write(JsonWriter out, AccountActiveAdSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountActiveAdSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountActiveAdSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountActiveAdSummary
   * @throws IOException if the JSON string is invalid with respect to AccountActiveAdSummary
   */
  public static AccountActiveAdSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountActiveAdSummary.class);
  }

  /**
   * Convert an instance of AccountActiveAdSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

