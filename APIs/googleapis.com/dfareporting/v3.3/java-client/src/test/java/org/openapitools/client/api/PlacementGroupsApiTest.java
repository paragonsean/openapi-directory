/*
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PlacementGroup;
import org.openapitools.client.model.PlacementGroupsListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlacementGroupsApi
 */
@Disabled
public class PlacementGroupsApiTest {

    private final PlacementGroupsApi api = new PlacementGroupsApi();

    /**
     * Gets one placement group by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfareportingPlacementGroupsGetTest() throws ApiException {
        String profileId = null;
        String id = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        PlacementGroup response = api.dfareportingPlacementGroupsGet(profileId, id, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Inserts a new placement group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfareportingPlacementGroupsInsertTest() throws ApiException {
        String profileId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        PlacementGroup placementGroup = null;
        PlacementGroup response = api.dfareportingPlacementGroupsInsert(profileId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, placementGroup);
        // TODO: test validations
    }

    /**
     * Retrieves a list of placement groups, possibly filtered. This method supports paging.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfareportingPlacementGroupsListTest() throws ApiException {
        String profileId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        List<String> advertiserIds = null;
        Boolean archived = null;
        List<String> campaignIds = null;
        List<String> contentCategoryIds = null;
        List<String> directorySiteIds = null;
        List<String> ids = null;
        String maxEndDate = null;
        Integer maxResults = null;
        String maxStartDate = null;
        String minEndDate = null;
        String minStartDate = null;
        String pageToken = null;
        String placementGroupType = null;
        List<String> placementStrategyIds = null;
        List<String> pricingTypes = null;
        String searchString = null;
        List<String> siteIds = null;
        String sortField = null;
        String sortOrder = null;
        PlacementGroupsListResponse response = api.dfareportingPlacementGroupsList(profileId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, advertiserIds, archived, campaignIds, contentCategoryIds, directorySiteIds, ids, maxEndDate, maxResults, maxStartDate, minEndDate, minStartDate, pageToken, placementGroupType, placementStrategyIds, pricingTypes, searchString, siteIds, sortField, sortOrder);
        // TODO: test validations
    }

    /**
     * Updates an existing placement group. This method supports patch semantics.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfareportingPlacementGroupsPatchTest() throws ApiException {
        String profileId = null;
        String id = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        PlacementGroup placementGroup = null;
        PlacementGroup response = api.dfareportingPlacementGroupsPatch(profileId, id, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, placementGroup);
        // TODO: test validations
    }

    /**
     * Updates an existing placement group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfareportingPlacementGroupsUpdateTest() throws ApiException {
        String profileId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        PlacementGroup placementGroup = null;
        PlacementGroup response = api.dfareportingPlacementGroupsUpdate(profileId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, placementGroup);
        // TODO: test validations
    }

}
