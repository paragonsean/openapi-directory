/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProject::OAIProject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProject::OAIProject() {
    this->initializeModel();
}

OAIProject::~OAIProject() {}

void OAIProject::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_advertiser_id_isSet = false;
    m_advertiser_id_isValid = false;

    m_audience_age_group_isSet = false;
    m_audience_age_group_isValid = false;

    m_audience_gender_isSet = false;
    m_audience_gender_isValid = false;

    m_budget_isSet = false;
    m_budget_isValid = false;

    m_client_billing_code_isSet = false;
    m_client_billing_code_isValid = false;

    m_client_name_isSet = false;
    m_client_name_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_last_modified_info_isSet = false;
    m_last_modified_info_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_overview_isSet = false;
    m_overview_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_subaccount_id_isSet = false;
    m_subaccount_id_isValid = false;

    m_target_clicks_isSet = false;
    m_target_clicks_isValid = false;

    m_target_conversions_isSet = false;
    m_target_conversions_isValid = false;

    m_target_cpa_nanos_isSet = false;
    m_target_cpa_nanos_isValid = false;

    m_target_cpc_nanos_isSet = false;
    m_target_cpc_nanos_isValid = false;

    m_target_cpm_active_view_nanos_isSet = false;
    m_target_cpm_active_view_nanos_isValid = false;

    m_target_cpm_nanos_isSet = false;
    m_target_cpm_nanos_isValid = false;

    m_target_impressions_isSet = false;
    m_target_impressions_isValid = false;
}

void OAIProject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProject::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_advertiser_id_isValid = ::OpenAPI::fromJsonValue(m_advertiser_id, json[QString("advertiserId")]);
    m_advertiser_id_isSet = !json[QString("advertiserId")].isNull() && m_advertiser_id_isValid;

    m_audience_age_group_isValid = ::OpenAPI::fromJsonValue(m_audience_age_group, json[QString("audienceAgeGroup")]);
    m_audience_age_group_isSet = !json[QString("audienceAgeGroup")].isNull() && m_audience_age_group_isValid;

    m_audience_gender_isValid = ::OpenAPI::fromJsonValue(m_audience_gender, json[QString("audienceGender")]);
    m_audience_gender_isSet = !json[QString("audienceGender")].isNull() && m_audience_gender_isValid;

    m_budget_isValid = ::OpenAPI::fromJsonValue(m_budget, json[QString("budget")]);
    m_budget_isSet = !json[QString("budget")].isNull() && m_budget_isValid;

    m_client_billing_code_isValid = ::OpenAPI::fromJsonValue(m_client_billing_code, json[QString("clientBillingCode")]);
    m_client_billing_code_isSet = !json[QString("clientBillingCode")].isNull() && m_client_billing_code_isValid;

    m_client_name_isValid = ::OpenAPI::fromJsonValue(m_client_name, json[QString("clientName")]);
    m_client_name_isSet = !json[QString("clientName")].isNull() && m_client_name_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_last_modified_info_isValid = ::OpenAPI::fromJsonValue(m_last_modified_info, json[QString("lastModifiedInfo")]);
    m_last_modified_info_isSet = !json[QString("lastModifiedInfo")].isNull() && m_last_modified_info_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_overview_isValid = ::OpenAPI::fromJsonValue(m_overview, json[QString("overview")]);
    m_overview_isSet = !json[QString("overview")].isNull() && m_overview_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;

    m_subaccount_id_isValid = ::OpenAPI::fromJsonValue(m_subaccount_id, json[QString("subaccountId")]);
    m_subaccount_id_isSet = !json[QString("subaccountId")].isNull() && m_subaccount_id_isValid;

    m_target_clicks_isValid = ::OpenAPI::fromJsonValue(m_target_clicks, json[QString("targetClicks")]);
    m_target_clicks_isSet = !json[QString("targetClicks")].isNull() && m_target_clicks_isValid;

    m_target_conversions_isValid = ::OpenAPI::fromJsonValue(m_target_conversions, json[QString("targetConversions")]);
    m_target_conversions_isSet = !json[QString("targetConversions")].isNull() && m_target_conversions_isValid;

    m_target_cpa_nanos_isValid = ::OpenAPI::fromJsonValue(m_target_cpa_nanos, json[QString("targetCpaNanos")]);
    m_target_cpa_nanos_isSet = !json[QString("targetCpaNanos")].isNull() && m_target_cpa_nanos_isValid;

    m_target_cpc_nanos_isValid = ::OpenAPI::fromJsonValue(m_target_cpc_nanos, json[QString("targetCpcNanos")]);
    m_target_cpc_nanos_isSet = !json[QString("targetCpcNanos")].isNull() && m_target_cpc_nanos_isValid;

    m_target_cpm_active_view_nanos_isValid = ::OpenAPI::fromJsonValue(m_target_cpm_active_view_nanos, json[QString("targetCpmActiveViewNanos")]);
    m_target_cpm_active_view_nanos_isSet = !json[QString("targetCpmActiveViewNanos")].isNull() && m_target_cpm_active_view_nanos_isValid;

    m_target_cpm_nanos_isValid = ::OpenAPI::fromJsonValue(m_target_cpm_nanos, json[QString("targetCpmNanos")]);
    m_target_cpm_nanos_isSet = !json[QString("targetCpmNanos")].isNull() && m_target_cpm_nanos_isValid;

    m_target_impressions_isValid = ::OpenAPI::fromJsonValue(m_target_impressions, json[QString("targetImpressions")]);
    m_target_impressions_isSet = !json[QString("targetImpressions")].isNull() && m_target_impressions_isValid;
}

QString OAIProject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProject::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_advertiser_id_isSet) {
        obj.insert(QString("advertiserId"), ::OpenAPI::toJsonValue(m_advertiser_id));
    }
    if (m_audience_age_group_isSet) {
        obj.insert(QString("audienceAgeGroup"), ::OpenAPI::toJsonValue(m_audience_age_group));
    }
    if (m_audience_gender_isSet) {
        obj.insert(QString("audienceGender"), ::OpenAPI::toJsonValue(m_audience_gender));
    }
    if (m_budget_isSet) {
        obj.insert(QString("budget"), ::OpenAPI::toJsonValue(m_budget));
    }
    if (m_client_billing_code_isSet) {
        obj.insert(QString("clientBillingCode"), ::OpenAPI::toJsonValue(m_client_billing_code));
    }
    if (m_client_name_isSet) {
        obj.insert(QString("clientName"), ::OpenAPI::toJsonValue(m_client_name));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_last_modified_info.isSet()) {
        obj.insert(QString("lastModifiedInfo"), ::OpenAPI::toJsonValue(m_last_modified_info));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_overview_isSet) {
        obj.insert(QString("overview"), ::OpenAPI::toJsonValue(m_overview));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_subaccount_id_isSet) {
        obj.insert(QString("subaccountId"), ::OpenAPI::toJsonValue(m_subaccount_id));
    }
    if (m_target_clicks_isSet) {
        obj.insert(QString("targetClicks"), ::OpenAPI::toJsonValue(m_target_clicks));
    }
    if (m_target_conversions_isSet) {
        obj.insert(QString("targetConversions"), ::OpenAPI::toJsonValue(m_target_conversions));
    }
    if (m_target_cpa_nanos_isSet) {
        obj.insert(QString("targetCpaNanos"), ::OpenAPI::toJsonValue(m_target_cpa_nanos));
    }
    if (m_target_cpc_nanos_isSet) {
        obj.insert(QString("targetCpcNanos"), ::OpenAPI::toJsonValue(m_target_cpc_nanos));
    }
    if (m_target_cpm_active_view_nanos_isSet) {
        obj.insert(QString("targetCpmActiveViewNanos"), ::OpenAPI::toJsonValue(m_target_cpm_active_view_nanos));
    }
    if (m_target_cpm_nanos_isSet) {
        obj.insert(QString("targetCpmNanos"), ::OpenAPI::toJsonValue(m_target_cpm_nanos));
    }
    if (m_target_impressions_isSet) {
        obj.insert(QString("targetImpressions"), ::OpenAPI::toJsonValue(m_target_impressions));
    }
    return obj;
}

QString OAIProject::getAccountId() const {
    return m_account_id;
}
void OAIProject::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIProject::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIProject::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIProject::getAdvertiserId() const {
    return m_advertiser_id;
}
void OAIProject::setAdvertiserId(const QString &advertiser_id) {
    m_advertiser_id = advertiser_id;
    m_advertiser_id_isSet = true;
}

bool OAIProject::is_advertiser_id_Set() const{
    return m_advertiser_id_isSet;
}

bool OAIProject::is_advertiser_id_Valid() const{
    return m_advertiser_id_isValid;
}

QString OAIProject::getAudienceAgeGroup() const {
    return m_audience_age_group;
}
void OAIProject::setAudienceAgeGroup(const QString &audience_age_group) {
    m_audience_age_group = audience_age_group;
    m_audience_age_group_isSet = true;
}

bool OAIProject::is_audience_age_group_Set() const{
    return m_audience_age_group_isSet;
}

bool OAIProject::is_audience_age_group_Valid() const{
    return m_audience_age_group_isValid;
}

QString OAIProject::getAudienceGender() const {
    return m_audience_gender;
}
void OAIProject::setAudienceGender(const QString &audience_gender) {
    m_audience_gender = audience_gender;
    m_audience_gender_isSet = true;
}

bool OAIProject::is_audience_gender_Set() const{
    return m_audience_gender_isSet;
}

bool OAIProject::is_audience_gender_Valid() const{
    return m_audience_gender_isValid;
}

QString OAIProject::getBudget() const {
    return m_budget;
}
void OAIProject::setBudget(const QString &budget) {
    m_budget = budget;
    m_budget_isSet = true;
}

bool OAIProject::is_budget_Set() const{
    return m_budget_isSet;
}

bool OAIProject::is_budget_Valid() const{
    return m_budget_isValid;
}

QString OAIProject::getClientBillingCode() const {
    return m_client_billing_code;
}
void OAIProject::setClientBillingCode(const QString &client_billing_code) {
    m_client_billing_code = client_billing_code;
    m_client_billing_code_isSet = true;
}

bool OAIProject::is_client_billing_code_Set() const{
    return m_client_billing_code_isSet;
}

bool OAIProject::is_client_billing_code_Valid() const{
    return m_client_billing_code_isValid;
}

QString OAIProject::getClientName() const {
    return m_client_name;
}
void OAIProject::setClientName(const QString &client_name) {
    m_client_name = client_name;
    m_client_name_isSet = true;
}

bool OAIProject::is_client_name_Set() const{
    return m_client_name_isSet;
}

bool OAIProject::is_client_name_Valid() const{
    return m_client_name_isValid;
}

QDate OAIProject::getEndDate() const {
    return m_end_date;
}
void OAIProject::setEndDate(const QDate &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIProject::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIProject::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QString OAIProject::getId() const {
    return m_id;
}
void OAIProject::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIProject::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProject::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIProject::getKind() const {
    return m_kind;
}
void OAIProject::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIProject::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIProject::is_kind_Valid() const{
    return m_kind_isValid;
}

OAILastModifiedInfo OAIProject::getLastModifiedInfo() const {
    return m_last_modified_info;
}
void OAIProject::setLastModifiedInfo(const OAILastModifiedInfo &last_modified_info) {
    m_last_modified_info = last_modified_info;
    m_last_modified_info_isSet = true;
}

bool OAIProject::is_last_modified_info_Set() const{
    return m_last_modified_info_isSet;
}

bool OAIProject::is_last_modified_info_Valid() const{
    return m_last_modified_info_isValid;
}

QString OAIProject::getName() const {
    return m_name;
}
void OAIProject::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProject::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProject::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIProject::getOverview() const {
    return m_overview;
}
void OAIProject::setOverview(const QString &overview) {
    m_overview = overview;
    m_overview_isSet = true;
}

bool OAIProject::is_overview_Set() const{
    return m_overview_isSet;
}

bool OAIProject::is_overview_Valid() const{
    return m_overview_isValid;
}

QDate OAIProject::getStartDate() const {
    return m_start_date;
}
void OAIProject::setStartDate(const QDate &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIProject::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIProject::is_start_date_Valid() const{
    return m_start_date_isValid;
}

QString OAIProject::getSubaccountId() const {
    return m_subaccount_id;
}
void OAIProject::setSubaccountId(const QString &subaccount_id) {
    m_subaccount_id = subaccount_id;
    m_subaccount_id_isSet = true;
}

bool OAIProject::is_subaccount_id_Set() const{
    return m_subaccount_id_isSet;
}

bool OAIProject::is_subaccount_id_Valid() const{
    return m_subaccount_id_isValid;
}

QString OAIProject::getTargetClicks() const {
    return m_target_clicks;
}
void OAIProject::setTargetClicks(const QString &target_clicks) {
    m_target_clicks = target_clicks;
    m_target_clicks_isSet = true;
}

bool OAIProject::is_target_clicks_Set() const{
    return m_target_clicks_isSet;
}

bool OAIProject::is_target_clicks_Valid() const{
    return m_target_clicks_isValid;
}

QString OAIProject::getTargetConversions() const {
    return m_target_conversions;
}
void OAIProject::setTargetConversions(const QString &target_conversions) {
    m_target_conversions = target_conversions;
    m_target_conversions_isSet = true;
}

bool OAIProject::is_target_conversions_Set() const{
    return m_target_conversions_isSet;
}

bool OAIProject::is_target_conversions_Valid() const{
    return m_target_conversions_isValid;
}

QString OAIProject::getTargetCpaNanos() const {
    return m_target_cpa_nanos;
}
void OAIProject::setTargetCpaNanos(const QString &target_cpa_nanos) {
    m_target_cpa_nanos = target_cpa_nanos;
    m_target_cpa_nanos_isSet = true;
}

bool OAIProject::is_target_cpa_nanos_Set() const{
    return m_target_cpa_nanos_isSet;
}

bool OAIProject::is_target_cpa_nanos_Valid() const{
    return m_target_cpa_nanos_isValid;
}

QString OAIProject::getTargetCpcNanos() const {
    return m_target_cpc_nanos;
}
void OAIProject::setTargetCpcNanos(const QString &target_cpc_nanos) {
    m_target_cpc_nanos = target_cpc_nanos;
    m_target_cpc_nanos_isSet = true;
}

bool OAIProject::is_target_cpc_nanos_Set() const{
    return m_target_cpc_nanos_isSet;
}

bool OAIProject::is_target_cpc_nanos_Valid() const{
    return m_target_cpc_nanos_isValid;
}

QString OAIProject::getTargetCpmActiveViewNanos() const {
    return m_target_cpm_active_view_nanos;
}
void OAIProject::setTargetCpmActiveViewNanos(const QString &target_cpm_active_view_nanos) {
    m_target_cpm_active_view_nanos = target_cpm_active_view_nanos;
    m_target_cpm_active_view_nanos_isSet = true;
}

bool OAIProject::is_target_cpm_active_view_nanos_Set() const{
    return m_target_cpm_active_view_nanos_isSet;
}

bool OAIProject::is_target_cpm_active_view_nanos_Valid() const{
    return m_target_cpm_active_view_nanos_isValid;
}

QString OAIProject::getTargetCpmNanos() const {
    return m_target_cpm_nanos;
}
void OAIProject::setTargetCpmNanos(const QString &target_cpm_nanos) {
    m_target_cpm_nanos = target_cpm_nanos;
    m_target_cpm_nanos_isSet = true;
}

bool OAIProject::is_target_cpm_nanos_Set() const{
    return m_target_cpm_nanos_isSet;
}

bool OAIProject::is_target_cpm_nanos_Valid() const{
    return m_target_cpm_nanos_isValid;
}

QString OAIProject::getTargetImpressions() const {
    return m_target_impressions;
}
void OAIProject::setTargetImpressions(const QString &target_impressions) {
    m_target_impressions = target_impressions;
    m_target_impressions_isSet = true;
}

bool OAIProject::is_target_impressions_Set() const{
    return m_target_impressions_isSet;
}

bool OAIProject::is_target_impressions_Valid() const{
    return m_target_impressions_isValid;
}

bool OAIProject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advertiser_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_audience_age_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_audience_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_budget_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_billing_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_overview_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subaccount_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_clicks_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_cpa_nanos_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_cpc_nanos_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_cpm_active_view_nanos_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_cpm_nanos_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_impressions_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
