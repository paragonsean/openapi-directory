/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReport_delivery.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReport_delivery::OAIReport_delivery(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReport_delivery::OAIReport_delivery() {
    this->initializeModel();
}

OAIReport_delivery::~OAIReport_delivery() {}

void OAIReport_delivery::initializeModel() {

    m_email_owner_isSet = false;
    m_email_owner_isValid = false;

    m_email_owner_delivery_type_isSet = false;
    m_email_owner_delivery_type_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_recipients_isSet = false;
    m_recipients_isValid = false;
}

void OAIReport_delivery::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReport_delivery::fromJsonObject(QJsonObject json) {

    m_email_owner_isValid = ::OpenAPI::fromJsonValue(m_email_owner, json[QString("emailOwner")]);
    m_email_owner_isSet = !json[QString("emailOwner")].isNull() && m_email_owner_isValid;

    m_email_owner_delivery_type_isValid = ::OpenAPI::fromJsonValue(m_email_owner_delivery_type, json[QString("emailOwnerDeliveryType")]);
    m_email_owner_delivery_type_isSet = !json[QString("emailOwnerDeliveryType")].isNull() && m_email_owner_delivery_type_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_recipients_isValid = ::OpenAPI::fromJsonValue(m_recipients, json[QString("recipients")]);
    m_recipients_isSet = !json[QString("recipients")].isNull() && m_recipients_isValid;
}

QString OAIReport_delivery::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReport_delivery::asJsonObject() const {
    QJsonObject obj;
    if (m_email_owner_isSet) {
        obj.insert(QString("emailOwner"), ::OpenAPI::toJsonValue(m_email_owner));
    }
    if (m_email_owner_delivery_type_isSet) {
        obj.insert(QString("emailOwnerDeliveryType"), ::OpenAPI::toJsonValue(m_email_owner_delivery_type));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_recipients.size() > 0) {
        obj.insert(QString("recipients"), ::OpenAPI::toJsonValue(m_recipients));
    }
    return obj;
}

bool OAIReport_delivery::isEmailOwner() const {
    return m_email_owner;
}
void OAIReport_delivery::setEmailOwner(const bool &email_owner) {
    m_email_owner = email_owner;
    m_email_owner_isSet = true;
}

bool OAIReport_delivery::is_email_owner_Set() const{
    return m_email_owner_isSet;
}

bool OAIReport_delivery::is_email_owner_Valid() const{
    return m_email_owner_isValid;
}

QString OAIReport_delivery::getEmailOwnerDeliveryType() const {
    return m_email_owner_delivery_type;
}
void OAIReport_delivery::setEmailOwnerDeliveryType(const QString &email_owner_delivery_type) {
    m_email_owner_delivery_type = email_owner_delivery_type;
    m_email_owner_delivery_type_isSet = true;
}

bool OAIReport_delivery::is_email_owner_delivery_type_Set() const{
    return m_email_owner_delivery_type_isSet;
}

bool OAIReport_delivery::is_email_owner_delivery_type_Valid() const{
    return m_email_owner_delivery_type_isValid;
}

QString OAIReport_delivery::getMessage() const {
    return m_message;
}
void OAIReport_delivery::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIReport_delivery::is_message_Set() const{
    return m_message_isSet;
}

bool OAIReport_delivery::is_message_Valid() const{
    return m_message_isValid;
}

QList<OAIRecipient> OAIReport_delivery::getRecipients() const {
    return m_recipients;
}
void OAIReport_delivery::setRecipients(const QList<OAIRecipient> &recipients) {
    m_recipients = recipients;
    m_recipients_isSet = true;
}

bool OAIReport_delivery::is_recipients_Set() const{
    return m_recipients_isSet;
}

bool OAIReport_delivery::is_recipients_Valid() const{
    return m_recipients_isValid;
}

bool OAIReport_delivery::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_owner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_owner_delivery_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipients.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReport_delivery::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
