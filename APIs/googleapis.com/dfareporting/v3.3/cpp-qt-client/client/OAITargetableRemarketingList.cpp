/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITargetableRemarketingList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITargetableRemarketingList::OAITargetableRemarketingList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITargetableRemarketingList::OAITargetableRemarketingList() {
    this->initializeModel();
}

OAITargetableRemarketingList::~OAITargetableRemarketingList() {}

void OAITargetableRemarketingList::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_active_isSet = false;
    m_active_isValid = false;

    m_advertiser_id_isSet = false;
    m_advertiser_id_isValid = false;

    m_advertiser_id_dimension_value_isSet = false;
    m_advertiser_id_dimension_value_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_life_span_isSet = false;
    m_life_span_isValid = false;

    m_list_size_isSet = false;
    m_list_size_isValid = false;

    m_list_source_isSet = false;
    m_list_source_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_subaccount_id_isSet = false;
    m_subaccount_id_isValid = false;
}

void OAITargetableRemarketingList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITargetableRemarketingList::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_advertiser_id_isValid = ::OpenAPI::fromJsonValue(m_advertiser_id, json[QString("advertiserId")]);
    m_advertiser_id_isSet = !json[QString("advertiserId")].isNull() && m_advertiser_id_isValid;

    m_advertiser_id_dimension_value_isValid = ::OpenAPI::fromJsonValue(m_advertiser_id_dimension_value, json[QString("advertiserIdDimensionValue")]);
    m_advertiser_id_dimension_value_isSet = !json[QString("advertiserIdDimensionValue")].isNull() && m_advertiser_id_dimension_value_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_life_span_isValid = ::OpenAPI::fromJsonValue(m_life_span, json[QString("lifeSpan")]);
    m_life_span_isSet = !json[QString("lifeSpan")].isNull() && m_life_span_isValid;

    m_list_size_isValid = ::OpenAPI::fromJsonValue(m_list_size, json[QString("listSize")]);
    m_list_size_isSet = !json[QString("listSize")].isNull() && m_list_size_isValid;

    m_list_source_isValid = ::OpenAPI::fromJsonValue(m_list_source, json[QString("listSource")]);
    m_list_source_isSet = !json[QString("listSource")].isNull() && m_list_source_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_subaccount_id_isValid = ::OpenAPI::fromJsonValue(m_subaccount_id, json[QString("subaccountId")]);
    m_subaccount_id_isSet = !json[QString("subaccountId")].isNull() && m_subaccount_id_isValid;
}

QString OAITargetableRemarketingList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITargetableRemarketingList::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_advertiser_id_isSet) {
        obj.insert(QString("advertiserId"), ::OpenAPI::toJsonValue(m_advertiser_id));
    }
    if (m_advertiser_id_dimension_value.isSet()) {
        obj.insert(QString("advertiserIdDimensionValue"), ::OpenAPI::toJsonValue(m_advertiser_id_dimension_value));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_life_span_isSet) {
        obj.insert(QString("lifeSpan"), ::OpenAPI::toJsonValue(m_life_span));
    }
    if (m_list_size_isSet) {
        obj.insert(QString("listSize"), ::OpenAPI::toJsonValue(m_list_size));
    }
    if (m_list_source_isSet) {
        obj.insert(QString("listSource"), ::OpenAPI::toJsonValue(m_list_source));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_subaccount_id_isSet) {
        obj.insert(QString("subaccountId"), ::OpenAPI::toJsonValue(m_subaccount_id));
    }
    return obj;
}

QString OAITargetableRemarketingList::getAccountId() const {
    return m_account_id;
}
void OAITargetableRemarketingList::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAITargetableRemarketingList::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAITargetableRemarketingList::is_account_id_Valid() const{
    return m_account_id_isValid;
}

bool OAITargetableRemarketingList::isActive() const {
    return m_active;
}
void OAITargetableRemarketingList::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAITargetableRemarketingList::is_active_Set() const{
    return m_active_isSet;
}

bool OAITargetableRemarketingList::is_active_Valid() const{
    return m_active_isValid;
}

QString OAITargetableRemarketingList::getAdvertiserId() const {
    return m_advertiser_id;
}
void OAITargetableRemarketingList::setAdvertiserId(const QString &advertiser_id) {
    m_advertiser_id = advertiser_id;
    m_advertiser_id_isSet = true;
}

bool OAITargetableRemarketingList::is_advertiser_id_Set() const{
    return m_advertiser_id_isSet;
}

bool OAITargetableRemarketingList::is_advertiser_id_Valid() const{
    return m_advertiser_id_isValid;
}

OAIDimensionValue OAITargetableRemarketingList::getAdvertiserIdDimensionValue() const {
    return m_advertiser_id_dimension_value;
}
void OAITargetableRemarketingList::setAdvertiserIdDimensionValue(const OAIDimensionValue &advertiser_id_dimension_value) {
    m_advertiser_id_dimension_value = advertiser_id_dimension_value;
    m_advertiser_id_dimension_value_isSet = true;
}

bool OAITargetableRemarketingList::is_advertiser_id_dimension_value_Set() const{
    return m_advertiser_id_dimension_value_isSet;
}

bool OAITargetableRemarketingList::is_advertiser_id_dimension_value_Valid() const{
    return m_advertiser_id_dimension_value_isValid;
}

QString OAITargetableRemarketingList::getDescription() const {
    return m_description;
}
void OAITargetableRemarketingList::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITargetableRemarketingList::is_description_Set() const{
    return m_description_isSet;
}

bool OAITargetableRemarketingList::is_description_Valid() const{
    return m_description_isValid;
}

QString OAITargetableRemarketingList::getId() const {
    return m_id;
}
void OAITargetableRemarketingList::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITargetableRemarketingList::is_id_Set() const{
    return m_id_isSet;
}

bool OAITargetableRemarketingList::is_id_Valid() const{
    return m_id_isValid;
}

QString OAITargetableRemarketingList::getKind() const {
    return m_kind;
}
void OAITargetableRemarketingList::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAITargetableRemarketingList::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAITargetableRemarketingList::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAITargetableRemarketingList::getLifeSpan() const {
    return m_life_span;
}
void OAITargetableRemarketingList::setLifeSpan(const QString &life_span) {
    m_life_span = life_span;
    m_life_span_isSet = true;
}

bool OAITargetableRemarketingList::is_life_span_Set() const{
    return m_life_span_isSet;
}

bool OAITargetableRemarketingList::is_life_span_Valid() const{
    return m_life_span_isValid;
}

QString OAITargetableRemarketingList::getListSize() const {
    return m_list_size;
}
void OAITargetableRemarketingList::setListSize(const QString &list_size) {
    m_list_size = list_size;
    m_list_size_isSet = true;
}

bool OAITargetableRemarketingList::is_list_size_Set() const{
    return m_list_size_isSet;
}

bool OAITargetableRemarketingList::is_list_size_Valid() const{
    return m_list_size_isValid;
}

QString OAITargetableRemarketingList::getListSource() const {
    return m_list_source;
}
void OAITargetableRemarketingList::setListSource(const QString &list_source) {
    m_list_source = list_source;
    m_list_source_isSet = true;
}

bool OAITargetableRemarketingList::is_list_source_Set() const{
    return m_list_source_isSet;
}

bool OAITargetableRemarketingList::is_list_source_Valid() const{
    return m_list_source_isValid;
}

QString OAITargetableRemarketingList::getName() const {
    return m_name;
}
void OAITargetableRemarketingList::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITargetableRemarketingList::is_name_Set() const{
    return m_name_isSet;
}

bool OAITargetableRemarketingList::is_name_Valid() const{
    return m_name_isValid;
}

QString OAITargetableRemarketingList::getSubaccountId() const {
    return m_subaccount_id;
}
void OAITargetableRemarketingList::setSubaccountId(const QString &subaccount_id) {
    m_subaccount_id = subaccount_id;
    m_subaccount_id_isSet = true;
}

bool OAITargetableRemarketingList::is_subaccount_id_Set() const{
    return m_subaccount_id_isSet;
}

bool OAITargetableRemarketingList::is_subaccount_id_Valid() const{
    return m_subaccount_id_isValid;
}

bool OAITargetableRemarketingList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advertiser_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advertiser_id_dimension_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_life_span_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subaccount_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITargetableRemarketingList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
