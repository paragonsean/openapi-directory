/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGeoTargeting.h
 *
 * Geographical Targeting.
 */

#ifndef OAIGeoTargeting_H
#define OAIGeoTargeting_H

#include <QJsonObject>

#include "OAICity.h"
#include "OAICountry.h"
#include "OAIMetro.h"
#include "OAIPostalCode.h"
#include "OAIRegion.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICity;
class OAICountry;
class OAIMetro;
class OAIPostalCode;
class OAIRegion;

class OAIGeoTargeting : public OAIObject {
public:
    OAIGeoTargeting();
    OAIGeoTargeting(QString json);
    ~OAIGeoTargeting() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICity> getCities() const;
    void setCities(const QList<OAICity> &cities);
    bool is_cities_Set() const;
    bool is_cities_Valid() const;

    QList<OAICountry> getCountries() const;
    void setCountries(const QList<OAICountry> &countries);
    bool is_countries_Set() const;
    bool is_countries_Valid() const;

    bool isExcludeCountries() const;
    void setExcludeCountries(const bool &exclude_countries);
    bool is_exclude_countries_Set() const;
    bool is_exclude_countries_Valid() const;

    QList<OAIMetro> getMetros() const;
    void setMetros(const QList<OAIMetro> &metros);
    bool is_metros_Set() const;
    bool is_metros_Valid() const;

    QList<OAIPostalCode> getPostalCodes() const;
    void setPostalCodes(const QList<OAIPostalCode> &postal_codes);
    bool is_postal_codes_Set() const;
    bool is_postal_codes_Valid() const;

    QList<OAIRegion> getRegions() const;
    void setRegions(const QList<OAIRegion> &regions);
    bool is_regions_Set() const;
    bool is_regions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICity> m_cities;
    bool m_cities_isSet;
    bool m_cities_isValid;

    QList<OAICountry> m_countries;
    bool m_countries_isSet;
    bool m_countries_isValid;

    bool m_exclude_countries;
    bool m_exclude_countries_isSet;
    bool m_exclude_countries_isValid;

    QList<OAIMetro> m_metros;
    bool m_metros_isSet;
    bool m_metros_isValid;

    QList<OAIPostalCode> m_postal_codes;
    bool m_postal_codes_isSet;
    bool m_postal_codes_isValid;

    QList<OAIRegion> m_regions;
    bool m_regions_isSet;
    bool m_regions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGeoTargeting)

#endif // OAIGeoTargeting_H
