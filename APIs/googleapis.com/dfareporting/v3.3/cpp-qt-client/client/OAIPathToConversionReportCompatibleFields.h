/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPathToConversionReportCompatibleFields.h
 *
 * Represents fields that are compatible to be selected for a report of type \&quot;PATH_TO_CONVERSION\&quot;.
 */

#ifndef OAIPathToConversionReportCompatibleFields_H
#define OAIPathToConversionReportCompatibleFields_H

#include <QJsonObject>

#include "OAIDimension.h"
#include "OAIMetric.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimension;
class OAIMetric;

class OAIPathToConversionReportCompatibleFields : public OAIObject {
public:
    OAIPathToConversionReportCompatibleFields();
    OAIPathToConversionReportCompatibleFields(QString json);
    ~OAIPathToConversionReportCompatibleFields() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDimension> getConversionDimensions() const;
    void setConversionDimensions(const QList<OAIDimension> &conversion_dimensions);
    bool is_conversion_dimensions_Set() const;
    bool is_conversion_dimensions_Valid() const;

    QList<OAIDimension> getCustomFloodlightVariables() const;
    void setCustomFloodlightVariables(const QList<OAIDimension> &custom_floodlight_variables);
    bool is_custom_floodlight_variables_Set() const;
    bool is_custom_floodlight_variables_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QList<OAIMetric> getMetrics() const;
    void setMetrics(const QList<OAIMetric> &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    QList<OAIDimension> getPerInteractionDimensions() const;
    void setPerInteractionDimensions(const QList<OAIDimension> &per_interaction_dimensions);
    bool is_per_interaction_dimensions_Set() const;
    bool is_per_interaction_dimensions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDimension> m_conversion_dimensions;
    bool m_conversion_dimensions_isSet;
    bool m_conversion_dimensions_isValid;

    QList<OAIDimension> m_custom_floodlight_variables;
    bool m_custom_floodlight_variables_isSet;
    bool m_custom_floodlight_variables_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QList<OAIMetric> m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;

    QList<OAIDimension> m_per_interaction_dimensions;
    bool m_per_interaction_dimensions_isSet;
    bool m_per_interaction_dimensions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPathToConversionReportCompatibleFields)

#endif // OAIPathToConversionReportCompatibleFields_H
