/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReport::OAIReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReport::OAIReport() {
    this->initializeModel();
}

OAIReport::~OAIReport() {}

void OAIReport::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_criteria_isSet = false;
    m_criteria_isValid = false;

    m_cross_dimension_reach_criteria_isSet = false;
    m_cross_dimension_reach_criteria_isValid = false;

    m_delivery_isSet = false;
    m_delivery_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_file_name_isSet = false;
    m_file_name_isValid = false;

    m_floodlight_criteria_isSet = false;
    m_floodlight_criteria_isValid = false;

    m_format_isSet = false;
    m_format_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_owner_profile_id_isSet = false;
    m_owner_profile_id_isValid = false;

    m_path_to_conversion_criteria_isSet = false;
    m_path_to_conversion_criteria_isValid = false;

    m_reach_criteria_isSet = false;
    m_reach_criteria_isValid = false;

    m_schedule_isSet = false;
    m_schedule_isValid = false;

    m_sub_account_id_isSet = false;
    m_sub_account_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReport::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_criteria_isValid = ::OpenAPI::fromJsonValue(m_criteria, json[QString("criteria")]);
    m_criteria_isSet = !json[QString("criteria")].isNull() && m_criteria_isValid;

    m_cross_dimension_reach_criteria_isValid = ::OpenAPI::fromJsonValue(m_cross_dimension_reach_criteria, json[QString("crossDimensionReachCriteria")]);
    m_cross_dimension_reach_criteria_isSet = !json[QString("crossDimensionReachCriteria")].isNull() && m_cross_dimension_reach_criteria_isValid;

    m_delivery_isValid = ::OpenAPI::fromJsonValue(m_delivery, json[QString("delivery")]);
    m_delivery_isSet = !json[QString("delivery")].isNull() && m_delivery_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_file_name_isValid = ::OpenAPI::fromJsonValue(m_file_name, json[QString("fileName")]);
    m_file_name_isSet = !json[QString("fileName")].isNull() && m_file_name_isValid;

    m_floodlight_criteria_isValid = ::OpenAPI::fromJsonValue(m_floodlight_criteria, json[QString("floodlightCriteria")]);
    m_floodlight_criteria_isSet = !json[QString("floodlightCriteria")].isNull() && m_floodlight_criteria_isValid;

    m_format_isValid = ::OpenAPI::fromJsonValue(m_format, json[QString("format")]);
    m_format_isSet = !json[QString("format")].isNull() && m_format_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_owner_profile_id_isValid = ::OpenAPI::fromJsonValue(m_owner_profile_id, json[QString("ownerProfileId")]);
    m_owner_profile_id_isSet = !json[QString("ownerProfileId")].isNull() && m_owner_profile_id_isValid;

    m_path_to_conversion_criteria_isValid = ::OpenAPI::fromJsonValue(m_path_to_conversion_criteria, json[QString("pathToConversionCriteria")]);
    m_path_to_conversion_criteria_isSet = !json[QString("pathToConversionCriteria")].isNull() && m_path_to_conversion_criteria_isValid;

    m_reach_criteria_isValid = ::OpenAPI::fromJsonValue(m_reach_criteria, json[QString("reachCriteria")]);
    m_reach_criteria_isSet = !json[QString("reachCriteria")].isNull() && m_reach_criteria_isValid;

    m_schedule_isValid = ::OpenAPI::fromJsonValue(m_schedule, json[QString("schedule")]);
    m_schedule_isSet = !json[QString("schedule")].isNull() && m_schedule_isValid;

    m_sub_account_id_isValid = ::OpenAPI::fromJsonValue(m_sub_account_id, json[QString("subAccountId")]);
    m_sub_account_id_isSet = !json[QString("subAccountId")].isNull() && m_sub_account_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReport::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_criteria.isSet()) {
        obj.insert(QString("criteria"), ::OpenAPI::toJsonValue(m_criteria));
    }
    if (m_cross_dimension_reach_criteria.isSet()) {
        obj.insert(QString("crossDimensionReachCriteria"), ::OpenAPI::toJsonValue(m_cross_dimension_reach_criteria));
    }
    if (m_delivery.isSet()) {
        obj.insert(QString("delivery"), ::OpenAPI::toJsonValue(m_delivery));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_file_name_isSet) {
        obj.insert(QString("fileName"), ::OpenAPI::toJsonValue(m_file_name));
    }
    if (m_floodlight_criteria.isSet()) {
        obj.insert(QString("floodlightCriteria"), ::OpenAPI::toJsonValue(m_floodlight_criteria));
    }
    if (m_format_isSet) {
        obj.insert(QString("format"), ::OpenAPI::toJsonValue(m_format));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_owner_profile_id_isSet) {
        obj.insert(QString("ownerProfileId"), ::OpenAPI::toJsonValue(m_owner_profile_id));
    }
    if (m_path_to_conversion_criteria.isSet()) {
        obj.insert(QString("pathToConversionCriteria"), ::OpenAPI::toJsonValue(m_path_to_conversion_criteria));
    }
    if (m_reach_criteria.isSet()) {
        obj.insert(QString("reachCriteria"), ::OpenAPI::toJsonValue(m_reach_criteria));
    }
    if (m_schedule.isSet()) {
        obj.insert(QString("schedule"), ::OpenAPI::toJsonValue(m_schedule));
    }
    if (m_sub_account_id_isSet) {
        obj.insert(QString("subAccountId"), ::OpenAPI::toJsonValue(m_sub_account_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIReport::getAccountId() const {
    return m_account_id;
}
void OAIReport::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIReport::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIReport::is_account_id_Valid() const{
    return m_account_id_isValid;
}

OAIReport_criteria OAIReport::getCriteria() const {
    return m_criteria;
}
void OAIReport::setCriteria(const OAIReport_criteria &criteria) {
    m_criteria = criteria;
    m_criteria_isSet = true;
}

bool OAIReport::is_criteria_Set() const{
    return m_criteria_isSet;
}

bool OAIReport::is_criteria_Valid() const{
    return m_criteria_isValid;
}

OAIReport_crossDimensionReachCriteria OAIReport::getCrossDimensionReachCriteria() const {
    return m_cross_dimension_reach_criteria;
}
void OAIReport::setCrossDimensionReachCriteria(const OAIReport_crossDimensionReachCriteria &cross_dimension_reach_criteria) {
    m_cross_dimension_reach_criteria = cross_dimension_reach_criteria;
    m_cross_dimension_reach_criteria_isSet = true;
}

bool OAIReport::is_cross_dimension_reach_criteria_Set() const{
    return m_cross_dimension_reach_criteria_isSet;
}

bool OAIReport::is_cross_dimension_reach_criteria_Valid() const{
    return m_cross_dimension_reach_criteria_isValid;
}

OAIReport_delivery OAIReport::getDelivery() const {
    return m_delivery;
}
void OAIReport::setDelivery(const OAIReport_delivery &delivery) {
    m_delivery = delivery;
    m_delivery_isSet = true;
}

bool OAIReport::is_delivery_Set() const{
    return m_delivery_isSet;
}

bool OAIReport::is_delivery_Valid() const{
    return m_delivery_isValid;
}

QString OAIReport::getEtag() const {
    return m_etag;
}
void OAIReport::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIReport::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIReport::is_etag_Valid() const{
    return m_etag_isValid;
}

QString OAIReport::getFileName() const {
    return m_file_name;
}
void OAIReport::setFileName(const QString &file_name) {
    m_file_name = file_name;
    m_file_name_isSet = true;
}

bool OAIReport::is_file_name_Set() const{
    return m_file_name_isSet;
}

bool OAIReport::is_file_name_Valid() const{
    return m_file_name_isValid;
}

OAIReport_floodlightCriteria OAIReport::getFloodlightCriteria() const {
    return m_floodlight_criteria;
}
void OAIReport::setFloodlightCriteria(const OAIReport_floodlightCriteria &floodlight_criteria) {
    m_floodlight_criteria = floodlight_criteria;
    m_floodlight_criteria_isSet = true;
}

bool OAIReport::is_floodlight_criteria_Set() const{
    return m_floodlight_criteria_isSet;
}

bool OAIReport::is_floodlight_criteria_Valid() const{
    return m_floodlight_criteria_isValid;
}

QString OAIReport::getFormat() const {
    return m_format;
}
void OAIReport::setFormat(const QString &format) {
    m_format = format;
    m_format_isSet = true;
}

bool OAIReport::is_format_Set() const{
    return m_format_isSet;
}

bool OAIReport::is_format_Valid() const{
    return m_format_isValid;
}

QString OAIReport::getId() const {
    return m_id;
}
void OAIReport::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIReport::is_id_Set() const{
    return m_id_isSet;
}

bool OAIReport::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIReport::getKind() const {
    return m_kind;
}
void OAIReport::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIReport::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIReport::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIReport::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIReport::setLastModifiedTime(const QString &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIReport::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIReport::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIReport::getName() const {
    return m_name;
}
void OAIReport::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIReport::is_name_Set() const{
    return m_name_isSet;
}

bool OAIReport::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIReport::getOwnerProfileId() const {
    return m_owner_profile_id;
}
void OAIReport::setOwnerProfileId(const QString &owner_profile_id) {
    m_owner_profile_id = owner_profile_id;
    m_owner_profile_id_isSet = true;
}

bool OAIReport::is_owner_profile_id_Set() const{
    return m_owner_profile_id_isSet;
}

bool OAIReport::is_owner_profile_id_Valid() const{
    return m_owner_profile_id_isValid;
}

OAIReport_pathToConversionCriteria OAIReport::getPathToConversionCriteria() const {
    return m_path_to_conversion_criteria;
}
void OAIReport::setPathToConversionCriteria(const OAIReport_pathToConversionCriteria &path_to_conversion_criteria) {
    m_path_to_conversion_criteria = path_to_conversion_criteria;
    m_path_to_conversion_criteria_isSet = true;
}

bool OAIReport::is_path_to_conversion_criteria_Set() const{
    return m_path_to_conversion_criteria_isSet;
}

bool OAIReport::is_path_to_conversion_criteria_Valid() const{
    return m_path_to_conversion_criteria_isValid;
}

OAIReport_reachCriteria OAIReport::getReachCriteria() const {
    return m_reach_criteria;
}
void OAIReport::setReachCriteria(const OAIReport_reachCriteria &reach_criteria) {
    m_reach_criteria = reach_criteria;
    m_reach_criteria_isSet = true;
}

bool OAIReport::is_reach_criteria_Set() const{
    return m_reach_criteria_isSet;
}

bool OAIReport::is_reach_criteria_Valid() const{
    return m_reach_criteria_isValid;
}

OAIReport_schedule OAIReport::getSchedule() const {
    return m_schedule;
}
void OAIReport::setSchedule(const OAIReport_schedule &schedule) {
    m_schedule = schedule;
    m_schedule_isSet = true;
}

bool OAIReport::is_schedule_Set() const{
    return m_schedule_isSet;
}

bool OAIReport::is_schedule_Valid() const{
    return m_schedule_isValid;
}

QString OAIReport::getSubAccountId() const {
    return m_sub_account_id;
}
void OAIReport::setSubAccountId(const QString &sub_account_id) {
    m_sub_account_id = sub_account_id;
    m_sub_account_id_isSet = true;
}

bool OAIReport::is_sub_account_id_Set() const{
    return m_sub_account_id_isSet;
}

bool OAIReport::is_sub_account_id_Valid() const{
    return m_sub_account_id_isValid;
}

QString OAIReport::getType() const {
    return m_type;
}
void OAIReport::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIReport::is_type_Set() const{
    return m_type_isSet;
}

bool OAIReport::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_criteria.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cross_dimension_reach_criteria.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_floodlight_criteria.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_to_conversion_criteria.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reach_criteria.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
