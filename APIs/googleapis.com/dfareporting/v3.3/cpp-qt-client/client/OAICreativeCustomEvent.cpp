/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreativeCustomEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreativeCustomEvent::OAICreativeCustomEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreativeCustomEvent::OAICreativeCustomEvent() {
    this->initializeModel();
}

OAICreativeCustomEvent::~OAICreativeCustomEvent() {}

void OAICreativeCustomEvent::initializeModel() {

    m_advertiser_custom_event_id_isSet = false;
    m_advertiser_custom_event_id_isValid = false;

    m_advertiser_custom_event_name_isSet = false;
    m_advertiser_custom_event_name_isValid = false;

    m_advertiser_custom_event_type_isSet = false;
    m_advertiser_custom_event_type_isValid = false;

    m_artwork_label_isSet = false;
    m_artwork_label_isValid = false;

    m_artwork_type_isSet = false;
    m_artwork_type_isValid = false;

    m_exit_click_through_url_isSet = false;
    m_exit_click_through_url_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_popup_window_properties_isSet = false;
    m_popup_window_properties_isValid = false;

    m_target_type_isSet = false;
    m_target_type_isValid = false;

    m_video_reporting_id_isSet = false;
    m_video_reporting_id_isValid = false;
}

void OAICreativeCustomEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreativeCustomEvent::fromJsonObject(QJsonObject json) {

    m_advertiser_custom_event_id_isValid = ::OpenAPI::fromJsonValue(m_advertiser_custom_event_id, json[QString("advertiserCustomEventId")]);
    m_advertiser_custom_event_id_isSet = !json[QString("advertiserCustomEventId")].isNull() && m_advertiser_custom_event_id_isValid;

    m_advertiser_custom_event_name_isValid = ::OpenAPI::fromJsonValue(m_advertiser_custom_event_name, json[QString("advertiserCustomEventName")]);
    m_advertiser_custom_event_name_isSet = !json[QString("advertiserCustomEventName")].isNull() && m_advertiser_custom_event_name_isValid;

    m_advertiser_custom_event_type_isValid = ::OpenAPI::fromJsonValue(m_advertiser_custom_event_type, json[QString("advertiserCustomEventType")]);
    m_advertiser_custom_event_type_isSet = !json[QString("advertiserCustomEventType")].isNull() && m_advertiser_custom_event_type_isValid;

    m_artwork_label_isValid = ::OpenAPI::fromJsonValue(m_artwork_label, json[QString("artworkLabel")]);
    m_artwork_label_isSet = !json[QString("artworkLabel")].isNull() && m_artwork_label_isValid;

    m_artwork_type_isValid = ::OpenAPI::fromJsonValue(m_artwork_type, json[QString("artworkType")]);
    m_artwork_type_isSet = !json[QString("artworkType")].isNull() && m_artwork_type_isValid;

    m_exit_click_through_url_isValid = ::OpenAPI::fromJsonValue(m_exit_click_through_url, json[QString("exitClickThroughUrl")]);
    m_exit_click_through_url_isSet = !json[QString("exitClickThroughUrl")].isNull() && m_exit_click_through_url_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_popup_window_properties_isValid = ::OpenAPI::fromJsonValue(m_popup_window_properties, json[QString("popupWindowProperties")]);
    m_popup_window_properties_isSet = !json[QString("popupWindowProperties")].isNull() && m_popup_window_properties_isValid;

    m_target_type_isValid = ::OpenAPI::fromJsonValue(m_target_type, json[QString("targetType")]);
    m_target_type_isSet = !json[QString("targetType")].isNull() && m_target_type_isValid;

    m_video_reporting_id_isValid = ::OpenAPI::fromJsonValue(m_video_reporting_id, json[QString("videoReportingId")]);
    m_video_reporting_id_isSet = !json[QString("videoReportingId")].isNull() && m_video_reporting_id_isValid;
}

QString OAICreativeCustomEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreativeCustomEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_advertiser_custom_event_id_isSet) {
        obj.insert(QString("advertiserCustomEventId"), ::OpenAPI::toJsonValue(m_advertiser_custom_event_id));
    }
    if (m_advertiser_custom_event_name_isSet) {
        obj.insert(QString("advertiserCustomEventName"), ::OpenAPI::toJsonValue(m_advertiser_custom_event_name));
    }
    if (m_advertiser_custom_event_type_isSet) {
        obj.insert(QString("advertiserCustomEventType"), ::OpenAPI::toJsonValue(m_advertiser_custom_event_type));
    }
    if (m_artwork_label_isSet) {
        obj.insert(QString("artworkLabel"), ::OpenAPI::toJsonValue(m_artwork_label));
    }
    if (m_artwork_type_isSet) {
        obj.insert(QString("artworkType"), ::OpenAPI::toJsonValue(m_artwork_type));
    }
    if (m_exit_click_through_url.isSet()) {
        obj.insert(QString("exitClickThroughUrl"), ::OpenAPI::toJsonValue(m_exit_click_through_url));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_popup_window_properties.isSet()) {
        obj.insert(QString("popupWindowProperties"), ::OpenAPI::toJsonValue(m_popup_window_properties));
    }
    if (m_target_type_isSet) {
        obj.insert(QString("targetType"), ::OpenAPI::toJsonValue(m_target_type));
    }
    if (m_video_reporting_id_isSet) {
        obj.insert(QString("videoReportingId"), ::OpenAPI::toJsonValue(m_video_reporting_id));
    }
    return obj;
}

QString OAICreativeCustomEvent::getAdvertiserCustomEventId() const {
    return m_advertiser_custom_event_id;
}
void OAICreativeCustomEvent::setAdvertiserCustomEventId(const QString &advertiser_custom_event_id) {
    m_advertiser_custom_event_id = advertiser_custom_event_id;
    m_advertiser_custom_event_id_isSet = true;
}

bool OAICreativeCustomEvent::is_advertiser_custom_event_id_Set() const{
    return m_advertiser_custom_event_id_isSet;
}

bool OAICreativeCustomEvent::is_advertiser_custom_event_id_Valid() const{
    return m_advertiser_custom_event_id_isValid;
}

QString OAICreativeCustomEvent::getAdvertiserCustomEventName() const {
    return m_advertiser_custom_event_name;
}
void OAICreativeCustomEvent::setAdvertiserCustomEventName(const QString &advertiser_custom_event_name) {
    m_advertiser_custom_event_name = advertiser_custom_event_name;
    m_advertiser_custom_event_name_isSet = true;
}

bool OAICreativeCustomEvent::is_advertiser_custom_event_name_Set() const{
    return m_advertiser_custom_event_name_isSet;
}

bool OAICreativeCustomEvent::is_advertiser_custom_event_name_Valid() const{
    return m_advertiser_custom_event_name_isValid;
}

QString OAICreativeCustomEvent::getAdvertiserCustomEventType() const {
    return m_advertiser_custom_event_type;
}
void OAICreativeCustomEvent::setAdvertiserCustomEventType(const QString &advertiser_custom_event_type) {
    m_advertiser_custom_event_type = advertiser_custom_event_type;
    m_advertiser_custom_event_type_isSet = true;
}

bool OAICreativeCustomEvent::is_advertiser_custom_event_type_Set() const{
    return m_advertiser_custom_event_type_isSet;
}

bool OAICreativeCustomEvent::is_advertiser_custom_event_type_Valid() const{
    return m_advertiser_custom_event_type_isValid;
}

QString OAICreativeCustomEvent::getArtworkLabel() const {
    return m_artwork_label;
}
void OAICreativeCustomEvent::setArtworkLabel(const QString &artwork_label) {
    m_artwork_label = artwork_label;
    m_artwork_label_isSet = true;
}

bool OAICreativeCustomEvent::is_artwork_label_Set() const{
    return m_artwork_label_isSet;
}

bool OAICreativeCustomEvent::is_artwork_label_Valid() const{
    return m_artwork_label_isValid;
}

QString OAICreativeCustomEvent::getArtworkType() const {
    return m_artwork_type;
}
void OAICreativeCustomEvent::setArtworkType(const QString &artwork_type) {
    m_artwork_type = artwork_type;
    m_artwork_type_isSet = true;
}

bool OAICreativeCustomEvent::is_artwork_type_Set() const{
    return m_artwork_type_isSet;
}

bool OAICreativeCustomEvent::is_artwork_type_Valid() const{
    return m_artwork_type_isValid;
}

OAICreativeClickThroughUrl OAICreativeCustomEvent::getExitClickThroughUrl() const {
    return m_exit_click_through_url;
}
void OAICreativeCustomEvent::setExitClickThroughUrl(const OAICreativeClickThroughUrl &exit_click_through_url) {
    m_exit_click_through_url = exit_click_through_url;
    m_exit_click_through_url_isSet = true;
}

bool OAICreativeCustomEvent::is_exit_click_through_url_Set() const{
    return m_exit_click_through_url_isSet;
}

bool OAICreativeCustomEvent::is_exit_click_through_url_Valid() const{
    return m_exit_click_through_url_isValid;
}

QString OAICreativeCustomEvent::getId() const {
    return m_id;
}
void OAICreativeCustomEvent::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreativeCustomEvent::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreativeCustomEvent::is_id_Valid() const{
    return m_id_isValid;
}

OAIPopupWindowProperties OAICreativeCustomEvent::getPopupWindowProperties() const {
    return m_popup_window_properties;
}
void OAICreativeCustomEvent::setPopupWindowProperties(const OAIPopupWindowProperties &popup_window_properties) {
    m_popup_window_properties = popup_window_properties;
    m_popup_window_properties_isSet = true;
}

bool OAICreativeCustomEvent::is_popup_window_properties_Set() const{
    return m_popup_window_properties_isSet;
}

bool OAICreativeCustomEvent::is_popup_window_properties_Valid() const{
    return m_popup_window_properties_isValid;
}

QString OAICreativeCustomEvent::getTargetType() const {
    return m_target_type;
}
void OAICreativeCustomEvent::setTargetType(const QString &target_type) {
    m_target_type = target_type;
    m_target_type_isSet = true;
}

bool OAICreativeCustomEvent::is_target_type_Set() const{
    return m_target_type_isSet;
}

bool OAICreativeCustomEvent::is_target_type_Valid() const{
    return m_target_type_isValid;
}

QString OAICreativeCustomEvent::getVideoReportingId() const {
    return m_video_reporting_id;
}
void OAICreativeCustomEvent::setVideoReportingId(const QString &video_reporting_id) {
    m_video_reporting_id = video_reporting_id;
    m_video_reporting_id_isSet = true;
}

bool OAICreativeCustomEvent::is_video_reporting_id_Set() const{
    return m_video_reporting_id_isSet;
}

bool OAICreativeCustomEvent::is_video_reporting_id_Valid() const{
    return m_video_reporting_id_isValid;
}

bool OAICreativeCustomEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advertiser_custom_event_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advertiser_custom_event_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advertiser_custom_event_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_artwork_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_artwork_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exit_click_through_url.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_popup_window_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_reporting_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreativeCustomEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
