/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListPopulationRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListPopulationRule::OAIListPopulationRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListPopulationRule::OAIListPopulationRule() {
    this->initializeModel();
}

OAIListPopulationRule::~OAIListPopulationRule() {}

void OAIListPopulationRule::initializeModel() {

    m_floodlight_activity_id_isSet = false;
    m_floodlight_activity_id_isValid = false;

    m_floodlight_activity_name_isSet = false;
    m_floodlight_activity_name_isValid = false;

    m_list_population_clauses_isSet = false;
    m_list_population_clauses_isValid = false;
}

void OAIListPopulationRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListPopulationRule::fromJsonObject(QJsonObject json) {

    m_floodlight_activity_id_isValid = ::OpenAPI::fromJsonValue(m_floodlight_activity_id, json[QString("floodlightActivityId")]);
    m_floodlight_activity_id_isSet = !json[QString("floodlightActivityId")].isNull() && m_floodlight_activity_id_isValid;

    m_floodlight_activity_name_isValid = ::OpenAPI::fromJsonValue(m_floodlight_activity_name, json[QString("floodlightActivityName")]);
    m_floodlight_activity_name_isSet = !json[QString("floodlightActivityName")].isNull() && m_floodlight_activity_name_isValid;

    m_list_population_clauses_isValid = ::OpenAPI::fromJsonValue(m_list_population_clauses, json[QString("listPopulationClauses")]);
    m_list_population_clauses_isSet = !json[QString("listPopulationClauses")].isNull() && m_list_population_clauses_isValid;
}

QString OAIListPopulationRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListPopulationRule::asJsonObject() const {
    QJsonObject obj;
    if (m_floodlight_activity_id_isSet) {
        obj.insert(QString("floodlightActivityId"), ::OpenAPI::toJsonValue(m_floodlight_activity_id));
    }
    if (m_floodlight_activity_name_isSet) {
        obj.insert(QString("floodlightActivityName"), ::OpenAPI::toJsonValue(m_floodlight_activity_name));
    }
    if (m_list_population_clauses.size() > 0) {
        obj.insert(QString("listPopulationClauses"), ::OpenAPI::toJsonValue(m_list_population_clauses));
    }
    return obj;
}

QString OAIListPopulationRule::getFloodlightActivityId() const {
    return m_floodlight_activity_id;
}
void OAIListPopulationRule::setFloodlightActivityId(const QString &floodlight_activity_id) {
    m_floodlight_activity_id = floodlight_activity_id;
    m_floodlight_activity_id_isSet = true;
}

bool OAIListPopulationRule::is_floodlight_activity_id_Set() const{
    return m_floodlight_activity_id_isSet;
}

bool OAIListPopulationRule::is_floodlight_activity_id_Valid() const{
    return m_floodlight_activity_id_isValid;
}

QString OAIListPopulationRule::getFloodlightActivityName() const {
    return m_floodlight_activity_name;
}
void OAIListPopulationRule::setFloodlightActivityName(const QString &floodlight_activity_name) {
    m_floodlight_activity_name = floodlight_activity_name;
    m_floodlight_activity_name_isSet = true;
}

bool OAIListPopulationRule::is_floodlight_activity_name_Set() const{
    return m_floodlight_activity_name_isSet;
}

bool OAIListPopulationRule::is_floodlight_activity_name_Valid() const{
    return m_floodlight_activity_name_isValid;
}

QList<OAIListPopulationClause> OAIListPopulationRule::getListPopulationClauses() const {
    return m_list_population_clauses;
}
void OAIListPopulationRule::setListPopulationClauses(const QList<OAIListPopulationClause> &list_population_clauses) {
    m_list_population_clauses = list_population_clauses;
    m_list_population_clauses_isSet = true;
}

bool OAIListPopulationRule::is_list_population_clauses_Set() const{
    return m_list_population_clauses_isSet;
}

bool OAIListPopulationRule::is_list_population_clauses_Valid() const{
    return m_list_population_clauses_isValid;
}

bool OAIListPopulationRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_floodlight_activity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_floodlight_activity_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_population_clauses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListPopulationRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
