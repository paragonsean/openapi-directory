/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventTag.h
 *
 * Contains properties of an event tag.
 */

#ifndef OAIEventTag_H
#define OAIEventTag_H

#include <QJsonObject>

#include "OAIDimensionValue.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensionValue;

class OAIEventTag : public OAIObject {
public:
    OAIEventTag();
    OAIEventTag(QString json);
    ~OAIEventTag() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getAdvertiserId() const;
    void setAdvertiserId(const QString &advertiser_id);
    bool is_advertiser_id_Set() const;
    bool is_advertiser_id_Valid() const;

    OAIDimensionValue getAdvertiserIdDimensionValue() const;
    void setAdvertiserIdDimensionValue(const OAIDimensionValue &advertiser_id_dimension_value);
    bool is_advertiser_id_dimension_value_Set() const;
    bool is_advertiser_id_dimension_value_Valid() const;

    QString getCampaignId() const;
    void setCampaignId(const QString &campaign_id);
    bool is_campaign_id_Set() const;
    bool is_campaign_id_Valid() const;

    OAIDimensionValue getCampaignIdDimensionValue() const;
    void setCampaignIdDimensionValue(const OAIDimensionValue &campaign_id_dimension_value);
    bool is_campaign_id_dimension_value_Set() const;
    bool is_campaign_id_dimension_value_Valid() const;

    bool isEnabledByDefault() const;
    void setEnabledByDefault(const bool &enabled_by_default);
    bool is_enabled_by_default_Set() const;
    bool is_enabled_by_default_Valid() const;

    bool isExcludeFromAdxRequests() const;
    void setExcludeFromAdxRequests(const bool &exclude_from_adx_requests);
    bool is_exclude_from_adx_requests_Set() const;
    bool is_exclude_from_adx_requests_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSiteFilterType() const;
    void setSiteFilterType(const QString &site_filter_type);
    bool is_site_filter_type_Set() const;
    bool is_site_filter_type_Valid() const;

    QList<QString> getSiteIds() const;
    void setSiteIds(const QList<QString> &site_ids);
    bool is_site_ids_Set() const;
    bool is_site_ids_Valid() const;

    bool isSslCompliant() const;
    void setSslCompliant(const bool &ssl_compliant);
    bool is_ssl_compliant_Set() const;
    bool is_ssl_compliant_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSubaccountId() const;
    void setSubaccountId(const QString &subaccount_id);
    bool is_subaccount_id_Set() const;
    bool is_subaccount_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    qint32 getUrlEscapeLevels() const;
    void setUrlEscapeLevels(const qint32 &url_escape_levels);
    bool is_url_escape_levels_Set() const;
    bool is_url_escape_levels_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_advertiser_id;
    bool m_advertiser_id_isSet;
    bool m_advertiser_id_isValid;

    OAIDimensionValue m_advertiser_id_dimension_value;
    bool m_advertiser_id_dimension_value_isSet;
    bool m_advertiser_id_dimension_value_isValid;

    QString m_campaign_id;
    bool m_campaign_id_isSet;
    bool m_campaign_id_isValid;

    OAIDimensionValue m_campaign_id_dimension_value;
    bool m_campaign_id_dimension_value_isSet;
    bool m_campaign_id_dimension_value_isValid;

    bool m_enabled_by_default;
    bool m_enabled_by_default_isSet;
    bool m_enabled_by_default_isValid;

    bool m_exclude_from_adx_requests;
    bool m_exclude_from_adx_requests_isSet;
    bool m_exclude_from_adx_requests_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_site_filter_type;
    bool m_site_filter_type_isSet;
    bool m_site_filter_type_isValid;

    QList<QString> m_site_ids;
    bool m_site_ids_isSet;
    bool m_site_ids_isValid;

    bool m_ssl_compliant;
    bool m_ssl_compliant_isSet;
    bool m_ssl_compliant_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_subaccount_id;
    bool m_subaccount_id_isSet;
    bool m_subaccount_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    qint32 m_url_escape_levels;
    bool m_url_escape_levels_isSet;
    bool m_url_escape_levels_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventTag)

#endif // OAIEventTag_H
