/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVideoOffset.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVideoOffset::OAIVideoOffset(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVideoOffset::OAIVideoOffset() {
    this->initializeModel();
}

OAIVideoOffset::~OAIVideoOffset() {}

void OAIVideoOffset::initializeModel() {

    m_offset_percentage_isSet = false;
    m_offset_percentage_isValid = false;

    m_offset_seconds_isSet = false;
    m_offset_seconds_isValid = false;
}

void OAIVideoOffset::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVideoOffset::fromJsonObject(QJsonObject json) {

    m_offset_percentage_isValid = ::OpenAPI::fromJsonValue(m_offset_percentage, json[QString("offsetPercentage")]);
    m_offset_percentage_isSet = !json[QString("offsetPercentage")].isNull() && m_offset_percentage_isValid;

    m_offset_seconds_isValid = ::OpenAPI::fromJsonValue(m_offset_seconds, json[QString("offsetSeconds")]);
    m_offset_seconds_isSet = !json[QString("offsetSeconds")].isNull() && m_offset_seconds_isValid;
}

QString OAIVideoOffset::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVideoOffset::asJsonObject() const {
    QJsonObject obj;
    if (m_offset_percentage_isSet) {
        obj.insert(QString("offsetPercentage"), ::OpenAPI::toJsonValue(m_offset_percentage));
    }
    if (m_offset_seconds_isSet) {
        obj.insert(QString("offsetSeconds"), ::OpenAPI::toJsonValue(m_offset_seconds));
    }
    return obj;
}

qint32 OAIVideoOffset::getOffsetPercentage() const {
    return m_offset_percentage;
}
void OAIVideoOffset::setOffsetPercentage(const qint32 &offset_percentage) {
    m_offset_percentage = offset_percentage;
    m_offset_percentage_isSet = true;
}

bool OAIVideoOffset::is_offset_percentage_Set() const{
    return m_offset_percentage_isSet;
}

bool OAIVideoOffset::is_offset_percentage_Valid() const{
    return m_offset_percentage_isValid;
}

qint32 OAIVideoOffset::getOffsetSeconds() const {
    return m_offset_seconds;
}
void OAIVideoOffset::setOffsetSeconds(const qint32 &offset_seconds) {
    m_offset_seconds = offset_seconds;
    m_offset_seconds_isSet = true;
}

bool OAIVideoOffset::is_offset_seconds_Set() const{
    return m_offset_seconds_isSet;
}

bool OAIVideoOffset::is_offset_seconds_Valid() const{
    return m_offset_seconds_isValid;
}

bool OAIVideoOffset::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_offset_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offset_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVideoOffset::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
