/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITargetingTemplate.h
 *
 * Contains properties of a targeting template. A targeting template encapsulates targeting information which can be reused across multiple ads.
 */

#ifndef OAITargetingTemplate_H
#define OAITargetingTemplate_H

#include <QJsonObject>

#include "OAIDayPartTargeting.h"
#include "OAIDimensionValue.h"
#include "OAIGeoTargeting.h"
#include "OAIKeyValueTargetingExpression.h"
#include "OAILanguageTargeting.h"
#include "OAIListTargetingExpression.h"
#include "OAITechnologyTargeting.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensionValue;
class OAIDayPartTargeting;
class OAIGeoTargeting;
class OAIKeyValueTargetingExpression;
class OAILanguageTargeting;
class OAIListTargetingExpression;
class OAITechnologyTargeting;

class OAITargetingTemplate : public OAIObject {
public:
    OAITargetingTemplate();
    OAITargetingTemplate(QString json);
    ~OAITargetingTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getAdvertiserId() const;
    void setAdvertiserId(const QString &advertiser_id);
    bool is_advertiser_id_Set() const;
    bool is_advertiser_id_Valid() const;

    OAIDimensionValue getAdvertiserIdDimensionValue() const;
    void setAdvertiserIdDimensionValue(const OAIDimensionValue &advertiser_id_dimension_value);
    bool is_advertiser_id_dimension_value_Set() const;
    bool is_advertiser_id_dimension_value_Valid() const;

    OAIDayPartTargeting getDayPartTargeting() const;
    void setDayPartTargeting(const OAIDayPartTargeting &day_part_targeting);
    bool is_day_part_targeting_Set() const;
    bool is_day_part_targeting_Valid() const;

    OAIGeoTargeting getGeoTargeting() const;
    void setGeoTargeting(const OAIGeoTargeting &geo_targeting);
    bool is_geo_targeting_Set() const;
    bool is_geo_targeting_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIKeyValueTargetingExpression getKeyValueTargetingExpression() const;
    void setKeyValueTargetingExpression(const OAIKeyValueTargetingExpression &key_value_targeting_expression);
    bool is_key_value_targeting_expression_Set() const;
    bool is_key_value_targeting_expression_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAILanguageTargeting getLanguageTargeting() const;
    void setLanguageTargeting(const OAILanguageTargeting &language_targeting);
    bool is_language_targeting_Set() const;
    bool is_language_targeting_Valid() const;

    OAIListTargetingExpression getListTargetingExpression() const;
    void setListTargetingExpression(const OAIListTargetingExpression &list_targeting_expression);
    bool is_list_targeting_expression_Set() const;
    bool is_list_targeting_expression_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSubaccountId() const;
    void setSubaccountId(const QString &subaccount_id);
    bool is_subaccount_id_Set() const;
    bool is_subaccount_id_Valid() const;

    OAITechnologyTargeting getTechnologyTargeting() const;
    void setTechnologyTargeting(const OAITechnologyTargeting &technology_targeting);
    bool is_technology_targeting_Set() const;
    bool is_technology_targeting_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_advertiser_id;
    bool m_advertiser_id_isSet;
    bool m_advertiser_id_isValid;

    OAIDimensionValue m_advertiser_id_dimension_value;
    bool m_advertiser_id_dimension_value_isSet;
    bool m_advertiser_id_dimension_value_isValid;

    OAIDayPartTargeting m_day_part_targeting;
    bool m_day_part_targeting_isSet;
    bool m_day_part_targeting_isValid;

    OAIGeoTargeting m_geo_targeting;
    bool m_geo_targeting_isSet;
    bool m_geo_targeting_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIKeyValueTargetingExpression m_key_value_targeting_expression;
    bool m_key_value_targeting_expression_isSet;
    bool m_key_value_targeting_expression_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAILanguageTargeting m_language_targeting;
    bool m_language_targeting_isSet;
    bool m_language_targeting_isValid;

    OAIListTargetingExpression m_list_targeting_expression;
    bool m_list_targeting_expression_isSet;
    bool m_list_targeting_expression_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_subaccount_id;
    bool m_subaccount_id_isSet;
    bool m_subaccount_id_isValid;

    OAITechnologyTargeting m_technology_targeting;
    bool m_technology_targeting_isSet;
    bool m_technology_targeting_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITargetingTemplate)

#endif // OAITargetingTemplate_H
