/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDefaultClickThroughEventTagProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDefaultClickThroughEventTagProperties::OAIDefaultClickThroughEventTagProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDefaultClickThroughEventTagProperties::OAIDefaultClickThroughEventTagProperties() {
    this->initializeModel();
}

OAIDefaultClickThroughEventTagProperties::~OAIDefaultClickThroughEventTagProperties() {}

void OAIDefaultClickThroughEventTagProperties::initializeModel() {

    m_default_click_through_event_tag_id_isSet = false;
    m_default_click_through_event_tag_id_isValid = false;

    m_override_inherited_event_tag_isSet = false;
    m_override_inherited_event_tag_isValid = false;
}

void OAIDefaultClickThroughEventTagProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDefaultClickThroughEventTagProperties::fromJsonObject(QJsonObject json) {

    m_default_click_through_event_tag_id_isValid = ::OpenAPI::fromJsonValue(m_default_click_through_event_tag_id, json[QString("defaultClickThroughEventTagId")]);
    m_default_click_through_event_tag_id_isSet = !json[QString("defaultClickThroughEventTagId")].isNull() && m_default_click_through_event_tag_id_isValid;

    m_override_inherited_event_tag_isValid = ::OpenAPI::fromJsonValue(m_override_inherited_event_tag, json[QString("overrideInheritedEventTag")]);
    m_override_inherited_event_tag_isSet = !json[QString("overrideInheritedEventTag")].isNull() && m_override_inherited_event_tag_isValid;
}

QString OAIDefaultClickThroughEventTagProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDefaultClickThroughEventTagProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_default_click_through_event_tag_id_isSet) {
        obj.insert(QString("defaultClickThroughEventTagId"), ::OpenAPI::toJsonValue(m_default_click_through_event_tag_id));
    }
    if (m_override_inherited_event_tag_isSet) {
        obj.insert(QString("overrideInheritedEventTag"), ::OpenAPI::toJsonValue(m_override_inherited_event_tag));
    }
    return obj;
}

QString OAIDefaultClickThroughEventTagProperties::getDefaultClickThroughEventTagId() const {
    return m_default_click_through_event_tag_id;
}
void OAIDefaultClickThroughEventTagProperties::setDefaultClickThroughEventTagId(const QString &default_click_through_event_tag_id) {
    m_default_click_through_event_tag_id = default_click_through_event_tag_id;
    m_default_click_through_event_tag_id_isSet = true;
}

bool OAIDefaultClickThroughEventTagProperties::is_default_click_through_event_tag_id_Set() const{
    return m_default_click_through_event_tag_id_isSet;
}

bool OAIDefaultClickThroughEventTagProperties::is_default_click_through_event_tag_id_Valid() const{
    return m_default_click_through_event_tag_id_isValid;
}

bool OAIDefaultClickThroughEventTagProperties::isOverrideInheritedEventTag() const {
    return m_override_inherited_event_tag;
}
void OAIDefaultClickThroughEventTagProperties::setOverrideInheritedEventTag(const bool &override_inherited_event_tag) {
    m_override_inherited_event_tag = override_inherited_event_tag;
    m_override_inherited_event_tag_isSet = true;
}

bool OAIDefaultClickThroughEventTagProperties::is_override_inherited_event_tag_Set() const{
    return m_override_inherited_event_tag_isSet;
}

bool OAIDefaultClickThroughEventTagProperties::is_override_inherited_event_tag_Valid() const{
    return m_override_inherited_event_tag_isValid;
}

bool OAIDefaultClickThroughEventTagProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_click_through_event_tag_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_override_inherited_event_tag_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDefaultClickThroughEventTagProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
