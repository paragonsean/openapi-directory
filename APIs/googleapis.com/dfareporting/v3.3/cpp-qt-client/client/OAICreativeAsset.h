/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreativeAsset.h
 *
 * Creative Asset.
 */

#ifndef OAICreativeAsset_H
#define OAICreativeAsset_H

#include <QJsonObject>

#include "OAICreativeAssetId.h"
#include "OAICreativeCustomEvent.h"
#include "OAIDimensionValue.h"
#include "OAIOffsetPosition.h"
#include "OAISize.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISize;
class OAICreativeAssetId;
class OAICreativeCustomEvent;
class OAIDimensionValue;
class OAIOffsetPosition;

class OAICreativeAsset : public OAIObject {
public:
    OAICreativeAsset();
    OAICreativeAsset(QString json);
    ~OAICreativeAsset() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActionScript3() const;
    void setActionScript3(const bool &action_script3);
    bool is_action_script3_Set() const;
    bool is_action_script3_Valid() const;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QList<OAISize> getAdditionalSizes() const;
    void setAdditionalSizes(const QList<OAISize> &additional_sizes);
    bool is_additional_sizes_Set() const;
    bool is_additional_sizes_Valid() const;

    QString getAlignment() const;
    void setAlignment(const QString &alignment);
    bool is_alignment_Set() const;
    bool is_alignment_Valid() const;

    QString getArtworkType() const;
    void setArtworkType(const QString &artwork_type);
    bool is_artwork_type_Set() const;
    bool is_artwork_type_Valid() const;

    OAICreativeAssetId getAssetIdentifier() const;
    void setAssetIdentifier(const OAICreativeAssetId &asset_identifier);
    bool is_asset_identifier_Set() const;
    bool is_asset_identifier_Valid() const;

    qint32 getAudioBitRate() const;
    void setAudioBitRate(const qint32 &audio_bit_rate);
    bool is_audio_bit_rate_Set() const;
    bool is_audio_bit_rate_Valid() const;

    qint32 getAudioSampleRate() const;
    void setAudioSampleRate(const qint32 &audio_sample_rate);
    bool is_audio_sample_rate_Set() const;
    bool is_audio_sample_rate_Valid() const;

    OAICreativeCustomEvent getBackupImageExit() const;
    void setBackupImageExit(const OAICreativeCustomEvent &backup_image_exit);
    bool is_backup_image_exit_Set() const;
    bool is_backup_image_exit_Valid() const;

    qint32 getBitRate() const;
    void setBitRate(const qint32 &bit_rate);
    bool is_bit_rate_Set() const;
    bool is_bit_rate_Valid() const;

    QString getChildAssetType() const;
    void setChildAssetType(const QString &child_asset_type);
    bool is_child_asset_type_Set() const;
    bool is_child_asset_type_Valid() const;

    OAISize getCollapsedSize() const;
    void setCollapsedSize(const OAISize &collapsed_size);
    bool is_collapsed_size_Set() const;
    bool is_collapsed_size_Valid() const;

    QList<QString> getCompanionCreativeIds() const;
    void setCompanionCreativeIds(const QList<QString> &companion_creative_ids);
    bool is_companion_creative_ids_Set() const;
    bool is_companion_creative_ids_Valid() const;

    qint32 getCustomStartTimeValue() const;
    void setCustomStartTimeValue(const qint32 &custom_start_time_value);
    bool is_custom_start_time_value_Set() const;
    bool is_custom_start_time_value_Valid() const;

    QList<QString> getDetectedFeatures() const;
    void setDetectedFeatures(const QList<QString> &detected_features);
    bool is_detected_features_Set() const;
    bool is_detected_features_Valid() const;

    QString getDisplayType() const;
    void setDisplayType(const QString &display_type);
    bool is_display_type_Set() const;
    bool is_display_type_Valid() const;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getDurationType() const;
    void setDurationType(const QString &duration_type);
    bool is_duration_type_Set() const;
    bool is_duration_type_Valid() const;

    OAISize getExpandedDimension() const;
    void setExpandedDimension(const OAISize &expanded_dimension);
    bool is_expanded_dimension_Set() const;
    bool is_expanded_dimension_Valid() const;

    QString getFileSize() const;
    void setFileSize(const QString &file_size);
    bool is_file_size_Set() const;
    bool is_file_size_Valid() const;

    qint32 getFlashVersion() const;
    void setFlashVersion(const qint32 &flash_version);
    bool is_flash_version_Set() const;
    bool is_flash_version_Valid() const;

    float getFrameRate() const;
    void setFrameRate(const float &frame_rate);
    bool is_frame_rate_Set() const;
    bool is_frame_rate_Valid() const;

    bool isHideFlashObjects() const;
    void setHideFlashObjects(const bool &hide_flash_objects);
    bool is_hide_flash_objects_Set() const;
    bool is_hide_flash_objects_Valid() const;

    bool isHideSelectionBoxes() const;
    void setHideSelectionBoxes(const bool &hide_selection_boxes);
    bool is_hide_selection_boxes_Set() const;
    bool is_hide_selection_boxes_Valid() const;

    bool isHorizontallyLocked() const;
    void setHorizontallyLocked(const bool &horizontally_locked);
    bool is_horizontally_locked_Set() const;
    bool is_horizontally_locked_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIDimensionValue getIdDimensionValue() const;
    void setIdDimensionValue(const OAIDimensionValue &id_dimension_value);
    bool is_id_dimension_value_Set() const;
    bool is_id_dimension_value_Valid() const;

    float getMediaDuration() const;
    void setMediaDuration(const float &media_duration);
    bool is_media_duration_Set() const;
    bool is_media_duration_Valid() const;

    QString getMimeType() const;
    void setMimeType(const QString &mime_type);
    bool is_mime_type_Set() const;
    bool is_mime_type_Valid() const;

    OAIOffsetPosition getOffset() const;
    void setOffset(const OAIOffsetPosition &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    QString getOrientation() const;
    void setOrientation(const QString &orientation);
    bool is_orientation_Set() const;
    bool is_orientation_Valid() const;

    bool isOriginalBackup() const;
    void setOriginalBackup(const bool &original_backup);
    bool is_original_backup_Set() const;
    bool is_original_backup_Valid() const;

    bool isPoliteLoad() const;
    void setPoliteLoad(const bool &polite_load);
    bool is_polite_load_Set() const;
    bool is_polite_load_Valid() const;

    OAIOffsetPosition getPosition() const;
    void setPosition(const OAIOffsetPosition &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    QString getPositionLeftUnit() const;
    void setPositionLeftUnit(const QString &position_left_unit);
    bool is_position_left_unit_Set() const;
    bool is_position_left_unit_Valid() const;

    QString getPositionTopUnit() const;
    void setPositionTopUnit(const QString &position_top_unit);
    bool is_position_top_unit_Set() const;
    bool is_position_top_unit_Valid() const;

    QString getProgressiveServingUrl() const;
    void setProgressiveServingUrl(const QString &progressive_serving_url);
    bool is_progressive_serving_url_Set() const;
    bool is_progressive_serving_url_Valid() const;

    bool isPushdown() const;
    void setPushdown(const bool &pushdown);
    bool is_pushdown_Set() const;
    bool is_pushdown_Valid() const;

    float getPushdownDuration() const;
    void setPushdownDuration(const float &pushdown_duration);
    bool is_pushdown_duration_Set() const;
    bool is_pushdown_duration_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    OAISize getSize() const;
    void setSize(const OAISize &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    bool isSslCompliant() const;
    void setSslCompliant(const bool &ssl_compliant);
    bool is_ssl_compliant_Set() const;
    bool is_ssl_compliant_Valid() const;

    QString getStartTimeType() const;
    void setStartTimeType(const QString &start_time_type);
    bool is_start_time_type_Set() const;
    bool is_start_time_type_Valid() const;

    QString getStreamingServingUrl() const;
    void setStreamingServingUrl(const QString &streaming_serving_url);
    bool is_streaming_serving_url_Set() const;
    bool is_streaming_serving_url_Valid() const;

    bool isTransparency() const;
    void setTransparency(const bool &transparency);
    bool is_transparency_Set() const;
    bool is_transparency_Valid() const;

    bool isVerticallyLocked() const;
    void setVerticallyLocked(const bool &vertically_locked);
    bool is_vertically_locked_Set() const;
    bool is_vertically_locked_Valid() const;

    QString getWindowMode() const;
    void setWindowMode(const QString &window_mode);
    bool is_window_mode_Set() const;
    bool is_window_mode_Valid() const;

    qint32 getZIndex() const;
    void setZIndex(const qint32 &z_index);
    bool is_z_index_Set() const;
    bool is_z_index_Valid() const;

    QString getZipFilename() const;
    void setZipFilename(const QString &zip_filename);
    bool is_zip_filename_Set() const;
    bool is_zip_filename_Valid() const;

    QString getZipFilesize() const;
    void setZipFilesize(const QString &zip_filesize);
    bool is_zip_filesize_Set() const;
    bool is_zip_filesize_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_action_script3;
    bool m_action_script3_isSet;
    bool m_action_script3_isValid;

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QList<OAISize> m_additional_sizes;
    bool m_additional_sizes_isSet;
    bool m_additional_sizes_isValid;

    QString m_alignment;
    bool m_alignment_isSet;
    bool m_alignment_isValid;

    QString m_artwork_type;
    bool m_artwork_type_isSet;
    bool m_artwork_type_isValid;

    OAICreativeAssetId m_asset_identifier;
    bool m_asset_identifier_isSet;
    bool m_asset_identifier_isValid;

    qint32 m_audio_bit_rate;
    bool m_audio_bit_rate_isSet;
    bool m_audio_bit_rate_isValid;

    qint32 m_audio_sample_rate;
    bool m_audio_sample_rate_isSet;
    bool m_audio_sample_rate_isValid;

    OAICreativeCustomEvent m_backup_image_exit;
    bool m_backup_image_exit_isSet;
    bool m_backup_image_exit_isValid;

    qint32 m_bit_rate;
    bool m_bit_rate_isSet;
    bool m_bit_rate_isValid;

    QString m_child_asset_type;
    bool m_child_asset_type_isSet;
    bool m_child_asset_type_isValid;

    OAISize m_collapsed_size;
    bool m_collapsed_size_isSet;
    bool m_collapsed_size_isValid;

    QList<QString> m_companion_creative_ids;
    bool m_companion_creative_ids_isSet;
    bool m_companion_creative_ids_isValid;

    qint32 m_custom_start_time_value;
    bool m_custom_start_time_value_isSet;
    bool m_custom_start_time_value_isValid;

    QList<QString> m_detected_features;
    bool m_detected_features_isSet;
    bool m_detected_features_isValid;

    QString m_display_type;
    bool m_display_type_isSet;
    bool m_display_type_isValid;

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_duration_type;
    bool m_duration_type_isSet;
    bool m_duration_type_isValid;

    OAISize m_expanded_dimension;
    bool m_expanded_dimension_isSet;
    bool m_expanded_dimension_isValid;

    QString m_file_size;
    bool m_file_size_isSet;
    bool m_file_size_isValid;

    qint32 m_flash_version;
    bool m_flash_version_isSet;
    bool m_flash_version_isValid;

    float m_frame_rate;
    bool m_frame_rate_isSet;
    bool m_frame_rate_isValid;

    bool m_hide_flash_objects;
    bool m_hide_flash_objects_isSet;
    bool m_hide_flash_objects_isValid;

    bool m_hide_selection_boxes;
    bool m_hide_selection_boxes_isSet;
    bool m_hide_selection_boxes_isValid;

    bool m_horizontally_locked;
    bool m_horizontally_locked_isSet;
    bool m_horizontally_locked_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIDimensionValue m_id_dimension_value;
    bool m_id_dimension_value_isSet;
    bool m_id_dimension_value_isValid;

    float m_media_duration;
    bool m_media_duration_isSet;
    bool m_media_duration_isValid;

    QString m_mime_type;
    bool m_mime_type_isSet;
    bool m_mime_type_isValid;

    OAIOffsetPosition m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    QString m_orientation;
    bool m_orientation_isSet;
    bool m_orientation_isValid;

    bool m_original_backup;
    bool m_original_backup_isSet;
    bool m_original_backup_isValid;

    bool m_polite_load;
    bool m_polite_load_isSet;
    bool m_polite_load_isValid;

    OAIOffsetPosition m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    QString m_position_left_unit;
    bool m_position_left_unit_isSet;
    bool m_position_left_unit_isValid;

    QString m_position_top_unit;
    bool m_position_top_unit_isSet;
    bool m_position_top_unit_isValid;

    QString m_progressive_serving_url;
    bool m_progressive_serving_url_isSet;
    bool m_progressive_serving_url_isValid;

    bool m_pushdown;
    bool m_pushdown_isSet;
    bool m_pushdown_isValid;

    float m_pushdown_duration;
    bool m_pushdown_duration_isSet;
    bool m_pushdown_duration_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    OAISize m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    bool m_ssl_compliant;
    bool m_ssl_compliant_isSet;
    bool m_ssl_compliant_isValid;

    QString m_start_time_type;
    bool m_start_time_type_isSet;
    bool m_start_time_type_isValid;

    QString m_streaming_serving_url;
    bool m_streaming_serving_url_isSet;
    bool m_streaming_serving_url_isValid;

    bool m_transparency;
    bool m_transparency_isSet;
    bool m_transparency_isValid;

    bool m_vertically_locked;
    bool m_vertically_locked_isSet;
    bool m_vertically_locked_isValid;

    QString m_window_mode;
    bool m_window_mode_isSet;
    bool m_window_mode_isValid;

    qint32 m_z_index;
    bool m_z_index_isSet;
    bool m_z_index_isValid;

    QString m_zip_filename;
    bool m_zip_filename_isSet;
    bool m_zip_filename_isValid;

    QString m_zip_filesize;
    bool m_zip_filesize_isSet;
    bool m_zip_filesize_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreativeAsset)

#endif // OAICreativeAsset_H
