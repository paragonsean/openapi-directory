/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReport_schedule.h
 *
 * The report&#39;s schedule. Can only be set if the report&#39;s &#39;dateRange&#39; is a relative date range and the relative date range is not \&quot;TODAY\&quot;.
 */

#ifndef OAIReport_schedule_H
#define OAIReport_schedule_H

#include <QJsonObject>

#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReport_schedule : public OAIObject {
public:
    OAIReport_schedule();
    OAIReport_schedule(QString json);
    ~OAIReport_schedule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    qint32 getEvery() const;
    void setEvery(const qint32 &every);
    bool is_every_Set() const;
    bool is_every_Valid() const;

    QDate getExpirationDate() const;
    void setExpirationDate(const QDate &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    QString getRepeats() const;
    void setRepeats(const QString &repeats);
    bool is_repeats_Set() const;
    bool is_repeats_Valid() const;

    QList<QString> getRepeatsOnWeekDays() const;
    void setRepeatsOnWeekDays(const QList<QString> &repeats_on_week_days);
    bool is_repeats_on_week_days_Set() const;
    bool is_repeats_on_week_days_Valid() const;

    QString getRunsOnDayOfMonth() const;
    void setRunsOnDayOfMonth(const QString &runs_on_day_of_month);
    bool is_runs_on_day_of_month_Set() const;
    bool is_runs_on_day_of_month_Valid() const;

    QDate getStartDate() const;
    void setStartDate(const QDate &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    qint32 m_every;
    bool m_every_isSet;
    bool m_every_isValid;

    QDate m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    QString m_repeats;
    bool m_repeats_isSet;
    bool m_repeats_isValid;

    QList<QString> m_repeats_on_week_days;
    bool m_repeats_on_week_days_isSet;
    bool m_repeats_on_week_days_isValid;

    QString m_runs_on_day_of_month;
    bool m_runs_on_day_of_month_isSet;
    bool m_runs_on_day_of_month_isValid;

    QDate m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReport_schedule)

#endif // OAIReport_schedule_H
