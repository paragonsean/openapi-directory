/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReport_floodlightCriteria.h
 *
 * The report criteria for a report of type \&quot;FLOODLIGHT\&quot;.
 */

#ifndef OAIReport_floodlightCriteria_H
#define OAIReport_floodlightCriteria_H

#include <QJsonObject>

#include "OAIDateRange.h"
#include "OAIDimensionValue.h"
#include "OAIReport_floodlightCriteria_reportProperties.h"
#include "OAISortedDimension.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensionValue;
class OAIDateRange;
class OAISortedDimension;
class OAIReport_floodlightCriteria_reportProperties;

class OAIReport_floodlightCriteria : public OAIObject {
public:
    OAIReport_floodlightCriteria();
    OAIReport_floodlightCriteria(QString json);
    ~OAIReport_floodlightCriteria() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDimensionValue> getCustomRichMediaEvents() const;
    void setCustomRichMediaEvents(const QList<OAIDimensionValue> &custom_rich_media_events);
    bool is_custom_rich_media_events_Set() const;
    bool is_custom_rich_media_events_Valid() const;

    OAIDateRange getDateRange() const;
    void setDateRange(const OAIDateRange &date_range);
    bool is_date_range_Set() const;
    bool is_date_range_Valid() const;

    QList<OAIDimensionValue> getDimensionFilters() const;
    void setDimensionFilters(const QList<OAIDimensionValue> &dimension_filters);
    bool is_dimension_filters_Set() const;
    bool is_dimension_filters_Valid() const;

    QList<OAISortedDimension> getDimensions() const;
    void setDimensions(const QList<OAISortedDimension> &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    OAIDimensionValue getFloodlightConfigId() const;
    void setFloodlightConfigId(const OAIDimensionValue &floodlight_config_id);
    bool is_floodlight_config_id_Set() const;
    bool is_floodlight_config_id_Valid() const;

    QList<QString> getMetricNames() const;
    void setMetricNames(const QList<QString> &metric_names);
    bool is_metric_names_Set() const;
    bool is_metric_names_Valid() const;

    OAIReport_floodlightCriteria_reportProperties getReportProperties() const;
    void setReportProperties(const OAIReport_floodlightCriteria_reportProperties &report_properties);
    bool is_report_properties_Set() const;
    bool is_report_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDimensionValue> m_custom_rich_media_events;
    bool m_custom_rich_media_events_isSet;
    bool m_custom_rich_media_events_isValid;

    OAIDateRange m_date_range;
    bool m_date_range_isSet;
    bool m_date_range_isValid;

    QList<OAIDimensionValue> m_dimension_filters;
    bool m_dimension_filters_isSet;
    bool m_dimension_filters_isValid;

    QList<OAISortedDimension> m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    OAIDimensionValue m_floodlight_config_id;
    bool m_floodlight_config_id_isSet;
    bool m_floodlight_config_id_isValid;

    QList<QString> m_metric_names;
    bool m_metric_names_isSet;
    bool m_metric_names_isValid;

    OAIReport_floodlightCriteria_reportProperties m_report_properties;
    bool m_report_properties_isSet;
    bool m_report_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReport_floodlightCriteria)

#endif // OAIReport_floodlightCriteria_H
