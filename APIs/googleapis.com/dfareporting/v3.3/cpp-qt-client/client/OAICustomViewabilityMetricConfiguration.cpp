/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomViewabilityMetricConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomViewabilityMetricConfiguration::OAICustomViewabilityMetricConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomViewabilityMetricConfiguration::OAICustomViewabilityMetricConfiguration() {
    this->initializeModel();
}

OAICustomViewabilityMetricConfiguration::~OAICustomViewabilityMetricConfiguration() {}

void OAICustomViewabilityMetricConfiguration::initializeModel() {

    m_audible_isSet = false;
    m_audible_isValid = false;

    m_time_millis_isSet = false;
    m_time_millis_isValid = false;

    m_time_percent_isSet = false;
    m_time_percent_isValid = false;

    m_viewability_percent_isSet = false;
    m_viewability_percent_isValid = false;
}

void OAICustomViewabilityMetricConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomViewabilityMetricConfiguration::fromJsonObject(QJsonObject json) {

    m_audible_isValid = ::OpenAPI::fromJsonValue(m_audible, json[QString("audible")]);
    m_audible_isSet = !json[QString("audible")].isNull() && m_audible_isValid;

    m_time_millis_isValid = ::OpenAPI::fromJsonValue(m_time_millis, json[QString("timeMillis")]);
    m_time_millis_isSet = !json[QString("timeMillis")].isNull() && m_time_millis_isValid;

    m_time_percent_isValid = ::OpenAPI::fromJsonValue(m_time_percent, json[QString("timePercent")]);
    m_time_percent_isSet = !json[QString("timePercent")].isNull() && m_time_percent_isValid;

    m_viewability_percent_isValid = ::OpenAPI::fromJsonValue(m_viewability_percent, json[QString("viewabilityPercent")]);
    m_viewability_percent_isSet = !json[QString("viewabilityPercent")].isNull() && m_viewability_percent_isValid;
}

QString OAICustomViewabilityMetricConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomViewabilityMetricConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_audible_isSet) {
        obj.insert(QString("audible"), ::OpenAPI::toJsonValue(m_audible));
    }
    if (m_time_millis_isSet) {
        obj.insert(QString("timeMillis"), ::OpenAPI::toJsonValue(m_time_millis));
    }
    if (m_time_percent_isSet) {
        obj.insert(QString("timePercent"), ::OpenAPI::toJsonValue(m_time_percent));
    }
    if (m_viewability_percent_isSet) {
        obj.insert(QString("viewabilityPercent"), ::OpenAPI::toJsonValue(m_viewability_percent));
    }
    return obj;
}

bool OAICustomViewabilityMetricConfiguration::isAudible() const {
    return m_audible;
}
void OAICustomViewabilityMetricConfiguration::setAudible(const bool &audible) {
    m_audible = audible;
    m_audible_isSet = true;
}

bool OAICustomViewabilityMetricConfiguration::is_audible_Set() const{
    return m_audible_isSet;
}

bool OAICustomViewabilityMetricConfiguration::is_audible_Valid() const{
    return m_audible_isValid;
}

qint32 OAICustomViewabilityMetricConfiguration::getTimeMillis() const {
    return m_time_millis;
}
void OAICustomViewabilityMetricConfiguration::setTimeMillis(const qint32 &time_millis) {
    m_time_millis = time_millis;
    m_time_millis_isSet = true;
}

bool OAICustomViewabilityMetricConfiguration::is_time_millis_Set() const{
    return m_time_millis_isSet;
}

bool OAICustomViewabilityMetricConfiguration::is_time_millis_Valid() const{
    return m_time_millis_isValid;
}

qint32 OAICustomViewabilityMetricConfiguration::getTimePercent() const {
    return m_time_percent;
}
void OAICustomViewabilityMetricConfiguration::setTimePercent(const qint32 &time_percent) {
    m_time_percent = time_percent;
    m_time_percent_isSet = true;
}

bool OAICustomViewabilityMetricConfiguration::is_time_percent_Set() const{
    return m_time_percent_isSet;
}

bool OAICustomViewabilityMetricConfiguration::is_time_percent_Valid() const{
    return m_time_percent_isValid;
}

qint32 OAICustomViewabilityMetricConfiguration::getViewabilityPercent() const {
    return m_viewability_percent;
}
void OAICustomViewabilityMetricConfiguration::setViewabilityPercent(const qint32 &viewability_percent) {
    m_viewability_percent = viewability_percent;
    m_viewability_percent_isSet = true;
}

bool OAICustomViewabilityMetricConfiguration::is_viewability_percent_Set() const{
    return m_viewability_percent_isSet;
}

bool OAICustomViewabilityMetricConfiguration::is_viewability_percent_Valid() const{
    return m_viewability_percent_isValid;
}

bool OAICustomViewabilityMetricConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audible_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_millis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_viewability_percent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomViewabilityMetricConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
