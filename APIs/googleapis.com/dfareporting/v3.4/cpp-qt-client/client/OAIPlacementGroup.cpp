/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlacementGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlacementGroup::OAIPlacementGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlacementGroup::OAIPlacementGroup() {
    this->initializeModel();
}

OAIPlacementGroup::~OAIPlacementGroup() {}

void OAIPlacementGroup::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_advertiser_id_isSet = false;
    m_advertiser_id_isValid = false;

    m_advertiser_id_dimension_value_isSet = false;
    m_advertiser_id_dimension_value_isValid = false;

    m_archived_isSet = false;
    m_archived_isValid = false;

    m_campaign_id_isSet = false;
    m_campaign_id_isValid = false;

    m_campaign_id_dimension_value_isSet = false;
    m_campaign_id_dimension_value_isValid = false;

    m_child_placement_ids_isSet = false;
    m_child_placement_ids_isValid = false;

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_content_category_id_isSet = false;
    m_content_category_id_isValid = false;

    m_create_info_isSet = false;
    m_create_info_isValid = false;

    m_directory_site_id_isSet = false;
    m_directory_site_id_isValid = false;

    m_directory_site_id_dimension_value_isSet = false;
    m_directory_site_id_dimension_value_isValid = false;

    m_external_id_isSet = false;
    m_external_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_id_dimension_value_isSet = false;
    m_id_dimension_value_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_last_modified_info_isSet = false;
    m_last_modified_info_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_placement_group_type_isSet = false;
    m_placement_group_type_isValid = false;

    m_placement_strategy_id_isSet = false;
    m_placement_strategy_id_isValid = false;

    m_pricing_schedule_isSet = false;
    m_pricing_schedule_isValid = false;

    m_primary_placement_id_isSet = false;
    m_primary_placement_id_isValid = false;

    m_primary_placement_id_dimension_value_isSet = false;
    m_primary_placement_id_dimension_value_isValid = false;

    m_site_id_isSet = false;
    m_site_id_isValid = false;

    m_site_id_dimension_value_isSet = false;
    m_site_id_dimension_value_isValid = false;

    m_subaccount_id_isSet = false;
    m_subaccount_id_isValid = false;
}

void OAIPlacementGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPlacementGroup::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_advertiser_id_isValid = ::OpenAPI::fromJsonValue(m_advertiser_id, json[QString("advertiserId")]);
    m_advertiser_id_isSet = !json[QString("advertiserId")].isNull() && m_advertiser_id_isValid;

    m_advertiser_id_dimension_value_isValid = ::OpenAPI::fromJsonValue(m_advertiser_id_dimension_value, json[QString("advertiserIdDimensionValue")]);
    m_advertiser_id_dimension_value_isSet = !json[QString("advertiserIdDimensionValue")].isNull() && m_advertiser_id_dimension_value_isValid;

    m_archived_isValid = ::OpenAPI::fromJsonValue(m_archived, json[QString("archived")]);
    m_archived_isSet = !json[QString("archived")].isNull() && m_archived_isValid;

    m_campaign_id_isValid = ::OpenAPI::fromJsonValue(m_campaign_id, json[QString("campaignId")]);
    m_campaign_id_isSet = !json[QString("campaignId")].isNull() && m_campaign_id_isValid;

    m_campaign_id_dimension_value_isValid = ::OpenAPI::fromJsonValue(m_campaign_id_dimension_value, json[QString("campaignIdDimensionValue")]);
    m_campaign_id_dimension_value_isSet = !json[QString("campaignIdDimensionValue")].isNull() && m_campaign_id_dimension_value_isValid;

    m_child_placement_ids_isValid = ::OpenAPI::fromJsonValue(m_child_placement_ids, json[QString("childPlacementIds")]);
    m_child_placement_ids_isSet = !json[QString("childPlacementIds")].isNull() && m_child_placement_ids_isValid;

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_content_category_id_isValid = ::OpenAPI::fromJsonValue(m_content_category_id, json[QString("contentCategoryId")]);
    m_content_category_id_isSet = !json[QString("contentCategoryId")].isNull() && m_content_category_id_isValid;

    m_create_info_isValid = ::OpenAPI::fromJsonValue(m_create_info, json[QString("createInfo")]);
    m_create_info_isSet = !json[QString("createInfo")].isNull() && m_create_info_isValid;

    m_directory_site_id_isValid = ::OpenAPI::fromJsonValue(m_directory_site_id, json[QString("directorySiteId")]);
    m_directory_site_id_isSet = !json[QString("directorySiteId")].isNull() && m_directory_site_id_isValid;

    m_directory_site_id_dimension_value_isValid = ::OpenAPI::fromJsonValue(m_directory_site_id_dimension_value, json[QString("directorySiteIdDimensionValue")]);
    m_directory_site_id_dimension_value_isSet = !json[QString("directorySiteIdDimensionValue")].isNull() && m_directory_site_id_dimension_value_isValid;

    m_external_id_isValid = ::OpenAPI::fromJsonValue(m_external_id, json[QString("externalId")]);
    m_external_id_isSet = !json[QString("externalId")].isNull() && m_external_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_id_dimension_value_isValid = ::OpenAPI::fromJsonValue(m_id_dimension_value, json[QString("idDimensionValue")]);
    m_id_dimension_value_isSet = !json[QString("idDimensionValue")].isNull() && m_id_dimension_value_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_last_modified_info_isValid = ::OpenAPI::fromJsonValue(m_last_modified_info, json[QString("lastModifiedInfo")]);
    m_last_modified_info_isSet = !json[QString("lastModifiedInfo")].isNull() && m_last_modified_info_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_placement_group_type_isValid = ::OpenAPI::fromJsonValue(m_placement_group_type, json[QString("placementGroupType")]);
    m_placement_group_type_isSet = !json[QString("placementGroupType")].isNull() && m_placement_group_type_isValid;

    m_placement_strategy_id_isValid = ::OpenAPI::fromJsonValue(m_placement_strategy_id, json[QString("placementStrategyId")]);
    m_placement_strategy_id_isSet = !json[QString("placementStrategyId")].isNull() && m_placement_strategy_id_isValid;

    m_pricing_schedule_isValid = ::OpenAPI::fromJsonValue(m_pricing_schedule, json[QString("pricingSchedule")]);
    m_pricing_schedule_isSet = !json[QString("pricingSchedule")].isNull() && m_pricing_schedule_isValid;

    m_primary_placement_id_isValid = ::OpenAPI::fromJsonValue(m_primary_placement_id, json[QString("primaryPlacementId")]);
    m_primary_placement_id_isSet = !json[QString("primaryPlacementId")].isNull() && m_primary_placement_id_isValid;

    m_primary_placement_id_dimension_value_isValid = ::OpenAPI::fromJsonValue(m_primary_placement_id_dimension_value, json[QString("primaryPlacementIdDimensionValue")]);
    m_primary_placement_id_dimension_value_isSet = !json[QString("primaryPlacementIdDimensionValue")].isNull() && m_primary_placement_id_dimension_value_isValid;

    m_site_id_isValid = ::OpenAPI::fromJsonValue(m_site_id, json[QString("siteId")]);
    m_site_id_isSet = !json[QString("siteId")].isNull() && m_site_id_isValid;

    m_site_id_dimension_value_isValid = ::OpenAPI::fromJsonValue(m_site_id_dimension_value, json[QString("siteIdDimensionValue")]);
    m_site_id_dimension_value_isSet = !json[QString("siteIdDimensionValue")].isNull() && m_site_id_dimension_value_isValid;

    m_subaccount_id_isValid = ::OpenAPI::fromJsonValue(m_subaccount_id, json[QString("subaccountId")]);
    m_subaccount_id_isSet = !json[QString("subaccountId")].isNull() && m_subaccount_id_isValid;
}

QString OAIPlacementGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPlacementGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_advertiser_id_isSet) {
        obj.insert(QString("advertiserId"), ::OpenAPI::toJsonValue(m_advertiser_id));
    }
    if (m_advertiser_id_dimension_value.isSet()) {
        obj.insert(QString("advertiserIdDimensionValue"), ::OpenAPI::toJsonValue(m_advertiser_id_dimension_value));
    }
    if (m_archived_isSet) {
        obj.insert(QString("archived"), ::OpenAPI::toJsonValue(m_archived));
    }
    if (m_campaign_id_isSet) {
        obj.insert(QString("campaignId"), ::OpenAPI::toJsonValue(m_campaign_id));
    }
    if (m_campaign_id_dimension_value.isSet()) {
        obj.insert(QString("campaignIdDimensionValue"), ::OpenAPI::toJsonValue(m_campaign_id_dimension_value));
    }
    if (m_child_placement_ids.size() > 0) {
        obj.insert(QString("childPlacementIds"), ::OpenAPI::toJsonValue(m_child_placement_ids));
    }
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_content_category_id_isSet) {
        obj.insert(QString("contentCategoryId"), ::OpenAPI::toJsonValue(m_content_category_id));
    }
    if (m_create_info.isSet()) {
        obj.insert(QString("createInfo"), ::OpenAPI::toJsonValue(m_create_info));
    }
    if (m_directory_site_id_isSet) {
        obj.insert(QString("directorySiteId"), ::OpenAPI::toJsonValue(m_directory_site_id));
    }
    if (m_directory_site_id_dimension_value.isSet()) {
        obj.insert(QString("directorySiteIdDimensionValue"), ::OpenAPI::toJsonValue(m_directory_site_id_dimension_value));
    }
    if (m_external_id_isSet) {
        obj.insert(QString("externalId"), ::OpenAPI::toJsonValue(m_external_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_id_dimension_value.isSet()) {
        obj.insert(QString("idDimensionValue"), ::OpenAPI::toJsonValue(m_id_dimension_value));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_last_modified_info.isSet()) {
        obj.insert(QString("lastModifiedInfo"), ::OpenAPI::toJsonValue(m_last_modified_info));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_placement_group_type_isSet) {
        obj.insert(QString("placementGroupType"), ::OpenAPI::toJsonValue(m_placement_group_type));
    }
    if (m_placement_strategy_id_isSet) {
        obj.insert(QString("placementStrategyId"), ::OpenAPI::toJsonValue(m_placement_strategy_id));
    }
    if (m_pricing_schedule.isSet()) {
        obj.insert(QString("pricingSchedule"), ::OpenAPI::toJsonValue(m_pricing_schedule));
    }
    if (m_primary_placement_id_isSet) {
        obj.insert(QString("primaryPlacementId"), ::OpenAPI::toJsonValue(m_primary_placement_id));
    }
    if (m_primary_placement_id_dimension_value.isSet()) {
        obj.insert(QString("primaryPlacementIdDimensionValue"), ::OpenAPI::toJsonValue(m_primary_placement_id_dimension_value));
    }
    if (m_site_id_isSet) {
        obj.insert(QString("siteId"), ::OpenAPI::toJsonValue(m_site_id));
    }
    if (m_site_id_dimension_value.isSet()) {
        obj.insert(QString("siteIdDimensionValue"), ::OpenAPI::toJsonValue(m_site_id_dimension_value));
    }
    if (m_subaccount_id_isSet) {
        obj.insert(QString("subaccountId"), ::OpenAPI::toJsonValue(m_subaccount_id));
    }
    return obj;
}

QString OAIPlacementGroup::getAccountId() const {
    return m_account_id;
}
void OAIPlacementGroup::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIPlacementGroup::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIPlacementGroup::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIPlacementGroup::getAdvertiserId() const {
    return m_advertiser_id;
}
void OAIPlacementGroup::setAdvertiserId(const QString &advertiser_id) {
    m_advertiser_id = advertiser_id;
    m_advertiser_id_isSet = true;
}

bool OAIPlacementGroup::is_advertiser_id_Set() const{
    return m_advertiser_id_isSet;
}

bool OAIPlacementGroup::is_advertiser_id_Valid() const{
    return m_advertiser_id_isValid;
}

OAIDimensionValue OAIPlacementGroup::getAdvertiserIdDimensionValue() const {
    return m_advertiser_id_dimension_value;
}
void OAIPlacementGroup::setAdvertiserIdDimensionValue(const OAIDimensionValue &advertiser_id_dimension_value) {
    m_advertiser_id_dimension_value = advertiser_id_dimension_value;
    m_advertiser_id_dimension_value_isSet = true;
}

bool OAIPlacementGroup::is_advertiser_id_dimension_value_Set() const{
    return m_advertiser_id_dimension_value_isSet;
}

bool OAIPlacementGroup::is_advertiser_id_dimension_value_Valid() const{
    return m_advertiser_id_dimension_value_isValid;
}

bool OAIPlacementGroup::isArchived() const {
    return m_archived;
}
void OAIPlacementGroup::setArchived(const bool &archived) {
    m_archived = archived;
    m_archived_isSet = true;
}

bool OAIPlacementGroup::is_archived_Set() const{
    return m_archived_isSet;
}

bool OAIPlacementGroup::is_archived_Valid() const{
    return m_archived_isValid;
}

QString OAIPlacementGroup::getCampaignId() const {
    return m_campaign_id;
}
void OAIPlacementGroup::setCampaignId(const QString &campaign_id) {
    m_campaign_id = campaign_id;
    m_campaign_id_isSet = true;
}

bool OAIPlacementGroup::is_campaign_id_Set() const{
    return m_campaign_id_isSet;
}

bool OAIPlacementGroup::is_campaign_id_Valid() const{
    return m_campaign_id_isValid;
}

OAIDimensionValue OAIPlacementGroup::getCampaignIdDimensionValue() const {
    return m_campaign_id_dimension_value;
}
void OAIPlacementGroup::setCampaignIdDimensionValue(const OAIDimensionValue &campaign_id_dimension_value) {
    m_campaign_id_dimension_value = campaign_id_dimension_value;
    m_campaign_id_dimension_value_isSet = true;
}

bool OAIPlacementGroup::is_campaign_id_dimension_value_Set() const{
    return m_campaign_id_dimension_value_isSet;
}

bool OAIPlacementGroup::is_campaign_id_dimension_value_Valid() const{
    return m_campaign_id_dimension_value_isValid;
}

QList<QString> OAIPlacementGroup::getChildPlacementIds() const {
    return m_child_placement_ids;
}
void OAIPlacementGroup::setChildPlacementIds(const QList<QString> &child_placement_ids) {
    m_child_placement_ids = child_placement_ids;
    m_child_placement_ids_isSet = true;
}

bool OAIPlacementGroup::is_child_placement_ids_Set() const{
    return m_child_placement_ids_isSet;
}

bool OAIPlacementGroup::is_child_placement_ids_Valid() const{
    return m_child_placement_ids_isValid;
}

QString OAIPlacementGroup::getComment() const {
    return m_comment;
}
void OAIPlacementGroup::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIPlacementGroup::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIPlacementGroup::is_comment_Valid() const{
    return m_comment_isValid;
}

QString OAIPlacementGroup::getContentCategoryId() const {
    return m_content_category_id;
}
void OAIPlacementGroup::setContentCategoryId(const QString &content_category_id) {
    m_content_category_id = content_category_id;
    m_content_category_id_isSet = true;
}

bool OAIPlacementGroup::is_content_category_id_Set() const{
    return m_content_category_id_isSet;
}

bool OAIPlacementGroup::is_content_category_id_Valid() const{
    return m_content_category_id_isValid;
}

OAILastModifiedInfo OAIPlacementGroup::getCreateInfo() const {
    return m_create_info;
}
void OAIPlacementGroup::setCreateInfo(const OAILastModifiedInfo &create_info) {
    m_create_info = create_info;
    m_create_info_isSet = true;
}

bool OAIPlacementGroup::is_create_info_Set() const{
    return m_create_info_isSet;
}

bool OAIPlacementGroup::is_create_info_Valid() const{
    return m_create_info_isValid;
}

QString OAIPlacementGroup::getDirectorySiteId() const {
    return m_directory_site_id;
}
void OAIPlacementGroup::setDirectorySiteId(const QString &directory_site_id) {
    m_directory_site_id = directory_site_id;
    m_directory_site_id_isSet = true;
}

bool OAIPlacementGroup::is_directory_site_id_Set() const{
    return m_directory_site_id_isSet;
}

bool OAIPlacementGroup::is_directory_site_id_Valid() const{
    return m_directory_site_id_isValid;
}

OAIDimensionValue OAIPlacementGroup::getDirectorySiteIdDimensionValue() const {
    return m_directory_site_id_dimension_value;
}
void OAIPlacementGroup::setDirectorySiteIdDimensionValue(const OAIDimensionValue &directory_site_id_dimension_value) {
    m_directory_site_id_dimension_value = directory_site_id_dimension_value;
    m_directory_site_id_dimension_value_isSet = true;
}

bool OAIPlacementGroup::is_directory_site_id_dimension_value_Set() const{
    return m_directory_site_id_dimension_value_isSet;
}

bool OAIPlacementGroup::is_directory_site_id_dimension_value_Valid() const{
    return m_directory_site_id_dimension_value_isValid;
}

QString OAIPlacementGroup::getExternalId() const {
    return m_external_id;
}
void OAIPlacementGroup::setExternalId(const QString &external_id) {
    m_external_id = external_id;
    m_external_id_isSet = true;
}

bool OAIPlacementGroup::is_external_id_Set() const{
    return m_external_id_isSet;
}

bool OAIPlacementGroup::is_external_id_Valid() const{
    return m_external_id_isValid;
}

QString OAIPlacementGroup::getId() const {
    return m_id;
}
void OAIPlacementGroup::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPlacementGroup::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPlacementGroup::is_id_Valid() const{
    return m_id_isValid;
}

OAIDimensionValue OAIPlacementGroup::getIdDimensionValue() const {
    return m_id_dimension_value;
}
void OAIPlacementGroup::setIdDimensionValue(const OAIDimensionValue &id_dimension_value) {
    m_id_dimension_value = id_dimension_value;
    m_id_dimension_value_isSet = true;
}

bool OAIPlacementGroup::is_id_dimension_value_Set() const{
    return m_id_dimension_value_isSet;
}

bool OAIPlacementGroup::is_id_dimension_value_Valid() const{
    return m_id_dimension_value_isValid;
}

QString OAIPlacementGroup::getKind() const {
    return m_kind;
}
void OAIPlacementGroup::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIPlacementGroup::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIPlacementGroup::is_kind_Valid() const{
    return m_kind_isValid;
}

OAILastModifiedInfo OAIPlacementGroup::getLastModifiedInfo() const {
    return m_last_modified_info;
}
void OAIPlacementGroup::setLastModifiedInfo(const OAILastModifiedInfo &last_modified_info) {
    m_last_modified_info = last_modified_info;
    m_last_modified_info_isSet = true;
}

bool OAIPlacementGroup::is_last_modified_info_Set() const{
    return m_last_modified_info_isSet;
}

bool OAIPlacementGroup::is_last_modified_info_Valid() const{
    return m_last_modified_info_isValid;
}

QString OAIPlacementGroup::getName() const {
    return m_name;
}
void OAIPlacementGroup::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPlacementGroup::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPlacementGroup::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPlacementGroup::getPlacementGroupType() const {
    return m_placement_group_type;
}
void OAIPlacementGroup::setPlacementGroupType(const QString &placement_group_type) {
    m_placement_group_type = placement_group_type;
    m_placement_group_type_isSet = true;
}

bool OAIPlacementGroup::is_placement_group_type_Set() const{
    return m_placement_group_type_isSet;
}

bool OAIPlacementGroup::is_placement_group_type_Valid() const{
    return m_placement_group_type_isValid;
}

QString OAIPlacementGroup::getPlacementStrategyId() const {
    return m_placement_strategy_id;
}
void OAIPlacementGroup::setPlacementStrategyId(const QString &placement_strategy_id) {
    m_placement_strategy_id = placement_strategy_id;
    m_placement_strategy_id_isSet = true;
}

bool OAIPlacementGroup::is_placement_strategy_id_Set() const{
    return m_placement_strategy_id_isSet;
}

bool OAIPlacementGroup::is_placement_strategy_id_Valid() const{
    return m_placement_strategy_id_isValid;
}

OAIPricingSchedule OAIPlacementGroup::getPricingSchedule() const {
    return m_pricing_schedule;
}
void OAIPlacementGroup::setPricingSchedule(const OAIPricingSchedule &pricing_schedule) {
    m_pricing_schedule = pricing_schedule;
    m_pricing_schedule_isSet = true;
}

bool OAIPlacementGroup::is_pricing_schedule_Set() const{
    return m_pricing_schedule_isSet;
}

bool OAIPlacementGroup::is_pricing_schedule_Valid() const{
    return m_pricing_schedule_isValid;
}

QString OAIPlacementGroup::getPrimaryPlacementId() const {
    return m_primary_placement_id;
}
void OAIPlacementGroup::setPrimaryPlacementId(const QString &primary_placement_id) {
    m_primary_placement_id = primary_placement_id;
    m_primary_placement_id_isSet = true;
}

bool OAIPlacementGroup::is_primary_placement_id_Set() const{
    return m_primary_placement_id_isSet;
}

bool OAIPlacementGroup::is_primary_placement_id_Valid() const{
    return m_primary_placement_id_isValid;
}

OAIDimensionValue OAIPlacementGroup::getPrimaryPlacementIdDimensionValue() const {
    return m_primary_placement_id_dimension_value;
}
void OAIPlacementGroup::setPrimaryPlacementIdDimensionValue(const OAIDimensionValue &primary_placement_id_dimension_value) {
    m_primary_placement_id_dimension_value = primary_placement_id_dimension_value;
    m_primary_placement_id_dimension_value_isSet = true;
}

bool OAIPlacementGroup::is_primary_placement_id_dimension_value_Set() const{
    return m_primary_placement_id_dimension_value_isSet;
}

bool OAIPlacementGroup::is_primary_placement_id_dimension_value_Valid() const{
    return m_primary_placement_id_dimension_value_isValid;
}

QString OAIPlacementGroup::getSiteId() const {
    return m_site_id;
}
void OAIPlacementGroup::setSiteId(const QString &site_id) {
    m_site_id = site_id;
    m_site_id_isSet = true;
}

bool OAIPlacementGroup::is_site_id_Set() const{
    return m_site_id_isSet;
}

bool OAIPlacementGroup::is_site_id_Valid() const{
    return m_site_id_isValid;
}

OAIDimensionValue OAIPlacementGroup::getSiteIdDimensionValue() const {
    return m_site_id_dimension_value;
}
void OAIPlacementGroup::setSiteIdDimensionValue(const OAIDimensionValue &site_id_dimension_value) {
    m_site_id_dimension_value = site_id_dimension_value;
    m_site_id_dimension_value_isSet = true;
}

bool OAIPlacementGroup::is_site_id_dimension_value_Set() const{
    return m_site_id_dimension_value_isSet;
}

bool OAIPlacementGroup::is_site_id_dimension_value_Valid() const{
    return m_site_id_dimension_value_isValid;
}

QString OAIPlacementGroup::getSubaccountId() const {
    return m_subaccount_id;
}
void OAIPlacementGroup::setSubaccountId(const QString &subaccount_id) {
    m_subaccount_id = subaccount_id;
    m_subaccount_id_isSet = true;
}

bool OAIPlacementGroup::is_subaccount_id_Set() const{
    return m_subaccount_id_isSet;
}

bool OAIPlacementGroup::is_subaccount_id_Valid() const{
    return m_subaccount_id_isValid;
}

bool OAIPlacementGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advertiser_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advertiser_id_dimension_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_archived_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_campaign_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_campaign_id_dimension_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_child_placement_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_category_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_directory_site_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_directory_site_id_dimension_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_dimension_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_placement_group_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_placement_strategy_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_placement_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_placement_id_dimension_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_site_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_site_id_dimension_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subaccount_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPlacementGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
