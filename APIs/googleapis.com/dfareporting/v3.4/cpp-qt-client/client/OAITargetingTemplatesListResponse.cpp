/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITargetingTemplatesListResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITargetingTemplatesListResponse::OAITargetingTemplatesListResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITargetingTemplatesListResponse::OAITargetingTemplatesListResponse() {
    this->initializeModel();
}

OAITargetingTemplatesListResponse::~OAITargetingTemplatesListResponse() {}

void OAITargetingTemplatesListResponse::initializeModel() {

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_targeting_templates_isSet = false;
    m_targeting_templates_isValid = false;
}

void OAITargetingTemplatesListResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITargetingTemplatesListResponse::fromJsonObject(QJsonObject json) {

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_targeting_templates_isValid = ::OpenAPI::fromJsonValue(m_targeting_templates, json[QString("targetingTemplates")]);
    m_targeting_templates_isSet = !json[QString("targetingTemplates")].isNull() && m_targeting_templates_isValid;
}

QString OAITargetingTemplatesListResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITargetingTemplatesListResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_targeting_templates.size() > 0) {
        obj.insert(QString("targetingTemplates"), ::OpenAPI::toJsonValue(m_targeting_templates));
    }
    return obj;
}

QString OAITargetingTemplatesListResponse::getKind() const {
    return m_kind;
}
void OAITargetingTemplatesListResponse::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAITargetingTemplatesListResponse::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAITargetingTemplatesListResponse::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAITargetingTemplatesListResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAITargetingTemplatesListResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAITargetingTemplatesListResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAITargetingTemplatesListResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAITargetingTemplate> OAITargetingTemplatesListResponse::getTargetingTemplates() const {
    return m_targeting_templates;
}
void OAITargetingTemplatesListResponse::setTargetingTemplates(const QList<OAITargetingTemplate> &targeting_templates) {
    m_targeting_templates = targeting_templates;
    m_targeting_templates_isSet = true;
}

bool OAITargetingTemplatesListResponse::is_targeting_templates_Set() const{
    return m_targeting_templates_isSet;
}

bool OAITargetingTemplatesListResponse::is_targeting_templates_Valid() const{
    return m_targeting_templates_isValid;
}

bool OAITargetingTemplatesListResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_targeting_templates.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITargetingTemplatesListResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
