/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomEvent.h
 *
 * Experimental feature (no support provided) A custom event represents a third party impression, a third party click, an annotation on a first party impression, or an annotation on a first party click.
 */

#ifndef OAICustomEvent_H
#define OAICustomEvent_H

#include <QJsonObject>

#include "OAICustomEventClickAnnotation.h"
#include "OAICustomEventImpressionAnnotation.h"
#include "OAICustomEventInsert.h"
#include "OAICustomVariable.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomEventClickAnnotation;
class OAICustomEventImpressionAnnotation;
class OAICustomVariable;
class OAICustomEventInsert;

class OAICustomEvent : public OAIObject {
public:
    OAICustomEvent();
    OAICustomEvent(QString json);
    ~OAICustomEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICustomEventClickAnnotation getAnnotateClickEvent() const;
    void setAnnotateClickEvent(const OAICustomEventClickAnnotation &annotate_click_event);
    bool is_annotate_click_event_Set() const;
    bool is_annotate_click_event_Valid() const;

    OAICustomEventImpressionAnnotation getAnnotateImpressionEvent() const;
    void setAnnotateImpressionEvent(const OAICustomEventImpressionAnnotation &annotate_impression_event);
    bool is_annotate_impression_event_Set() const;
    bool is_annotate_impression_event_Valid() const;

    QList<OAICustomVariable> getCustomVariables() const;
    void setCustomVariables(const QList<OAICustomVariable> &custom_variables);
    bool is_custom_variables_Set() const;
    bool is_custom_variables_Valid() const;

    QString getEventType() const;
    void setEventType(const QString &event_type);
    bool is_event_type_Set() const;
    bool is_event_type_Valid() const;

    QString getFloodlightConfigurationId() const;
    void setFloodlightConfigurationId(const QString &floodlight_configuration_id);
    bool is_floodlight_configuration_id_Set() const;
    bool is_floodlight_configuration_id_Valid() const;

    OAICustomEventInsert getInsertEvent() const;
    void setInsertEvent(const OAICustomEventInsert &insert_event);
    bool is_insert_event_Set() const;
    bool is_insert_event_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getOrdinal() const;
    void setOrdinal(const QString &ordinal);
    bool is_ordinal_Set() const;
    bool is_ordinal_Valid() const;

    QString getTimestampMicros() const;
    void setTimestampMicros(const QString &timestamp_micros);
    bool is_timestamp_micros_Set() const;
    bool is_timestamp_micros_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICustomEventClickAnnotation m_annotate_click_event;
    bool m_annotate_click_event_isSet;
    bool m_annotate_click_event_isValid;

    OAICustomEventImpressionAnnotation m_annotate_impression_event;
    bool m_annotate_impression_event_isSet;
    bool m_annotate_impression_event_isValid;

    QList<OAICustomVariable> m_custom_variables;
    bool m_custom_variables_isSet;
    bool m_custom_variables_isValid;

    QString m_event_type;
    bool m_event_type_isSet;
    bool m_event_type_isValid;

    QString m_floodlight_configuration_id;
    bool m_floodlight_configuration_id_isSet;
    bool m_floodlight_configuration_id_isValid;

    OAICustomEventInsert m_insert_event;
    bool m_insert_event_isSet;
    bool m_insert_event_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_ordinal;
    bool m_ordinal_isSet;
    bool m_ordinal_isValid;

    QString m_timestamp_micros;
    bool m_timestamp_micros_isSet;
    bool m_timestamp_micros_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomEvent)

#endif // OAICustomEvent_H
