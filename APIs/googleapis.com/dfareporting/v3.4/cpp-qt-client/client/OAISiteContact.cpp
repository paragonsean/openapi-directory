/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISiteContact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISiteContact::OAISiteContact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISiteContact::OAISiteContact() {
    this->initializeModel();
}

OAISiteContact::~OAISiteContact() {}

void OAISiteContact::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_contact_type_isSet = false;
    m_contact_type_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAISiteContact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISiteContact::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_contact_type_isValid = ::OpenAPI::fromJsonValue(m_contact_type, json[QString("contactType")]);
    m_contact_type_isSet = !json[QString("contactType")].isNull() && m_contact_type_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAISiteContact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISiteContact::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_contact_type_isSet) {
        obj.insert(QString("contactType"), ::OpenAPI::toJsonValue(m_contact_type));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAISiteContact::getAddress() const {
    return m_address;
}
void OAISiteContact::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAISiteContact::is_address_Set() const{
    return m_address_isSet;
}

bool OAISiteContact::is_address_Valid() const{
    return m_address_isValid;
}

QString OAISiteContact::getContactType() const {
    return m_contact_type;
}
void OAISiteContact::setContactType(const QString &contact_type) {
    m_contact_type = contact_type;
    m_contact_type_isSet = true;
}

bool OAISiteContact::is_contact_type_Set() const{
    return m_contact_type_isSet;
}

bool OAISiteContact::is_contact_type_Valid() const{
    return m_contact_type_isValid;
}

QString OAISiteContact::getEmail() const {
    return m_email;
}
void OAISiteContact::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAISiteContact::is_email_Set() const{
    return m_email_isSet;
}

bool OAISiteContact::is_email_Valid() const{
    return m_email_isValid;
}

QString OAISiteContact::getFirstName() const {
    return m_first_name;
}
void OAISiteContact::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAISiteContact::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAISiteContact::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAISiteContact::getId() const {
    return m_id;
}
void OAISiteContact::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISiteContact::is_id_Set() const{
    return m_id_isSet;
}

bool OAISiteContact::is_id_Valid() const{
    return m_id_isValid;
}

QString OAISiteContact::getLastName() const {
    return m_last_name;
}
void OAISiteContact::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAISiteContact::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAISiteContact::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAISiteContact::getPhone() const {
    return m_phone;
}
void OAISiteContact::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAISiteContact::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAISiteContact::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAISiteContact::getTitle() const {
    return m_title;
}
void OAISiteContact::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAISiteContact::is_title_Set() const{
    return m_title_isSet;
}

bool OAISiteContact::is_title_Valid() const{
    return m_title_isValid;
}

bool OAISiteContact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISiteContact::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
