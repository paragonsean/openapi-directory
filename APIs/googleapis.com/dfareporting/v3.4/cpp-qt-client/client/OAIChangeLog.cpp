/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChangeLog.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChangeLog::OAIChangeLog(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChangeLog::OAIChangeLog() {
    this->initializeModel();
}

OAIChangeLog::~OAIChangeLog() {}

void OAIChangeLog::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_action_isSet = false;
    m_action_isValid = false;

    m_change_time_isSet = false;
    m_change_time_isValid = false;

    m_field_name_isSet = false;
    m_field_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_new_value_isSet = false;
    m_new_value_isValid = false;

    m_object_id_isSet = false;
    m_object_id_isValid = false;

    m_object_type_isSet = false;
    m_object_type_isValid = false;

    m_old_value_isSet = false;
    m_old_value_isValid = false;

    m_subaccount_id_isSet = false;
    m_subaccount_id_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;

    m_user_profile_id_isSet = false;
    m_user_profile_id_isValid = false;

    m_user_profile_name_isSet = false;
    m_user_profile_name_isValid = false;
}

void OAIChangeLog::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChangeLog::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_change_time_isValid = ::OpenAPI::fromJsonValue(m_change_time, json[QString("changeTime")]);
    m_change_time_isSet = !json[QString("changeTime")].isNull() && m_change_time_isValid;

    m_field_name_isValid = ::OpenAPI::fromJsonValue(m_field_name, json[QString("fieldName")]);
    m_field_name_isSet = !json[QString("fieldName")].isNull() && m_field_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_new_value_isValid = ::OpenAPI::fromJsonValue(m_new_value, json[QString("newValue")]);
    m_new_value_isSet = !json[QString("newValue")].isNull() && m_new_value_isValid;

    m_object_id_isValid = ::OpenAPI::fromJsonValue(m_object_id, json[QString("objectId")]);
    m_object_id_isSet = !json[QString("objectId")].isNull() && m_object_id_isValid;

    m_object_type_isValid = ::OpenAPI::fromJsonValue(m_object_type, json[QString("objectType")]);
    m_object_type_isSet = !json[QString("objectType")].isNull() && m_object_type_isValid;

    m_old_value_isValid = ::OpenAPI::fromJsonValue(m_old_value, json[QString("oldValue")]);
    m_old_value_isSet = !json[QString("oldValue")].isNull() && m_old_value_isValid;

    m_subaccount_id_isValid = ::OpenAPI::fromJsonValue(m_subaccount_id, json[QString("subaccountId")]);
    m_subaccount_id_isSet = !json[QString("subaccountId")].isNull() && m_subaccount_id_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transactionId")]);
    m_transaction_id_isSet = !json[QString("transactionId")].isNull() && m_transaction_id_isValid;

    m_user_profile_id_isValid = ::OpenAPI::fromJsonValue(m_user_profile_id, json[QString("userProfileId")]);
    m_user_profile_id_isSet = !json[QString("userProfileId")].isNull() && m_user_profile_id_isValid;

    m_user_profile_name_isValid = ::OpenAPI::fromJsonValue(m_user_profile_name, json[QString("userProfileName")]);
    m_user_profile_name_isSet = !json[QString("userProfileName")].isNull() && m_user_profile_name_isValid;
}

QString OAIChangeLog::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChangeLog::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_change_time_isSet) {
        obj.insert(QString("changeTime"), ::OpenAPI::toJsonValue(m_change_time));
    }
    if (m_field_name_isSet) {
        obj.insert(QString("fieldName"), ::OpenAPI::toJsonValue(m_field_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_new_value_isSet) {
        obj.insert(QString("newValue"), ::OpenAPI::toJsonValue(m_new_value));
    }
    if (m_object_id_isSet) {
        obj.insert(QString("objectId"), ::OpenAPI::toJsonValue(m_object_id));
    }
    if (m_object_type_isSet) {
        obj.insert(QString("objectType"), ::OpenAPI::toJsonValue(m_object_type));
    }
    if (m_old_value_isSet) {
        obj.insert(QString("oldValue"), ::OpenAPI::toJsonValue(m_old_value));
    }
    if (m_subaccount_id_isSet) {
        obj.insert(QString("subaccountId"), ::OpenAPI::toJsonValue(m_subaccount_id));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transactionId"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    if (m_user_profile_id_isSet) {
        obj.insert(QString("userProfileId"), ::OpenAPI::toJsonValue(m_user_profile_id));
    }
    if (m_user_profile_name_isSet) {
        obj.insert(QString("userProfileName"), ::OpenAPI::toJsonValue(m_user_profile_name));
    }
    return obj;
}

QString OAIChangeLog::getAccountId() const {
    return m_account_id;
}
void OAIChangeLog::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIChangeLog::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIChangeLog::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIChangeLog::getAction() const {
    return m_action;
}
void OAIChangeLog::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIChangeLog::is_action_Set() const{
    return m_action_isSet;
}

bool OAIChangeLog::is_action_Valid() const{
    return m_action_isValid;
}

QDateTime OAIChangeLog::getChangeTime() const {
    return m_change_time;
}
void OAIChangeLog::setChangeTime(const QDateTime &change_time) {
    m_change_time = change_time;
    m_change_time_isSet = true;
}

bool OAIChangeLog::is_change_time_Set() const{
    return m_change_time_isSet;
}

bool OAIChangeLog::is_change_time_Valid() const{
    return m_change_time_isValid;
}

QString OAIChangeLog::getFieldName() const {
    return m_field_name;
}
void OAIChangeLog::setFieldName(const QString &field_name) {
    m_field_name = field_name;
    m_field_name_isSet = true;
}

bool OAIChangeLog::is_field_name_Set() const{
    return m_field_name_isSet;
}

bool OAIChangeLog::is_field_name_Valid() const{
    return m_field_name_isValid;
}

QString OAIChangeLog::getId() const {
    return m_id;
}
void OAIChangeLog::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIChangeLog::is_id_Set() const{
    return m_id_isSet;
}

bool OAIChangeLog::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIChangeLog::getKind() const {
    return m_kind;
}
void OAIChangeLog::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIChangeLog::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIChangeLog::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIChangeLog::getNewValue() const {
    return m_new_value;
}
void OAIChangeLog::setNewValue(const QString &new_value) {
    m_new_value = new_value;
    m_new_value_isSet = true;
}

bool OAIChangeLog::is_new_value_Set() const{
    return m_new_value_isSet;
}

bool OAIChangeLog::is_new_value_Valid() const{
    return m_new_value_isValid;
}

QString OAIChangeLog::getObjectId() const {
    return m_object_id;
}
void OAIChangeLog::setObjectId(const QString &object_id) {
    m_object_id = object_id;
    m_object_id_isSet = true;
}

bool OAIChangeLog::is_object_id_Set() const{
    return m_object_id_isSet;
}

bool OAIChangeLog::is_object_id_Valid() const{
    return m_object_id_isValid;
}

QString OAIChangeLog::getObjectType() const {
    return m_object_type;
}
void OAIChangeLog::setObjectType(const QString &object_type) {
    m_object_type = object_type;
    m_object_type_isSet = true;
}

bool OAIChangeLog::is_object_type_Set() const{
    return m_object_type_isSet;
}

bool OAIChangeLog::is_object_type_Valid() const{
    return m_object_type_isValid;
}

QString OAIChangeLog::getOldValue() const {
    return m_old_value;
}
void OAIChangeLog::setOldValue(const QString &old_value) {
    m_old_value = old_value;
    m_old_value_isSet = true;
}

bool OAIChangeLog::is_old_value_Set() const{
    return m_old_value_isSet;
}

bool OAIChangeLog::is_old_value_Valid() const{
    return m_old_value_isValid;
}

QString OAIChangeLog::getSubaccountId() const {
    return m_subaccount_id;
}
void OAIChangeLog::setSubaccountId(const QString &subaccount_id) {
    m_subaccount_id = subaccount_id;
    m_subaccount_id_isSet = true;
}

bool OAIChangeLog::is_subaccount_id_Set() const{
    return m_subaccount_id_isSet;
}

bool OAIChangeLog::is_subaccount_id_Valid() const{
    return m_subaccount_id_isValid;
}

QString OAIChangeLog::getTransactionId() const {
    return m_transaction_id;
}
void OAIChangeLog::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAIChangeLog::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAIChangeLog::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

QString OAIChangeLog::getUserProfileId() const {
    return m_user_profile_id;
}
void OAIChangeLog::setUserProfileId(const QString &user_profile_id) {
    m_user_profile_id = user_profile_id;
    m_user_profile_id_isSet = true;
}

bool OAIChangeLog::is_user_profile_id_Set() const{
    return m_user_profile_id_isSet;
}

bool OAIChangeLog::is_user_profile_id_Valid() const{
    return m_user_profile_id_isValid;
}

QString OAIChangeLog::getUserProfileName() const {
    return m_user_profile_name;
}
void OAIChangeLog::setUserProfileName(const QString &user_profile_name) {
    m_user_profile_name = user_profile_name;
    m_user_profile_name_isSet = true;
}

bool OAIChangeLog::is_user_profile_name_Set() const{
    return m_user_profile_name_isSet;
}

bool OAIChangeLog::is_user_profile_name_Valid() const{
    return m_user_profile_name_isValid;
}

bool OAIChangeLog::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_old_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subaccount_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_profile_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChangeLog::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
