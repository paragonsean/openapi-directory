/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKeyValueTargetingExpression.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKeyValueTargetingExpression::OAIKeyValueTargetingExpression(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKeyValueTargetingExpression::OAIKeyValueTargetingExpression() {
    this->initializeModel();
}

OAIKeyValueTargetingExpression::~OAIKeyValueTargetingExpression() {}

void OAIKeyValueTargetingExpression::initializeModel() {

    m_expression_isSet = false;
    m_expression_isValid = false;
}

void OAIKeyValueTargetingExpression::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKeyValueTargetingExpression::fromJsonObject(QJsonObject json) {

    m_expression_isValid = ::OpenAPI::fromJsonValue(m_expression, json[QString("expression")]);
    m_expression_isSet = !json[QString("expression")].isNull() && m_expression_isValid;
}

QString OAIKeyValueTargetingExpression::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKeyValueTargetingExpression::asJsonObject() const {
    QJsonObject obj;
    if (m_expression_isSet) {
        obj.insert(QString("expression"), ::OpenAPI::toJsonValue(m_expression));
    }
    return obj;
}

QString OAIKeyValueTargetingExpression::getExpression() const {
    return m_expression;
}
void OAIKeyValueTargetingExpression::setExpression(const QString &expression) {
    m_expression = expression;
    m_expression_isSet = true;
}

bool OAIKeyValueTargetingExpression::is_expression_Set() const{
    return m_expression_isSet;
}

bool OAIKeyValueTargetingExpression::is_expression_Valid() const{
    return m_expression_isValid;
}

bool OAIKeyValueTargetingExpression::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expression_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKeyValueTargetingExpression::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
