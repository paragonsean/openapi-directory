/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClickThroughUrlSuffixProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClickThroughUrlSuffixProperties::OAIClickThroughUrlSuffixProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClickThroughUrlSuffixProperties::OAIClickThroughUrlSuffixProperties() {
    this->initializeModel();
}

OAIClickThroughUrlSuffixProperties::~OAIClickThroughUrlSuffixProperties() {}

void OAIClickThroughUrlSuffixProperties::initializeModel() {

    m_click_through_url_suffix_isSet = false;
    m_click_through_url_suffix_isValid = false;

    m_override_inherited_suffix_isSet = false;
    m_override_inherited_suffix_isValid = false;
}

void OAIClickThroughUrlSuffixProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClickThroughUrlSuffixProperties::fromJsonObject(QJsonObject json) {

    m_click_through_url_suffix_isValid = ::OpenAPI::fromJsonValue(m_click_through_url_suffix, json[QString("clickThroughUrlSuffix")]);
    m_click_through_url_suffix_isSet = !json[QString("clickThroughUrlSuffix")].isNull() && m_click_through_url_suffix_isValid;

    m_override_inherited_suffix_isValid = ::OpenAPI::fromJsonValue(m_override_inherited_suffix, json[QString("overrideInheritedSuffix")]);
    m_override_inherited_suffix_isSet = !json[QString("overrideInheritedSuffix")].isNull() && m_override_inherited_suffix_isValid;
}

QString OAIClickThroughUrlSuffixProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClickThroughUrlSuffixProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_click_through_url_suffix_isSet) {
        obj.insert(QString("clickThroughUrlSuffix"), ::OpenAPI::toJsonValue(m_click_through_url_suffix));
    }
    if (m_override_inherited_suffix_isSet) {
        obj.insert(QString("overrideInheritedSuffix"), ::OpenAPI::toJsonValue(m_override_inherited_suffix));
    }
    return obj;
}

QString OAIClickThroughUrlSuffixProperties::getClickThroughUrlSuffix() const {
    return m_click_through_url_suffix;
}
void OAIClickThroughUrlSuffixProperties::setClickThroughUrlSuffix(const QString &click_through_url_suffix) {
    m_click_through_url_suffix = click_through_url_suffix;
    m_click_through_url_suffix_isSet = true;
}

bool OAIClickThroughUrlSuffixProperties::is_click_through_url_suffix_Set() const{
    return m_click_through_url_suffix_isSet;
}

bool OAIClickThroughUrlSuffixProperties::is_click_through_url_suffix_Valid() const{
    return m_click_through_url_suffix_isValid;
}

bool OAIClickThroughUrlSuffixProperties::isOverrideInheritedSuffix() const {
    return m_override_inherited_suffix;
}
void OAIClickThroughUrlSuffixProperties::setOverrideInheritedSuffix(const bool &override_inherited_suffix) {
    m_override_inherited_suffix = override_inherited_suffix;
    m_override_inherited_suffix_isSet = true;
}

bool OAIClickThroughUrlSuffixProperties::is_override_inherited_suffix_Set() const{
    return m_override_inherited_suffix_isSet;
}

bool OAIClickThroughUrlSuffixProperties::is_override_inherited_suffix_Valid() const{
    return m_override_inherited_suffix_isValid;
}

bool OAIClickThroughUrlSuffixProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_click_through_url_suffix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_override_inherited_suffix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClickThroughUrlSuffixProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
