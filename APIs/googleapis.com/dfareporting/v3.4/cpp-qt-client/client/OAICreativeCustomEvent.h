/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreativeCustomEvent.h
 *
 * Creative Custom Event.
 */

#ifndef OAICreativeCustomEvent_H
#define OAICreativeCustomEvent_H

#include <QJsonObject>

#include "OAICreativeClickThroughUrl.h"
#include "OAIPopupWindowProperties.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreativeClickThroughUrl;
class OAIPopupWindowProperties;

class OAICreativeCustomEvent : public OAIObject {
public:
    OAICreativeCustomEvent();
    OAICreativeCustomEvent(QString json);
    ~OAICreativeCustomEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdvertiserCustomEventId() const;
    void setAdvertiserCustomEventId(const QString &advertiser_custom_event_id);
    bool is_advertiser_custom_event_id_Set() const;
    bool is_advertiser_custom_event_id_Valid() const;

    QString getAdvertiserCustomEventName() const;
    void setAdvertiserCustomEventName(const QString &advertiser_custom_event_name);
    bool is_advertiser_custom_event_name_Set() const;
    bool is_advertiser_custom_event_name_Valid() const;

    QString getAdvertiserCustomEventType() const;
    void setAdvertiserCustomEventType(const QString &advertiser_custom_event_type);
    bool is_advertiser_custom_event_type_Set() const;
    bool is_advertiser_custom_event_type_Valid() const;

    QString getArtworkLabel() const;
    void setArtworkLabel(const QString &artwork_label);
    bool is_artwork_label_Set() const;
    bool is_artwork_label_Valid() const;

    QString getArtworkType() const;
    void setArtworkType(const QString &artwork_type);
    bool is_artwork_type_Set() const;
    bool is_artwork_type_Valid() const;

    OAICreativeClickThroughUrl getExitClickThroughUrl() const;
    void setExitClickThroughUrl(const OAICreativeClickThroughUrl &exit_click_through_url);
    bool is_exit_click_through_url_Set() const;
    bool is_exit_click_through_url_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIPopupWindowProperties getPopupWindowProperties() const;
    void setPopupWindowProperties(const OAIPopupWindowProperties &popup_window_properties);
    bool is_popup_window_properties_Set() const;
    bool is_popup_window_properties_Valid() const;

    QString getTargetType() const;
    void setTargetType(const QString &target_type);
    bool is_target_type_Set() const;
    bool is_target_type_Valid() const;

    QString getVideoReportingId() const;
    void setVideoReportingId(const QString &video_reporting_id);
    bool is_video_reporting_id_Set() const;
    bool is_video_reporting_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_advertiser_custom_event_id;
    bool m_advertiser_custom_event_id_isSet;
    bool m_advertiser_custom_event_id_isValid;

    QString m_advertiser_custom_event_name;
    bool m_advertiser_custom_event_name_isSet;
    bool m_advertiser_custom_event_name_isValid;

    QString m_advertiser_custom_event_type;
    bool m_advertiser_custom_event_type_isSet;
    bool m_advertiser_custom_event_type_isValid;

    QString m_artwork_label;
    bool m_artwork_label_isSet;
    bool m_artwork_label_isValid;

    QString m_artwork_type;
    bool m_artwork_type_isSet;
    bool m_artwork_type_isValid;

    OAICreativeClickThroughUrl m_exit_click_through_url;
    bool m_exit_click_through_url_isSet;
    bool m_exit_click_through_url_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIPopupWindowProperties m_popup_window_properties;
    bool m_popup_window_properties_isSet;
    bool m_popup_window_properties_isValid;

    QString m_target_type;
    bool m_target_type_isSet;
    bool m_target_type_isValid;

    QString m_video_reporting_id;
    bool m_video_reporting_id_isSet;
    bool m_video_reporting_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreativeCustomEvent)

#endif // OAICreativeCustomEvent_H
