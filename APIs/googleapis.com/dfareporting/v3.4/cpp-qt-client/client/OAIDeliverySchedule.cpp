/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeliverySchedule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeliverySchedule::OAIDeliverySchedule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeliverySchedule::OAIDeliverySchedule() {
    this->initializeModel();
}

OAIDeliverySchedule::~OAIDeliverySchedule() {}

void OAIDeliverySchedule::initializeModel() {

    m_frequency_cap_isSet = false;
    m_frequency_cap_isValid = false;

    m_hard_cutoff_isSet = false;
    m_hard_cutoff_isValid = false;

    m_impression_ratio_isSet = false;
    m_impression_ratio_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;
}

void OAIDeliverySchedule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeliverySchedule::fromJsonObject(QJsonObject json) {

    m_frequency_cap_isValid = ::OpenAPI::fromJsonValue(m_frequency_cap, json[QString("frequencyCap")]);
    m_frequency_cap_isSet = !json[QString("frequencyCap")].isNull() && m_frequency_cap_isValid;

    m_hard_cutoff_isValid = ::OpenAPI::fromJsonValue(m_hard_cutoff, json[QString("hardCutoff")]);
    m_hard_cutoff_isSet = !json[QString("hardCutoff")].isNull() && m_hard_cutoff_isValid;

    m_impression_ratio_isValid = ::OpenAPI::fromJsonValue(m_impression_ratio, json[QString("impressionRatio")]);
    m_impression_ratio_isSet = !json[QString("impressionRatio")].isNull() && m_impression_ratio_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;
}

QString OAIDeliverySchedule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeliverySchedule::asJsonObject() const {
    QJsonObject obj;
    if (m_frequency_cap.isSet()) {
        obj.insert(QString("frequencyCap"), ::OpenAPI::toJsonValue(m_frequency_cap));
    }
    if (m_hard_cutoff_isSet) {
        obj.insert(QString("hardCutoff"), ::OpenAPI::toJsonValue(m_hard_cutoff));
    }
    if (m_impression_ratio_isSet) {
        obj.insert(QString("impressionRatio"), ::OpenAPI::toJsonValue(m_impression_ratio));
    }
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    return obj;
}

OAIFrequencyCap OAIDeliverySchedule::getFrequencyCap() const {
    return m_frequency_cap;
}
void OAIDeliverySchedule::setFrequencyCap(const OAIFrequencyCap &frequency_cap) {
    m_frequency_cap = frequency_cap;
    m_frequency_cap_isSet = true;
}

bool OAIDeliverySchedule::is_frequency_cap_Set() const{
    return m_frequency_cap_isSet;
}

bool OAIDeliverySchedule::is_frequency_cap_Valid() const{
    return m_frequency_cap_isValid;
}

bool OAIDeliverySchedule::isHardCutoff() const {
    return m_hard_cutoff;
}
void OAIDeliverySchedule::setHardCutoff(const bool &hard_cutoff) {
    m_hard_cutoff = hard_cutoff;
    m_hard_cutoff_isSet = true;
}

bool OAIDeliverySchedule::is_hard_cutoff_Set() const{
    return m_hard_cutoff_isSet;
}

bool OAIDeliverySchedule::is_hard_cutoff_Valid() const{
    return m_hard_cutoff_isValid;
}

QString OAIDeliverySchedule::getImpressionRatio() const {
    return m_impression_ratio;
}
void OAIDeliverySchedule::setImpressionRatio(const QString &impression_ratio) {
    m_impression_ratio = impression_ratio;
    m_impression_ratio_isSet = true;
}

bool OAIDeliverySchedule::is_impression_ratio_Set() const{
    return m_impression_ratio_isSet;
}

bool OAIDeliverySchedule::is_impression_ratio_Valid() const{
    return m_impression_ratio_isValid;
}

QString OAIDeliverySchedule::getPriority() const {
    return m_priority;
}
void OAIDeliverySchedule::setPriority(const QString &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIDeliverySchedule::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIDeliverySchedule::is_priority_Valid() const{
    return m_priority_isValid;
}

bool OAIDeliverySchedule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_frequency_cap.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hard_cutoff_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_impression_ratio_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeliverySchedule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
