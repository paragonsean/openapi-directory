/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoSettings.h
 *
 * Video Settings
 */

#ifndef OAIVideoSettings_H
#define OAIVideoSettings_H

#include <QJsonObject>

#include "OAICompanionSetting.h"
#include "OAIObaIcon.h"
#include "OAISkippableSetting.h"
#include "OAITranscodeSetting.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICompanionSetting;
class OAIObaIcon;
class OAISkippableSetting;
class OAITranscodeSetting;

class OAIVideoSettings : public OAIObject {
public:
    OAIVideoSettings();
    OAIVideoSettings(QString json);
    ~OAIVideoSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICompanionSetting getCompanionSettings() const;
    void setCompanionSettings(const OAICompanionSetting &companion_settings);
    bool is_companion_settings_Set() const;
    bool is_companion_settings_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    bool isObaEnabled() const;
    void setObaEnabled(const bool &oba_enabled);
    bool is_oba_enabled_Set() const;
    bool is_oba_enabled_Valid() const;

    OAIObaIcon getObaSettings() const;
    void setObaSettings(const OAIObaIcon &oba_settings);
    bool is_oba_settings_Set() const;
    bool is_oba_settings_Valid() const;

    QString getOrientation() const;
    void setOrientation(const QString &orientation);
    bool is_orientation_Set() const;
    bool is_orientation_Valid() const;

    OAISkippableSetting getSkippableSettings() const;
    void setSkippableSettings(const OAISkippableSetting &skippable_settings);
    bool is_skippable_settings_Set() const;
    bool is_skippable_settings_Valid() const;

    OAITranscodeSetting getTranscodeSettings() const;
    void setTranscodeSettings(const OAITranscodeSetting &transcode_settings);
    bool is_transcode_settings_Set() const;
    bool is_transcode_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICompanionSetting m_companion_settings;
    bool m_companion_settings_isSet;
    bool m_companion_settings_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    bool m_oba_enabled;
    bool m_oba_enabled_isSet;
    bool m_oba_enabled_isValid;

    OAIObaIcon m_oba_settings;
    bool m_oba_settings_isSet;
    bool m_oba_settings_isValid;

    QString m_orientation;
    bool m_orientation_isSet;
    bool m_orientation_isValid;

    OAISkippableSetting m_skippable_settings;
    bool m_skippable_settings_isSet;
    bool m_skippable_settings_isValid;

    OAITranscodeSetting m_transcode_settings;
    bool m_transcode_settings_isSet;
    bool m_transcode_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoSettings)

#endif // OAIVideoSettings_H
