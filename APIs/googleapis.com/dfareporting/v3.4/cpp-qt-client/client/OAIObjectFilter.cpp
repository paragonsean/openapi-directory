/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjectFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjectFilter::OAIObjectFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjectFilter::OAIObjectFilter() {
    this->initializeModel();
}

OAIObjectFilter::~OAIObjectFilter() {}

void OAIObjectFilter::initializeModel() {

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_object_ids_isSet = false;
    m_object_ids_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIObjectFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIObjectFilter::fromJsonObject(QJsonObject json) {

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_object_ids_isValid = ::OpenAPI::fromJsonValue(m_object_ids, json[QString("objectIds")]);
    m_object_ids_isSet = !json[QString("objectIds")].isNull() && m_object_ids_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIObjectFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIObjectFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_object_ids.size() > 0) {
        obj.insert(QString("objectIds"), ::OpenAPI::toJsonValue(m_object_ids));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIObjectFilter::getKind() const {
    return m_kind;
}
void OAIObjectFilter::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIObjectFilter::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIObjectFilter::is_kind_Valid() const{
    return m_kind_isValid;
}

QList<QString> OAIObjectFilter::getObjectIds() const {
    return m_object_ids;
}
void OAIObjectFilter::setObjectIds(const QList<QString> &object_ids) {
    m_object_ids = object_ids;
    m_object_ids_isSet = true;
}

bool OAIObjectFilter::is_object_ids_Set() const{
    return m_object_ids_isSet;
}

bool OAIObjectFilter::is_object_ids_Valid() const{
    return m_object_ids_isValid;
}

QString OAIObjectFilter::getStatus() const {
    return m_status;
}
void OAIObjectFilter::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIObjectFilter::is_status_Set() const{
    return m_status_isSet;
}

bool OAIObjectFilter::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIObjectFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIObjectFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
