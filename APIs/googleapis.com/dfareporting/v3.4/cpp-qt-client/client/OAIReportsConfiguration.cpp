/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportsConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportsConfiguration::OAIReportsConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportsConfiguration::OAIReportsConfiguration() {
    this->initializeModel();
}

OAIReportsConfiguration::~OAIReportsConfiguration() {}

void OAIReportsConfiguration::initializeModel() {

    m_exposure_to_conversion_enabled_isSet = false;
    m_exposure_to_conversion_enabled_isValid = false;

    m_lookback_configuration_isSet = false;
    m_lookback_configuration_isValid = false;

    m_report_generation_time_zone_id_isSet = false;
    m_report_generation_time_zone_id_isValid = false;
}

void OAIReportsConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReportsConfiguration::fromJsonObject(QJsonObject json) {

    m_exposure_to_conversion_enabled_isValid = ::OpenAPI::fromJsonValue(m_exposure_to_conversion_enabled, json[QString("exposureToConversionEnabled")]);
    m_exposure_to_conversion_enabled_isSet = !json[QString("exposureToConversionEnabled")].isNull() && m_exposure_to_conversion_enabled_isValid;

    m_lookback_configuration_isValid = ::OpenAPI::fromJsonValue(m_lookback_configuration, json[QString("lookbackConfiguration")]);
    m_lookback_configuration_isSet = !json[QString("lookbackConfiguration")].isNull() && m_lookback_configuration_isValid;

    m_report_generation_time_zone_id_isValid = ::OpenAPI::fromJsonValue(m_report_generation_time_zone_id, json[QString("reportGenerationTimeZoneId")]);
    m_report_generation_time_zone_id_isSet = !json[QString("reportGenerationTimeZoneId")].isNull() && m_report_generation_time_zone_id_isValid;
}

QString OAIReportsConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReportsConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_exposure_to_conversion_enabled_isSet) {
        obj.insert(QString("exposureToConversionEnabled"), ::OpenAPI::toJsonValue(m_exposure_to_conversion_enabled));
    }
    if (m_lookback_configuration.isSet()) {
        obj.insert(QString("lookbackConfiguration"), ::OpenAPI::toJsonValue(m_lookback_configuration));
    }
    if (m_report_generation_time_zone_id_isSet) {
        obj.insert(QString("reportGenerationTimeZoneId"), ::OpenAPI::toJsonValue(m_report_generation_time_zone_id));
    }
    return obj;
}

bool OAIReportsConfiguration::isExposureToConversionEnabled() const {
    return m_exposure_to_conversion_enabled;
}
void OAIReportsConfiguration::setExposureToConversionEnabled(const bool &exposure_to_conversion_enabled) {
    m_exposure_to_conversion_enabled = exposure_to_conversion_enabled;
    m_exposure_to_conversion_enabled_isSet = true;
}

bool OAIReportsConfiguration::is_exposure_to_conversion_enabled_Set() const{
    return m_exposure_to_conversion_enabled_isSet;
}

bool OAIReportsConfiguration::is_exposure_to_conversion_enabled_Valid() const{
    return m_exposure_to_conversion_enabled_isValid;
}

OAILookbackConfiguration OAIReportsConfiguration::getLookbackConfiguration() const {
    return m_lookback_configuration;
}
void OAIReportsConfiguration::setLookbackConfiguration(const OAILookbackConfiguration &lookback_configuration) {
    m_lookback_configuration = lookback_configuration;
    m_lookback_configuration_isSet = true;
}

bool OAIReportsConfiguration::is_lookback_configuration_Set() const{
    return m_lookback_configuration_isSet;
}

bool OAIReportsConfiguration::is_lookback_configuration_Valid() const{
    return m_lookback_configuration_isValid;
}

QString OAIReportsConfiguration::getReportGenerationTimeZoneId() const {
    return m_report_generation_time_zone_id;
}
void OAIReportsConfiguration::setReportGenerationTimeZoneId(const QString &report_generation_time_zone_id) {
    m_report_generation_time_zone_id = report_generation_time_zone_id;
    m_report_generation_time_zone_id_isSet = true;
}

bool OAIReportsConfiguration::is_report_generation_time_zone_id_Set() const{
    return m_report_generation_time_zone_id_isSet;
}

bool OAIReportsConfiguration::is_report_generation_time_zone_id_Valid() const{
    return m_report_generation_time_zone_id_isValid;
}

bool OAIReportsConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exposure_to_conversion_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lookback_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_generation_time_zone_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReportsConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
