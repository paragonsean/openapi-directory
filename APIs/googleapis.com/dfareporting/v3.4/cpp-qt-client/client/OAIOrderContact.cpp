/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderContact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderContact::OAIOrderContact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderContact::OAIOrderContact() {
    this->initializeModel();
}

OAIOrderContact::~OAIOrderContact() {}

void OAIOrderContact::initializeModel() {

    m_contact_info_isSet = false;
    m_contact_info_isValid = false;

    m_contact_name_isSet = false;
    m_contact_name_isValid = false;

    m_contact_title_isSet = false;
    m_contact_title_isValid = false;

    m_contact_type_isSet = false;
    m_contact_type_isValid = false;

    m_signature_user_profile_id_isSet = false;
    m_signature_user_profile_id_isValid = false;
}

void OAIOrderContact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderContact::fromJsonObject(QJsonObject json) {

    m_contact_info_isValid = ::OpenAPI::fromJsonValue(m_contact_info, json[QString("contactInfo")]);
    m_contact_info_isSet = !json[QString("contactInfo")].isNull() && m_contact_info_isValid;

    m_contact_name_isValid = ::OpenAPI::fromJsonValue(m_contact_name, json[QString("contactName")]);
    m_contact_name_isSet = !json[QString("contactName")].isNull() && m_contact_name_isValid;

    m_contact_title_isValid = ::OpenAPI::fromJsonValue(m_contact_title, json[QString("contactTitle")]);
    m_contact_title_isSet = !json[QString("contactTitle")].isNull() && m_contact_title_isValid;

    m_contact_type_isValid = ::OpenAPI::fromJsonValue(m_contact_type, json[QString("contactType")]);
    m_contact_type_isSet = !json[QString("contactType")].isNull() && m_contact_type_isValid;

    m_signature_user_profile_id_isValid = ::OpenAPI::fromJsonValue(m_signature_user_profile_id, json[QString("signatureUserProfileId")]);
    m_signature_user_profile_id_isSet = !json[QString("signatureUserProfileId")].isNull() && m_signature_user_profile_id_isValid;
}

QString OAIOrderContact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderContact::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_info_isSet) {
        obj.insert(QString("contactInfo"), ::OpenAPI::toJsonValue(m_contact_info));
    }
    if (m_contact_name_isSet) {
        obj.insert(QString("contactName"), ::OpenAPI::toJsonValue(m_contact_name));
    }
    if (m_contact_title_isSet) {
        obj.insert(QString("contactTitle"), ::OpenAPI::toJsonValue(m_contact_title));
    }
    if (m_contact_type_isSet) {
        obj.insert(QString("contactType"), ::OpenAPI::toJsonValue(m_contact_type));
    }
    if (m_signature_user_profile_id_isSet) {
        obj.insert(QString("signatureUserProfileId"), ::OpenAPI::toJsonValue(m_signature_user_profile_id));
    }
    return obj;
}

QString OAIOrderContact::getContactInfo() const {
    return m_contact_info;
}
void OAIOrderContact::setContactInfo(const QString &contact_info) {
    m_contact_info = contact_info;
    m_contact_info_isSet = true;
}

bool OAIOrderContact::is_contact_info_Set() const{
    return m_contact_info_isSet;
}

bool OAIOrderContact::is_contact_info_Valid() const{
    return m_contact_info_isValid;
}

QString OAIOrderContact::getContactName() const {
    return m_contact_name;
}
void OAIOrderContact::setContactName(const QString &contact_name) {
    m_contact_name = contact_name;
    m_contact_name_isSet = true;
}

bool OAIOrderContact::is_contact_name_Set() const{
    return m_contact_name_isSet;
}

bool OAIOrderContact::is_contact_name_Valid() const{
    return m_contact_name_isValid;
}

QString OAIOrderContact::getContactTitle() const {
    return m_contact_title;
}
void OAIOrderContact::setContactTitle(const QString &contact_title) {
    m_contact_title = contact_title;
    m_contact_title_isSet = true;
}

bool OAIOrderContact::is_contact_title_Set() const{
    return m_contact_title_isSet;
}

bool OAIOrderContact::is_contact_title_Valid() const{
    return m_contact_title_isValid;
}

QString OAIOrderContact::getContactType() const {
    return m_contact_type;
}
void OAIOrderContact::setContactType(const QString &contact_type) {
    m_contact_type = contact_type;
    m_contact_type_isSet = true;
}

bool OAIOrderContact::is_contact_type_Set() const{
    return m_contact_type_isSet;
}

bool OAIOrderContact::is_contact_type_Valid() const{
    return m_contact_type_isValid;
}

QString OAIOrderContact::getSignatureUserProfileId() const {
    return m_signature_user_profile_id;
}
void OAIOrderContact::setSignatureUserProfileId(const QString &signature_user_profile_id) {
    m_signature_user_profile_id = signature_user_profile_id;
    m_signature_user_profile_id_isSet = true;
}

bool OAIOrderContact::is_signature_user_profile_id_Set() const{
    return m_signature_user_profile_id_isSet;
}

bool OAIOrderContact::is_signature_user_profile_id_Valid() const{
    return m_signature_user_profile_id_isValid;
}

bool OAIOrderContact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_signature_user_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderContact::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
