/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderDocument.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderDocument::OAIOrderDocument(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderDocument::OAIOrderDocument() {
    this->initializeModel();
}

OAIOrderDocument::~OAIOrderDocument() {}

void OAIOrderDocument::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_advertiser_id_isSet = false;
    m_advertiser_id_isValid = false;

    m_amended_order_document_id_isSet = false;
    m_amended_order_document_id_isValid = false;

    m_approved_by_user_profile_ids_isSet = false;
    m_approved_by_user_profile_ids_isValid = false;

    m_cancelled_isSet = false;
    m_cancelled_isValid = false;

    m_created_info_isSet = false;
    m_created_info_isValid = false;

    m_effective_date_isSet = false;
    m_effective_date_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_last_sent_recipients_isSet = false;
    m_last_sent_recipients_isValid = false;

    m_last_sent_time_isSet = false;
    m_last_sent_time_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_r_signed_isSet = false;
    m_r_signed_isValid = false;

    m_subaccount_id_isSet = false;
    m_subaccount_id_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIOrderDocument::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderDocument::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_advertiser_id_isValid = ::OpenAPI::fromJsonValue(m_advertiser_id, json[QString("advertiserId")]);
    m_advertiser_id_isSet = !json[QString("advertiserId")].isNull() && m_advertiser_id_isValid;

    m_amended_order_document_id_isValid = ::OpenAPI::fromJsonValue(m_amended_order_document_id, json[QString("amendedOrderDocumentId")]);
    m_amended_order_document_id_isSet = !json[QString("amendedOrderDocumentId")].isNull() && m_amended_order_document_id_isValid;

    m_approved_by_user_profile_ids_isValid = ::OpenAPI::fromJsonValue(m_approved_by_user_profile_ids, json[QString("approvedByUserProfileIds")]);
    m_approved_by_user_profile_ids_isSet = !json[QString("approvedByUserProfileIds")].isNull() && m_approved_by_user_profile_ids_isValid;

    m_cancelled_isValid = ::OpenAPI::fromJsonValue(m_cancelled, json[QString("cancelled")]);
    m_cancelled_isSet = !json[QString("cancelled")].isNull() && m_cancelled_isValid;

    m_created_info_isValid = ::OpenAPI::fromJsonValue(m_created_info, json[QString("createdInfo")]);
    m_created_info_isSet = !json[QString("createdInfo")].isNull() && m_created_info_isValid;

    m_effective_date_isValid = ::OpenAPI::fromJsonValue(m_effective_date, json[QString("effectiveDate")]);
    m_effective_date_isSet = !json[QString("effectiveDate")].isNull() && m_effective_date_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_last_sent_recipients_isValid = ::OpenAPI::fromJsonValue(m_last_sent_recipients, json[QString("lastSentRecipients")]);
    m_last_sent_recipients_isSet = !json[QString("lastSentRecipients")].isNull() && m_last_sent_recipients_isValid;

    m_last_sent_time_isValid = ::OpenAPI::fromJsonValue(m_last_sent_time, json[QString("lastSentTime")]);
    m_last_sent_time_isSet = !json[QString("lastSentTime")].isNull() && m_last_sent_time_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("orderId")]);
    m_order_id_isSet = !json[QString("orderId")].isNull() && m_order_id_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;

    m_r_signed_isValid = ::OpenAPI::fromJsonValue(m_r_signed, json[QString("signed")]);
    m_r_signed_isSet = !json[QString("signed")].isNull() && m_r_signed_isValid;

    m_subaccount_id_isValid = ::OpenAPI::fromJsonValue(m_subaccount_id, json[QString("subaccountId")]);
    m_subaccount_id_isSet = !json[QString("subaccountId")].isNull() && m_subaccount_id_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIOrderDocument::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderDocument::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_advertiser_id_isSet) {
        obj.insert(QString("advertiserId"), ::OpenAPI::toJsonValue(m_advertiser_id));
    }
    if (m_amended_order_document_id_isSet) {
        obj.insert(QString("amendedOrderDocumentId"), ::OpenAPI::toJsonValue(m_amended_order_document_id));
    }
    if (m_approved_by_user_profile_ids.size() > 0) {
        obj.insert(QString("approvedByUserProfileIds"), ::OpenAPI::toJsonValue(m_approved_by_user_profile_ids));
    }
    if (m_cancelled_isSet) {
        obj.insert(QString("cancelled"), ::OpenAPI::toJsonValue(m_cancelled));
    }
    if (m_created_info.isSet()) {
        obj.insert(QString("createdInfo"), ::OpenAPI::toJsonValue(m_created_info));
    }
    if (m_effective_date_isSet) {
        obj.insert(QString("effectiveDate"), ::OpenAPI::toJsonValue(m_effective_date));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_last_sent_recipients.size() > 0) {
        obj.insert(QString("lastSentRecipients"), ::OpenAPI::toJsonValue(m_last_sent_recipients));
    }
    if (m_last_sent_time_isSet) {
        obj.insert(QString("lastSentTime"), ::OpenAPI::toJsonValue(m_last_sent_time));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("orderId"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_r_signed_isSet) {
        obj.insert(QString("signed"), ::OpenAPI::toJsonValue(m_r_signed));
    }
    if (m_subaccount_id_isSet) {
        obj.insert(QString("subaccountId"), ::OpenAPI::toJsonValue(m_subaccount_id));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIOrderDocument::getAccountId() const {
    return m_account_id;
}
void OAIOrderDocument::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIOrderDocument::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIOrderDocument::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIOrderDocument::getAdvertiserId() const {
    return m_advertiser_id;
}
void OAIOrderDocument::setAdvertiserId(const QString &advertiser_id) {
    m_advertiser_id = advertiser_id;
    m_advertiser_id_isSet = true;
}

bool OAIOrderDocument::is_advertiser_id_Set() const{
    return m_advertiser_id_isSet;
}

bool OAIOrderDocument::is_advertiser_id_Valid() const{
    return m_advertiser_id_isValid;
}

QString OAIOrderDocument::getAmendedOrderDocumentId() const {
    return m_amended_order_document_id;
}
void OAIOrderDocument::setAmendedOrderDocumentId(const QString &amended_order_document_id) {
    m_amended_order_document_id = amended_order_document_id;
    m_amended_order_document_id_isSet = true;
}

bool OAIOrderDocument::is_amended_order_document_id_Set() const{
    return m_amended_order_document_id_isSet;
}

bool OAIOrderDocument::is_amended_order_document_id_Valid() const{
    return m_amended_order_document_id_isValid;
}

QList<QString> OAIOrderDocument::getApprovedByUserProfileIds() const {
    return m_approved_by_user_profile_ids;
}
void OAIOrderDocument::setApprovedByUserProfileIds(const QList<QString> &approved_by_user_profile_ids) {
    m_approved_by_user_profile_ids = approved_by_user_profile_ids;
    m_approved_by_user_profile_ids_isSet = true;
}

bool OAIOrderDocument::is_approved_by_user_profile_ids_Set() const{
    return m_approved_by_user_profile_ids_isSet;
}

bool OAIOrderDocument::is_approved_by_user_profile_ids_Valid() const{
    return m_approved_by_user_profile_ids_isValid;
}

bool OAIOrderDocument::isCancelled() const {
    return m_cancelled;
}
void OAIOrderDocument::setCancelled(const bool &cancelled) {
    m_cancelled = cancelled;
    m_cancelled_isSet = true;
}

bool OAIOrderDocument::is_cancelled_Set() const{
    return m_cancelled_isSet;
}

bool OAIOrderDocument::is_cancelled_Valid() const{
    return m_cancelled_isValid;
}

OAILastModifiedInfo OAIOrderDocument::getCreatedInfo() const {
    return m_created_info;
}
void OAIOrderDocument::setCreatedInfo(const OAILastModifiedInfo &created_info) {
    m_created_info = created_info;
    m_created_info_isSet = true;
}

bool OAIOrderDocument::is_created_info_Set() const{
    return m_created_info_isSet;
}

bool OAIOrderDocument::is_created_info_Valid() const{
    return m_created_info_isValid;
}

QDate OAIOrderDocument::getEffectiveDate() const {
    return m_effective_date;
}
void OAIOrderDocument::setEffectiveDate(const QDate &effective_date) {
    m_effective_date = effective_date;
    m_effective_date_isSet = true;
}

bool OAIOrderDocument::is_effective_date_Set() const{
    return m_effective_date_isSet;
}

bool OAIOrderDocument::is_effective_date_Valid() const{
    return m_effective_date_isValid;
}

QString OAIOrderDocument::getId() const {
    return m_id;
}
void OAIOrderDocument::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIOrderDocument::is_id_Set() const{
    return m_id_isSet;
}

bool OAIOrderDocument::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIOrderDocument::getKind() const {
    return m_kind;
}
void OAIOrderDocument::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIOrderDocument::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIOrderDocument::is_kind_Valid() const{
    return m_kind_isValid;
}

QList<QString> OAIOrderDocument::getLastSentRecipients() const {
    return m_last_sent_recipients;
}
void OAIOrderDocument::setLastSentRecipients(const QList<QString> &last_sent_recipients) {
    m_last_sent_recipients = last_sent_recipients;
    m_last_sent_recipients_isSet = true;
}

bool OAIOrderDocument::is_last_sent_recipients_Set() const{
    return m_last_sent_recipients_isSet;
}

bool OAIOrderDocument::is_last_sent_recipients_Valid() const{
    return m_last_sent_recipients_isValid;
}

QDateTime OAIOrderDocument::getLastSentTime() const {
    return m_last_sent_time;
}
void OAIOrderDocument::setLastSentTime(const QDateTime &last_sent_time) {
    m_last_sent_time = last_sent_time;
    m_last_sent_time_isSet = true;
}

bool OAIOrderDocument::is_last_sent_time_Set() const{
    return m_last_sent_time_isSet;
}

bool OAIOrderDocument::is_last_sent_time_Valid() const{
    return m_last_sent_time_isValid;
}

QString OAIOrderDocument::getOrderId() const {
    return m_order_id;
}
void OAIOrderDocument::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrderDocument::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrderDocument::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAIOrderDocument::getProjectId() const {
    return m_project_id;
}
void OAIOrderDocument::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIOrderDocument::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIOrderDocument::is_project_id_Valid() const{
    return m_project_id_isValid;
}

bool OAIOrderDocument::isRSigned() const {
    return m_r_signed;
}
void OAIOrderDocument::setRSigned(const bool &r_signed) {
    m_r_signed = r_signed;
    m_r_signed_isSet = true;
}

bool OAIOrderDocument::is_r_signed_Set() const{
    return m_r_signed_isSet;
}

bool OAIOrderDocument::is_r_signed_Valid() const{
    return m_r_signed_isValid;
}

QString OAIOrderDocument::getSubaccountId() const {
    return m_subaccount_id;
}
void OAIOrderDocument::setSubaccountId(const QString &subaccount_id) {
    m_subaccount_id = subaccount_id;
    m_subaccount_id_isSet = true;
}

bool OAIOrderDocument::is_subaccount_id_Set() const{
    return m_subaccount_id_isSet;
}

bool OAIOrderDocument::is_subaccount_id_Valid() const{
    return m_subaccount_id_isValid;
}

QString OAIOrderDocument::getTitle() const {
    return m_title;
}
void OAIOrderDocument::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIOrderDocument::is_title_Set() const{
    return m_title_isSet;
}

bool OAIOrderDocument::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIOrderDocument::getType() const {
    return m_type;
}
void OAIOrderDocument::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIOrderDocument::is_type_Set() const{
    return m_type_isSet;
}

bool OAIOrderDocument::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIOrderDocument::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advertiser_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amended_order_document_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_approved_by_user_profile_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancelled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_sent_recipients.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_sent_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_signed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subaccount_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderDocument::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
