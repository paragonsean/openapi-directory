/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomVariable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomVariable::OAICustomVariable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomVariable::OAICustomVariable() {
    this->initializeModel();
}

OAICustomVariable::~OAICustomVariable() {}

void OAICustomVariable::initializeModel() {

    m_index_isSet = false;
    m_index_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAICustomVariable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomVariable::fromJsonObject(QJsonObject json) {

    m_index_isValid = ::OpenAPI::fromJsonValue(m_index, json[QString("index")]);
    m_index_isSet = !json[QString("index")].isNull() && m_index_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAICustomVariable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomVariable::asJsonObject() const {
    QJsonObject obj;
    if (m_index_isSet) {
        obj.insert(QString("index"), ::OpenAPI::toJsonValue(m_index));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAICustomVariable::getIndex() const {
    return m_index;
}
void OAICustomVariable::setIndex(const QString &index) {
    m_index = index;
    m_index_isSet = true;
}

bool OAICustomVariable::is_index_Set() const{
    return m_index_isSet;
}

bool OAICustomVariable::is_index_Valid() const{
    return m_index_isValid;
}

QString OAICustomVariable::getKind() const {
    return m_kind;
}
void OAICustomVariable::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAICustomVariable::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAICustomVariable::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAICustomVariable::getValue() const {
    return m_value;
}
void OAICustomVariable::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAICustomVariable::is_value_Set() const{
    return m_value_isSet;
}

bool OAICustomVariable::is_value_Valid() const{
    return m_value_isValid;
}

bool OAICustomVariable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomVariable::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
