/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeepLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeepLink::OAIDeepLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeepLink::OAIDeepLink() {
    this->initializeModel();
}

OAIDeepLink::~OAIDeepLink() {}

void OAIDeepLink::initializeModel() {

    m_app_url_isSet = false;
    m_app_url_isValid = false;

    m_fallback_url_isSet = false;
    m_fallback_url_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_mobile_app_isSet = false;
    m_mobile_app_isValid = false;

    m_remarketing_list_ids_isSet = false;
    m_remarketing_list_ids_isValid = false;
}

void OAIDeepLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeepLink::fromJsonObject(QJsonObject json) {

    m_app_url_isValid = ::OpenAPI::fromJsonValue(m_app_url, json[QString("appUrl")]);
    m_app_url_isSet = !json[QString("appUrl")].isNull() && m_app_url_isValid;

    m_fallback_url_isValid = ::OpenAPI::fromJsonValue(m_fallback_url, json[QString("fallbackUrl")]);
    m_fallback_url_isSet = !json[QString("fallbackUrl")].isNull() && m_fallback_url_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_mobile_app_isValid = ::OpenAPI::fromJsonValue(m_mobile_app, json[QString("mobileApp")]);
    m_mobile_app_isSet = !json[QString("mobileApp")].isNull() && m_mobile_app_isValid;

    m_remarketing_list_ids_isValid = ::OpenAPI::fromJsonValue(m_remarketing_list_ids, json[QString("remarketingListIds")]);
    m_remarketing_list_ids_isSet = !json[QString("remarketingListIds")].isNull() && m_remarketing_list_ids_isValid;
}

QString OAIDeepLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeepLink::asJsonObject() const {
    QJsonObject obj;
    if (m_app_url_isSet) {
        obj.insert(QString("appUrl"), ::OpenAPI::toJsonValue(m_app_url));
    }
    if (m_fallback_url_isSet) {
        obj.insert(QString("fallbackUrl"), ::OpenAPI::toJsonValue(m_fallback_url));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_mobile_app.isSet()) {
        obj.insert(QString("mobileApp"), ::OpenAPI::toJsonValue(m_mobile_app));
    }
    if (m_remarketing_list_ids.size() > 0) {
        obj.insert(QString("remarketingListIds"), ::OpenAPI::toJsonValue(m_remarketing_list_ids));
    }
    return obj;
}

QString OAIDeepLink::getAppUrl() const {
    return m_app_url;
}
void OAIDeepLink::setAppUrl(const QString &app_url) {
    m_app_url = app_url;
    m_app_url_isSet = true;
}

bool OAIDeepLink::is_app_url_Set() const{
    return m_app_url_isSet;
}

bool OAIDeepLink::is_app_url_Valid() const{
    return m_app_url_isValid;
}

QString OAIDeepLink::getFallbackUrl() const {
    return m_fallback_url;
}
void OAIDeepLink::setFallbackUrl(const QString &fallback_url) {
    m_fallback_url = fallback_url;
    m_fallback_url_isSet = true;
}

bool OAIDeepLink::is_fallback_url_Set() const{
    return m_fallback_url_isSet;
}

bool OAIDeepLink::is_fallback_url_Valid() const{
    return m_fallback_url_isValid;
}

QString OAIDeepLink::getKind() const {
    return m_kind;
}
void OAIDeepLink::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIDeepLink::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIDeepLink::is_kind_Valid() const{
    return m_kind_isValid;
}

OAIMobileApp OAIDeepLink::getMobileApp() const {
    return m_mobile_app;
}
void OAIDeepLink::setMobileApp(const OAIMobileApp &mobile_app) {
    m_mobile_app = mobile_app;
    m_mobile_app_isSet = true;
}

bool OAIDeepLink::is_mobile_app_Set() const{
    return m_mobile_app_isSet;
}

bool OAIDeepLink::is_mobile_app_Valid() const{
    return m_mobile_app_isValid;
}

QList<QString> OAIDeepLink::getRemarketingListIds() const {
    return m_remarketing_list_ids;
}
void OAIDeepLink::setRemarketingListIds(const QList<QString> &remarketing_list_ids) {
    m_remarketing_list_ids = remarketing_list_ids;
    m_remarketing_list_ids_isSet = true;
}

bool OAIDeepLink::is_remarketing_list_ids_Set() const{
    return m_remarketing_list_ids_isSet;
}

bool OAIDeepLink::is_remarketing_list_ids_Valid() const{
    return m_remarketing_list_ids_isValid;
}

bool OAIDeepLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fallback_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_app.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_remarketing_list_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeepLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
