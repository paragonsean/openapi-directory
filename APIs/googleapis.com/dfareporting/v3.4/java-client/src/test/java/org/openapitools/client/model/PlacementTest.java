/*
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DimensionValue;
import org.openapitools.client.model.LastModifiedInfo;
import org.openapitools.client.model.LookbackConfiguration;
import org.openapitools.client.model.PricingSchedule;
import org.openapitools.client.model.Size;
import org.openapitools.client.model.TagSetting;
import org.openapitools.client.model.VideoSettings;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Placement
 */
public class PlacementTest {
    private final Placement model = new Placement();

    /**
     * Model tests for Placement
     */
    @Test
    public void testPlacement() {
        // TODO: test Placement
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'adBlockingOptOut'
     */
    @Test
    public void adBlockingOptOutTest() {
        // TODO: test adBlockingOptOut
    }

    /**
     * Test the property 'additionalSizes'
     */
    @Test
    public void additionalSizesTest() {
        // TODO: test additionalSizes
    }

    /**
     * Test the property 'advertiserId'
     */
    @Test
    public void advertiserIdTest() {
        // TODO: test advertiserId
    }

    /**
     * Test the property 'advertiserIdDimensionValue'
     */
    @Test
    public void advertiserIdDimensionValueTest() {
        // TODO: test advertiserIdDimensionValue
    }

    /**
     * Test the property 'archived'
     */
    @Test
    public void archivedTest() {
        // TODO: test archived
    }

    /**
     * Test the property 'campaignId'
     */
    @Test
    public void campaignIdTest() {
        // TODO: test campaignId
    }

    /**
     * Test the property 'campaignIdDimensionValue'
     */
    @Test
    public void campaignIdDimensionValueTest() {
        // TODO: test campaignIdDimensionValue
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'compatibility'
     */
    @Test
    public void compatibilityTest() {
        // TODO: test compatibility
    }

    /**
     * Test the property 'contentCategoryId'
     */
    @Test
    public void contentCategoryIdTest() {
        // TODO: test contentCategoryId
    }

    /**
     * Test the property 'createInfo'
     */
    @Test
    public void createInfoTest() {
        // TODO: test createInfo
    }

    /**
     * Test the property 'directorySiteId'
     */
    @Test
    public void directorySiteIdTest() {
        // TODO: test directorySiteId
    }

    /**
     * Test the property 'directorySiteIdDimensionValue'
     */
    @Test
    public void directorySiteIdDimensionValueTest() {
        // TODO: test directorySiteIdDimensionValue
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'idDimensionValue'
     */
    @Test
    public void idDimensionValueTest() {
        // TODO: test idDimensionValue
    }

    /**
     * Test the property 'keyName'
     */
    @Test
    public void keyNameTest() {
        // TODO: test keyName
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'lastModifiedInfo'
     */
    @Test
    public void lastModifiedInfoTest() {
        // TODO: test lastModifiedInfo
    }

    /**
     * Test the property 'lookbackConfiguration'
     */
    @Test
    public void lookbackConfigurationTest() {
        // TODO: test lookbackConfiguration
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'paymentApproved'
     */
    @Test
    public void paymentApprovedTest() {
        // TODO: test paymentApproved
    }

    /**
     * Test the property 'paymentSource'
     */
    @Test
    public void paymentSourceTest() {
        // TODO: test paymentSource
    }

    /**
     * Test the property 'placementGroupId'
     */
    @Test
    public void placementGroupIdTest() {
        // TODO: test placementGroupId
    }

    /**
     * Test the property 'placementGroupIdDimensionValue'
     */
    @Test
    public void placementGroupIdDimensionValueTest() {
        // TODO: test placementGroupIdDimensionValue
    }

    /**
     * Test the property 'placementStrategyId'
     */
    @Test
    public void placementStrategyIdTest() {
        // TODO: test placementStrategyId
    }

    /**
     * Test the property 'pricingSchedule'
     */
    @Test
    public void pricingScheduleTest() {
        // TODO: test pricingSchedule
    }

    /**
     * Test the property 'primary'
     */
    @Test
    public void primaryTest() {
        // TODO: test primary
    }

    /**
     * Test the property 'publisherUpdateInfo'
     */
    @Test
    public void publisherUpdateInfoTest() {
        // TODO: test publisherUpdateInfo
    }

    /**
     * Test the property 'siteId'
     */
    @Test
    public void siteIdTest() {
        // TODO: test siteId
    }

    /**
     * Test the property 'siteIdDimensionValue'
     */
    @Test
    public void siteIdDimensionValueTest() {
        // TODO: test siteIdDimensionValue
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'sslRequired'
     */
    @Test
    public void sslRequiredTest() {
        // TODO: test sslRequired
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'subaccountId'
     */
    @Test
    public void subaccountIdTest() {
        // TODO: test subaccountId
    }

    /**
     * Test the property 'tagFormats'
     */
    @Test
    public void tagFormatsTest() {
        // TODO: test tagFormats
    }

    /**
     * Test the property 'tagSetting'
     */
    @Test
    public void tagSettingTest() {
        // TODO: test tagSetting
    }

    /**
     * Test the property 'videoActiveViewOptOut'
     */
    @Test
    public void videoActiveViewOptOutTest() {
        // TODO: test videoActiveViewOptOut
    }

    /**
     * Test the property 'videoSettings'
     */
    @Test
    public void videoSettingsTest() {
        // TODO: test videoSettings
    }

    /**
     * Test the property 'vpaidAdapterChoice'
     */
    @Test
    public void vpaidAdapterChoiceTest() {
        // TODO: test vpaidAdapterChoice
    }

}
