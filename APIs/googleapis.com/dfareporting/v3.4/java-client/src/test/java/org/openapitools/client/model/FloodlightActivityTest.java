/*
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DimensionValue;
import org.openapitools.client.model.FloodlightActivityDynamicTag;
import org.openapitools.client.model.FloodlightActivityPublisherDynamicTag;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for FloodlightActivity
 */
public class FloodlightActivityTest {
    private final FloodlightActivity model = new FloodlightActivity();

    /**
     * Model tests for FloodlightActivity
     */
    @Test
    public void testFloodlightActivity() {
        // TODO: test FloodlightActivity
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'advertiserId'
     */
    @Test
    public void advertiserIdTest() {
        // TODO: test advertiserId
    }

    /**
     * Test the property 'advertiserIdDimensionValue'
     */
    @Test
    public void advertiserIdDimensionValueTest() {
        // TODO: test advertiserIdDimensionValue
    }

    /**
     * Test the property 'attributionEnabled'
     */
    @Test
    public void attributionEnabledTest() {
        // TODO: test attributionEnabled
    }

    /**
     * Test the property 'cacheBustingType'
     */
    @Test
    public void cacheBustingTypeTest() {
        // TODO: test cacheBustingType
    }

    /**
     * Test the property 'countingMethod'
     */
    @Test
    public void countingMethodTest() {
        // TODO: test countingMethod
    }

    /**
     * Test the property 'defaultTags'
     */
    @Test
    public void defaultTagsTest() {
        // TODO: test defaultTags
    }

    /**
     * Test the property 'expectedUrl'
     */
    @Test
    public void expectedUrlTest() {
        // TODO: test expectedUrl
    }

    /**
     * Test the property 'floodlightActivityGroupId'
     */
    @Test
    public void floodlightActivityGroupIdTest() {
        // TODO: test floodlightActivityGroupId
    }

    /**
     * Test the property 'floodlightActivityGroupName'
     */
    @Test
    public void floodlightActivityGroupNameTest() {
        // TODO: test floodlightActivityGroupName
    }

    /**
     * Test the property 'floodlightActivityGroupTagString'
     */
    @Test
    public void floodlightActivityGroupTagStringTest() {
        // TODO: test floodlightActivityGroupTagString
    }

    /**
     * Test the property 'floodlightActivityGroupType'
     */
    @Test
    public void floodlightActivityGroupTypeTest() {
        // TODO: test floodlightActivityGroupType
    }

    /**
     * Test the property 'floodlightConfigurationId'
     */
    @Test
    public void floodlightConfigurationIdTest() {
        // TODO: test floodlightConfigurationId
    }

    /**
     * Test the property 'floodlightConfigurationIdDimensionValue'
     */
    @Test
    public void floodlightConfigurationIdDimensionValueTest() {
        // TODO: test floodlightConfigurationIdDimensionValue
    }

    /**
     * Test the property 'floodlightTagType'
     */
    @Test
    public void floodlightTagTypeTest() {
        // TODO: test floodlightTagType
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'idDimensionValue'
     */
    @Test
    public void idDimensionValueTest() {
        // TODO: test idDimensionValue
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'publisherTags'
     */
    @Test
    public void publisherTagsTest() {
        // TODO: test publisherTags
    }

    /**
     * Test the property 'secure'
     */
    @Test
    public void secureTest() {
        // TODO: test secure
    }

    /**
     * Test the property 'sslCompliant'
     */
    @Test
    public void sslCompliantTest() {
        // TODO: test sslCompliant
    }

    /**
     * Test the property 'sslRequired'
     */
    @Test
    public void sslRequiredTest() {
        // TODO: test sslRequired
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'subaccountId'
     */
    @Test
    public void subaccountIdTest() {
        // TODO: test subaccountId
    }

    /**
     * Test the property 'tagFormat'
     */
    @Test
    public void tagFormatTest() {
        // TODO: test tagFormat
    }

    /**
     * Test the property 'tagString'
     */
    @Test
    public void tagStringTest() {
        // TODO: test tagString
    }

    /**
     * Test the property 'userDefinedVariableTypes'
     */
    @Test
    public void userDefinedVariableTypesTest() {
        // TODO: test userDefinedVariableTypes
    }

}
