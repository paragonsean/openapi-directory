/*
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Google Ad Manager Settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:31:16.070314-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DfpSettings {
  public static final String SERIALIZED_NAME_DFP_NETWORK_CODE = "dfpNetworkCode";
  @SerializedName(SERIALIZED_NAME_DFP_NETWORK_CODE)
  private String dfpNetworkCode;

  public static final String SERIALIZED_NAME_DFP_NETWORK_NAME = "dfpNetworkName";
  @SerializedName(SERIALIZED_NAME_DFP_NETWORK_NAME)
  private String dfpNetworkName;

  public static final String SERIALIZED_NAME_PROGRAMMATIC_PLACEMENT_ACCEPTED = "programmaticPlacementAccepted";
  @SerializedName(SERIALIZED_NAME_PROGRAMMATIC_PLACEMENT_ACCEPTED)
  private Boolean programmaticPlacementAccepted;

  public static final String SERIALIZED_NAME_PUB_PAID_PLACEMENT_ACCEPTED = "pubPaidPlacementAccepted";
  @SerializedName(SERIALIZED_NAME_PUB_PAID_PLACEMENT_ACCEPTED)
  private Boolean pubPaidPlacementAccepted;

  public static final String SERIALIZED_NAME_PUBLISHER_PORTAL_ONLY = "publisherPortalOnly";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_PORTAL_ONLY)
  private Boolean publisherPortalOnly;

  public DfpSettings() {
  }

  public DfpSettings dfpNetworkCode(String dfpNetworkCode) {
    this.dfpNetworkCode = dfpNetworkCode;
    return this;
  }

  /**
   * Ad Manager network code for this directory site.
   * @return dfpNetworkCode
   */
  @javax.annotation.Nullable
  public String getDfpNetworkCode() {
    return dfpNetworkCode;
  }

  public void setDfpNetworkCode(String dfpNetworkCode) {
    this.dfpNetworkCode = dfpNetworkCode;
  }


  public DfpSettings dfpNetworkName(String dfpNetworkName) {
    this.dfpNetworkName = dfpNetworkName;
    return this;
  }

  /**
   * Ad Manager network name for this directory site.
   * @return dfpNetworkName
   */
  @javax.annotation.Nullable
  public String getDfpNetworkName() {
    return dfpNetworkName;
  }

  public void setDfpNetworkName(String dfpNetworkName) {
    this.dfpNetworkName = dfpNetworkName;
  }


  public DfpSettings programmaticPlacementAccepted(Boolean programmaticPlacementAccepted) {
    this.programmaticPlacementAccepted = programmaticPlacementAccepted;
    return this;
  }

  /**
   * Whether this directory site accepts programmatic placements.
   * @return programmaticPlacementAccepted
   */
  @javax.annotation.Nullable
  public Boolean getProgrammaticPlacementAccepted() {
    return programmaticPlacementAccepted;
  }

  public void setProgrammaticPlacementAccepted(Boolean programmaticPlacementAccepted) {
    this.programmaticPlacementAccepted = programmaticPlacementAccepted;
  }


  public DfpSettings pubPaidPlacementAccepted(Boolean pubPaidPlacementAccepted) {
    this.pubPaidPlacementAccepted = pubPaidPlacementAccepted;
    return this;
  }

  /**
   * Whether this directory site accepts publisher-paid tags.
   * @return pubPaidPlacementAccepted
   */
  @javax.annotation.Nullable
  public Boolean getPubPaidPlacementAccepted() {
    return pubPaidPlacementAccepted;
  }

  public void setPubPaidPlacementAccepted(Boolean pubPaidPlacementAccepted) {
    this.pubPaidPlacementAccepted = pubPaidPlacementAccepted;
  }


  public DfpSettings publisherPortalOnly(Boolean publisherPortalOnly) {
    this.publisherPortalOnly = publisherPortalOnly;
    return this;
  }

  /**
   * Whether this directory site is available only via Publisher Portal.
   * @return publisherPortalOnly
   */
  @javax.annotation.Nullable
  public Boolean getPublisherPortalOnly() {
    return publisherPortalOnly;
  }

  public void setPublisherPortalOnly(Boolean publisherPortalOnly) {
    this.publisherPortalOnly = publisherPortalOnly;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfpSettings dfpSettings = (DfpSettings) o;
    return Objects.equals(this.dfpNetworkCode, dfpSettings.dfpNetworkCode) &&
        Objects.equals(this.dfpNetworkName, dfpSettings.dfpNetworkName) &&
        Objects.equals(this.programmaticPlacementAccepted, dfpSettings.programmaticPlacementAccepted) &&
        Objects.equals(this.pubPaidPlacementAccepted, dfpSettings.pubPaidPlacementAccepted) &&
        Objects.equals(this.publisherPortalOnly, dfpSettings.publisherPortalOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dfpNetworkCode, dfpNetworkName, programmaticPlacementAccepted, pubPaidPlacementAccepted, publisherPortalOnly);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfpSettings {\n");
    sb.append("    dfpNetworkCode: ").append(toIndentedString(dfpNetworkCode)).append("\n");
    sb.append("    dfpNetworkName: ").append(toIndentedString(dfpNetworkName)).append("\n");
    sb.append("    programmaticPlacementAccepted: ").append(toIndentedString(programmaticPlacementAccepted)).append("\n");
    sb.append("    pubPaidPlacementAccepted: ").append(toIndentedString(pubPaidPlacementAccepted)).append("\n");
    sb.append("    publisherPortalOnly: ").append(toIndentedString(publisherPortalOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dfpNetworkCode");
    openapiFields.add("dfpNetworkName");
    openapiFields.add("programmaticPlacementAccepted");
    openapiFields.add("pubPaidPlacementAccepted");
    openapiFields.add("publisherPortalOnly");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DfpSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DfpSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DfpSettings is not found in the empty JSON string", DfpSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DfpSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DfpSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("dfpNetworkCode") != null && !jsonObj.get("dfpNetworkCode").isJsonNull()) && !jsonObj.get("dfpNetworkCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dfpNetworkCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dfpNetworkCode").toString()));
      }
      if ((jsonObj.get("dfpNetworkName") != null && !jsonObj.get("dfpNetworkName").isJsonNull()) && !jsonObj.get("dfpNetworkName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dfpNetworkName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dfpNetworkName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DfpSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DfpSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DfpSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DfpSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<DfpSettings>() {
           @Override
           public void write(JsonWriter out, DfpSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DfpSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DfpSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DfpSettings
   * @throws IOException if the JSON string is invalid with respect to DfpSettings
   */
  public static DfpSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DfpSettings.class);
  }

  /**
   * Convert an instance of DfpSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

