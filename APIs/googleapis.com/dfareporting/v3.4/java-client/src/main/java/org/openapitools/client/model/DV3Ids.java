/*
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DV360 IDs related to the custom event.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:31:16.070314-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DV3Ids {
  public static final String SERIALIZED_NAME_DV_CAMPAIGN_ID = "dvCampaignId";
  @SerializedName(SERIALIZED_NAME_DV_CAMPAIGN_ID)
  private String dvCampaignId;

  public static final String SERIALIZED_NAME_DV_CREATIVE_ID = "dvCreativeId";
  @SerializedName(SERIALIZED_NAME_DV_CREATIVE_ID)
  private String dvCreativeId;

  public static final String SERIALIZED_NAME_DV_INSERTION_ORDER_ID = "dvInsertionOrderId";
  @SerializedName(SERIALIZED_NAME_DV_INSERTION_ORDER_ID)
  private String dvInsertionOrderId;

  public static final String SERIALIZED_NAME_DV_LINE_ITEM_ID = "dvLineItemId";
  @SerializedName(SERIALIZED_NAME_DV_LINE_ITEM_ID)
  private String dvLineItemId;

  public static final String SERIALIZED_NAME_DV_SITE_ID = "dvSiteId";
  @SerializedName(SERIALIZED_NAME_DV_SITE_ID)
  private String dvSiteId;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public DV3Ids() {
  }

  public DV3Ids dvCampaignId(String dvCampaignId) {
    this.dvCampaignId = dvCampaignId;
    return this;
  }

  /**
   * Campaign ID for DV360.
   * @return dvCampaignId
   */
  @javax.annotation.Nullable
  public String getDvCampaignId() {
    return dvCampaignId;
  }

  public void setDvCampaignId(String dvCampaignId) {
    this.dvCampaignId = dvCampaignId;
  }


  public DV3Ids dvCreativeId(String dvCreativeId) {
    this.dvCreativeId = dvCreativeId;
    return this;
  }

  /**
   * Creative ID for DV360.
   * @return dvCreativeId
   */
  @javax.annotation.Nullable
  public String getDvCreativeId() {
    return dvCreativeId;
  }

  public void setDvCreativeId(String dvCreativeId) {
    this.dvCreativeId = dvCreativeId;
  }


  public DV3Ids dvInsertionOrderId(String dvInsertionOrderId) {
    this.dvInsertionOrderId = dvInsertionOrderId;
    return this;
  }

  /**
   * Insertion Order ID for DV360.
   * @return dvInsertionOrderId
   */
  @javax.annotation.Nullable
  public String getDvInsertionOrderId() {
    return dvInsertionOrderId;
  }

  public void setDvInsertionOrderId(String dvInsertionOrderId) {
    this.dvInsertionOrderId = dvInsertionOrderId;
  }


  public DV3Ids dvLineItemId(String dvLineItemId) {
    this.dvLineItemId = dvLineItemId;
    return this;
  }

  /**
   * Line Item ID for DV360.
   * @return dvLineItemId
   */
  @javax.annotation.Nullable
  public String getDvLineItemId() {
    return dvLineItemId;
  }

  public void setDvLineItemId(String dvLineItemId) {
    this.dvLineItemId = dvLineItemId;
  }


  public DV3Ids dvSiteId(String dvSiteId) {
    this.dvSiteId = dvSiteId;
    return this;
  }

  /**
   * Site ID for DV360.
   * @return dvSiteId
   */
  @javax.annotation.Nullable
  public String getDvSiteId() {
    return dvSiteId;
  }

  public void setDvSiteId(String dvSiteId) {
    this.dvSiteId = dvSiteId;
  }


  public DV3Ids kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;dfareporting#dV3Ids\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DV3Ids dv3Ids = (DV3Ids) o;
    return Objects.equals(this.dvCampaignId, dv3Ids.dvCampaignId) &&
        Objects.equals(this.dvCreativeId, dv3Ids.dvCreativeId) &&
        Objects.equals(this.dvInsertionOrderId, dv3Ids.dvInsertionOrderId) &&
        Objects.equals(this.dvLineItemId, dv3Ids.dvLineItemId) &&
        Objects.equals(this.dvSiteId, dv3Ids.dvSiteId) &&
        Objects.equals(this.kind, dv3Ids.kind);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dvCampaignId, dvCreativeId, dvInsertionOrderId, dvLineItemId, dvSiteId, kind);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DV3Ids {\n");
    sb.append("    dvCampaignId: ").append(toIndentedString(dvCampaignId)).append("\n");
    sb.append("    dvCreativeId: ").append(toIndentedString(dvCreativeId)).append("\n");
    sb.append("    dvInsertionOrderId: ").append(toIndentedString(dvInsertionOrderId)).append("\n");
    sb.append("    dvLineItemId: ").append(toIndentedString(dvLineItemId)).append("\n");
    sb.append("    dvSiteId: ").append(toIndentedString(dvSiteId)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dvCampaignId");
    openapiFields.add("dvCreativeId");
    openapiFields.add("dvInsertionOrderId");
    openapiFields.add("dvLineItemId");
    openapiFields.add("dvSiteId");
    openapiFields.add("kind");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DV3Ids
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DV3Ids.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DV3Ids is not found in the empty JSON string", DV3Ids.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DV3Ids.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DV3Ids` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("dvCampaignId") != null && !jsonObj.get("dvCampaignId").isJsonNull()) && !jsonObj.get("dvCampaignId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dvCampaignId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dvCampaignId").toString()));
      }
      if ((jsonObj.get("dvCreativeId") != null && !jsonObj.get("dvCreativeId").isJsonNull()) && !jsonObj.get("dvCreativeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dvCreativeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dvCreativeId").toString()));
      }
      if ((jsonObj.get("dvInsertionOrderId") != null && !jsonObj.get("dvInsertionOrderId").isJsonNull()) && !jsonObj.get("dvInsertionOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dvInsertionOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dvInsertionOrderId").toString()));
      }
      if ((jsonObj.get("dvLineItemId") != null && !jsonObj.get("dvLineItemId").isJsonNull()) && !jsonObj.get("dvLineItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dvLineItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dvLineItemId").toString()));
      }
      if ((jsonObj.get("dvSiteId") != null && !jsonObj.get("dvSiteId").isJsonNull()) && !jsonObj.get("dvSiteId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dvSiteId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dvSiteId").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DV3Ids.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DV3Ids' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DV3Ids> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DV3Ids.class));

       return (TypeAdapter<T>) new TypeAdapter<DV3Ids>() {
           @Override
           public void write(JsonWriter out, DV3Ids value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DV3Ids read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DV3Ids given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DV3Ids
   * @throws IOException if the JSON string is invalid with respect to DV3Ids
   */
  public static DV3Ids fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DV3Ids.class);
  }

  /**
   * Convert an instance of DV3Ids to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

