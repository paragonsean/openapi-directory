/*
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OptimizationActivity;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Creative optimization settings.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:31:16.070314-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreativeOptimizationConfiguration {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OPTIMIZATION_ACTIVITYS = "optimizationActivitys";
  @SerializedName(SERIALIZED_NAME_OPTIMIZATION_ACTIVITYS)
  private List<OptimizationActivity> optimizationActivitys = new ArrayList<>();

  /**
   * Optimization model for this configuration.
   */
  @JsonAdapter(OptimizationModelEnum.Adapter.class)
  public enum OptimizationModelEnum {
    CLICK("CLICK"),
    
    POST_CLICK("POST_CLICK"),
    
    POST_IMPRESSION("POST_IMPRESSION"),
    
    POST_CLICK_AND_IMPRESSION("POST_CLICK_AND_IMPRESSION"),
    
    VIDEO_COMPLETION("VIDEO_COMPLETION");

    private String value;

    OptimizationModelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OptimizationModelEnum fromValue(String value) {
      for (OptimizationModelEnum b : OptimizationModelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OptimizationModelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OptimizationModelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OptimizationModelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OptimizationModelEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OptimizationModelEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_OPTIMIZATION_MODEL = "optimizationModel";
  @SerializedName(SERIALIZED_NAME_OPTIMIZATION_MODEL)
  private OptimizationModelEnum optimizationModel;

  public CreativeOptimizationConfiguration() {
  }

  public CreativeOptimizationConfiguration id(String id) {
    this.id = id;
    return this;
  }

  /**
   * ID of this creative optimization config. This field is auto-generated when the campaign is inserted or updated. It can be null for existing campaigns.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public CreativeOptimizationConfiguration name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of this creative optimization config. This is a required field and must be less than 129 characters long.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreativeOptimizationConfiguration optimizationActivitys(List<OptimizationActivity> optimizationActivitys) {
    this.optimizationActivitys = optimizationActivitys;
    return this;
  }

  public CreativeOptimizationConfiguration addOptimizationActivitysItem(OptimizationActivity optimizationActivitysItem) {
    if (this.optimizationActivitys == null) {
      this.optimizationActivitys = new ArrayList<>();
    }
    this.optimizationActivitys.add(optimizationActivitysItem);
    return this;
  }

  /**
   * List of optimization activities associated with this configuration.
   * @return optimizationActivitys
   */
  @javax.annotation.Nullable
  public List<OptimizationActivity> getOptimizationActivitys() {
    return optimizationActivitys;
  }

  public void setOptimizationActivitys(List<OptimizationActivity> optimizationActivitys) {
    this.optimizationActivitys = optimizationActivitys;
  }


  public CreativeOptimizationConfiguration optimizationModel(OptimizationModelEnum optimizationModel) {
    this.optimizationModel = optimizationModel;
    return this;
  }

  /**
   * Optimization model for this configuration.
   * @return optimizationModel
   */
  @javax.annotation.Nullable
  public OptimizationModelEnum getOptimizationModel() {
    return optimizationModel;
  }

  public void setOptimizationModel(OptimizationModelEnum optimizationModel) {
    this.optimizationModel = optimizationModel;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreativeOptimizationConfiguration creativeOptimizationConfiguration = (CreativeOptimizationConfiguration) o;
    return Objects.equals(this.id, creativeOptimizationConfiguration.id) &&
        Objects.equals(this.name, creativeOptimizationConfiguration.name) &&
        Objects.equals(this.optimizationActivitys, creativeOptimizationConfiguration.optimizationActivitys) &&
        Objects.equals(this.optimizationModel, creativeOptimizationConfiguration.optimizationModel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, optimizationActivitys, optimizationModel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreativeOptimizationConfiguration {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    optimizationActivitys: ").append(toIndentedString(optimizationActivitys)).append("\n");
    sb.append("    optimizationModel: ").append(toIndentedString(optimizationModel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("optimizationActivitys");
    openapiFields.add("optimizationModel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreativeOptimizationConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreativeOptimizationConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreativeOptimizationConfiguration is not found in the empty JSON string", CreativeOptimizationConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreativeOptimizationConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreativeOptimizationConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("optimizationActivitys") != null && !jsonObj.get("optimizationActivitys").isJsonNull()) {
        JsonArray jsonArrayoptimizationActivitys = jsonObj.getAsJsonArray("optimizationActivitys");
        if (jsonArrayoptimizationActivitys != null) {
          // ensure the json data is an array
          if (!jsonObj.get("optimizationActivitys").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `optimizationActivitys` to be an array in the JSON string but got `%s`", jsonObj.get("optimizationActivitys").toString()));
          }

          // validate the optional field `optimizationActivitys` (array)
          for (int i = 0; i < jsonArrayoptimizationActivitys.size(); i++) {
            OptimizationActivity.validateJsonElement(jsonArrayoptimizationActivitys.get(i));
          };
        }
      }
      if ((jsonObj.get("optimizationModel") != null && !jsonObj.get("optimizationModel").isJsonNull()) && !jsonObj.get("optimizationModel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `optimizationModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("optimizationModel").toString()));
      }
      // validate the optional field `optimizationModel`
      if (jsonObj.get("optimizationModel") != null && !jsonObj.get("optimizationModel").isJsonNull()) {
        OptimizationModelEnum.validateJsonElement(jsonObj.get("optimizationModel"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreativeOptimizationConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreativeOptimizationConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreativeOptimizationConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreativeOptimizationConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<CreativeOptimizationConfiguration>() {
           @Override
           public void write(JsonWriter out, CreativeOptimizationConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreativeOptimizationConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreativeOptimizationConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreativeOptimizationConfiguration
   * @throws IOException if the JSON string is invalid with respect to CreativeOptimizationConfiguration
   */
  public static CreativeOptimizationConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreativeOptimizationConfiguration.class);
  }

  /**
   * Convert an instance of CreativeOptimizationConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

