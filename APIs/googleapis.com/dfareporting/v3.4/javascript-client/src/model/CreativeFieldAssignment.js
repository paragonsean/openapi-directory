/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreativeFieldAssignment model module.
 * @module model/CreativeFieldAssignment
 * @version v3.4
 */
class CreativeFieldAssignment {
    /**
     * Constructs a new <code>CreativeFieldAssignment</code>.
     * Creative Field Assignment.
     * @alias module:model/CreativeFieldAssignment
     */
    constructor() { 
        
        CreativeFieldAssignment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreativeFieldAssignment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreativeFieldAssignment} obj Optional instance to populate.
     * @return {module:model/CreativeFieldAssignment} The populated <code>CreativeFieldAssignment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreativeFieldAssignment();

            if (data.hasOwnProperty('creativeFieldId')) {
                obj['creativeFieldId'] = ApiClient.convertToType(data['creativeFieldId'], 'String');
            }
            if (data.hasOwnProperty('creativeFieldValueId')) {
                obj['creativeFieldValueId'] = ApiClient.convertToType(data['creativeFieldValueId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreativeFieldAssignment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreativeFieldAssignment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['creativeFieldId'] && !(typeof data['creativeFieldId'] === 'string' || data['creativeFieldId'] instanceof String)) {
            throw new Error("Expected the field `creativeFieldId` to be a primitive type in the JSON string but got " + data['creativeFieldId']);
        }
        // ensure the json data is a string
        if (data['creativeFieldValueId'] && !(typeof data['creativeFieldValueId'] === 'string' || data['creativeFieldValueId'] instanceof String)) {
            throw new Error("Expected the field `creativeFieldValueId` to be a primitive type in the JSON string but got " + data['creativeFieldValueId']);
        }

        return true;
    }


}



/**
 * ID of the creative field.
 * @member {String} creativeFieldId
 */
CreativeFieldAssignment.prototype['creativeFieldId'] = undefined;

/**
 * ID of the creative field value.
 * @member {String} creativeFieldValueId
 */
CreativeFieldAssignment.prototype['creativeFieldValueId'] = undefined;






export default CreativeFieldAssignment;

