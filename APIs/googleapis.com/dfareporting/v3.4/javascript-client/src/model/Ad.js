/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClickThroughUrl from './ClickThroughUrl';
import ClickThroughUrlSuffixProperties from './ClickThroughUrlSuffixProperties';
import CreativeGroupAssignment from './CreativeGroupAssignment';
import CreativeRotation from './CreativeRotation';
import DayPartTargeting from './DayPartTargeting';
import DefaultClickThroughEventTagProperties from './DefaultClickThroughEventTagProperties';
import DeliverySchedule from './DeliverySchedule';
import DimensionValue from './DimensionValue';
import EventTagOverride from './EventTagOverride';
import GeoTargeting from './GeoTargeting';
import KeyValueTargetingExpression from './KeyValueTargetingExpression';
import LanguageTargeting from './LanguageTargeting';
import LastModifiedInfo from './LastModifiedInfo';
import ListTargetingExpression from './ListTargetingExpression';
import PlacementAssignment from './PlacementAssignment';
import Size from './Size';
import TechnologyTargeting from './TechnologyTargeting';

/**
 * The Ad model module.
 * @module model/Ad
 * @version v3.4
 */
class Ad {
    /**
     * Constructs a new <code>Ad</code>.
     * Contains properties of a Campaign Manager ad.
     * @alias module:model/Ad
     */
    constructor() { 
        
        Ad.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Ad</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Ad} obj Optional instance to populate.
     * @return {module:model/Ad} The populated <code>Ad</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Ad();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('advertiserId')) {
                obj['advertiserId'] = ApiClient.convertToType(data['advertiserId'], 'String');
            }
            if (data.hasOwnProperty('advertiserIdDimensionValue')) {
                obj['advertiserIdDimensionValue'] = DimensionValue.constructFromObject(data['advertiserIdDimensionValue']);
            }
            if (data.hasOwnProperty('archived')) {
                obj['archived'] = ApiClient.convertToType(data['archived'], 'Boolean');
            }
            if (data.hasOwnProperty('audienceSegmentId')) {
                obj['audienceSegmentId'] = ApiClient.convertToType(data['audienceSegmentId'], 'String');
            }
            if (data.hasOwnProperty('campaignId')) {
                obj['campaignId'] = ApiClient.convertToType(data['campaignId'], 'String');
            }
            if (data.hasOwnProperty('campaignIdDimensionValue')) {
                obj['campaignIdDimensionValue'] = DimensionValue.constructFromObject(data['campaignIdDimensionValue']);
            }
            if (data.hasOwnProperty('clickThroughUrl')) {
                obj['clickThroughUrl'] = ClickThroughUrl.constructFromObject(data['clickThroughUrl']);
            }
            if (data.hasOwnProperty('clickThroughUrlSuffixProperties')) {
                obj['clickThroughUrlSuffixProperties'] = ClickThroughUrlSuffixProperties.constructFromObject(data['clickThroughUrlSuffixProperties']);
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('compatibility')) {
                obj['compatibility'] = ApiClient.convertToType(data['compatibility'], 'String');
            }
            if (data.hasOwnProperty('createInfo')) {
                obj['createInfo'] = LastModifiedInfo.constructFromObject(data['createInfo']);
            }
            if (data.hasOwnProperty('creativeGroupAssignments')) {
                obj['creativeGroupAssignments'] = ApiClient.convertToType(data['creativeGroupAssignments'], [CreativeGroupAssignment]);
            }
            if (data.hasOwnProperty('creativeRotation')) {
                obj['creativeRotation'] = CreativeRotation.constructFromObject(data['creativeRotation']);
            }
            if (data.hasOwnProperty('dayPartTargeting')) {
                obj['dayPartTargeting'] = DayPartTargeting.constructFromObject(data['dayPartTargeting']);
            }
            if (data.hasOwnProperty('defaultClickThroughEventTagProperties')) {
                obj['defaultClickThroughEventTagProperties'] = DefaultClickThroughEventTagProperties.constructFromObject(data['defaultClickThroughEventTagProperties']);
            }
            if (data.hasOwnProperty('deliverySchedule')) {
                obj['deliverySchedule'] = DeliverySchedule.constructFromObject(data['deliverySchedule']);
            }
            if (data.hasOwnProperty('dynamicClickTracker')) {
                obj['dynamicClickTracker'] = ApiClient.convertToType(data['dynamicClickTracker'], 'Boolean');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('eventTagOverrides')) {
                obj['eventTagOverrides'] = ApiClient.convertToType(data['eventTagOverrides'], [EventTagOverride]);
            }
            if (data.hasOwnProperty('geoTargeting')) {
                obj['geoTargeting'] = GeoTargeting.constructFromObject(data['geoTargeting']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('idDimensionValue')) {
                obj['idDimensionValue'] = DimensionValue.constructFromObject(data['idDimensionValue']);
            }
            if (data.hasOwnProperty('keyValueTargetingExpression')) {
                obj['keyValueTargetingExpression'] = KeyValueTargetingExpression.constructFromObject(data['keyValueTargetingExpression']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('languageTargeting')) {
                obj['languageTargeting'] = LanguageTargeting.constructFromObject(data['languageTargeting']);
            }
            if (data.hasOwnProperty('lastModifiedInfo')) {
                obj['lastModifiedInfo'] = LastModifiedInfo.constructFromObject(data['lastModifiedInfo']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('placementAssignments')) {
                obj['placementAssignments'] = ApiClient.convertToType(data['placementAssignments'], [PlacementAssignment]);
            }
            if (data.hasOwnProperty('remarketingListExpression')) {
                obj['remarketingListExpression'] = ListTargetingExpression.constructFromObject(data['remarketingListExpression']);
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = Size.constructFromObject(data['size']);
            }
            if (data.hasOwnProperty('sslCompliant')) {
                obj['sslCompliant'] = ApiClient.convertToType(data['sslCompliant'], 'Boolean');
            }
            if (data.hasOwnProperty('sslRequired')) {
                obj['sslRequired'] = ApiClient.convertToType(data['sslRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('subaccountId')) {
                obj['subaccountId'] = ApiClient.convertToType(data['subaccountId'], 'String');
            }
            if (data.hasOwnProperty('targetingTemplateId')) {
                obj['targetingTemplateId'] = ApiClient.convertToType(data['targetingTemplateId'], 'String');
            }
            if (data.hasOwnProperty('technologyTargeting')) {
                obj['technologyTargeting'] = TechnologyTargeting.constructFromObject(data['technologyTargeting']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Ad</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Ad</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['advertiserId'] && !(typeof data['advertiserId'] === 'string' || data['advertiserId'] instanceof String)) {
            throw new Error("Expected the field `advertiserId` to be a primitive type in the JSON string but got " + data['advertiserId']);
        }
        // validate the optional field `advertiserIdDimensionValue`
        if (data['advertiserIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['advertiserIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['audienceSegmentId'] && !(typeof data['audienceSegmentId'] === 'string' || data['audienceSegmentId'] instanceof String)) {
            throw new Error("Expected the field `audienceSegmentId` to be a primitive type in the JSON string but got " + data['audienceSegmentId']);
        }
        // ensure the json data is a string
        if (data['campaignId'] && !(typeof data['campaignId'] === 'string' || data['campaignId'] instanceof String)) {
            throw new Error("Expected the field `campaignId` to be a primitive type in the JSON string but got " + data['campaignId']);
        }
        // validate the optional field `campaignIdDimensionValue`
        if (data['campaignIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['campaignIdDimensionValue']);
        }
        // validate the optional field `clickThroughUrl`
        if (data['clickThroughUrl']) { // data not null
          ClickThroughUrl.validateJSON(data['clickThroughUrl']);
        }
        // validate the optional field `clickThroughUrlSuffixProperties`
        if (data['clickThroughUrlSuffixProperties']) { // data not null
          ClickThroughUrlSuffixProperties.validateJSON(data['clickThroughUrlSuffixProperties']);
        }
        // ensure the json data is a string
        if (data['comments'] && !(typeof data['comments'] === 'string' || data['comments'] instanceof String)) {
            throw new Error("Expected the field `comments` to be a primitive type in the JSON string but got " + data['comments']);
        }
        // ensure the json data is a string
        if (data['compatibility'] && !(typeof data['compatibility'] === 'string' || data['compatibility'] instanceof String)) {
            throw new Error("Expected the field `compatibility` to be a primitive type in the JSON string but got " + data['compatibility']);
        }
        // validate the optional field `createInfo`
        if (data['createInfo']) { // data not null
          LastModifiedInfo.validateJSON(data['createInfo']);
        }
        if (data['creativeGroupAssignments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['creativeGroupAssignments'])) {
                throw new Error("Expected the field `creativeGroupAssignments` to be an array in the JSON data but got " + data['creativeGroupAssignments']);
            }
            // validate the optional field `creativeGroupAssignments` (array)
            for (const item of data['creativeGroupAssignments']) {
                CreativeGroupAssignment.validateJSON(item);
            };
        }
        // validate the optional field `creativeRotation`
        if (data['creativeRotation']) { // data not null
          CreativeRotation.validateJSON(data['creativeRotation']);
        }
        // validate the optional field `dayPartTargeting`
        if (data['dayPartTargeting']) { // data not null
          DayPartTargeting.validateJSON(data['dayPartTargeting']);
        }
        // validate the optional field `defaultClickThroughEventTagProperties`
        if (data['defaultClickThroughEventTagProperties']) { // data not null
          DefaultClickThroughEventTagProperties.validateJSON(data['defaultClickThroughEventTagProperties']);
        }
        // validate the optional field `deliverySchedule`
        if (data['deliverySchedule']) { // data not null
          DeliverySchedule.validateJSON(data['deliverySchedule']);
        }
        if (data['eventTagOverrides']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['eventTagOverrides'])) {
                throw new Error("Expected the field `eventTagOverrides` to be an array in the JSON data but got " + data['eventTagOverrides']);
            }
            // validate the optional field `eventTagOverrides` (array)
            for (const item of data['eventTagOverrides']) {
                EventTagOverride.validateJSON(item);
            };
        }
        // validate the optional field `geoTargeting`
        if (data['geoTargeting']) { // data not null
          GeoTargeting.validateJSON(data['geoTargeting']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `idDimensionValue`
        if (data['idDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['idDimensionValue']);
        }
        // validate the optional field `keyValueTargetingExpression`
        if (data['keyValueTargetingExpression']) { // data not null
          KeyValueTargetingExpression.validateJSON(data['keyValueTargetingExpression']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `languageTargeting`
        if (data['languageTargeting']) { // data not null
          LanguageTargeting.validateJSON(data['languageTargeting']);
        }
        // validate the optional field `lastModifiedInfo`
        if (data['lastModifiedInfo']) { // data not null
          LastModifiedInfo.validateJSON(data['lastModifiedInfo']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['placementAssignments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['placementAssignments'])) {
                throw new Error("Expected the field `placementAssignments` to be an array in the JSON data but got " + data['placementAssignments']);
            }
            // validate the optional field `placementAssignments` (array)
            for (const item of data['placementAssignments']) {
                PlacementAssignment.validateJSON(item);
            };
        }
        // validate the optional field `remarketingListExpression`
        if (data['remarketingListExpression']) { // data not null
          ListTargetingExpression.validateJSON(data['remarketingListExpression']);
        }
        // validate the optional field `size`
        if (data['size']) { // data not null
          Size.validateJSON(data['size']);
        }
        // ensure the json data is a string
        if (data['subaccountId'] && !(typeof data['subaccountId'] === 'string' || data['subaccountId'] instanceof String)) {
            throw new Error("Expected the field `subaccountId` to be a primitive type in the JSON string but got " + data['subaccountId']);
        }
        // ensure the json data is a string
        if (data['targetingTemplateId'] && !(typeof data['targetingTemplateId'] === 'string' || data['targetingTemplateId'] instanceof String)) {
            throw new Error("Expected the field `targetingTemplateId` to be a primitive type in the JSON string but got " + data['targetingTemplateId']);
        }
        // validate the optional field `technologyTargeting`
        if (data['technologyTargeting']) { // data not null
          TechnologyTargeting.validateJSON(data['technologyTargeting']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Account ID of this ad. This is a read-only field that can be left blank.
 * @member {String} accountId
 */
Ad.prototype['accountId'] = undefined;

/**
 * Whether this ad is active. When true, archived must be false.
 * @member {Boolean} active
 */
Ad.prototype['active'] = undefined;

/**
 * Advertiser ID of this ad. This is a required field on insertion.
 * @member {String} advertiserId
 */
Ad.prototype['advertiserId'] = undefined;

/**
 * @member {module:model/DimensionValue} advertiserIdDimensionValue
 */
Ad.prototype['advertiserIdDimensionValue'] = undefined;

/**
 * Whether this ad is archived. When true, active must be false.
 * @member {Boolean} archived
 */
Ad.prototype['archived'] = undefined;

/**
 * Audience segment ID that is being targeted for this ad. Applicable when type is AD_SERVING_STANDARD_AD.
 * @member {String} audienceSegmentId
 */
Ad.prototype['audienceSegmentId'] = undefined;

/**
 * Campaign ID of this ad. This is a required field on insertion.
 * @member {String} campaignId
 */
Ad.prototype['campaignId'] = undefined;

/**
 * @member {module:model/DimensionValue} campaignIdDimensionValue
 */
Ad.prototype['campaignIdDimensionValue'] = undefined;

/**
 * @member {module:model/ClickThroughUrl} clickThroughUrl
 */
Ad.prototype['clickThroughUrl'] = undefined;

/**
 * @member {module:model/ClickThroughUrlSuffixProperties} clickThroughUrlSuffixProperties
 */
Ad.prototype['clickThroughUrlSuffixProperties'] = undefined;

/**
 * Comments for this ad.
 * @member {String} comments
 */
Ad.prototype['comments'] = undefined;

/**
 * Compatibility of this ad. Applicable when type is AD_SERVING_DEFAULT_AD. DISPLAY and DISPLAY_INTERSTITIAL refer to either rendering on desktop or on mobile devices or in mobile apps for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are only used for existing default ads. New mobile placements must be assigned DISPLAY or DISPLAY_INTERSTITIAL and default ads created for those placements will be limited to those compatibility types. IN_STREAM_VIDEO refers to rendering in-stream video ads developed with the VAST standard.
 * @member {module:model/Ad.CompatibilityEnum} compatibility
 */
Ad.prototype['compatibility'] = undefined;

/**
 * @member {module:model/LastModifiedInfo} createInfo
 */
Ad.prototype['createInfo'] = undefined;

/**
 * Creative group assignments for this ad. Applicable when type is AD_SERVING_CLICK_TRACKER. Only one assignment per creative group number is allowed for a maximum of two assignments.
 * @member {Array.<module:model/CreativeGroupAssignment>} creativeGroupAssignments
 */
Ad.prototype['creativeGroupAssignments'] = undefined;

/**
 * @member {module:model/CreativeRotation} creativeRotation
 */
Ad.prototype['creativeRotation'] = undefined;

/**
 * @member {module:model/DayPartTargeting} dayPartTargeting
 */
Ad.prototype['dayPartTargeting'] = undefined;

/**
 * @member {module:model/DefaultClickThroughEventTagProperties} defaultClickThroughEventTagProperties
 */
Ad.prototype['defaultClickThroughEventTagProperties'] = undefined;

/**
 * @member {module:model/DeliverySchedule} deliverySchedule
 */
Ad.prototype['deliverySchedule'] = undefined;

/**
 * Whether this ad is a dynamic click tracker. Applicable when type is AD_SERVING_CLICK_TRACKER. This is a required field on insert, and is read-only after insert.
 * @member {Boolean} dynamicClickTracker
 */
Ad.prototype['dynamicClickTracker'] = undefined;

/**
 * @member {Date} endTime
 */
Ad.prototype['endTime'] = undefined;

/**
 * Event tag overrides for this ad.
 * @member {Array.<module:model/EventTagOverride>} eventTagOverrides
 */
Ad.prototype['eventTagOverrides'] = undefined;

/**
 * @member {module:model/GeoTargeting} geoTargeting
 */
Ad.prototype['geoTargeting'] = undefined;

/**
 * ID of this ad. This is a read-only, auto-generated field.
 * @member {String} id
 */
Ad.prototype['id'] = undefined;

/**
 * @member {module:model/DimensionValue} idDimensionValue
 */
Ad.prototype['idDimensionValue'] = undefined;

/**
 * @member {module:model/KeyValueTargetingExpression} keyValueTargetingExpression
 */
Ad.prototype['keyValueTargetingExpression'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#ad\".
 * @member {String} kind
 */
Ad.prototype['kind'] = undefined;

/**
 * @member {module:model/LanguageTargeting} languageTargeting
 */
Ad.prototype['languageTargeting'] = undefined;

/**
 * @member {module:model/LastModifiedInfo} lastModifiedInfo
 */
Ad.prototype['lastModifiedInfo'] = undefined;

/**
 * Name of this ad. This is a required field and must be less than 256 characters long.
 * @member {String} name
 */
Ad.prototype['name'] = undefined;

/**
 * Placement assignments for this ad.
 * @member {Array.<module:model/PlacementAssignment>} placementAssignments
 */
Ad.prototype['placementAssignments'] = undefined;

/**
 * @member {module:model/ListTargetingExpression} remarketingListExpression
 */
Ad.prototype['remarketingListExpression'] = undefined;

/**
 * @member {module:model/Size} size
 */
Ad.prototype['size'] = undefined;

/**
 * Whether this ad is ssl compliant. This is a read-only field that is auto-generated when the ad is inserted or updated.
 * @member {Boolean} sslCompliant
 */
Ad.prototype['sslCompliant'] = undefined;

/**
 * Whether this ad requires ssl. This is a read-only field that is auto-generated when the ad is inserted or updated.
 * @member {Boolean} sslRequired
 */
Ad.prototype['sslRequired'] = undefined;

/**
 * @member {Date} startTime
 */
Ad.prototype['startTime'] = undefined;

/**
 * Subaccount ID of this ad. This is a read-only field that can be left blank.
 * @member {String} subaccountId
 */
Ad.prototype['subaccountId'] = undefined;

/**
 * Targeting template ID, used to apply preconfigured targeting information to this ad. This cannot be set while any of dayPartTargeting, geoTargeting, keyValueTargetingExpression, languageTargeting, remarketingListExpression, or technologyTargeting are set. Applicable when type is AD_SERVING_STANDARD_AD.
 * @member {String} targetingTemplateId
 */
Ad.prototype['targetingTemplateId'] = undefined;

/**
 * @member {module:model/TechnologyTargeting} technologyTargeting
 */
Ad.prototype['technologyTargeting'] = undefined;

/**
 * Type of ad. This is a required field on insertion. Note that default ads ( AD_SERVING_DEFAULT_AD) cannot be created directly (see Creative resource).
 * @member {module:model/Ad.TypeEnum} type
 */
Ad.prototype['type'] = undefined;





/**
 * Allowed values for the <code>compatibility</code> property.
 * @enum {String}
 * @readonly
 */
Ad['CompatibilityEnum'] = {

    /**
     * value: "DISPLAY"
     * @const
     */
    "DISPLAY": "DISPLAY",

    /**
     * value: "DISPLAY_INTERSTITIAL"
     * @const
     */
    "DISPLAY_INTERSTITIAL": "DISPLAY_INTERSTITIAL",

    /**
     * value: "APP"
     * @const
     */
    "APP": "APP",

    /**
     * value: "APP_INTERSTITIAL"
     * @const
     */
    "APP_INTERSTITIAL": "APP_INTERSTITIAL",

    /**
     * value: "IN_STREAM_VIDEO"
     * @const
     */
    "IN_STREAM_VIDEO": "IN_STREAM_VIDEO",

    /**
     * value: "IN_STREAM_AUDIO"
     * @const
     */
    "IN_STREAM_AUDIO": "IN_STREAM_AUDIO"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Ad['TypeEnum'] = {

    /**
     * value: "AD_SERVING_STANDARD_AD"
     * @const
     */
    "STANDARD_AD": "AD_SERVING_STANDARD_AD",

    /**
     * value: "AD_SERVING_DEFAULT_AD"
     * @const
     */
    "DEFAULT_AD": "AD_SERVING_DEFAULT_AD",

    /**
     * value: "AD_SERVING_CLICK_TRACKER"
     * @const
     */
    "CLICK_TRACKER": "AD_SERVING_CLICK_TRACKER",

    /**
     * value: "AD_SERVING_TRACKING"
     * @const
     */
    "TRACKING": "AD_SERVING_TRACKING",

    /**
     * value: "AD_SERVING_BRAND_SAFE_AD"
     * @const
     */
    "BRAND_SAFE_AD": "AD_SERVING_BRAND_SAFE_AD"
};



export default Ad;

