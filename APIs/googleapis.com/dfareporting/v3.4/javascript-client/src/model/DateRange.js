/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DateRange model module.
 * @module model/DateRange
 * @version v3.4
 */
class DateRange {
    /**
     * Constructs a new <code>DateRange</code>.
     * Represents a date range.
     * @alias module:model/DateRange
     */
    constructor() { 
        
        DateRange.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DateRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DateRange} obj Optional instance to populate.
     * @return {module:model/DateRange} The populated <code>DateRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DateRange();

            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('relativeDateRange')) {
                obj['relativeDateRange'] = ApiClient.convertToType(data['relativeDateRange'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DateRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DateRange</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['relativeDateRange'] && !(typeof data['relativeDateRange'] === 'string' || data['relativeDateRange'] instanceof String)) {
            throw new Error("Expected the field `relativeDateRange` to be a primitive type in the JSON string but got " + data['relativeDateRange']);
        }

        return true;
    }


}



/**
 * @member {Date} endDate
 */
DateRange.prototype['endDate'] = undefined;

/**
 * The kind of resource this is, in this case dfareporting#dateRange.
 * @member {String} kind
 */
DateRange.prototype['kind'] = undefined;

/**
 * The date range relative to the date of when the report is run.
 * @member {module:model/DateRange.RelativeDateRangeEnum} relativeDateRange
 */
DateRange.prototype['relativeDateRange'] = undefined;

/**
 * @member {Date} startDate
 */
DateRange.prototype['startDate'] = undefined;





/**
 * Allowed values for the <code>relativeDateRange</code> property.
 * @enum {String}
 * @readonly
 */
DateRange['RelativeDateRangeEnum'] = {

    /**
     * value: "TODAY"
     * @const
     */
    "TODAY": "TODAY",

    /**
     * value: "YESTERDAY"
     * @const
     */
    "YESTERDAY": "YESTERDAY",

    /**
     * value: "WEEK_TO_DATE"
     * @const
     */
    "WEEK_TO_DATE": "WEEK_TO_DATE",

    /**
     * value: "MONTH_TO_DATE"
     * @const
     */
    "MONTH_TO_DATE": "MONTH_TO_DATE",

    /**
     * value: "QUARTER_TO_DATE"
     * @const
     */
    "QUARTER_TO_DATE": "QUARTER_TO_DATE",

    /**
     * value: "YEAR_TO_DATE"
     * @const
     */
    "YEAR_TO_DATE": "YEAR_TO_DATE",

    /**
     * value: "PREVIOUS_WEEK"
     * @const
     */
    "PREVIOUS_WEEK": "PREVIOUS_WEEK",

    /**
     * value: "PREVIOUS_MONTH"
     * @const
     */
    "PREVIOUS_MONTH": "PREVIOUS_MONTH",

    /**
     * value: "PREVIOUS_QUARTER"
     * @const
     */
    "PREVIOUS_QUARTER": "PREVIOUS_QUARTER",

    /**
     * value: "PREVIOUS_YEAR"
     * @const
     */
    "PREVIOUS_YEAR": "PREVIOUS_YEAR",

    /**
     * value: "LAST_7_DAYS"
     * @const
     */
    "LAST_7_DAYS": "LAST_7_DAYS",

    /**
     * value: "LAST_30_DAYS"
     * @const
     */
    "LAST_30_DAYS": "LAST_30_DAYS",

    /**
     * value: "LAST_90_DAYS"
     * @const
     */
    "LAST_90_DAYS": "LAST_90_DAYS",

    /**
     * value: "LAST_365_DAYS"
     * @const
     */
    "LAST_365_DAYS": "LAST_365_DAYS",

    /**
     * value: "LAST_24_MONTHS"
     * @const
     */
    "LAST_24_MONTHS": "LAST_24_MONTHS",

    /**
     * value: "LAST_14_DAYS"
     * @const
     */
    "LAST_14_DAYS": "LAST_14_DAYS",

    /**
     * value: "LAST_60_DAYS"
     * @const
     */
    "LAST_60_DAYS": "LAST_60_DAYS"
};



export default DateRange;

