/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserRolePermission from './UserRolePermission';

/**
 * The UserRole model module.
 * @module model/UserRole
 * @version v3.4
 */
class UserRole {
    /**
     * Constructs a new <code>UserRole</code>.
     * Contains properties of auser role, which is used to manage user access.
     * @alias module:model/UserRole
     */
    constructor() { 
        
        UserRole.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserRole</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserRole} obj Optional instance to populate.
     * @return {module:model/UserRole} The populated <code>UserRole</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserRole();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('defaultUserRole')) {
                obj['defaultUserRole'] = ApiClient.convertToType(data['defaultUserRole'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parentUserRoleId')) {
                obj['parentUserRoleId'] = ApiClient.convertToType(data['parentUserRoleId'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], [UserRolePermission]);
            }
            if (data.hasOwnProperty('subaccountId')) {
                obj['subaccountId'] = ApiClient.convertToType(data['subaccountId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserRole</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserRole</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['parentUserRoleId'] && !(typeof data['parentUserRoleId'] === 'string' || data['parentUserRoleId'] instanceof String)) {
            throw new Error("Expected the field `parentUserRoleId` to be a primitive type in the JSON string but got " + data['parentUserRoleId']);
        }
        if (data['permissions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['permissions'])) {
                throw new Error("Expected the field `permissions` to be an array in the JSON data but got " + data['permissions']);
            }
            // validate the optional field `permissions` (array)
            for (const item of data['permissions']) {
                UserRolePermission.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['subaccountId'] && !(typeof data['subaccountId'] === 'string' || data['subaccountId'] instanceof String)) {
            throw new Error("Expected the field `subaccountId` to be a primitive type in the JSON string but got " + data['subaccountId']);
        }

        return true;
    }


}



/**
 * Account ID of this user role. This is a read-only field that can be left blank.
 * @member {String} accountId
 */
UserRole.prototype['accountId'] = undefined;

/**
 * Whether this is a default user role. Default user roles are created by the system for the account/subaccount and cannot be modified or deleted. Each default user role comes with a basic set of preassigned permissions.
 * @member {Boolean} defaultUserRole
 */
UserRole.prototype['defaultUserRole'] = undefined;

/**
 * ID of this user role. This is a read-only, auto-generated field.
 * @member {String} id
 */
UserRole.prototype['id'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRole\".
 * @member {String} kind
 */
UserRole.prototype['kind'] = undefined;

/**
 * Name of this user role. This is a required field. Must be less than 256 characters long. If this user role is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this user role is a top-level user role, and the name must be unique among top-level user roles of the same account.
 * @member {String} name
 */
UserRole.prototype['name'] = undefined;

/**
 * ID of the user role that this user role is based on or copied from. This is a required field.
 * @member {String} parentUserRoleId
 */
UserRole.prototype['parentUserRoleId'] = undefined;

/**
 * List of permissions associated with this user role.
 * @member {Array.<module:model/UserRolePermission>} permissions
 */
UserRole.prototype['permissions'] = undefined;

/**
 * Subaccount ID of this user role. This is a read-only field that can be left blank.
 * @member {String} subaccountId
 */
UserRole.prototype['subaccountId'] = undefined;






export default UserRole;

