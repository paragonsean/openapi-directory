/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SiteContact model module.
 * @module model/SiteContact
 * @version v3.4
 */
class SiteContact {
    /**
     * Constructs a new <code>SiteContact</code>.
     * Site Contact
     * @alias module:model/SiteContact
     */
    constructor() { 
        
        SiteContact.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SiteContact</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SiteContact} obj Optional instance to populate.
     * @return {module:model/SiteContact} The populated <code>SiteContact</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SiteContact();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('contactType')) {
                obj['contactType'] = ApiClient.convertToType(data['contactType'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SiteContact</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SiteContact</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['contactType'] && !(typeof data['contactType'] === 'string' || data['contactType'] instanceof String)) {
            throw new Error("Expected the field `contactType` to be a primitive type in the JSON string but got " + data['contactType']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * Address of this site contact.
 * @member {String} address
 */
SiteContact.prototype['address'] = undefined;

/**
 * Site contact type.
 * @member {module:model/SiteContact.ContactTypeEnum} contactType
 */
SiteContact.prototype['contactType'] = undefined;

/**
 * Email address of this site contact. This is a required field.
 * @member {String} email
 */
SiteContact.prototype['email'] = undefined;

/**
 * First name of this site contact.
 * @member {String} firstName
 */
SiteContact.prototype['firstName'] = undefined;

/**
 * ID of this site contact. This is a read-only, auto-generated field.
 * @member {String} id
 */
SiteContact.prototype['id'] = undefined;

/**
 * Last name of this site contact.
 * @member {String} lastName
 */
SiteContact.prototype['lastName'] = undefined;

/**
 * Primary phone number of this site contact.
 * @member {String} phone
 */
SiteContact.prototype['phone'] = undefined;

/**
 * Title or designation of this site contact.
 * @member {String} title
 */
SiteContact.prototype['title'] = undefined;





/**
 * Allowed values for the <code>contactType</code> property.
 * @enum {String}
 * @readonly
 */
SiteContact['ContactTypeEnum'] = {

    /**
     * value: "SALES_PERSON"
     * @const
     */
    "SALES_PERSON": "SALES_PERSON",

    /**
     * value: "TRAFFICKER"
     * @const
     */
    "TRAFFICKER": "TRAFFICKER"
};



export default SiteContact;

