/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DimensionValue from './DimensionValue';

/**
 * The CreativeGroup model module.
 * @module model/CreativeGroup
 * @version v3.4
 */
class CreativeGroup {
    /**
     * Constructs a new <code>CreativeGroup</code>.
     * Contains properties of a creative group.
     * @alias module:model/CreativeGroup
     */
    constructor() { 
        
        CreativeGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreativeGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreativeGroup} obj Optional instance to populate.
     * @return {module:model/CreativeGroup} The populated <code>CreativeGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreativeGroup();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('advertiserId')) {
                obj['advertiserId'] = ApiClient.convertToType(data['advertiserId'], 'String');
            }
            if (data.hasOwnProperty('advertiserIdDimensionValue')) {
                obj['advertiserIdDimensionValue'] = DimensionValue.constructFromObject(data['advertiserIdDimensionValue']);
            }
            if (data.hasOwnProperty('groupNumber')) {
                obj['groupNumber'] = ApiClient.convertToType(data['groupNumber'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('subaccountId')) {
                obj['subaccountId'] = ApiClient.convertToType(data['subaccountId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreativeGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreativeGroup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['advertiserId'] && !(typeof data['advertiserId'] === 'string' || data['advertiserId'] instanceof String)) {
            throw new Error("Expected the field `advertiserId` to be a primitive type in the JSON string but got " + data['advertiserId']);
        }
        // validate the optional field `advertiserIdDimensionValue`
        if (data['advertiserIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['advertiserIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['subaccountId'] && !(typeof data['subaccountId'] === 'string' || data['subaccountId'] instanceof String)) {
            throw new Error("Expected the field `subaccountId` to be a primitive type in the JSON string but got " + data['subaccountId']);
        }

        return true;
    }


}



/**
 * Account ID of this creative group. This is a read-only field that can be left blank.
 * @member {String} accountId
 */
CreativeGroup.prototype['accountId'] = undefined;

/**
 * Advertiser ID of this creative group. This is a required field on insertion.
 * @member {String} advertiserId
 */
CreativeGroup.prototype['advertiserId'] = undefined;

/**
 * @member {module:model/DimensionValue} advertiserIdDimensionValue
 */
CreativeGroup.prototype['advertiserIdDimensionValue'] = undefined;

/**
 * Subgroup of the creative group. Assign your creative groups to a subgroup in order to filter or manage them more easily. This field is required on insertion and is read-only after insertion. Acceptable values are 1 to 2, inclusive.
 * @member {Number} groupNumber
 */
CreativeGroup.prototype['groupNumber'] = undefined;

/**
 * ID of this creative group. This is a read-only, auto-generated field.
 * @member {String} id
 */
CreativeGroup.prototype['id'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeGroup\".
 * @member {String} kind
 */
CreativeGroup.prototype['kind'] = undefined;

/**
 * Name of this creative group. This is a required field and must be less than 256 characters long and unique among creative groups of the same advertiser.
 * @member {String} name
 */
CreativeGroup.prototype['name'] = undefined;

/**
 * Subaccount ID of this creative group. This is a read-only field that can be left blank.
 * @member {String} subaccountId
 */
CreativeGroup.prototype['subaccountId'] = undefined;






export default CreativeGroup;

