/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DimensionValue from './DimensionValue';
import LastModifiedInfo from './LastModifiedInfo';
import LookbackConfiguration from './LookbackConfiguration';
import PricingSchedule from './PricingSchedule';
import Size from './Size';
import TagSetting from './TagSetting';
import VideoSettings from './VideoSettings';

/**
 * The Placement model module.
 * @module model/Placement
 * @version v3.4
 */
class Placement {
    /**
     * Constructs a new <code>Placement</code>.
     * Contains properties of a placement.
     * @alias module:model/Placement
     */
    constructor() { 
        
        Placement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Placement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Placement} obj Optional instance to populate.
     * @return {module:model/Placement} The populated <code>Placement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Placement();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('adBlockingOptOut')) {
                obj['adBlockingOptOut'] = ApiClient.convertToType(data['adBlockingOptOut'], 'Boolean');
            }
            if (data.hasOwnProperty('additionalSizes')) {
                obj['additionalSizes'] = ApiClient.convertToType(data['additionalSizes'], [Size]);
            }
            if (data.hasOwnProperty('advertiserId')) {
                obj['advertiserId'] = ApiClient.convertToType(data['advertiserId'], 'String');
            }
            if (data.hasOwnProperty('advertiserIdDimensionValue')) {
                obj['advertiserIdDimensionValue'] = DimensionValue.constructFromObject(data['advertiserIdDimensionValue']);
            }
            if (data.hasOwnProperty('archived')) {
                obj['archived'] = ApiClient.convertToType(data['archived'], 'Boolean');
            }
            if (data.hasOwnProperty('campaignId')) {
                obj['campaignId'] = ApiClient.convertToType(data['campaignId'], 'String');
            }
            if (data.hasOwnProperty('campaignIdDimensionValue')) {
                obj['campaignIdDimensionValue'] = DimensionValue.constructFromObject(data['campaignIdDimensionValue']);
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('compatibility')) {
                obj['compatibility'] = ApiClient.convertToType(data['compatibility'], 'String');
            }
            if (data.hasOwnProperty('contentCategoryId')) {
                obj['contentCategoryId'] = ApiClient.convertToType(data['contentCategoryId'], 'String');
            }
            if (data.hasOwnProperty('createInfo')) {
                obj['createInfo'] = LastModifiedInfo.constructFromObject(data['createInfo']);
            }
            if (data.hasOwnProperty('directorySiteId')) {
                obj['directorySiteId'] = ApiClient.convertToType(data['directorySiteId'], 'String');
            }
            if (data.hasOwnProperty('directorySiteIdDimensionValue')) {
                obj['directorySiteIdDimensionValue'] = DimensionValue.constructFromObject(data['directorySiteIdDimensionValue']);
            }
            if (data.hasOwnProperty('externalId')) {
                obj['externalId'] = ApiClient.convertToType(data['externalId'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('idDimensionValue')) {
                obj['idDimensionValue'] = DimensionValue.constructFromObject(data['idDimensionValue']);
            }
            if (data.hasOwnProperty('keyName')) {
                obj['keyName'] = ApiClient.convertToType(data['keyName'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedInfo')) {
                obj['lastModifiedInfo'] = LastModifiedInfo.constructFromObject(data['lastModifiedInfo']);
            }
            if (data.hasOwnProperty('lookbackConfiguration')) {
                obj['lookbackConfiguration'] = LookbackConfiguration.constructFromObject(data['lookbackConfiguration']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('paymentApproved')) {
                obj['paymentApproved'] = ApiClient.convertToType(data['paymentApproved'], 'Boolean');
            }
            if (data.hasOwnProperty('paymentSource')) {
                obj['paymentSource'] = ApiClient.convertToType(data['paymentSource'], 'String');
            }
            if (data.hasOwnProperty('placementGroupId')) {
                obj['placementGroupId'] = ApiClient.convertToType(data['placementGroupId'], 'String');
            }
            if (data.hasOwnProperty('placementGroupIdDimensionValue')) {
                obj['placementGroupIdDimensionValue'] = DimensionValue.constructFromObject(data['placementGroupIdDimensionValue']);
            }
            if (data.hasOwnProperty('placementStrategyId')) {
                obj['placementStrategyId'] = ApiClient.convertToType(data['placementStrategyId'], 'String');
            }
            if (data.hasOwnProperty('pricingSchedule')) {
                obj['pricingSchedule'] = PricingSchedule.constructFromObject(data['pricingSchedule']);
            }
            if (data.hasOwnProperty('primary')) {
                obj['primary'] = ApiClient.convertToType(data['primary'], 'Boolean');
            }
            if (data.hasOwnProperty('publisherUpdateInfo')) {
                obj['publisherUpdateInfo'] = LastModifiedInfo.constructFromObject(data['publisherUpdateInfo']);
            }
            if (data.hasOwnProperty('siteId')) {
                obj['siteId'] = ApiClient.convertToType(data['siteId'], 'String');
            }
            if (data.hasOwnProperty('siteIdDimensionValue')) {
                obj['siteIdDimensionValue'] = DimensionValue.constructFromObject(data['siteIdDimensionValue']);
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = Size.constructFromObject(data['size']);
            }
            if (data.hasOwnProperty('sslRequired')) {
                obj['sslRequired'] = ApiClient.convertToType(data['sslRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('subaccountId')) {
                obj['subaccountId'] = ApiClient.convertToType(data['subaccountId'], 'String');
            }
            if (data.hasOwnProperty('tagFormats')) {
                obj['tagFormats'] = ApiClient.convertToType(data['tagFormats'], ['String']);
            }
            if (data.hasOwnProperty('tagSetting')) {
                obj['tagSetting'] = TagSetting.constructFromObject(data['tagSetting']);
            }
            if (data.hasOwnProperty('videoActiveViewOptOut')) {
                obj['videoActiveViewOptOut'] = ApiClient.convertToType(data['videoActiveViewOptOut'], 'Boolean');
            }
            if (data.hasOwnProperty('videoSettings')) {
                obj['videoSettings'] = VideoSettings.constructFromObject(data['videoSettings']);
            }
            if (data.hasOwnProperty('vpaidAdapterChoice')) {
                obj['vpaidAdapterChoice'] = ApiClient.convertToType(data['vpaidAdapterChoice'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Placement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Placement</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        if (data['additionalSizes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['additionalSizes'])) {
                throw new Error("Expected the field `additionalSizes` to be an array in the JSON data but got " + data['additionalSizes']);
            }
            // validate the optional field `additionalSizes` (array)
            for (const item of data['additionalSizes']) {
                Size.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['advertiserId'] && !(typeof data['advertiserId'] === 'string' || data['advertiserId'] instanceof String)) {
            throw new Error("Expected the field `advertiserId` to be a primitive type in the JSON string but got " + data['advertiserId']);
        }
        // validate the optional field `advertiserIdDimensionValue`
        if (data['advertiserIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['advertiserIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['campaignId'] && !(typeof data['campaignId'] === 'string' || data['campaignId'] instanceof String)) {
            throw new Error("Expected the field `campaignId` to be a primitive type in the JSON string but got " + data['campaignId']);
        }
        // validate the optional field `campaignIdDimensionValue`
        if (data['campaignIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['campaignIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['compatibility'] && !(typeof data['compatibility'] === 'string' || data['compatibility'] instanceof String)) {
            throw new Error("Expected the field `compatibility` to be a primitive type in the JSON string but got " + data['compatibility']);
        }
        // ensure the json data is a string
        if (data['contentCategoryId'] && !(typeof data['contentCategoryId'] === 'string' || data['contentCategoryId'] instanceof String)) {
            throw new Error("Expected the field `contentCategoryId` to be a primitive type in the JSON string but got " + data['contentCategoryId']);
        }
        // validate the optional field `createInfo`
        if (data['createInfo']) { // data not null
          LastModifiedInfo.validateJSON(data['createInfo']);
        }
        // ensure the json data is a string
        if (data['directorySiteId'] && !(typeof data['directorySiteId'] === 'string' || data['directorySiteId'] instanceof String)) {
            throw new Error("Expected the field `directorySiteId` to be a primitive type in the JSON string but got " + data['directorySiteId']);
        }
        // validate the optional field `directorySiteIdDimensionValue`
        if (data['directorySiteIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['directorySiteIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['externalId'] && !(typeof data['externalId'] === 'string' || data['externalId'] instanceof String)) {
            throw new Error("Expected the field `externalId` to be a primitive type in the JSON string but got " + data['externalId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `idDimensionValue`
        if (data['idDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['idDimensionValue']);
        }
        // ensure the json data is a string
        if (data['keyName'] && !(typeof data['keyName'] === 'string' || data['keyName'] instanceof String)) {
            throw new Error("Expected the field `keyName` to be a primitive type in the JSON string but got " + data['keyName']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `lastModifiedInfo`
        if (data['lastModifiedInfo']) { // data not null
          LastModifiedInfo.validateJSON(data['lastModifiedInfo']);
        }
        // validate the optional field `lookbackConfiguration`
        if (data['lookbackConfiguration']) { // data not null
          LookbackConfiguration.validateJSON(data['lookbackConfiguration']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['paymentSource'] && !(typeof data['paymentSource'] === 'string' || data['paymentSource'] instanceof String)) {
            throw new Error("Expected the field `paymentSource` to be a primitive type in the JSON string but got " + data['paymentSource']);
        }
        // ensure the json data is a string
        if (data['placementGroupId'] && !(typeof data['placementGroupId'] === 'string' || data['placementGroupId'] instanceof String)) {
            throw new Error("Expected the field `placementGroupId` to be a primitive type in the JSON string but got " + data['placementGroupId']);
        }
        // validate the optional field `placementGroupIdDimensionValue`
        if (data['placementGroupIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['placementGroupIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['placementStrategyId'] && !(typeof data['placementStrategyId'] === 'string' || data['placementStrategyId'] instanceof String)) {
            throw new Error("Expected the field `placementStrategyId` to be a primitive type in the JSON string but got " + data['placementStrategyId']);
        }
        // validate the optional field `pricingSchedule`
        if (data['pricingSchedule']) { // data not null
          PricingSchedule.validateJSON(data['pricingSchedule']);
        }
        // validate the optional field `publisherUpdateInfo`
        if (data['publisherUpdateInfo']) { // data not null
          LastModifiedInfo.validateJSON(data['publisherUpdateInfo']);
        }
        // ensure the json data is a string
        if (data['siteId'] && !(typeof data['siteId'] === 'string' || data['siteId'] instanceof String)) {
            throw new Error("Expected the field `siteId` to be a primitive type in the JSON string but got " + data['siteId']);
        }
        // validate the optional field `siteIdDimensionValue`
        if (data['siteIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['siteIdDimensionValue']);
        }
        // validate the optional field `size`
        if (data['size']) { // data not null
          Size.validateJSON(data['size']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['subaccountId'] && !(typeof data['subaccountId'] === 'string' || data['subaccountId'] instanceof String)) {
            throw new Error("Expected the field `subaccountId` to be a primitive type in the JSON string but got " + data['subaccountId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tagFormats'])) {
            throw new Error("Expected the field `tagFormats` to be an array in the JSON data but got " + data['tagFormats']);
        }
        // validate the optional field `tagSetting`
        if (data['tagSetting']) { // data not null
          TagSetting.validateJSON(data['tagSetting']);
        }
        // validate the optional field `videoSettings`
        if (data['videoSettings']) { // data not null
          VideoSettings.validateJSON(data['videoSettings']);
        }
        // ensure the json data is a string
        if (data['vpaidAdapterChoice'] && !(typeof data['vpaidAdapterChoice'] === 'string' || data['vpaidAdapterChoice'] instanceof String)) {
            throw new Error("Expected the field `vpaidAdapterChoice` to be a primitive type in the JSON string but got " + data['vpaidAdapterChoice']);
        }

        return true;
    }


}



/**
 * Account ID of this placement. This field can be left blank.
 * @member {String} accountId
 */
Placement.prototype['accountId'] = undefined;

/**
 * Whether this placement opts out of ad blocking. When true, ad blocking is disabled for this placement. When false, the campaign and site settings take effect.
 * @member {Boolean} adBlockingOptOut
 */
Placement.prototype['adBlockingOptOut'] = undefined;

/**
 * Additional sizes associated with this placement. When inserting or updating a placement, only the size ID field is used.
 * @member {Array.<module:model/Size>} additionalSizes
 */
Placement.prototype['additionalSizes'] = undefined;

/**
 * Advertiser ID of this placement. This field can be left blank.
 * @member {String} advertiserId
 */
Placement.prototype['advertiserId'] = undefined;

/**
 * @member {module:model/DimensionValue} advertiserIdDimensionValue
 */
Placement.prototype['advertiserIdDimensionValue'] = undefined;

/**
 * Whether this placement is archived.
 * @member {Boolean} archived
 */
Placement.prototype['archived'] = undefined;

/**
 * Campaign ID of this placement. This field is a required field on insertion.
 * @member {String} campaignId
 */
Placement.prototype['campaignId'] = undefined;

/**
 * @member {module:model/DimensionValue} campaignIdDimensionValue
 */
Placement.prototype['campaignIdDimensionValue'] = undefined;

/**
 * Comments for this placement.
 * @member {String} comment
 */
Placement.prototype['comment'] = undefined;

/**
 * Placement compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering on desktop, on mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are no longer allowed for new placement insertions. Instead, use DISPLAY or DISPLAY_INTERSTITIAL. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard. This field is required on insertion.
 * @member {module:model/Placement.CompatibilityEnum} compatibility
 */
Placement.prototype['compatibility'] = undefined;

/**
 * ID of the content category assigned to this placement.
 * @member {String} contentCategoryId
 */
Placement.prototype['contentCategoryId'] = undefined;

/**
 * @member {module:model/LastModifiedInfo} createInfo
 */
Placement.prototype['createInfo'] = undefined;

/**
 * Directory site ID of this placement. On insert, you must set either this field or the siteId field to specify the site associated with this placement. This is a required field that is read-only after insertion.
 * @member {String} directorySiteId
 */
Placement.prototype['directorySiteId'] = undefined;

/**
 * @member {module:model/DimensionValue} directorySiteIdDimensionValue
 */
Placement.prototype['directorySiteIdDimensionValue'] = undefined;

/**
 * External ID for this placement.
 * @member {String} externalId
 */
Placement.prototype['externalId'] = undefined;

/**
 * ID of this placement. This is a read-only, auto-generated field.
 * @member {String} id
 */
Placement.prototype['id'] = undefined;

/**
 * @member {module:model/DimensionValue} idDimensionValue
 */
Placement.prototype['idDimensionValue'] = undefined;

/**
 * Key name of this placement. This is a read-only, auto-generated field.
 * @member {String} keyName
 */
Placement.prototype['keyName'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placement\".
 * @member {String} kind
 */
Placement.prototype['kind'] = undefined;

/**
 * @member {module:model/LastModifiedInfo} lastModifiedInfo
 */
Placement.prototype['lastModifiedInfo'] = undefined;

/**
 * @member {module:model/LookbackConfiguration} lookbackConfiguration
 */
Placement.prototype['lookbackConfiguration'] = undefined;

/**
 * Name of this placement.This is a required field and must be less than or equal to 512 characters long.
 * @member {String} name
 */
Placement.prototype['name'] = undefined;

/**
 * Whether payment was approved for this placement. This is a read-only field relevant only to publisher-paid placements.
 * @member {Boolean} paymentApproved
 */
Placement.prototype['paymentApproved'] = undefined;

/**
 * Payment source for this placement. This is a required field that is read-only after insertion.
 * @member {module:model/Placement.PaymentSourceEnum} paymentSource
 */
Placement.prototype['paymentSource'] = undefined;

/**
 * ID of this placement's group, if applicable.
 * @member {String} placementGroupId
 */
Placement.prototype['placementGroupId'] = undefined;

/**
 * @member {module:model/DimensionValue} placementGroupIdDimensionValue
 */
Placement.prototype['placementGroupIdDimensionValue'] = undefined;

/**
 * ID of the placement strategy assigned to this placement.
 * @member {String} placementStrategyId
 */
Placement.prototype['placementStrategyId'] = undefined;

/**
 * @member {module:model/PricingSchedule} pricingSchedule
 */
Placement.prototype['pricingSchedule'] = undefined;

/**
 * Whether this placement is the primary placement of a roadblock (placement group). You cannot change this field from true to false. Setting this field to true will automatically set the primary field on the original primary placement of the roadblock to false, and it will automatically set the roadblock's primaryPlacementId field to the ID of this placement.
 * @member {Boolean} primary
 */
Placement.prototype['primary'] = undefined;

/**
 * @member {module:model/LastModifiedInfo} publisherUpdateInfo
 */
Placement.prototype['publisherUpdateInfo'] = undefined;

/**
 * Site ID associated with this placement. On insert, you must set either this field or the directorySiteId field to specify the site associated with this placement. This is a required field that is read-only after insertion.
 * @member {String} siteId
 */
Placement.prototype['siteId'] = undefined;

/**
 * @member {module:model/DimensionValue} siteIdDimensionValue
 */
Placement.prototype['siteIdDimensionValue'] = undefined;

/**
 * @member {module:model/Size} size
 */
Placement.prototype['size'] = undefined;

/**
 * Whether creatives assigned to this placement must be SSL-compliant.
 * @member {Boolean} sslRequired
 */
Placement.prototype['sslRequired'] = undefined;

/**
 * Third-party placement status.
 * @member {module:model/Placement.StatusEnum} status
 */
Placement.prototype['status'] = undefined;

/**
 * Subaccount ID of this placement. This field can be left blank.
 * @member {String} subaccountId
 */
Placement.prototype['subaccountId'] = undefined;

/**
 * Tag formats to generate for this placement. This field is required on insertion. Acceptable values are: - \"PLACEMENT_TAG_STANDARD\" - \"PLACEMENT_TAG_IFRAME_JAVASCRIPT\" - \"PLACEMENT_TAG_IFRAME_ILAYER\" - \"PLACEMENT_TAG_INTERNAL_REDIRECT\" - \"PLACEMENT_TAG_JAVASCRIPT\" - \"PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT\" - \"PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT\" - \"PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT\" - \"PLACEMENT_TAG_CLICK_COMMANDS\" - \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH\" - \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3\" - \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4\" - \"PLACEMENT_TAG_TRACKING\" - \"PLACEMENT_TAG_TRACKING_IFRAME\" - \"PLACEMENT_TAG_TRACKING_JAVASCRIPT\" 
 * @member {Array.<module:model/Placement.TagFormatsEnum>} tagFormats
 */
Placement.prototype['tagFormats'] = undefined;

/**
 * @member {module:model/TagSetting} tagSetting
 */
Placement.prototype['tagSetting'] = undefined;

/**
 * Whether Verification and ActiveView are disabled for in-stream video creatives for this placement. The same setting videoActiveViewOptOut exists on the site level -- the opt out occurs if either of these settings are true. These settings are distinct from DirectorySites.settings.activeViewOptOut or Sites.siteSettings.activeViewOptOut which only apply to display ads. However, Accounts.activeViewOptOut opts out both video traffic, as well as display ads, from Verification and ActiveView.
 * @member {Boolean} videoActiveViewOptOut
 */
Placement.prototype['videoActiveViewOptOut'] = undefined;

/**
 * @member {module:model/VideoSettings} videoSettings
 */
Placement.prototype['videoSettings'] = undefined;

/**
 * VPAID adapter setting for this placement. Controls which VPAID format the measurement adapter will use for in-stream video creatives assigned to this placement. *Note:* Flash is no longer supported. This field now defaults to HTML5 when the following values are provided: FLASH, BOTH.
 * @member {module:model/Placement.VpaidAdapterChoiceEnum} vpaidAdapterChoice
 */
Placement.prototype['vpaidAdapterChoice'] = undefined;





/**
 * Allowed values for the <code>compatibility</code> property.
 * @enum {String}
 * @readonly
 */
Placement['CompatibilityEnum'] = {

    /**
     * value: "DISPLAY"
     * @const
     */
    "DISPLAY": "DISPLAY",

    /**
     * value: "DISPLAY_INTERSTITIAL"
     * @const
     */
    "DISPLAY_INTERSTITIAL": "DISPLAY_INTERSTITIAL",

    /**
     * value: "APP"
     * @const
     */
    "APP": "APP",

    /**
     * value: "APP_INTERSTITIAL"
     * @const
     */
    "APP_INTERSTITIAL": "APP_INTERSTITIAL",

    /**
     * value: "IN_STREAM_VIDEO"
     * @const
     */
    "IN_STREAM_VIDEO": "IN_STREAM_VIDEO",

    /**
     * value: "IN_STREAM_AUDIO"
     * @const
     */
    "IN_STREAM_AUDIO": "IN_STREAM_AUDIO"
};


/**
 * Allowed values for the <code>paymentSource</code> property.
 * @enum {String}
 * @readonly
 */
Placement['PaymentSourceEnum'] = {

    /**
     * value: "PLACEMENT_AGENCY_PAID"
     * @const
     */
    "AGENCY_PAID": "PLACEMENT_AGENCY_PAID",

    /**
     * value: "PLACEMENT_PUBLISHER_PAID"
     * @const
     */
    "PUBLISHER_PAID": "PLACEMENT_PUBLISHER_PAID"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Placement['StatusEnum'] = {

    /**
     * value: "PENDING_REVIEW"
     * @const
     */
    "PENDING_REVIEW": "PENDING_REVIEW",

    /**
     * value: "PAYMENT_ACCEPTED"
     * @const
     */
    "PAYMENT_ACCEPTED": "PAYMENT_ACCEPTED",

    /**
     * value: "PAYMENT_REJECTED"
     * @const
     */
    "PAYMENT_REJECTED": "PAYMENT_REJECTED",

    /**
     * value: "ACKNOWLEDGE_REJECTION"
     * @const
     */
    "ACKNOWLEDGE_REJECTION": "ACKNOWLEDGE_REJECTION",

    /**
     * value: "ACKNOWLEDGE_ACCEPTANCE"
     * @const
     */
    "ACKNOWLEDGE_ACCEPTANCE": "ACKNOWLEDGE_ACCEPTANCE",

    /**
     * value: "DRAFT"
     * @const
     */
    "DRAFT": "DRAFT"
};


/**
 * Allowed values for the <code>tagFormats</code> property.
 * @enum {String}
 * @readonly
 */
Placement['TagFormatsEnum'] = {

    /**
     * value: "PLACEMENT_TAG_STANDARD"
     * @const
     */
    "STANDARD": "PLACEMENT_TAG_STANDARD",

    /**
     * value: "PLACEMENT_TAG_IFRAME_JAVASCRIPT"
     * @const
     */
    "IFRAME_JAVASCRIPT": "PLACEMENT_TAG_IFRAME_JAVASCRIPT",

    /**
     * value: "PLACEMENT_TAG_IFRAME_ILAYER"
     * @const
     */
    "IFRAME_ILAYER": "PLACEMENT_TAG_IFRAME_ILAYER",

    /**
     * value: "PLACEMENT_TAG_INTERNAL_REDIRECT"
     * @const
     */
    "INTERNAL_REDIRECT": "PLACEMENT_TAG_INTERNAL_REDIRECT",

    /**
     * value: "PLACEMENT_TAG_JAVASCRIPT"
     * @const
     */
    "JAVASCRIPT": "PLACEMENT_TAG_JAVASCRIPT",

    /**
     * value: "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT"
     * @const
     */
    "INTERSTITIAL_IFRAME_JAVASCRIPT": "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT",

    /**
     * value: "PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT"
     * @const
     */
    "INTERSTITIAL_INTERNAL_REDIRECT": "PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT",

    /**
     * value: "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT"
     * @const
     */
    "INTERSTITIAL_JAVASCRIPT": "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT",

    /**
     * value: "PLACEMENT_TAG_CLICK_COMMANDS"
     * @const
     */
    "CLICK_COMMANDS": "PLACEMENT_TAG_CLICK_COMMANDS",

    /**
     * value: "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH"
     * @const
     */
    "INSTREAM_VIDEO_PREFETCH": "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH",

    /**
     * value: "PLACEMENT_TAG_TRACKING"
     * @const
     */
    "TRACKING": "PLACEMENT_TAG_TRACKING",

    /**
     * value: "PLACEMENT_TAG_TRACKING_IFRAME"
     * @const
     */
    "TRACKING_IFRAME": "PLACEMENT_TAG_TRACKING_IFRAME",

    /**
     * value: "PLACEMENT_TAG_TRACKING_JAVASCRIPT"
     * @const
     */
    "TRACKING_JAVASCRIPT": "PLACEMENT_TAG_TRACKING_JAVASCRIPT",

    /**
     * value: "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3"
     * @const
     */
    "INSTREAM_VIDEO_PREFETCH_VAST_3": "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3",

    /**
     * value: "PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY"
     * @const
     */
    "IFRAME_JAVASCRIPT_LEGACY": "PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY",

    /**
     * value: "PLACEMENT_TAG_JAVASCRIPT_LEGACY"
     * @const
     */
    "JAVASCRIPT_LEGACY": "PLACEMENT_TAG_JAVASCRIPT_LEGACY",

    /**
     * value: "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY"
     * @const
     */
    "INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY": "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY",

    /**
     * value: "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY"
     * @const
     */
    "INTERSTITIAL_JAVASCRIPT_LEGACY": "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY",

    /**
     * value: "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4"
     * @const
     */
    "INSTREAM_VIDEO_PREFETCH_VAST_4": "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4",

    /**
     * value: "PLACEMENT_TAG_TRACKING_THIRD_PARTY_MEASUREMENT"
     * @const
     */
    "TRACKING_THIRD_PARTY_MEASUREMENT": "PLACEMENT_TAG_TRACKING_THIRD_PARTY_MEASUREMENT"
};


/**
 * Allowed values for the <code>vpaidAdapterChoice</code> property.
 * @enum {String}
 * @readonly
 */
Placement['VpaidAdapterChoiceEnum'] = {

    /**
     * value: "DEFAULT"
     * @const
     */
    "DEFAULT": "DEFAULT",

    /**
     * value: "FLASH"
     * @const
     */
    "FLASH": "FLASH",

    /**
     * value: "HTML5"
     * @const
     */
    "HTML5": "HTML5",

    /**
     * value: "BOTH"
     * @const
     */
    "BOTH": "BOTH"
};



export default Placement;

