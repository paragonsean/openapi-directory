/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DimensionValue from './DimensionValue';
import DirectorySiteSettings from './DirectorySiteSettings';

/**
 * The DirectorySite model module.
 * @module model/DirectorySite
 * @version v3.4
 */
class DirectorySite {
    /**
     * Constructs a new <code>DirectorySite</code>.
     * DirectorySites contains properties of a website from the Site Directory. Sites need to be added to an account via the Sites resource before they can be assigned to a placement.
     * @alias module:model/DirectorySite
     */
    constructor() { 
        
        DirectorySite.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DirectorySite</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DirectorySite} obj Optional instance to populate.
     * @return {module:model/DirectorySite} The populated <code>DirectorySite</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DirectorySite();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('idDimensionValue')) {
                obj['idDimensionValue'] = DimensionValue.constructFromObject(data['idDimensionValue']);
            }
            if (data.hasOwnProperty('inpageTagFormats')) {
                obj['inpageTagFormats'] = ApiClient.convertToType(data['inpageTagFormats'], ['String']);
            }
            if (data.hasOwnProperty('interstitialTagFormats')) {
                obj['interstitialTagFormats'] = ApiClient.convertToType(data['interstitialTagFormats'], ['String']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('settings')) {
                obj['settings'] = DirectorySiteSettings.constructFromObject(data['settings']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DirectorySite</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DirectorySite</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `idDimensionValue`
        if (data['idDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['idDimensionValue']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['inpageTagFormats'])) {
            throw new Error("Expected the field `inpageTagFormats` to be an array in the JSON data but got " + data['inpageTagFormats']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['interstitialTagFormats'])) {
            throw new Error("Expected the field `interstitialTagFormats` to be an array in the JSON data but got " + data['interstitialTagFormats']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `settings`
        if (data['settings']) { // data not null
          DirectorySiteSettings.validateJSON(data['settings']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * ID of this directory site. This is a read-only, auto-generated field.
 * @member {String} id
 */
DirectorySite.prototype['id'] = undefined;

/**
 * @member {module:model/DimensionValue} idDimensionValue
 */
DirectorySite.prototype['idDimensionValue'] = undefined;

/**
 * Tag types for regular placements. Acceptable values are: - \"STANDARD\" - \"IFRAME_JAVASCRIPT_INPAGE\" - \"INTERNAL_REDIRECT_INPAGE\" - \"JAVASCRIPT_INPAGE\" 
 * @member {Array.<module:model/DirectorySite.InpageTagFormatsEnum>} inpageTagFormats
 */
DirectorySite.prototype['inpageTagFormats'] = undefined;

/**
 * Tag types for interstitial placements. Acceptable values are: - \"IFRAME_JAVASCRIPT_INTERSTITIAL\" - \"INTERNAL_REDIRECT_INTERSTITIAL\" - \"JAVASCRIPT_INTERSTITIAL\" 
 * @member {Array.<module:model/DirectorySite.InterstitialTagFormatsEnum>} interstitialTagFormats
 */
DirectorySite.prototype['interstitialTagFormats'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#directorySite\".
 * @member {String} kind
 */
DirectorySite.prototype['kind'] = undefined;

/**
 * Name of this directory site.
 * @member {String} name
 */
DirectorySite.prototype['name'] = undefined;

/**
 * @member {module:model/DirectorySiteSettings} settings
 */
DirectorySite.prototype['settings'] = undefined;

/**
 * URL of this directory site.
 * @member {String} url
 */
DirectorySite.prototype['url'] = undefined;





/**
 * Allowed values for the <code>inpageTagFormats</code> property.
 * @enum {String}
 * @readonly
 */
DirectorySite['InpageTagFormatsEnum'] = {

    /**
     * value: "STANDARD"
     * @const
     */
    "STANDARD": "STANDARD",

    /**
     * value: "IFRAME_JAVASCRIPT_INPAGE"
     * @const
     */
    "IFRAME_JAVASCRIPT_INPAGE": "IFRAME_JAVASCRIPT_INPAGE",

    /**
     * value: "INTERNAL_REDIRECT_INPAGE"
     * @const
     */
    "INTERNAL_REDIRECT_INPAGE": "INTERNAL_REDIRECT_INPAGE",

    /**
     * value: "JAVASCRIPT_INPAGE"
     * @const
     */
    "JAVASCRIPT_INPAGE": "JAVASCRIPT_INPAGE"
};


/**
 * Allowed values for the <code>interstitialTagFormats</code> property.
 * @enum {String}
 * @readonly
 */
DirectorySite['InterstitialTagFormatsEnum'] = {

    /**
     * value: "IFRAME_JAVASCRIPT_INTERSTITIAL"
     * @const
     */
    "IFRAME_JAVASCRIPT_INTERSTITIAL": "IFRAME_JAVASCRIPT_INTERSTITIAL",

    /**
     * value: "INTERNAL_REDIRECT_INTERSTITIAL"
     * @const
     */
    "INTERNAL_REDIRECT_INTERSTITIAL": "INTERNAL_REDIRECT_INTERSTITIAL",

    /**
     * value: "JAVASCRIPT_INTERSTITIAL"
     * @const
     */
    "JAVASCRIPT_INTERSTITIAL": "JAVASCRIPT_INTERSTITIAL"
};



export default DirectorySite;

