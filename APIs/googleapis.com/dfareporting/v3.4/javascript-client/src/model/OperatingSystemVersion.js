/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OperatingSystem from './OperatingSystem';

/**
 * The OperatingSystemVersion model module.
 * @module model/OperatingSystemVersion
 * @version v3.4
 */
class OperatingSystemVersion {
    /**
     * Constructs a new <code>OperatingSystemVersion</code>.
     * Contains information about a particular version of an operating system that can be targeted by ads.
     * @alias module:model/OperatingSystemVersion
     */
    constructor() { 
        
        OperatingSystemVersion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperatingSystemVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperatingSystemVersion} obj Optional instance to populate.
     * @return {module:model/OperatingSystemVersion} The populated <code>OperatingSystemVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperatingSystemVersion();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('majorVersion')) {
                obj['majorVersion'] = ApiClient.convertToType(data['majorVersion'], 'String');
            }
            if (data.hasOwnProperty('minorVersion')) {
                obj['minorVersion'] = ApiClient.convertToType(data['minorVersion'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('operatingSystem')) {
                obj['operatingSystem'] = OperatingSystem.constructFromObject(data['operatingSystem']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperatingSystemVersion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperatingSystemVersion</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['majorVersion'] && !(typeof data['majorVersion'] === 'string' || data['majorVersion'] instanceof String)) {
            throw new Error("Expected the field `majorVersion` to be a primitive type in the JSON string but got " + data['majorVersion']);
        }
        // ensure the json data is a string
        if (data['minorVersion'] && !(typeof data['minorVersion'] === 'string' || data['minorVersion'] instanceof String)) {
            throw new Error("Expected the field `minorVersion` to be a primitive type in the JSON string but got " + data['minorVersion']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `operatingSystem`
        if (data['operatingSystem']) { // data not null
          OperatingSystem.validateJSON(data['operatingSystem']);
        }

        return true;
    }


}



/**
 * ID of this operating system version.
 * @member {String} id
 */
OperatingSystemVersion.prototype['id'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystemVersion\".
 * @member {String} kind
 */
OperatingSystemVersion.prototype['kind'] = undefined;

/**
 * Major version (leftmost number) of this operating system version.
 * @member {String} majorVersion
 */
OperatingSystemVersion.prototype['majorVersion'] = undefined;

/**
 * Minor version (number after the first dot) of this operating system version.
 * @member {String} minorVersion
 */
OperatingSystemVersion.prototype['minorVersion'] = undefined;

/**
 * Name of this operating system version.
 * @member {String} name
 */
OperatingSystemVersion.prototype['name'] = undefined;

/**
 * @member {module:model/OperatingSystem} operatingSystem
 */
OperatingSystemVersion.prototype['operatingSystem'] = undefined;






export default OperatingSystemVersion;

