/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObaIcon from './ObaIcon';
import SiteCompanionSetting from './SiteCompanionSetting';
import SiteSkippableSetting from './SiteSkippableSetting';
import SiteTranscodeSetting from './SiteTranscodeSetting';

/**
 * The SiteVideoSettings model module.
 * @module model/SiteVideoSettings
 * @version v3.4
 */
class SiteVideoSettings {
    /**
     * Constructs a new <code>SiteVideoSettings</code>.
     * Video Settings
     * @alias module:model/SiteVideoSettings
     */
    constructor() { 
        
        SiteVideoSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SiteVideoSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SiteVideoSettings} obj Optional instance to populate.
     * @return {module:model/SiteVideoSettings} The populated <code>SiteVideoSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SiteVideoSettings();

            if (data.hasOwnProperty('companionSettings')) {
                obj['companionSettings'] = SiteCompanionSetting.constructFromObject(data['companionSettings']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('obaEnabled')) {
                obj['obaEnabled'] = ApiClient.convertToType(data['obaEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('obaSettings')) {
                obj['obaSettings'] = ObaIcon.constructFromObject(data['obaSettings']);
            }
            if (data.hasOwnProperty('orientation')) {
                obj['orientation'] = ApiClient.convertToType(data['orientation'], 'String');
            }
            if (data.hasOwnProperty('skippableSettings')) {
                obj['skippableSettings'] = SiteSkippableSetting.constructFromObject(data['skippableSettings']);
            }
            if (data.hasOwnProperty('transcodeSettings')) {
                obj['transcodeSettings'] = SiteTranscodeSetting.constructFromObject(data['transcodeSettings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SiteVideoSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SiteVideoSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `companionSettings`
        if (data['companionSettings']) { // data not null
          SiteCompanionSetting.validateJSON(data['companionSettings']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `obaSettings`
        if (data['obaSettings']) { // data not null
          ObaIcon.validateJSON(data['obaSettings']);
        }
        // ensure the json data is a string
        if (data['orientation'] && !(typeof data['orientation'] === 'string' || data['orientation'] instanceof String)) {
            throw new Error("Expected the field `orientation` to be a primitive type in the JSON string but got " + data['orientation']);
        }
        // validate the optional field `skippableSettings`
        if (data['skippableSettings']) { // data not null
          SiteSkippableSetting.validateJSON(data['skippableSettings']);
        }
        // validate the optional field `transcodeSettings`
        if (data['transcodeSettings']) { // data not null
          SiteTranscodeSetting.validateJSON(data['transcodeSettings']);
        }

        return true;
    }


}



/**
 * @member {module:model/SiteCompanionSetting} companionSettings
 */
SiteVideoSettings.prototype['companionSettings'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#siteVideoSettings\".
 * @member {String} kind
 */
SiteVideoSettings.prototype['kind'] = undefined;

/**
 * Whether OBA icons are enabled for this placement.
 * @member {Boolean} obaEnabled
 */
SiteVideoSettings.prototype['obaEnabled'] = undefined;

/**
 * @member {module:model/ObaIcon} obaSettings
 */
SiteVideoSettings.prototype['obaSettings'] = undefined;

/**
 * Orientation of a site template used for video. This will act as default for new placements created under this site.
 * @member {module:model/SiteVideoSettings.OrientationEnum} orientation
 */
SiteVideoSettings.prototype['orientation'] = undefined;

/**
 * @member {module:model/SiteSkippableSetting} skippableSettings
 */
SiteVideoSettings.prototype['skippableSettings'] = undefined;

/**
 * @member {module:model/SiteTranscodeSetting} transcodeSettings
 */
SiteVideoSettings.prototype['transcodeSettings'] = undefined;





/**
 * Allowed values for the <code>orientation</code> property.
 * @enum {String}
 * @readonly
 */
SiteVideoSettings['OrientationEnum'] = {

    /**
     * value: "ANY"
     * @const
     */
    "ANY": "ANY",

    /**
     * value: "LANDSCAPE"
     * @const
     */
    "LANDSCAPE": "LANDSCAPE",

    /**
     * value: "PORTRAIT"
     * @const
     */
    "PORTRAIT": "PORTRAIT"
};



export default SiteVideoSettings;

