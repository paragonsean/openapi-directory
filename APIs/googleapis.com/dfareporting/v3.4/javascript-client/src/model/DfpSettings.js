/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DfpSettings model module.
 * @module model/DfpSettings
 * @version v3.4
 */
class DfpSettings {
    /**
     * Constructs a new <code>DfpSettings</code>.
     * Google Ad Manager Settings
     * @alias module:model/DfpSettings
     */
    constructor() { 
        
        DfpSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DfpSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DfpSettings} obj Optional instance to populate.
     * @return {module:model/DfpSettings} The populated <code>DfpSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DfpSettings();

            if (data.hasOwnProperty('dfpNetworkCode')) {
                obj['dfpNetworkCode'] = ApiClient.convertToType(data['dfpNetworkCode'], 'String');
            }
            if (data.hasOwnProperty('dfpNetworkName')) {
                obj['dfpNetworkName'] = ApiClient.convertToType(data['dfpNetworkName'], 'String');
            }
            if (data.hasOwnProperty('programmaticPlacementAccepted')) {
                obj['programmaticPlacementAccepted'] = ApiClient.convertToType(data['programmaticPlacementAccepted'], 'Boolean');
            }
            if (data.hasOwnProperty('pubPaidPlacementAccepted')) {
                obj['pubPaidPlacementAccepted'] = ApiClient.convertToType(data['pubPaidPlacementAccepted'], 'Boolean');
            }
            if (data.hasOwnProperty('publisherPortalOnly')) {
                obj['publisherPortalOnly'] = ApiClient.convertToType(data['publisherPortalOnly'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DfpSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DfpSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dfpNetworkCode'] && !(typeof data['dfpNetworkCode'] === 'string' || data['dfpNetworkCode'] instanceof String)) {
            throw new Error("Expected the field `dfpNetworkCode` to be a primitive type in the JSON string but got " + data['dfpNetworkCode']);
        }
        // ensure the json data is a string
        if (data['dfpNetworkName'] && !(typeof data['dfpNetworkName'] === 'string' || data['dfpNetworkName'] instanceof String)) {
            throw new Error("Expected the field `dfpNetworkName` to be a primitive type in the JSON string but got " + data['dfpNetworkName']);
        }

        return true;
    }


}



/**
 * Ad Manager network code for this directory site.
 * @member {String} dfpNetworkCode
 */
DfpSettings.prototype['dfpNetworkCode'] = undefined;

/**
 * Ad Manager network name for this directory site.
 * @member {String} dfpNetworkName
 */
DfpSettings.prototype['dfpNetworkName'] = undefined;

/**
 * Whether this directory site accepts programmatic placements.
 * @member {Boolean} programmaticPlacementAccepted
 */
DfpSettings.prototype['programmaticPlacementAccepted'] = undefined;

/**
 * Whether this directory site accepts publisher-paid tags.
 * @member {Boolean} pubPaidPlacementAccepted
 */
DfpSettings.prototype['pubPaidPlacementAccepted'] = undefined;

/**
 * Whether this directory site is available only via Publisher Portal.
 * @member {Boolean} publisherPortalOnly
 */
DfpSettings.prototype['publisherPortalOnly'] = undefined;






export default DfpSettings;

