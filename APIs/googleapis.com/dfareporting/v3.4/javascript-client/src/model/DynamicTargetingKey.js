/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DynamicTargetingKey model module.
 * @module model/DynamicTargetingKey
 * @version v3.4
 */
class DynamicTargetingKey {
    /**
     * Constructs a new <code>DynamicTargetingKey</code>.
     * Contains properties of a dynamic targeting key. Dynamic targeting keys are unique, user-friendly labels, created at the advertiser level in DCM, that can be assigned to ads, creatives, and placements and used for targeting with Studio dynamic creatives. Use these labels instead of numeric Campaign Manager IDs (such as placement IDs) to save time and avoid errors in your dynamic feeds.
     * @alias module:model/DynamicTargetingKey
     */
    constructor() { 
        
        DynamicTargetingKey.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DynamicTargetingKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DynamicTargetingKey} obj Optional instance to populate.
     * @return {module:model/DynamicTargetingKey} The populated <code>DynamicTargetingKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DynamicTargetingKey();

            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('objectId')) {
                obj['objectId'] = ApiClient.convertToType(data['objectId'], 'String');
            }
            if (data.hasOwnProperty('objectType')) {
                obj['objectType'] = ApiClient.convertToType(data['objectType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DynamicTargetingKey</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DynamicTargetingKey</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['objectId'] && !(typeof data['objectId'] === 'string' || data['objectId'] instanceof String)) {
            throw new Error("Expected the field `objectId` to be a primitive type in the JSON string but got " + data['objectId']);
        }
        // ensure the json data is a string
        if (data['objectType'] && !(typeof data['objectType'] === 'string' || data['objectType'] instanceof String)) {
            throw new Error("Expected the field `objectType` to be a primitive type in the JSON string but got " + data['objectType']);
        }

        return true;
    }


}



/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#dynamicTargetingKey\".
 * @member {String} kind
 */
DynamicTargetingKey.prototype['kind'] = undefined;

/**
 * Name of this dynamic targeting key. This is a required field. Must be less than 256 characters long and cannot contain commas. All characters are converted to lowercase.
 * @member {String} name
 */
DynamicTargetingKey.prototype['name'] = undefined;

/**
 * ID of the object of this dynamic targeting key. This is a required field.
 * @member {String} objectId
 */
DynamicTargetingKey.prototype['objectId'] = undefined;

/**
 * Type of the object of this dynamic targeting key. This is a required field.
 * @member {module:model/DynamicTargetingKey.ObjectTypeEnum} objectType
 */
DynamicTargetingKey.prototype['objectType'] = undefined;





/**
 * Allowed values for the <code>objectType</code> property.
 * @enum {String}
 * @readonly
 */
DynamicTargetingKey['ObjectTypeEnum'] = {

    /**
     * value: "OBJECT_ADVERTISER"
     * @const
     */
    "ADVERTISER": "OBJECT_ADVERTISER",

    /**
     * value: "OBJECT_AD"
     * @const
     */
    "AD": "OBJECT_AD",

    /**
     * value: "OBJECT_CREATIVE"
     * @const
     */
    "CREATIVE": "OBJECT_CREATIVE",

    /**
     * value: "OBJECT_PLACEMENT"
     * @const
     */
    "PLACEMENT": "OBJECT_PLACEMENT"
};



export default DynamicTargetingKey;

