/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DimensionValue from './DimensionValue';
import SiteContact from './SiteContact';
import SiteSettings from './SiteSettings';
import SiteVideoSettings from './SiteVideoSettings';

/**
 * The Site model module.
 * @module model/Site
 * @version v3.4
 */
class Site {
    /**
     * Constructs a new <code>Site</code>.
     * Contains properties of a site.
     * @alias module:model/Site
     */
    constructor() { 
        
        Site.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Site</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Site} obj Optional instance to populate.
     * @return {module:model/Site} The populated <code>Site</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Site();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('approved')) {
                obj['approved'] = ApiClient.convertToType(data['approved'], 'Boolean');
            }
            if (data.hasOwnProperty('directorySiteId')) {
                obj['directorySiteId'] = ApiClient.convertToType(data['directorySiteId'], 'String');
            }
            if (data.hasOwnProperty('directorySiteIdDimensionValue')) {
                obj['directorySiteIdDimensionValue'] = DimensionValue.constructFromObject(data['directorySiteIdDimensionValue']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('idDimensionValue')) {
                obj['idDimensionValue'] = DimensionValue.constructFromObject(data['idDimensionValue']);
            }
            if (data.hasOwnProperty('keyName')) {
                obj['keyName'] = ApiClient.convertToType(data['keyName'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('siteContacts')) {
                obj['siteContacts'] = ApiClient.convertToType(data['siteContacts'], [SiteContact]);
            }
            if (data.hasOwnProperty('siteSettings')) {
                obj['siteSettings'] = SiteSettings.constructFromObject(data['siteSettings']);
            }
            if (data.hasOwnProperty('subaccountId')) {
                obj['subaccountId'] = ApiClient.convertToType(data['subaccountId'], 'String');
            }
            if (data.hasOwnProperty('videoSettings')) {
                obj['videoSettings'] = SiteVideoSettings.constructFromObject(data['videoSettings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Site</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Site</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['directorySiteId'] && !(typeof data['directorySiteId'] === 'string' || data['directorySiteId'] instanceof String)) {
            throw new Error("Expected the field `directorySiteId` to be a primitive type in the JSON string but got " + data['directorySiteId']);
        }
        // validate the optional field `directorySiteIdDimensionValue`
        if (data['directorySiteIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['directorySiteIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `idDimensionValue`
        if (data['idDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['idDimensionValue']);
        }
        // ensure the json data is a string
        if (data['keyName'] && !(typeof data['keyName'] === 'string' || data['keyName'] instanceof String)) {
            throw new Error("Expected the field `keyName` to be a primitive type in the JSON string but got " + data['keyName']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['siteContacts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['siteContacts'])) {
                throw new Error("Expected the field `siteContacts` to be an array in the JSON data but got " + data['siteContacts']);
            }
            // validate the optional field `siteContacts` (array)
            for (const item of data['siteContacts']) {
                SiteContact.validateJSON(item);
            };
        }
        // validate the optional field `siteSettings`
        if (data['siteSettings']) { // data not null
          SiteSettings.validateJSON(data['siteSettings']);
        }
        // ensure the json data is a string
        if (data['subaccountId'] && !(typeof data['subaccountId'] === 'string' || data['subaccountId'] instanceof String)) {
            throw new Error("Expected the field `subaccountId` to be a primitive type in the JSON string but got " + data['subaccountId']);
        }
        // validate the optional field `videoSettings`
        if (data['videoSettings']) { // data not null
          SiteVideoSettings.validateJSON(data['videoSettings']);
        }

        return true;
    }


}



/**
 * Account ID of this site. This is a read-only field that can be left blank.
 * @member {String} accountId
 */
Site.prototype['accountId'] = undefined;

/**
 * Whether this site is approved.
 * @member {Boolean} approved
 */
Site.prototype['approved'] = undefined;

/**
 * Directory site associated with this site. This is a required field that is read-only after insertion.
 * @member {String} directorySiteId
 */
Site.prototype['directorySiteId'] = undefined;

/**
 * @member {module:model/DimensionValue} directorySiteIdDimensionValue
 */
Site.prototype['directorySiteIdDimensionValue'] = undefined;

/**
 * ID of this site. This is a read-only, auto-generated field.
 * @member {String} id
 */
Site.prototype['id'] = undefined;

/**
 * @member {module:model/DimensionValue} idDimensionValue
 */
Site.prototype['idDimensionValue'] = undefined;

/**
 * Key name of this site. This is a read-only, auto-generated field.
 * @member {String} keyName
 */
Site.prototype['keyName'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#site\".
 * @member {String} kind
 */
Site.prototype['kind'] = undefined;

/**
 * Name of this site.This is a required field. Must be less than 128 characters long. If this site is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this site is a top-level site, and the name must be unique among top-level sites of the same account.
 * @member {String} name
 */
Site.prototype['name'] = undefined;

/**
 * Site contacts.
 * @member {Array.<module:model/SiteContact>} siteContacts
 */
Site.prototype['siteContacts'] = undefined;

/**
 * @member {module:model/SiteSettings} siteSettings
 */
Site.prototype['siteSettings'] = undefined;

/**
 * Subaccount ID of this site. This is a read-only field that can be left blank.
 * @member {String} subaccountId
 */
Site.prototype['subaccountId'] = undefined;

/**
 * @member {module:model/SiteVideoSettings} videoSettings
 */
Site.prototype['videoSettings'] = undefined;






export default Site;

