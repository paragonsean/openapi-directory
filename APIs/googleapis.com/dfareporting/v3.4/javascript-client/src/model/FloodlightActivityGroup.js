/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DimensionValue from './DimensionValue';

/**
 * The FloodlightActivityGroup model module.
 * @module model/FloodlightActivityGroup
 * @version v3.4
 */
class FloodlightActivityGroup {
    /**
     * Constructs a new <code>FloodlightActivityGroup</code>.
     * Contains properties of a Floodlight activity group.
     * @alias module:model/FloodlightActivityGroup
     */
    constructor() { 
        
        FloodlightActivityGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FloodlightActivityGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FloodlightActivityGroup} obj Optional instance to populate.
     * @return {module:model/FloodlightActivityGroup} The populated <code>FloodlightActivityGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FloodlightActivityGroup();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('advertiserId')) {
                obj['advertiserId'] = ApiClient.convertToType(data['advertiserId'], 'String');
            }
            if (data.hasOwnProperty('advertiserIdDimensionValue')) {
                obj['advertiserIdDimensionValue'] = DimensionValue.constructFromObject(data['advertiserIdDimensionValue']);
            }
            if (data.hasOwnProperty('floodlightConfigurationId')) {
                obj['floodlightConfigurationId'] = ApiClient.convertToType(data['floodlightConfigurationId'], 'String');
            }
            if (data.hasOwnProperty('floodlightConfigurationIdDimensionValue')) {
                obj['floodlightConfigurationIdDimensionValue'] = DimensionValue.constructFromObject(data['floodlightConfigurationIdDimensionValue']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('idDimensionValue')) {
                obj['idDimensionValue'] = DimensionValue.constructFromObject(data['idDimensionValue']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('subaccountId')) {
                obj['subaccountId'] = ApiClient.convertToType(data['subaccountId'], 'String');
            }
            if (data.hasOwnProperty('tagString')) {
                obj['tagString'] = ApiClient.convertToType(data['tagString'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FloodlightActivityGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FloodlightActivityGroup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['advertiserId'] && !(typeof data['advertiserId'] === 'string' || data['advertiserId'] instanceof String)) {
            throw new Error("Expected the field `advertiserId` to be a primitive type in the JSON string but got " + data['advertiserId']);
        }
        // validate the optional field `advertiserIdDimensionValue`
        if (data['advertiserIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['advertiserIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['floodlightConfigurationId'] && !(typeof data['floodlightConfigurationId'] === 'string' || data['floodlightConfigurationId'] instanceof String)) {
            throw new Error("Expected the field `floodlightConfigurationId` to be a primitive type in the JSON string but got " + data['floodlightConfigurationId']);
        }
        // validate the optional field `floodlightConfigurationIdDimensionValue`
        if (data['floodlightConfigurationIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['floodlightConfigurationIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `idDimensionValue`
        if (data['idDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['idDimensionValue']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['subaccountId'] && !(typeof data['subaccountId'] === 'string' || data['subaccountId'] instanceof String)) {
            throw new Error("Expected the field `subaccountId` to be a primitive type in the JSON string but got " + data['subaccountId']);
        }
        // ensure the json data is a string
        if (data['tagString'] && !(typeof data['tagString'] === 'string' || data['tagString'] instanceof String)) {
            throw new Error("Expected the field `tagString` to be a primitive type in the JSON string but got " + data['tagString']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Account ID of this floodlight activity group. This is a read-only field that can be left blank.
 * @member {String} accountId
 */
FloodlightActivityGroup.prototype['accountId'] = undefined;

/**
 * Advertiser ID of this floodlight activity group. If this field is left blank, the value will be copied over either from the floodlight configuration's advertiser or from the existing activity group's advertiser.
 * @member {String} advertiserId
 */
FloodlightActivityGroup.prototype['advertiserId'] = undefined;

/**
 * @member {module:model/DimensionValue} advertiserIdDimensionValue
 */
FloodlightActivityGroup.prototype['advertiserIdDimensionValue'] = undefined;

/**
 * Floodlight configuration ID of this floodlight activity group. This is a required field.
 * @member {String} floodlightConfigurationId
 */
FloodlightActivityGroup.prototype['floodlightConfigurationId'] = undefined;

/**
 * @member {module:model/DimensionValue} floodlightConfigurationIdDimensionValue
 */
FloodlightActivityGroup.prototype['floodlightConfigurationIdDimensionValue'] = undefined;

/**
 * ID of this floodlight activity group. This is a read-only, auto-generated field.
 * @member {String} id
 */
FloodlightActivityGroup.prototype['id'] = undefined;

/**
 * @member {module:model/DimensionValue} idDimensionValue
 */
FloodlightActivityGroup.prototype['idDimensionValue'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivityGroup\".
 * @member {String} kind
 */
FloodlightActivityGroup.prototype['kind'] = undefined;

/**
 * Name of this floodlight activity group. This is a required field. Must be less than 65 characters long and cannot contain quotes.
 * @member {String} name
 */
FloodlightActivityGroup.prototype['name'] = undefined;

/**
 * Subaccount ID of this floodlight activity group. This is a read-only field that can be left blank.
 * @member {String} subaccountId
 */
FloodlightActivityGroup.prototype['subaccountId'] = undefined;

/**
 * Value of the type= parameter in the floodlight tag, which the ad servers use to identify the activity group that the activity belongs to. This is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8 characters long, with valid characters being a-z0-9[ _ ]. This tag string must also be unique among activity groups of the same floodlight configuration. This field is read-only after insertion.
 * @member {String} tagString
 */
FloodlightActivityGroup.prototype['tagString'] = undefined;

/**
 * Type of the floodlight activity group. This is a required field that is read-only after insertion.
 * @member {module:model/FloodlightActivityGroup.TypeEnum} type
 */
FloodlightActivityGroup.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
FloodlightActivityGroup['TypeEnum'] = {

    /**
     * value: "COUNTER"
     * @const
     */
    "COUNTER": "COUNTER",

    /**
     * value: "SALE"
     * @const
     */
    "SALE": "SALE"
};



export default FloodlightActivityGroup;

