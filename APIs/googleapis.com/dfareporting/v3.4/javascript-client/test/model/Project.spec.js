/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CampaignManager360Api);
  }
}(this, function(expect, CampaignManager360Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CampaignManager360Api.Project();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Project', function() {
    it('should create an instance of Project', function() {
      // uncomment below and update the code to test Project
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be.a(CampaignManager360Api.Project);
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property advertiserId (base name: "advertiserId")', function() {
      // uncomment below and update the code to test the property advertiserId
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property audienceAgeGroup (base name: "audienceAgeGroup")', function() {
      // uncomment below and update the code to test the property audienceAgeGroup
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property audienceGender (base name: "audienceGender")', function() {
      // uncomment below and update the code to test the property audienceGender
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property budget (base name: "budget")', function() {
      // uncomment below and update the code to test the property budget
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property clientBillingCode (base name: "clientBillingCode")', function() {
      // uncomment below and update the code to test the property clientBillingCode
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property clientName (base name: "clientName")', function() {
      // uncomment below and update the code to test the property clientName
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "endDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedInfo (base name: "lastModifiedInfo")', function() {
      // uncomment below and update the code to test the property lastModifiedInfo
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property overview (base name: "overview")', function() {
      // uncomment below and update the code to test the property overview
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property subaccountId (base name: "subaccountId")', function() {
      // uncomment below and update the code to test the property subaccountId
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property targetClicks (base name: "targetClicks")', function() {
      // uncomment below and update the code to test the property targetClicks
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property targetConversions (base name: "targetConversions")', function() {
      // uncomment below and update the code to test the property targetConversions
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property targetCpaNanos (base name: "targetCpaNanos")', function() {
      // uncomment below and update the code to test the property targetCpaNanos
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property targetCpcNanos (base name: "targetCpcNanos")', function() {
      // uncomment below and update the code to test the property targetCpcNanos
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property targetCpmActiveViewNanos (base name: "targetCpmActiveViewNanos")', function() {
      // uncomment below and update the code to test the property targetCpmActiveViewNanos
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property targetCpmNanos (base name: "targetCpmNanos")', function() {
      // uncomment below and update the code to test the property targetCpmNanos
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

    it('should have the property targetImpressions (base name: "targetImpressions")', function() {
      // uncomment below and update the code to test the property targetImpressions
      //var instance = new CampaignManager360Api.Project();
      //expect(instance).to.be();
    });

  });

}));
