# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_value import DimensionValue
from openapi_server.models.list_population_rule import ListPopulationRule
from openapi_server import util


class RemarketingList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, active: bool=None, advertiser_id: str=None, advertiser_id_dimension_value: DimensionValue=None, description: str=None, id: str=None, kind: str=None, life_span: str=None, list_population_rule: ListPopulationRule=None, list_size: str=None, list_source: str=None, name: str=None, subaccount_id: str=None):
        """RemarketingList - a model defined in OpenAPI

        :param account_id: The account_id of this RemarketingList.
        :param active: The active of this RemarketingList.
        :param advertiser_id: The advertiser_id of this RemarketingList.
        :param advertiser_id_dimension_value: The advertiser_id_dimension_value of this RemarketingList.
        :param description: The description of this RemarketingList.
        :param id: The id of this RemarketingList.
        :param kind: The kind of this RemarketingList.
        :param life_span: The life_span of this RemarketingList.
        :param list_population_rule: The list_population_rule of this RemarketingList.
        :param list_size: The list_size of this RemarketingList.
        :param list_source: The list_source of this RemarketingList.
        :param name: The name of this RemarketingList.
        :param subaccount_id: The subaccount_id of this RemarketingList.
        """
        self.openapi_types = {
            'account_id': str,
            'active': bool,
            'advertiser_id': str,
            'advertiser_id_dimension_value': DimensionValue,
            'description': str,
            'id': str,
            'kind': str,
            'life_span': str,
            'list_population_rule': ListPopulationRule,
            'list_size': str,
            'list_source': str,
            'name': str,
            'subaccount_id': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'active': 'active',
            'advertiser_id': 'advertiserId',
            'advertiser_id_dimension_value': 'advertiserIdDimensionValue',
            'description': 'description',
            'id': 'id',
            'kind': 'kind',
            'life_span': 'lifeSpan',
            'list_population_rule': 'listPopulationRule',
            'list_size': 'listSize',
            'list_source': 'listSource',
            'name': 'name',
            'subaccount_id': 'subaccountId'
        }

        self._account_id = account_id
        self._active = active
        self._advertiser_id = advertiser_id
        self._advertiser_id_dimension_value = advertiser_id_dimension_value
        self._description = description
        self._id = id
        self._kind = kind
        self._life_span = life_span
        self._list_population_rule = list_population_rule
        self._list_size = list_size
        self._list_source = list_source
        self._name = name
        self._subaccount_id = subaccount_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemarketingList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemarketingList of this RemarketingList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this RemarketingList.

        Account ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.

        :return: The account_id of this RemarketingList.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this RemarketingList.

        Account ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.

        :param account_id: The account_id of this RemarketingList.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def active(self):
        """Gets the active of this RemarketingList.

        Whether this remarketing list is active.

        :return: The active of this RemarketingList.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this RemarketingList.

        Whether this remarketing list is active.

        :param active: The active of this RemarketingList.
        :type active: bool
        """

        self._active = active

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this RemarketingList.

        Dimension value for the advertiser ID that owns this remarketing list. This is a required field.

        :return: The advertiser_id of this RemarketingList.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this RemarketingList.

        Dimension value for the advertiser ID that owns this remarketing list. This is a required field.

        :param advertiser_id: The advertiser_id of this RemarketingList.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def advertiser_id_dimension_value(self):
        """Gets the advertiser_id_dimension_value of this RemarketingList.


        :return: The advertiser_id_dimension_value of this RemarketingList.
        :rtype: DimensionValue
        """
        return self._advertiser_id_dimension_value

    @advertiser_id_dimension_value.setter
    def advertiser_id_dimension_value(self, advertiser_id_dimension_value):
        """Sets the advertiser_id_dimension_value of this RemarketingList.


        :param advertiser_id_dimension_value: The advertiser_id_dimension_value of this RemarketingList.
        :type advertiser_id_dimension_value: DimensionValue
        """

        self._advertiser_id_dimension_value = advertiser_id_dimension_value

    @property
    def description(self):
        """Gets the description of this RemarketingList.

        Remarketing list description.

        :return: The description of this RemarketingList.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RemarketingList.

        Remarketing list description.

        :param description: The description of this RemarketingList.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this RemarketingList.

        Remarketing list ID. This is a read-only, auto-generated field.

        :return: The id of this RemarketingList.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RemarketingList.

        Remarketing list ID. This is a read-only, auto-generated field.

        :param id: The id of this RemarketingList.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this RemarketingList.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#remarketingList\".

        :return: The kind of this RemarketingList.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this RemarketingList.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#remarketingList\".

        :param kind: The kind of this RemarketingList.
        :type kind: str
        """

        self._kind = kind

    @property
    def life_span(self):
        """Gets the life_span of this RemarketingList.

        Number of days that a user should remain in the remarketing list without an impression. Acceptable values are 1 to 540, inclusive.

        :return: The life_span of this RemarketingList.
        :rtype: str
        """
        return self._life_span

    @life_span.setter
    def life_span(self, life_span):
        """Sets the life_span of this RemarketingList.

        Number of days that a user should remain in the remarketing list without an impression. Acceptable values are 1 to 540, inclusive.

        :param life_span: The life_span of this RemarketingList.
        :type life_span: str
        """

        self._life_span = life_span

    @property
    def list_population_rule(self):
        """Gets the list_population_rule of this RemarketingList.


        :return: The list_population_rule of this RemarketingList.
        :rtype: ListPopulationRule
        """
        return self._list_population_rule

    @list_population_rule.setter
    def list_population_rule(self, list_population_rule):
        """Sets the list_population_rule of this RemarketingList.


        :param list_population_rule: The list_population_rule of this RemarketingList.
        :type list_population_rule: ListPopulationRule
        """

        self._list_population_rule = list_population_rule

    @property
    def list_size(self):
        """Gets the list_size of this RemarketingList.

        Number of users currently in the list. This is a read-only field.

        :return: The list_size of this RemarketingList.
        :rtype: str
        """
        return self._list_size

    @list_size.setter
    def list_size(self, list_size):
        """Sets the list_size of this RemarketingList.

        Number of users currently in the list. This is a read-only field.

        :param list_size: The list_size of this RemarketingList.
        :type list_size: str
        """

        self._list_size = list_size

    @property
    def list_source(self):
        """Gets the list_source of this RemarketingList.

        Product from which this remarketing list was originated.

        :return: The list_source of this RemarketingList.
        :rtype: str
        """
        return self._list_source

    @list_source.setter
    def list_source(self, list_source):
        """Sets the list_source of this RemarketingList.

        Product from which this remarketing list was originated.

        :param list_source: The list_source of this RemarketingList.
        :type list_source: str
        """
        allowed_values = ["REMARKETING_LIST_SOURCE_OTHER", "REMARKETING_LIST_SOURCE_ADX", "REMARKETING_LIST_SOURCE_DFP", "REMARKETING_LIST_SOURCE_XFP", "REMARKETING_LIST_SOURCE_DFA", "REMARKETING_LIST_SOURCE_GA", "REMARKETING_LIST_SOURCE_YOUTUBE", "REMARKETING_LIST_SOURCE_DBM", "REMARKETING_LIST_SOURCE_GPLUS", "REMARKETING_LIST_SOURCE_DMP", "REMARKETING_LIST_SOURCE_PLAY_STORE"]  # noqa: E501
        if list_source not in allowed_values:
            raise ValueError(
                "Invalid value for `list_source` ({0}), must be one of {1}"
                .format(list_source, allowed_values)
            )

        self._list_source = list_source

    @property
    def name(self):
        """Gets the name of this RemarketingList.

        Name of the remarketing list. This is a required field. Must be no greater than 128 characters long.

        :return: The name of this RemarketingList.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RemarketingList.

        Name of the remarketing list. This is a required field. Must be no greater than 128 characters long.

        :param name: The name of this RemarketingList.
        :type name: str
        """

        self._name = name

    @property
    def subaccount_id(self):
        """Gets the subaccount_id of this RemarketingList.

        Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.

        :return: The subaccount_id of this RemarketingList.
        :rtype: str
        """
        return self._subaccount_id

    @subaccount_id.setter
    def subaccount_id(self, subaccount_id):
        """Sets the subaccount_id of this RemarketingList.

        Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.

        :param subaccount_id: The subaccount_id of this RemarketingList.
        :type subaccount_id: str
        """

        self._subaccount_id = subaccount_id
