# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mobile_app import MobileApp
from openapi_server import util


class DeepLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_url: str=None, fallback_url: str=None, kind: str=None, mobile_app: MobileApp=None, remarketing_list_ids: List[str]=None):
        """DeepLink - a model defined in OpenAPI

        :param app_url: The app_url of this DeepLink.
        :param fallback_url: The fallback_url of this DeepLink.
        :param kind: The kind of this DeepLink.
        :param mobile_app: The mobile_app of this DeepLink.
        :param remarketing_list_ids: The remarketing_list_ids of this DeepLink.
        """
        self.openapi_types = {
            'app_url': str,
            'fallback_url': str,
            'kind': str,
            'mobile_app': MobileApp,
            'remarketing_list_ids': List[str]
        }

        self.attribute_map = {
            'app_url': 'appUrl',
            'fallback_url': 'fallbackUrl',
            'kind': 'kind',
            'mobile_app': 'mobileApp',
            'remarketing_list_ids': 'remarketingListIds'
        }

        self._app_url = app_url
        self._fallback_url = fallback_url
        self._kind = kind
        self._mobile_app = mobile_app
        self._remarketing_list_ids = remarketing_list_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeepLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeepLink of this DeepLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_url(self):
        """Gets the app_url of this DeepLink.

        The URL of the mobile app being linked to.

        :return: The app_url of this DeepLink.
        :rtype: str
        """
        return self._app_url

    @app_url.setter
    def app_url(self, app_url):
        """Sets the app_url of this DeepLink.

        The URL of the mobile app being linked to.

        :param app_url: The app_url of this DeepLink.
        :type app_url: str
        """

        self._app_url = app_url

    @property
    def fallback_url(self):
        """Gets the fallback_url of this DeepLink.

        The fallback URL. This URL will be served to users who do not have the mobile app installed.

        :return: The fallback_url of this DeepLink.
        :rtype: str
        """
        return self._fallback_url

    @fallback_url.setter
    def fallback_url(self, fallback_url):
        """Sets the fallback_url of this DeepLink.

        The fallback URL. This URL will be served to users who do not have the mobile app installed.

        :param fallback_url: The fallback_url of this DeepLink.
        :type fallback_url: str
        """

        self._fallback_url = fallback_url

    @property
    def kind(self):
        """Gets the kind of this DeepLink.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#deepLink\".

        :return: The kind of this DeepLink.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this DeepLink.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#deepLink\".

        :param kind: The kind of this DeepLink.
        :type kind: str
        """

        self._kind = kind

    @property
    def mobile_app(self):
        """Gets the mobile_app of this DeepLink.


        :return: The mobile_app of this DeepLink.
        :rtype: MobileApp
        """
        return self._mobile_app

    @mobile_app.setter
    def mobile_app(self, mobile_app):
        """Sets the mobile_app of this DeepLink.


        :param mobile_app: The mobile_app of this DeepLink.
        :type mobile_app: MobileApp
        """

        self._mobile_app = mobile_app

    @property
    def remarketing_list_ids(self):
        """Gets the remarketing_list_ids of this DeepLink.

        Ads served to users on these remarketing lists will use this deep link. Applicable when mobileApp.directory is APPLE_APP_STORE.

        :return: The remarketing_list_ids of this DeepLink.
        :rtype: List[str]
        """
        return self._remarketing_list_ids

    @remarketing_list_ids.setter
    def remarketing_list_ids(self, remarketing_list_ids):
        """Sets the remarketing_list_ids of this DeepLink.

        Ads served to users on these remarketing lists will use this deep link. Applicable when mobileApp.directory is APPLE_APP_STORE.

        :param remarketing_list_ids: The remarketing_list_ids of this DeepLink.
        :type remarketing_list_ids: List[str]
        """

        self._remarketing_list_ids = remarketing_list_ids
