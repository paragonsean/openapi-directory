# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class City(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country_code: str=None, country_dart_id: str=None, dart_id: str=None, kind: str=None, metro_code: str=None, metro_dma_id: str=None, name: str=None, region_code: str=None, region_dart_id: str=None):
        """City - a model defined in OpenAPI

        :param country_code: The country_code of this City.
        :param country_dart_id: The country_dart_id of this City.
        :param dart_id: The dart_id of this City.
        :param kind: The kind of this City.
        :param metro_code: The metro_code of this City.
        :param metro_dma_id: The metro_dma_id of this City.
        :param name: The name of this City.
        :param region_code: The region_code of this City.
        :param region_dart_id: The region_dart_id of this City.
        """
        self.openapi_types = {
            'country_code': str,
            'country_dart_id': str,
            'dart_id': str,
            'kind': str,
            'metro_code': str,
            'metro_dma_id': str,
            'name': str,
            'region_code': str,
            'region_dart_id': str
        }

        self.attribute_map = {
            'country_code': 'countryCode',
            'country_dart_id': 'countryDartId',
            'dart_id': 'dartId',
            'kind': 'kind',
            'metro_code': 'metroCode',
            'metro_dma_id': 'metroDmaId',
            'name': 'name',
            'region_code': 'regionCode',
            'region_dart_id': 'regionDartId'
        }

        self._country_code = country_code
        self._country_dart_id = country_dart_id
        self._dart_id = dart_id
        self._kind = kind
        self._metro_code = metro_code
        self._metro_dma_id = metro_dma_id
        self._name = name
        self._region_code = region_code
        self._region_dart_id = region_dart_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'City':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The City of this City.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country_code(self):
        """Gets the country_code of this City.

        Country code of the country to which this city belongs.

        :return: The country_code of this City.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this City.

        Country code of the country to which this city belongs.

        :param country_code: The country_code of this City.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def country_dart_id(self):
        """Gets the country_dart_id of this City.

        DART ID of the country to which this city belongs.

        :return: The country_dart_id of this City.
        :rtype: str
        """
        return self._country_dart_id

    @country_dart_id.setter
    def country_dart_id(self, country_dart_id):
        """Sets the country_dart_id of this City.

        DART ID of the country to which this city belongs.

        :param country_dart_id: The country_dart_id of this City.
        :type country_dart_id: str
        """

        self._country_dart_id = country_dart_id

    @property
    def dart_id(self):
        """Gets the dart_id of this City.

        DART ID of this city. This is the ID used for targeting and generating reports.

        :return: The dart_id of this City.
        :rtype: str
        """
        return self._dart_id

    @dart_id.setter
    def dart_id(self, dart_id):
        """Sets the dart_id of this City.

        DART ID of this city. This is the ID used for targeting and generating reports.

        :param dart_id: The dart_id of this City.
        :type dart_id: str
        """

        self._dart_id = dart_id

    @property
    def kind(self):
        """Gets the kind of this City.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#city\".

        :return: The kind of this City.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this City.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#city\".

        :param kind: The kind of this City.
        :type kind: str
        """

        self._kind = kind

    @property
    def metro_code(self):
        """Gets the metro_code of this City.

        Metro region code of the metro region (DMA) to which this city belongs.

        :return: The metro_code of this City.
        :rtype: str
        """
        return self._metro_code

    @metro_code.setter
    def metro_code(self, metro_code):
        """Sets the metro_code of this City.

        Metro region code of the metro region (DMA) to which this city belongs.

        :param metro_code: The metro_code of this City.
        :type metro_code: str
        """

        self._metro_code = metro_code

    @property
    def metro_dma_id(self):
        """Gets the metro_dma_id of this City.

        ID of the metro region (DMA) to which this city belongs.

        :return: The metro_dma_id of this City.
        :rtype: str
        """
        return self._metro_dma_id

    @metro_dma_id.setter
    def metro_dma_id(self, metro_dma_id):
        """Sets the metro_dma_id of this City.

        ID of the metro region (DMA) to which this city belongs.

        :param metro_dma_id: The metro_dma_id of this City.
        :type metro_dma_id: str
        """

        self._metro_dma_id = metro_dma_id

    @property
    def name(self):
        """Gets the name of this City.

        Name of this city.

        :return: The name of this City.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this City.

        Name of this city.

        :param name: The name of this City.
        :type name: str
        """

        self._name = name

    @property
    def region_code(self):
        """Gets the region_code of this City.

        Region code of the region to which this city belongs.

        :return: The region_code of this City.
        :rtype: str
        """
        return self._region_code

    @region_code.setter
    def region_code(self, region_code):
        """Sets the region_code of this City.

        Region code of the region to which this city belongs.

        :param region_code: The region_code of this City.
        :type region_code: str
        """

        self._region_code = region_code

    @property
    def region_dart_id(self):
        """Gets the region_dart_id of this City.

        DART ID of the region to which this city belongs.

        :return: The region_dart_id of this City.
        :rtype: str
        """
        return self._region_dart_id

    @region_dart_id.setter
    def region_dart_id(self, region_dart_id):
        """Sets the region_dart_id of this City.

        DART ID of the region to which this city belongs.

        :param region_dart_id: The region_dart_id of this City.
        :type region_dart_id: str
        """

        self._region_dart_id = region_dart_id
