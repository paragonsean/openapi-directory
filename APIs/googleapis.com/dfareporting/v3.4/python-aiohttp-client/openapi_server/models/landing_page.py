# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deep_link import DeepLink
from openapi_server import util


class LandingPage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advertiser_id: str=None, archived: bool=None, deep_links: List[DeepLink]=None, id: str=None, kind: str=None, name: str=None, url: str=None):
        """LandingPage - a model defined in OpenAPI

        :param advertiser_id: The advertiser_id of this LandingPage.
        :param archived: The archived of this LandingPage.
        :param deep_links: The deep_links of this LandingPage.
        :param id: The id of this LandingPage.
        :param kind: The kind of this LandingPage.
        :param name: The name of this LandingPage.
        :param url: The url of this LandingPage.
        """
        self.openapi_types = {
            'advertiser_id': str,
            'archived': bool,
            'deep_links': List[DeepLink],
            'id': str,
            'kind': str,
            'name': str,
            'url': str
        }

        self.attribute_map = {
            'advertiser_id': 'advertiserId',
            'archived': 'archived',
            'deep_links': 'deepLinks',
            'id': 'id',
            'kind': 'kind',
            'name': 'name',
            'url': 'url'
        }

        self._advertiser_id = advertiser_id
        self._archived = archived
        self._deep_links = deep_links
        self._id = id
        self._kind = kind
        self._name = name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LandingPage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LandingPage of this LandingPage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this LandingPage.

        Advertiser ID of this landing page. This is a required field.

        :return: The advertiser_id of this LandingPage.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this LandingPage.

        Advertiser ID of this landing page. This is a required field.

        :param advertiser_id: The advertiser_id of this LandingPage.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def archived(self):
        """Gets the archived of this LandingPage.

        Whether this landing page has been archived.

        :return: The archived of this LandingPage.
        :rtype: bool
        """
        return self._archived

    @archived.setter
    def archived(self, archived):
        """Sets the archived of this LandingPage.

        Whether this landing page has been archived.

        :param archived: The archived of this LandingPage.
        :type archived: bool
        """

        self._archived = archived

    @property
    def deep_links(self):
        """Gets the deep_links of this LandingPage.

        Links that will direct the user to a mobile app, if installed.

        :return: The deep_links of this LandingPage.
        :rtype: List[DeepLink]
        """
        return self._deep_links

    @deep_links.setter
    def deep_links(self, deep_links):
        """Sets the deep_links of this LandingPage.

        Links that will direct the user to a mobile app, if installed.

        :param deep_links: The deep_links of this LandingPage.
        :type deep_links: List[DeepLink]
        """

        self._deep_links = deep_links

    @property
    def id(self):
        """Gets the id of this LandingPage.

        ID of this landing page. This is a read-only, auto-generated field.

        :return: The id of this LandingPage.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LandingPage.

        ID of this landing page. This is a read-only, auto-generated field.

        :param id: The id of this LandingPage.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this LandingPage.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#landingPage\".

        :return: The kind of this LandingPage.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this LandingPage.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#landingPage\".

        :param kind: The kind of this LandingPage.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this LandingPage.

        Name of this landing page. This is a required field. It must be less than 256 characters long.

        :return: The name of this LandingPage.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LandingPage.

        Name of this landing page. This is a required field. It must be less than 256 characters long.

        :param name: The name of this LandingPage.
        :type name: str
        """

        self._name = name

    @property
    def url(self):
        """Gets the url of this LandingPage.

        URL of this landing page. This is a required field.

        :return: The url of this LandingPage.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this LandingPage.

        URL of this landing page. This is a required field.

        :param url: The url of this LandingPage.
        :type url: str
        """

        self._url = url
