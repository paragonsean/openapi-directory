# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activities import Activities
from openapi_server.models.custom_rich_media_events import CustomRichMediaEvents
from openapi_server.models.date_range import DateRange
from openapi_server.models.dimension_value import DimensionValue
from openapi_server.models.sorted_dimension import SortedDimension
from openapi_server import util


class ReportCriteria(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activities: Activities=None, custom_rich_media_events: CustomRichMediaEvents=None, date_range: DateRange=None, dimension_filters: List[DimensionValue]=None, dimensions: List[SortedDimension]=None, metric_names: List[str]=None):
        """ReportCriteria - a model defined in OpenAPI

        :param activities: The activities of this ReportCriteria.
        :param custom_rich_media_events: The custom_rich_media_events of this ReportCriteria.
        :param date_range: The date_range of this ReportCriteria.
        :param dimension_filters: The dimension_filters of this ReportCriteria.
        :param dimensions: The dimensions of this ReportCriteria.
        :param metric_names: The metric_names of this ReportCriteria.
        """
        self.openapi_types = {
            'activities': Activities,
            'custom_rich_media_events': CustomRichMediaEvents,
            'date_range': DateRange,
            'dimension_filters': List[DimensionValue],
            'dimensions': List[SortedDimension],
            'metric_names': List[str]
        }

        self.attribute_map = {
            'activities': 'activities',
            'custom_rich_media_events': 'customRichMediaEvents',
            'date_range': 'dateRange',
            'dimension_filters': 'dimensionFilters',
            'dimensions': 'dimensions',
            'metric_names': 'metricNames'
        }

        self._activities = activities
        self._custom_rich_media_events = custom_rich_media_events
        self._date_range = date_range
        self._dimension_filters = dimension_filters
        self._dimensions = dimensions
        self._metric_names = metric_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportCriteria':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Report_criteria of this ReportCriteria.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activities(self):
        """Gets the activities of this ReportCriteria.


        :return: The activities of this ReportCriteria.
        :rtype: Activities
        """
        return self._activities

    @activities.setter
    def activities(self, activities):
        """Sets the activities of this ReportCriteria.


        :param activities: The activities of this ReportCriteria.
        :type activities: Activities
        """

        self._activities = activities

    @property
    def custom_rich_media_events(self):
        """Gets the custom_rich_media_events of this ReportCriteria.


        :return: The custom_rich_media_events of this ReportCriteria.
        :rtype: CustomRichMediaEvents
        """
        return self._custom_rich_media_events

    @custom_rich_media_events.setter
    def custom_rich_media_events(self, custom_rich_media_events):
        """Sets the custom_rich_media_events of this ReportCriteria.


        :param custom_rich_media_events: The custom_rich_media_events of this ReportCriteria.
        :type custom_rich_media_events: CustomRichMediaEvents
        """

        self._custom_rich_media_events = custom_rich_media_events

    @property
    def date_range(self):
        """Gets the date_range of this ReportCriteria.


        :return: The date_range of this ReportCriteria.
        :rtype: DateRange
        """
        return self._date_range

    @date_range.setter
    def date_range(self, date_range):
        """Sets the date_range of this ReportCriteria.


        :param date_range: The date_range of this ReportCriteria.
        :type date_range: DateRange
        """

        self._date_range = date_range

    @property
    def dimension_filters(self):
        """Gets the dimension_filters of this ReportCriteria.

        The list of filters on which dimensions are filtered. Filters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.

        :return: The dimension_filters of this ReportCriteria.
        :rtype: List[DimensionValue]
        """
        return self._dimension_filters

    @dimension_filters.setter
    def dimension_filters(self, dimension_filters):
        """Sets the dimension_filters of this ReportCriteria.

        The list of filters on which dimensions are filtered. Filters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.

        :param dimension_filters: The dimension_filters of this ReportCriteria.
        :type dimension_filters: List[DimensionValue]
        """

        self._dimension_filters = dimension_filters

    @property
    def dimensions(self):
        """Gets the dimensions of this ReportCriteria.

        The list of standard dimensions the report should include.

        :return: The dimensions of this ReportCriteria.
        :rtype: List[SortedDimension]
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this ReportCriteria.

        The list of standard dimensions the report should include.

        :param dimensions: The dimensions of this ReportCriteria.
        :type dimensions: List[SortedDimension]
        """

        self._dimensions = dimensions

    @property
    def metric_names(self):
        """Gets the metric_names of this ReportCriteria.

        The list of names of metrics the report should include.

        :return: The metric_names of this ReportCriteria.
        :rtype: List[str]
        """
        return self._metric_names

    @metric_names.setter
    def metric_names(self, metric_names):
        """Sets the metric_names of this ReportCriteria.

        The list of names of metrics the report should include.

        :param metric_names: The metric_names of this ReportCriteria.
        :type metric_names: List[str]
        """

        self._metric_names = metric_names
