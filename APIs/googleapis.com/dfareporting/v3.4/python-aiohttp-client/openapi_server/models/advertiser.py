# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_value import DimensionValue
from openapi_server import util


class Advertiser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, advertiser_group_id: str=None, click_through_url_suffix: str=None, default_click_through_event_tag_id: str=None, default_email: str=None, floodlight_configuration_id: str=None, floodlight_configuration_id_dimension_value: DimensionValue=None, id: str=None, id_dimension_value: DimensionValue=None, kind: str=None, name: str=None, original_floodlight_configuration_id: str=None, status: str=None, subaccount_id: str=None, suspended: bool=None):
        """Advertiser - a model defined in OpenAPI

        :param account_id: The account_id of this Advertiser.
        :param advertiser_group_id: The advertiser_group_id of this Advertiser.
        :param click_through_url_suffix: The click_through_url_suffix of this Advertiser.
        :param default_click_through_event_tag_id: The default_click_through_event_tag_id of this Advertiser.
        :param default_email: The default_email of this Advertiser.
        :param floodlight_configuration_id: The floodlight_configuration_id of this Advertiser.
        :param floodlight_configuration_id_dimension_value: The floodlight_configuration_id_dimension_value of this Advertiser.
        :param id: The id of this Advertiser.
        :param id_dimension_value: The id_dimension_value of this Advertiser.
        :param kind: The kind of this Advertiser.
        :param name: The name of this Advertiser.
        :param original_floodlight_configuration_id: The original_floodlight_configuration_id of this Advertiser.
        :param status: The status of this Advertiser.
        :param subaccount_id: The subaccount_id of this Advertiser.
        :param suspended: The suspended of this Advertiser.
        """
        self.openapi_types = {
            'account_id': str,
            'advertiser_group_id': str,
            'click_through_url_suffix': str,
            'default_click_through_event_tag_id': str,
            'default_email': str,
            'floodlight_configuration_id': str,
            'floodlight_configuration_id_dimension_value': DimensionValue,
            'id': str,
            'id_dimension_value': DimensionValue,
            'kind': str,
            'name': str,
            'original_floodlight_configuration_id': str,
            'status': str,
            'subaccount_id': str,
            'suspended': bool
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'advertiser_group_id': 'advertiserGroupId',
            'click_through_url_suffix': 'clickThroughUrlSuffix',
            'default_click_through_event_tag_id': 'defaultClickThroughEventTagId',
            'default_email': 'defaultEmail',
            'floodlight_configuration_id': 'floodlightConfigurationId',
            'floodlight_configuration_id_dimension_value': 'floodlightConfigurationIdDimensionValue',
            'id': 'id',
            'id_dimension_value': 'idDimensionValue',
            'kind': 'kind',
            'name': 'name',
            'original_floodlight_configuration_id': 'originalFloodlightConfigurationId',
            'status': 'status',
            'subaccount_id': 'subaccountId',
            'suspended': 'suspended'
        }

        self._account_id = account_id
        self._advertiser_group_id = advertiser_group_id
        self._click_through_url_suffix = click_through_url_suffix
        self._default_click_through_event_tag_id = default_click_through_event_tag_id
        self._default_email = default_email
        self._floodlight_configuration_id = floodlight_configuration_id
        self._floodlight_configuration_id_dimension_value = floodlight_configuration_id_dimension_value
        self._id = id
        self._id_dimension_value = id_dimension_value
        self._kind = kind
        self._name = name
        self._original_floodlight_configuration_id = original_floodlight_configuration_id
        self._status = status
        self._subaccount_id = subaccount_id
        self._suspended = suspended

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Advertiser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Advertiser of this Advertiser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this Advertiser.

        Account ID of this advertiser.This is a read-only field that can be left blank.

        :return: The account_id of this Advertiser.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this Advertiser.

        Account ID of this advertiser.This is a read-only field that can be left blank.

        :param account_id: The account_id of this Advertiser.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def advertiser_group_id(self):
        """Gets the advertiser_group_id of this Advertiser.

        ID of the advertiser group this advertiser belongs to. You can group advertisers for reporting purposes, allowing you to see aggregated information for all advertisers in each group.

        :return: The advertiser_group_id of this Advertiser.
        :rtype: str
        """
        return self._advertiser_group_id

    @advertiser_group_id.setter
    def advertiser_group_id(self, advertiser_group_id):
        """Sets the advertiser_group_id of this Advertiser.

        ID of the advertiser group this advertiser belongs to. You can group advertisers for reporting purposes, allowing you to see aggregated information for all advertisers in each group.

        :param advertiser_group_id: The advertiser_group_id of this Advertiser.
        :type advertiser_group_id: str
        """

        self._advertiser_group_id = advertiser_group_id

    @property
    def click_through_url_suffix(self):
        """Gets the click_through_url_suffix of this Advertiser.

        Suffix added to click-through URL of ad creative associations under this advertiser. Must be less than 129 characters long.

        :return: The click_through_url_suffix of this Advertiser.
        :rtype: str
        """
        return self._click_through_url_suffix

    @click_through_url_suffix.setter
    def click_through_url_suffix(self, click_through_url_suffix):
        """Sets the click_through_url_suffix of this Advertiser.

        Suffix added to click-through URL of ad creative associations under this advertiser. Must be less than 129 characters long.

        :param click_through_url_suffix: The click_through_url_suffix of this Advertiser.
        :type click_through_url_suffix: str
        """

        self._click_through_url_suffix = click_through_url_suffix

    @property
    def default_click_through_event_tag_id(self):
        """Gets the default_click_through_event_tag_id of this Advertiser.

        ID of the click-through event tag to apply by default to the landing pages of this advertiser's campaigns.

        :return: The default_click_through_event_tag_id of this Advertiser.
        :rtype: str
        """
        return self._default_click_through_event_tag_id

    @default_click_through_event_tag_id.setter
    def default_click_through_event_tag_id(self, default_click_through_event_tag_id):
        """Sets the default_click_through_event_tag_id of this Advertiser.

        ID of the click-through event tag to apply by default to the landing pages of this advertiser's campaigns.

        :param default_click_through_event_tag_id: The default_click_through_event_tag_id of this Advertiser.
        :type default_click_through_event_tag_id: str
        """

        self._default_click_through_event_tag_id = default_click_through_event_tag_id

    @property
    def default_email(self):
        """Gets the default_email of this Advertiser.

        Default email address used in sender field for tag emails.

        :return: The default_email of this Advertiser.
        :rtype: str
        """
        return self._default_email

    @default_email.setter
    def default_email(self, default_email):
        """Sets the default_email of this Advertiser.

        Default email address used in sender field for tag emails.

        :param default_email: The default_email of this Advertiser.
        :type default_email: str
        """

        self._default_email = default_email

    @property
    def floodlight_configuration_id(self):
        """Gets the floodlight_configuration_id of this Advertiser.

        Floodlight configuration ID of this advertiser. The floodlight configuration ID will be created automatically, so on insert this field should be left blank. This field can be set to another advertiser's floodlight configuration ID in order to share that advertiser's floodlight configuration with this advertiser, so long as: - This advertiser's original floodlight configuration is not already associated with floodlight activities or floodlight activity groups. - This advertiser's original floodlight configuration is not already shared with another advertiser. 

        :return: The floodlight_configuration_id of this Advertiser.
        :rtype: str
        """
        return self._floodlight_configuration_id

    @floodlight_configuration_id.setter
    def floodlight_configuration_id(self, floodlight_configuration_id):
        """Sets the floodlight_configuration_id of this Advertiser.

        Floodlight configuration ID of this advertiser. The floodlight configuration ID will be created automatically, so on insert this field should be left blank. This field can be set to another advertiser's floodlight configuration ID in order to share that advertiser's floodlight configuration with this advertiser, so long as: - This advertiser's original floodlight configuration is not already associated with floodlight activities or floodlight activity groups. - This advertiser's original floodlight configuration is not already shared with another advertiser. 

        :param floodlight_configuration_id: The floodlight_configuration_id of this Advertiser.
        :type floodlight_configuration_id: str
        """

        self._floodlight_configuration_id = floodlight_configuration_id

    @property
    def floodlight_configuration_id_dimension_value(self):
        """Gets the floodlight_configuration_id_dimension_value of this Advertiser.


        :return: The floodlight_configuration_id_dimension_value of this Advertiser.
        :rtype: DimensionValue
        """
        return self._floodlight_configuration_id_dimension_value

    @floodlight_configuration_id_dimension_value.setter
    def floodlight_configuration_id_dimension_value(self, floodlight_configuration_id_dimension_value):
        """Sets the floodlight_configuration_id_dimension_value of this Advertiser.


        :param floodlight_configuration_id_dimension_value: The floodlight_configuration_id_dimension_value of this Advertiser.
        :type floodlight_configuration_id_dimension_value: DimensionValue
        """

        self._floodlight_configuration_id_dimension_value = floodlight_configuration_id_dimension_value

    @property
    def id(self):
        """Gets the id of this Advertiser.

        ID of this advertiser. This is a read-only, auto-generated field.

        :return: The id of this Advertiser.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Advertiser.

        ID of this advertiser. This is a read-only, auto-generated field.

        :param id: The id of this Advertiser.
        :type id: str
        """

        self._id = id

    @property
    def id_dimension_value(self):
        """Gets the id_dimension_value of this Advertiser.


        :return: The id_dimension_value of this Advertiser.
        :rtype: DimensionValue
        """
        return self._id_dimension_value

    @id_dimension_value.setter
    def id_dimension_value(self, id_dimension_value):
        """Sets the id_dimension_value of this Advertiser.


        :param id_dimension_value: The id_dimension_value of this Advertiser.
        :type id_dimension_value: DimensionValue
        """

        self._id_dimension_value = id_dimension_value

    @property
    def kind(self):
        """Gets the kind of this Advertiser.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiser\".

        :return: The kind of this Advertiser.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Advertiser.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiser\".

        :param kind: The kind of this Advertiser.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this Advertiser.

        Name of this advertiser. This is a required field and must be less than 256 characters long and unique among advertisers of the same account.

        :return: The name of this Advertiser.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Advertiser.

        Name of this advertiser. This is a required field and must be less than 256 characters long and unique among advertisers of the same account.

        :param name: The name of this Advertiser.
        :type name: str
        """

        self._name = name

    @property
    def original_floodlight_configuration_id(self):
        """Gets the original_floodlight_configuration_id of this Advertiser.

        Original floodlight configuration before any sharing occurred. Set the floodlightConfigurationId of this advertiser to originalFloodlightConfigurationId to unshare the advertiser's current floodlight configuration. You cannot unshare an advertiser's floodlight configuration if the shared configuration has activities associated with any campaign or placement.

        :return: The original_floodlight_configuration_id of this Advertiser.
        :rtype: str
        """
        return self._original_floodlight_configuration_id

    @original_floodlight_configuration_id.setter
    def original_floodlight_configuration_id(self, original_floodlight_configuration_id):
        """Sets the original_floodlight_configuration_id of this Advertiser.

        Original floodlight configuration before any sharing occurred. Set the floodlightConfigurationId of this advertiser to originalFloodlightConfigurationId to unshare the advertiser's current floodlight configuration. You cannot unshare an advertiser's floodlight configuration if the shared configuration has activities associated with any campaign or placement.

        :param original_floodlight_configuration_id: The original_floodlight_configuration_id of this Advertiser.
        :type original_floodlight_configuration_id: str
        """

        self._original_floodlight_configuration_id = original_floodlight_configuration_id

    @property
    def status(self):
        """Gets the status of this Advertiser.

        Status of this advertiser.

        :return: The status of this Advertiser.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Advertiser.

        Status of this advertiser.

        :param status: The status of this Advertiser.
        :type status: str
        """
        allowed_values = ["APPROVED", "ON_HOLD"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def subaccount_id(self):
        """Gets the subaccount_id of this Advertiser.

        Subaccount ID of this advertiser.This is a read-only field that can be left blank.

        :return: The subaccount_id of this Advertiser.
        :rtype: str
        """
        return self._subaccount_id

    @subaccount_id.setter
    def subaccount_id(self, subaccount_id):
        """Sets the subaccount_id of this Advertiser.

        Subaccount ID of this advertiser.This is a read-only field that can be left blank.

        :param subaccount_id: The subaccount_id of this Advertiser.
        :type subaccount_id: str
        """

        self._subaccount_id = subaccount_id

    @property
    def suspended(self):
        """Gets the suspended of this Advertiser.

        Suspension status of this advertiser.

        :return: The suspended of this Advertiser.
        :rtype: bool
        """
        return self._suspended

    @suspended.setter
    def suspended(self, suspended):
        """Sets the suspended of this Advertiser.

        Suspension status of this advertiser.

        :param suspended: The suspended of this Advertiser.
        :type suspended: bool
        """

        self._suspended = suspended
