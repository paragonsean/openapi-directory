# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Subaccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, available_permission_ids: List[str]=None, id: str=None, kind: str=None, name: str=None):
        """Subaccount - a model defined in OpenAPI

        :param account_id: The account_id of this Subaccount.
        :param available_permission_ids: The available_permission_ids of this Subaccount.
        :param id: The id of this Subaccount.
        :param kind: The kind of this Subaccount.
        :param name: The name of this Subaccount.
        """
        self.openapi_types = {
            'account_id': str,
            'available_permission_ids': List[str],
            'id': str,
            'kind': str,
            'name': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'available_permission_ids': 'availablePermissionIds',
            'id': 'id',
            'kind': 'kind',
            'name': 'name'
        }

        self._account_id = account_id
        self._available_permission_ids = available_permission_ids
        self._id = id
        self._kind = kind
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Subaccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Subaccount of this Subaccount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this Subaccount.

        ID of the account that contains this subaccount. This is a read-only field that can be left blank.

        :return: The account_id of this Subaccount.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this Subaccount.

        ID of the account that contains this subaccount. This is a read-only field that can be left blank.

        :param account_id: The account_id of this Subaccount.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def available_permission_ids(self):
        """Gets the available_permission_ids of this Subaccount.

        IDs of the available user role permissions for this subaccount.

        :return: The available_permission_ids of this Subaccount.
        :rtype: List[str]
        """
        return self._available_permission_ids

    @available_permission_ids.setter
    def available_permission_ids(self, available_permission_ids):
        """Sets the available_permission_ids of this Subaccount.

        IDs of the available user role permissions for this subaccount.

        :param available_permission_ids: The available_permission_ids of this Subaccount.
        :type available_permission_ids: List[str]
        """

        self._available_permission_ids = available_permission_ids

    @property
    def id(self):
        """Gets the id of this Subaccount.

        ID of this subaccount. This is a read-only, auto-generated field.

        :return: The id of this Subaccount.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Subaccount.

        ID of this subaccount. This is a read-only, auto-generated field.

        :param id: The id of this Subaccount.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this Subaccount.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#subaccount\".

        :return: The kind of this Subaccount.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Subaccount.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#subaccount\".

        :param kind: The kind of this Subaccount.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this Subaccount.

        Name of this subaccount. This is a required field. Must be less than 128 characters long and be unique among subaccounts of the same account.

        :return: The name of this Subaccount.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Subaccount.

        Name of this subaccount. This is a required field. Must be less than 128 characters long and be unique among subaccounts of the same account.

        :param name: The name of this Subaccount.
        :type name: str
        """

        self._name = name
