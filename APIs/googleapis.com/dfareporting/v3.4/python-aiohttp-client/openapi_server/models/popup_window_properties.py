# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.offset_position import OffsetPosition
from openapi_server.models.size import Size
from openapi_server import util


class PopupWindowProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimension: Size=None, offset: OffsetPosition=None, position_type: str=None, show_address_bar: bool=None, show_menu_bar: bool=None, show_scroll_bar: bool=None, show_status_bar: bool=None, show_tool_bar: bool=None, title: str=None):
        """PopupWindowProperties - a model defined in OpenAPI

        :param dimension: The dimension of this PopupWindowProperties.
        :param offset: The offset of this PopupWindowProperties.
        :param position_type: The position_type of this PopupWindowProperties.
        :param show_address_bar: The show_address_bar of this PopupWindowProperties.
        :param show_menu_bar: The show_menu_bar of this PopupWindowProperties.
        :param show_scroll_bar: The show_scroll_bar of this PopupWindowProperties.
        :param show_status_bar: The show_status_bar of this PopupWindowProperties.
        :param show_tool_bar: The show_tool_bar of this PopupWindowProperties.
        :param title: The title of this PopupWindowProperties.
        """
        self.openapi_types = {
            'dimension': Size,
            'offset': OffsetPosition,
            'position_type': str,
            'show_address_bar': bool,
            'show_menu_bar': bool,
            'show_scroll_bar': bool,
            'show_status_bar': bool,
            'show_tool_bar': bool,
            'title': str
        }

        self.attribute_map = {
            'dimension': 'dimension',
            'offset': 'offset',
            'position_type': 'positionType',
            'show_address_bar': 'showAddressBar',
            'show_menu_bar': 'showMenuBar',
            'show_scroll_bar': 'showScrollBar',
            'show_status_bar': 'showStatusBar',
            'show_tool_bar': 'showToolBar',
            'title': 'title'
        }

        self._dimension = dimension
        self._offset = offset
        self._position_type = position_type
        self._show_address_bar = show_address_bar
        self._show_menu_bar = show_menu_bar
        self._show_scroll_bar = show_scroll_bar
        self._show_status_bar = show_status_bar
        self._show_tool_bar = show_tool_bar
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PopupWindowProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PopupWindowProperties of this PopupWindowProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimension(self):
        """Gets the dimension of this PopupWindowProperties.


        :return: The dimension of this PopupWindowProperties.
        :rtype: Size
        """
        return self._dimension

    @dimension.setter
    def dimension(self, dimension):
        """Sets the dimension of this PopupWindowProperties.


        :param dimension: The dimension of this PopupWindowProperties.
        :type dimension: Size
        """

        self._dimension = dimension

    @property
    def offset(self):
        """Gets the offset of this PopupWindowProperties.


        :return: The offset of this PopupWindowProperties.
        :rtype: OffsetPosition
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this PopupWindowProperties.


        :param offset: The offset of this PopupWindowProperties.
        :type offset: OffsetPosition
        """

        self._offset = offset

    @property
    def position_type(self):
        """Gets the position_type of this PopupWindowProperties.

        Popup window position either centered or at specific coordinate.

        :return: The position_type of this PopupWindowProperties.
        :rtype: str
        """
        return self._position_type

    @position_type.setter
    def position_type(self, position_type):
        """Sets the position_type of this PopupWindowProperties.

        Popup window position either centered or at specific coordinate.

        :param position_type: The position_type of this PopupWindowProperties.
        :type position_type: str
        """
        allowed_values = ["CENTER", "COORDINATES"]  # noqa: E501
        if position_type not in allowed_values:
            raise ValueError(
                "Invalid value for `position_type` ({0}), must be one of {1}"
                .format(position_type, allowed_values)
            )

        self._position_type = position_type

    @property
    def show_address_bar(self):
        """Gets the show_address_bar of this PopupWindowProperties.

        Whether to display the browser address bar.

        :return: The show_address_bar of this PopupWindowProperties.
        :rtype: bool
        """
        return self._show_address_bar

    @show_address_bar.setter
    def show_address_bar(self, show_address_bar):
        """Sets the show_address_bar of this PopupWindowProperties.

        Whether to display the browser address bar.

        :param show_address_bar: The show_address_bar of this PopupWindowProperties.
        :type show_address_bar: bool
        """

        self._show_address_bar = show_address_bar

    @property
    def show_menu_bar(self):
        """Gets the show_menu_bar of this PopupWindowProperties.

        Whether to display the browser menu bar.

        :return: The show_menu_bar of this PopupWindowProperties.
        :rtype: bool
        """
        return self._show_menu_bar

    @show_menu_bar.setter
    def show_menu_bar(self, show_menu_bar):
        """Sets the show_menu_bar of this PopupWindowProperties.

        Whether to display the browser menu bar.

        :param show_menu_bar: The show_menu_bar of this PopupWindowProperties.
        :type show_menu_bar: bool
        """

        self._show_menu_bar = show_menu_bar

    @property
    def show_scroll_bar(self):
        """Gets the show_scroll_bar of this PopupWindowProperties.

        Whether to display the browser scroll bar.

        :return: The show_scroll_bar of this PopupWindowProperties.
        :rtype: bool
        """
        return self._show_scroll_bar

    @show_scroll_bar.setter
    def show_scroll_bar(self, show_scroll_bar):
        """Sets the show_scroll_bar of this PopupWindowProperties.

        Whether to display the browser scroll bar.

        :param show_scroll_bar: The show_scroll_bar of this PopupWindowProperties.
        :type show_scroll_bar: bool
        """

        self._show_scroll_bar = show_scroll_bar

    @property
    def show_status_bar(self):
        """Gets the show_status_bar of this PopupWindowProperties.

        Whether to display the browser status bar.

        :return: The show_status_bar of this PopupWindowProperties.
        :rtype: bool
        """
        return self._show_status_bar

    @show_status_bar.setter
    def show_status_bar(self, show_status_bar):
        """Sets the show_status_bar of this PopupWindowProperties.

        Whether to display the browser status bar.

        :param show_status_bar: The show_status_bar of this PopupWindowProperties.
        :type show_status_bar: bool
        """

        self._show_status_bar = show_status_bar

    @property
    def show_tool_bar(self):
        """Gets the show_tool_bar of this PopupWindowProperties.

        Whether to display the browser tool bar.

        :return: The show_tool_bar of this PopupWindowProperties.
        :rtype: bool
        """
        return self._show_tool_bar

    @show_tool_bar.setter
    def show_tool_bar(self, show_tool_bar):
        """Sets the show_tool_bar of this PopupWindowProperties.

        Whether to display the browser tool bar.

        :param show_tool_bar: The show_tool_bar of this PopupWindowProperties.
        :type show_tool_bar: bool
        """

        self._show_tool_bar = show_tool_bar

    @property
    def title(self):
        """Gets the title of this PopupWindowProperties.

        Title of popup window.

        :return: The title of this PopupWindowProperties.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PopupWindowProperties.

        Title of popup window.

        :param title: The title of this PopupWindowProperties.
        :type title: str
        """

        self._title = title
