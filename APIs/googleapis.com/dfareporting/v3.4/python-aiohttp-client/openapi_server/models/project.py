# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.last_modified_info import LastModifiedInfo
from openapi_server import util


class Project(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, advertiser_id: str=None, audience_age_group: str=None, audience_gender: str=None, budget: str=None, client_billing_code: str=None, client_name: str=None, end_date: date=None, id: str=None, kind: str=None, last_modified_info: LastModifiedInfo=None, name: str=None, overview: str=None, start_date: date=None, subaccount_id: str=None, target_clicks: str=None, target_conversions: str=None, target_cpa_nanos: str=None, target_cpc_nanos: str=None, target_cpm_active_view_nanos: str=None, target_cpm_nanos: str=None, target_impressions: str=None):
        """Project - a model defined in OpenAPI

        :param account_id: The account_id of this Project.
        :param advertiser_id: The advertiser_id of this Project.
        :param audience_age_group: The audience_age_group of this Project.
        :param audience_gender: The audience_gender of this Project.
        :param budget: The budget of this Project.
        :param client_billing_code: The client_billing_code of this Project.
        :param client_name: The client_name of this Project.
        :param end_date: The end_date of this Project.
        :param id: The id of this Project.
        :param kind: The kind of this Project.
        :param last_modified_info: The last_modified_info of this Project.
        :param name: The name of this Project.
        :param overview: The overview of this Project.
        :param start_date: The start_date of this Project.
        :param subaccount_id: The subaccount_id of this Project.
        :param target_clicks: The target_clicks of this Project.
        :param target_conversions: The target_conversions of this Project.
        :param target_cpa_nanos: The target_cpa_nanos of this Project.
        :param target_cpc_nanos: The target_cpc_nanos of this Project.
        :param target_cpm_active_view_nanos: The target_cpm_active_view_nanos of this Project.
        :param target_cpm_nanos: The target_cpm_nanos of this Project.
        :param target_impressions: The target_impressions of this Project.
        """
        self.openapi_types = {
            'account_id': str,
            'advertiser_id': str,
            'audience_age_group': str,
            'audience_gender': str,
            'budget': str,
            'client_billing_code': str,
            'client_name': str,
            'end_date': date,
            'id': str,
            'kind': str,
            'last_modified_info': LastModifiedInfo,
            'name': str,
            'overview': str,
            'start_date': date,
            'subaccount_id': str,
            'target_clicks': str,
            'target_conversions': str,
            'target_cpa_nanos': str,
            'target_cpc_nanos': str,
            'target_cpm_active_view_nanos': str,
            'target_cpm_nanos': str,
            'target_impressions': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'advertiser_id': 'advertiserId',
            'audience_age_group': 'audienceAgeGroup',
            'audience_gender': 'audienceGender',
            'budget': 'budget',
            'client_billing_code': 'clientBillingCode',
            'client_name': 'clientName',
            'end_date': 'endDate',
            'id': 'id',
            'kind': 'kind',
            'last_modified_info': 'lastModifiedInfo',
            'name': 'name',
            'overview': 'overview',
            'start_date': 'startDate',
            'subaccount_id': 'subaccountId',
            'target_clicks': 'targetClicks',
            'target_conversions': 'targetConversions',
            'target_cpa_nanos': 'targetCpaNanos',
            'target_cpc_nanos': 'targetCpcNanos',
            'target_cpm_active_view_nanos': 'targetCpmActiveViewNanos',
            'target_cpm_nanos': 'targetCpmNanos',
            'target_impressions': 'targetImpressions'
        }

        self._account_id = account_id
        self._advertiser_id = advertiser_id
        self._audience_age_group = audience_age_group
        self._audience_gender = audience_gender
        self._budget = budget
        self._client_billing_code = client_billing_code
        self._client_name = client_name
        self._end_date = end_date
        self._id = id
        self._kind = kind
        self._last_modified_info = last_modified_info
        self._name = name
        self._overview = overview
        self._start_date = start_date
        self._subaccount_id = subaccount_id
        self._target_clicks = target_clicks
        self._target_conversions = target_conversions
        self._target_cpa_nanos = target_cpa_nanos
        self._target_cpc_nanos = target_cpc_nanos
        self._target_cpm_active_view_nanos = target_cpm_active_view_nanos
        self._target_cpm_nanos = target_cpm_nanos
        self._target_impressions = target_impressions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Project':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Project of this Project.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this Project.

        Account ID of this project.

        :return: The account_id of this Project.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this Project.

        Account ID of this project.

        :param account_id: The account_id of this Project.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this Project.

        Advertiser ID of this project.

        :return: The advertiser_id of this Project.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this Project.

        Advertiser ID of this project.

        :param advertiser_id: The advertiser_id of this Project.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def audience_age_group(self):
        """Gets the audience_age_group of this Project.

        Audience age group of this project.

        :return: The audience_age_group of this Project.
        :rtype: str
        """
        return self._audience_age_group

    @audience_age_group.setter
    def audience_age_group(self, audience_age_group):
        """Sets the audience_age_group of this Project.

        Audience age group of this project.

        :param audience_age_group: The audience_age_group of this Project.
        :type audience_age_group: str
        """
        allowed_values = ["PLANNING_AUDIENCE_AGE_18_24", "PLANNING_AUDIENCE_AGE_25_34", "PLANNING_AUDIENCE_AGE_35_44", "PLANNING_AUDIENCE_AGE_45_54", "PLANNING_AUDIENCE_AGE_55_64", "PLANNING_AUDIENCE_AGE_65_OR_MORE", "PLANNING_AUDIENCE_AGE_UNKNOWN"]  # noqa: E501
        if audience_age_group not in allowed_values:
            raise ValueError(
                "Invalid value for `audience_age_group` ({0}), must be one of {1}"
                .format(audience_age_group, allowed_values)
            )

        self._audience_age_group = audience_age_group

    @property
    def audience_gender(self):
        """Gets the audience_gender of this Project.

        Audience gender of this project.

        :return: The audience_gender of this Project.
        :rtype: str
        """
        return self._audience_gender

    @audience_gender.setter
    def audience_gender(self, audience_gender):
        """Sets the audience_gender of this Project.

        Audience gender of this project.

        :param audience_gender: The audience_gender of this Project.
        :type audience_gender: str
        """
        allowed_values = ["PLANNING_AUDIENCE_GENDER_MALE", "PLANNING_AUDIENCE_GENDER_FEMALE"]  # noqa: E501
        if audience_gender not in allowed_values:
            raise ValueError(
                "Invalid value for `audience_gender` ({0}), must be one of {1}"
                .format(audience_gender, allowed_values)
            )

        self._audience_gender = audience_gender

    @property
    def budget(self):
        """Gets the budget of this Project.

        Budget of this project in the currency specified by the current account. The value stored in this field represents only the non-fractional amount. For example, for USD, the smallest value that can be represented by this field is 1 US dollar.

        :return: The budget of this Project.
        :rtype: str
        """
        return self._budget

    @budget.setter
    def budget(self, budget):
        """Sets the budget of this Project.

        Budget of this project in the currency specified by the current account. The value stored in this field represents only the non-fractional amount. For example, for USD, the smallest value that can be represented by this field is 1 US dollar.

        :param budget: The budget of this Project.
        :type budget: str
        """

        self._budget = budget

    @property
    def client_billing_code(self):
        """Gets the client_billing_code of this Project.

        Client billing code of this project.

        :return: The client_billing_code of this Project.
        :rtype: str
        """
        return self._client_billing_code

    @client_billing_code.setter
    def client_billing_code(self, client_billing_code):
        """Sets the client_billing_code of this Project.

        Client billing code of this project.

        :param client_billing_code: The client_billing_code of this Project.
        :type client_billing_code: str
        """

        self._client_billing_code = client_billing_code

    @property
    def client_name(self):
        """Gets the client_name of this Project.

        Name of the project client.

        :return: The client_name of this Project.
        :rtype: str
        """
        return self._client_name

    @client_name.setter
    def client_name(self, client_name):
        """Sets the client_name of this Project.

        Name of the project client.

        :param client_name: The client_name of this Project.
        :type client_name: str
        """

        self._client_name = client_name

    @property
    def end_date(self):
        """Gets the end_date of this Project.


        :return: The end_date of this Project.
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this Project.


        :param end_date: The end_date of this Project.
        :type end_date: date
        """

        self._end_date = end_date

    @property
    def id(self):
        """Gets the id of this Project.

        ID of this project. This is a read-only, auto-generated field.

        :return: The id of this Project.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Project.

        ID of this project. This is a read-only, auto-generated field.

        :param id: The id of this Project.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this Project.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#project\".

        :return: The kind of this Project.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Project.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#project\".

        :param kind: The kind of this Project.
        :type kind: str
        """

        self._kind = kind

    @property
    def last_modified_info(self):
        """Gets the last_modified_info of this Project.


        :return: The last_modified_info of this Project.
        :rtype: LastModifiedInfo
        """
        return self._last_modified_info

    @last_modified_info.setter
    def last_modified_info(self, last_modified_info):
        """Sets the last_modified_info of this Project.


        :param last_modified_info: The last_modified_info of this Project.
        :type last_modified_info: LastModifiedInfo
        """

        self._last_modified_info = last_modified_info

    @property
    def name(self):
        """Gets the name of this Project.

        Name of this project.

        :return: The name of this Project.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Project.

        Name of this project.

        :param name: The name of this Project.
        :type name: str
        """

        self._name = name

    @property
    def overview(self):
        """Gets the overview of this Project.

        Overview of this project.

        :return: The overview of this Project.
        :rtype: str
        """
        return self._overview

    @overview.setter
    def overview(self, overview):
        """Sets the overview of this Project.

        Overview of this project.

        :param overview: The overview of this Project.
        :type overview: str
        """

        self._overview = overview

    @property
    def start_date(self):
        """Gets the start_date of this Project.


        :return: The start_date of this Project.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Project.


        :param start_date: The start_date of this Project.
        :type start_date: date
        """

        self._start_date = start_date

    @property
    def subaccount_id(self):
        """Gets the subaccount_id of this Project.

        Subaccount ID of this project.

        :return: The subaccount_id of this Project.
        :rtype: str
        """
        return self._subaccount_id

    @subaccount_id.setter
    def subaccount_id(self, subaccount_id):
        """Sets the subaccount_id of this Project.

        Subaccount ID of this project.

        :param subaccount_id: The subaccount_id of this Project.
        :type subaccount_id: str
        """

        self._subaccount_id = subaccount_id

    @property
    def target_clicks(self):
        """Gets the target_clicks of this Project.

        Number of clicks that the advertiser is targeting.

        :return: The target_clicks of this Project.
        :rtype: str
        """
        return self._target_clicks

    @target_clicks.setter
    def target_clicks(self, target_clicks):
        """Sets the target_clicks of this Project.

        Number of clicks that the advertiser is targeting.

        :param target_clicks: The target_clicks of this Project.
        :type target_clicks: str
        """

        self._target_clicks = target_clicks

    @property
    def target_conversions(self):
        """Gets the target_conversions of this Project.

        Number of conversions that the advertiser is targeting.

        :return: The target_conversions of this Project.
        :rtype: str
        """
        return self._target_conversions

    @target_conversions.setter
    def target_conversions(self, target_conversions):
        """Sets the target_conversions of this Project.

        Number of conversions that the advertiser is targeting.

        :param target_conversions: The target_conversions of this Project.
        :type target_conversions: str
        """

        self._target_conversions = target_conversions

    @property
    def target_cpa_nanos(self):
        """Gets the target_cpa_nanos of this Project.

        CPA that the advertiser is targeting.

        :return: The target_cpa_nanos of this Project.
        :rtype: str
        """
        return self._target_cpa_nanos

    @target_cpa_nanos.setter
    def target_cpa_nanos(self, target_cpa_nanos):
        """Sets the target_cpa_nanos of this Project.

        CPA that the advertiser is targeting.

        :param target_cpa_nanos: The target_cpa_nanos of this Project.
        :type target_cpa_nanos: str
        """

        self._target_cpa_nanos = target_cpa_nanos

    @property
    def target_cpc_nanos(self):
        """Gets the target_cpc_nanos of this Project.

        CPC that the advertiser is targeting.

        :return: The target_cpc_nanos of this Project.
        :rtype: str
        """
        return self._target_cpc_nanos

    @target_cpc_nanos.setter
    def target_cpc_nanos(self, target_cpc_nanos):
        """Sets the target_cpc_nanos of this Project.

        CPC that the advertiser is targeting.

        :param target_cpc_nanos: The target_cpc_nanos of this Project.
        :type target_cpc_nanos: str
        """

        self._target_cpc_nanos = target_cpc_nanos

    @property
    def target_cpm_active_view_nanos(self):
        """Gets the target_cpm_active_view_nanos of this Project.

        vCPM from Active View that the advertiser is targeting.

        :return: The target_cpm_active_view_nanos of this Project.
        :rtype: str
        """
        return self._target_cpm_active_view_nanos

    @target_cpm_active_view_nanos.setter
    def target_cpm_active_view_nanos(self, target_cpm_active_view_nanos):
        """Sets the target_cpm_active_view_nanos of this Project.

        vCPM from Active View that the advertiser is targeting.

        :param target_cpm_active_view_nanos: The target_cpm_active_view_nanos of this Project.
        :type target_cpm_active_view_nanos: str
        """

        self._target_cpm_active_view_nanos = target_cpm_active_view_nanos

    @property
    def target_cpm_nanos(self):
        """Gets the target_cpm_nanos of this Project.

        CPM that the advertiser is targeting.

        :return: The target_cpm_nanos of this Project.
        :rtype: str
        """
        return self._target_cpm_nanos

    @target_cpm_nanos.setter
    def target_cpm_nanos(self, target_cpm_nanos):
        """Sets the target_cpm_nanos of this Project.

        CPM that the advertiser is targeting.

        :param target_cpm_nanos: The target_cpm_nanos of this Project.
        :type target_cpm_nanos: str
        """

        self._target_cpm_nanos = target_cpm_nanos

    @property
    def target_impressions(self):
        """Gets the target_impressions of this Project.

        Number of impressions that the advertiser is targeting.

        :return: The target_impressions of this Project.
        :rtype: str
        """
        return self._target_impressions

    @target_impressions.setter
    def target_impressions(self, target_impressions):
        """Sets the target_impressions of this Project.

        Number of impressions that the advertiser is targeting.

        :param target_impressions: The target_impressions of this Project.
        :type target_impressions: str
        """

        self._target_impressions = target_impressions
