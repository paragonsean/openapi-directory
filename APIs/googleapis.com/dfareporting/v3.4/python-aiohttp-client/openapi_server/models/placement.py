# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_value import DimensionValue
from openapi_server.models.last_modified_info import LastModifiedInfo
from openapi_server.models.lookback_configuration import LookbackConfiguration
from openapi_server.models.pricing_schedule import PricingSchedule
from openapi_server.models.size import Size
from openapi_server.models.tag_setting import TagSetting
from openapi_server.models.video_settings import VideoSettings
from openapi_server import util


class Placement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, ad_blocking_opt_out: bool=None, additional_sizes: List[Size]=None, advertiser_id: str=None, advertiser_id_dimension_value: DimensionValue=None, archived: bool=None, campaign_id: str=None, campaign_id_dimension_value: DimensionValue=None, comment: str=None, compatibility: str=None, content_category_id: str=None, create_info: LastModifiedInfo=None, directory_site_id: str=None, directory_site_id_dimension_value: DimensionValue=None, external_id: str=None, id: str=None, id_dimension_value: DimensionValue=None, key_name: str=None, kind: str=None, last_modified_info: LastModifiedInfo=None, lookback_configuration: LookbackConfiguration=None, name: str=None, payment_approved: bool=None, payment_source: str=None, placement_group_id: str=None, placement_group_id_dimension_value: DimensionValue=None, placement_strategy_id: str=None, pricing_schedule: PricingSchedule=None, primary: bool=None, publisher_update_info: LastModifiedInfo=None, site_id: str=None, site_id_dimension_value: DimensionValue=None, size: Size=None, ssl_required: bool=None, status: str=None, subaccount_id: str=None, tag_formats: List[str]=None, tag_setting: TagSetting=None, video_active_view_opt_out: bool=None, video_settings: VideoSettings=None, vpaid_adapter_choice: str=None):
        """Placement - a model defined in OpenAPI

        :param account_id: The account_id of this Placement.
        :param ad_blocking_opt_out: The ad_blocking_opt_out of this Placement.
        :param additional_sizes: The additional_sizes of this Placement.
        :param advertiser_id: The advertiser_id of this Placement.
        :param advertiser_id_dimension_value: The advertiser_id_dimension_value of this Placement.
        :param archived: The archived of this Placement.
        :param campaign_id: The campaign_id of this Placement.
        :param campaign_id_dimension_value: The campaign_id_dimension_value of this Placement.
        :param comment: The comment of this Placement.
        :param compatibility: The compatibility of this Placement.
        :param content_category_id: The content_category_id of this Placement.
        :param create_info: The create_info of this Placement.
        :param directory_site_id: The directory_site_id of this Placement.
        :param directory_site_id_dimension_value: The directory_site_id_dimension_value of this Placement.
        :param external_id: The external_id of this Placement.
        :param id: The id of this Placement.
        :param id_dimension_value: The id_dimension_value of this Placement.
        :param key_name: The key_name of this Placement.
        :param kind: The kind of this Placement.
        :param last_modified_info: The last_modified_info of this Placement.
        :param lookback_configuration: The lookback_configuration of this Placement.
        :param name: The name of this Placement.
        :param payment_approved: The payment_approved of this Placement.
        :param payment_source: The payment_source of this Placement.
        :param placement_group_id: The placement_group_id of this Placement.
        :param placement_group_id_dimension_value: The placement_group_id_dimension_value of this Placement.
        :param placement_strategy_id: The placement_strategy_id of this Placement.
        :param pricing_schedule: The pricing_schedule of this Placement.
        :param primary: The primary of this Placement.
        :param publisher_update_info: The publisher_update_info of this Placement.
        :param site_id: The site_id of this Placement.
        :param site_id_dimension_value: The site_id_dimension_value of this Placement.
        :param size: The size of this Placement.
        :param ssl_required: The ssl_required of this Placement.
        :param status: The status of this Placement.
        :param subaccount_id: The subaccount_id of this Placement.
        :param tag_formats: The tag_formats of this Placement.
        :param tag_setting: The tag_setting of this Placement.
        :param video_active_view_opt_out: The video_active_view_opt_out of this Placement.
        :param video_settings: The video_settings of this Placement.
        :param vpaid_adapter_choice: The vpaid_adapter_choice of this Placement.
        """
        self.openapi_types = {
            'account_id': str,
            'ad_blocking_opt_out': bool,
            'additional_sizes': List[Size],
            'advertiser_id': str,
            'advertiser_id_dimension_value': DimensionValue,
            'archived': bool,
            'campaign_id': str,
            'campaign_id_dimension_value': DimensionValue,
            'comment': str,
            'compatibility': str,
            'content_category_id': str,
            'create_info': LastModifiedInfo,
            'directory_site_id': str,
            'directory_site_id_dimension_value': DimensionValue,
            'external_id': str,
            'id': str,
            'id_dimension_value': DimensionValue,
            'key_name': str,
            'kind': str,
            'last_modified_info': LastModifiedInfo,
            'lookback_configuration': LookbackConfiguration,
            'name': str,
            'payment_approved': bool,
            'payment_source': str,
            'placement_group_id': str,
            'placement_group_id_dimension_value': DimensionValue,
            'placement_strategy_id': str,
            'pricing_schedule': PricingSchedule,
            'primary': bool,
            'publisher_update_info': LastModifiedInfo,
            'site_id': str,
            'site_id_dimension_value': DimensionValue,
            'size': Size,
            'ssl_required': bool,
            'status': str,
            'subaccount_id': str,
            'tag_formats': List[str],
            'tag_setting': TagSetting,
            'video_active_view_opt_out': bool,
            'video_settings': VideoSettings,
            'vpaid_adapter_choice': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'ad_blocking_opt_out': 'adBlockingOptOut',
            'additional_sizes': 'additionalSizes',
            'advertiser_id': 'advertiserId',
            'advertiser_id_dimension_value': 'advertiserIdDimensionValue',
            'archived': 'archived',
            'campaign_id': 'campaignId',
            'campaign_id_dimension_value': 'campaignIdDimensionValue',
            'comment': 'comment',
            'compatibility': 'compatibility',
            'content_category_id': 'contentCategoryId',
            'create_info': 'createInfo',
            'directory_site_id': 'directorySiteId',
            'directory_site_id_dimension_value': 'directorySiteIdDimensionValue',
            'external_id': 'externalId',
            'id': 'id',
            'id_dimension_value': 'idDimensionValue',
            'key_name': 'keyName',
            'kind': 'kind',
            'last_modified_info': 'lastModifiedInfo',
            'lookback_configuration': 'lookbackConfiguration',
            'name': 'name',
            'payment_approved': 'paymentApproved',
            'payment_source': 'paymentSource',
            'placement_group_id': 'placementGroupId',
            'placement_group_id_dimension_value': 'placementGroupIdDimensionValue',
            'placement_strategy_id': 'placementStrategyId',
            'pricing_schedule': 'pricingSchedule',
            'primary': 'primary',
            'publisher_update_info': 'publisherUpdateInfo',
            'site_id': 'siteId',
            'site_id_dimension_value': 'siteIdDimensionValue',
            'size': 'size',
            'ssl_required': 'sslRequired',
            'status': 'status',
            'subaccount_id': 'subaccountId',
            'tag_formats': 'tagFormats',
            'tag_setting': 'tagSetting',
            'video_active_view_opt_out': 'videoActiveViewOptOut',
            'video_settings': 'videoSettings',
            'vpaid_adapter_choice': 'vpaidAdapterChoice'
        }

        self._account_id = account_id
        self._ad_blocking_opt_out = ad_blocking_opt_out
        self._additional_sizes = additional_sizes
        self._advertiser_id = advertiser_id
        self._advertiser_id_dimension_value = advertiser_id_dimension_value
        self._archived = archived
        self._campaign_id = campaign_id
        self._campaign_id_dimension_value = campaign_id_dimension_value
        self._comment = comment
        self._compatibility = compatibility
        self._content_category_id = content_category_id
        self._create_info = create_info
        self._directory_site_id = directory_site_id
        self._directory_site_id_dimension_value = directory_site_id_dimension_value
        self._external_id = external_id
        self._id = id
        self._id_dimension_value = id_dimension_value
        self._key_name = key_name
        self._kind = kind
        self._last_modified_info = last_modified_info
        self._lookback_configuration = lookback_configuration
        self._name = name
        self._payment_approved = payment_approved
        self._payment_source = payment_source
        self._placement_group_id = placement_group_id
        self._placement_group_id_dimension_value = placement_group_id_dimension_value
        self._placement_strategy_id = placement_strategy_id
        self._pricing_schedule = pricing_schedule
        self._primary = primary
        self._publisher_update_info = publisher_update_info
        self._site_id = site_id
        self._site_id_dimension_value = site_id_dimension_value
        self._size = size
        self._ssl_required = ssl_required
        self._status = status
        self._subaccount_id = subaccount_id
        self._tag_formats = tag_formats
        self._tag_setting = tag_setting
        self._video_active_view_opt_out = video_active_view_opt_out
        self._video_settings = video_settings
        self._vpaid_adapter_choice = vpaid_adapter_choice

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Placement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Placement of this Placement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this Placement.

        Account ID of this placement. This field can be left blank.

        :return: The account_id of this Placement.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this Placement.

        Account ID of this placement. This field can be left blank.

        :param account_id: The account_id of this Placement.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def ad_blocking_opt_out(self):
        """Gets the ad_blocking_opt_out of this Placement.

        Whether this placement opts out of ad blocking. When true, ad blocking is disabled for this placement. When false, the campaign and site settings take effect.

        :return: The ad_blocking_opt_out of this Placement.
        :rtype: bool
        """
        return self._ad_blocking_opt_out

    @ad_blocking_opt_out.setter
    def ad_blocking_opt_out(self, ad_blocking_opt_out):
        """Sets the ad_blocking_opt_out of this Placement.

        Whether this placement opts out of ad blocking. When true, ad blocking is disabled for this placement. When false, the campaign and site settings take effect.

        :param ad_blocking_opt_out: The ad_blocking_opt_out of this Placement.
        :type ad_blocking_opt_out: bool
        """

        self._ad_blocking_opt_out = ad_blocking_opt_out

    @property
    def additional_sizes(self):
        """Gets the additional_sizes of this Placement.

        Additional sizes associated with this placement. When inserting or updating a placement, only the size ID field is used.

        :return: The additional_sizes of this Placement.
        :rtype: List[Size]
        """
        return self._additional_sizes

    @additional_sizes.setter
    def additional_sizes(self, additional_sizes):
        """Sets the additional_sizes of this Placement.

        Additional sizes associated with this placement. When inserting or updating a placement, only the size ID field is used.

        :param additional_sizes: The additional_sizes of this Placement.
        :type additional_sizes: List[Size]
        """

        self._additional_sizes = additional_sizes

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this Placement.

        Advertiser ID of this placement. This field can be left blank.

        :return: The advertiser_id of this Placement.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this Placement.

        Advertiser ID of this placement. This field can be left blank.

        :param advertiser_id: The advertiser_id of this Placement.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def advertiser_id_dimension_value(self):
        """Gets the advertiser_id_dimension_value of this Placement.


        :return: The advertiser_id_dimension_value of this Placement.
        :rtype: DimensionValue
        """
        return self._advertiser_id_dimension_value

    @advertiser_id_dimension_value.setter
    def advertiser_id_dimension_value(self, advertiser_id_dimension_value):
        """Sets the advertiser_id_dimension_value of this Placement.


        :param advertiser_id_dimension_value: The advertiser_id_dimension_value of this Placement.
        :type advertiser_id_dimension_value: DimensionValue
        """

        self._advertiser_id_dimension_value = advertiser_id_dimension_value

    @property
    def archived(self):
        """Gets the archived of this Placement.

        Whether this placement is archived.

        :return: The archived of this Placement.
        :rtype: bool
        """
        return self._archived

    @archived.setter
    def archived(self, archived):
        """Sets the archived of this Placement.

        Whether this placement is archived.

        :param archived: The archived of this Placement.
        :type archived: bool
        """

        self._archived = archived

    @property
    def campaign_id(self):
        """Gets the campaign_id of this Placement.

        Campaign ID of this placement. This field is a required field on insertion.

        :return: The campaign_id of this Placement.
        :rtype: str
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id):
        """Sets the campaign_id of this Placement.

        Campaign ID of this placement. This field is a required field on insertion.

        :param campaign_id: The campaign_id of this Placement.
        :type campaign_id: str
        """

        self._campaign_id = campaign_id

    @property
    def campaign_id_dimension_value(self):
        """Gets the campaign_id_dimension_value of this Placement.


        :return: The campaign_id_dimension_value of this Placement.
        :rtype: DimensionValue
        """
        return self._campaign_id_dimension_value

    @campaign_id_dimension_value.setter
    def campaign_id_dimension_value(self, campaign_id_dimension_value):
        """Sets the campaign_id_dimension_value of this Placement.


        :param campaign_id_dimension_value: The campaign_id_dimension_value of this Placement.
        :type campaign_id_dimension_value: DimensionValue
        """

        self._campaign_id_dimension_value = campaign_id_dimension_value

    @property
    def comment(self):
        """Gets the comment of this Placement.

        Comments for this placement.

        :return: The comment of this Placement.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this Placement.

        Comments for this placement.

        :param comment: The comment of this Placement.
        :type comment: str
        """

        self._comment = comment

    @property
    def compatibility(self):
        """Gets the compatibility of this Placement.

        Placement compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering on desktop, on mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are no longer allowed for new placement insertions. Instead, use DISPLAY or DISPLAY_INTERSTITIAL. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard. This field is required on insertion.

        :return: The compatibility of this Placement.
        :rtype: str
        """
        return self._compatibility

    @compatibility.setter
    def compatibility(self, compatibility):
        """Sets the compatibility of this Placement.

        Placement compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering on desktop, on mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are no longer allowed for new placement insertions. Instead, use DISPLAY or DISPLAY_INTERSTITIAL. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard. This field is required on insertion.

        :param compatibility: The compatibility of this Placement.
        :type compatibility: str
        """
        allowed_values = ["DISPLAY", "DISPLAY_INTERSTITIAL", "APP", "APP_INTERSTITIAL", "IN_STREAM_VIDEO", "IN_STREAM_AUDIO"]  # noqa: E501
        if compatibility not in allowed_values:
            raise ValueError(
                "Invalid value for `compatibility` ({0}), must be one of {1}"
                .format(compatibility, allowed_values)
            )

        self._compatibility = compatibility

    @property
    def content_category_id(self):
        """Gets the content_category_id of this Placement.

        ID of the content category assigned to this placement.

        :return: The content_category_id of this Placement.
        :rtype: str
        """
        return self._content_category_id

    @content_category_id.setter
    def content_category_id(self, content_category_id):
        """Sets the content_category_id of this Placement.

        ID of the content category assigned to this placement.

        :param content_category_id: The content_category_id of this Placement.
        :type content_category_id: str
        """

        self._content_category_id = content_category_id

    @property
    def create_info(self):
        """Gets the create_info of this Placement.


        :return: The create_info of this Placement.
        :rtype: LastModifiedInfo
        """
        return self._create_info

    @create_info.setter
    def create_info(self, create_info):
        """Sets the create_info of this Placement.


        :param create_info: The create_info of this Placement.
        :type create_info: LastModifiedInfo
        """

        self._create_info = create_info

    @property
    def directory_site_id(self):
        """Gets the directory_site_id of this Placement.

        Directory site ID of this placement. On insert, you must set either this field or the siteId field to specify the site associated with this placement. This is a required field that is read-only after insertion.

        :return: The directory_site_id of this Placement.
        :rtype: str
        """
        return self._directory_site_id

    @directory_site_id.setter
    def directory_site_id(self, directory_site_id):
        """Sets the directory_site_id of this Placement.

        Directory site ID of this placement. On insert, you must set either this field or the siteId field to specify the site associated with this placement. This is a required field that is read-only after insertion.

        :param directory_site_id: The directory_site_id of this Placement.
        :type directory_site_id: str
        """

        self._directory_site_id = directory_site_id

    @property
    def directory_site_id_dimension_value(self):
        """Gets the directory_site_id_dimension_value of this Placement.


        :return: The directory_site_id_dimension_value of this Placement.
        :rtype: DimensionValue
        """
        return self._directory_site_id_dimension_value

    @directory_site_id_dimension_value.setter
    def directory_site_id_dimension_value(self, directory_site_id_dimension_value):
        """Sets the directory_site_id_dimension_value of this Placement.


        :param directory_site_id_dimension_value: The directory_site_id_dimension_value of this Placement.
        :type directory_site_id_dimension_value: DimensionValue
        """

        self._directory_site_id_dimension_value = directory_site_id_dimension_value

    @property
    def external_id(self):
        """Gets the external_id of this Placement.

        External ID for this placement.

        :return: The external_id of this Placement.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this Placement.

        External ID for this placement.

        :param external_id: The external_id of this Placement.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def id(self):
        """Gets the id of this Placement.

        ID of this placement. This is a read-only, auto-generated field.

        :return: The id of this Placement.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Placement.

        ID of this placement. This is a read-only, auto-generated field.

        :param id: The id of this Placement.
        :type id: str
        """

        self._id = id

    @property
    def id_dimension_value(self):
        """Gets the id_dimension_value of this Placement.


        :return: The id_dimension_value of this Placement.
        :rtype: DimensionValue
        """
        return self._id_dimension_value

    @id_dimension_value.setter
    def id_dimension_value(self, id_dimension_value):
        """Sets the id_dimension_value of this Placement.


        :param id_dimension_value: The id_dimension_value of this Placement.
        :type id_dimension_value: DimensionValue
        """

        self._id_dimension_value = id_dimension_value

    @property
    def key_name(self):
        """Gets the key_name of this Placement.

        Key name of this placement. This is a read-only, auto-generated field.

        :return: The key_name of this Placement.
        :rtype: str
        """
        return self._key_name

    @key_name.setter
    def key_name(self, key_name):
        """Sets the key_name of this Placement.

        Key name of this placement. This is a read-only, auto-generated field.

        :param key_name: The key_name of this Placement.
        :type key_name: str
        """

        self._key_name = key_name

    @property
    def kind(self):
        """Gets the kind of this Placement.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placement\".

        :return: The kind of this Placement.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Placement.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placement\".

        :param kind: The kind of this Placement.
        :type kind: str
        """

        self._kind = kind

    @property
    def last_modified_info(self):
        """Gets the last_modified_info of this Placement.


        :return: The last_modified_info of this Placement.
        :rtype: LastModifiedInfo
        """
        return self._last_modified_info

    @last_modified_info.setter
    def last_modified_info(self, last_modified_info):
        """Sets the last_modified_info of this Placement.


        :param last_modified_info: The last_modified_info of this Placement.
        :type last_modified_info: LastModifiedInfo
        """

        self._last_modified_info = last_modified_info

    @property
    def lookback_configuration(self):
        """Gets the lookback_configuration of this Placement.


        :return: The lookback_configuration of this Placement.
        :rtype: LookbackConfiguration
        """
        return self._lookback_configuration

    @lookback_configuration.setter
    def lookback_configuration(self, lookback_configuration):
        """Sets the lookback_configuration of this Placement.


        :param lookback_configuration: The lookback_configuration of this Placement.
        :type lookback_configuration: LookbackConfiguration
        """

        self._lookback_configuration = lookback_configuration

    @property
    def name(self):
        """Gets the name of this Placement.

        Name of this placement.This is a required field and must be less than or equal to 512 characters long.

        :return: The name of this Placement.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Placement.

        Name of this placement.This is a required field and must be less than or equal to 512 characters long.

        :param name: The name of this Placement.
        :type name: str
        """

        self._name = name

    @property
    def payment_approved(self):
        """Gets the payment_approved of this Placement.

        Whether payment was approved for this placement. This is a read-only field relevant only to publisher-paid placements.

        :return: The payment_approved of this Placement.
        :rtype: bool
        """
        return self._payment_approved

    @payment_approved.setter
    def payment_approved(self, payment_approved):
        """Sets the payment_approved of this Placement.

        Whether payment was approved for this placement. This is a read-only field relevant only to publisher-paid placements.

        :param payment_approved: The payment_approved of this Placement.
        :type payment_approved: bool
        """

        self._payment_approved = payment_approved

    @property
    def payment_source(self):
        """Gets the payment_source of this Placement.

        Payment source for this placement. This is a required field that is read-only after insertion.

        :return: The payment_source of this Placement.
        :rtype: str
        """
        return self._payment_source

    @payment_source.setter
    def payment_source(self, payment_source):
        """Sets the payment_source of this Placement.

        Payment source for this placement. This is a required field that is read-only after insertion.

        :param payment_source: The payment_source of this Placement.
        :type payment_source: str
        """
        allowed_values = ["PLACEMENT_AGENCY_PAID", "PLACEMENT_PUBLISHER_PAID"]  # noqa: E501
        if payment_source not in allowed_values:
            raise ValueError(
                "Invalid value for `payment_source` ({0}), must be one of {1}"
                .format(payment_source, allowed_values)
            )

        self._payment_source = payment_source

    @property
    def placement_group_id(self):
        """Gets the placement_group_id of this Placement.

        ID of this placement's group, if applicable.

        :return: The placement_group_id of this Placement.
        :rtype: str
        """
        return self._placement_group_id

    @placement_group_id.setter
    def placement_group_id(self, placement_group_id):
        """Sets the placement_group_id of this Placement.

        ID of this placement's group, if applicable.

        :param placement_group_id: The placement_group_id of this Placement.
        :type placement_group_id: str
        """

        self._placement_group_id = placement_group_id

    @property
    def placement_group_id_dimension_value(self):
        """Gets the placement_group_id_dimension_value of this Placement.


        :return: The placement_group_id_dimension_value of this Placement.
        :rtype: DimensionValue
        """
        return self._placement_group_id_dimension_value

    @placement_group_id_dimension_value.setter
    def placement_group_id_dimension_value(self, placement_group_id_dimension_value):
        """Sets the placement_group_id_dimension_value of this Placement.


        :param placement_group_id_dimension_value: The placement_group_id_dimension_value of this Placement.
        :type placement_group_id_dimension_value: DimensionValue
        """

        self._placement_group_id_dimension_value = placement_group_id_dimension_value

    @property
    def placement_strategy_id(self):
        """Gets the placement_strategy_id of this Placement.

        ID of the placement strategy assigned to this placement.

        :return: The placement_strategy_id of this Placement.
        :rtype: str
        """
        return self._placement_strategy_id

    @placement_strategy_id.setter
    def placement_strategy_id(self, placement_strategy_id):
        """Sets the placement_strategy_id of this Placement.

        ID of the placement strategy assigned to this placement.

        :param placement_strategy_id: The placement_strategy_id of this Placement.
        :type placement_strategy_id: str
        """

        self._placement_strategy_id = placement_strategy_id

    @property
    def pricing_schedule(self):
        """Gets the pricing_schedule of this Placement.


        :return: The pricing_schedule of this Placement.
        :rtype: PricingSchedule
        """
        return self._pricing_schedule

    @pricing_schedule.setter
    def pricing_schedule(self, pricing_schedule):
        """Sets the pricing_schedule of this Placement.


        :param pricing_schedule: The pricing_schedule of this Placement.
        :type pricing_schedule: PricingSchedule
        """

        self._pricing_schedule = pricing_schedule

    @property
    def primary(self):
        """Gets the primary of this Placement.

        Whether this placement is the primary placement of a roadblock (placement group). You cannot change this field from true to false. Setting this field to true will automatically set the primary field on the original primary placement of the roadblock to false, and it will automatically set the roadblock's primaryPlacementId field to the ID of this placement.

        :return: The primary of this Placement.
        :rtype: bool
        """
        return self._primary

    @primary.setter
    def primary(self, primary):
        """Sets the primary of this Placement.

        Whether this placement is the primary placement of a roadblock (placement group). You cannot change this field from true to false. Setting this field to true will automatically set the primary field on the original primary placement of the roadblock to false, and it will automatically set the roadblock's primaryPlacementId field to the ID of this placement.

        :param primary: The primary of this Placement.
        :type primary: bool
        """

        self._primary = primary

    @property
    def publisher_update_info(self):
        """Gets the publisher_update_info of this Placement.


        :return: The publisher_update_info of this Placement.
        :rtype: LastModifiedInfo
        """
        return self._publisher_update_info

    @publisher_update_info.setter
    def publisher_update_info(self, publisher_update_info):
        """Sets the publisher_update_info of this Placement.


        :param publisher_update_info: The publisher_update_info of this Placement.
        :type publisher_update_info: LastModifiedInfo
        """

        self._publisher_update_info = publisher_update_info

    @property
    def site_id(self):
        """Gets the site_id of this Placement.

        Site ID associated with this placement. On insert, you must set either this field or the directorySiteId field to specify the site associated with this placement. This is a required field that is read-only after insertion.

        :return: The site_id of this Placement.
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this Placement.

        Site ID associated with this placement. On insert, you must set either this field or the directorySiteId field to specify the site associated with this placement. This is a required field that is read-only after insertion.

        :param site_id: The site_id of this Placement.
        :type site_id: str
        """

        self._site_id = site_id

    @property
    def site_id_dimension_value(self):
        """Gets the site_id_dimension_value of this Placement.


        :return: The site_id_dimension_value of this Placement.
        :rtype: DimensionValue
        """
        return self._site_id_dimension_value

    @site_id_dimension_value.setter
    def site_id_dimension_value(self, site_id_dimension_value):
        """Sets the site_id_dimension_value of this Placement.


        :param site_id_dimension_value: The site_id_dimension_value of this Placement.
        :type site_id_dimension_value: DimensionValue
        """

        self._site_id_dimension_value = site_id_dimension_value

    @property
    def size(self):
        """Gets the size of this Placement.


        :return: The size of this Placement.
        :rtype: Size
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this Placement.


        :param size: The size of this Placement.
        :type size: Size
        """

        self._size = size

    @property
    def ssl_required(self):
        """Gets the ssl_required of this Placement.

        Whether creatives assigned to this placement must be SSL-compliant.

        :return: The ssl_required of this Placement.
        :rtype: bool
        """
        return self._ssl_required

    @ssl_required.setter
    def ssl_required(self, ssl_required):
        """Sets the ssl_required of this Placement.

        Whether creatives assigned to this placement must be SSL-compliant.

        :param ssl_required: The ssl_required of this Placement.
        :type ssl_required: bool
        """

        self._ssl_required = ssl_required

    @property
    def status(self):
        """Gets the status of this Placement.

        Third-party placement status.

        :return: The status of this Placement.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Placement.

        Third-party placement status.

        :param status: The status of this Placement.
        :type status: str
        """
        allowed_values = ["PENDING_REVIEW", "PAYMENT_ACCEPTED", "PAYMENT_REJECTED", "ACKNOWLEDGE_REJECTION", "ACKNOWLEDGE_ACCEPTANCE", "DRAFT"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def subaccount_id(self):
        """Gets the subaccount_id of this Placement.

        Subaccount ID of this placement. This field can be left blank.

        :return: The subaccount_id of this Placement.
        :rtype: str
        """
        return self._subaccount_id

    @subaccount_id.setter
    def subaccount_id(self, subaccount_id):
        """Sets the subaccount_id of this Placement.

        Subaccount ID of this placement. This field can be left blank.

        :param subaccount_id: The subaccount_id of this Placement.
        :type subaccount_id: str
        """

        self._subaccount_id = subaccount_id

    @property
    def tag_formats(self):
        """Gets the tag_formats of this Placement.

        Tag formats to generate for this placement. This field is required on insertion. Acceptable values are: - \"PLACEMENT_TAG_STANDARD\" - \"PLACEMENT_TAG_IFRAME_JAVASCRIPT\" - \"PLACEMENT_TAG_IFRAME_ILAYER\" - \"PLACEMENT_TAG_INTERNAL_REDIRECT\" - \"PLACEMENT_TAG_JAVASCRIPT\" - \"PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT\" - \"PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT\" - \"PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT\" - \"PLACEMENT_TAG_CLICK_COMMANDS\" - \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH\" - \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3\" - \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4\" - \"PLACEMENT_TAG_TRACKING\" - \"PLACEMENT_TAG_TRACKING_IFRAME\" - \"PLACEMENT_TAG_TRACKING_JAVASCRIPT\" 

        :return: The tag_formats of this Placement.
        :rtype: List[str]
        """
        return self._tag_formats

    @tag_formats.setter
    def tag_formats(self, tag_formats):
        """Sets the tag_formats of this Placement.

        Tag formats to generate for this placement. This field is required on insertion. Acceptable values are: - \"PLACEMENT_TAG_STANDARD\" - \"PLACEMENT_TAG_IFRAME_JAVASCRIPT\" - \"PLACEMENT_TAG_IFRAME_ILAYER\" - \"PLACEMENT_TAG_INTERNAL_REDIRECT\" - \"PLACEMENT_TAG_JAVASCRIPT\" - \"PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT\" - \"PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT\" - \"PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT\" - \"PLACEMENT_TAG_CLICK_COMMANDS\" - \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH\" - \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3\" - \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4\" - \"PLACEMENT_TAG_TRACKING\" - \"PLACEMENT_TAG_TRACKING_IFRAME\" - \"PLACEMENT_TAG_TRACKING_JAVASCRIPT\" 

        :param tag_formats: The tag_formats of this Placement.
        :type tag_formats: List[str]
        """
        allowed_values = ["PLACEMENT_TAG_STANDARD", "PLACEMENT_TAG_IFRAME_JAVASCRIPT", "PLACEMENT_TAG_IFRAME_ILAYER", "PLACEMENT_TAG_INTERNAL_REDIRECT", "PLACEMENT_TAG_JAVASCRIPT", "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT", "PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT", "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT", "PLACEMENT_TAG_CLICK_COMMANDS", "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH", "PLACEMENT_TAG_TRACKING", "PLACEMENT_TAG_TRACKING_IFRAME", "PLACEMENT_TAG_TRACKING_JAVASCRIPT", "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3", "PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY", "PLACEMENT_TAG_JAVASCRIPT_LEGACY", "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY", "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY", "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4", "PLACEMENT_TAG_TRACKING_THIRD_PARTY_MEASUREMENT"]  # noqa: E501
        if not set(tag_formats).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `tag_formats` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(tag_formats) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._tag_formats = tag_formats

    @property
    def tag_setting(self):
        """Gets the tag_setting of this Placement.


        :return: The tag_setting of this Placement.
        :rtype: TagSetting
        """
        return self._tag_setting

    @tag_setting.setter
    def tag_setting(self, tag_setting):
        """Sets the tag_setting of this Placement.


        :param tag_setting: The tag_setting of this Placement.
        :type tag_setting: TagSetting
        """

        self._tag_setting = tag_setting

    @property
    def video_active_view_opt_out(self):
        """Gets the video_active_view_opt_out of this Placement.

        Whether Verification and ActiveView are disabled for in-stream video creatives for this placement. The same setting videoActiveViewOptOut exists on the site level -- the opt out occurs if either of these settings are true. These settings are distinct from DirectorySites.settings.activeViewOptOut or Sites.siteSettings.activeViewOptOut which only apply to display ads. However, Accounts.activeViewOptOut opts out both video traffic, as well as display ads, from Verification and ActiveView.

        :return: The video_active_view_opt_out of this Placement.
        :rtype: bool
        """
        return self._video_active_view_opt_out

    @video_active_view_opt_out.setter
    def video_active_view_opt_out(self, video_active_view_opt_out):
        """Sets the video_active_view_opt_out of this Placement.

        Whether Verification and ActiveView are disabled for in-stream video creatives for this placement. The same setting videoActiveViewOptOut exists on the site level -- the opt out occurs if either of these settings are true. These settings are distinct from DirectorySites.settings.activeViewOptOut or Sites.siteSettings.activeViewOptOut which only apply to display ads. However, Accounts.activeViewOptOut opts out both video traffic, as well as display ads, from Verification and ActiveView.

        :param video_active_view_opt_out: The video_active_view_opt_out of this Placement.
        :type video_active_view_opt_out: bool
        """

        self._video_active_view_opt_out = video_active_view_opt_out

    @property
    def video_settings(self):
        """Gets the video_settings of this Placement.


        :return: The video_settings of this Placement.
        :rtype: VideoSettings
        """
        return self._video_settings

    @video_settings.setter
    def video_settings(self, video_settings):
        """Sets the video_settings of this Placement.


        :param video_settings: The video_settings of this Placement.
        :type video_settings: VideoSettings
        """

        self._video_settings = video_settings

    @property
    def vpaid_adapter_choice(self):
        """Gets the vpaid_adapter_choice of this Placement.

        VPAID adapter setting for this placement. Controls which VPAID format the measurement adapter will use for in-stream video creatives assigned to this placement. *Note:* Flash is no longer supported. This field now defaults to HTML5 when the following values are provided: FLASH, BOTH.

        :return: The vpaid_adapter_choice of this Placement.
        :rtype: str
        """
        return self._vpaid_adapter_choice

    @vpaid_adapter_choice.setter
    def vpaid_adapter_choice(self, vpaid_adapter_choice):
        """Sets the vpaid_adapter_choice of this Placement.

        VPAID adapter setting for this placement. Controls which VPAID format the measurement adapter will use for in-stream video creatives assigned to this placement. *Note:* Flash is no longer supported. This field now defaults to HTML5 when the following values are provided: FLASH, BOTH.

        :param vpaid_adapter_choice: The vpaid_adapter_choice of this Placement.
        :type vpaid_adapter_choice: str
        """
        allowed_values = ["DEFAULT", "FLASH", "HTML5", "BOTH"]  # noqa: E501
        if vpaid_adapter_choice not in allowed_values:
            raise ValueError(
                "Invalid value for `vpaid_adapter_choice` ({0}), must be one of {1}"
                .format(vpaid_adapter_choice, allowed_values)
            )

        self._vpaid_adapter_choice = vpaid_adapter_choice
