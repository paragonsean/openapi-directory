# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DynamicTargetingKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, name: str=None, object_id: str=None, object_type: str=None):
        """DynamicTargetingKey - a model defined in OpenAPI

        :param kind: The kind of this DynamicTargetingKey.
        :param name: The name of this DynamicTargetingKey.
        :param object_id: The object_id of this DynamicTargetingKey.
        :param object_type: The object_type of this DynamicTargetingKey.
        """
        self.openapi_types = {
            'kind': str,
            'name': str,
            'object_id': str,
            'object_type': str
        }

        self.attribute_map = {
            'kind': 'kind',
            'name': 'name',
            'object_id': 'objectId',
            'object_type': 'objectType'
        }

        self._kind = kind
        self._name = name
        self._object_id = object_id
        self._object_type = object_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DynamicTargetingKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DynamicTargetingKey of this DynamicTargetingKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this DynamicTargetingKey.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#dynamicTargetingKey\".

        :return: The kind of this DynamicTargetingKey.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this DynamicTargetingKey.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#dynamicTargetingKey\".

        :param kind: The kind of this DynamicTargetingKey.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this DynamicTargetingKey.

        Name of this dynamic targeting key. This is a required field. Must be less than 256 characters long and cannot contain commas. All characters are converted to lowercase.

        :return: The name of this DynamicTargetingKey.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DynamicTargetingKey.

        Name of this dynamic targeting key. This is a required field. Must be less than 256 characters long and cannot contain commas. All characters are converted to lowercase.

        :param name: The name of this DynamicTargetingKey.
        :type name: str
        """

        self._name = name

    @property
    def object_id(self):
        """Gets the object_id of this DynamicTargetingKey.

        ID of the object of this dynamic targeting key. This is a required field.

        :return: The object_id of this DynamicTargetingKey.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this DynamicTargetingKey.

        ID of the object of this dynamic targeting key. This is a required field.

        :param object_id: The object_id of this DynamicTargetingKey.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def object_type(self):
        """Gets the object_type of this DynamicTargetingKey.

        Type of the object of this dynamic targeting key. This is a required field.

        :return: The object_type of this DynamicTargetingKey.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this DynamicTargetingKey.

        Type of the object of this dynamic targeting key. This is a required field.

        :param object_type: The object_type of this DynamicTargetingKey.
        :type object_type: str
        """
        allowed_values = ["OBJECT_ADVERTISER", "OBJECT_AD", "OBJECT_CREATIVE", "OBJECT_PLACEMENT"]  # noqa: E501
        if object_type not in allowed_values:
            raise ValueError(
                "Invalid value for `object_type` ({0}), must be one of {1}"
                .format(object_type, allowed_values)
            )

        self._object_type = object_type
