# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_event_status import CustomEventStatus
from openapi_server import util


class CustomEventsBatchInsertResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, has_failures: bool=None, kind: str=None, status: List[CustomEventStatus]=None):
        """CustomEventsBatchInsertResponse - a model defined in OpenAPI

        :param has_failures: The has_failures of this CustomEventsBatchInsertResponse.
        :param kind: The kind of this CustomEventsBatchInsertResponse.
        :param status: The status of this CustomEventsBatchInsertResponse.
        """
        self.openapi_types = {
            'has_failures': bool,
            'kind': str,
            'status': List[CustomEventStatus]
        }

        self.attribute_map = {
            'has_failures': 'hasFailures',
            'kind': 'kind',
            'status': 'status'
        }

        self._has_failures = has_failures
        self._kind = kind
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomEventsBatchInsertResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomEventsBatchInsertResponse of this CustomEventsBatchInsertResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def has_failures(self):
        """Gets the has_failures of this CustomEventsBatchInsertResponse.

        Indicates that some or all custom events failed to insert.

        :return: The has_failures of this CustomEventsBatchInsertResponse.
        :rtype: bool
        """
        return self._has_failures

    @has_failures.setter
    def has_failures(self, has_failures):
        """Sets the has_failures of this CustomEventsBatchInsertResponse.

        Indicates that some or all custom events failed to insert.

        :param has_failures: The has_failures of this CustomEventsBatchInsertResponse.
        :type has_failures: bool
        """

        self._has_failures = has_failures

    @property
    def kind(self):
        """Gets the kind of this CustomEventsBatchInsertResponse.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#customEventsBatchInsertResponse\".

        :return: The kind of this CustomEventsBatchInsertResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this CustomEventsBatchInsertResponse.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#customEventsBatchInsertResponse\".

        :param kind: The kind of this CustomEventsBatchInsertResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def status(self):
        """Gets the status of this CustomEventsBatchInsertResponse.

        The insert status of each custom event. Statuses are returned in the same order that conversions are inserted.

        :return: The status of this CustomEventsBatchInsertResponse.
        :rtype: List[CustomEventStatus]
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CustomEventsBatchInsertResponse.

        The insert status of each custom event. Statuses are returned in the same order that conversions are inserted.

        :param status: The status of this CustomEventsBatchInsertResponse.
        :type status: List[CustomEventStatus]
        """

        self._status = status
