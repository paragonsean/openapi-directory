# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.optimization_activity import OptimizationActivity
from openapi_server import util


class CreativeOptimizationConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, optimization_activitys: List[OptimizationActivity]=None, optimization_model: str=None):
        """CreativeOptimizationConfiguration - a model defined in OpenAPI

        :param id: The id of this CreativeOptimizationConfiguration.
        :param name: The name of this CreativeOptimizationConfiguration.
        :param optimization_activitys: The optimization_activitys of this CreativeOptimizationConfiguration.
        :param optimization_model: The optimization_model of this CreativeOptimizationConfiguration.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'optimization_activitys': List[OptimizationActivity],
            'optimization_model': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'optimization_activitys': 'optimizationActivitys',
            'optimization_model': 'optimizationModel'
        }

        self._id = id
        self._name = name
        self._optimization_activitys = optimization_activitys
        self._optimization_model = optimization_model

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreativeOptimizationConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreativeOptimizationConfiguration of this CreativeOptimizationConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CreativeOptimizationConfiguration.

        ID of this creative optimization config. This field is auto-generated when the campaign is inserted or updated. It can be null for existing campaigns.

        :return: The id of this CreativeOptimizationConfiguration.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreativeOptimizationConfiguration.

        ID of this creative optimization config. This field is auto-generated when the campaign is inserted or updated. It can be null for existing campaigns.

        :param id: The id of this CreativeOptimizationConfiguration.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this CreativeOptimizationConfiguration.

        Name of this creative optimization config. This is a required field and must be less than 129 characters long.

        :return: The name of this CreativeOptimizationConfiguration.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreativeOptimizationConfiguration.

        Name of this creative optimization config. This is a required field and must be less than 129 characters long.

        :param name: The name of this CreativeOptimizationConfiguration.
        :type name: str
        """

        self._name = name

    @property
    def optimization_activitys(self):
        """Gets the optimization_activitys of this CreativeOptimizationConfiguration.

        List of optimization activities associated with this configuration.

        :return: The optimization_activitys of this CreativeOptimizationConfiguration.
        :rtype: List[OptimizationActivity]
        """
        return self._optimization_activitys

    @optimization_activitys.setter
    def optimization_activitys(self, optimization_activitys):
        """Sets the optimization_activitys of this CreativeOptimizationConfiguration.

        List of optimization activities associated with this configuration.

        :param optimization_activitys: The optimization_activitys of this CreativeOptimizationConfiguration.
        :type optimization_activitys: List[OptimizationActivity]
        """

        self._optimization_activitys = optimization_activitys

    @property
    def optimization_model(self):
        """Gets the optimization_model of this CreativeOptimizationConfiguration.

        Optimization model for this configuration.

        :return: The optimization_model of this CreativeOptimizationConfiguration.
        :rtype: str
        """
        return self._optimization_model

    @optimization_model.setter
    def optimization_model(self, optimization_model):
        """Sets the optimization_model of this CreativeOptimizationConfiguration.

        Optimization model for this configuration.

        :param optimization_model: The optimization_model of this CreativeOptimizationConfiguration.
        :type optimization_model: str
        """
        allowed_values = ["CLICK", "POST_CLICK", "POST_IMPRESSION", "POST_CLICK_AND_IMPRESSION", "VIDEO_COMPLETION"]  # noqa: E501
        if optimization_model not in allowed_values:
            raise ValueError(
                "Invalid value for `optimization_model` ({0}), must be one of {1}"
                .format(optimization_model, allowed_values)
            )

        self._optimization_model = optimization_model
