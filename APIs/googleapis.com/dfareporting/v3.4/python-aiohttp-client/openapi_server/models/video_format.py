# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.size import Size
from openapi_server import util


class VideoFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_type: str=None, id: int=None, kind: str=None, resolution: Size=None, target_bit_rate: int=None):
        """VideoFormat - a model defined in OpenAPI

        :param file_type: The file_type of this VideoFormat.
        :param id: The id of this VideoFormat.
        :param kind: The kind of this VideoFormat.
        :param resolution: The resolution of this VideoFormat.
        :param target_bit_rate: The target_bit_rate of this VideoFormat.
        """
        self.openapi_types = {
            'file_type': str,
            'id': int,
            'kind': str,
            'resolution': Size,
            'target_bit_rate': int
        }

        self.attribute_map = {
            'file_type': 'fileType',
            'id': 'id',
            'kind': 'kind',
            'resolution': 'resolution',
            'target_bit_rate': 'targetBitRate'
        }

        self._file_type = file_type
        self._id = id
        self._kind = kind
        self._resolution = resolution
        self._target_bit_rate = target_bit_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoFormat of this VideoFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_type(self):
        """Gets the file_type of this VideoFormat.

        File type of the video format.

        :return: The file_type of this VideoFormat.
        :rtype: str
        """
        return self._file_type

    @file_type.setter
    def file_type(self, file_type):
        """Sets the file_type of this VideoFormat.

        File type of the video format.

        :param file_type: The file_type of this VideoFormat.
        :type file_type: str
        """
        allowed_values = ["FLV", "THREEGPP", "MP4", "WEBM", "M3U8"]  # noqa: E501
        if file_type not in allowed_values:
            raise ValueError(
                "Invalid value for `file_type` ({0}), must be one of {1}"
                .format(file_type, allowed_values)
            )

        self._file_type = file_type

    @property
    def id(self):
        """Gets the id of this VideoFormat.

        ID of the video format.

        :return: The id of this VideoFormat.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VideoFormat.

        ID of the video format.

        :param id: The id of this VideoFormat.
        :type id: int
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this VideoFormat.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#videoFormat\".

        :return: The kind of this VideoFormat.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this VideoFormat.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#videoFormat\".

        :param kind: The kind of this VideoFormat.
        :type kind: str
        """

        self._kind = kind

    @property
    def resolution(self):
        """Gets the resolution of this VideoFormat.


        :return: The resolution of this VideoFormat.
        :rtype: Size
        """
        return self._resolution

    @resolution.setter
    def resolution(self, resolution):
        """Sets the resolution of this VideoFormat.


        :param resolution: The resolution of this VideoFormat.
        :type resolution: Size
        """

        self._resolution = resolution

    @property
    def target_bit_rate(self):
        """Gets the target_bit_rate of this VideoFormat.

        The target bit rate of this video format.

        :return: The target_bit_rate of this VideoFormat.
        :rtype: int
        """
        return self._target_bit_rate

    @target_bit_rate.setter
    def target_bit_rate(self, target_bit_rate):
        """Sets the target_bit_rate of this VideoFormat.

        The target bit rate of this video format.

        :param target_bit_rate: The target_bit_rate of this VideoFormat.
        :type target_bit_rate: int
        """

        self._target_bit_rate = target_bit_rate
