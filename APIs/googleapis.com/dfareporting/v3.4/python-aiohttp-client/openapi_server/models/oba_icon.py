# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.size import Size
from openapi_server import util


class ObaIcon(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, icon_click_through_url: str=None, icon_click_tracking_url: str=None, icon_view_tracking_url: str=None, program: str=None, resource_url: str=None, size: Size=None, x_position: str=None, y_position: str=None):
        """ObaIcon - a model defined in OpenAPI

        :param icon_click_through_url: The icon_click_through_url of this ObaIcon.
        :param icon_click_tracking_url: The icon_click_tracking_url of this ObaIcon.
        :param icon_view_tracking_url: The icon_view_tracking_url of this ObaIcon.
        :param program: The program of this ObaIcon.
        :param resource_url: The resource_url of this ObaIcon.
        :param size: The size of this ObaIcon.
        :param x_position: The x_position of this ObaIcon.
        :param y_position: The y_position of this ObaIcon.
        """
        self.openapi_types = {
            'icon_click_through_url': str,
            'icon_click_tracking_url': str,
            'icon_view_tracking_url': str,
            'program': str,
            'resource_url': str,
            'size': Size,
            'x_position': str,
            'y_position': str
        }

        self.attribute_map = {
            'icon_click_through_url': 'iconClickThroughUrl',
            'icon_click_tracking_url': 'iconClickTrackingUrl',
            'icon_view_tracking_url': 'iconViewTrackingUrl',
            'program': 'program',
            'resource_url': 'resourceUrl',
            'size': 'size',
            'x_position': 'xPosition',
            'y_position': 'yPosition'
        }

        self._icon_click_through_url = icon_click_through_url
        self._icon_click_tracking_url = icon_click_tracking_url
        self._icon_view_tracking_url = icon_view_tracking_url
        self._program = program
        self._resource_url = resource_url
        self._size = size
        self._x_position = x_position
        self._y_position = y_position

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObaIcon':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ObaIcon of this ObaIcon.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def icon_click_through_url(self):
        """Gets the icon_click_through_url of this ObaIcon.

        URL to redirect to when an OBA icon is clicked.

        :return: The icon_click_through_url of this ObaIcon.
        :rtype: str
        """
        return self._icon_click_through_url

    @icon_click_through_url.setter
    def icon_click_through_url(self, icon_click_through_url):
        """Sets the icon_click_through_url of this ObaIcon.

        URL to redirect to when an OBA icon is clicked.

        :param icon_click_through_url: The icon_click_through_url of this ObaIcon.
        :type icon_click_through_url: str
        """

        self._icon_click_through_url = icon_click_through_url

    @property
    def icon_click_tracking_url(self):
        """Gets the icon_click_tracking_url of this ObaIcon.

        URL to track click when an OBA icon is clicked.

        :return: The icon_click_tracking_url of this ObaIcon.
        :rtype: str
        """
        return self._icon_click_tracking_url

    @icon_click_tracking_url.setter
    def icon_click_tracking_url(self, icon_click_tracking_url):
        """Sets the icon_click_tracking_url of this ObaIcon.

        URL to track click when an OBA icon is clicked.

        :param icon_click_tracking_url: The icon_click_tracking_url of this ObaIcon.
        :type icon_click_tracking_url: str
        """

        self._icon_click_tracking_url = icon_click_tracking_url

    @property
    def icon_view_tracking_url(self):
        """Gets the icon_view_tracking_url of this ObaIcon.

        URL to track view when an OBA icon is clicked.

        :return: The icon_view_tracking_url of this ObaIcon.
        :rtype: str
        """
        return self._icon_view_tracking_url

    @icon_view_tracking_url.setter
    def icon_view_tracking_url(self, icon_view_tracking_url):
        """Sets the icon_view_tracking_url of this ObaIcon.

        URL to track view when an OBA icon is clicked.

        :param icon_view_tracking_url: The icon_view_tracking_url of this ObaIcon.
        :type icon_view_tracking_url: str
        """

        self._icon_view_tracking_url = icon_view_tracking_url

    @property
    def program(self):
        """Gets the program of this ObaIcon.

        Identifies the industry initiative that the icon supports. For example, AdChoices.

        :return: The program of this ObaIcon.
        :rtype: str
        """
        return self._program

    @program.setter
    def program(self, program):
        """Sets the program of this ObaIcon.

        Identifies the industry initiative that the icon supports. For example, AdChoices.

        :param program: The program of this ObaIcon.
        :type program: str
        """

        self._program = program

    @property
    def resource_url(self):
        """Gets the resource_url of this ObaIcon.

        OBA icon resource URL. Campaign Manager only supports image and JavaScript icons. Learn more

        :return: The resource_url of this ObaIcon.
        :rtype: str
        """
        return self._resource_url

    @resource_url.setter
    def resource_url(self, resource_url):
        """Sets the resource_url of this ObaIcon.

        OBA icon resource URL. Campaign Manager only supports image and JavaScript icons. Learn more

        :param resource_url: The resource_url of this ObaIcon.
        :type resource_url: str
        """

        self._resource_url = resource_url

    @property
    def size(self):
        """Gets the size of this ObaIcon.


        :return: The size of this ObaIcon.
        :rtype: Size
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this ObaIcon.


        :param size: The size of this ObaIcon.
        :type size: Size
        """

        self._size = size

    @property
    def x_position(self):
        """Gets the x_position of this ObaIcon.

        OBA icon x coordinate position. Accepted values are left or right.

        :return: The x_position of this ObaIcon.
        :rtype: str
        """
        return self._x_position

    @x_position.setter
    def x_position(self, x_position):
        """Sets the x_position of this ObaIcon.

        OBA icon x coordinate position. Accepted values are left or right.

        :param x_position: The x_position of this ObaIcon.
        :type x_position: str
        """

        self._x_position = x_position

    @property
    def y_position(self):
        """Gets the y_position of this ObaIcon.

        OBA icon y coordinate position. Accepted values are top or bottom.

        :return: The y_position of this ObaIcon.
        :rtype: str
        """
        return self._y_position

    @y_position.setter
    def y_position(self, y_position):
        """Sets the y_position of this ObaIcon.

        OBA icon y coordinate position. Accepted values are top or bottom.

        :param y_position: The y_position of this ObaIcon.
        :type y_position: str
        """

        self._y_position = y_position
