# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operating_system import OperatingSystem
from openapi_server import util


class OperatingSystemVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, kind: str=None, major_version: str=None, minor_version: str=None, name: str=None, operating_system: OperatingSystem=None):
        """OperatingSystemVersion - a model defined in OpenAPI

        :param id: The id of this OperatingSystemVersion.
        :param kind: The kind of this OperatingSystemVersion.
        :param major_version: The major_version of this OperatingSystemVersion.
        :param minor_version: The minor_version of this OperatingSystemVersion.
        :param name: The name of this OperatingSystemVersion.
        :param operating_system: The operating_system of this OperatingSystemVersion.
        """
        self.openapi_types = {
            'id': str,
            'kind': str,
            'major_version': str,
            'minor_version': str,
            'name': str,
            'operating_system': OperatingSystem
        }

        self.attribute_map = {
            'id': 'id',
            'kind': 'kind',
            'major_version': 'majorVersion',
            'minor_version': 'minorVersion',
            'name': 'name',
            'operating_system': 'operatingSystem'
        }

        self._id = id
        self._kind = kind
        self._major_version = major_version
        self._minor_version = minor_version
        self._name = name
        self._operating_system = operating_system

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OperatingSystemVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OperatingSystemVersion of this OperatingSystemVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this OperatingSystemVersion.

        ID of this operating system version.

        :return: The id of this OperatingSystemVersion.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OperatingSystemVersion.

        ID of this operating system version.

        :param id: The id of this OperatingSystemVersion.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this OperatingSystemVersion.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystemVersion\".

        :return: The kind of this OperatingSystemVersion.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this OperatingSystemVersion.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystemVersion\".

        :param kind: The kind of this OperatingSystemVersion.
        :type kind: str
        """

        self._kind = kind

    @property
    def major_version(self):
        """Gets the major_version of this OperatingSystemVersion.

        Major version (leftmost number) of this operating system version.

        :return: The major_version of this OperatingSystemVersion.
        :rtype: str
        """
        return self._major_version

    @major_version.setter
    def major_version(self, major_version):
        """Sets the major_version of this OperatingSystemVersion.

        Major version (leftmost number) of this operating system version.

        :param major_version: The major_version of this OperatingSystemVersion.
        :type major_version: str
        """

        self._major_version = major_version

    @property
    def minor_version(self):
        """Gets the minor_version of this OperatingSystemVersion.

        Minor version (number after the first dot) of this operating system version.

        :return: The minor_version of this OperatingSystemVersion.
        :rtype: str
        """
        return self._minor_version

    @minor_version.setter
    def minor_version(self, minor_version):
        """Sets the minor_version of this OperatingSystemVersion.

        Minor version (number after the first dot) of this operating system version.

        :param minor_version: The minor_version of this OperatingSystemVersion.
        :type minor_version: str
        """

        self._minor_version = minor_version

    @property
    def name(self):
        """Gets the name of this OperatingSystemVersion.

        Name of this operating system version.

        :return: The name of this OperatingSystemVersion.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OperatingSystemVersion.

        Name of this operating system version.

        :param name: The name of this OperatingSystemVersion.
        :type name: str
        """

        self._name = name

    @property
    def operating_system(self):
        """Gets the operating_system of this OperatingSystemVersion.


        :return: The operating_system of this OperatingSystemVersion.
        :rtype: OperatingSystem
        """
        return self._operating_system

    @operating_system.setter
    def operating_system(self, operating_system):
        """Sets the operating_system of this OperatingSystemVersion.


        :param operating_system: The operating_system of this OperatingSystemVersion.
        :type operating_system: OperatingSystem
        """

        self._operating_system = operating_system
