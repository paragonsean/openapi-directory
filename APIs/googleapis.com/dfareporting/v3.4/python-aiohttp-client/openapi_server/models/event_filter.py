# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.path_report_dimension_value import PathReportDimensionValue
from openapi_server import util


class EventFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimension_filter: PathReportDimensionValue=None, kind: str=None):
        """EventFilter - a model defined in OpenAPI

        :param dimension_filter: The dimension_filter of this EventFilter.
        :param kind: The kind of this EventFilter.
        """
        self.openapi_types = {
            'dimension_filter': PathReportDimensionValue,
            'kind': str
        }

        self.attribute_map = {
            'dimension_filter': 'dimensionFilter',
            'kind': 'kind'
        }

        self._dimension_filter = dimension_filter
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventFilter of this EventFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimension_filter(self):
        """Gets the dimension_filter of this EventFilter.


        :return: The dimension_filter of this EventFilter.
        :rtype: PathReportDimensionValue
        """
        return self._dimension_filter

    @dimension_filter.setter
    def dimension_filter(self, dimension_filter):
        """Sets the dimension_filter of this EventFilter.


        :param dimension_filter: The dimension_filter of this EventFilter.
        :type dimension_filter: PathReportDimensionValue
        """

        self._dimension_filter = dimension_filter

    @property
    def kind(self):
        """Gets the kind of this EventFilter.

        The kind of resource this is, in this case dfareporting#eventFilter.

        :return: The kind of this EventFilter.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this EventFilter.

        The kind of resource this is, in this case dfareporting#eventFilter.

        :param kind: The kind of this EventFilter.
        :type kind: str
        """

        self._kind = kind
