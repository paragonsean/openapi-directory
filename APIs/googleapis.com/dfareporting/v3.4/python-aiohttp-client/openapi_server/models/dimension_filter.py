# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DimensionFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimension_name: str=None, kind: str=None, value: str=None):
        """DimensionFilter - a model defined in OpenAPI

        :param dimension_name: The dimension_name of this DimensionFilter.
        :param kind: The kind of this DimensionFilter.
        :param value: The value of this DimensionFilter.
        """
        self.openapi_types = {
            'dimension_name': str,
            'kind': str,
            'value': str
        }

        self.attribute_map = {
            'dimension_name': 'dimensionName',
            'kind': 'kind',
            'value': 'value'
        }

        self._dimension_name = dimension_name
        self._kind = kind
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DimensionFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DimensionFilter of this DimensionFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimension_name(self):
        """Gets the dimension_name of this DimensionFilter.

        The name of the dimension to filter.

        :return: The dimension_name of this DimensionFilter.
        :rtype: str
        """
        return self._dimension_name

    @dimension_name.setter
    def dimension_name(self, dimension_name):
        """Sets the dimension_name of this DimensionFilter.

        The name of the dimension to filter.

        :param dimension_name: The dimension_name of this DimensionFilter.
        :type dimension_name: str
        """

        self._dimension_name = dimension_name

    @property
    def kind(self):
        """Gets the kind of this DimensionFilter.

        The kind of resource this is, in this case dfareporting#dimensionFilter.

        :return: The kind of this DimensionFilter.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this DimensionFilter.

        The kind of resource this is, in this case dfareporting#dimensionFilter.

        :param kind: The kind of this DimensionFilter.
        :type kind: str
        """

        self._kind = kind

    @property
    def value(self):
        """Gets the value of this DimensionFilter.

        The value of the dimension to filter.

        :return: The value of this DimensionFilter.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this DimensionFilter.

        The value of the dimension to filter.

        :param value: The value of this DimensionFilter.
        :type value: str
        """

        self._value = value
