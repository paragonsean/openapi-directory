# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_user_profile import AccountUserProfile
from openapi_server import util


class AccountUserProfilesListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_user_profiles: List[AccountUserProfile]=None, kind: str=None, next_page_token: str=None):
        """AccountUserProfilesListResponse - a model defined in OpenAPI

        :param account_user_profiles: The account_user_profiles of this AccountUserProfilesListResponse.
        :param kind: The kind of this AccountUserProfilesListResponse.
        :param next_page_token: The next_page_token of this AccountUserProfilesListResponse.
        """
        self.openapi_types = {
            'account_user_profiles': List[AccountUserProfile],
            'kind': str,
            'next_page_token': str
        }

        self.attribute_map = {
            'account_user_profiles': 'accountUserProfiles',
            'kind': 'kind',
            'next_page_token': 'nextPageToken'
        }

        self._account_user_profiles = account_user_profiles
        self._kind = kind
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountUserProfilesListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountUserProfilesListResponse of this AccountUserProfilesListResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_user_profiles(self):
        """Gets the account_user_profiles of this AccountUserProfilesListResponse.

        Account user profile collection.

        :return: The account_user_profiles of this AccountUserProfilesListResponse.
        :rtype: List[AccountUserProfile]
        """
        return self._account_user_profiles

    @account_user_profiles.setter
    def account_user_profiles(self, account_user_profiles):
        """Sets the account_user_profiles of this AccountUserProfilesListResponse.

        Account user profile collection.

        :param account_user_profiles: The account_user_profiles of this AccountUserProfilesListResponse.
        :type account_user_profiles: List[AccountUserProfile]
        """

        self._account_user_profiles = account_user_profiles

    @property
    def kind(self):
        """Gets the kind of this AccountUserProfilesListResponse.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountUserProfilesListResponse\".

        :return: The kind of this AccountUserProfilesListResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this AccountUserProfilesListResponse.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountUserProfilesListResponse\".

        :param kind: The kind of this AccountUserProfilesListResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this AccountUserProfilesListResponse.

        Pagination token to be used for the next list operation.

        :return: The next_page_token of this AccountUserProfilesListResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this AccountUserProfilesListResponse.

        Pagination token to be used for the next list operation.

        :param next_page_token: The next_page_token of this AccountUserProfilesListResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
