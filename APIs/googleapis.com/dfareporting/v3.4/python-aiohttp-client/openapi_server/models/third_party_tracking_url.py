# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ThirdPartyTrackingUrl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, third_party_url_type: str=None, url: str=None):
        """ThirdPartyTrackingUrl - a model defined in OpenAPI

        :param third_party_url_type: The third_party_url_type of this ThirdPartyTrackingUrl.
        :param url: The url of this ThirdPartyTrackingUrl.
        """
        self.openapi_types = {
            'third_party_url_type': str,
            'url': str
        }

        self.attribute_map = {
            'third_party_url_type': 'thirdPartyUrlType',
            'url': 'url'
        }

        self._third_party_url_type = third_party_url_type
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ThirdPartyTrackingUrl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ThirdPartyTrackingUrl of this ThirdPartyTrackingUrl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def third_party_url_type(self):
        """Gets the third_party_url_type of this ThirdPartyTrackingUrl.

        Third-party URL type for in-stream video and in-stream audio creatives.

        :return: The third_party_url_type of this ThirdPartyTrackingUrl.
        :rtype: str
        """
        return self._third_party_url_type

    @third_party_url_type.setter
    def third_party_url_type(self, third_party_url_type):
        """Sets the third_party_url_type of this ThirdPartyTrackingUrl.

        Third-party URL type for in-stream video and in-stream audio creatives.

        :param third_party_url_type: The third_party_url_type of this ThirdPartyTrackingUrl.
        :type third_party_url_type: str
        """
        allowed_values = ["IMPRESSION", "CLICK_TRACKING", "VIDEO_START", "VIDEO_FIRST_QUARTILE", "VIDEO_MIDPOINT", "VIDEO_THIRD_QUARTILE", "VIDEO_COMPLETE", "VIDEO_MUTE", "VIDEO_PAUSE", "VIDEO_REWIND", "VIDEO_FULLSCREEN", "VIDEO_STOP", "VIDEO_CUSTOM", "SURVEY", "RICH_MEDIA_IMPRESSION", "RICH_MEDIA_RM_IMPRESSION", "RICH_MEDIA_BACKUP_IMPRESSION", "VIDEO_SKIP", "VIDEO_PROGRESS"]  # noqa: E501
        if third_party_url_type not in allowed_values:
            raise ValueError(
                "Invalid value for `third_party_url_type` ({0}), must be one of {1}"
                .format(third_party_url_type, allowed_values)
            )

        self._third_party_url_type = third_party_url_type

    @property
    def url(self):
        """Gets the url of this ThirdPartyTrackingUrl.

        URL for the specified third-party URL type.

        :return: The url of this ThirdPartyTrackingUrl.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ThirdPartyTrackingUrl.

        URL for the specified third-party URL type.

        :param url: The url of this ThirdPartyTrackingUrl.
        :type url: str
        """

        self._url = url
