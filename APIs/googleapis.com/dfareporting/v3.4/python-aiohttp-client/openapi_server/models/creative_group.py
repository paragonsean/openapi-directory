# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_value import DimensionValue
from openapi_server import util


class CreativeGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, advertiser_id: str=None, advertiser_id_dimension_value: DimensionValue=None, group_number: int=None, id: str=None, kind: str=None, name: str=None, subaccount_id: str=None):
        """CreativeGroup - a model defined in OpenAPI

        :param account_id: The account_id of this CreativeGroup.
        :param advertiser_id: The advertiser_id of this CreativeGroup.
        :param advertiser_id_dimension_value: The advertiser_id_dimension_value of this CreativeGroup.
        :param group_number: The group_number of this CreativeGroup.
        :param id: The id of this CreativeGroup.
        :param kind: The kind of this CreativeGroup.
        :param name: The name of this CreativeGroup.
        :param subaccount_id: The subaccount_id of this CreativeGroup.
        """
        self.openapi_types = {
            'account_id': str,
            'advertiser_id': str,
            'advertiser_id_dimension_value': DimensionValue,
            'group_number': int,
            'id': str,
            'kind': str,
            'name': str,
            'subaccount_id': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'advertiser_id': 'advertiserId',
            'advertiser_id_dimension_value': 'advertiserIdDimensionValue',
            'group_number': 'groupNumber',
            'id': 'id',
            'kind': 'kind',
            'name': 'name',
            'subaccount_id': 'subaccountId'
        }

        self._account_id = account_id
        self._advertiser_id = advertiser_id
        self._advertiser_id_dimension_value = advertiser_id_dimension_value
        self._group_number = group_number
        self._id = id
        self._kind = kind
        self._name = name
        self._subaccount_id = subaccount_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreativeGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreativeGroup of this CreativeGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this CreativeGroup.

        Account ID of this creative group. This is a read-only field that can be left blank.

        :return: The account_id of this CreativeGroup.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this CreativeGroup.

        Account ID of this creative group. This is a read-only field that can be left blank.

        :param account_id: The account_id of this CreativeGroup.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this CreativeGroup.

        Advertiser ID of this creative group. This is a required field on insertion.

        :return: The advertiser_id of this CreativeGroup.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this CreativeGroup.

        Advertiser ID of this creative group. This is a required field on insertion.

        :param advertiser_id: The advertiser_id of this CreativeGroup.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def advertiser_id_dimension_value(self):
        """Gets the advertiser_id_dimension_value of this CreativeGroup.


        :return: The advertiser_id_dimension_value of this CreativeGroup.
        :rtype: DimensionValue
        """
        return self._advertiser_id_dimension_value

    @advertiser_id_dimension_value.setter
    def advertiser_id_dimension_value(self, advertiser_id_dimension_value):
        """Sets the advertiser_id_dimension_value of this CreativeGroup.


        :param advertiser_id_dimension_value: The advertiser_id_dimension_value of this CreativeGroup.
        :type advertiser_id_dimension_value: DimensionValue
        """

        self._advertiser_id_dimension_value = advertiser_id_dimension_value

    @property
    def group_number(self):
        """Gets the group_number of this CreativeGroup.

        Subgroup of the creative group. Assign your creative groups to a subgroup in order to filter or manage them more easily. This field is required on insertion and is read-only after insertion. Acceptable values are 1 to 2, inclusive.

        :return: The group_number of this CreativeGroup.
        :rtype: int
        """
        return self._group_number

    @group_number.setter
    def group_number(self, group_number):
        """Sets the group_number of this CreativeGroup.

        Subgroup of the creative group. Assign your creative groups to a subgroup in order to filter or manage them more easily. This field is required on insertion and is read-only after insertion. Acceptable values are 1 to 2, inclusive.

        :param group_number: The group_number of this CreativeGroup.
        :type group_number: int
        """

        self._group_number = group_number

    @property
    def id(self):
        """Gets the id of this CreativeGroup.

        ID of this creative group. This is a read-only, auto-generated field.

        :return: The id of this CreativeGroup.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreativeGroup.

        ID of this creative group. This is a read-only, auto-generated field.

        :param id: The id of this CreativeGroup.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this CreativeGroup.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeGroup\".

        :return: The kind of this CreativeGroup.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this CreativeGroup.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeGroup\".

        :param kind: The kind of this CreativeGroup.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this CreativeGroup.

        Name of this creative group. This is a required field and must be less than 256 characters long and unique among creative groups of the same advertiser.

        :return: The name of this CreativeGroup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreativeGroup.

        Name of this creative group. This is a required field and must be less than 256 characters long and unique among creative groups of the same advertiser.

        :param name: The name of this CreativeGroup.
        :type name: str
        """

        self._name = name

    @property
    def subaccount_id(self):
        """Gets the subaccount_id of this CreativeGroup.

        Subaccount ID of this creative group. This is a read-only field that can be left blank.

        :return: The subaccount_id of this CreativeGroup.
        :rtype: str
        """
        return self._subaccount_id

    @subaccount_id.setter
    def subaccount_id(self, subaccount_id):
        """Sets the subaccount_id of this CreativeGroup.

        Subaccount ID of this creative group. This is a read-only field that can be left blank.

        :param subaccount_id: The subaccount_id of this CreativeGroup.
        :type subaccount_id: str
        """

        self._subaccount_id = subaccount_id
