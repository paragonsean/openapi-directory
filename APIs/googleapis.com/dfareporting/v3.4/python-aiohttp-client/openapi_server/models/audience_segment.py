# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AudienceSegment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allocation: int=None, id: str=None, name: str=None):
        """AudienceSegment - a model defined in OpenAPI

        :param allocation: The allocation of this AudienceSegment.
        :param id: The id of this AudienceSegment.
        :param name: The name of this AudienceSegment.
        """
        self.openapi_types = {
            'allocation': int,
            'id': str,
            'name': str
        }

        self.attribute_map = {
            'allocation': 'allocation',
            'id': 'id',
            'name': 'name'
        }

        self._allocation = allocation
        self._id = id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudienceSegment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudienceSegment of this AudienceSegment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allocation(self):
        """Gets the allocation of this AudienceSegment.

        Weight allocated to this segment. The weight assigned will be understood in proportion to the weights assigned to other segments in the same segment group. Acceptable values are 1 to 1000, inclusive.

        :return: The allocation of this AudienceSegment.
        :rtype: int
        """
        return self._allocation

    @allocation.setter
    def allocation(self, allocation):
        """Sets the allocation of this AudienceSegment.

        Weight allocated to this segment. The weight assigned will be understood in proportion to the weights assigned to other segments in the same segment group. Acceptable values are 1 to 1000, inclusive.

        :param allocation: The allocation of this AudienceSegment.
        :type allocation: int
        """

        self._allocation = allocation

    @property
    def id(self):
        """Gets the id of this AudienceSegment.

        ID of this audience segment. This is a read-only, auto-generated field.

        :return: The id of this AudienceSegment.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AudienceSegment.

        ID of this audience segment. This is a read-only, auto-generated field.

        :param id: The id of this AudienceSegment.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this AudienceSegment.

        Name of this audience segment. This is a required field and must be less than 65 characters long.

        :return: The name of this AudienceSegment.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AudienceSegment.

        Name of this audience segment. This is a required field and must be less than 65 characters long.

        :param name: The name of this AudienceSegment.
        :type name: str
        """

        self._name = name
