# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DateRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_date: date=None, kind: str=None, relative_date_range: str=None, start_date: date=None):
        """DateRange - a model defined in OpenAPI

        :param end_date: The end_date of this DateRange.
        :param kind: The kind of this DateRange.
        :param relative_date_range: The relative_date_range of this DateRange.
        :param start_date: The start_date of this DateRange.
        """
        self.openapi_types = {
            'end_date': date,
            'kind': str,
            'relative_date_range': str,
            'start_date': date
        }

        self.attribute_map = {
            'end_date': 'endDate',
            'kind': 'kind',
            'relative_date_range': 'relativeDateRange',
            'start_date': 'startDate'
        }

        self._end_date = end_date
        self._kind = kind
        self._relative_date_range = relative_date_range
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DateRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DateRange of this DateRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_date(self):
        """Gets the end_date of this DateRange.


        :return: The end_date of this DateRange.
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this DateRange.


        :param end_date: The end_date of this DateRange.
        :type end_date: date
        """

        self._end_date = end_date

    @property
    def kind(self):
        """Gets the kind of this DateRange.

        The kind of resource this is, in this case dfareporting#dateRange.

        :return: The kind of this DateRange.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this DateRange.

        The kind of resource this is, in this case dfareporting#dateRange.

        :param kind: The kind of this DateRange.
        :type kind: str
        """

        self._kind = kind

    @property
    def relative_date_range(self):
        """Gets the relative_date_range of this DateRange.

        The date range relative to the date of when the report is run.

        :return: The relative_date_range of this DateRange.
        :rtype: str
        """
        return self._relative_date_range

    @relative_date_range.setter
    def relative_date_range(self, relative_date_range):
        """Sets the relative_date_range of this DateRange.

        The date range relative to the date of when the report is run.

        :param relative_date_range: The relative_date_range of this DateRange.
        :type relative_date_range: str
        """
        allowed_values = ["TODAY", "YESTERDAY", "WEEK_TO_DATE", "MONTH_TO_DATE", "QUARTER_TO_DATE", "YEAR_TO_DATE", "PREVIOUS_WEEK", "PREVIOUS_MONTH", "PREVIOUS_QUARTER", "PREVIOUS_YEAR", "LAST_7_DAYS", "LAST_30_DAYS", "LAST_90_DAYS", "LAST_365_DAYS", "LAST_24_MONTHS", "LAST_14_DAYS", "LAST_60_DAYS"]  # noqa: E501
        if relative_date_range not in allowed_values:
            raise ValueError(
                "Invalid value for `relative_date_range` ({0}), must be one of {1}"
                .format(relative_date_range, allowed_values)
            )

        self._relative_date_range = relative_date_range

    @property
    def start_date(self):
        """Gets the start_date of this DateRange.


        :return: The start_date of this DateRange.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this DateRange.


        :param start_date: The start_date of this DateRange.
        :type start_date: date
        """

        self._start_date = start_date
