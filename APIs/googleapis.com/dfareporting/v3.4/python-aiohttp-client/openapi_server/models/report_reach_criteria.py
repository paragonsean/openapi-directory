# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activities import Activities
from openapi_server.models.custom_rich_media_events import CustomRichMediaEvents
from openapi_server.models.date_range import DateRange
from openapi_server.models.dimension_value import DimensionValue
from openapi_server.models.sorted_dimension import SortedDimension
from openapi_server import util


class ReportReachCriteria(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activities: Activities=None, custom_rich_media_events: CustomRichMediaEvents=None, date_range: DateRange=None, dimension_filters: List[DimensionValue]=None, dimensions: List[SortedDimension]=None, enable_all_dimension_combinations: bool=None, metric_names: List[str]=None, reach_by_frequency_metric_names: List[str]=None):
        """ReportReachCriteria - a model defined in OpenAPI

        :param activities: The activities of this ReportReachCriteria.
        :param custom_rich_media_events: The custom_rich_media_events of this ReportReachCriteria.
        :param date_range: The date_range of this ReportReachCriteria.
        :param dimension_filters: The dimension_filters of this ReportReachCriteria.
        :param dimensions: The dimensions of this ReportReachCriteria.
        :param enable_all_dimension_combinations: The enable_all_dimension_combinations of this ReportReachCriteria.
        :param metric_names: The metric_names of this ReportReachCriteria.
        :param reach_by_frequency_metric_names: The reach_by_frequency_metric_names of this ReportReachCriteria.
        """
        self.openapi_types = {
            'activities': Activities,
            'custom_rich_media_events': CustomRichMediaEvents,
            'date_range': DateRange,
            'dimension_filters': List[DimensionValue],
            'dimensions': List[SortedDimension],
            'enable_all_dimension_combinations': bool,
            'metric_names': List[str],
            'reach_by_frequency_metric_names': List[str]
        }

        self.attribute_map = {
            'activities': 'activities',
            'custom_rich_media_events': 'customRichMediaEvents',
            'date_range': 'dateRange',
            'dimension_filters': 'dimensionFilters',
            'dimensions': 'dimensions',
            'enable_all_dimension_combinations': 'enableAllDimensionCombinations',
            'metric_names': 'metricNames',
            'reach_by_frequency_metric_names': 'reachByFrequencyMetricNames'
        }

        self._activities = activities
        self._custom_rich_media_events = custom_rich_media_events
        self._date_range = date_range
        self._dimension_filters = dimension_filters
        self._dimensions = dimensions
        self._enable_all_dimension_combinations = enable_all_dimension_combinations
        self._metric_names = metric_names
        self._reach_by_frequency_metric_names = reach_by_frequency_metric_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportReachCriteria':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Report_reachCriteria of this ReportReachCriteria.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activities(self):
        """Gets the activities of this ReportReachCriteria.


        :return: The activities of this ReportReachCriteria.
        :rtype: Activities
        """
        return self._activities

    @activities.setter
    def activities(self, activities):
        """Sets the activities of this ReportReachCriteria.


        :param activities: The activities of this ReportReachCriteria.
        :type activities: Activities
        """

        self._activities = activities

    @property
    def custom_rich_media_events(self):
        """Gets the custom_rich_media_events of this ReportReachCriteria.


        :return: The custom_rich_media_events of this ReportReachCriteria.
        :rtype: CustomRichMediaEvents
        """
        return self._custom_rich_media_events

    @custom_rich_media_events.setter
    def custom_rich_media_events(self, custom_rich_media_events):
        """Sets the custom_rich_media_events of this ReportReachCriteria.


        :param custom_rich_media_events: The custom_rich_media_events of this ReportReachCriteria.
        :type custom_rich_media_events: CustomRichMediaEvents
        """

        self._custom_rich_media_events = custom_rich_media_events

    @property
    def date_range(self):
        """Gets the date_range of this ReportReachCriteria.


        :return: The date_range of this ReportReachCriteria.
        :rtype: DateRange
        """
        return self._date_range

    @date_range.setter
    def date_range(self, date_range):
        """Sets the date_range of this ReportReachCriteria.


        :param date_range: The date_range of this ReportReachCriteria.
        :type date_range: DateRange
        """

        self._date_range = date_range

    @property
    def dimension_filters(self):
        """Gets the dimension_filters of this ReportReachCriteria.

        The list of filters on which dimensions are filtered. Filters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.

        :return: The dimension_filters of this ReportReachCriteria.
        :rtype: List[DimensionValue]
        """
        return self._dimension_filters

    @dimension_filters.setter
    def dimension_filters(self, dimension_filters):
        """Sets the dimension_filters of this ReportReachCriteria.

        The list of filters on which dimensions are filtered. Filters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.

        :param dimension_filters: The dimension_filters of this ReportReachCriteria.
        :type dimension_filters: List[DimensionValue]
        """

        self._dimension_filters = dimension_filters

    @property
    def dimensions(self):
        """Gets the dimensions of this ReportReachCriteria.

        The list of dimensions the report should include.

        :return: The dimensions of this ReportReachCriteria.
        :rtype: List[SortedDimension]
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this ReportReachCriteria.

        The list of dimensions the report should include.

        :param dimensions: The dimensions of this ReportReachCriteria.
        :type dimensions: List[SortedDimension]
        """

        self._dimensions = dimensions

    @property
    def enable_all_dimension_combinations(self):
        """Gets the enable_all_dimension_combinations of this ReportReachCriteria.

        Whether to enable all reach dimension combinations in the report. Defaults to false. If enabled, the date range of the report should be within the last 42 days.

        :return: The enable_all_dimension_combinations of this ReportReachCriteria.
        :rtype: bool
        """
        return self._enable_all_dimension_combinations

    @enable_all_dimension_combinations.setter
    def enable_all_dimension_combinations(self, enable_all_dimension_combinations):
        """Sets the enable_all_dimension_combinations of this ReportReachCriteria.

        Whether to enable all reach dimension combinations in the report. Defaults to false. If enabled, the date range of the report should be within the last 42 days.

        :param enable_all_dimension_combinations: The enable_all_dimension_combinations of this ReportReachCriteria.
        :type enable_all_dimension_combinations: bool
        """

        self._enable_all_dimension_combinations = enable_all_dimension_combinations

    @property
    def metric_names(self):
        """Gets the metric_names of this ReportReachCriteria.

        The list of names of metrics the report should include.

        :return: The metric_names of this ReportReachCriteria.
        :rtype: List[str]
        """
        return self._metric_names

    @metric_names.setter
    def metric_names(self, metric_names):
        """Sets the metric_names of this ReportReachCriteria.

        The list of names of metrics the report should include.

        :param metric_names: The metric_names of this ReportReachCriteria.
        :type metric_names: List[str]
        """

        self._metric_names = metric_names

    @property
    def reach_by_frequency_metric_names(self):
        """Gets the reach_by_frequency_metric_names of this ReportReachCriteria.

        The list of names of Reach By Frequency metrics the report should include.

        :return: The reach_by_frequency_metric_names of this ReportReachCriteria.
        :rtype: List[str]
        """
        return self._reach_by_frequency_metric_names

    @reach_by_frequency_metric_names.setter
    def reach_by_frequency_metric_names(self, reach_by_frequency_metric_names):
        """Sets the reach_by_frequency_metric_names of this ReportReachCriteria.

        The list of names of Reach By Frequency metrics the report should include.

        :param reach_by_frequency_metric_names: The reach_by_frequency_metric_names of this ReportReachCriteria.
        :type reach_by_frequency_metric_names: List[str]
        """

        self._reach_by_frequency_metric_names = reach_by_frequency_metric_names
