# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.day_part_targeting import DayPartTargeting
from openapi_server.models.dimension_value import DimensionValue
from openapi_server.models.geo_targeting import GeoTargeting
from openapi_server.models.key_value_targeting_expression import KeyValueTargetingExpression
from openapi_server.models.language_targeting import LanguageTargeting
from openapi_server.models.list_targeting_expression import ListTargetingExpression
from openapi_server.models.technology_targeting import TechnologyTargeting
from openapi_server import util


class TargetingTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, advertiser_id: str=None, advertiser_id_dimension_value: DimensionValue=None, day_part_targeting: DayPartTargeting=None, geo_targeting: GeoTargeting=None, id: str=None, key_value_targeting_expression: KeyValueTargetingExpression=None, kind: str=None, language_targeting: LanguageTargeting=None, list_targeting_expression: ListTargetingExpression=None, name: str=None, subaccount_id: str=None, technology_targeting: TechnologyTargeting=None):
        """TargetingTemplate - a model defined in OpenAPI

        :param account_id: The account_id of this TargetingTemplate.
        :param advertiser_id: The advertiser_id of this TargetingTemplate.
        :param advertiser_id_dimension_value: The advertiser_id_dimension_value of this TargetingTemplate.
        :param day_part_targeting: The day_part_targeting of this TargetingTemplate.
        :param geo_targeting: The geo_targeting of this TargetingTemplate.
        :param id: The id of this TargetingTemplate.
        :param key_value_targeting_expression: The key_value_targeting_expression of this TargetingTemplate.
        :param kind: The kind of this TargetingTemplate.
        :param language_targeting: The language_targeting of this TargetingTemplate.
        :param list_targeting_expression: The list_targeting_expression of this TargetingTemplate.
        :param name: The name of this TargetingTemplate.
        :param subaccount_id: The subaccount_id of this TargetingTemplate.
        :param technology_targeting: The technology_targeting of this TargetingTemplate.
        """
        self.openapi_types = {
            'account_id': str,
            'advertiser_id': str,
            'advertiser_id_dimension_value': DimensionValue,
            'day_part_targeting': DayPartTargeting,
            'geo_targeting': GeoTargeting,
            'id': str,
            'key_value_targeting_expression': KeyValueTargetingExpression,
            'kind': str,
            'language_targeting': LanguageTargeting,
            'list_targeting_expression': ListTargetingExpression,
            'name': str,
            'subaccount_id': str,
            'technology_targeting': TechnologyTargeting
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'advertiser_id': 'advertiserId',
            'advertiser_id_dimension_value': 'advertiserIdDimensionValue',
            'day_part_targeting': 'dayPartTargeting',
            'geo_targeting': 'geoTargeting',
            'id': 'id',
            'key_value_targeting_expression': 'keyValueTargetingExpression',
            'kind': 'kind',
            'language_targeting': 'languageTargeting',
            'list_targeting_expression': 'listTargetingExpression',
            'name': 'name',
            'subaccount_id': 'subaccountId',
            'technology_targeting': 'technologyTargeting'
        }

        self._account_id = account_id
        self._advertiser_id = advertiser_id
        self._advertiser_id_dimension_value = advertiser_id_dimension_value
        self._day_part_targeting = day_part_targeting
        self._geo_targeting = geo_targeting
        self._id = id
        self._key_value_targeting_expression = key_value_targeting_expression
        self._kind = kind
        self._language_targeting = language_targeting
        self._list_targeting_expression = list_targeting_expression
        self._name = name
        self._subaccount_id = subaccount_id
        self._technology_targeting = technology_targeting

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TargetingTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TargetingTemplate of this TargetingTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this TargetingTemplate.

        Account ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert.

        :return: The account_id of this TargetingTemplate.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this TargetingTemplate.

        Account ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert.

        :param account_id: The account_id of this TargetingTemplate.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this TargetingTemplate.

        Advertiser ID of this targeting template. This is a required field on insert and is read-only after insert.

        :return: The advertiser_id of this TargetingTemplate.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this TargetingTemplate.

        Advertiser ID of this targeting template. This is a required field on insert and is read-only after insert.

        :param advertiser_id: The advertiser_id of this TargetingTemplate.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def advertiser_id_dimension_value(self):
        """Gets the advertiser_id_dimension_value of this TargetingTemplate.


        :return: The advertiser_id_dimension_value of this TargetingTemplate.
        :rtype: DimensionValue
        """
        return self._advertiser_id_dimension_value

    @advertiser_id_dimension_value.setter
    def advertiser_id_dimension_value(self, advertiser_id_dimension_value):
        """Sets the advertiser_id_dimension_value of this TargetingTemplate.


        :param advertiser_id_dimension_value: The advertiser_id_dimension_value of this TargetingTemplate.
        :type advertiser_id_dimension_value: DimensionValue
        """

        self._advertiser_id_dimension_value = advertiser_id_dimension_value

    @property
    def day_part_targeting(self):
        """Gets the day_part_targeting of this TargetingTemplate.


        :return: The day_part_targeting of this TargetingTemplate.
        :rtype: DayPartTargeting
        """
        return self._day_part_targeting

    @day_part_targeting.setter
    def day_part_targeting(self, day_part_targeting):
        """Sets the day_part_targeting of this TargetingTemplate.


        :param day_part_targeting: The day_part_targeting of this TargetingTemplate.
        :type day_part_targeting: DayPartTargeting
        """

        self._day_part_targeting = day_part_targeting

    @property
    def geo_targeting(self):
        """Gets the geo_targeting of this TargetingTemplate.


        :return: The geo_targeting of this TargetingTemplate.
        :rtype: GeoTargeting
        """
        return self._geo_targeting

    @geo_targeting.setter
    def geo_targeting(self, geo_targeting):
        """Sets the geo_targeting of this TargetingTemplate.


        :param geo_targeting: The geo_targeting of this TargetingTemplate.
        :type geo_targeting: GeoTargeting
        """

        self._geo_targeting = geo_targeting

    @property
    def id(self):
        """Gets the id of this TargetingTemplate.

        ID of this targeting template. This is a read-only, auto-generated field.

        :return: The id of this TargetingTemplate.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TargetingTemplate.

        ID of this targeting template. This is a read-only, auto-generated field.

        :param id: The id of this TargetingTemplate.
        :type id: str
        """

        self._id = id

    @property
    def key_value_targeting_expression(self):
        """Gets the key_value_targeting_expression of this TargetingTemplate.


        :return: The key_value_targeting_expression of this TargetingTemplate.
        :rtype: KeyValueTargetingExpression
        """
        return self._key_value_targeting_expression

    @key_value_targeting_expression.setter
    def key_value_targeting_expression(self, key_value_targeting_expression):
        """Sets the key_value_targeting_expression of this TargetingTemplate.


        :param key_value_targeting_expression: The key_value_targeting_expression of this TargetingTemplate.
        :type key_value_targeting_expression: KeyValueTargetingExpression
        """

        self._key_value_targeting_expression = key_value_targeting_expression

    @property
    def kind(self):
        """Gets the kind of this TargetingTemplate.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#targetingTemplate\".

        :return: The kind of this TargetingTemplate.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this TargetingTemplate.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#targetingTemplate\".

        :param kind: The kind of this TargetingTemplate.
        :type kind: str
        """

        self._kind = kind

    @property
    def language_targeting(self):
        """Gets the language_targeting of this TargetingTemplate.


        :return: The language_targeting of this TargetingTemplate.
        :rtype: LanguageTargeting
        """
        return self._language_targeting

    @language_targeting.setter
    def language_targeting(self, language_targeting):
        """Sets the language_targeting of this TargetingTemplate.


        :param language_targeting: The language_targeting of this TargetingTemplate.
        :type language_targeting: LanguageTargeting
        """

        self._language_targeting = language_targeting

    @property
    def list_targeting_expression(self):
        """Gets the list_targeting_expression of this TargetingTemplate.


        :return: The list_targeting_expression of this TargetingTemplate.
        :rtype: ListTargetingExpression
        """
        return self._list_targeting_expression

    @list_targeting_expression.setter
    def list_targeting_expression(self, list_targeting_expression):
        """Sets the list_targeting_expression of this TargetingTemplate.


        :param list_targeting_expression: The list_targeting_expression of this TargetingTemplate.
        :type list_targeting_expression: ListTargetingExpression
        """

        self._list_targeting_expression = list_targeting_expression

    @property
    def name(self):
        """Gets the name of this TargetingTemplate.

        Name of this targeting template. This field is required. It must be less than 256 characters long and unique within an advertiser.

        :return: The name of this TargetingTemplate.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TargetingTemplate.

        Name of this targeting template. This field is required. It must be less than 256 characters long and unique within an advertiser.

        :param name: The name of this TargetingTemplate.
        :type name: str
        """

        self._name = name

    @property
    def subaccount_id(self):
        """Gets the subaccount_id of this TargetingTemplate.

        Subaccount ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert.

        :return: The subaccount_id of this TargetingTemplate.
        :rtype: str
        """
        return self._subaccount_id

    @subaccount_id.setter
    def subaccount_id(self, subaccount_id):
        """Sets the subaccount_id of this TargetingTemplate.

        Subaccount ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert.

        :param subaccount_id: The subaccount_id of this TargetingTemplate.
        :type subaccount_id: str
        """

        self._subaccount_id = subaccount_id

    @property
    def technology_targeting(self):
        """Gets the technology_targeting of this TargetingTemplate.


        :return: The technology_targeting of this TargetingTemplate.
        :rtype: TechnologyTargeting
        """
        return self._technology_targeting

    @technology_targeting.setter
    def technology_targeting(self, technology_targeting):
        """Sets the technology_targeting of this TargetingTemplate.


        :param technology_targeting: The technology_targeting of this TargetingTemplate.
        :type technology_targeting: TechnologyTargeting
        """

        self._technology_targeting = technology_targeting
