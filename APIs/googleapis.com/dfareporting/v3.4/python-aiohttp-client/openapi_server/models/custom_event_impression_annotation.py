# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomEventImpressionAnnotation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, path_impression_id: str=None):
        """CustomEventImpressionAnnotation - a model defined in OpenAPI

        :param kind: The kind of this CustomEventImpressionAnnotation.
        :param path_impression_id: The path_impression_id of this CustomEventImpressionAnnotation.
        """
        self.openapi_types = {
            'kind': str,
            'path_impression_id': str
        }

        self.attribute_map = {
            'kind': 'kind',
            'path_impression_id': 'pathImpressionId'
        }

        self._kind = kind
        self._path_impression_id = path_impression_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomEventImpressionAnnotation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomEventImpressionAnnotation of this CustomEventImpressionAnnotation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this CustomEventImpressionAnnotation.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#customEventImpressionAnnotation\".

        :return: The kind of this CustomEventImpressionAnnotation.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this CustomEventImpressionAnnotation.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#customEventImpressionAnnotation\".

        :param kind: The kind of this CustomEventImpressionAnnotation.
        :type kind: str
        """

        self._kind = kind

    @property
    def path_impression_id(self):
        """Gets the path_impression_id of this CustomEventImpressionAnnotation.

        The path impression ID. Use this field to annotate the impression associated with the pathImpressionId.

        :return: The path_impression_id of this CustomEventImpressionAnnotation.
        :rtype: str
        """
        return self._path_impression_id

    @path_impression_id.setter
    def path_impression_id(self, path_impression_id):
        """Sets the path_impression_id of this CustomEventImpressionAnnotation.

        The path impression ID. Use this field to annotate the impression associated with the pathImpressionId.

        :param path_impression_id: The path_impression_id of this CustomEventImpressionAnnotation.
        :type path_impression_id: str
        """

        self._path_impression_id = path_impression_id
