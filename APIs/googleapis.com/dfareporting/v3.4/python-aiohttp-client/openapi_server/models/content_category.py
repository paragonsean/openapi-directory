# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContentCategory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, id: str=None, kind: str=None, name: str=None):
        """ContentCategory - a model defined in OpenAPI

        :param account_id: The account_id of this ContentCategory.
        :param id: The id of this ContentCategory.
        :param kind: The kind of this ContentCategory.
        :param name: The name of this ContentCategory.
        """
        self.openapi_types = {
            'account_id': str,
            'id': str,
            'kind': str,
            'name': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'id': 'id',
            'kind': 'kind',
            'name': 'name'
        }

        self._account_id = account_id
        self._id = id
        self._kind = kind
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentCategory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentCategory of this ContentCategory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this ContentCategory.

        Account ID of this content category. This is a read-only field that can be left blank.

        :return: The account_id of this ContentCategory.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this ContentCategory.

        Account ID of this content category. This is a read-only field that can be left blank.

        :param account_id: The account_id of this ContentCategory.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def id(self):
        """Gets the id of this ContentCategory.

        ID of this content category. This is a read-only, auto-generated field.

        :return: The id of this ContentCategory.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ContentCategory.

        ID of this content category. This is a read-only, auto-generated field.

        :param id: The id of this ContentCategory.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this ContentCategory.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#contentCategory\".

        :return: The kind of this ContentCategory.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ContentCategory.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#contentCategory\".

        :param kind: The kind of this ContentCategory.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this ContentCategory.

        Name of this content category. This is a required field and must be less than 256 characters long and unique among content categories of the same account.

        :return: The name of this ContentCategory.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContentCategory.

        Name of this content category. This is a required field and must be less than 256 characters long and unique among content categories of the same account.

        :param name: The name of this ContentCategory.
        :type name: str
        """

        self._name = name
