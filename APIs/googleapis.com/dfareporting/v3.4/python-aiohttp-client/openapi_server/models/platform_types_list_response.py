# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.platform_type import PlatformType
from openapi_server import util


class PlatformTypesListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, platform_types: List[PlatformType]=None):
        """PlatformTypesListResponse - a model defined in OpenAPI

        :param kind: The kind of this PlatformTypesListResponse.
        :param platform_types: The platform_types of this PlatformTypesListResponse.
        """
        self.openapi_types = {
            'kind': str,
            'platform_types': List[PlatformType]
        }

        self.attribute_map = {
            'kind': 'kind',
            'platform_types': 'platformTypes'
        }

        self._kind = kind
        self._platform_types = platform_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlatformTypesListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlatformTypesListResponse of this PlatformTypesListResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this PlatformTypesListResponse.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#platformTypesListResponse\".

        :return: The kind of this PlatformTypesListResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PlatformTypesListResponse.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#platformTypesListResponse\".

        :param kind: The kind of this PlatformTypesListResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def platform_types(self):
        """Gets the platform_types of this PlatformTypesListResponse.

        Platform type collection.

        :return: The platform_types of this PlatformTypesListResponse.
        :rtype: List[PlatformType]
        """
        return self._platform_types

    @platform_types.setter
    def platform_types(self, platform_types):
        """Sets the platform_types of this PlatformTypesListResponse.

        Platform type collection.

        :param platform_types: The platform_types of this PlatformTypesListResponse.
        :type platform_types: List[PlatformType]
        """

        self._platform_types = platform_types
