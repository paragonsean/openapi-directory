# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FrequencyCap(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: str=None, impressions: str=None):
        """FrequencyCap - a model defined in OpenAPI

        :param duration: The duration of this FrequencyCap.
        :param impressions: The impressions of this FrequencyCap.
        """
        self.openapi_types = {
            'duration': str,
            'impressions': str
        }

        self.attribute_map = {
            'duration': 'duration',
            'impressions': 'impressions'
        }

        self._duration = duration
        self._impressions = impressions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FrequencyCap':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FrequencyCap of this FrequencyCap.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this FrequencyCap.

        Duration of time, in seconds, for this frequency cap. The maximum duration is 90 days. Acceptable values are 1 to 7776000, inclusive.

        :return: The duration of this FrequencyCap.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this FrequencyCap.

        Duration of time, in seconds, for this frequency cap. The maximum duration is 90 days. Acceptable values are 1 to 7776000, inclusive.

        :param duration: The duration of this FrequencyCap.
        :type duration: str
        """

        self._duration = duration

    @property
    def impressions(self):
        """Gets the impressions of this FrequencyCap.

        Number of times an individual user can be served the ad within the specified duration. Acceptable values are 1 to 15, inclusive.

        :return: The impressions of this FrequencyCap.
        :rtype: str
        """
        return self._impressions

    @impressions.setter
    def impressions(self, impressions):
        """Sets the impressions of this FrequencyCap.

        Number of times an individual user can be served the ad within the specified duration. Acceptable values are 1 to 15, inclusive.

        :param impressions: The impressions of this FrequencyCap.
        :type impressions: str
        """

        self._impressions = impressions
