/*
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ClickTag;
import org.openapitools.client.model.CreativeAsset;
import org.openapitools.client.model.CreativeAssetSelection;
import org.openapitools.client.model.CreativeClickThroughUrl;
import org.openapitools.client.model.CreativeCustomEvent;
import org.openapitools.client.model.CreativeFieldAssignment;
import org.openapitools.client.model.DimensionValue;
import org.openapitools.client.model.FsCommand;
import org.openapitools.client.model.LastModifiedInfo;
import org.openapitools.client.model.ObaIcon;
import org.openapitools.client.model.Size;
import org.openapitools.client.model.TargetWindow;
import org.openapitools.client.model.ThirdPartyTrackingUrl;
import org.openapitools.client.model.UniversalAdId;
import org.openapitools.client.model.VideoOffset;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Creative
 */
public class CreativeTest {
    private final Creative model = new Creative();

    /**
     * Model tests for Creative
     */
    @Test
    public void testCreative() {
        // TODO: test Creative
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'adParameters'
     */
    @Test
    public void adParametersTest() {
        // TODO: test adParameters
    }

    /**
     * Test the property 'adTagKeys'
     */
    @Test
    public void adTagKeysTest() {
        // TODO: test adTagKeys
    }

    /**
     * Test the property 'additionalSizes'
     */
    @Test
    public void additionalSizesTest() {
        // TODO: test additionalSizes
    }

    /**
     * Test the property 'advertiserId'
     */
    @Test
    public void advertiserIdTest() {
        // TODO: test advertiserId
    }

    /**
     * Test the property 'allowScriptAccess'
     */
    @Test
    public void allowScriptAccessTest() {
        // TODO: test allowScriptAccess
    }

    /**
     * Test the property 'archived'
     */
    @Test
    public void archivedTest() {
        // TODO: test archived
    }

    /**
     * Test the property 'artworkType'
     */
    @Test
    public void artworkTypeTest() {
        // TODO: test artworkType
    }

    /**
     * Test the property 'authoringSource'
     */
    @Test
    public void authoringSourceTest() {
        // TODO: test authoringSource
    }

    /**
     * Test the property 'authoringTool'
     */
    @Test
    public void authoringToolTest() {
        // TODO: test authoringTool
    }

    /**
     * Test the property 'autoAdvanceImages'
     */
    @Test
    public void autoAdvanceImagesTest() {
        // TODO: test autoAdvanceImages
    }

    /**
     * Test the property 'backgroundColor'
     */
    @Test
    public void backgroundColorTest() {
        // TODO: test backgroundColor
    }

    /**
     * Test the property 'backupImageClickThroughUrl'
     */
    @Test
    public void backupImageClickThroughUrlTest() {
        // TODO: test backupImageClickThroughUrl
    }

    /**
     * Test the property 'backupImageFeatures'
     */
    @Test
    public void backupImageFeaturesTest() {
        // TODO: test backupImageFeatures
    }

    /**
     * Test the property 'backupImageReportingLabel'
     */
    @Test
    public void backupImageReportingLabelTest() {
        // TODO: test backupImageReportingLabel
    }

    /**
     * Test the property 'backupImageTargetWindow'
     */
    @Test
    public void backupImageTargetWindowTest() {
        // TODO: test backupImageTargetWindow
    }

    /**
     * Test the property 'clickTags'
     */
    @Test
    public void clickTagsTest() {
        // TODO: test clickTags
    }

    /**
     * Test the property 'commercialId'
     */
    @Test
    public void commercialIdTest() {
        // TODO: test commercialId
    }

    /**
     * Test the property 'companionCreatives'
     */
    @Test
    public void companionCreativesTest() {
        // TODO: test companionCreatives
    }

    /**
     * Test the property 'compatibility'
     */
    @Test
    public void compatibilityTest() {
        // TODO: test compatibility
    }

    /**
     * Test the property 'convertFlashToHtml5'
     */
    @Test
    public void convertFlashToHtml5Test() {
        // TODO: test convertFlashToHtml5
    }

    /**
     * Test the property 'counterCustomEvents'
     */
    @Test
    public void counterCustomEventsTest() {
        // TODO: test counterCustomEvents
    }

    /**
     * Test the property 'creativeAssetSelection'
     */
    @Test
    public void creativeAssetSelectionTest() {
        // TODO: test creativeAssetSelection
    }

    /**
     * Test the property 'creativeAssets'
     */
    @Test
    public void creativeAssetsTest() {
        // TODO: test creativeAssets
    }

    /**
     * Test the property 'creativeFieldAssignments'
     */
    @Test
    public void creativeFieldAssignmentsTest() {
        // TODO: test creativeFieldAssignments
    }

    /**
     * Test the property 'customKeyValues'
     */
    @Test
    public void customKeyValuesTest() {
        // TODO: test customKeyValues
    }

    /**
     * Test the property 'dynamicAssetSelection'
     */
    @Test
    public void dynamicAssetSelectionTest() {
        // TODO: test dynamicAssetSelection
    }

    /**
     * Test the property 'exitCustomEvents'
     */
    @Test
    public void exitCustomEventsTest() {
        // TODO: test exitCustomEvents
    }

    /**
     * Test the property 'fsCommand'
     */
    @Test
    public void fsCommandTest() {
        // TODO: test fsCommand
    }

    /**
     * Test the property 'htmlCode'
     */
    @Test
    public void htmlCodeTest() {
        // TODO: test htmlCode
    }

    /**
     * Test the property 'htmlCodeLocked'
     */
    @Test
    public void htmlCodeLockedTest() {
        // TODO: test htmlCodeLocked
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'idDimensionValue'
     */
    @Test
    public void idDimensionValueTest() {
        // TODO: test idDimensionValue
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'lastModifiedInfo'
     */
    @Test
    public void lastModifiedInfoTest() {
        // TODO: test lastModifiedInfo
    }

    /**
     * Test the property 'latestTraffickedCreativeId'
     */
    @Test
    public void latestTraffickedCreativeIdTest() {
        // TODO: test latestTraffickedCreativeId
    }

    /**
     * Test the property 'mediaDescription'
     */
    @Test
    public void mediaDescriptionTest() {
        // TODO: test mediaDescription
    }

    /**
     * Test the property 'mediaDuration'
     */
    @Test
    public void mediaDurationTest() {
        // TODO: test mediaDuration
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'obaIcon'
     */
    @Test
    public void obaIconTest() {
        // TODO: test obaIcon
    }

    /**
     * Test the property 'overrideCss'
     */
    @Test
    public void overrideCssTest() {
        // TODO: test overrideCss
    }

    /**
     * Test the property 'progressOffset'
     */
    @Test
    public void progressOffsetTest() {
        // TODO: test progressOffset
    }

    /**
     * Test the property 'redirectUrl'
     */
    @Test
    public void redirectUrlTest() {
        // TODO: test redirectUrl
    }

    /**
     * Test the property 'renderingId'
     */
    @Test
    public void renderingIdTest() {
        // TODO: test renderingId
    }

    /**
     * Test the property 'renderingIdDimensionValue'
     */
    @Test
    public void renderingIdDimensionValueTest() {
        // TODO: test renderingIdDimensionValue
    }

    /**
     * Test the property 'requiredFlashPluginVersion'
     */
    @Test
    public void requiredFlashPluginVersionTest() {
        // TODO: test requiredFlashPluginVersion
    }

    /**
     * Test the property 'requiredFlashVersion'
     */
    @Test
    public void requiredFlashVersionTest() {
        // TODO: test requiredFlashVersion
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'skipOffset'
     */
    @Test
    public void skipOffsetTest() {
        // TODO: test skipOffset
    }

    /**
     * Test the property 'skippable'
     */
    @Test
    public void skippableTest() {
        // TODO: test skippable
    }

    /**
     * Test the property 'sslCompliant'
     */
    @Test
    public void sslCompliantTest() {
        // TODO: test sslCompliant
    }

    /**
     * Test the property 'sslOverride'
     */
    @Test
    public void sslOverrideTest() {
        // TODO: test sslOverride
    }

    /**
     * Test the property 'studioAdvertiserId'
     */
    @Test
    public void studioAdvertiserIdTest() {
        // TODO: test studioAdvertiserId
    }

    /**
     * Test the property 'studioCreativeId'
     */
    @Test
    public void studioCreativeIdTest() {
        // TODO: test studioCreativeId
    }

    /**
     * Test the property 'studioTraffickedCreativeId'
     */
    @Test
    public void studioTraffickedCreativeIdTest() {
        // TODO: test studioTraffickedCreativeId
    }

    /**
     * Test the property 'subaccountId'
     */
    @Test
    public void subaccountIdTest() {
        // TODO: test subaccountId
    }

    /**
     * Test the property 'thirdPartyBackupImageImpressionsUrl'
     */
    @Test
    public void thirdPartyBackupImageImpressionsUrlTest() {
        // TODO: test thirdPartyBackupImageImpressionsUrl
    }

    /**
     * Test the property 'thirdPartyRichMediaImpressionsUrl'
     */
    @Test
    public void thirdPartyRichMediaImpressionsUrlTest() {
        // TODO: test thirdPartyRichMediaImpressionsUrl
    }

    /**
     * Test the property 'thirdPartyUrls'
     */
    @Test
    public void thirdPartyUrlsTest() {
        // TODO: test thirdPartyUrls
    }

    /**
     * Test the property 'timerCustomEvents'
     */
    @Test
    public void timerCustomEventsTest() {
        // TODO: test timerCustomEvents
    }

    /**
     * Test the property 'totalFileSize'
     */
    @Test
    public void totalFileSizeTest() {
        // TODO: test totalFileSize
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'universalAdId'
     */
    @Test
    public void universalAdIdTest() {
        // TODO: test universalAdId
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
