/*
 * Google Keep API
 * The Google Keep API is used in an enterprise environment to manage Google Keep content and resolve issues identified by cloud security software.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BatchCreatePermissionsRequest;
import org.openapitools.client.model.BatchCreatePermissionsResponse;
import org.openapitools.client.model.BatchDeletePermissionsRequest;
import org.openapitools.client.model.ListNotesResponse;
import org.openapitools.client.model.Note;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotesApi
 */
@Disabled
public class NotesApiTest {

    private final NotesApi api = new NotesApi();

    /**
     * Creates a new note.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void keepNotesCreateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Note note = null;
        Note response = api.keepNotesCreate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, note);
        // TODO: test validations
    }

    /**
     * Deletes a note. Caller must have the &#x60;OWNER&#x60; role on the note to delete. Deleting a note removes the resource immediately and cannot be undone. Any collaborators will lose access to the note.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void keepNotesDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.keepNotesDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Gets a note.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void keepNotesGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String mimeType = null;
        Note response = api.keepNotesGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, mimeType);
        // TODO: test validations
    }

    /**
     * Lists notes. Every list call returns a page of results with &#x60;page_size&#x60; as the upper bound of returned items. A &#x60;page_size&#x60; of zero allows the server to choose the upper bound. The ListNotesResponse contains at most &#x60;page_size&#x60; entries. If there are more things left to list, it provides a &#x60;next_page_token&#x60; value. (Page tokens are opaque values.) To get the next page of results, copy the result&#39;s &#x60;next_page_token&#x60; into the next request&#39;s &#x60;page_token&#x60;. Repeat until the &#x60;next_page_token&#x60; returned with a page of results is empty. ListNotes return consistent results in the face of concurrent changes, or signals that it cannot with an ABORTED error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void keepNotesListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        ListNotesResponse response = api.keepNotesList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates one or more permissions on the note. Only permissions with the &#x60;WRITER&#x60; role may be created. If adding any permission fails, then the entire request fails and no changes are made.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void keepNotesPermissionsBatchCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        BatchCreatePermissionsRequest batchCreatePermissionsRequest = null;
        BatchCreatePermissionsResponse response = api.keepNotesPermissionsBatchCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, batchCreatePermissionsRequest);
        // TODO: test validations
    }

    /**
     * Deletes one or more permissions on the note. The specified entities will immediately lose access. A permission with the &#x60;OWNER&#x60; role can&#39;t be removed. If removing a permission fails, then the entire request fails and no changes are made. Returns a 400 bad request error if a specified permission does not exist on the note.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void keepNotesPermissionsBatchDeleteTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        BatchDeletePermissionsRequest batchDeletePermissionsRequest = null;
        Object response = api.keepNotesPermissionsBatchDelete(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, batchDeletePermissionsRequest);
        // TODO: test validations
    }

}
