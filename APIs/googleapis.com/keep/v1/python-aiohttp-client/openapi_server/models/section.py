# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_content import ListContent
from openapi_server.models.text_content import TextContent
from openapi_server import util


class Section(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, list: ListContent=None, text: TextContent=None):
        """Section - a model defined in OpenAPI

        :param list: The list of this Section.
        :param text: The text of this Section.
        """
        self.openapi_types = {
            'list': ListContent,
            'text': TextContent
        }

        self.attribute_map = {
            'list': 'list',
            'text': 'text'
        }

        self._list = list
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Section':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Section of this Section.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def list(self):
        """Gets the list of this Section.


        :return: The list of this Section.
        :rtype: ListContent
        """
        return self._list

    @list.setter
    def list(self, list):
        """Sets the list of this Section.


        :param list: The list of this Section.
        :type list: ListContent
        """

        self._list = list

    @property
    def text(self):
        """Gets the text of this Section.


        :return: The text of this Section.
        :rtype: TextContent
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this Section.


        :param text: The text of this Section.
        :type text: TextContent
        """

        self._text = text
