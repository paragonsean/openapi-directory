# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_item import ListItem
from openapi_server import util


class ListContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, list_items: List[ListItem]=None):
        """ListContent - a model defined in OpenAPI

        :param list_items: The list_items of this ListContent.
        """
        self.openapi_types = {
            'list_items': List[ListItem]
        }

        self.attribute_map = {
            'list_items': 'listItems'
        }

        self._list_items = list_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListContent of this ListContent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def list_items(self):
        """Gets the list_items of this ListContent.

        The items in the list. The number of items must be less than 1,000.

        :return: The list_items of this ListContent.
        :rtype: List[ListItem]
        """
        return self._list_items

    @list_items.setter
    def list_items(self, list_items):
        """Sets the list_items of this ListContent.

        The items in the list. The number of items must be less than 1,000.

        :param list_items: The list_items of this ListContent.
        :type list_items: List[ListItem]
        """

        self._list_items = list_items
