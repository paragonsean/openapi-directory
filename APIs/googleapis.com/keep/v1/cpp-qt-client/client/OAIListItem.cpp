/**
 * Google Keep API
 * The Google Keep API is used in an enterprise environment to manage Google Keep content and resolve issues identified by cloud security software.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListItem::OAIListItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListItem::OAIListItem() {
    this->initializeModel();
}

OAIListItem::~OAIListItem() {}

void OAIListItem::initializeModel() {

    m_checked_isSet = false;
    m_checked_isValid = false;

    m_child_list_items_isSet = false;
    m_child_list_items_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIListItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListItem::fromJsonObject(QJsonObject json) {

    m_checked_isValid = ::OpenAPI::fromJsonValue(m_checked, json[QString("checked")]);
    m_checked_isSet = !json[QString("checked")].isNull() && m_checked_isValid;

    m_child_list_items_isValid = ::OpenAPI::fromJsonValue(m_child_list_items, json[QString("childListItems")]);
    m_child_list_items_isSet = !json[QString("childListItems")].isNull() && m_child_list_items_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIListItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListItem::asJsonObject() const {
    QJsonObject obj;
    if (m_checked_isSet) {
        obj.insert(QString("checked"), ::OpenAPI::toJsonValue(m_checked));
    }
    if (m_child_list_items.size() > 0) {
        obj.insert(QString("childListItems"), ::OpenAPI::toJsonValue(m_child_list_items));
    }
    if (m_text.isSet()) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

bool OAIListItem::isChecked() const {
    return m_checked;
}
void OAIListItem::setChecked(const bool &checked) {
    m_checked = checked;
    m_checked_isSet = true;
}

bool OAIListItem::is_checked_Set() const{
    return m_checked_isSet;
}

bool OAIListItem::is_checked_Valid() const{
    return m_checked_isValid;
}

QList<OAIListItem> OAIListItem::getChildListItems() const {
    return m_child_list_items;
}
void OAIListItem::setChildListItems(const QList<OAIListItem> &child_list_items) {
    m_child_list_items = child_list_items;
    m_child_list_items_isSet = true;
}

bool OAIListItem::is_child_list_items_Set() const{
    return m_child_list_items_isSet;
}

bool OAIListItem::is_child_list_items_Valid() const{
    return m_child_list_items_isValid;
}

OAITextContent OAIListItem::getText() const {
    return m_text;
}
void OAIListItem::setText(const OAITextContent &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIListItem::is_text_Set() const{
    return m_text_isSet;
}

bool OAIListItem::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIListItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_checked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_child_list_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_text.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
