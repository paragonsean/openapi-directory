/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleMapsPlacesV1PlaceParkingOptions model module.
 * @module model/GoogleMapsPlacesV1PlaceParkingOptions
 * @version v1
 */
class GoogleMapsPlacesV1PlaceParkingOptions {
    /**
     * Constructs a new <code>GoogleMapsPlacesV1PlaceParkingOptions</code>.
     * Information about parking options for the place. A parking lot could support more than one option at the same time.
     * @alias module:model/GoogleMapsPlacesV1PlaceParkingOptions
     */
    constructor() { 
        
        GoogleMapsPlacesV1PlaceParkingOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleMapsPlacesV1PlaceParkingOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleMapsPlacesV1PlaceParkingOptions} obj Optional instance to populate.
     * @return {module:model/GoogleMapsPlacesV1PlaceParkingOptions} The populated <code>GoogleMapsPlacesV1PlaceParkingOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleMapsPlacesV1PlaceParkingOptions();

            if (data.hasOwnProperty('freeGarageParking')) {
                obj['freeGarageParking'] = ApiClient.convertToType(data['freeGarageParking'], 'Boolean');
            }
            if (data.hasOwnProperty('freeParkingLot')) {
                obj['freeParkingLot'] = ApiClient.convertToType(data['freeParkingLot'], 'Boolean');
            }
            if (data.hasOwnProperty('freeStreetParking')) {
                obj['freeStreetParking'] = ApiClient.convertToType(data['freeStreetParking'], 'Boolean');
            }
            if (data.hasOwnProperty('paidGarageParking')) {
                obj['paidGarageParking'] = ApiClient.convertToType(data['paidGarageParking'], 'Boolean');
            }
            if (data.hasOwnProperty('paidParkingLot')) {
                obj['paidParkingLot'] = ApiClient.convertToType(data['paidParkingLot'], 'Boolean');
            }
            if (data.hasOwnProperty('paidStreetParking')) {
                obj['paidStreetParking'] = ApiClient.convertToType(data['paidStreetParking'], 'Boolean');
            }
            if (data.hasOwnProperty('valetParking')) {
                obj['valetParking'] = ApiClient.convertToType(data['valetParking'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleMapsPlacesV1PlaceParkingOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleMapsPlacesV1PlaceParkingOptions</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Place offers free garage parking.
 * @member {Boolean} freeGarageParking
 */
GoogleMapsPlacesV1PlaceParkingOptions.prototype['freeGarageParking'] = undefined;

/**
 * Place offers free parking lots.
 * @member {Boolean} freeParkingLot
 */
GoogleMapsPlacesV1PlaceParkingOptions.prototype['freeParkingLot'] = undefined;

/**
 * Place offers free street parking.
 * @member {Boolean} freeStreetParking
 */
GoogleMapsPlacesV1PlaceParkingOptions.prototype['freeStreetParking'] = undefined;

/**
 * Place offers paid garage parking.
 * @member {Boolean} paidGarageParking
 */
GoogleMapsPlacesV1PlaceParkingOptions.prototype['paidGarageParking'] = undefined;

/**
 * Place offers paid parking lots.
 * @member {Boolean} paidParkingLot
 */
GoogleMapsPlacesV1PlaceParkingOptions.prototype['paidParkingLot'] = undefined;

/**
 * Place offers paid street parking.
 * @member {Boolean} paidStreetParking
 */
GoogleMapsPlacesV1PlaceParkingOptions.prototype['paidStreetParking'] = undefined;

/**
 * Place offers valet parking.
 * @member {Boolean} valetParking
 */
GoogleMapsPlacesV1PlaceParkingOptions.prototype['valetParking'] = undefined;






export default GoogleMapsPlacesV1PlaceParkingOptions;

