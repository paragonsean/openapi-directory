/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText from './GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText';

/**
 * The GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat model module.
 * @module model/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat
 * @version v1
 */
class GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat {
    /**
     * Constructs a new <code>GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat</code>.
     * Contains a breakdown of a Place or query prediction into main text and secondary text. For Place predictions, the main text contains the specific name of the Place. For query predictions, the main text contains the query. The secondary text contains additional disambiguating features (such as a city or region) to further identify the Place or refine the query.
     * @alias module:model/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat
     */
    constructor() { 
        
        GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat} obj Optional instance to populate.
     * @return {module:model/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat} The populated <code>GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat();

            if (data.hasOwnProperty('mainText')) {
                obj['mainText'] = GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText.constructFromObject(data['mainText']);
            }
            if (data.hasOwnProperty('secondaryText')) {
                obj['secondaryText'] = GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText.constructFromObject(data['secondaryText']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat</code>.
     */
    static validateJSON(data) {
        // validate the optional field `mainText`
        if (data['mainText']) { // data not null
          GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText.validateJSON(data['mainText']);
        }
        // validate the optional field `secondaryText`
        if (data['secondaryText']) { // data not null
          GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText.validateJSON(data['secondaryText']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText} mainText
 */
GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat.prototype['mainText'] = undefined;

/**
 * @member {module:model/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText} secondaryText
 */
GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat.prototype['secondaryText'] = undefined;






export default GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat;

