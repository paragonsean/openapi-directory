/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction from './GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction';

/**
 * The GoogleMapsPlacesV1SearchNearbyRequest model module.
 * @module model/GoogleMapsPlacesV1SearchNearbyRequest
 * @version v1
 */
class GoogleMapsPlacesV1SearchNearbyRequest {
    /**
     * Constructs a new <code>GoogleMapsPlacesV1SearchNearbyRequest</code>.
     * Request proto for Search Nearby. 
     * @alias module:model/GoogleMapsPlacesV1SearchNearbyRequest
     */
    constructor() { 
        
        GoogleMapsPlacesV1SearchNearbyRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleMapsPlacesV1SearchNearbyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleMapsPlacesV1SearchNearbyRequest} obj Optional instance to populate.
     * @return {module:model/GoogleMapsPlacesV1SearchNearbyRequest} The populated <code>GoogleMapsPlacesV1SearchNearbyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleMapsPlacesV1SearchNearbyRequest();

            if (data.hasOwnProperty('excludedPrimaryTypes')) {
                obj['excludedPrimaryTypes'] = ApiClient.convertToType(data['excludedPrimaryTypes'], ['String']);
            }
            if (data.hasOwnProperty('excludedTypes')) {
                obj['excludedTypes'] = ApiClient.convertToType(data['excludedTypes'], ['String']);
            }
            if (data.hasOwnProperty('includedPrimaryTypes')) {
                obj['includedPrimaryTypes'] = ApiClient.convertToType(data['includedPrimaryTypes'], ['String']);
            }
            if (data.hasOwnProperty('includedTypes')) {
                obj['includedTypes'] = ApiClient.convertToType(data['includedTypes'], ['String']);
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('locationRestriction')) {
                obj['locationRestriction'] = GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction.constructFromObject(data['locationRestriction']);
            }
            if (data.hasOwnProperty('maxResultCount')) {
                obj['maxResultCount'] = ApiClient.convertToType(data['maxResultCount'], 'Number');
            }
            if (data.hasOwnProperty('rankPreference')) {
                obj['rankPreference'] = ApiClient.convertToType(data['rankPreference'], 'String');
            }
            if (data.hasOwnProperty('regionCode')) {
                obj['regionCode'] = ApiClient.convertToType(data['regionCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleMapsPlacesV1SearchNearbyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleMapsPlacesV1SearchNearbyRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['excludedPrimaryTypes'])) {
            throw new Error("Expected the field `excludedPrimaryTypes` to be an array in the JSON data but got " + data['excludedPrimaryTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['excludedTypes'])) {
            throw new Error("Expected the field `excludedTypes` to be an array in the JSON data but got " + data['excludedTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includedPrimaryTypes'])) {
            throw new Error("Expected the field `includedPrimaryTypes` to be an array in the JSON data but got " + data['includedPrimaryTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includedTypes'])) {
            throw new Error("Expected the field `includedTypes` to be an array in the JSON data but got " + data['includedTypes']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // validate the optional field `locationRestriction`
        if (data['locationRestriction']) { // data not null
          GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction.validateJSON(data['locationRestriction']);
        }
        // ensure the json data is a string
        if (data['rankPreference'] && !(typeof data['rankPreference'] === 'string' || data['rankPreference'] instanceof String)) {
            throw new Error("Expected the field `rankPreference` to be a primitive type in the JSON string but got " + data['rankPreference']);
        }
        // ensure the json data is a string
        if (data['regionCode'] && !(typeof data['regionCode'] === 'string' || data['regionCode'] instanceof String)) {
            throw new Error("Expected the field `regionCode` to be a primitive type in the JSON string but got " + data['regionCode']);
        }

        return true;
    }


}



/**
 * Excluded primary Place type (e.g. \"restaurant\" or \"gas_station\") from https://developers.google.com/maps/documentation/places/web-service/place-types. Up to 50 types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) may be specified. If there are any conflicting primary types, i.e. a type appears in both included_primary_types and excluded_primary_types, an INVALID_ARGUMENT error is returned. If a Place type is specified with multiple type restrictions, only places that satisfy all of the restrictions are returned. For example, if we have {included_types = [\"restaurant\"], excluded_primary_types = [\"restaurant\"]}, the returned places provide \"restaurant\" related services but do not operate primarily as \"restaurants\".
 * @member {Array.<String>} excludedPrimaryTypes
 */
GoogleMapsPlacesV1SearchNearbyRequest.prototype['excludedPrimaryTypes'] = undefined;

/**
 * Excluded Place type (eg, \"restaurant\" or \"gas_station\") from https://developers.google.com/maps/documentation/places/web-service/place-types. Up to 50 types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) may be specified. If the client provides both included_types (e.g. restaurant) and excluded_types (e.g. cafe), then the response should include places that are restaurant but not cafe. The response includes places that match at least one of the included_types and none of the excluded_types. If there are any conflicting types, i.e. a type appears in both included_types and excluded_types, an INVALID_ARGUMENT error is returned. If a Place type is specified with multiple type restrictions, only places that satisfy all of the restrictions are returned. For example, if we have {included_types = [\"restaurant\"], excluded_primary_types = [\"restaurant\"]}, the returned places provide \"restaurant\" related services but do not operate primarily as \"restaurants\".
 * @member {Array.<String>} excludedTypes
 */
GoogleMapsPlacesV1SearchNearbyRequest.prototype['excludedTypes'] = undefined;

/**
 * Included primary Place type (e.g. \"restaurant\" or \"gas_station\") from https://developers.google.com/maps/documentation/places/web-service/place-types. A place can only have a single primary type from the supported types table associated with it. Up to 50 types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) may be specified. If there are any conflicting primary types, i.e. a type appears in both included_primary_types and excluded_primary_types, an INVALID_ARGUMENT error is returned. If a Place type is specified with multiple type restrictions, only places that satisfy all of the restrictions are returned. For example, if we have {included_types = [\"restaurant\"], excluded_primary_types = [\"restaurant\"]}, the returned places provide \"restaurant\" related services but do not operate primarily as \"restaurants\".
 * @member {Array.<String>} includedPrimaryTypes
 */
GoogleMapsPlacesV1SearchNearbyRequest.prototype['includedPrimaryTypes'] = undefined;

/**
 * Included Place type (eg, \"restaurant\" or \"gas_station\") from https://developers.google.com/maps/documentation/places/web-service/place-types. Up to 50 types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a) may be specified. If there are any conflicting types, i.e. a type appears in both included_types and excluded_types, an INVALID_ARGUMENT error is returned. If a Place type is specified with multiple type restrictions, only places that satisfy all of the restrictions are returned. For example, if we have {included_types = [\"restaurant\"], excluded_primary_types = [\"restaurant\"]}, the returned places provide \"restaurant\" related services but do not operate primarily as \"restaurants\".
 * @member {Array.<String>} includedTypes
 */
GoogleMapsPlacesV1SearchNearbyRequest.prototype['includedTypes'] = undefined;

/**
 * Place details will be displayed with the preferred language if available. If the language code is unspecified or unrecognized, place details of any language may be returned, with a preference for English if such details exist. Current list of supported languages: https://developers.google.com/maps/faq#languagesupport.
 * @member {String} languageCode
 */
GoogleMapsPlacesV1SearchNearbyRequest.prototype['languageCode'] = undefined;

/**
 * @member {module:model/GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction} locationRestriction
 */
GoogleMapsPlacesV1SearchNearbyRequest.prototype['locationRestriction'] = undefined;

/**
 * Maximum number of results to return. It must be between 1 and 20 (default), inclusively. If the number is unset, it falls back to the upper limit. If the number is set to negative or exceeds the upper limit, an INVALID_ARGUMENT error is returned.
 * @member {Number} maxResultCount
 */
GoogleMapsPlacesV1SearchNearbyRequest.prototype['maxResultCount'] = undefined;

/**
 * How results will be ranked in the response.
 * @member {module:model/GoogleMapsPlacesV1SearchNearbyRequest.RankPreferenceEnum} rankPreference
 */
GoogleMapsPlacesV1SearchNearbyRequest.prototype['rankPreference'] = undefined;

/**
 * The Unicode country/region code (CLDR) of the location where the request is coming from. This parameter is used to display the place details, like region-specific place name, if available. The parameter can affect results based on applicable law. For more information, see https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html. Note that 3-digit region codes are not currently supported.
 * @member {String} regionCode
 */
GoogleMapsPlacesV1SearchNearbyRequest.prototype['regionCode'] = undefined;





/**
 * Allowed values for the <code>rankPreference</code> property.
 * @enum {String}
 * @readonly
 */
GoogleMapsPlacesV1SearchNearbyRequest['RankPreferenceEnum'] = {

    /**
     * value: "RANK_PREFERENCE_UNSPECIFIED"
     * @const
     */
    "RANK_PREFERENCE_UNSPECIFIED": "RANK_PREFERENCE_UNSPECIFIED",

    /**
     * value: "DISTANCE"
     * @const
     */
    "DISTANCE": "DISTANCE",

    /**
     * value: "POPULARITY"
     * @const
     */
    "POPULARITY": "POPULARITY"
};



export default GoogleMapsPlacesV1SearchNearbyRequest;

