/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleTypeMoney from './GoogleTypeMoney';

/**
 * The GoogleMapsPlacesV1FuelOptionsFuelPrice model module.
 * @module model/GoogleMapsPlacesV1FuelOptionsFuelPrice
 * @version v1
 */
class GoogleMapsPlacesV1FuelOptionsFuelPrice {
    /**
     * Constructs a new <code>GoogleMapsPlacesV1FuelOptionsFuelPrice</code>.
     * Fuel price information for a given type.
     * @alias module:model/GoogleMapsPlacesV1FuelOptionsFuelPrice
     */
    constructor() { 
        
        GoogleMapsPlacesV1FuelOptionsFuelPrice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleMapsPlacesV1FuelOptionsFuelPrice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleMapsPlacesV1FuelOptionsFuelPrice} obj Optional instance to populate.
     * @return {module:model/GoogleMapsPlacesV1FuelOptionsFuelPrice} The populated <code>GoogleMapsPlacesV1FuelOptionsFuelPrice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleMapsPlacesV1FuelOptionsFuelPrice();

            if (data.hasOwnProperty('price')) {
                obj['price'] = GoogleTypeMoney.constructFromObject(data['price']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleMapsPlacesV1FuelOptionsFuelPrice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleMapsPlacesV1FuelOptionsFuelPrice</code>.
     */
    static validateJSON(data) {
        // validate the optional field `price`
        if (data['price']) { // data not null
          GoogleTypeMoney.validateJSON(data['price']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleTypeMoney} price
 */
GoogleMapsPlacesV1FuelOptionsFuelPrice.prototype['price'] = undefined;

/**
 * The type of fuel.
 * @member {module:model/GoogleMapsPlacesV1FuelOptionsFuelPrice.TypeEnum} type
 */
GoogleMapsPlacesV1FuelOptionsFuelPrice.prototype['type'] = undefined;

/**
 * The time the fuel price was last updated.
 * @member {String} updateTime
 */
GoogleMapsPlacesV1FuelOptionsFuelPrice.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleMapsPlacesV1FuelOptionsFuelPrice['TypeEnum'] = {

    /**
     * value: "FUEL_TYPE_UNSPECIFIED"
     * @const
     */
    "FUEL_TYPE_UNSPECIFIED": "FUEL_TYPE_UNSPECIFIED",

    /**
     * value: "DIESEL"
     * @const
     */
    "DIESEL": "DIESEL",

    /**
     * value: "REGULAR_UNLEADED"
     * @const
     */
    "REGULAR_UNLEADED": "REGULAR_UNLEADED",

    /**
     * value: "MIDGRADE"
     * @const
     */
    "MIDGRADE": "MIDGRADE",

    /**
     * value: "PREMIUM"
     * @const
     */
    "PREMIUM": "PREMIUM",

    /**
     * value: "SP91"
     * @const
     */
    "SP91": "SP91",

    /**
     * value: "SP91_E10"
     * @const
     */
    "SP91_E10": "SP91_E10",

    /**
     * value: "SP92"
     * @const
     */
    "SP92": "SP92",

    /**
     * value: "SP95"
     * @const
     */
    "SP95": "SP95",

    /**
     * value: "SP95_E10"
     * @const
     */
    "SP95_E10": "SP95_E10",

    /**
     * value: "SP98"
     * @const
     */
    "SP98": "SP98",

    /**
     * value: "SP99"
     * @const
     */
    "SP99": "SP99",

    /**
     * value: "SP100"
     * @const
     */
    "SP100": "SP100",

    /**
     * value: "LPG"
     * @const
     */
    "LPG": "LPG",

    /**
     * value: "E80"
     * @const
     */
    "E80": "E80",

    /**
     * value: "E85"
     * @const
     */
    "E85": "E85",

    /**
     * value: "METHANE"
     * @const
     */
    "METHANE": "METHANE",

    /**
     * value: "BIO_DIESEL"
     * @const
     */
    "BIO_DIESEL": "BIO_DIESEL",

    /**
     * value: "TRUCK_DIESEL"
     * @const
     */
    "TRUCK_DIESEL": "TRUCK_DIESEL"
};



export default GoogleMapsPlacesV1FuelOptionsFuelPrice;

