/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStringRange from './GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStringRange';

/**
 * The GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText model module.
 * @module model/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText
 * @version v1
 */
class GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText {
    /**
     * Constructs a new <code>GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText</code>.
     * Text representing a Place or query prediction. The text may be used as is or formatted.
     * @alias module:model/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText
     */
    constructor() { 
        
        GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText} obj Optional instance to populate.
     * @return {module:model/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText} The populated <code>GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText();

            if (data.hasOwnProperty('matches')) {
                obj['matches'] = ApiClient.convertToType(data['matches'], [GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStringRange]);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText</code>.
     */
    static validateJSON(data) {
        if (data['matches']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['matches'])) {
                throw new Error("Expected the field `matches` to be an array in the JSON data but got " + data['matches']);
            }
            // validate the optional field `matches` (array)
            for (const item of data['matches']) {
                GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStringRange.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }

        return true;
    }


}



/**
 * A list of string ranges identifying where the input request matched in `text`. The ranges can be used to format specific parts of `text`. The substrings may not be exact matches of `input` if the matching was determined by criteria other than string matching (for example, spell corrections or transliterations). These values are Unicode character offsets of `text`. The ranges are guaranteed to be ordered in increasing offset values.
 * @member {Array.<module:model/GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStringRange>} matches
 */
GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText.prototype['matches'] = undefined;

/**
 * Text that may be used as is or formatted with `matches`.
 * @member {String} text
 */
GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText.prototype['text'] = undefined;






export default GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText;

