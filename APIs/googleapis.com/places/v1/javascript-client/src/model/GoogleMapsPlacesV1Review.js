/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleMapsPlacesV1AuthorAttribution from './GoogleMapsPlacesV1AuthorAttribution';
import GoogleTypeLocalizedText from './GoogleTypeLocalizedText';

/**
 * The GoogleMapsPlacesV1Review model module.
 * @module model/GoogleMapsPlacesV1Review
 * @version v1
 */
class GoogleMapsPlacesV1Review {
    /**
     * Constructs a new <code>GoogleMapsPlacesV1Review</code>.
     * Information about a review of a place.
     * @alias module:model/GoogleMapsPlacesV1Review
     */
    constructor() { 
        
        GoogleMapsPlacesV1Review.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleMapsPlacesV1Review</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleMapsPlacesV1Review} obj Optional instance to populate.
     * @return {module:model/GoogleMapsPlacesV1Review} The populated <code>GoogleMapsPlacesV1Review</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleMapsPlacesV1Review();

            if (data.hasOwnProperty('authorAttribution')) {
                obj['authorAttribution'] = GoogleMapsPlacesV1AuthorAttribution.constructFromObject(data['authorAttribution']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('originalText')) {
                obj['originalText'] = GoogleTypeLocalizedText.constructFromObject(data['originalText']);
            }
            if (data.hasOwnProperty('publishTime')) {
                obj['publishTime'] = ApiClient.convertToType(data['publishTime'], 'String');
            }
            if (data.hasOwnProperty('rating')) {
                obj['rating'] = ApiClient.convertToType(data['rating'], 'Number');
            }
            if (data.hasOwnProperty('relativePublishTimeDescription')) {
                obj['relativePublishTimeDescription'] = ApiClient.convertToType(data['relativePublishTimeDescription'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = GoogleTypeLocalizedText.constructFromObject(data['text']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleMapsPlacesV1Review</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleMapsPlacesV1Review</code>.
     */
    static validateJSON(data) {
        // validate the optional field `authorAttribution`
        if (data['authorAttribution']) { // data not null
          GoogleMapsPlacesV1AuthorAttribution.validateJSON(data['authorAttribution']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `originalText`
        if (data['originalText']) { // data not null
          GoogleTypeLocalizedText.validateJSON(data['originalText']);
        }
        // ensure the json data is a string
        if (data['publishTime'] && !(typeof data['publishTime'] === 'string' || data['publishTime'] instanceof String)) {
            throw new Error("Expected the field `publishTime` to be a primitive type in the JSON string but got " + data['publishTime']);
        }
        // ensure the json data is a string
        if (data['relativePublishTimeDescription'] && !(typeof data['relativePublishTimeDescription'] === 'string' || data['relativePublishTimeDescription'] instanceof String)) {
            throw new Error("Expected the field `relativePublishTimeDescription` to be a primitive type in the JSON string but got " + data['relativePublishTimeDescription']);
        }
        // validate the optional field `text`
        if (data['text']) { // data not null
          GoogleTypeLocalizedText.validateJSON(data['text']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleMapsPlacesV1AuthorAttribution} authorAttribution
 */
GoogleMapsPlacesV1Review.prototype['authorAttribution'] = undefined;

/**
 * A reference representing this place review which may be used to look up this place review again (also called the API \"resource\" name: `places/{place_id}/reviews/{review}`).
 * @member {String} name
 */
GoogleMapsPlacesV1Review.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleTypeLocalizedText} originalText
 */
GoogleMapsPlacesV1Review.prototype['originalText'] = undefined;

/**
 * Timestamp for the review.
 * @member {String} publishTime
 */
GoogleMapsPlacesV1Review.prototype['publishTime'] = undefined;

/**
 * A number between 1.0 and 5.0, also called the number of stars.
 * @member {Number} rating
 */
GoogleMapsPlacesV1Review.prototype['rating'] = undefined;

/**
 * A string of formatted recent time, expressing the review time relative to the current time in a form appropriate for the language and country.
 * @member {String} relativePublishTimeDescription
 */
GoogleMapsPlacesV1Review.prototype['relativePublishTimeDescription'] = undefined;

/**
 * @member {module:model/GoogleTypeLocalizedText} text
 */
GoogleMapsPlacesV1Review.prototype['text'] = undefined;






export default GoogleMapsPlacesV1Review;

