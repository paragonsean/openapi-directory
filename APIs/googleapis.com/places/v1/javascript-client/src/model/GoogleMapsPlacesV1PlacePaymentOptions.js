/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleMapsPlacesV1PlacePaymentOptions model module.
 * @module model/GoogleMapsPlacesV1PlacePaymentOptions
 * @version v1
 */
class GoogleMapsPlacesV1PlacePaymentOptions {
    /**
     * Constructs a new <code>GoogleMapsPlacesV1PlacePaymentOptions</code>.
     * Payment options the place accepts.
     * @alias module:model/GoogleMapsPlacesV1PlacePaymentOptions
     */
    constructor() { 
        
        GoogleMapsPlacesV1PlacePaymentOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleMapsPlacesV1PlacePaymentOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleMapsPlacesV1PlacePaymentOptions} obj Optional instance to populate.
     * @return {module:model/GoogleMapsPlacesV1PlacePaymentOptions} The populated <code>GoogleMapsPlacesV1PlacePaymentOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleMapsPlacesV1PlacePaymentOptions();

            if (data.hasOwnProperty('acceptsCashOnly')) {
                obj['acceptsCashOnly'] = ApiClient.convertToType(data['acceptsCashOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('acceptsCreditCards')) {
                obj['acceptsCreditCards'] = ApiClient.convertToType(data['acceptsCreditCards'], 'Boolean');
            }
            if (data.hasOwnProperty('acceptsDebitCards')) {
                obj['acceptsDebitCards'] = ApiClient.convertToType(data['acceptsDebitCards'], 'Boolean');
            }
            if (data.hasOwnProperty('acceptsNfc')) {
                obj['acceptsNfc'] = ApiClient.convertToType(data['acceptsNfc'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleMapsPlacesV1PlacePaymentOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleMapsPlacesV1PlacePaymentOptions</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Place accepts cash only as payment. Places with this attribute may still accept other payment methods.
 * @member {Boolean} acceptsCashOnly
 */
GoogleMapsPlacesV1PlacePaymentOptions.prototype['acceptsCashOnly'] = undefined;

/**
 * Place accepts credit cards as payment.
 * @member {Boolean} acceptsCreditCards
 */
GoogleMapsPlacesV1PlacePaymentOptions.prototype['acceptsCreditCards'] = undefined;

/**
 * Place accepts debit cards as payment.
 * @member {Boolean} acceptsDebitCards
 */
GoogleMapsPlacesV1PlacePaymentOptions.prototype['acceptsDebitCards'] = undefined;

/**
 * Place accepts NFC payments.
 * @member {Boolean} acceptsNfc
 */
GoogleMapsPlacesV1PlacePaymentOptions.prototype['acceptsNfc'] = undefined;






export default GoogleMapsPlacesV1PlacePaymentOptions;

