/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleMapsPlacesV1Photo.h
 *
 * Information about a photo of a place.
 */

#ifndef OAIGoogleMapsPlacesV1Photo_H
#define OAIGoogleMapsPlacesV1Photo_H

#include <QJsonObject>

#include "OAIGoogleMapsPlacesV1AuthorAttribution.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleMapsPlacesV1AuthorAttribution;

class OAIGoogleMapsPlacesV1Photo : public OAIObject {
public:
    OAIGoogleMapsPlacesV1Photo();
    OAIGoogleMapsPlacesV1Photo(QString json);
    ~OAIGoogleMapsPlacesV1Photo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleMapsPlacesV1AuthorAttribution> getAuthorAttributions() const;
    void setAuthorAttributions(const QList<OAIGoogleMapsPlacesV1AuthorAttribution> &author_attributions);
    bool is_author_attributions_Set() const;
    bool is_author_attributions_Valid() const;

    qint32 getHeightPx() const;
    void setHeightPx(const qint32 &height_px);
    bool is_height_px_Set() const;
    bool is_height_px_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getWidthPx() const;
    void setWidthPx(const qint32 &width_px);
    bool is_width_px_Set() const;
    bool is_width_px_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleMapsPlacesV1AuthorAttribution> m_author_attributions;
    bool m_author_attributions_isSet;
    bool m_author_attributions_isValid;

    qint32 m_height_px;
    bool m_height_px_isSet;
    bool m_height_px_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_width_px;
    bool m_width_px_isSet;
    bool m_width_px_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleMapsPlacesV1Photo)

#endif // OAIGoogleMapsPlacesV1Photo_H
