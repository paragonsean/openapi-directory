/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleGeoTypeViewport.h
 *
 * A latitude-longitude viewport, represented as two diagonally opposite &#x60;low&#x60; and &#x60;high&#x60; points. A viewport is considered a closed region, i.e. it includes its boundary. The latitude bounds must range between -90 to 90 degrees inclusive, and the longitude bounds must range between -180 to 180 degrees inclusive. Various cases include: - If &#x60;low&#x60; &#x3D; &#x60;high&#x60;, the viewport consists of that single point. - If &#x60;low.longitude&#x60; &gt; &#x60;high.longitude&#x60;, the longitude range is inverted (the viewport crosses the 180 degree longitude line). - If &#x60;low.longitude&#x60; &#x3D; -180 degrees and &#x60;high.longitude&#x60; &#x3D; 180 degrees, the viewport includes all longitudes. - If &#x60;low.longitude&#x60; &#x3D; 180 degrees and &#x60;high.longitude&#x60; &#x3D; -180 degrees, the longitude range is empty. - If &#x60;low.latitude&#x60; &gt; &#x60;high.latitude&#x60;, the latitude range is empty. Both &#x60;low&#x60; and &#x60;high&#x60; must be populated, and the represented box cannot be empty (as specified by the definitions above). An empty viewport will result in an error. For example, this viewport fully encloses New York City: { \&quot;low\&quot;: { \&quot;latitude\&quot;: 40.477398, \&quot;longitude\&quot;: -74.259087 }, \&quot;high\&quot;: { \&quot;latitude\&quot;: 40.91618, \&quot;longitude\&quot;: -73.70018 } }
 */

#ifndef OAIGoogleGeoTypeViewport_H
#define OAIGoogleGeoTypeViewport_H

#include <QJsonObject>

#include "OAIGoogleTypeLatLng.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleTypeLatLng;

class OAIGoogleGeoTypeViewport : public OAIObject {
public:
    OAIGoogleGeoTypeViewport();
    OAIGoogleGeoTypeViewport(QString json);
    ~OAIGoogleGeoTypeViewport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleTypeLatLng getHigh() const;
    void setHigh(const OAIGoogleTypeLatLng &high);
    bool is_high_Set() const;
    bool is_high_Valid() const;

    OAIGoogleTypeLatLng getLow() const;
    void setLow(const OAIGoogleTypeLatLng &low);
    bool is_low_Set() const;
    bool is_low_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleTypeLatLng m_high;
    bool m_high_isSet;
    bool m_high_isValid;

    OAIGoogleTypeLatLng m_low;
    bool m_low_isSet;
    bool m_low_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleGeoTypeViewport)

#endif // OAIGoogleGeoTypeViewport_H
