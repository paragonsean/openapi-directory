/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat.h
 *
 * Contains a breakdown of a Place or query prediction into main text and secondary text. For Place predictions, the main text contains the specific name of the Place. For query predictions, the main text contains the query. The secondary text contains additional disambiguating features (such as a city or region) to further identify the Place or refine the query.
 */

#ifndef OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat_H
#define OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat_H

#include <QJsonObject>

#include "OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText;

class OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat : public OAIObject {
public:
    OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat();
    OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat(QString json);
    ~OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText getMainText() const;
    void setMainText(const OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText &main_text);
    bool is_main_text_Set() const;
    bool is_main_text_Valid() const;

    OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText getSecondaryText() const;
    void setSecondaryText(const OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText &secondary_text);
    bool is_secondary_text_Set() const;
    bool is_secondary_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText m_main_text;
    bool m_main_text_isSet;
    bool m_main_text_isValid;

    OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText m_secondary_text;
    bool m_secondary_text_isSet;
    bool m_secondary_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat)

#endif // OAIGoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat_H
