/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleMapsPlacesV1PlaceParkingOptions.h
 *
 * Information about parking options for the place. A parking lot could support more than one option at the same time.
 */

#ifndef OAIGoogleMapsPlacesV1PlaceParkingOptions_H
#define OAIGoogleMapsPlacesV1PlaceParkingOptions_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleMapsPlacesV1PlaceParkingOptions : public OAIObject {
public:
    OAIGoogleMapsPlacesV1PlaceParkingOptions();
    OAIGoogleMapsPlacesV1PlaceParkingOptions(QString json);
    ~OAIGoogleMapsPlacesV1PlaceParkingOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isFreeGarageParking() const;
    void setFreeGarageParking(const bool &free_garage_parking);
    bool is_free_garage_parking_Set() const;
    bool is_free_garage_parking_Valid() const;

    bool isFreeParkingLot() const;
    void setFreeParkingLot(const bool &free_parking_lot);
    bool is_free_parking_lot_Set() const;
    bool is_free_parking_lot_Valid() const;

    bool isFreeStreetParking() const;
    void setFreeStreetParking(const bool &free_street_parking);
    bool is_free_street_parking_Set() const;
    bool is_free_street_parking_Valid() const;

    bool isPaidGarageParking() const;
    void setPaidGarageParking(const bool &paid_garage_parking);
    bool is_paid_garage_parking_Set() const;
    bool is_paid_garage_parking_Valid() const;

    bool isPaidParkingLot() const;
    void setPaidParkingLot(const bool &paid_parking_lot);
    bool is_paid_parking_lot_Set() const;
    bool is_paid_parking_lot_Valid() const;

    bool isPaidStreetParking() const;
    void setPaidStreetParking(const bool &paid_street_parking);
    bool is_paid_street_parking_Set() const;
    bool is_paid_street_parking_Valid() const;

    bool isValetParking() const;
    void setValetParking(const bool &valet_parking);
    bool is_valet_parking_Set() const;
    bool is_valet_parking_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_free_garage_parking;
    bool m_free_garage_parking_isSet;
    bool m_free_garage_parking_isValid;

    bool m_free_parking_lot;
    bool m_free_parking_lot_isSet;
    bool m_free_parking_lot_isValid;

    bool m_free_street_parking;
    bool m_free_street_parking_isSet;
    bool m_free_street_parking_isValid;

    bool m_paid_garage_parking;
    bool m_paid_garage_parking_isSet;
    bool m_paid_garage_parking_isValid;

    bool m_paid_parking_lot;
    bool m_paid_parking_lot_isSet;
    bool m_paid_parking_lot_isValid;

    bool m_paid_street_parking;
    bool m_paid_street_parking_isSet;
    bool m_paid_street_parking_isValid;

    bool m_valet_parking;
    bool m_valet_parking_isSet;
    bool m_valet_parking_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleMapsPlacesV1PlaceParkingOptions)

#endif // OAIGoogleMapsPlacesV1PlaceParkingOptions_H
