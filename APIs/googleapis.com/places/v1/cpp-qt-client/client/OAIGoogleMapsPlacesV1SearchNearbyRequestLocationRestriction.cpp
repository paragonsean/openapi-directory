/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction() {
    this->initializeModel();
}

OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::~OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction() {}

void OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::initializeModel() {

    m_circle_isSet = false;
    m_circle_isValid = false;
}

void OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::fromJsonObject(QJsonObject json) {

    m_circle_isValid = ::OpenAPI::fromJsonValue(m_circle, json[QString("circle")]);
    m_circle_isSet = !json[QString("circle")].isNull() && m_circle_isValid;
}

QString OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::asJsonObject() const {
    QJsonObject obj;
    if (m_circle.isSet()) {
        obj.insert(QString("circle"), ::OpenAPI::toJsonValue(m_circle));
    }
    return obj;
}

OAIGoogleMapsPlacesV1Circle OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::getCircle() const {
    return m_circle;
}
void OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::setCircle(const OAIGoogleMapsPlacesV1Circle &circle) {
    m_circle = circle;
    m_circle_isSet = true;
}

bool OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::is_circle_Set() const{
    return m_circle_isSet;
}

bool OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::is_circle_Valid() const{
    return m_circle_isValid;
}

bool OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_circle.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleMapsPlacesV1SearchNearbyRequestLocationRestriction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
