/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleMapsPlacesV1Circle.h
 *
 * Circle with a LatLng as center and radius.
 */

#ifndef OAIGoogleMapsPlacesV1Circle_H
#define OAIGoogleMapsPlacesV1Circle_H

#include <QJsonObject>

#include "OAIGoogleTypeLatLng.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleTypeLatLng;

class OAIGoogleMapsPlacesV1Circle : public OAIObject {
public:
    OAIGoogleMapsPlacesV1Circle();
    OAIGoogleMapsPlacesV1Circle(QString json);
    ~OAIGoogleMapsPlacesV1Circle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleTypeLatLng getCenter() const;
    void setCenter(const OAIGoogleTypeLatLng &center);
    bool is_center_Set() const;
    bool is_center_Valid() const;

    double getRadius() const;
    void setRadius(const double &radius);
    bool is_radius_Set() const;
    bool is_radius_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleTypeLatLng m_center;
    bool m_center_isSet;
    bool m_center_isValid;

    double m_radius;
    bool m_radius_isSet;
    bool m_radius_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleMapsPlacesV1Circle)

#endif // OAIGoogleMapsPlacesV1Circle_H
