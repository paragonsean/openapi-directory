/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleMapsPlacesV1SearchTextRequest.h
 *
 * Request proto for SearchText. 
 */

#ifndef OAIGoogleMapsPlacesV1SearchTextRequest_H
#define OAIGoogleMapsPlacesV1SearchTextRequest_H

#include <QJsonObject>

#include "OAIGoogleMapsPlacesV1SearchTextRequestLocationBias.h"
#include "OAIGoogleMapsPlacesV1SearchTextRequestLocationRestriction.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleMapsPlacesV1SearchTextRequestLocationBias;
class OAIGoogleMapsPlacesV1SearchTextRequestLocationRestriction;

class OAIGoogleMapsPlacesV1SearchTextRequest : public OAIObject {
public:
    OAIGoogleMapsPlacesV1SearchTextRequest();
    OAIGoogleMapsPlacesV1SearchTextRequest(QString json);
    ~OAIGoogleMapsPlacesV1SearchTextRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIncludedType() const;
    void setIncludedType(const QString &included_type);
    bool is_included_type_Set() const;
    bool is_included_type_Valid() const;

    QString getLanguageCode() const;
    void setLanguageCode(const QString &language_code);
    bool is_language_code_Set() const;
    bool is_language_code_Valid() const;

    OAIGoogleMapsPlacesV1SearchTextRequestLocationBias getLocationBias() const;
    void setLocationBias(const OAIGoogleMapsPlacesV1SearchTextRequestLocationBias &location_bias);
    bool is_location_bias_Set() const;
    bool is_location_bias_Valid() const;

    OAIGoogleMapsPlacesV1SearchTextRequestLocationRestriction getLocationRestriction() const;
    void setLocationRestriction(const OAIGoogleMapsPlacesV1SearchTextRequestLocationRestriction &location_restriction);
    bool is_location_restriction_Set() const;
    bool is_location_restriction_Valid() const;

    qint32 getMaxResultCount() const;
    void setMaxResultCount(const qint32 &max_result_count);
    bool is_max_result_count_Set() const;
    bool is_max_result_count_Valid() const;

    double getMinRating() const;
    void setMinRating(const double &min_rating);
    bool is_min_rating_Set() const;
    bool is_min_rating_Valid() const;

    bool isOpenNow() const;
    void setOpenNow(const bool &open_now);
    bool is_open_now_Set() const;
    bool is_open_now_Valid() const;

    QList<QString> getPriceLevels() const;
    void setPriceLevels(const QList<QString> &price_levels);
    bool is_price_levels_Set() const;
    bool is_price_levels_Valid() const;

    QString getRankPreference() const;
    void setRankPreference(const QString &rank_preference);
    bool is_rank_preference_Set() const;
    bool is_rank_preference_Valid() const;

    QString getRegionCode() const;
    void setRegionCode(const QString &region_code);
    bool is_region_code_Set() const;
    bool is_region_code_Valid() const;

    bool isStrictTypeFiltering() const;
    void setStrictTypeFiltering(const bool &strict_type_filtering);
    bool is_strict_type_filtering_Set() const;
    bool is_strict_type_filtering_Valid() const;

    QString getTextQuery() const;
    void setTextQuery(const QString &text_query);
    bool is_text_query_Set() const;
    bool is_text_query_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_included_type;
    bool m_included_type_isSet;
    bool m_included_type_isValid;

    QString m_language_code;
    bool m_language_code_isSet;
    bool m_language_code_isValid;

    OAIGoogleMapsPlacesV1SearchTextRequestLocationBias m_location_bias;
    bool m_location_bias_isSet;
    bool m_location_bias_isValid;

    OAIGoogleMapsPlacesV1SearchTextRequestLocationRestriction m_location_restriction;
    bool m_location_restriction_isSet;
    bool m_location_restriction_isValid;

    qint32 m_max_result_count;
    bool m_max_result_count_isSet;
    bool m_max_result_count_isValid;

    double m_min_rating;
    bool m_min_rating_isSet;
    bool m_min_rating_isValid;

    bool m_open_now;
    bool m_open_now_isSet;
    bool m_open_now_isValid;

    QList<QString> m_price_levels;
    bool m_price_levels_isSet;
    bool m_price_levels_isValid;

    QString m_rank_preference;
    bool m_rank_preference_isSet;
    bool m_rank_preference_isValid;

    QString m_region_code;
    bool m_region_code_isSet;
    bool m_region_code_isValid;

    bool m_strict_type_filtering;
    bool m_strict_type_filtering_isSet;
    bool m_strict_type_filtering_isValid;

    QString m_text_query;
    bool m_text_query_isSet;
    bool m_text_query_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleMapsPlacesV1SearchTextRequest)

#endif // OAIGoogleMapsPlacesV1SearchTextRequest_H
