/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleMapsPlacesV1PlaceAccessibilityOptions.h
 *
 * Information about the accessibility options a place offers.
 */

#ifndef OAIGoogleMapsPlacesV1PlaceAccessibilityOptions_H
#define OAIGoogleMapsPlacesV1PlaceAccessibilityOptions_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleMapsPlacesV1PlaceAccessibilityOptions : public OAIObject {
public:
    OAIGoogleMapsPlacesV1PlaceAccessibilityOptions();
    OAIGoogleMapsPlacesV1PlaceAccessibilityOptions(QString json);
    ~OAIGoogleMapsPlacesV1PlaceAccessibilityOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isWheelchairAccessibleEntrance() const;
    void setWheelchairAccessibleEntrance(const bool &wheelchair_accessible_entrance);
    bool is_wheelchair_accessible_entrance_Set() const;
    bool is_wheelchair_accessible_entrance_Valid() const;

    bool isWheelchairAccessibleParking() const;
    void setWheelchairAccessibleParking(const bool &wheelchair_accessible_parking);
    bool is_wheelchair_accessible_parking_Set() const;
    bool is_wheelchair_accessible_parking_Valid() const;

    bool isWheelchairAccessibleRestroom() const;
    void setWheelchairAccessibleRestroom(const bool &wheelchair_accessible_restroom);
    bool is_wheelchair_accessible_restroom_Set() const;
    bool is_wheelchair_accessible_restroom_Valid() const;

    bool isWheelchairAccessibleSeating() const;
    void setWheelchairAccessibleSeating(const bool &wheelchair_accessible_seating);
    bool is_wheelchair_accessible_seating_Set() const;
    bool is_wheelchair_accessible_seating_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_wheelchair_accessible_entrance;
    bool m_wheelchair_accessible_entrance_isSet;
    bool m_wheelchair_accessible_entrance_isValid;

    bool m_wheelchair_accessible_parking;
    bool m_wheelchair_accessible_parking_isSet;
    bool m_wheelchair_accessible_parking_isValid;

    bool m_wheelchair_accessible_restroom;
    bool m_wheelchair_accessible_restroom_isSet;
    bool m_wheelchair_accessible_restroom_isValid;

    bool m_wheelchair_accessible_seating;
    bool m_wheelchair_accessible_seating_isSet;
    bool m_wheelchair_accessible_seating_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleMapsPlacesV1PlaceAccessibilityOptions)

#endif // OAIGoogleMapsPlacesV1PlaceAccessibilityOptions_H
