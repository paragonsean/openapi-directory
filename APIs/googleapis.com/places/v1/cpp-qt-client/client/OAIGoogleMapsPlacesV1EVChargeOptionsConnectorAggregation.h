/**
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleMapsPlacesV1EVChargeOptionsConnectorAggregation.h
 *
 * EV charging information grouped by [type, max_charge_rate_kw]. Shows EV charge aggregation of connectors that have the same type and max charge rate in kw.
 */

#ifndef OAIGoogleMapsPlacesV1EVChargeOptionsConnectorAggregation_H
#define OAIGoogleMapsPlacesV1EVChargeOptionsConnectorAggregation_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleMapsPlacesV1EVChargeOptionsConnectorAggregation : public OAIObject {
public:
    OAIGoogleMapsPlacesV1EVChargeOptionsConnectorAggregation();
    OAIGoogleMapsPlacesV1EVChargeOptionsConnectorAggregation(QString json);
    ~OAIGoogleMapsPlacesV1EVChargeOptionsConnectorAggregation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvailabilityLastUpdateTime() const;
    void setAvailabilityLastUpdateTime(const QString &availability_last_update_time);
    bool is_availability_last_update_time_Set() const;
    bool is_availability_last_update_time_Valid() const;

    qint32 getAvailableCount() const;
    void setAvailableCount(const qint32 &available_count);
    bool is_available_count_Set() const;
    bool is_available_count_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    double getMaxChargeRateKw() const;
    void setMaxChargeRateKw(const double &max_charge_rate_kw);
    bool is_max_charge_rate_kw_Set() const;
    bool is_max_charge_rate_kw_Valid() const;

    qint32 getOutOfServiceCount() const;
    void setOutOfServiceCount(const qint32 &out_of_service_count);
    bool is_out_of_service_count_Set() const;
    bool is_out_of_service_count_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_availability_last_update_time;
    bool m_availability_last_update_time_isSet;
    bool m_availability_last_update_time_isValid;

    qint32 m_available_count;
    bool m_available_count_isSet;
    bool m_available_count_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    double m_max_charge_rate_kw;
    bool m_max_charge_rate_kw_isSet;
    bool m_max_charge_rate_kw_isValid;

    qint32 m_out_of_service_count;
    bool m_out_of_service_count_isSet;
    bool m_out_of_service_count_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleMapsPlacesV1EVChargeOptionsConnectorAggregation)

#endif // OAIGoogleMapsPlacesV1EVChargeOptionsConnectorAggregation_H
