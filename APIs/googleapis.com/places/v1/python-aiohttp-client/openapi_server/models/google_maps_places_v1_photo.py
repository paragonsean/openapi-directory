# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_maps_places_v1_author_attribution import GoogleMapsPlacesV1AuthorAttribution
from openapi_server import util


class GoogleMapsPlacesV1Photo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author_attributions: List[GoogleMapsPlacesV1AuthorAttribution]=None, height_px: int=None, name: str=None, width_px: int=None):
        """GoogleMapsPlacesV1Photo - a model defined in OpenAPI

        :param author_attributions: The author_attributions of this GoogleMapsPlacesV1Photo.
        :param height_px: The height_px of this GoogleMapsPlacesV1Photo.
        :param name: The name of this GoogleMapsPlacesV1Photo.
        :param width_px: The width_px of this GoogleMapsPlacesV1Photo.
        """
        self.openapi_types = {
            'author_attributions': List[GoogleMapsPlacesV1AuthorAttribution],
            'height_px': int,
            'name': str,
            'width_px': int
        }

        self.attribute_map = {
            'author_attributions': 'authorAttributions',
            'height_px': 'heightPx',
            'name': 'name',
            'width_px': 'widthPx'
        }

        self._author_attributions = author_attributions
        self._height_px = height_px
        self._name = name
        self._width_px = width_px

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsPlacesV1Photo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsPlacesV1Photo of this GoogleMapsPlacesV1Photo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author_attributions(self):
        """Gets the author_attributions of this GoogleMapsPlacesV1Photo.

        This photo's authors.

        :return: The author_attributions of this GoogleMapsPlacesV1Photo.
        :rtype: List[GoogleMapsPlacesV1AuthorAttribution]
        """
        return self._author_attributions

    @author_attributions.setter
    def author_attributions(self, author_attributions):
        """Sets the author_attributions of this GoogleMapsPlacesV1Photo.

        This photo's authors.

        :param author_attributions: The author_attributions of this GoogleMapsPlacesV1Photo.
        :type author_attributions: List[GoogleMapsPlacesV1AuthorAttribution]
        """

        self._author_attributions = author_attributions

    @property
    def height_px(self):
        """Gets the height_px of this GoogleMapsPlacesV1Photo.

        The maximum available height, in pixels.

        :return: The height_px of this GoogleMapsPlacesV1Photo.
        :rtype: int
        """
        return self._height_px

    @height_px.setter
    def height_px(self, height_px):
        """Sets the height_px of this GoogleMapsPlacesV1Photo.

        The maximum available height, in pixels.

        :param height_px: The height_px of this GoogleMapsPlacesV1Photo.
        :type height_px: int
        """

        self._height_px = height_px

    @property
    def name(self):
        """Gets the name of this GoogleMapsPlacesV1Photo.

        Identifier. A reference representing this place photo which may be used to look up this place photo again (also called the API \"resource\" name: `places/{place_id}/photos/{photo}`).

        :return: The name of this GoogleMapsPlacesV1Photo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleMapsPlacesV1Photo.

        Identifier. A reference representing this place photo which may be used to look up this place photo again (also called the API \"resource\" name: `places/{place_id}/photos/{photo}`).

        :param name: The name of this GoogleMapsPlacesV1Photo.
        :type name: str
        """

        self._name = name

    @property
    def width_px(self):
        """Gets the width_px of this GoogleMapsPlacesV1Photo.

        The maximum available width, in pixels.

        :return: The width_px of this GoogleMapsPlacesV1Photo.
        :rtype: int
        """
        return self._width_px

    @width_px.setter
    def width_px(self, width_px):
        """Sets the width_px of this GoogleMapsPlacesV1Photo.

        The maximum available width, in pixels.

        :param width_px: The width_px of this GoogleMapsPlacesV1Photo.
        :type width_px: int
        """

        self._width_px = width_px
