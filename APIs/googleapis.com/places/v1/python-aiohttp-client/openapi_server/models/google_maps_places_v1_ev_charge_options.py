# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_maps_places_v1_ev_charge_options_connector_aggregation import GoogleMapsPlacesV1EVChargeOptionsConnectorAggregation
from openapi_server import util


class GoogleMapsPlacesV1EVChargeOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connector_aggregation: List[GoogleMapsPlacesV1EVChargeOptionsConnectorAggregation]=None, connector_count: int=None):
        """GoogleMapsPlacesV1EVChargeOptions - a model defined in OpenAPI

        :param connector_aggregation: The connector_aggregation of this GoogleMapsPlacesV1EVChargeOptions.
        :param connector_count: The connector_count of this GoogleMapsPlacesV1EVChargeOptions.
        """
        self.openapi_types = {
            'connector_aggregation': List[GoogleMapsPlacesV1EVChargeOptionsConnectorAggregation],
            'connector_count': int
        }

        self.attribute_map = {
            'connector_aggregation': 'connectorAggregation',
            'connector_count': 'connectorCount'
        }

        self._connector_aggregation = connector_aggregation
        self._connector_count = connector_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsPlacesV1EVChargeOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsPlacesV1EVChargeOptions of this GoogleMapsPlacesV1EVChargeOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connector_aggregation(self):
        """Gets the connector_aggregation of this GoogleMapsPlacesV1EVChargeOptions.

        A list of EV charging connector aggregations that contain connectors of the same type and same charge rate.

        :return: The connector_aggregation of this GoogleMapsPlacesV1EVChargeOptions.
        :rtype: List[GoogleMapsPlacesV1EVChargeOptionsConnectorAggregation]
        """
        return self._connector_aggregation

    @connector_aggregation.setter
    def connector_aggregation(self, connector_aggregation):
        """Sets the connector_aggregation of this GoogleMapsPlacesV1EVChargeOptions.

        A list of EV charging connector aggregations that contain connectors of the same type and same charge rate.

        :param connector_aggregation: The connector_aggregation of this GoogleMapsPlacesV1EVChargeOptions.
        :type connector_aggregation: List[GoogleMapsPlacesV1EVChargeOptionsConnectorAggregation]
        """

        self._connector_aggregation = connector_aggregation

    @property
    def connector_count(self):
        """Gets the connector_count of this GoogleMapsPlacesV1EVChargeOptions.

        Number of connectors at this station. However, because some ports can have multiple connectors but only be able to charge one car at a time (e.g.) the number of connectors may be greater than the total number of cars which can charge simultaneously.

        :return: The connector_count of this GoogleMapsPlacesV1EVChargeOptions.
        :rtype: int
        """
        return self._connector_count

    @connector_count.setter
    def connector_count(self, connector_count):
        """Sets the connector_count of this GoogleMapsPlacesV1EVChargeOptions.

        Number of connectors at this station. However, because some ports can have multiple connectors but only be able to charge one car at a time (e.g.) the number of connectors may be greater than the total number of cars which can charge simultaneously.

        :param connector_count: The connector_count of this GoogleMapsPlacesV1EVChargeOptions.
        :type connector_count: int
        """

        self._connector_count = connector_count
