# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleMapsPlacesV1PhotoMedia(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, photo_uri: str=None):
        """GoogleMapsPlacesV1PhotoMedia - a model defined in OpenAPI

        :param name: The name of this GoogleMapsPlacesV1PhotoMedia.
        :param photo_uri: The photo_uri of this GoogleMapsPlacesV1PhotoMedia.
        """
        self.openapi_types = {
            'name': str,
            'photo_uri': str
        }

        self.attribute_map = {
            'name': 'name',
            'photo_uri': 'photoUri'
        }

        self._name = name
        self._photo_uri = photo_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsPlacesV1PhotoMedia':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsPlacesV1PhotoMedia of this GoogleMapsPlacesV1PhotoMedia.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this GoogleMapsPlacesV1PhotoMedia.

        The resource name of a photo media in the format: `places/{place_id}/photos/{photo_reference}/media`.

        :return: The name of this GoogleMapsPlacesV1PhotoMedia.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleMapsPlacesV1PhotoMedia.

        The resource name of a photo media in the format: `places/{place_id}/photos/{photo_reference}/media`.

        :param name: The name of this GoogleMapsPlacesV1PhotoMedia.
        :type name: str
        """

        self._name = name

    @property
    def photo_uri(self):
        """Gets the photo_uri of this GoogleMapsPlacesV1PhotoMedia.

        A short-lived uri that can be used to render the photo.

        :return: The photo_uri of this GoogleMapsPlacesV1PhotoMedia.
        :rtype: str
        """
        return self._photo_uri

    @photo_uri.setter
    def photo_uri(self, photo_uri):
        """Sets the photo_uri of this GoogleMapsPlacesV1PhotoMedia.

        A short-lived uri that can be used to render the photo.

        :param photo_uri: The photo_uri of this GoogleMapsPlacesV1PhotoMedia.
        :type photo_uri: str
        """

        self._photo_uri = photo_uri
