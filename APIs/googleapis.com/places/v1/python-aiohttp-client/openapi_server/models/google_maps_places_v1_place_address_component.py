# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleMapsPlacesV1PlaceAddressComponent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, language_code: str=None, long_text: str=None, short_text: str=None, types: List[str]=None):
        """GoogleMapsPlacesV1PlaceAddressComponent - a model defined in OpenAPI

        :param language_code: The language_code of this GoogleMapsPlacesV1PlaceAddressComponent.
        :param long_text: The long_text of this GoogleMapsPlacesV1PlaceAddressComponent.
        :param short_text: The short_text of this GoogleMapsPlacesV1PlaceAddressComponent.
        :param types: The types of this GoogleMapsPlacesV1PlaceAddressComponent.
        """
        self.openapi_types = {
            'language_code': str,
            'long_text': str,
            'short_text': str,
            'types': List[str]
        }

        self.attribute_map = {
            'language_code': 'languageCode',
            'long_text': 'longText',
            'short_text': 'shortText',
            'types': 'types'
        }

        self._language_code = language_code
        self._long_text = long_text
        self._short_text = short_text
        self._types = types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsPlacesV1PlaceAddressComponent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsPlacesV1PlaceAddressComponent of this GoogleMapsPlacesV1PlaceAddressComponent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def language_code(self):
        """Gets the language_code of this GoogleMapsPlacesV1PlaceAddressComponent.

        The language used to format this components, in CLDR notation.

        :return: The language_code of this GoogleMapsPlacesV1PlaceAddressComponent.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleMapsPlacesV1PlaceAddressComponent.

        The language used to format this components, in CLDR notation.

        :param language_code: The language_code of this GoogleMapsPlacesV1PlaceAddressComponent.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def long_text(self):
        """Gets the long_text of this GoogleMapsPlacesV1PlaceAddressComponent.

        The full text description or name of the address component. For example, an address component for the country Australia may have a long_name of \"Australia\".

        :return: The long_text of this GoogleMapsPlacesV1PlaceAddressComponent.
        :rtype: str
        """
        return self._long_text

    @long_text.setter
    def long_text(self, long_text):
        """Sets the long_text of this GoogleMapsPlacesV1PlaceAddressComponent.

        The full text description or name of the address component. For example, an address component for the country Australia may have a long_name of \"Australia\".

        :param long_text: The long_text of this GoogleMapsPlacesV1PlaceAddressComponent.
        :type long_text: str
        """

        self._long_text = long_text

    @property
    def short_text(self):
        """Gets the short_text of this GoogleMapsPlacesV1PlaceAddressComponent.

        An abbreviated textual name for the address component, if available. For example, an address component for the country of Australia may have a short_name of \"AU\".

        :return: The short_text of this GoogleMapsPlacesV1PlaceAddressComponent.
        :rtype: str
        """
        return self._short_text

    @short_text.setter
    def short_text(self, short_text):
        """Sets the short_text of this GoogleMapsPlacesV1PlaceAddressComponent.

        An abbreviated textual name for the address component, if available. For example, an address component for the country of Australia may have a short_name of \"AU\".

        :param short_text: The short_text of this GoogleMapsPlacesV1PlaceAddressComponent.
        :type short_text: str
        """

        self._short_text = short_text

    @property
    def types(self):
        """Gets the types of this GoogleMapsPlacesV1PlaceAddressComponent.

        An array indicating the type(s) of the address component.

        :return: The types of this GoogleMapsPlacesV1PlaceAddressComponent.
        :rtype: List[str]
        """
        return self._types

    @types.setter
    def types(self, types):
        """Sets the types of this GoogleMapsPlacesV1PlaceAddressComponent.

        An array indicating the type(s) of the address component.

        :param types: The types of this GoogleMapsPlacesV1PlaceAddressComponent.
        :type types: List[str]
        """

        self._types = types
