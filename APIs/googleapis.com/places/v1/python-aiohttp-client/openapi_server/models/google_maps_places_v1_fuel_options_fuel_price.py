# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_type_money import GoogleTypeMoney
from openapi_server import util


class GoogleMapsPlacesV1FuelOptionsFuelPrice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, price: GoogleTypeMoney=None, type: str=None, update_time: str=None):
        """GoogleMapsPlacesV1FuelOptionsFuelPrice - a model defined in OpenAPI

        :param price: The price of this GoogleMapsPlacesV1FuelOptionsFuelPrice.
        :param type: The type of this GoogleMapsPlacesV1FuelOptionsFuelPrice.
        :param update_time: The update_time of this GoogleMapsPlacesV1FuelOptionsFuelPrice.
        """
        self.openapi_types = {
            'price': GoogleTypeMoney,
            'type': str,
            'update_time': str
        }

        self.attribute_map = {
            'price': 'price',
            'type': 'type',
            'update_time': 'updateTime'
        }

        self._price = price
        self._type = type
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsPlacesV1FuelOptionsFuelPrice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsPlacesV1FuelOptionsFuelPrice of this GoogleMapsPlacesV1FuelOptionsFuelPrice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def price(self):
        """Gets the price of this GoogleMapsPlacesV1FuelOptionsFuelPrice.


        :return: The price of this GoogleMapsPlacesV1FuelOptionsFuelPrice.
        :rtype: GoogleTypeMoney
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this GoogleMapsPlacesV1FuelOptionsFuelPrice.


        :param price: The price of this GoogleMapsPlacesV1FuelOptionsFuelPrice.
        :type price: GoogleTypeMoney
        """

        self._price = price

    @property
    def type(self):
        """Gets the type of this GoogleMapsPlacesV1FuelOptionsFuelPrice.

        The type of fuel.

        :return: The type of this GoogleMapsPlacesV1FuelOptionsFuelPrice.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleMapsPlacesV1FuelOptionsFuelPrice.

        The type of fuel.

        :param type: The type of this GoogleMapsPlacesV1FuelOptionsFuelPrice.
        :type type: str
        """
        allowed_values = ["FUEL_TYPE_UNSPECIFIED", "DIESEL", "REGULAR_UNLEADED", "MIDGRADE", "PREMIUM", "SP91", "SP91_E10", "SP92", "SP95", "SP95_E10", "SP98", "SP99", "SP100", "LPG", "E80", "E85", "METHANE", "BIO_DIESEL", "TRUCK_DIESEL"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def update_time(self):
        """Gets the update_time of this GoogleMapsPlacesV1FuelOptionsFuelPrice.

        The time the fuel price was last updated.

        :return: The update_time of this GoogleMapsPlacesV1FuelOptionsFuelPrice.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleMapsPlacesV1FuelOptionsFuelPrice.

        The time the fuel price was last updated.

        :param update_time: The update_time of this GoogleMapsPlacesV1FuelOptionsFuelPrice.
        :type update_time: str
        """

        self._update_time = update_time
