# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleMapsPlacesV1PlaceParkingOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, free_garage_parking: bool=None, free_parking_lot: bool=None, free_street_parking: bool=None, paid_garage_parking: bool=None, paid_parking_lot: bool=None, paid_street_parking: bool=None, valet_parking: bool=None):
        """GoogleMapsPlacesV1PlaceParkingOptions - a model defined in OpenAPI

        :param free_garage_parking: The free_garage_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :param free_parking_lot: The free_parking_lot of this GoogleMapsPlacesV1PlaceParkingOptions.
        :param free_street_parking: The free_street_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :param paid_garage_parking: The paid_garage_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :param paid_parking_lot: The paid_parking_lot of this GoogleMapsPlacesV1PlaceParkingOptions.
        :param paid_street_parking: The paid_street_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :param valet_parking: The valet_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        """
        self.openapi_types = {
            'free_garage_parking': bool,
            'free_parking_lot': bool,
            'free_street_parking': bool,
            'paid_garage_parking': bool,
            'paid_parking_lot': bool,
            'paid_street_parking': bool,
            'valet_parking': bool
        }

        self.attribute_map = {
            'free_garage_parking': 'freeGarageParking',
            'free_parking_lot': 'freeParkingLot',
            'free_street_parking': 'freeStreetParking',
            'paid_garage_parking': 'paidGarageParking',
            'paid_parking_lot': 'paidParkingLot',
            'paid_street_parking': 'paidStreetParking',
            'valet_parking': 'valetParking'
        }

        self._free_garage_parking = free_garage_parking
        self._free_parking_lot = free_parking_lot
        self._free_street_parking = free_street_parking
        self._paid_garage_parking = paid_garage_parking
        self._paid_parking_lot = paid_parking_lot
        self._paid_street_parking = paid_street_parking
        self._valet_parking = valet_parking

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsPlacesV1PlaceParkingOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsPlacesV1PlaceParkingOptions of this GoogleMapsPlacesV1PlaceParkingOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def free_garage_parking(self):
        """Gets the free_garage_parking of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers free garage parking.

        :return: The free_garage_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :rtype: bool
        """
        return self._free_garage_parking

    @free_garage_parking.setter
    def free_garage_parking(self, free_garage_parking):
        """Sets the free_garage_parking of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers free garage parking.

        :param free_garage_parking: The free_garage_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :type free_garage_parking: bool
        """

        self._free_garage_parking = free_garage_parking

    @property
    def free_parking_lot(self):
        """Gets the free_parking_lot of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers free parking lots.

        :return: The free_parking_lot of this GoogleMapsPlacesV1PlaceParkingOptions.
        :rtype: bool
        """
        return self._free_parking_lot

    @free_parking_lot.setter
    def free_parking_lot(self, free_parking_lot):
        """Sets the free_parking_lot of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers free parking lots.

        :param free_parking_lot: The free_parking_lot of this GoogleMapsPlacesV1PlaceParkingOptions.
        :type free_parking_lot: bool
        """

        self._free_parking_lot = free_parking_lot

    @property
    def free_street_parking(self):
        """Gets the free_street_parking of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers free street parking.

        :return: The free_street_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :rtype: bool
        """
        return self._free_street_parking

    @free_street_parking.setter
    def free_street_parking(self, free_street_parking):
        """Sets the free_street_parking of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers free street parking.

        :param free_street_parking: The free_street_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :type free_street_parking: bool
        """

        self._free_street_parking = free_street_parking

    @property
    def paid_garage_parking(self):
        """Gets the paid_garage_parking of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers paid garage parking.

        :return: The paid_garage_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :rtype: bool
        """
        return self._paid_garage_parking

    @paid_garage_parking.setter
    def paid_garage_parking(self, paid_garage_parking):
        """Sets the paid_garage_parking of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers paid garage parking.

        :param paid_garage_parking: The paid_garage_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :type paid_garage_parking: bool
        """

        self._paid_garage_parking = paid_garage_parking

    @property
    def paid_parking_lot(self):
        """Gets the paid_parking_lot of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers paid parking lots.

        :return: The paid_parking_lot of this GoogleMapsPlacesV1PlaceParkingOptions.
        :rtype: bool
        """
        return self._paid_parking_lot

    @paid_parking_lot.setter
    def paid_parking_lot(self, paid_parking_lot):
        """Sets the paid_parking_lot of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers paid parking lots.

        :param paid_parking_lot: The paid_parking_lot of this GoogleMapsPlacesV1PlaceParkingOptions.
        :type paid_parking_lot: bool
        """

        self._paid_parking_lot = paid_parking_lot

    @property
    def paid_street_parking(self):
        """Gets the paid_street_parking of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers paid street parking.

        :return: The paid_street_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :rtype: bool
        """
        return self._paid_street_parking

    @paid_street_parking.setter
    def paid_street_parking(self, paid_street_parking):
        """Sets the paid_street_parking of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers paid street parking.

        :param paid_street_parking: The paid_street_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :type paid_street_parking: bool
        """

        self._paid_street_parking = paid_street_parking

    @property
    def valet_parking(self):
        """Gets the valet_parking of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers valet parking.

        :return: The valet_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :rtype: bool
        """
        return self._valet_parking

    @valet_parking.setter
    def valet_parking(self, valet_parking):
        """Sets the valet_parking of this GoogleMapsPlacesV1PlaceParkingOptions.

        Place offers valet parking.

        :param valet_parking: The valet_parking of this GoogleMapsPlacesV1PlaceParkingOptions.
        :type valet_parking: bool
        """

        self._valet_parking = valet_parking
