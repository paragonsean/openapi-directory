# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_maps_places_v1_autocomplete_places_request_location_bias import GoogleMapsPlacesV1AutocompletePlacesRequestLocationBias
from openapi_server.models.google_maps_places_v1_autocomplete_places_request_location_restriction import GoogleMapsPlacesV1AutocompletePlacesRequestLocationRestriction
from openapi_server.models.google_type_lat_lng import GoogleTypeLatLng
from openapi_server import util


class GoogleMapsPlacesV1AutocompletePlacesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, include_query_predictions: bool=None, included_primary_types: List[str]=None, included_region_codes: List[str]=None, input: str=None, input_offset: int=None, language_code: str=None, location_bias: GoogleMapsPlacesV1AutocompletePlacesRequestLocationBias=None, location_restriction: GoogleMapsPlacesV1AutocompletePlacesRequestLocationRestriction=None, origin: GoogleTypeLatLng=None, region_code: str=None, session_token: str=None):
        """GoogleMapsPlacesV1AutocompletePlacesRequest - a model defined in OpenAPI

        :param include_query_predictions: The include_query_predictions of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :param included_primary_types: The included_primary_types of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :param included_region_codes: The included_region_codes of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :param input: The input of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :param input_offset: The input_offset of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :param language_code: The language_code of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :param location_bias: The location_bias of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :param location_restriction: The location_restriction of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :param origin: The origin of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :param region_code: The region_code of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :param session_token: The session_token of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        """
        self.openapi_types = {
            'include_query_predictions': bool,
            'included_primary_types': List[str],
            'included_region_codes': List[str],
            'input': str,
            'input_offset': int,
            'language_code': str,
            'location_bias': GoogleMapsPlacesV1AutocompletePlacesRequestLocationBias,
            'location_restriction': GoogleMapsPlacesV1AutocompletePlacesRequestLocationRestriction,
            'origin': GoogleTypeLatLng,
            'region_code': str,
            'session_token': str
        }

        self.attribute_map = {
            'include_query_predictions': 'includeQueryPredictions',
            'included_primary_types': 'includedPrimaryTypes',
            'included_region_codes': 'includedRegionCodes',
            'input': 'input',
            'input_offset': 'inputOffset',
            'language_code': 'languageCode',
            'location_bias': 'locationBias',
            'location_restriction': 'locationRestriction',
            'origin': 'origin',
            'region_code': 'regionCode',
            'session_token': 'sessionToken'
        }

        self._include_query_predictions = include_query_predictions
        self._included_primary_types = included_primary_types
        self._included_region_codes = included_region_codes
        self._input = input
        self._input_offset = input_offset
        self._language_code = language_code
        self._location_bias = location_bias
        self._location_restriction = location_restriction
        self._origin = origin
        self._region_code = region_code
        self._session_token = session_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsPlacesV1AutocompletePlacesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsPlacesV1AutocompletePlacesRequest of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def include_query_predictions(self):
        """Gets the include_query_predictions of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. If true, the response will include both Place and query predictions. Otherwise the response will only return Place predictions.

        :return: The include_query_predictions of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :rtype: bool
        """
        return self._include_query_predictions

    @include_query_predictions.setter
    def include_query_predictions(self, include_query_predictions):
        """Sets the include_query_predictions of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. If true, the response will include both Place and query predictions. Otherwise the response will only return Place predictions.

        :param include_query_predictions: The include_query_predictions of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :type include_query_predictions: bool
        """

        self._include_query_predictions = include_query_predictions

    @property
    def included_primary_types(self):
        """Gets the included_primary_types of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. Included primary Place type (for example, \"restaurant\" or \"gas_station\") from https://developers.google.com/maps/documentation/places/web-service/place-types. A Place is only returned if its primary type is included in this list. Up to 5 values can be specified. If no types are specified, all Place types are returned.

        :return: The included_primary_types of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :rtype: List[str]
        """
        return self._included_primary_types

    @included_primary_types.setter
    def included_primary_types(self, included_primary_types):
        """Sets the included_primary_types of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. Included primary Place type (for example, \"restaurant\" or \"gas_station\") from https://developers.google.com/maps/documentation/places/web-service/place-types. A Place is only returned if its primary type is included in this list. Up to 5 values can be specified. If no types are specified, all Place types are returned.

        :param included_primary_types: The included_primary_types of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :type included_primary_types: List[str]
        """

        self._included_primary_types = included_primary_types

    @property
    def included_region_codes(self):
        """Gets the included_region_codes of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. Only include results in the specified regions, specified as up to 15 CLDR two-character region codes. An empty set will not restrict the results. If both `location_restriction` and `included_region_codes` are set, the results will be located in the area of intersection.

        :return: The included_region_codes of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :rtype: List[str]
        """
        return self._included_region_codes

    @included_region_codes.setter
    def included_region_codes(self, included_region_codes):
        """Sets the included_region_codes of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. Only include results in the specified regions, specified as up to 15 CLDR two-character region codes. An empty set will not restrict the results. If both `location_restriction` and `included_region_codes` are set, the results will be located in the area of intersection.

        :param included_region_codes: The included_region_codes of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :type included_region_codes: List[str]
        """

        self._included_region_codes = included_region_codes

    @property
    def input(self):
        """Gets the input of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Required. The text string on which to search.

        :return: The input of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :rtype: str
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Required. The text string on which to search.

        :param input: The input of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :type input: str
        """

        self._input = input

    @property
    def input_offset(self):
        """Gets the input_offset of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. A zero-based Unicode character offset of `input` indicating the cursor position in `input`. The cursor position may influence what predictions are returned. If empty, defaults to the length of `input`.

        :return: The input_offset of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :rtype: int
        """
        return self._input_offset

    @input_offset.setter
    def input_offset(self, input_offset):
        """Sets the input_offset of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. A zero-based Unicode character offset of `input` indicating the cursor position in `input`. The cursor position may influence what predictions are returned. If empty, defaults to the length of `input`.

        :param input_offset: The input_offset of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :type input_offset: int
        """

        self._input_offset = input_offset

    @property
    def language_code(self):
        """Gets the language_code of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. The language in which to return results. Defaults to en-US. The results may be in mixed languages if the language used in `input` is different from `language_code` or if the returned Place does not have a translation from the local language to `language_code`.

        :return: The language_code of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. The language in which to return results. Defaults to en-US. The results may be in mixed languages if the language used in `input` is different from `language_code` or if the returned Place does not have a translation from the local language to `language_code`.

        :param language_code: The language_code of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def location_bias(self):
        """Gets the location_bias of this GoogleMapsPlacesV1AutocompletePlacesRequest.


        :return: The location_bias of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :rtype: GoogleMapsPlacesV1AutocompletePlacesRequestLocationBias
        """
        return self._location_bias

    @location_bias.setter
    def location_bias(self, location_bias):
        """Sets the location_bias of this GoogleMapsPlacesV1AutocompletePlacesRequest.


        :param location_bias: The location_bias of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :type location_bias: GoogleMapsPlacesV1AutocompletePlacesRequestLocationBias
        """

        self._location_bias = location_bias

    @property
    def location_restriction(self):
        """Gets the location_restriction of this GoogleMapsPlacesV1AutocompletePlacesRequest.


        :return: The location_restriction of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :rtype: GoogleMapsPlacesV1AutocompletePlacesRequestLocationRestriction
        """
        return self._location_restriction

    @location_restriction.setter
    def location_restriction(self, location_restriction):
        """Sets the location_restriction of this GoogleMapsPlacesV1AutocompletePlacesRequest.


        :param location_restriction: The location_restriction of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :type location_restriction: GoogleMapsPlacesV1AutocompletePlacesRequestLocationRestriction
        """

        self._location_restriction = location_restriction

    @property
    def origin(self):
        """Gets the origin of this GoogleMapsPlacesV1AutocompletePlacesRequest.


        :return: The origin of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :rtype: GoogleTypeLatLng
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this GoogleMapsPlacesV1AutocompletePlacesRequest.


        :param origin: The origin of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :type origin: GoogleTypeLatLng
        """

        self._origin = origin

    @property
    def region_code(self):
        """Gets the region_code of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. The region code, specified as a CLDR two-character region code. This affects address formatting, result ranking, and may influence what results are returned. This does not restrict results to the specified region. To restrict results to a region, use `region_code_restriction`.

        :return: The region_code of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :rtype: str
        """
        return self._region_code

    @region_code.setter
    def region_code(self, region_code):
        """Sets the region_code of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. The region code, specified as a CLDR two-character region code. This affects address formatting, result ranking, and may influence what results are returned. This does not restrict results to the specified region. To restrict results to a region, use `region_code_restriction`.

        :param region_code: The region_code of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :type region_code: str
        """

        self._region_code = region_code

    @property
    def session_token(self):
        """Gets the session_token of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. A string which identifies an Autocomplete session for billing purposes. Must be a URL and filename safe base64 string with at most 36 ASCII characters in length. Otherwise an INVALID_ARGUMENT error is returned. The session begins when the user starts typing a query, and concludes when they select a place and a call to Place Details or Address Validation is made. Each session can have multiple queries, followed by one Place Details or Address Validation request. The credentials used for each request within a session must belong to the same Google Cloud Console project. Once a session has concluded, the token is no longer valid; your app must generate a fresh token for each session. If the `session_token` parameter is omitted, or if you reuse a session token, the session is charged as if no session token was provided (each request is billed separately). We recommend the following guidelines: * Use session tokens for all Place Autocomplete calls. * Generate a fresh token for each session. Using a version 4 UUID is recommended. * Ensure that the credentials used for all Place Autocomplete, Place Details, and Address Validation requests within a session belong to the same Cloud Console project. * Be sure to pass a unique session token for each new session. Using the same token for more than one session will result in each request being billed individually.

        :return: The session_token of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :rtype: str
        """
        return self._session_token

    @session_token.setter
    def session_token(self, session_token):
        """Sets the session_token of this GoogleMapsPlacesV1AutocompletePlacesRequest.

        Optional. A string which identifies an Autocomplete session for billing purposes. Must be a URL and filename safe base64 string with at most 36 ASCII characters in length. Otherwise an INVALID_ARGUMENT error is returned. The session begins when the user starts typing a query, and concludes when they select a place and a call to Place Details or Address Validation is made. Each session can have multiple queries, followed by one Place Details or Address Validation request. The credentials used for each request within a session must belong to the same Google Cloud Console project. Once a session has concluded, the token is no longer valid; your app must generate a fresh token for each session. If the `session_token` parameter is omitted, or if you reuse a session token, the session is charged as if no session token was provided (each request is billed separately). We recommend the following guidelines: * Use session tokens for all Place Autocomplete calls. * Generate a fresh token for each session. Using a version 4 UUID is recommended. * Ensure that the credentials used for all Place Autocomplete, Place Details, and Address Validation requests within a session belong to the same Cloud Console project. * Be sure to pass a unique session token for each new session. Using the same token for more than one session will result in each request being billed individually.

        :param session_token: The session_token of this GoogleMapsPlacesV1AutocompletePlacesRequest.
        :type session_token: str
        """

        self._session_token = session_token
