# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_maps_places_v1_place import GoogleMapsPlacesV1Place
from openapi_server import util


class GoogleMapsPlacesV1SearchNearbyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, places: List[GoogleMapsPlacesV1Place]=None):
        """GoogleMapsPlacesV1SearchNearbyResponse - a model defined in OpenAPI

        :param places: The places of this GoogleMapsPlacesV1SearchNearbyResponse.
        """
        self.openapi_types = {
            'places': List[GoogleMapsPlacesV1Place]
        }

        self.attribute_map = {
            'places': 'places'
        }

        self._places = places

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsPlacesV1SearchNearbyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsPlacesV1SearchNearbyResponse of this GoogleMapsPlacesV1SearchNearbyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def places(self):
        """Gets the places of this GoogleMapsPlacesV1SearchNearbyResponse.

        A list of places that meets user's requirements like places types, number of places and specific location restriction.

        :return: The places of this GoogleMapsPlacesV1SearchNearbyResponse.
        :rtype: List[GoogleMapsPlacesV1Place]
        """
        return self._places

    @places.setter
    def places(self, places):
        """Sets the places of this GoogleMapsPlacesV1SearchNearbyResponse.

        A list of places that meets user's requirements like places types, number of places and specific location restriction.

        :param places: The places of this GoogleMapsPlacesV1SearchNearbyResponse.
        :type places: List[GoogleMapsPlacesV1Place]
        """

        self._places = places
