# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_maps_places_v1_autocomplete_places_response_suggestion_place_prediction import GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction
from openapi_server.models.google_maps_places_v1_autocomplete_places_response_suggestion_query_prediction import GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction
from openapi_server import util


class GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, place_prediction: GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction=None, query_prediction: GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction=None):
        """GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion - a model defined in OpenAPI

        :param place_prediction: The place_prediction of this GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion.
        :param query_prediction: The query_prediction of this GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion.
        """
        self.openapi_types = {
            'place_prediction': GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction,
            'query_prediction': GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction
        }

        self.attribute_map = {
            'place_prediction': 'placePrediction',
            'query_prediction': 'queryPrediction'
        }

        self._place_prediction = place_prediction
        self._query_prediction = query_prediction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion of this GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def place_prediction(self):
        """Gets the place_prediction of this GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion.


        :return: The place_prediction of this GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion.
        :rtype: GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction
        """
        return self._place_prediction

    @place_prediction.setter
    def place_prediction(self, place_prediction):
        """Sets the place_prediction of this GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion.


        :param place_prediction: The place_prediction of this GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion.
        :type place_prediction: GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction
        """

        self._place_prediction = place_prediction

    @property
    def query_prediction(self):
        """Gets the query_prediction of this GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion.


        :return: The query_prediction of this GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion.
        :rtype: GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction
        """
        return self._query_prediction

    @query_prediction.setter
    def query_prediction(self, query_prediction):
        """Sets the query_prediction of this GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion.


        :param query_prediction: The query_prediction of this GoogleMapsPlacesV1AutocompletePlacesResponseSuggestion.
        :type query_prediction: GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction
        """

        self._query_prediction = query_prediction
