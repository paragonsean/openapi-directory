/*
 * Places API (New)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleMapsPlacesV1AutocompletePlacesRequest;
import org.openapitools.client.model.GoogleMapsPlacesV1AutocompletePlacesResponse;
import org.openapitools.client.model.GoogleMapsPlacesV1PhotoMedia;
import org.openapitools.client.model.GoogleMapsPlacesV1SearchNearbyRequest;
import org.openapitools.client.model.GoogleMapsPlacesV1SearchNearbyResponse;
import org.openapitools.client.model.GoogleMapsPlacesV1SearchTextRequest;
import org.openapitools.client.model.GoogleMapsPlacesV1SearchTextResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlacesApi
 */
@Disabled
public class PlacesApiTest {

    private final PlacesApi api = new PlacesApi();

    /**
     * Returns predictions for the given input.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void placesPlacesAutocompleteTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleMapsPlacesV1AutocompletePlacesRequest googleMapsPlacesV1AutocompletePlacesRequest = null;
        GoogleMapsPlacesV1AutocompletePlacesResponse response = api.placesPlacesAutocomplete($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleMapsPlacesV1AutocompletePlacesRequest);
        // TODO: test validations
    }

    /**
     * Get a photo media with a photo reference string.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void placesPlacesPhotosGetMediaTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer maxHeightPx = null;
        Integer maxWidthPx = null;
        Boolean skipHttpRedirect = null;
        GoogleMapsPlacesV1PhotoMedia response = api.placesPlacesPhotosGetMedia(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, maxHeightPx, maxWidthPx, skipHttpRedirect);
        // TODO: test validations
    }

    /**
     * Search for places near locations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void placesPlacesSearchNearbyTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleMapsPlacesV1SearchNearbyRequest googleMapsPlacesV1SearchNearbyRequest = null;
        GoogleMapsPlacesV1SearchNearbyResponse response = api.placesPlacesSearchNearby($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleMapsPlacesV1SearchNearbyRequest);
        // TODO: test validations
    }

    /**
     * Text query based place search.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void placesPlacesSearchTextTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleMapsPlacesV1SearchTextRequest googleMapsPlacesV1SearchTextRequest = null;
        GoogleMapsPlacesV1SearchTextResponse response = api.placesPlacesSearchText($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleMapsPlacesV1SearchTextRequest);
        // TODO: test validations
    }

}
