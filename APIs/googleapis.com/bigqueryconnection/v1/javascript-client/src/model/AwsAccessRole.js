/**
 * BigQuery Connection API
 * Allows users to manage BigQuery connections to external data sources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AwsAccessRole model module.
 * @module model/AwsAccessRole
 * @version v1
 */
class AwsAccessRole {
    /**
     * Constructs a new <code>AwsAccessRole</code>.
     * Authentication method for Amazon Web Services (AWS) that uses Google owned Google service account to assume into customer&#39;s AWS IAM Role.
     * @alias module:model/AwsAccessRole
     */
    constructor() { 
        
        AwsAccessRole.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AwsAccessRole</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AwsAccessRole} obj Optional instance to populate.
     * @return {module:model/AwsAccessRole} The populated <code>AwsAccessRole</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AwsAccessRole();

            if (data.hasOwnProperty('iamRoleId')) {
                obj['iamRoleId'] = ApiClient.convertToType(data['iamRoleId'], 'String');
            }
            if (data.hasOwnProperty('identity')) {
                obj['identity'] = ApiClient.convertToType(data['identity'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AwsAccessRole</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AwsAccessRole</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['iamRoleId'] && !(typeof data['iamRoleId'] === 'string' || data['iamRoleId'] instanceof String)) {
            throw new Error("Expected the field `iamRoleId` to be a primitive type in the JSON string but got " + data['iamRoleId']);
        }
        // ensure the json data is a string
        if (data['identity'] && !(typeof data['identity'] === 'string' || data['identity'] instanceof String)) {
            throw new Error("Expected the field `identity` to be a primitive type in the JSON string but got " + data['identity']);
        }

        return true;
    }


}



/**
 * The userâ€™s AWS IAM Role that trusts the Google-owned AWS IAM user Connection.
 * @member {String} iamRoleId
 */
AwsAccessRole.prototype['iamRoleId'] = undefined;

/**
 * A unique Google-owned and Google-generated identity for the Connection. This identity will be used to access the user's AWS IAM Role.
 * @member {String} identity
 */
AwsAccessRole.prototype['identity'] = undefined;






export default AwsAccessRole;

