# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConnectorConfigurationEndpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_port: str=None):
        """ConnectorConfigurationEndpoint - a model defined in OpenAPI

        :param host_port: The host_port of this ConnectorConfigurationEndpoint.
        """
        self.openapi_types = {
            'host_port': str
        }

        self.attribute_map = {
            'host_port': 'hostPort'
        }

        self._host_port = host_port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectorConfigurationEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectorConfigurationEndpoint of this ConnectorConfigurationEndpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_port(self):
        """Gets the host_port of this ConnectorConfigurationEndpoint.

        Host and port in a format of `hostname:port` as defined in https://www.ietf.org/rfc/rfc3986.html#section-3.2.2 and https://www.ietf.org/rfc/rfc3986.html#section-3.2.3.

        :return: The host_port of this ConnectorConfigurationEndpoint.
        :rtype: str
        """
        return self._host_port

    @host_port.setter
    def host_port(self, host_port):
        """Sets the host_port of this ConnectorConfigurationEndpoint.

        Host and port in a format of `hostname:port` as defined in https://www.ietf.org/rfc/rfc3986.html#section-3.2.2 and https://www.ietf.org/rfc/rfc3986.html#section-3.2.3.

        :param host_port: The host_port of this ConnectorConfigurationEndpoint.
        :type host_port: str
        """

        self._host_port = host_port
