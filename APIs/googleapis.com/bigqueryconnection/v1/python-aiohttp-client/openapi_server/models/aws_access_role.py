# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AwsAccessRole(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iam_role_id: str=None, identity: str=None):
        """AwsAccessRole - a model defined in OpenAPI

        :param iam_role_id: The iam_role_id of this AwsAccessRole.
        :param identity: The identity of this AwsAccessRole.
        """
        self.openapi_types = {
            'iam_role_id': str,
            'identity': str
        }

        self.attribute_map = {
            'iam_role_id': 'iamRoleId',
            'identity': 'identity'
        }

        self._iam_role_id = iam_role_id
        self._identity = identity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AwsAccessRole':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AwsAccessRole of this AwsAccessRole.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iam_role_id(self):
        """Gets the iam_role_id of this AwsAccessRole.

        The user’s AWS IAM Role that trusts the Google-owned AWS IAM user Connection.

        :return: The iam_role_id of this AwsAccessRole.
        :rtype: str
        """
        return self._iam_role_id

    @iam_role_id.setter
    def iam_role_id(self, iam_role_id):
        """Sets the iam_role_id of this AwsAccessRole.

        The user’s AWS IAM Role that trusts the Google-owned AWS IAM user Connection.

        :param iam_role_id: The iam_role_id of this AwsAccessRole.
        :type iam_role_id: str
        """

        self._iam_role_id = iam_role_id

    @property
    def identity(self):
        """Gets the identity of this AwsAccessRole.

        A unique Google-owned and Google-generated identity for the Connection. This identity will be used to access the user's AWS IAM Role.

        :return: The identity of this AwsAccessRole.
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this AwsAccessRole.

        A unique Google-owned and Google-generated identity for the Connection. This identity will be used to access the user's AWS IAM Role.

        :param identity: The identity of this AwsAccessRole.
        :type identity: str
        """

        self._identity = identity
