# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SalesforceDataCloudProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identity: str=None, instance_uri: str=None, tenant_id: str=None):
        """SalesforceDataCloudProperties - a model defined in OpenAPI

        :param identity: The identity of this SalesforceDataCloudProperties.
        :param instance_uri: The instance_uri of this SalesforceDataCloudProperties.
        :param tenant_id: The tenant_id of this SalesforceDataCloudProperties.
        """
        self.openapi_types = {
            'identity': str,
            'instance_uri': str,
            'tenant_id': str
        }

        self.attribute_map = {
            'identity': 'identity',
            'instance_uri': 'instanceUri',
            'tenant_id': 'tenantId'
        }

        self._identity = identity
        self._instance_uri = instance_uri
        self._tenant_id = tenant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesforceDataCloudProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SalesforceDataCloudProperties of this SalesforceDataCloudProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity(self):
        """Gets the identity of this SalesforceDataCloudProperties.

        Output only. A unique Google-owned and Google-generated service account identity for the connection.

        :return: The identity of this SalesforceDataCloudProperties.
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this SalesforceDataCloudProperties.

        Output only. A unique Google-owned and Google-generated service account identity for the connection.

        :param identity: The identity of this SalesforceDataCloudProperties.
        :type identity: str
        """

        self._identity = identity

    @property
    def instance_uri(self):
        """Gets the instance_uri of this SalesforceDataCloudProperties.

        The URL to the user's Salesforce DataCloud instance.

        :return: The instance_uri of this SalesforceDataCloudProperties.
        :rtype: str
        """
        return self._instance_uri

    @instance_uri.setter
    def instance_uri(self, instance_uri):
        """Sets the instance_uri of this SalesforceDataCloudProperties.

        The URL to the user's Salesforce DataCloud instance.

        :param instance_uri: The instance_uri of this SalesforceDataCloudProperties.
        :type instance_uri: str
        """

        self._instance_uri = instance_uri

    @property
    def tenant_id(self):
        """Gets the tenant_id of this SalesforceDataCloudProperties.

        The ID of the user's Salesforce tenant.

        :return: The tenant_id of this SalesforceDataCloudProperties.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this SalesforceDataCloudProperties.

        The ID of the user's Salesforce tenant.

        :param tenant_id: The tenant_id of this SalesforceDataCloudProperties.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id
