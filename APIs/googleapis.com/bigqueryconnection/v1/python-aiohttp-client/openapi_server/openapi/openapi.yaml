openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Allows users to manage BigQuery connections to external data sources.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: BigQuery Connection API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://bigqueryconnection.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: bigqueryconnection
externalDocs:
  url: https://cloud.google.com/bigquery/docs/connections-api-intro
servers:
- url: https://bigqueryconnection.googleapis.com/
tags:
- name: projects
paths:
  /v1/{name}:
    delete:
      description: Deletes connection and associated credential.
      operationId: bigqueryconnection_projects_locations_connections_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Name of the deleted connection, for example: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/bigquery
        Oauth2c:
        - https://www.googleapis.com/auth/bigquery
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Returns specified connection.
      operationId: bigqueryconnection_projects_locations_connections_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Name of the requested connection, for example: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/bigquery
        Oauth2c:
        - https://www.googleapis.com/auth/bigquery
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    patch:
      description: "Updates the specified connection. For security reasons, also resets\
        \ credential if connection properties are in the update field mask."
      operationId: bigqueryconnection_projects_locations_connections_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Name of the connection to update, for example: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Required. Update mask for the connection fields to be updated.
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/bigquery
        Oauth2c:
        - https://www.googleapis.com/auth/bigquery
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{parent}/connections:
    get:
      description: Returns a list of connections in the given project.
      operationId: bigqueryconnection_projects_locations_connections_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Parent resource name. Must be in the form: `projects/{project_id}/locations/{location_id}`"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Required. Page size.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: Page token.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/bigquery
        Oauth2c:
        - https://www.googleapis.com/auth/bigquery
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Creates a new connection.
      operationId: bigqueryconnection_projects_locations_connections_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Parent resource name. Must be in the format `projects/{project_id}/locations/{location_id}`"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Connection id that should be assigned to the created
          connection.
        explode: true
        in: query
        name: connectionId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/bigquery
        Oauth2c:
        - https://www.googleapis.com/auth/bigquery
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{resource}:getIamPolicy:
    post:
      description: Gets the access control policy for a resource. Returns an empty
        policy if the resource exists and does not have a policy set.
      operationId: bigqueryconnection_projects_locations_connections_get_iam_policy
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "REQUIRED: The resource for which the policy is being requested.\
          \ See [Resource names](https://cloud.google.com/apis/design/resource_names)\
          \ for the appropriate value for this field."
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/bigquery
        Oauth2c:
        - https://www.googleapis.com/auth/bigquery
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{resource}:setIamPolicy:
    post:
      description: "Sets the access control policy on the specified resource. Replaces\
        \ any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED`\
        \ errors."
      operationId: bigqueryconnection_projects_locations_connections_set_iam_policy
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "REQUIRED: The resource for which the policy is being specified.\
          \ See [Resource names](https://cloud.google.com/apis/design/resource_names)\
          \ for the appropriate value for this field."
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/bigquery
        Oauth2c:
        - https://www.googleapis.com/auth/bigquery
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{resource}:testIamPermissions:
    post:
      description: "Returns permissions that a caller has on the specified resource.\
        \ If the resource does not exist, this will return an empty set of permissions,\
        \ not a `NOT_FOUND` error. Note: This operation is designed to be used for\
        \ building permission-aware UIs and command-line tools, not for authorization\
        \ checking. This operation may \"fail open\" without warning."
      operationId: bigqueryconnection_projects_locations_connections_test_iam_permissions
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "REQUIRED: The resource for which the policy detail is being\
          \ requested. See [Resource names](https://cloud.google.com/apis/design/resource_names)\
          \ for the appropriate value for this field."
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/bigquery
        Oauth2c:
        - https://www.googleapis.com/auth/bigquery
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    AuditConfig:
      description: "Specifies the audit configuration for a service. The configuration\
        \ determines which permission types are logged, and what identities, if any,\
        \ are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.\
        \ If there are AuditConfigs for both `allServices` and a specific service,\
        \ the union of the two AuditConfigs is used for that service: the log_types\
        \ specified in each AuditConfig are enabled, and the exempted_members in each\
        \ AuditLogConfig are exempted. Example Policy with multiple AuditConfigs:\
        \ { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\"\
        : [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\"\
        \ ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" }\
        \ ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\"\
        : [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\"\
        : [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy\
        \ enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com`\
        \ from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging."
      example:
        auditLogConfigs:
        - logType: LOG_TYPE_UNSPECIFIED
          exemptedMembers:
          - exemptedMembers
          - exemptedMembers
        - logType: LOG_TYPE_UNSPECIFIED
          exemptedMembers:
          - exemptedMembers
          - exemptedMembers
        service: service
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          title: auditLogConfigs
          type: array
        service:
          description: "Specifies a service that will be enabled for audit logging.\
            \ For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices`\
            \ is a special value that covers all services."
          title: service
          type: string
      title: AuditConfig
      type: object
    AuditLogConfig:
      description: "Provides the configuration for logging a type of permissions.\
        \ Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\"\
        : [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This\
        \ enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com\
        \ from DATA_READ logging."
      example:
        logType: LOG_TYPE_UNSPECIFIED
        exemptedMembers:
        - exemptedMembers
        - exemptedMembers
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this
            type of permission. Follows the same format of Binding.members.
          items:
            type: string
          title: exemptedMembers
          type: array
        logType:
          description: The log type that this config enables.
          enum:
          - LOG_TYPE_UNSPECIFIED
          - ADMIN_READ
          - DATA_WRITE
          - DATA_READ
          title: logType
          type: string
      title: AuditLogConfig
      type: object
    AwsAccessRole:
      description: Authentication method for Amazon Web Services (AWS) that uses Google
        owned Google service account to assume into customer's AWS IAM Role.
      example:
        iamRoleId: iamRoleId
        identity: identity
      properties:
        iamRoleId:
          description: The user’s AWS IAM Role that trusts the Google-owned AWS IAM
            user Connection.
          title: iamRoleId
          type: string
        identity:
          description: A unique Google-owned and Google-generated identity for the
            Connection. This identity will be used to access the user's AWS IAM Role.
          title: identity
          type: string
      title: AwsAccessRole
      type: object
    AwsProperties:
      description: Connection properties specific to Amazon Web Services (AWS).
      example:
        accessRole:
          iamRoleId: iamRoleId
          identity: identity
      properties:
        accessRole:
          $ref: '#/components/schemas/AwsAccessRole'
      title: AwsProperties
      type: object
    AzureProperties:
      description: Container for connection properties specific to Azure.
      example:
        federatedApplicationClientId: federatedApplicationClientId
        redirectUri: redirectUri
        customerTenantId: customerTenantId
        clientId: clientId
        application: application
        identity: identity
        objectId: objectId
      properties:
        application:
          description: Output only. The name of the Azure Active Directory Application.
          readOnly: true
          title: application
          type: string
        clientId:
          description: Output only. The client id of the Azure Active Directory Application.
          readOnly: true
          title: clientId
          type: string
        customerTenantId:
          description: The id of customer's directory that host the data.
          title: customerTenantId
          type: string
        federatedApplicationClientId:
          description: The client ID of the user's Azure Active Directory Application
            used for a federated connection.
          title: federatedApplicationClientId
          type: string
        identity:
          description: Output only. A unique Google-owned and Google-generated identity
            for the Connection. This identity will be used to access the user's Azure
            Active Directory Application.
          readOnly: true
          title: identity
          type: string
        objectId:
          description: Output only. The object id of the Azure Active Directory Application.
          readOnly: true
          title: objectId
          type: string
        redirectUri:
          description: The URL user will be redirected to after granting consent during
            connection setup.
          title: redirectUri
          type: string
      title: AzureProperties
      type: object
    Binding:
      description: "Associates `members`, or principals, with a `role`."
      example:
        condition:
          expression: expression
          description: description
          location: location
          title: title
        role: role
        members:
        - members
        - members
      properties:
        condition:
          $ref: '#/components/schemas/Expr'
        members:
          description: "Specifies the principals requesting access for a Google Cloud\
            \ resource. `members` can have the following values: * `allUsers`: A special\
            \ identifier that represents anyone who is on the internet; with or without\
            \ a Google account. * `allAuthenticatedUsers`: A special identifier that\
            \ represents anyone who is authenticated with a Google account or a service\
            \ account. Does not include identities that come from external identity\
            \ providers (IdPs) through identity federation. * `user:{emailid}`: An\
            \ email address that represents a specific Google account. For example,\
            \ `alice@example.com` . * `serviceAccount:{emailid}`: An email address\
            \ that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`.\
            \ * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:\
            \ An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).\
            \ For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`.\
            \ * `group:{emailid}`: An email address that represents a Google group.\
            \ For example, `admins@example.com`. * `domain:{domain}`: The G Suite\
            \ domain (primary) that represents all the users of that domain. For example,\
            \ `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:\
            \ A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:\
            \ All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:\
            \ All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:\
            \ All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:\
            \ A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:\
            \ A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:\
            \ All identities in a workload identity pool with a certain attribute.\
            \ * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:\
            \ All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`:\
            \ An email address (plus unique identifier) representing a user that has\
            \ been recently deleted. For example, `alice@example.com?uid=123456789012345678901`.\
            \ If the user is recovered, this value reverts to `user:{emailid}` and\
            \ the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`:\
            \ An email address (plus unique identifier) representing a service account\
            \ that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\
            \ If the service account is undeleted, this value reverts to `serviceAccount:{emailid}`\
            \ and the undeleted service account retains the role in the binding. *\
            \ `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\
            \ identifier) representing a Google group that has been recently deleted.\
            \ For example, `admins@example.com?uid=123456789012345678901`. If the\
            \ group is recovered, this value reverts to `group:{emailid}` and the\
            \ recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:\
            \ Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`."
          items:
            type: string
          title: members
          type: array
        role:
          description: "Role that is assigned to the list of `members`, or principals.\
            \ For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an\
            \ overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview).\
            \ For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles)."
          title: role
          type: string
      title: Binding
      type: object
    CloudResourceProperties:
      description: Container for connection properties for delegation of access to
        GCP resources.
      example:
        serviceAccountId: serviceAccountId
      properties:
        serviceAccountId:
          description: "Output only. The account ID of the service created for the\
            \ purpose of this connection. The service account does not have any permissions\
            \ associated with it when it is created. After creation, customers delegate\
            \ permissions to the service account. When the connection is used in the\
            \ context of an operation in BigQuery, the service account will be used\
            \ to connect to the desired resources in GCP. The account ID is in the\
            \ form of: @gcp-sa-bigquery-cloudresource.iam.gserviceaccount.com"
          readOnly: true
          title: serviceAccountId
          type: string
      title: CloudResourceProperties
      type: object
    CloudSpannerProperties:
      description: Connection properties specific to Cloud Spanner.
      example:
        useParallelism: true
        database: database
        databaseRole: databaseRole
        maxParallelism: 0
        useDataBoost: true
        useServerlessAnalytics: true
      properties:
        database:
          description: Cloud Spanner database in the form `project/instance/database'
          title: database
          type: string
        databaseRole:
          description: "Optional. Cloud Spanner database role for fine-grained access\
            \ control. The Cloud Spanner admin should have provisioned the database\
            \ role with appropriate permissions, such as `SELECT` and `INSERT`. Other\
            \ users should only use roles provided by their Cloud Spanner admins.\
            \ For more details, see [About fine-grained access control] (https://cloud.google.com/spanner/docs/fgac-about).\
            \ REQUIRES: The database role name must start with a letter, and can only\
            \ contain letters, numbers, and underscores."
          title: databaseRole
          type: string
        maxParallelism:
          description: "Allows setting max parallelism per query when executing on\
            \ Spanner independent compute resources. If unspecified, default values\
            \ of parallelism are chosen that are dependent on the Cloud Spanner instance\
            \ configuration. REQUIRES: `use_parallelism` must be set. REQUIRES: `use_data_boost`\
            \ must be set."
          format: int32
          title: maxParallelism
          type: integer
        useDataBoost:
          description: "If set, the request will be executed via Spanner independent\
            \ compute resources. REQUIRES: `use_parallelism` must be set."
          title: useDataBoost
          type: boolean
        useParallelism:
          description: If parallelism should be used when reading from Cloud Spanner
          title: useParallelism
          type: boolean
        useServerlessAnalytics:
          deprecated: true
          description: "Deprecated: prefer use_data_boost instead. If the serverless\
            \ analytics service should be used to read data from Cloud Spanner. Note:\
            \ `use_parallelism` must be set when using serverless analytics."
          title: useServerlessAnalytics
          type: boolean
      title: CloudSpannerProperties
      type: object
    CloudSqlCredential:
      description: Credential info for the Cloud SQL.
      example:
        password: password
        username: username
      properties:
        password:
          description: The password for the credential.
          title: password
          type: string
        username:
          description: The username for the credential.
          title: username
          type: string
      title: CloudSqlCredential
      type: object
    CloudSqlProperties:
      description: Connection properties specific to the Cloud SQL.
      example:
        serviceAccountId: serviceAccountId
        database: database
        instanceId: instanceId
        credential:
          password: password
          username: username
        type: DATABASE_TYPE_UNSPECIFIED
      properties:
        credential:
          $ref: '#/components/schemas/CloudSqlCredential'
        database:
          description: Database name.
          title: database
          type: string
        instanceId:
          description: Cloud SQL instance ID in the form `project:location:instance`.
          title: instanceId
          type: string
        serviceAccountId:
          description: "Output only. The account ID of the service used for the purpose\
            \ of this connection. When the connection is used in the context of an\
            \ operation in BigQuery, this service account will serve as the identity\
            \ being used for connecting to the CloudSQL instance specified in this\
            \ connection."
          readOnly: true
          title: serviceAccountId
          type: string
        type:
          description: Type of the Cloud SQL database.
          enum:
          - DATABASE_TYPE_UNSPECIFIED
          - POSTGRES
          - MYSQL
          title: type
          type: string
      title: CloudSqlProperties
      type: object
    Connection:
      description: "Configuration parameters to establish connection with an external\
        \ data source, except the credential attributes."
      example:
        lastModifiedTime: lastModifiedTime
        creationTime: creationTime
        configuration:
          endpoint:
            hostPort: hostPort
          connectorId: connectorId
          authentication:
            usernamePassword:
              password:
                secretType: SECRET_TYPE_UNSPECIFIED
                plaintext: plaintext
              username: username
        cloudSql:
          serviceAccountId: serviceAccountId
          database: database
          instanceId: instanceId
          credential:
            password: password
            username: username
          type: DATABASE_TYPE_UNSPECIFIED
        description: description
        salesforceDataCloud:
          instanceUri: instanceUri
          identity: identity
          tenantId: tenantId
        cloudSpanner:
          useParallelism: true
          database: database
          databaseRole: databaseRole
          maxParallelism: 0
          useDataBoost: true
          useServerlessAnalytics: true
        hasCredential: true
        kmsKeyName: kmsKeyName
        spark:
          serviceAccountId: serviceAccountId
          sparkHistoryServerConfig:
            dataprocCluster: dataprocCluster
          metastoreServiceConfig:
            metastoreService: metastoreService
        name: name
        cloudResource:
          serviceAccountId: serviceAccountId
        aws:
          accessRole:
            iamRoleId: iamRoleId
            identity: identity
        friendlyName: friendlyName
        azure:
          federatedApplicationClientId: federatedApplicationClientId
          redirectUri: redirectUri
          customerTenantId: customerTenantId
          clientId: clientId
          application: application
          identity: identity
          objectId: objectId
      properties:
        aws:
          $ref: '#/components/schemas/AwsProperties'
        azure:
          $ref: '#/components/schemas/AzureProperties'
        cloudResource:
          $ref: '#/components/schemas/CloudResourceProperties'
        cloudSpanner:
          $ref: '#/components/schemas/CloudSpannerProperties'
        cloudSql:
          $ref: '#/components/schemas/CloudSqlProperties'
        configuration:
          $ref: '#/components/schemas/ConnectorConfiguration'
        creationTime:
          description: Output only. The creation timestamp of the connection.
          format: int64
          readOnly: true
          title: creationTime
          type: string
        description:
          description: User provided description.
          title: description
          type: string
        friendlyName:
          description: User provided display name for the connection.
          title: friendlyName
          type: string
        hasCredential:
          description: "Output only. True, if credential is configured for this connection."
          readOnly: true
          title: hasCredential
          type: boolean
        kmsKeyName:
          description: "Optional. The Cloud KMS key that is used for encryption. Example:\
            \ `projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]`"
          title: kmsKeyName
          type: string
        lastModifiedTime:
          description: Output only. The last update timestamp of the connection.
          format: int64
          readOnly: true
          title: lastModifiedTime
          type: string
        name:
          description: "Output only. The resource name of the connection in the form\
            \ of: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`"
          readOnly: true
          title: name
          type: string
        salesforceDataCloud:
          $ref: '#/components/schemas/SalesforceDataCloudProperties'
        spark:
          $ref: '#/components/schemas/SparkProperties'
      title: Connection
      type: object
    ConnectorConfiguration:
      description: Represents concrete parameter values for Connector Configuration.
      example:
        endpoint:
          hostPort: hostPort
        connectorId: connectorId
        authentication:
          usernamePassword:
            password:
              secretType: SECRET_TYPE_UNSPECIFIED
              plaintext: plaintext
            username: username
      properties:
        authentication:
          $ref: '#/components/schemas/ConnectorConfigurationAuthentication'
        connectorId:
          description: Required. Immutable. The ID of the Connector these parameters
            are configured for.
          title: connectorId
          type: string
        endpoint:
          $ref: '#/components/schemas/ConnectorConfigurationEndpoint'
      title: ConnectorConfiguration
      type: object
    ConnectorConfigurationAuthentication:
      description: Client authentication.
      example:
        usernamePassword:
          password:
            secretType: SECRET_TYPE_UNSPECIFIED
            plaintext: plaintext
          username: username
      properties:
        usernamePassword:
          $ref: '#/components/schemas/ConnectorConfigurationUsernamePassword'
      title: ConnectorConfigurationAuthentication
      type: object
    ConnectorConfigurationEndpoint:
      description: Remote endpoint specification.
      example:
        hostPort: hostPort
      properties:
        hostPort:
          description: Host and port in a format of `hostname:port` as defined in
            https://www.ietf.org/rfc/rfc3986.html#section-3.2.2 and https://www.ietf.org/rfc/rfc3986.html#section-3.2.3.
          title: hostPort
          type: string
      title: ConnectorConfigurationEndpoint
      type: object
    ConnectorConfigurationSecret:
      description: Secret value parameter.
      example:
        secretType: SECRET_TYPE_UNSPECIFIED
        plaintext: plaintext
      properties:
        plaintext:
          description: Input only. Secret as plaintext.
          title: plaintext
          type: string
        secretType:
          description: Output only. Indicates type of secret. Can be used to check
            type of stored secret value even if it's `INPUT_ONLY`.
          enum:
          - SECRET_TYPE_UNSPECIFIED
          - PLAINTEXT
          readOnly: true
          title: secretType
          type: string
      title: ConnectorConfigurationSecret
      type: object
    ConnectorConfigurationUsernamePassword:
      description: Username and Password authentication.
      example:
        password:
          secretType: SECRET_TYPE_UNSPECIFIED
          plaintext: plaintext
        username: username
      properties:
        password:
          $ref: '#/components/schemas/ConnectorConfigurationSecret'
        username:
          description: Required. Username.
          title: username
          type: string
      title: ConnectorConfigurationUsernamePassword
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language\
        \ (CEL) syntax. CEL is a C-like expression language. The syntax and semantics\
        \ of CEL are documented at https://github.com/google/cel-spec. Example (Comparison):\
        \ title: \"Summary size limit\" description: \"Determines if a summary is\
        \ less than 100 chars\" expression: \"document.summary.size() < 100\" Example\
        \ (Equality): title: \"Requestor is owner\" description: \"Determines if requestor\
        \ is the document owner\" expression: \"document.owner == request.auth.claims.email\"\
        \ Example (Logic): title: \"Public documents\" description: \"Determine whether\
        \ the document should be publicly visible\" expression: \"document.type !=\
        \ 'private' && document.type != 'internal'\" Example (Data Manipulation):\
        \ title: \"Notification string\" description: \"Create a notification string\
        \ with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\"\
        \ The exact variables and functions that may be referenced within an expression\
        \ are determined by the service that evaluates it. See the service documentation\
        \ for additional information."
      example:
        expression: expression
        description: description
        location: location
        title: title
      properties:
        description:
          description: "Optional. Description of the expression. This is a longer\
            \ text which describes the expression, e.g. when hovered over it in a\
            \ UI."
          title: description
          type: string
        expression:
          description: Textual representation of an expression in Common Expression
            Language syntax.
          title: expression
          type: string
        location:
          description: "Optional. String indicating the location of the expression\
            \ for error reporting, e.g. a file name and a position in the file."
          title: location
          type: string
        title:
          description: "Optional. Title for the expression, i.e. a short string describing\
            \ its purpose. This can be used e.g. in UIs which allow to enter the expression."
          title: title
          type: string
      title: Expr
      type: object
    GetIamPolicyRequest:
      description: Request message for `GetIamPolicy` method.
      example:
        options:
          requestedPolicyVersion: 0
      properties:
        options:
          $ref: '#/components/schemas/GetPolicyOptions'
      title: GetIamPolicyRequest
      type: object
    GetPolicyOptions:
      description: Encapsulates settings provided to GetIamPolicy.
      example:
        requestedPolicyVersion: 0
      properties:
        requestedPolicyVersion:
          description: "Optional. The maximum policy version that will be used to\
            \ format the policy. Valid values are 0, 1, and 3. Requests specifying\
            \ an invalid value will be rejected. Requests for policies with any conditional\
            \ role bindings must specify version 3. Policies with no conditional role\
            \ bindings may specify any valid value or leave the field unset. The policy\
            \ in the response might use the policy version that you specified, or\
            \ it might use a lower policy version. For example, if you specify version\
            \ 3, but the policy has no conditional role bindings, the response uses\
            \ version 1. To learn which resources support conditions in their IAM\
            \ policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          title: requestedPolicyVersion
          type: integer
      title: GetPolicyOptions
      type: object
    ListConnectionsResponse:
      description: The response for ConnectionService.ListConnections.
      example:
        nextPageToken: nextPageToken
        connections:
        - lastModifiedTime: lastModifiedTime
          creationTime: creationTime
          configuration:
            endpoint:
              hostPort: hostPort
            connectorId: connectorId
            authentication:
              usernamePassword:
                password:
                  secretType: SECRET_TYPE_UNSPECIFIED
                  plaintext: plaintext
                username: username
          cloudSql:
            serviceAccountId: serviceAccountId
            database: database
            instanceId: instanceId
            credential:
              password: password
              username: username
            type: DATABASE_TYPE_UNSPECIFIED
          description: description
          salesforceDataCloud:
            instanceUri: instanceUri
            identity: identity
            tenantId: tenantId
          cloudSpanner:
            useParallelism: true
            database: database
            databaseRole: databaseRole
            maxParallelism: 0
            useDataBoost: true
            useServerlessAnalytics: true
          hasCredential: true
          kmsKeyName: kmsKeyName
          spark:
            serviceAccountId: serviceAccountId
            sparkHistoryServerConfig:
              dataprocCluster: dataprocCluster
            metastoreServiceConfig:
              metastoreService: metastoreService
          name: name
          cloudResource:
            serviceAccountId: serviceAccountId
          aws:
            accessRole:
              iamRoleId: iamRoleId
              identity: identity
          friendlyName: friendlyName
          azure:
            federatedApplicationClientId: federatedApplicationClientId
            redirectUri: redirectUri
            customerTenantId: customerTenantId
            clientId: clientId
            application: application
            identity: identity
            objectId: objectId
        - lastModifiedTime: lastModifiedTime
          creationTime: creationTime
          configuration:
            endpoint:
              hostPort: hostPort
            connectorId: connectorId
            authentication:
              usernamePassword:
                password:
                  secretType: SECRET_TYPE_UNSPECIFIED
                  plaintext: plaintext
                username: username
          cloudSql:
            serviceAccountId: serviceAccountId
            database: database
            instanceId: instanceId
            credential:
              password: password
              username: username
            type: DATABASE_TYPE_UNSPECIFIED
          description: description
          salesforceDataCloud:
            instanceUri: instanceUri
            identity: identity
            tenantId: tenantId
          cloudSpanner:
            useParallelism: true
            database: database
            databaseRole: databaseRole
            maxParallelism: 0
            useDataBoost: true
            useServerlessAnalytics: true
          hasCredential: true
          kmsKeyName: kmsKeyName
          spark:
            serviceAccountId: serviceAccountId
            sparkHistoryServerConfig:
              dataprocCluster: dataprocCluster
            metastoreServiceConfig:
              metastoreService: metastoreService
          name: name
          cloudResource:
            serviceAccountId: serviceAccountId
          aws:
            accessRole:
              iamRoleId: iamRoleId
              identity: identity
          friendlyName: friendlyName
          azure:
            federatedApplicationClientId: federatedApplicationClientId
            redirectUri: redirectUri
            customerTenantId: customerTenantId
            clientId: clientId
            application: application
            identity: identity
            objectId: objectId
      properties:
        connections:
          description: List of connections.
          items:
            $ref: '#/components/schemas/Connection'
          title: connections
          type: array
        nextPageToken:
          description: Next page token.
          title: nextPageToken
          type: string
      title: ListConnectionsResponse
      type: object
    MetastoreServiceConfig:
      description: Configuration of the Dataproc Metastore Service.
      example:
        metastoreService: metastoreService
      properties:
        metastoreService:
          description: "Optional. Resource name of an existing Dataproc Metastore\
            \ service. Example: * `projects/[project_id]/locations/[region]/services/[service_id]`"
          title: metastoreService
          type: string
      title: MetastoreServiceConfig
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies\
        \ access controls for Google Cloud resources. A `Policy` is a collection of\
        \ `bindings`. A `binding` binds one or more `members`, or principals, to a\
        \ single `role`. Principals can be user accounts, service accounts, Google\
        \ groups, and domains (such as G Suite). A `role` is a named list of permissions;\
        \ each `role` can be an IAM predefined role or a user-created custom role.\
        \ For some types of Google Cloud resources, a `binding` can also specify a\
        \ `condition`, which is a logical expression that allows access to a resource\
        \ only if the expression evaluates to `true`. A condition can add constraints\
        \ based on attributes of the request, the resource, or both. To learn which\
        \ resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\
        \ **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\"\
        , \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\",\
        \ \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\
        \ ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\"\
        : [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\"\
        , \"description\": \"Does not grant access after Sep 2020\", \"expression\"\
        : \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\"\
        : \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: -\
        \ members: - user:mike@example.com - group:admins@example.com - domain:google.com\
        \ - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin\
        \ - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer\
        \ condition: title: expirable access description: Does not grant access after\
        \ Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\
        \ etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features,\
        \ see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      example:
        bindings:
        - condition:
            expression: expression
            description: description
            location: location
            title: title
          role: role
          members:
          - members
          - members
        - condition:
            expression: expression
            description: description
            location: location
            title: title
          role: role
          members:
          - members
          - members
        etag: etag
        version: 0
        auditConfigs:
        - auditLogConfigs:
          - logType: LOG_TYPE_UNSPECIFIED
            exemptedMembers:
            - exemptedMembers
            - exemptedMembers
          - logType: LOG_TYPE_UNSPECIFIED
            exemptedMembers:
            - exemptedMembers
            - exemptedMembers
          service: service
        - auditLogConfigs:
          - logType: LOG_TYPE_UNSPECIFIED
            exemptedMembers:
            - exemptedMembers
            - exemptedMembers
          - logType: LOG_TYPE_UNSPECIFIED
            exemptedMembers:
            - exemptedMembers
            - exemptedMembers
          service: service
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
          title: auditConfigs
          type: array
        bindings:
          description: "Associates a list of `members`, or principals, with a `role`.\
            \ Optionally, may specify a `condition` that determines how and when the\
            \ `bindings` are applied. Each of the `bindings` must contain at least\
            \ one principal. The `bindings` in a `Policy` can refer to up to 1,500\
            \ principals; up to 250 of these principals can be Google groups. Each\
            \ occurrence of a principal counts towards these limits. For example,\
            \ if the `bindings` grant 50 different roles to `user:alice@example.com`,\
            \ and not to any other principal, then you can add another 1,450 principals\
            \ to the `bindings` in the `Policy`."
          items:
            $ref: '#/components/schemas/Binding'
          title: bindings
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way\
            \ to help prevent simultaneous updates of a policy from overwriting each\
            \ other. It is strongly suggested that systems make use of the `etag`\
            \ in the read-modify-write cycle to perform policy updates in order to\
            \ avoid race conditions: An `etag` is returned in the response to `getIamPolicy`,\
            \ and systems are expected to put that etag in the request to `setIamPolicy`\
            \ to ensure that their change will be applied to the same version of the\
            \ policy. **Important:** If you use IAM Conditions, you must include the\
            \ `etag` field whenever you call `setIamPolicy`. If you omit this field,\
            \ then IAM allows you to overwrite a version `3` policy with a version\
            \ `1` policy, and all of the conditions in the version `3` policy are\
            \ lost."
          format: byte
          title: etag
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`,\
            \ `1`, and `3`. Requests that specify an invalid value are rejected. Any\
            \ operation that affects conditional role bindings must specify version\
            \ `3`. This requirement applies to the following operations: * Getting\
            \ a policy that includes a conditional role binding * Adding a conditional\
            \ role binding to a policy * Changing a conditional role binding in a\
            \ policy * Removing any role binding, with or without a condition, from\
            \ a policy that includes conditions **Important:** If you use IAM Conditions,\
            \ you must include the `etag` field whenever you call `setIamPolicy`.\
            \ If you omit this field, then IAM allows you to overwrite a version `3`\
            \ policy with a version `1` policy, and all of the conditions in the version\
            \ `3` policy are lost. If a policy does not include any conditions, operations\
            \ on that policy may specify any valid version or leave the field unset.\
            \ To learn which resources support conditions in their IAM policies, see\
            \ the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          title: version
          type: integer
      title: Policy
      type: object
    SalesforceDataCloudProperties:
      description: Connection properties specific to Salesforce DataCloud. This is
        intended for use only by Salesforce partner projects.
      example:
        instanceUri: instanceUri
        identity: identity
        tenantId: tenantId
      properties:
        identity:
          description: Output only. A unique Google-owned and Google-generated service
            account identity for the connection.
          readOnly: true
          title: identity
          type: string
        instanceUri:
          description: The URL to the user's Salesforce DataCloud instance.
          title: instanceUri
          type: string
        tenantId:
          description: The ID of the user's Salesforce tenant.
          title: tenantId
          type: string
      title: SalesforceDataCloudProperties
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      example:
        updateMask: updateMask
        policy:
          bindings:
          - condition:
              expression: expression
              description: description
              location: location
              title: title
            role: role
            members:
            - members
            - members
          - condition:
              expression: expression
              description: description
              location: location
              title: title
            role: role
            members:
            - members
            - members
          etag: etag
          version: 0
          auditConfigs:
          - auditLogConfigs:
            - logType: LOG_TYPE_UNSPECIFIED
              exemptedMembers:
              - exemptedMembers
              - exemptedMembers
            - logType: LOG_TYPE_UNSPECIFIED
              exemptedMembers:
              - exemptedMembers
              - exemptedMembers
            service: service
          - auditLogConfigs:
            - logType: LOG_TYPE_UNSPECIFIED
              exemptedMembers:
              - exemptedMembers
              - exemptedMembers
            - logType: LOG_TYPE_UNSPECIFIED
              exemptedMembers:
              - exemptedMembers
              - exemptedMembers
            service: service
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: "OPTIONAL: A FieldMask specifying which fields of the policy\
            \ to modify. Only the fields in the mask will be modified. If no mask\
            \ is provided, the following default mask is used: `paths: \"bindings,\
            \ etag\"`"
          format: google-fieldmask
          title: updateMask
          type: string
      title: SetIamPolicyRequest
      type: object
    SparkHistoryServerConfig:
      description: Configuration of the Spark History Server.
      example:
        dataprocCluster: dataprocCluster
      properties:
        dataprocCluster:
          description: "Optional. Resource name of an existing Dataproc Cluster to\
            \ act as a Spark History Server for the connection. Example: * `projects/[project_id]/regions/[region]/clusters/[cluster_name]`"
          title: dataprocCluster
          type: string
      title: SparkHistoryServerConfig
      type: object
    SparkProperties:
      description: Container for connection properties to execute stored procedures
        for Apache Spark.
      example:
        serviceAccountId: serviceAccountId
        sparkHistoryServerConfig:
          dataprocCluster: dataprocCluster
        metastoreServiceConfig:
          metastoreService: metastoreService
      properties:
        metastoreServiceConfig:
          $ref: '#/components/schemas/MetastoreServiceConfig'
        serviceAccountId:
          description: "Output only. The account ID of the service created for the\
            \ purpose of this connection. The service account does not have any permissions\
            \ associated with it when it is created. After creation, customers delegate\
            \ permissions to the service account. When the connection is used in the\
            \ context of a stored procedure for Apache Spark in BigQuery, the service\
            \ account is used to connect to the desired resources in Google Cloud.\
            \ The account ID is in the form of: bqcx--@gcp-sa-bigquery-consp.iam.gserviceaccount.com"
          readOnly: true
          title: serviceAccountId
          type: string
        sparkHistoryServerConfig:
          $ref: '#/components/schemas/SparkHistoryServerConfig'
      title: SparkProperties
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      example:
        permissions:
        - permissions
        - permissions
      properties:
        permissions:
          description: "The set of permissions to check for the `resource`. Permissions\
            \ with wildcards (such as `*` or `storage.*`) are not allowed. For more\
            \ information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
          items:
            type: string
          title: permissions
          type: array
      title: TestIamPermissionsRequest
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      example:
        permissions:
        - permissions
        - permissions
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller
            is allowed.
          items:
            type: string
          title: permissions
          type: array
      title: TestIamPermissionsResponse
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/bigquery: View and manage your data in
              Google BigQuery and see the email address for your Google Account
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/bigquery: View and manage your data in
              Google BigQuery and see the email address for your Google Account
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
