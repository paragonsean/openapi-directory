/**
 * BigQuery Connection API
 * Allows users to manage BigQuery connections to external data sources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnection::OAIConnection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnection::OAIConnection() {
    this->initializeModel();
}

OAIConnection::~OAIConnection() {}

void OAIConnection::initializeModel() {

    m_aws_isSet = false;
    m_aws_isValid = false;

    m_azure_isSet = false;
    m_azure_isValid = false;

    m_cloud_resource_isSet = false;
    m_cloud_resource_isValid = false;

    m_cloud_spanner_isSet = false;
    m_cloud_spanner_isValid = false;

    m_cloud_sql_isSet = false;
    m_cloud_sql_isValid = false;

    m_configuration_isSet = false;
    m_configuration_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_has_credential_isSet = false;
    m_has_credential_isValid = false;

    m_kms_key_name_isSet = false;
    m_kms_key_name_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_salesforce_data_cloud_isSet = false;
    m_salesforce_data_cloud_isValid = false;

    m_spark_isSet = false;
    m_spark_isValid = false;
}

void OAIConnection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnection::fromJsonObject(QJsonObject json) {

    m_aws_isValid = ::OpenAPI::fromJsonValue(m_aws, json[QString("aws")]);
    m_aws_isSet = !json[QString("aws")].isNull() && m_aws_isValid;

    m_azure_isValid = ::OpenAPI::fromJsonValue(m_azure, json[QString("azure")]);
    m_azure_isSet = !json[QString("azure")].isNull() && m_azure_isValid;

    m_cloud_resource_isValid = ::OpenAPI::fromJsonValue(m_cloud_resource, json[QString("cloudResource")]);
    m_cloud_resource_isSet = !json[QString("cloudResource")].isNull() && m_cloud_resource_isValid;

    m_cloud_spanner_isValid = ::OpenAPI::fromJsonValue(m_cloud_spanner, json[QString("cloudSpanner")]);
    m_cloud_spanner_isSet = !json[QString("cloudSpanner")].isNull() && m_cloud_spanner_isValid;

    m_cloud_sql_isValid = ::OpenAPI::fromJsonValue(m_cloud_sql, json[QString("cloudSql")]);
    m_cloud_sql_isSet = !json[QString("cloudSql")].isNull() && m_cloud_sql_isValid;

    m_configuration_isValid = ::OpenAPI::fromJsonValue(m_configuration, json[QString("configuration")]);
    m_configuration_isSet = !json[QString("configuration")].isNull() && m_configuration_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendlyName")]);
    m_friendly_name_isSet = !json[QString("friendlyName")].isNull() && m_friendly_name_isValid;

    m_has_credential_isValid = ::OpenAPI::fromJsonValue(m_has_credential, json[QString("hasCredential")]);
    m_has_credential_isSet = !json[QString("hasCredential")].isNull() && m_has_credential_isValid;

    m_kms_key_name_isValid = ::OpenAPI::fromJsonValue(m_kms_key_name, json[QString("kmsKeyName")]);
    m_kms_key_name_isSet = !json[QString("kmsKeyName")].isNull() && m_kms_key_name_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_salesforce_data_cloud_isValid = ::OpenAPI::fromJsonValue(m_salesforce_data_cloud, json[QString("salesforceDataCloud")]);
    m_salesforce_data_cloud_isSet = !json[QString("salesforceDataCloud")].isNull() && m_salesforce_data_cloud_isValid;

    m_spark_isValid = ::OpenAPI::fromJsonValue(m_spark, json[QString("spark")]);
    m_spark_isSet = !json[QString("spark")].isNull() && m_spark_isValid;
}

QString OAIConnection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnection::asJsonObject() const {
    QJsonObject obj;
    if (m_aws.isSet()) {
        obj.insert(QString("aws"), ::OpenAPI::toJsonValue(m_aws));
    }
    if (m_azure.isSet()) {
        obj.insert(QString("azure"), ::OpenAPI::toJsonValue(m_azure));
    }
    if (m_cloud_resource.isSet()) {
        obj.insert(QString("cloudResource"), ::OpenAPI::toJsonValue(m_cloud_resource));
    }
    if (m_cloud_spanner.isSet()) {
        obj.insert(QString("cloudSpanner"), ::OpenAPI::toJsonValue(m_cloud_spanner));
    }
    if (m_cloud_sql.isSet()) {
        obj.insert(QString("cloudSql"), ::OpenAPI::toJsonValue(m_cloud_sql));
    }
    if (m_configuration.isSet()) {
        obj.insert(QString("configuration"), ::OpenAPI::toJsonValue(m_configuration));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendlyName"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_has_credential_isSet) {
        obj.insert(QString("hasCredential"), ::OpenAPI::toJsonValue(m_has_credential));
    }
    if (m_kms_key_name_isSet) {
        obj.insert(QString("kmsKeyName"), ::OpenAPI::toJsonValue(m_kms_key_name));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_salesforce_data_cloud.isSet()) {
        obj.insert(QString("salesforceDataCloud"), ::OpenAPI::toJsonValue(m_salesforce_data_cloud));
    }
    if (m_spark.isSet()) {
        obj.insert(QString("spark"), ::OpenAPI::toJsonValue(m_spark));
    }
    return obj;
}

OAIAwsProperties OAIConnection::getAws() const {
    return m_aws;
}
void OAIConnection::setAws(const OAIAwsProperties &aws) {
    m_aws = aws;
    m_aws_isSet = true;
}

bool OAIConnection::is_aws_Set() const{
    return m_aws_isSet;
}

bool OAIConnection::is_aws_Valid() const{
    return m_aws_isValid;
}

OAIAzureProperties OAIConnection::getAzure() const {
    return m_azure;
}
void OAIConnection::setAzure(const OAIAzureProperties &azure) {
    m_azure = azure;
    m_azure_isSet = true;
}

bool OAIConnection::is_azure_Set() const{
    return m_azure_isSet;
}

bool OAIConnection::is_azure_Valid() const{
    return m_azure_isValid;
}

OAICloudResourceProperties OAIConnection::getCloudResource() const {
    return m_cloud_resource;
}
void OAIConnection::setCloudResource(const OAICloudResourceProperties &cloud_resource) {
    m_cloud_resource = cloud_resource;
    m_cloud_resource_isSet = true;
}

bool OAIConnection::is_cloud_resource_Set() const{
    return m_cloud_resource_isSet;
}

bool OAIConnection::is_cloud_resource_Valid() const{
    return m_cloud_resource_isValid;
}

OAICloudSpannerProperties OAIConnection::getCloudSpanner() const {
    return m_cloud_spanner;
}
void OAIConnection::setCloudSpanner(const OAICloudSpannerProperties &cloud_spanner) {
    m_cloud_spanner = cloud_spanner;
    m_cloud_spanner_isSet = true;
}

bool OAIConnection::is_cloud_spanner_Set() const{
    return m_cloud_spanner_isSet;
}

bool OAIConnection::is_cloud_spanner_Valid() const{
    return m_cloud_spanner_isValid;
}

OAICloudSqlProperties OAIConnection::getCloudSql() const {
    return m_cloud_sql;
}
void OAIConnection::setCloudSql(const OAICloudSqlProperties &cloud_sql) {
    m_cloud_sql = cloud_sql;
    m_cloud_sql_isSet = true;
}

bool OAIConnection::is_cloud_sql_Set() const{
    return m_cloud_sql_isSet;
}

bool OAIConnection::is_cloud_sql_Valid() const{
    return m_cloud_sql_isValid;
}

OAIConnectorConfiguration OAIConnection::getConfiguration() const {
    return m_configuration;
}
void OAIConnection::setConfiguration(const OAIConnectorConfiguration &configuration) {
    m_configuration = configuration;
    m_configuration_isSet = true;
}

bool OAIConnection::is_configuration_Set() const{
    return m_configuration_isSet;
}

bool OAIConnection::is_configuration_Valid() const{
    return m_configuration_isValid;
}

QString OAIConnection::getCreationTime() const {
    return m_creation_time;
}
void OAIConnection::setCreationTime(const QString &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIConnection::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIConnection::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAIConnection::getDescription() const {
    return m_description;
}
void OAIConnection::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIConnection::is_description_Set() const{
    return m_description_isSet;
}

bool OAIConnection::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIConnection::getFriendlyName() const {
    return m_friendly_name;
}
void OAIConnection::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIConnection::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIConnection::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

bool OAIConnection::isHasCredential() const {
    return m_has_credential;
}
void OAIConnection::setHasCredential(const bool &has_credential) {
    m_has_credential = has_credential;
    m_has_credential_isSet = true;
}

bool OAIConnection::is_has_credential_Set() const{
    return m_has_credential_isSet;
}

bool OAIConnection::is_has_credential_Valid() const{
    return m_has_credential_isValid;
}

QString OAIConnection::getKmsKeyName() const {
    return m_kms_key_name;
}
void OAIConnection::setKmsKeyName(const QString &kms_key_name) {
    m_kms_key_name = kms_key_name;
    m_kms_key_name_isSet = true;
}

bool OAIConnection::is_kms_key_name_Set() const{
    return m_kms_key_name_isSet;
}

bool OAIConnection::is_kms_key_name_Valid() const{
    return m_kms_key_name_isValid;
}

QString OAIConnection::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIConnection::setLastModifiedTime(const QString &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIConnection::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIConnection::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIConnection::getName() const {
    return m_name;
}
void OAIConnection::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIConnection::is_name_Set() const{
    return m_name_isSet;
}

bool OAIConnection::is_name_Valid() const{
    return m_name_isValid;
}

OAISalesforceDataCloudProperties OAIConnection::getSalesforceDataCloud() const {
    return m_salesforce_data_cloud;
}
void OAIConnection::setSalesforceDataCloud(const OAISalesforceDataCloudProperties &salesforce_data_cloud) {
    m_salesforce_data_cloud = salesforce_data_cloud;
    m_salesforce_data_cloud_isSet = true;
}

bool OAIConnection::is_salesforce_data_cloud_Set() const{
    return m_salesforce_data_cloud_isSet;
}

bool OAIConnection::is_salesforce_data_cloud_Valid() const{
    return m_salesforce_data_cloud_isValid;
}

OAISparkProperties OAIConnection::getSpark() const {
    return m_spark;
}
void OAIConnection::setSpark(const OAISparkProperties &spark) {
    m_spark = spark;
    m_spark_isSet = true;
}

bool OAIConnection::is_spark_Set() const{
    return m_spark_isSet;
}

bool OAIConnection::is_spark_Valid() const{
    return m_spark_isValid;
}

bool OAIConnection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aws.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_azure.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_resource.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_spanner.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_sql.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_credential_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_key_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_salesforce_data_cloud.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_spark.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnection::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
