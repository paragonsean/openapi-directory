/**
 * BigQuery Connection API
 * Allows users to manage BigQuery connections to external data sources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAwsProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAwsProperties::OAIAwsProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAwsProperties::OAIAwsProperties() {
    this->initializeModel();
}

OAIAwsProperties::~OAIAwsProperties() {}

void OAIAwsProperties::initializeModel() {

    m_access_role_isSet = false;
    m_access_role_isValid = false;
}

void OAIAwsProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAwsProperties::fromJsonObject(QJsonObject json) {

    m_access_role_isValid = ::OpenAPI::fromJsonValue(m_access_role, json[QString("accessRole")]);
    m_access_role_isSet = !json[QString("accessRole")].isNull() && m_access_role_isValid;
}

QString OAIAwsProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAwsProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_access_role.isSet()) {
        obj.insert(QString("accessRole"), ::OpenAPI::toJsonValue(m_access_role));
    }
    return obj;
}

OAIAwsAccessRole OAIAwsProperties::getAccessRole() const {
    return m_access_role;
}
void OAIAwsProperties::setAccessRole(const OAIAwsAccessRole &access_role) {
    m_access_role = access_role;
    m_access_role_isSet = true;
}

bool OAIAwsProperties::is_access_role_Set() const{
    return m_access_role_isSet;
}

bool OAIAwsProperties::is_access_role_Valid() const{
    return m_access_role_isValid;
}

bool OAIAwsProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_role.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAwsProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
