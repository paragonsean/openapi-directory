/**
 * BigQuery Connection API
 * Allows users to manage BigQuery connections to external data sources.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnection::OAIConnection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnection::OAIConnection() {
    this->initializeModel();
}

OAIConnection::~OAIConnection() {}

void OAIConnection::initializeModel() {

    m_cloud_sql_isSet = false;
    m_cloud_sql_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_has_credential_isSet = false;
    m_has_credential_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIConnection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnection::fromJsonObject(QJsonObject json) {

    m_cloud_sql_isValid = ::OpenAPI::fromJsonValue(m_cloud_sql, json[QString("cloudSql")]);
    m_cloud_sql_isSet = !json[QString("cloudSql")].isNull() && m_cloud_sql_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendlyName")]);
    m_friendly_name_isSet = !json[QString("friendlyName")].isNull() && m_friendly_name_isValid;

    m_has_credential_isValid = ::OpenAPI::fromJsonValue(m_has_credential, json[QString("hasCredential")]);
    m_has_credential_isSet = !json[QString("hasCredential")].isNull() && m_has_credential_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIConnection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnection::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_sql.isSet()) {
        obj.insert(QString("cloudSql"), ::OpenAPI::toJsonValue(m_cloud_sql));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendlyName"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_has_credential_isSet) {
        obj.insert(QString("hasCredential"), ::OpenAPI::toJsonValue(m_has_credential));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAICloudSqlProperties OAIConnection::getCloudSql() const {
    return m_cloud_sql;
}
void OAIConnection::setCloudSql(const OAICloudSqlProperties &cloud_sql) {
    m_cloud_sql = cloud_sql;
    m_cloud_sql_isSet = true;
}

bool OAIConnection::is_cloud_sql_Set() const{
    return m_cloud_sql_isSet;
}

bool OAIConnection::is_cloud_sql_Valid() const{
    return m_cloud_sql_isValid;
}

QString OAIConnection::getCreationTime() const {
    return m_creation_time;
}
void OAIConnection::setCreationTime(const QString &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIConnection::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIConnection::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAIConnection::getDescription() const {
    return m_description;
}
void OAIConnection::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIConnection::is_description_Set() const{
    return m_description_isSet;
}

bool OAIConnection::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIConnection::getFriendlyName() const {
    return m_friendly_name;
}
void OAIConnection::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIConnection::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIConnection::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

bool OAIConnection::isHasCredential() const {
    return m_has_credential;
}
void OAIConnection::setHasCredential(const bool &has_credential) {
    m_has_credential = has_credential;
    m_has_credential_isSet = true;
}

bool OAIConnection::is_has_credential_Set() const{
    return m_has_credential_isSet;
}

bool OAIConnection::is_has_credential_Valid() const{
    return m_has_credential_isValid;
}

QString OAIConnection::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIConnection::setLastModifiedTime(const QString &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIConnection::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIConnection::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIConnection::getName() const {
    return m_name;
}
void OAIConnection::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIConnection::is_name_Set() const{
    return m_name_isSet;
}

bool OAIConnection::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIConnection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_sql.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_credential_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnection::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
