/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::~OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig() {}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::initializeModel() {

    m_aggregation_isSet = false;
    m_aggregation_isValid = false;

    m_custom_grouping_isSet = false;
    m_custom_grouping_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_field_filter_isSet = false;
    m_field_filter_isValid = false;

    m_group_isSet = false;
    m_group_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::fromJsonObject(QJsonObject json) {

    m_aggregation_isValid = ::OpenAPI::fromJsonValue(m_aggregation, json[QString("aggregation")]);
    m_aggregation_isSet = !json[QString("aggregation")].isNull() && m_aggregation_isValid;

    m_custom_grouping_isValid = ::OpenAPI::fromJsonValue(m_custom_grouping, json[QString("customGrouping")]);
    m_custom_grouping_isSet = !json[QString("customGrouping")].isNull() && m_custom_grouping_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_field_filter_isValid = ::OpenAPI::fromJsonValue(m_field_filter, json[QString("fieldFilter")]);
    m_field_filter_isSet = !json[QString("fieldFilter")].isNull() && m_field_filter_isValid;

    m_group_isValid = ::OpenAPI::fromJsonValue(m_group, json[QString("group")]);
    m_group_isSet = !json[QString("group")].isNull() && m_group_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregation_isSet) {
        obj.insert(QString("aggregation"), ::OpenAPI::toJsonValue(m_aggregation));
    }
    if (m_custom_grouping.isSet()) {
        obj.insert(QString("customGrouping"), ::OpenAPI::toJsonValue(m_custom_grouping));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_field_filter_isSet) {
        obj.insert(QString("fieldFilter"), ::OpenAPI::toJsonValue(m_field_filter));
    }
    if (m_group_isSet) {
        obj.insert(QString("group"), ::OpenAPI::toJsonValue(m_group));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::getAggregation() const {
    return m_aggregation;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::setAggregation(const QString &aggregation) {
    m_aggregation = aggregation;
    m_aggregation_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::is_aggregation_Set() const{
    return m_aggregation_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::is_aggregation_Valid() const{
    return m_aggregation_isValid;
}

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::getCustomGrouping() const {
    return m_custom_grouping;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::setCustomGrouping(const OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping &custom_grouping) {
    m_custom_grouping = custom_grouping;
    m_custom_grouping_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::is_custom_grouping_Set() const{
    return m_custom_grouping_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::is_custom_grouping_Valid() const{
    return m_custom_grouping_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::getFieldFilter() const {
    return m_field_filter;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::setFieldFilter(const QString &field_filter) {
    m_field_filter = field_filter;
    m_field_filter_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::is_field_filter_Set() const{
    return m_field_filter_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::is_field_filter_Valid() const{
    return m_field_filter_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::getGroup() const {
    return m_group;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::setGroup(const QString &group) {
    m_group = group;
    m_group_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::is_group_Set() const{
    return m_group_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::is_group_Valid() const{
    return m_group_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_grouping.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
