/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::~OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse() {}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::initializeModel() {

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_partner_tenants_isSet = false;
    m_partner_tenants_isValid = false;
}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::fromJsonObject(QJsonObject json) {

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_partner_tenants_isValid = ::OpenAPI::fromJsonValue(m_partner_tenants, json[QString("partnerTenants")]);
    m_partner_tenants_isSet = !json[QString("partnerTenants")].isNull() && m_partner_tenants_isValid;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_partner_tenants.size() > 0) {
        obj.insert(QString("partnerTenants"), ::OpenAPI::toJsonValue(m_partner_tenants));
    }
    return obj;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant> OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::getPartnerTenants() const {
    return m_partner_tenants;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::setPartnerTenants(const QList<OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant> &partner_tenants) {
    m_partner_tenants = partner_tenants;
    m_partner_tenants_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::is_partner_tenants_Set() const{
    return m_partner_tenants_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::is_partner_tenants_Valid() const{
    return m_partner_tenants_isValid;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_partner_tenants.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
