/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::~OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight() {}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::initializeModel() {

    m_applied_config_isSet = false;
    m_applied_config_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_rows_isSet = false;
    m_rows_isValid = false;
}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::fromJsonObject(QJsonObject json) {

    m_applied_config_isValid = ::OpenAPI::fromJsonValue(m_applied_config, json[QString("appliedConfig")]);
    m_applied_config_isSet = !json[QString("appliedConfig")].isNull() && m_applied_config_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_rows_isValid = ::OpenAPI::fromJsonValue(m_rows, json[QString("rows")]);
    m_rows_isSet = !json[QString("rows")].isNull() && m_rows_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::asJsonObject() const {
    QJsonObject obj;
    if (m_applied_config.isSet()) {
        obj.insert(QString("appliedConfig"), ::OpenAPI::toJsonValue(m_applied_config));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_rows.size() > 0) {
        obj.insert(QString("rows"), ::OpenAPI::toJsonValue(m_rows));
    }
    return obj;
}

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::getAppliedConfig() const {
    return m_applied_config;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::setAppliedConfig(const OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig &applied_config) {
    m_applied_config = applied_config;
    m_applied_config_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::is_applied_config_Set() const{
    return m_applied_config_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::is_applied_config_Valid() const{
    return m_applied_config_isValid;
}

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::getMetadata() const {
    return m_metadata;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::setMetadata(const OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::getName() const {
    return m_name;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaRow> OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::getRows() const {
    return m_rows;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::setRows(const QList<OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaRow> &rows) {
    m_rows = rows;
    m_rows_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::is_rows_Set() const{
    return m_rows_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::is_rows_Valid() const{
    return m_rows_isValid;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_applied_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rows.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
