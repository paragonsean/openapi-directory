/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::~OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse() {}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::initializeModel() {

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_proxy_configs_isSet = false;
    m_proxy_configs_isValid = false;
}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::fromJsonObject(QJsonObject json) {

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_proxy_configs_isValid = ::OpenAPI::fromJsonValue(m_proxy_configs, json[QString("proxyConfigs")]);
    m_proxy_configs_isSet = !json[QString("proxyConfigs")].isNull() && m_proxy_configs_isValid;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_proxy_configs.size() > 0) {
        obj.insert(QString("proxyConfigs"), ::OpenAPI::toJsonValue(m_proxy_configs));
    }
    return obj;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig> OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::getProxyConfigs() const {
    return m_proxy_configs;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::setProxyConfigs(const QList<OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig> &proxy_configs) {
    m_proxy_configs = proxy_configs;
    m_proxy_configs_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::is_proxy_configs_Set() const{
    return m_proxy_configs_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::is_proxy_configs_Valid() const{
    return m_proxy_configs_isValid;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_proxy_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
