/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::~OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig() {}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_encryption_info_isSet = false;
    m_encryption_info_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_proxy_uri_isSet = false;
    m_proxy_uri_isValid = false;

    m_routing_info_isSet = false;
    m_routing_info_isValid = false;

    m_transport_info_isSet = false;
    m_transport_info_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_encryption_info_isValid = ::OpenAPI::fromJsonValue(m_encryption_info, json[QString("encryptionInfo")]);
    m_encryption_info_isSet = !json[QString("encryptionInfo")].isNull() && m_encryption_info_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_proxy_uri_isValid = ::OpenAPI::fromJsonValue(m_proxy_uri, json[QString("proxyUri")]);
    m_proxy_uri_isSet = !json[QString("proxyUri")].isNull() && m_proxy_uri_isValid;

    m_routing_info_isValid = ::OpenAPI::fromJsonValue(m_routing_info, json[QString("routingInfo")]);
    m_routing_info_isSet = !json[QString("routingInfo")].isNull() && m_routing_info_isValid;

    m_transport_info_isValid = ::OpenAPI::fromJsonValue(m_transport_info, json[QString("transportInfo")]);
    m_transport_info_isSet = !json[QString("transportInfo")].isNull() && m_transport_info_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_encryption_info.isSet()) {
        obj.insert(QString("encryptionInfo"), ::OpenAPI::toJsonValue(m_encryption_info));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_proxy_uri_isSet) {
        obj.insert(QString("proxyUri"), ::OpenAPI::toJsonValue(m_proxy_uri));
    }
    if (m_routing_info.isSet()) {
        obj.insert(QString("routingInfo"), ::OpenAPI::toJsonValue(m_routing_info));
    }
    if (m_transport_info.isSet()) {
        obj.insert(QString("transportInfo"), ::OpenAPI::toJsonValue(m_transport_info));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaEncryptionInfo OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::getEncryptionInfo() const {
    return m_encryption_info;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::setEncryptionInfo(const OAIGoogleCloudBeyondcorpPartnerservicesV1alphaEncryptionInfo &encryption_info) {
    m_encryption_info = encryption_info;
    m_encryption_info_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_encryption_info_Set() const{
    return m_encryption_info_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_encryption_info_Valid() const{
    return m_encryption_info_isValid;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::getName() const {
    return m_name;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::getProxyUri() const {
    return m_proxy_uri;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::setProxyUri(const QString &proxy_uri) {
    m_proxy_uri = proxy_uri;
    m_proxy_uri_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_proxy_uri_Set() const{
    return m_proxy_uri_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_proxy_uri_Valid() const{
    return m_proxy_uri_isValid;
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaRoutingInfo OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::getRoutingInfo() const {
    return m_routing_info;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::setRoutingInfo(const OAIGoogleCloudBeyondcorpPartnerservicesV1alphaRoutingInfo &routing_info) {
    m_routing_info = routing_info;
    m_routing_info_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_routing_info_Set() const{
    return m_routing_info_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_routing_info_Valid() const{
    return m_routing_info_isValid;
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::getTransportInfo() const {
    return m_transport_info;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::setTransportInfo(const OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo &transport_info) {
    m_transport_info = transport_info;
    m_transport_info_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_transport_info_Set() const{
    return m_transport_info_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_transport_info_Valid() const{
    return m_transport_info_isValid;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_encryption_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_proxy_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_routing_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transport_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
