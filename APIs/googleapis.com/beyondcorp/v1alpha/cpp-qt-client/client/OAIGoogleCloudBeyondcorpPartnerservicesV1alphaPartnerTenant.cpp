/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::~OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant() {}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_group_isSet = false;
    m_group_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_partner_metadata_isSet = false;
    m_partner_metadata_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_group_isValid = ::OpenAPI::fromJsonValue(m_group, json[QString("group")]);
    m_group_isSet = !json[QString("group")].isNull() && m_group_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_partner_metadata_isValid = ::OpenAPI::fromJsonValue(m_partner_metadata, json[QString("partnerMetadata")]);
    m_partner_metadata_isSet = !json[QString("partnerMetadata")].isNull() && m_partner_metadata_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_group.isSet()) {
        obj.insert(QString("group"), ::OpenAPI::toJsonValue(m_group));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_partner_metadata.isSet()) {
        obj.insert(QString("partnerMetadata"), ::OpenAPI::toJsonValue(m_partner_metadata));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaGroup OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::getGroup() const {
    return m_group;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::setGroup(const OAIGoogleCloudBeyondcorpPartnerservicesV1alphaGroup &group) {
    m_group = group;
    m_group_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::is_group_Set() const{
    return m_group_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::is_group_Valid() const{
    return m_group_isValid;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::getName() const {
    return m_name;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::getPartnerMetadata() const {
    return m_partner_metadata;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::setPartnerMetadata(const OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata &partner_metadata) {
    m_partner_metadata = partner_metadata;
    m_partner_metadata_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::is_partner_metadata_Set() const{
    return m_partner_metadata_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::is_partner_metadata_Valid() const{
    return m_partner_metadata_isValid;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_partner_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
