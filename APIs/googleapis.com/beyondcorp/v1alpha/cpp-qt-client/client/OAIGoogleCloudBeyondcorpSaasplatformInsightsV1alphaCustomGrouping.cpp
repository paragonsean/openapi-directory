/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::~OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping() {}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::initializeModel() {

    m_field_filter_isSet = false;
    m_field_filter_isValid = false;

    m_group_fields_isSet = false;
    m_group_fields_isValid = false;
}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::fromJsonObject(QJsonObject json) {

    m_field_filter_isValid = ::OpenAPI::fromJsonValue(m_field_filter, json[QString("fieldFilter")]);
    m_field_filter_isSet = !json[QString("fieldFilter")].isNull() && m_field_filter_isValid;

    m_group_fields_isValid = ::OpenAPI::fromJsonValue(m_group_fields, json[QString("groupFields")]);
    m_group_fields_isSet = !json[QString("groupFields")].isNull() && m_group_fields_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::asJsonObject() const {
    QJsonObject obj;
    if (m_field_filter_isSet) {
        obj.insert(QString("fieldFilter"), ::OpenAPI::toJsonValue(m_field_filter));
    }
    if (m_group_fields.size() > 0) {
        obj.insert(QString("groupFields"), ::OpenAPI::toJsonValue(m_group_fields));
    }
    return obj;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::getFieldFilter() const {
    return m_field_filter;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::setFieldFilter(const QString &field_filter) {
    m_field_filter = field_filter;
    m_field_filter_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::is_field_filter_Set() const{
    return m_field_filter_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::is_field_filter_Valid() const{
    return m_field_filter_isValid;
}

QList<QString> OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::getGroupFields() const {
    return m_group_fields;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::setGroupFields(const QList<QString> &group_fields) {
    m_group_fields = group_fields;
    m_group_fields_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::is_group_fields_Set() const{
    return m_group_fields_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::is_group_fields_Valid() const{
    return m_group_fields_isValid;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
