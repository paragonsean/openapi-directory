/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::~OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField() {}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_filter_alias_isSet = false;
    m_filter_alias_isValid = false;

    m_filterable_isSet = false;
    m_filterable_isValid = false;

    m_groupable_isSet = false;
    m_groupable_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_filter_alias_isValid = ::OpenAPI::fromJsonValue(m_filter_alias, json[QString("filterAlias")]);
    m_filter_alias_isSet = !json[QString("filterAlias")].isNull() && m_filter_alias_isValid;

    m_filterable_isValid = ::OpenAPI::fromJsonValue(m_filterable, json[QString("filterable")]);
    m_filterable_isSet = !json[QString("filterable")].isNull() && m_filterable_isValid;

    m_groupable_isValid = ::OpenAPI::fromJsonValue(m_groupable, json[QString("groupable")]);
    m_groupable_isSet = !json[QString("groupable")].isNull() && m_groupable_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_filter_alias_isSet) {
        obj.insert(QString("filterAlias"), ::OpenAPI::toJsonValue(m_filter_alias));
    }
    if (m_filterable_isSet) {
        obj.insert(QString("filterable"), ::OpenAPI::toJsonValue(m_filterable));
    }
    if (m_groupable_isSet) {
        obj.insert(QString("groupable"), ::OpenAPI::toJsonValue(m_groupable));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    return obj;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::getDescription() const {
    return m_description;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::getFilterAlias() const {
    return m_filter_alias;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::setFilterAlias(const QString &filter_alias) {
    m_filter_alias = filter_alias;
    m_filter_alias_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::is_filter_alias_Set() const{
    return m_filter_alias_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::is_filter_alias_Valid() const{
    return m_filter_alias_isValid;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::isFilterable() const {
    return m_filterable;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::setFilterable(const bool &filterable) {
    m_filterable = filterable;
    m_filterable_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::is_filterable_Set() const{
    return m_filterable_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::is_filterable_Valid() const{
    return m_filterable_isValid;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::isGroupable() const {
    return m_groupable;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::setGroupable(const bool &groupable) {
    m_groupable = groupable;
    m_groupable_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::is_groupable_Set() const{
    return m_groupable_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::is_groupable_Valid() const{
    return m_groupable_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::getId() const {
    return m_id;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_alias_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filterable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_groupable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
