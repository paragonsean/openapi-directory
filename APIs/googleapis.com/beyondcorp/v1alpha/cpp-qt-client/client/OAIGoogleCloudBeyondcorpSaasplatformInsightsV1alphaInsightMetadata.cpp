/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::~OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata() {}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::initializeModel() {

    m_aggregations_isSet = false;
    m_aggregations_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_groups_isSet = false;
    m_groups_isValid = false;

    m_sub_category_isSet = false;
    m_sub_category_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::fromJsonObject(QJsonObject json) {

    m_aggregations_isValid = ::OpenAPI::fromJsonValue(m_aggregations, json[QString("aggregations")]);
    m_aggregations_isSet = !json[QString("aggregations")].isNull() && m_aggregations_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_groups_isValid = ::OpenAPI::fromJsonValue(m_groups, json[QString("groups")]);
    m_groups_isSet = !json[QString("groups")].isNull() && m_groups_isValid;

    m_sub_category_isValid = ::OpenAPI::fromJsonValue(m_sub_category, json[QString("subCategory")]);
    m_sub_category_isSet = !json[QString("subCategory")].isNull() && m_sub_category_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregations.size() > 0) {
        obj.insert(QString("aggregations"), ::OpenAPI::toJsonValue(m_aggregations));
    }
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_fields.size() > 0) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_groups.size() > 0) {
        obj.insert(QString("groups"), ::OpenAPI::toJsonValue(m_groups));
    }
    if (m_sub_category_isSet) {
        obj.insert(QString("subCategory"), ::OpenAPI::toJsonValue(m_sub_category));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QList<QString> OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::getAggregations() const {
    return m_aggregations;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::setAggregations(const QList<QString> &aggregations) {
    m_aggregations = aggregations;
    m_aggregations_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_aggregations_Set() const{
    return m_aggregations_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_aggregations_Valid() const{
    return m_aggregations_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::getCategory() const {
    return m_category;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_category_Set() const{
    return m_category_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_category_Valid() const{
    return m_category_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField> OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::getFields() const {
    return m_fields;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::setFields(const QList<OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_fields_Valid() const{
    return m_fields_isValid;
}

QList<QString> OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::getGroups() const {
    return m_groups;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::setGroups(const QList<QString> &groups) {
    m_groups = groups;
    m_groups_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_groups_Set() const{
    return m_groups_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_groups_Valid() const{
    return m_groups_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::getSubCategory() const {
    return m_sub_category;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::setSubCategory(const QString &sub_category) {
    m_sub_category = sub_category;
    m_sub_category_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_sub_category_Set() const{
    return m_sub_category_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_sub_category_Valid() const{
    return m_sub_category_isValid;
}

QString OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::getType() const {
    return m_type;
}
void OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
