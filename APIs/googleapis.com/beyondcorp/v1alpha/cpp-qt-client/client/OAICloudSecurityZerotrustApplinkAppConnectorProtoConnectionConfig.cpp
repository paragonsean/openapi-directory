/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig() {
    this->initializeModel();
}

OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::~OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig() {}

void OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::initializeModel() {

    m_application_endpoint_isSet = false;
    m_application_endpoint_isValid = false;

    m_application_name_isSet = false;
    m_application_name_isValid = false;

    m_gateway_isSet = false;
    m_gateway_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;

    m_tunnels_per_gateway_isSet = false;
    m_tunnels_per_gateway_isValid = false;

    m_user_port_isSet = false;
    m_user_port_isValid = false;
}

void OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::fromJsonObject(QJsonObject json) {

    m_application_endpoint_isValid = ::OpenAPI::fromJsonValue(m_application_endpoint, json[QString("applicationEndpoint")]);
    m_application_endpoint_isSet = !json[QString("applicationEndpoint")].isNull() && m_application_endpoint_isValid;

    m_application_name_isValid = ::OpenAPI::fromJsonValue(m_application_name, json[QString("applicationName")]);
    m_application_name_isSet = !json[QString("applicationName")].isNull() && m_application_name_isValid;

    m_gateway_isValid = ::OpenAPI::fromJsonValue(m_gateway, json[QString("gateway")]);
    m_gateway_isSet = !json[QString("gateway")].isNull() && m_gateway_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_tunnels_per_gateway_isValid = ::OpenAPI::fromJsonValue(m_tunnels_per_gateway, json[QString("tunnelsPerGateway")]);
    m_tunnels_per_gateway_isSet = !json[QString("tunnelsPerGateway")].isNull() && m_tunnels_per_gateway_isValid;

    m_user_port_isValid = ::OpenAPI::fromJsonValue(m_user_port, json[QString("userPort")]);
    m_user_port_isSet = !json[QString("userPort")].isNull() && m_user_port_isValid;
}

QString OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_application_endpoint_isSet) {
        obj.insert(QString("applicationEndpoint"), ::OpenAPI::toJsonValue(m_application_endpoint));
    }
    if (m_application_name_isSet) {
        obj.insert(QString("applicationName"), ::OpenAPI::toJsonValue(m_application_name));
    }
    if (m_gateway.size() > 0) {
        obj.insert(QString("gateway"), ::OpenAPI::toJsonValue(m_gateway));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_project_isSet) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_tunnels_per_gateway_isSet) {
        obj.insert(QString("tunnelsPerGateway"), ::OpenAPI::toJsonValue(m_tunnels_per_gateway));
    }
    if (m_user_port_isSet) {
        obj.insert(QString("userPort"), ::OpenAPI::toJsonValue(m_user_port));
    }
    return obj;
}

QString OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::getApplicationEndpoint() const {
    return m_application_endpoint;
}
void OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::setApplicationEndpoint(const QString &application_endpoint) {
    m_application_endpoint = application_endpoint;
    m_application_endpoint_isSet = true;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_application_endpoint_Set() const{
    return m_application_endpoint_isSet;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_application_endpoint_Valid() const{
    return m_application_endpoint_isValid;
}

QString OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::getApplicationName() const {
    return m_application_name;
}
void OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::setApplicationName(const QString &application_name) {
    m_application_name = application_name;
    m_application_name_isSet = true;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_application_name_Set() const{
    return m_application_name_isSet;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_application_name_Valid() const{
    return m_application_name_isValid;
}

QList<OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway> OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::getGateway() const {
    return m_gateway;
}
void OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::setGateway(const QList<OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway> &gateway) {
    m_gateway = gateway;
    m_gateway_isSet = true;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_gateway_Set() const{
    return m_gateway_isSet;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_gateway_Valid() const{
    return m_gateway_isValid;
}

QString OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::getName() const {
    return m_name;
}
void OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::getProject() const {
    return m_project;
}
void OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::setProject(const QString &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_project_Set() const{
    return m_project_isSet;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_project_Valid() const{
    return m_project_isValid;
}

qint32 OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::getTunnelsPerGateway() const {
    return m_tunnels_per_gateway;
}
void OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::setTunnelsPerGateway(const qint32 &tunnels_per_gateway) {
    m_tunnels_per_gateway = tunnels_per_gateway;
    m_tunnels_per_gateway_isSet = true;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_tunnels_per_gateway_Set() const{
    return m_tunnels_per_gateway_isSet;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_tunnels_per_gateway_Valid() const{
    return m_tunnels_per_gateway_isValid;
}

qint32 OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::getUserPort() const {
    return m_user_port;
}
void OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::setUserPort(const qint32 &user_port) {
    m_user_port = user_port;
    m_user_port_isSet = true;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_user_port_Set() const{
    return m_user_port_isSet;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::is_user_port_Valid() const{
    return m_user_port_isValid;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_application_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gateway.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tunnels_per_gateway_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_port_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
