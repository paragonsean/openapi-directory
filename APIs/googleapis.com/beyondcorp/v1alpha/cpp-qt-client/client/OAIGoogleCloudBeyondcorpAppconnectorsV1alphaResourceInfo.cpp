/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::~OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo() {}

void OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_resource_isSet = false;
    m_resource_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_sub_isSet = false;
    m_sub_isValid = false;

    m_time_isSet = false;
    m_time_isValid = false;
}

void OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_resource_isValid = ::OpenAPI::fromJsonValue(m_resource, json[QString("resource")]);
    m_resource_isSet = !json[QString("resource")].isNull() && m_resource_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_sub_isValid = ::OpenAPI::fromJsonValue(m_sub, json[QString("sub")]);
    m_sub_isSet = !json[QString("sub")].isNull() && m_sub_isValid;

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("time")]);
    m_time_isSet = !json[QString("time")].isNull() && m_time_isValid;
}

QString OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_resource.size() > 0) {
        obj.insert(QString("resource"), ::OpenAPI::toJsonValue(m_resource));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_sub.size() > 0) {
        obj.insert(QString("sub"), ::OpenAPI::toJsonValue(m_sub));
    }
    if (m_time_isSet) {
        obj.insert(QString("time"), ::OpenAPI::toJsonValue(m_time));
    }
    return obj;
}

QString OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::getId() const {
    return m_id;
}
void OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::is_id_Valid() const{
    return m_id_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::getResource() const {
    return m_resource;
}
void OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::setResource(const QMap<QString, QJsonValue> &resource) {
    m_resource = resource;
    m_resource_isSet = true;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::is_resource_Set() const{
    return m_resource_isSet;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::is_resource_Valid() const{
    return m_resource_isValid;
}

QString OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::getStatus() const {
    return m_status;
}
void OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::is_status_Valid() const{
    return m_status_isValid;
}

QList<OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo> OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::getSub() const {
    return m_sub;
}
void OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::setSub(const QList<OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo> &sub) {
    m_sub = sub;
    m_sub_isSet = true;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::is_sub_Set() const{
    return m_sub_isSet;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::is_sub_Valid() const{
    return m_sub_isValid;
}

QString OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::getTime() const {
    return m_time;
}
void OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::setTime(const QString &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::is_time_Set() const{
    return m_time_isSet;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::is_time_Valid() const{
    return m_time_isValid;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
