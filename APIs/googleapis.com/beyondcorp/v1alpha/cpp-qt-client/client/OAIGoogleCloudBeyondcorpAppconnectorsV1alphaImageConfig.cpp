/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::~OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig() {}

void OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::initializeModel() {

    m_stable_image_isSet = false;
    m_stable_image_isValid = false;

    m_target_image_isSet = false;
    m_target_image_isValid = false;
}

void OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::fromJsonObject(QJsonObject json) {

    m_stable_image_isValid = ::OpenAPI::fromJsonValue(m_stable_image, json[QString("stableImage")]);
    m_stable_image_isSet = !json[QString("stableImage")].isNull() && m_stable_image_isValid;

    m_target_image_isValid = ::OpenAPI::fromJsonValue(m_target_image, json[QString("targetImage")]);
    m_target_image_isSet = !json[QString("targetImage")].isNull() && m_target_image_isValid;
}

QString OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_stable_image_isSet) {
        obj.insert(QString("stableImage"), ::OpenAPI::toJsonValue(m_stable_image));
    }
    if (m_target_image_isSet) {
        obj.insert(QString("targetImage"), ::OpenAPI::toJsonValue(m_target_image));
    }
    return obj;
}

QString OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::getStableImage() const {
    return m_stable_image;
}
void OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::setStableImage(const QString &stable_image) {
    m_stable_image = stable_image;
    m_stable_image_isSet = true;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::is_stable_image_Set() const{
    return m_stable_image_isSet;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::is_stable_image_Valid() const{
    return m_stable_image_isValid;
}

QString OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::getTargetImage() const {
    return m_target_image;
}
void OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::setTargetImage(const QString &target_image) {
    m_target_image = target_image;
    m_target_image_isSet = true;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::is_target_image_Set() const{
    return m_target_image_isSet;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::is_target_image_Valid() const{
    return m_target_image_isValid;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_stable_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_image_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
