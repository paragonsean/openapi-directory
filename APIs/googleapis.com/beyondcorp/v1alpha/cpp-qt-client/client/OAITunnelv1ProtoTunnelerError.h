/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITunnelv1ProtoTunnelerError.h
 *
 * TunnelerError is an error proto for errors returned by the connection manager.
 */

#ifndef OAITunnelv1ProtoTunnelerError_H
#define OAITunnelv1ProtoTunnelerError_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITunnelv1ProtoTunnelerError : public OAIObject {
public:
    OAITunnelv1ProtoTunnelerError();
    OAITunnelv1ProtoTunnelerError(QString json);
    ~OAITunnelv1ProtoTunnelerError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getErr() const;
    void setErr(const QString &err);
    bool is_err_Set() const;
    bool is_err_Valid() const;

    bool isRetryable() const;
    void setRetryable(const bool &retryable);
    bool is_retryable_Set() const;
    bool is_retryable_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_err;
    bool m_err_isSet;
    bool m_err_isValid;

    bool m_retryable;
    bool m_retryable_isSet;
    bool m_retryable_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITunnelv1ProtoTunnelerError)

#endif // OAITunnelv1ProtoTunnelerError_H
