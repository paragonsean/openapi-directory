/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectionDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectionDetails::OAIConnectionDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectionDetails::OAIConnectionDetails() {
    this->initializeModel();
}

OAIConnectionDetails::~OAIConnectionDetails() {}

void OAIConnectionDetails::initializeModel() {

    m_connection_isSet = false;
    m_connection_isValid = false;

    m_recent_mig_vms_isSet = false;
    m_recent_mig_vms_isValid = false;
}

void OAIConnectionDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnectionDetails::fromJsonObject(QJsonObject json) {

    m_connection_isValid = ::OpenAPI::fromJsonValue(m_connection, json[QString("connection")]);
    m_connection_isSet = !json[QString("connection")].isNull() && m_connection_isValid;

    m_recent_mig_vms_isValid = ::OpenAPI::fromJsonValue(m_recent_mig_vms, json[QString("recentMigVms")]);
    m_recent_mig_vms_isSet = !json[QString("recentMigVms")].isNull() && m_recent_mig_vms_isValid;
}

QString OAIConnectionDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnectionDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_connection.isSet()) {
        obj.insert(QString("connection"), ::OpenAPI::toJsonValue(m_connection));
    }
    if (m_recent_mig_vms.size() > 0) {
        obj.insert(QString("recentMigVms"), ::OpenAPI::toJsonValue(m_recent_mig_vms));
    }
    return obj;
}

OAIConnection OAIConnectionDetails::getConnection() const {
    return m_connection;
}
void OAIConnectionDetails::setConnection(const OAIConnection &connection) {
    m_connection = connection;
    m_connection_isSet = true;
}

bool OAIConnectionDetails::is_connection_Set() const{
    return m_connection_isSet;
}

bool OAIConnectionDetails::is_connection_Valid() const{
    return m_connection_isValid;
}

QList<QString> OAIConnectionDetails::getRecentMigVms() const {
    return m_recent_mig_vms;
}
void OAIConnectionDetails::setRecentMigVms(const QList<QString> &recent_mig_vms) {
    m_recent_mig_vms = recent_mig_vms;
    m_recent_mig_vms_isSet = true;
}

bool OAIConnectionDetails::is_recent_mig_vms_Set() const{
    return m_recent_mig_vms_isSet;
}

bool OAIConnectionDetails::is_recent_mig_vms_Valid() const{
    return m_recent_mig_vms_isValid;
}

bool OAIConnectionDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_connection.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recent_mig_vms.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnectionDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
