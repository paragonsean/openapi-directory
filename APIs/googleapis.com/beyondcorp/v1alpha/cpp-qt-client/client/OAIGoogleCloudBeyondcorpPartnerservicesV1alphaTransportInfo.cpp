/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::~OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo() {}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::initializeModel() {

    m_server_ca_cert_pem_isSet = false;
    m_server_ca_cert_pem_isValid = false;

    m_ssl_decrypt_ca_cert_pem_isSet = false;
    m_ssl_decrypt_ca_cert_pem_isValid = false;
}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::fromJsonObject(QJsonObject json) {

    m_server_ca_cert_pem_isValid = ::OpenAPI::fromJsonValue(m_server_ca_cert_pem, json[QString("serverCaCertPem")]);
    m_server_ca_cert_pem_isSet = !json[QString("serverCaCertPem")].isNull() && m_server_ca_cert_pem_isValid;

    m_ssl_decrypt_ca_cert_pem_isValid = ::OpenAPI::fromJsonValue(m_ssl_decrypt_ca_cert_pem, json[QString("sslDecryptCaCertPem")]);
    m_ssl_decrypt_ca_cert_pem_isSet = !json[QString("sslDecryptCaCertPem")].isNull() && m_ssl_decrypt_ca_cert_pem_isValid;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_server_ca_cert_pem_isSet) {
        obj.insert(QString("serverCaCertPem"), ::OpenAPI::toJsonValue(m_server_ca_cert_pem));
    }
    if (m_ssl_decrypt_ca_cert_pem_isSet) {
        obj.insert(QString("sslDecryptCaCertPem"), ::OpenAPI::toJsonValue(m_ssl_decrypt_ca_cert_pem));
    }
    return obj;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::getServerCaCertPem() const {
    return m_server_ca_cert_pem;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::setServerCaCertPem(const QString &server_ca_cert_pem) {
    m_server_ca_cert_pem = server_ca_cert_pem;
    m_server_ca_cert_pem_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::is_server_ca_cert_pem_Set() const{
    return m_server_ca_cert_pem_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::is_server_ca_cert_pem_Valid() const{
    return m_server_ca_cert_pem_isValid;
}

QString OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::getSslDecryptCaCertPem() const {
    return m_ssl_decrypt_ca_cert_pem;
}
void OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::setSslDecryptCaCertPem(const QString &ssl_decrypt_ca_cert_pem) {
    m_ssl_decrypt_ca_cert_pem = ssl_decrypt_ca_cert_pem;
    m_ssl_decrypt_ca_cert_pem_isSet = true;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::is_ssl_decrypt_ca_cert_pem_Set() const{
    return m_ssl_decrypt_ca_cert_pem_isSet;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::is_ssl_decrypt_ca_cert_pem_Valid() const{
    return m_ssl_decrypt_ca_cert_pem_isValid;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_server_ca_cert_pem_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ssl_decrypt_ca_cert_pem_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
