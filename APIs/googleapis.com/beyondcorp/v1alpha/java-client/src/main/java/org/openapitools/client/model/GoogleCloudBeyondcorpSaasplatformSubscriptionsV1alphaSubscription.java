/*
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A BeyondCorp Subscription resource represents BeyondCorp Enterprise Subscription. BeyondCorp Enterprise Subscription enables BeyondCorp Enterprise permium features for an organization.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:57.781857-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription {
  public static final String SERIALIZED_NAME_AUTO_RENEW_ENABLED = "autoRenewEnabled";
  @SerializedName(SERIALIZED_NAME_AUTO_RENEW_ENABLED)
  private Boolean autoRenewEnabled;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SEAT_COUNT = "seatCount";
  @SerializedName(SERIALIZED_NAME_SEAT_COUNT)
  private String seatCount;

  /**
   * Required. SKU of subscription.
   */
  @JsonAdapter(SkuEnum.Adapter.class)
  public enum SkuEnum {
    SKU_UNSPECIFIED("SKU_UNSPECIFIED"),
    
    BCE_STANDARD_SKU("BCE_STANDARD_SKU");

    private String value;

    SkuEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SkuEnum fromValue(String value) {
      for (SkuEnum b : SkuEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SkuEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SkuEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SkuEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SkuEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SkuEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private SkuEnum sku;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  /**
   * Output only. The current state of the subscription.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    ACTIVE("ACTIVE"),
    
    INACTIVE("INACTIVE"),
    
    COMPLETED("COMPLETED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  /**
   * Required. Type of subscription.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    TYPE_UNSPECIFIED("TYPE_UNSPECIFIED"),
    
    TRIAL("TRIAL"),
    
    PAID("PAID"),
    
    ALLOWLIST("ALLOWLIST");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription() {
  }

  public GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription(
     Boolean autoRenewEnabled, 
     String createTime, 
     String endTime, 
     String startTime, 
     StateEnum state
  ) {
    this();
    this.autoRenewEnabled = autoRenewEnabled;
    this.createTime = createTime;
    this.endTime = endTime;
    this.startTime = startTime;
    this.state = state;
  }

  /**
   * Output only. Represents that, if subscription will renew or end when the term ends.
   * @return autoRenewEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAutoRenewEnabled() {
    return autoRenewEnabled;
  }



  /**
   * Output only. Create time of the subscription.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  /**
   * Output only. End time of the subscription.
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }



  public GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Unique resource name of the Subscription. The name is ignored when creating a subscription.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription seatCount(String seatCount) {
    this.seatCount = seatCount;
    return this;
  }

  /**
   * Optional. Number of seats in the subscription.
   * @return seatCount
   */
  @javax.annotation.Nullable
  public String getSeatCount() {
    return seatCount;
  }

  public void setSeatCount(String seatCount) {
    this.seatCount = seatCount;
  }


  public GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription sku(SkuEnum sku) {
    this.sku = sku;
    return this;
  }

  /**
   * Required. SKU of subscription.
   * @return sku
   */
  @javax.annotation.Nullable
  public SkuEnum getSku() {
    return sku;
  }

  public void setSku(SkuEnum sku) {
    this.sku = sku;
  }


  /**
   * Output only. Start time of the subscription.
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }



  /**
   * Output only. The current state of the subscription.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  public GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Required. Type of subscription.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription googleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription = (GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription) o;
    return Objects.equals(this.autoRenewEnabled, googleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.autoRenewEnabled) &&
        Objects.equals(this.createTime, googleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.createTime) &&
        Objects.equals(this.endTime, googleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.endTime) &&
        Objects.equals(this.name, googleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.name) &&
        Objects.equals(this.seatCount, googleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.seatCount) &&
        Objects.equals(this.sku, googleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.sku) &&
        Objects.equals(this.startTime, googleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.startTime) &&
        Objects.equals(this.state, googleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.state) &&
        Objects.equals(this.type, googleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoRenewEnabled, createTime, endTime, name, seatCount, sku, startTime, state, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription {\n");
    sb.append("    autoRenewEnabled: ").append(toIndentedString(autoRenewEnabled)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    seatCount: ").append(toIndentedString(seatCount)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("autoRenewEnabled");
    openapiFields.add("createTime");
    openapiFields.add("endTime");
    openapiFields.add("name");
    openapiFields.add("seatCount");
    openapiFields.add("sku");
    openapiFields.add("startTime");
    openapiFields.add("state");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription is not found in the empty JSON string", GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) && !jsonObj.get("endTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endTime").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("seatCount") != null && !jsonObj.get("seatCount").isJsonNull()) && !jsonObj.get("seatCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seatCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seatCount").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      // validate the optional field `sku`
      if (jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) {
        SkuEnum.validateJsonElement(jsonObj.get("sku"));
      }
      if ((jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) && !jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription>() {
           @Override
           public void write(JsonWriter out, GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription
   */
  public static GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription.class);
  }

  /**
   * Convert an instance of GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

