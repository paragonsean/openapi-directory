/*
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:57.781857-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_RESOURCE = "resource";
  @SerializedName(SERIALIZED_NAME_RESOURCE)
  private Map<String, Object> resource = new HashMap<>();

  /**
   * Overall health status. Overall status is derived based on the status of each sub level resources.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    HEALTH_STATUS_UNSPECIFIED("HEALTH_STATUS_UNSPECIFIED"),
    
    HEALTHY("HEALTHY"),
    
    UNHEALTHY("UNHEALTHY"),
    
    UNRESPONSIVE("UNRESPONSIVE"),
    
    DEGRADED("DEGRADED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_SUB = "sub";
  @SerializedName(SERIALIZED_NAME_SUB)
  private List<GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo> sub = new ArrayList<>();

  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private String time;

  public GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo() {
  }

  public GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Required. Unique Id for the resource.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo resource(Map<String, Object> resource) {
    this.resource = resource;
    return this;
  }

  public GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo putResourceItem(String key, Object resourceItem) {
    if (this.resource == null) {
      this.resource = new HashMap<>();
    }
    this.resource.put(key, resourceItem);
    return this;
  }

  /**
   * Specific details for the resource. This is for internal use only.
   * @return resource
   */
  @javax.annotation.Nullable
  public Map<String, Object> getResource() {
    return resource;
  }

  public void setResource(Map<String, Object> resource) {
    this.resource = resource;
  }


  public GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Overall health status. Overall status is derived based on the status of each sub level resources.
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo sub(List<GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo> sub) {
    this.sub = sub;
    return this;
  }

  public GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo addSubItem(GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo subItem) {
    if (this.sub == null) {
      this.sub = new ArrayList<>();
    }
    this.sub.add(subItem);
    return this;
  }

  /**
   * List of Info for the sub level resources.
   * @return sub
   */
  @javax.annotation.Nullable
  public List<GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo> getSub() {
    return sub;
  }

  public void setSub(List<GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo> sub) {
    this.sub = sub;
  }


  public GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo time(String time) {
    this.time = time;
    return this;
  }

  /**
   * The timestamp to collect the info. It is suggested to be set by the topmost level resource only.
   * @return time
   */
  @javax.annotation.Nullable
  public String getTime() {
    return time;
  }

  public void setTime(String time) {
    this.time = time;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo googleCloudBeyondcorpAppconnectorsV1alphaResourceInfo = (GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo) o;
    return Objects.equals(this.id, googleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.id) &&
        Objects.equals(this.resource, googleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.resource) &&
        Objects.equals(this.status, googleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.status) &&
        Objects.equals(this.sub, googleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.sub) &&
        Objects.equals(this.time, googleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, resource, status, sub, time);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    sub: ").append(toIndentedString(sub)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("resource");
    openapiFields.add("status");
    openapiFields.add("sub");
    openapiFields.add("time");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo is not found in the empty JSON string", GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("status"));
      }
      if (jsonObj.get("sub") != null && !jsonObj.get("sub").isJsonNull()) {
        JsonArray jsonArraysub = jsonObj.getAsJsonArray("sub");
        if (jsonArraysub != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sub").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sub` to be an array in the JSON string but got `%s`", jsonObj.get("sub").toString()));
          }

          // validate the optional field `sub` (array)
          for (int i = 0; i < jsonArraysub.size(); i++) {
            GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.validateJsonElement(jsonArraysub.get(i));
          };
        }
      }
      if ((jsonObj.get("time") != null && !jsonObj.get("time").isJsonNull()) && !jsonObj.get("time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("time").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo>() {
           @Override
           public void write(JsonWriter out, GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo
   */
  public static GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.class);
  }

  /**
   * Convert an instance of GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

