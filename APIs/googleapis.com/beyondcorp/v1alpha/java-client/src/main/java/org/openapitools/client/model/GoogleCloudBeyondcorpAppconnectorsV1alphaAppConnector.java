/*
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfo;
import org.openapitools.client.model.GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A BeyondCorp connector resource that represents an application facing component deployed proximal to and with direct access to the application instances. It is used to establish connectivity between the remote enterprise environment and GCP. It initiates connections to the applications and can proxy the data from users over the connection.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:57.781857-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRINCIPAL_INFO = "principalInfo";
  @SerializedName(SERIALIZED_NAME_PRINCIPAL_INFO)
  private GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfo principalInfo;

  public static final String SERIALIZED_NAME_RESOURCE_INFO = "resourceInfo";
  @SerializedName(SERIALIZED_NAME_RESOURCE_INFO)
  private GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo resourceInfo;

  /**
   * Output only. The current state of the AppConnector.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    CREATING("CREATING"),
    
    CREATED("CREATED"),
    
    UPDATING("UPDATING"),
    
    DELETING("DELETING"),
    
    DOWN("DOWN");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector() {
  }

  public GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector(
     String createTime, 
     StateEnum state, 
     String uid, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.state = state;
    this.uid = uid;
    this.updateTime = updateTime;
  }

  /**
   * Output only. Timestamp when the resource was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Optional. An arbitrary user-provided name for the AppConnector. Cannot exceed 64 characters.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. Resource labels to represent user provided metadata.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Unique resource name of the AppConnector. The name is ignored when creating a AppConnector.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector principalInfo(GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfo principalInfo) {
    this.principalInfo = principalInfo;
    return this;
  }

  /**
   * Get principalInfo
   * @return principalInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfo getPrincipalInfo() {
    return principalInfo;
  }

  public void setPrincipalInfo(GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfo principalInfo) {
    this.principalInfo = principalInfo;
  }


  public GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector resourceInfo(GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo resourceInfo) {
    this.resourceInfo = resourceInfo;
    return this;
  }

  /**
   * Get resourceInfo
   * @return resourceInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo getResourceInfo() {
    return resourceInfo;
  }

  public void setResourceInfo(GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo resourceInfo) {
    this.resourceInfo = resourceInfo;
  }


  /**
   * Output only. The current state of the AppConnector.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  /**
   * Output only. A unique identifier for the instance generated by the system.
   * @return uid
   */
  @javax.annotation.Nullable
  public String getUid() {
    return uid;
  }



  /**
   * Output only. Timestamp when the resource was last modified.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector googleCloudBeyondcorpAppconnectorsV1alphaAppConnector = (GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector) o;
    return Objects.equals(this.createTime, googleCloudBeyondcorpAppconnectorsV1alphaAppConnector.createTime) &&
        Objects.equals(this.displayName, googleCloudBeyondcorpAppconnectorsV1alphaAppConnector.displayName) &&
        Objects.equals(this.labels, googleCloudBeyondcorpAppconnectorsV1alphaAppConnector.labels) &&
        Objects.equals(this.name, googleCloudBeyondcorpAppconnectorsV1alphaAppConnector.name) &&
        Objects.equals(this.principalInfo, googleCloudBeyondcorpAppconnectorsV1alphaAppConnector.principalInfo) &&
        Objects.equals(this.resourceInfo, googleCloudBeyondcorpAppconnectorsV1alphaAppConnector.resourceInfo) &&
        Objects.equals(this.state, googleCloudBeyondcorpAppconnectorsV1alphaAppConnector.state) &&
        Objects.equals(this.uid, googleCloudBeyondcorpAppconnectorsV1alphaAppConnector.uid) &&
        Objects.equals(this.updateTime, googleCloudBeyondcorpAppconnectorsV1alphaAppConnector.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, displayName, labels, name, principalInfo, resourceInfo, state, uid, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    principalInfo: ").append(toIndentedString(principalInfo)).append("\n");
    sb.append("    resourceInfo: ").append(toIndentedString(resourceInfo)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("displayName");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("principalInfo");
    openapiFields.add("resourceInfo");
    openapiFields.add("state");
    openapiFields.add("uid");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector is not found in the empty JSON string", GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `principalInfo`
      if (jsonObj.get("principalInfo") != null && !jsonObj.get("principalInfo").isJsonNull()) {
        GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfo.validateJsonElement(jsonObj.get("principalInfo"));
      }
      // validate the optional field `resourceInfo`
      if (jsonObj.get("resourceInfo") != null && !jsonObj.get("resourceInfo").isJsonNull()) {
        GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo.validateJsonElement(jsonObj.get("resourceInfo"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("uid") != null && !jsonObj.get("uid").isJsonNull()) && !jsonObj.get("uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector>() {
           @Override
           public void write(JsonWriter out, GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector
   */
  public static GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector.class);
  }

  /**
   * Convert an instance of GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

