# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_beyondcorp_saasplatform_insights_v1alpha_insight_metadata_field import GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField
from openapi_server import util


class GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregations: List[str]=None, category: str=None, display_name: str=None, fields: List[GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField]=None, groups: List[str]=None, sub_category: str=None, type: str=None):
        """GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata - a model defined in OpenAPI

        :param aggregations: The aggregations of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :param category: The category of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :param display_name: The display_name of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :param fields: The fields of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :param groups: The groups of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :param sub_category: The sub_category of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :param type: The type of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        """
        self.openapi_types = {
            'aggregations': List[str],
            'category': str,
            'display_name': str,
            'fields': List[GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField],
            'groups': List[str],
            'sub_category': str,
            'type': str
        }

        self.attribute_map = {
            'aggregations': 'aggregations',
            'category': 'category',
            'display_name': 'displayName',
            'fields': 'fields',
            'groups': 'groups',
            'sub_category': 'subCategory',
            'type': 'type'
        }

        self._aggregations = aggregations
        self._category = category
        self._display_name = display_name
        self._fields = fields
        self._groups = groups
        self._sub_category = sub_category
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregations(self):
        """Gets the aggregations of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. List of aggregation types available for insight.

        :return: The aggregations of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :rtype: List[str]
        """
        return self._aggregations

    @aggregations.setter
    def aggregations(self, aggregations):
        """Sets the aggregations of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. List of aggregation types available for insight.

        :param aggregations: The aggregations of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :type aggregations: List[str]
        """
        allowed_values = ["AGGREGATION_UNSPECIFIED", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "CUSTOM_DATE_RANGE"]  # noqa: E501
        if not set(aggregations).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `aggregations` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(aggregations) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._aggregations = aggregations

    @property
    def category(self):
        """Gets the category of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. Category of the insight.

        :return: The category of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. Category of the insight.

        :param category: The category of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :type category: str
        """

        self._category = category

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. Common name of the insight.

        :return: The display_name of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. Common name of the insight.

        :param display_name: The display_name of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def fields(self):
        """Gets the fields of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. List of fields available for insight.

        :return: The fields of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :rtype: List[GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. List of fields available for insight.

        :param fields: The fields of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :type fields: List[GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField]
        """

        self._fields = fields

    @property
    def groups(self):
        """Gets the groups of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. List of groupings available for insight.

        :return: The groups of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :rtype: List[str]
        """
        return self._groups

    @groups.setter
    def groups(self, groups):
        """Sets the groups of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. List of groupings available for insight.

        :param groups: The groups of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :type groups: List[str]
        """

        self._groups = groups

    @property
    def sub_category(self):
        """Gets the sub_category of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. Sub-Category of the insight.

        :return: The sub_category of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :rtype: str
        """
        return self._sub_category

    @sub_category.setter
    def sub_category(self, sub_category):
        """Sets the sub_category of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. Sub-Category of the insight.

        :param sub_category: The sub_category of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :type sub_category: str
        """

        self._sub_category = sub_category

    @property
    def type(self):
        """Gets the type of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. Type of the insight. It is metadata describing whether the insight is a metric (e.g. count) or a report (e.g. list, status).

        :return: The type of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.

        Output only. Type of the insight. It is metadata describing whether the insight is a metric (e.g. count) or a report (e.g. list, status).

        :param type: The type of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata.
        :type type: str
        """

        self._type = type
