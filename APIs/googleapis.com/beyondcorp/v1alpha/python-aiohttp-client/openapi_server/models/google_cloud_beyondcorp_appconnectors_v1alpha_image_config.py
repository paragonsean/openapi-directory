# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stable_image: str=None, target_image: str=None):
        """GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig - a model defined in OpenAPI

        :param stable_image: The stable_image of this GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig.
        :param target_image: The target_image of this GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig.
        """
        self.openapi_types = {
            'stable_image': str,
            'target_image': str
        }

        self.attribute_map = {
            'stable_image': 'stableImage',
            'target_image': 'targetImage'
        }

        self._stable_image = stable_image
        self._target_image = target_image

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig of this GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stable_image(self):
        """Gets the stable_image of this GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig.

        The stable image that the remote agent will fallback to if the target image fails. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1

        :return: The stable_image of this GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig.
        :rtype: str
        """
        return self._stable_image

    @stable_image.setter
    def stable_image(self, stable_image):
        """Sets the stable_image of this GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig.

        The stable image that the remote agent will fallback to if the target image fails. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1

        :param stable_image: The stable_image of this GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig.
        :type stable_image: str
        """

        self._stable_image = stable_image

    @property
    def target_image(self):
        """Gets the target_image of this GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig.

        The initial image the remote agent will attempt to run for the control plane. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1

        :return: The target_image of this GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig.
        :rtype: str
        """
        return self._target_image

    @target_image.setter
    def target_image(self, target_image):
        """Sets the target_image of this GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig.

        The initial image the remote agent will attempt to run for the control plane. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1

        :param target_image: The target_image of this GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig.
        :type target_image: str
        """

        self._target_image = target_image
