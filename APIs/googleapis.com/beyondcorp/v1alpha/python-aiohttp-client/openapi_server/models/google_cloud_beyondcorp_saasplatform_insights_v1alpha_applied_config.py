# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_beyondcorp_saasplatform_insights_v1alpha_custom_grouping import GoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping
from openapi_server import util


class GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregation: str=None, custom_grouping: GoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping=None, end_time: str=None, field_filter: str=None, group: str=None, start_time: str=None):
        """GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig - a model defined in OpenAPI

        :param aggregation: The aggregation of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :param custom_grouping: The custom_grouping of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :param end_time: The end_time of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :param field_filter: The field_filter of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :param group: The group of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :param start_time: The start_time of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        """
        self.openapi_types = {
            'aggregation': str,
            'custom_grouping': GoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping,
            'end_time': str,
            'field_filter': str,
            'group': str,
            'start_time': str
        }

        self.attribute_map = {
            'aggregation': 'aggregation',
            'custom_grouping': 'customGrouping',
            'end_time': 'endTime',
            'field_filter': 'fieldFilter',
            'group': 'group',
            'start_time': 'startTime'
        }

        self._aggregation = aggregation
        self._custom_grouping = custom_grouping
        self._end_time = end_time
        self._field_filter = field_filter
        self._group = group
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregation(self):
        """Gets the aggregation of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.

        Output only. Aggregation type applied.

        :return: The aggregation of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :rtype: str
        """
        return self._aggregation

    @aggregation.setter
    def aggregation(self, aggregation):
        """Sets the aggregation of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.

        Output only. Aggregation type applied.

        :param aggregation: The aggregation of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :type aggregation: str
        """
        allowed_values = ["AGGREGATION_UNSPECIFIED", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "CUSTOM_DATE_RANGE"]  # noqa: E501
        if aggregation not in allowed_values:
            raise ValueError(
                "Invalid value for `aggregation` ({0}), must be one of {1}"
                .format(aggregation, allowed_values)
            )

        self._aggregation = aggregation

    @property
    def custom_grouping(self):
        """Gets the custom_grouping of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.


        :return: The custom_grouping of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :rtype: GoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping
        """
        return self._custom_grouping

    @custom_grouping.setter
    def custom_grouping(self, custom_grouping):
        """Sets the custom_grouping of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.


        :param custom_grouping: The custom_grouping of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :type custom_grouping: GoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping
        """

        self._custom_grouping = custom_grouping

    @property
    def end_time(self):
        """Gets the end_time of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.

        Output only. Ending time for the duration for which insight was pulled.

        :return: The end_time of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.

        Output only. Ending time for the duration for which insight was pulled.

        :param end_time: The end_time of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def field_filter(self):
        """Gets the field_filter of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.

        Output only. Filters applied.

        :return: The field_filter of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :rtype: str
        """
        return self._field_filter

    @field_filter.setter
    def field_filter(self, field_filter):
        """Sets the field_filter of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.

        Output only. Filters applied.

        :param field_filter: The field_filter of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :type field_filter: str
        """

        self._field_filter = field_filter

    @property
    def group(self):
        """Gets the group of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.

        Output only. Group id of the grouping applied.

        :return: The group of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :rtype: str
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.

        Output only. Group id of the grouping applied.

        :param group: The group of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :type group: str
        """

        self._group = group

    @property
    def start_time(self):
        """Gets the start_time of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.

        Output only. Starting time for the duration for which insight was pulled.

        :return: The start_time of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.

        Output only. Starting time for the duration for which insight was pulled.

        :param start_time: The start_time of this GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig.
        :type start_time: str
        """

        self._start_time = start_time
