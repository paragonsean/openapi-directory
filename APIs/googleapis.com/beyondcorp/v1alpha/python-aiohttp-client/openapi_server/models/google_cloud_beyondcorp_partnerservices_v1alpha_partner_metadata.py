# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, internal_tenant_id: str=None, partner_tenant_id: str=None):
        """GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata - a model defined in OpenAPI

        :param internal_tenant_id: The internal_tenant_id of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata.
        :param partner_tenant_id: The partner_tenant_id of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata.
        """
        self.openapi_types = {
            'internal_tenant_id': str,
            'partner_tenant_id': str
        }

        self.attribute_map = {
            'internal_tenant_id': 'internalTenantId',
            'partner_tenant_id': 'partnerTenantId'
        }

        self._internal_tenant_id = internal_tenant_id
        self._partner_tenant_id = partner_tenant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def internal_tenant_id(self):
        """Gets the internal_tenant_id of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata.

        Optional. UUID used by the Partner to refer to the PartnerTenant in their internal systems.

        :return: The internal_tenant_id of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata.
        :rtype: str
        """
        return self._internal_tenant_id

    @internal_tenant_id.setter
    def internal_tenant_id(self, internal_tenant_id):
        """Sets the internal_tenant_id of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata.

        Optional. UUID used by the Partner to refer to the PartnerTenant in their internal systems.

        :param internal_tenant_id: The internal_tenant_id of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata.
        :type internal_tenant_id: str
        """

        self._internal_tenant_id = internal_tenant_id

    @property
    def partner_tenant_id(self):
        """Gets the partner_tenant_id of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata.

        Optional. UUID used by the Partner to refer to the PartnerTenant in their internal systems.

        :return: The partner_tenant_id of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata.
        :rtype: str
        """
        return self._partner_tenant_id

    @partner_tenant_id.setter
    def partner_tenant_id(self, partner_tenant_id):
        """Sets the partner_tenant_id of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata.

        Optional. UUID used by the Partner to refer to the PartnerTenant in their internal systems.

        :param partner_tenant_id: The partner_tenant_id of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata.
        :type partner_tenant_id: str
        """

        self._partner_tenant_id = partner_tenant_id
