# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_beyondcorp_partnerservices_v1alpha_group import GoogleCloudBeyondcorpPartnerservicesV1alphaGroup
from openapi_server.models.google_cloud_beyondcorp_partnerservices_v1alpha_partner_metadata import GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata
from openapi_server import util


class GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, display_name: str=None, group: GoogleCloudBeyondcorpPartnerservicesV1alphaGroup=None, name: str=None, partner_metadata: GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata=None, update_time: str=None):
        """GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :param display_name: The display_name of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :param group: The group of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :param name: The name of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :param partner_metadata: The partner_metadata of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :param update_time: The update_time of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        """
        self.openapi_types = {
            'create_time': str,
            'display_name': str,
            'group': GoogleCloudBeyondcorpPartnerservicesV1alphaGroup,
            'name': str,
            'partner_metadata': GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'display_name': 'displayName',
            'group': 'group',
            'name': 'name',
            'partner_metadata': 'partnerMetadata',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._display_name = display_name
        self._group = group
        self._name = name
        self._partner_metadata = partner_metadata
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.

        Output only. Timestamp when the resource was created.

        :return: The create_time of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.

        Output only. Timestamp when the resource was created.

        :param create_time: The create_time of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.

        Optional. An arbitrary caller-provided name for the PartnerTenant. Cannot exceed 64 characters.

        :return: The display_name of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.

        Optional. An arbitrary caller-provided name for the PartnerTenant. Cannot exceed 64 characters.

        :param display_name: The display_name of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def group(self):
        """Gets the group of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.


        :return: The group of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :rtype: GoogleCloudBeyondcorpPartnerservicesV1alphaGroup
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.


        :param group: The group of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :type group: GoogleCloudBeyondcorpPartnerservicesV1alphaGroup
        """

        self._group = group

    @property
    def name(self):
        """Gets the name of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.

        Output only. Unique resource name of the PartnerTenant. The name is ignored when creating PartnerTenant.

        :return: The name of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.

        Output only. Unique resource name of the PartnerTenant. The name is ignored when creating PartnerTenant.

        :param name: The name of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :type name: str
        """

        self._name = name

    @property
    def partner_metadata(self):
        """Gets the partner_metadata of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.


        :return: The partner_metadata of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :rtype: GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata
        """
        return self._partner_metadata

    @partner_metadata.setter
    def partner_metadata(self, partner_metadata):
        """Sets the partner_metadata of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.


        :param partner_metadata: The partner_metadata of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :type partner_metadata: GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata
        """

        self._partner_metadata = partner_metadata

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.

        Output only. Timestamp when the resource was last modified.

        :return: The update_time of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.

        Output only. Timestamp when the resource was last modified.

        :param update_time: The update_time of this GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant.
        :type update_time: str
        """

        self._update_time = update_time
