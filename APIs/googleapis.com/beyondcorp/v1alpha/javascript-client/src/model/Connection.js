/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationEndpoint from './ApplicationEndpoint';
import Gateway from './Gateway';

/**
 * The Connection model module.
 * @module model/Connection
 * @version v1alpha
 */
class Connection {
    /**
     * Constructs a new <code>Connection</code>.
     * A BeyondCorp Connection resource represents a BeyondCorp protected connection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected connection. Multiple connectors can be authorised for a single Connection.
     * @alias module:model/Connection
     */
    constructor() { 
        
        Connection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Connection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Connection} obj Optional instance to populate.
     * @return {module:model/Connection} The populated <code>Connection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Connection();

            if (data.hasOwnProperty('applicationEndpoint')) {
                obj['applicationEndpoint'] = ApplicationEndpoint.constructFromObject(data['applicationEndpoint']);
            }
            if (data.hasOwnProperty('connectors')) {
                obj['connectors'] = ApiClient.convertToType(data['connectors'], ['String']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('gateway')) {
                obj['gateway'] = Gateway.constructFromObject(data['gateway']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Connection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Connection</code>.
     */
    static validateJSON(data) {
        // validate the optional field `applicationEndpoint`
        if (data['applicationEndpoint']) { // data not null
          ApplicationEndpoint.validateJSON(data['applicationEndpoint']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['connectors'])) {
            throw new Error("Expected the field `connectors` to be an array in the JSON data but got " + data['connectors']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `gateway`
        if (data['gateway']) { // data not null
          Gateway.validateJSON(data['gateway']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/ApplicationEndpoint} applicationEndpoint
 */
Connection.prototype['applicationEndpoint'] = undefined;

/**
 * Optional. List of [google.cloud.beyondcorp.v1main.Connector.name] that are authorised to be associated with this Connection.
 * @member {Array.<String>} connectors
 */
Connection.prototype['connectors'] = undefined;

/**
 * Output only. Timestamp when the resource was created.
 * @member {String} createTime
 */
Connection.prototype['createTime'] = undefined;

/**
 * Optional. An arbitrary user-provided name for the connection. Cannot exceed 64 characters.
 * @member {String} displayName
 */
Connection.prototype['displayName'] = undefined;

/**
 * @member {module:model/Gateway} gateway
 */
Connection.prototype['gateway'] = undefined;

/**
 * Optional. Resource labels to represent user provided metadata.
 * @member {Object.<String, String>} labels
 */
Connection.prototype['labels'] = undefined;

/**
 * Required. Unique resource name of the connection. The name is ignored when creating a connection.
 * @member {String} name
 */
Connection.prototype['name'] = undefined;

/**
 * Output only. The current state of the connection.
 * @member {module:model/Connection.StateEnum} state
 */
Connection.prototype['state'] = undefined;

/**
 * Required. The type of network connectivity used by the connection.
 * @member {module:model/Connection.TypeEnum} type
 */
Connection.prototype['type'] = undefined;

/**
 * Output only. A unique identifier for the instance generated by the system.
 * @member {String} uid
 */
Connection.prototype['uid'] = undefined;

/**
 * Output only. Timestamp when the resource was last modified.
 * @member {String} updateTime
 */
Connection.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Connection['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "CREATED"
     * @const
     */
    "CREATED": "CREATED",

    /**
     * value: "UPDATING"
     * @const
     */
    "UPDATING": "UPDATING",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "DOWN"
     * @const
     */
    "DOWN": "DOWN"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Connection['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "TCP_PROXY"
     * @const
     */
    "TCP_PROXY": "TCP_PROXY"
};



export default Connection;

