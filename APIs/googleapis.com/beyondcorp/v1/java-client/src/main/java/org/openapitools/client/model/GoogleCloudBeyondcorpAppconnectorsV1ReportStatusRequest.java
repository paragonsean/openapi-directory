/*
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request report the connector status.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:51.735501-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest {
  public static final String SERIALIZED_NAME_REQUEST_ID = "requestId";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;

  public static final String SERIALIZED_NAME_RESOURCE_INFO = "resourceInfo";
  @SerializedName(SERIALIZED_NAME_RESOURCE_INFO)
  private GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo resourceInfo;

  public static final String SERIALIZED_NAME_VALIDATE_ONLY = "validateOnly";
  @SerializedName(SERIALIZED_NAME_VALIDATE_ONLY)
  private Boolean validateOnly;

  public GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest() {
  }

  public GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
   * @return requestId
   */
  @javax.annotation.Nullable
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest resourceInfo(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo resourceInfo) {
    this.resourceInfo = resourceInfo;
    return this;
  }

  /**
   * Get resourceInfo
   * @return resourceInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo getResourceInfo() {
    return resourceInfo;
  }

  public void setResourceInfo(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo resourceInfo) {
    this.resourceInfo = resourceInfo;
  }


  public GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest validateOnly(Boolean validateOnly) {
    this.validateOnly = validateOnly;
    return this;
  }

  /**
   * Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
   * @return validateOnly
   */
  @javax.annotation.Nullable
  public Boolean getValidateOnly() {
    return validateOnly;
  }

  public void setValidateOnly(Boolean validateOnly) {
    this.validateOnly = validateOnly;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest googleCloudBeyondcorpAppconnectorsV1ReportStatusRequest = (GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest) o;
    return Objects.equals(this.requestId, googleCloudBeyondcorpAppconnectorsV1ReportStatusRequest.requestId) &&
        Objects.equals(this.resourceInfo, googleCloudBeyondcorpAppconnectorsV1ReportStatusRequest.resourceInfo) &&
        Objects.equals(this.validateOnly, googleCloudBeyondcorpAppconnectorsV1ReportStatusRequest.validateOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, resourceInfo, validateOnly);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    resourceInfo: ").append(toIndentedString(resourceInfo)).append("\n");
    sb.append("    validateOnly: ").append(toIndentedString(validateOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("requestId");
    openapiFields.add("resourceInfo");
    openapiFields.add("validateOnly");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest is not found in the empty JSON string", GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("requestId") != null && !jsonObj.get("requestId").isJsonNull()) && !jsonObj.get("requestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestId").toString()));
      }
      // validate the optional field `resourceInfo`
      if (jsonObj.get("resourceInfo") != null && !jsonObj.get("resourceInfo").isJsonNull()) {
        GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo.validateJsonElement(jsonObj.get("resourceInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest
   */
  public static GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

