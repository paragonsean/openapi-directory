/*
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CloudSecurityZerotrustApplinkAppConnectorProtoGateway;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ConnectionConfig represents a Connection Configuration object.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:51.735501-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig {
  public static final String SERIALIZED_NAME_APPLICATION_ENDPOINT = "applicationEndpoint";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ENDPOINT)
  private String applicationEndpoint;

  public static final String SERIALIZED_NAME_APPLICATION_NAME = "applicationName";
  @SerializedName(SERIALIZED_NAME_APPLICATION_NAME)
  private String applicationName;

  public static final String SERIALIZED_NAME_GATEWAY = "gateway";
  @SerializedName(SERIALIZED_NAME_GATEWAY)
  private List<CloudSecurityZerotrustApplinkAppConnectorProtoGateway> gateway = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private String project;

  public static final String SERIALIZED_NAME_TUNNELS_PER_GATEWAY = "tunnelsPerGateway";
  @SerializedName(SERIALIZED_NAME_TUNNELS_PER_GATEWAY)
  private Integer tunnelsPerGateway;

  public static final String SERIALIZED_NAME_USER_PORT = "userPort";
  @SerializedName(SERIALIZED_NAME_USER_PORT)
  private Integer userPort;

  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig() {
  }

  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig applicationEndpoint(String applicationEndpoint) {
    this.applicationEndpoint = applicationEndpoint;
    return this;
  }

  /**
   * application_endpoint is the endpoint of the application the form of host:port. For example, \&quot;localhost:80\&quot;.
   * @return applicationEndpoint
   */
  @javax.annotation.Nullable
  public String getApplicationEndpoint() {
    return applicationEndpoint;
  }

  public void setApplicationEndpoint(String applicationEndpoint) {
    this.applicationEndpoint = applicationEndpoint;
  }


  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig applicationName(String applicationName) {
    this.applicationName = applicationName;
    return this;
  }

  /**
   * application_name represents the given name of the application the connection is connecting with.
   * @return applicationName
   */
  @javax.annotation.Nullable
  public String getApplicationName() {
    return applicationName;
  }

  public void setApplicationName(String applicationName) {
    this.applicationName = applicationName;
  }


  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig gateway(List<CloudSecurityZerotrustApplinkAppConnectorProtoGateway> gateway) {
    this.gateway = gateway;
    return this;
  }

  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig addGatewayItem(CloudSecurityZerotrustApplinkAppConnectorProtoGateway gatewayItem) {
    if (this.gateway == null) {
      this.gateway = new ArrayList<>();
    }
    this.gateway.add(gatewayItem);
    return this;
  }

  /**
   * gateway lists all instances running a gateway in GCP. They all connect to a connector on the host.
   * @return gateway
   */
  @javax.annotation.Nullable
  public List<CloudSecurityZerotrustApplinkAppConnectorProtoGateway> getGateway() {
    return gateway;
  }

  public void setGateway(List<CloudSecurityZerotrustApplinkAppConnectorProtoGateway> gateway) {
    this.gateway = gateway;
  }


  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig name(String name) {
    this.name = name;
    return this;
  }

  /**
   * name is the unique ID for each connection. TODO(b/190732451) returns connection name from user-specified name in config. Now, name &#x3D; ${application_name}:${application_endpoint}
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig project(String project) {
    this.project = project;
    return this;
  }

  /**
   * project represents the consumer project the connection belongs to.
   * @return project
   */
  @javax.annotation.Nullable
  public String getProject() {
    return project;
  }

  public void setProject(String project) {
    this.project = project;
  }


  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig tunnelsPerGateway(Integer tunnelsPerGateway) {
    this.tunnelsPerGateway = tunnelsPerGateway;
    return this;
  }

  /**
   * tunnels_per_gateway reflects the number of tunnels between a connector and a gateway.
   * @return tunnelsPerGateway
   */
  @javax.annotation.Nullable
  public Integer getTunnelsPerGateway() {
    return tunnelsPerGateway;
  }

  public void setTunnelsPerGateway(Integer tunnelsPerGateway) {
    this.tunnelsPerGateway = tunnelsPerGateway;
  }


  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig userPort(Integer userPort) {
    this.userPort = userPort;
    return this;
  }

  /**
   * user_port specifies the reserved port on gateways for user connections.
   * @return userPort
   */
  @javax.annotation.Nullable
  public Integer getUserPort() {
    return userPort;
  }

  public void setUserPort(Integer userPort) {
    this.userPort = userPort;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig cloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig = (CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig) o;
    return Objects.equals(this.applicationEndpoint, cloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.applicationEndpoint) &&
        Objects.equals(this.applicationName, cloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.applicationName) &&
        Objects.equals(this.gateway, cloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.gateway) &&
        Objects.equals(this.name, cloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.name) &&
        Objects.equals(this.project, cloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.project) &&
        Objects.equals(this.tunnelsPerGateway, cloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.tunnelsPerGateway) &&
        Objects.equals(this.userPort, cloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.userPort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationEndpoint, applicationName, gateway, name, project, tunnelsPerGateway, userPort);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig {\n");
    sb.append("    applicationEndpoint: ").append(toIndentedString(applicationEndpoint)).append("\n");
    sb.append("    applicationName: ").append(toIndentedString(applicationName)).append("\n");
    sb.append("    gateway: ").append(toIndentedString(gateway)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    tunnelsPerGateway: ").append(toIndentedString(tunnelsPerGateway)).append("\n");
    sb.append("    userPort: ").append(toIndentedString(userPort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("applicationEndpoint");
    openapiFields.add("applicationName");
    openapiFields.add("gateway");
    openapiFields.add("name");
    openapiFields.add("project");
    openapiFields.add("tunnelsPerGateway");
    openapiFields.add("userPort");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig is not found in the empty JSON string", CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("applicationEndpoint") != null && !jsonObj.get("applicationEndpoint").isJsonNull()) && !jsonObj.get("applicationEndpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationEndpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationEndpoint").toString()));
      }
      if ((jsonObj.get("applicationName") != null && !jsonObj.get("applicationName").isJsonNull()) && !jsonObj.get("applicationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationName").toString()));
      }
      if (jsonObj.get("gateway") != null && !jsonObj.get("gateway").isJsonNull()) {
        JsonArray jsonArraygateway = jsonObj.getAsJsonArray("gateway");
        if (jsonArraygateway != null) {
          // ensure the json data is an array
          if (!jsonObj.get("gateway").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `gateway` to be an array in the JSON string but got `%s`", jsonObj.get("gateway").toString()));
          }

          // validate the optional field `gateway` (array)
          for (int i = 0; i < jsonArraygateway.size(); i++) {
            CloudSecurityZerotrustApplinkAppConnectorProtoGateway.validateJsonElement(jsonArraygateway.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("project") != null && !jsonObj.get("project").isJsonNull()) && !jsonObj.get("project").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `project` to be a primitive type in the JSON string but got `%s`", jsonObj.get("project").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig>() {
           @Override
           public void write(JsonWriter out, CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig
   * @throws IOException if the JSON string is invalid with respect to CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig
   */
  public static CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig.class);
  }

  /**
   * Convert an instance of CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

