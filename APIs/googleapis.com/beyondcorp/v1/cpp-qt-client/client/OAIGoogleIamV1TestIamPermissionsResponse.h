/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleIamV1TestIamPermissionsResponse.h
 *
 * Response message for &#x60;TestIamPermissions&#x60; method.
 */

#ifndef OAIGoogleIamV1TestIamPermissionsResponse_H
#define OAIGoogleIamV1TestIamPermissionsResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleIamV1TestIamPermissionsResponse : public OAIObject {
public:
    OAIGoogleIamV1TestIamPermissionsResponse();
    OAIGoogleIamV1TestIamPermissionsResponse(QString json);
    ~OAIGoogleIamV1TestIamPermissionsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getPermissions() const;
    void setPermissions(const QList<QString> &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleIamV1TestIamPermissionsResponse)

#endif // OAIGoogleIamV1TestIamPermissionsResponse_H
