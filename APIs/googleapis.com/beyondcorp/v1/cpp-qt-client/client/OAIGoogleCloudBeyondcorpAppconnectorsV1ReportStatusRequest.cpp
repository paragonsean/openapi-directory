/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::~OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest() {}

void OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::initializeModel() {

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_resource_info_isSet = false;
    m_resource_info_isValid = false;

    m_validate_only_isSet = false;
    m_validate_only_isValid = false;
}

void OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::fromJsonObject(QJsonObject json) {

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("requestId")]);
    m_request_id_isSet = !json[QString("requestId")].isNull() && m_request_id_isValid;

    m_resource_info_isValid = ::OpenAPI::fromJsonValue(m_resource_info, json[QString("resourceInfo")]);
    m_resource_info_isSet = !json[QString("resourceInfo")].isNull() && m_resource_info_isValid;

    m_validate_only_isValid = ::OpenAPI::fromJsonValue(m_validate_only, json[QString("validateOnly")]);
    m_validate_only_isSet = !json[QString("validateOnly")].isNull() && m_validate_only_isValid;
}

QString OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_request_id_isSet) {
        obj.insert(QString("requestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_resource_info.isSet()) {
        obj.insert(QString("resourceInfo"), ::OpenAPI::toJsonValue(m_resource_info));
    }
    if (m_validate_only_isSet) {
        obj.insert(QString("validateOnly"), ::OpenAPI::toJsonValue(m_validate_only));
    }
    return obj;
}

QString OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::getRequestId() const {
    return m_request_id;
}
void OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::is_request_id_Valid() const{
    return m_request_id_isValid;
}

OAIGoogleCloudBeyondcorpAppconnectorsV1ResourceInfo OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::getResourceInfo() const {
    return m_resource_info;
}
void OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::setResourceInfo(const OAIGoogleCloudBeyondcorpAppconnectorsV1ResourceInfo &resource_info) {
    m_resource_info = resource_info;
    m_resource_info_isSet = true;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::is_resource_info_Set() const{
    return m_resource_info_isSet;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::is_resource_info_Valid() const{
    return m_resource_info_isValid;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::isValidateOnly() const {
    return m_validate_only;
}
void OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::setValidateOnly(const bool &validate_only) {
    m_validate_only = validate_only;
    m_validate_only_isSet = true;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::is_validate_only_Set() const{
    return m_validate_only_isSet;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::is_validate_only_Valid() const{
    return m_validate_only_isValid;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_validate_only_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
