/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway() {
    this->initializeModel();
}

OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::~OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway() {}

void OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::initializeModel() {

    m_interface_isSet = false;
    m_interface_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_port_isSet = false;
    m_port_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;

    m_self_link_isSet = false;
    m_self_link_isValid = false;

    m_zone_isSet = false;
    m_zone_isValid = false;
}

void OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::fromJsonObject(QJsonObject json) {

    m_interface_isValid = ::OpenAPI::fromJsonValue(m_interface, json[QString("interface")]);
    m_interface_isSet = !json[QString("interface")].isNull() && m_interface_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_port_isValid = ::OpenAPI::fromJsonValue(m_port, json[QString("port")]);
    m_port_isSet = !json[QString("port")].isNull() && m_port_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_self_link_isValid = ::OpenAPI::fromJsonValue(m_self_link, json[QString("selfLink")]);
    m_self_link_isSet = !json[QString("selfLink")].isNull() && m_self_link_isValid;

    m_zone_isValid = ::OpenAPI::fromJsonValue(m_zone, json[QString("zone")]);
    m_zone_isSet = !json[QString("zone")].isNull() && m_zone_isValid;
}

QString OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::asJsonObject() const {
    QJsonObject obj;
    if (m_interface_isSet) {
        obj.insert(QString("interface"), ::OpenAPI::toJsonValue(m_interface));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_port_isSet) {
        obj.insert(QString("port"), ::OpenAPI::toJsonValue(m_port));
    }
    if (m_project_isSet) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_self_link_isSet) {
        obj.insert(QString("selfLink"), ::OpenAPI::toJsonValue(m_self_link));
    }
    if (m_zone_isSet) {
        obj.insert(QString("zone"), ::OpenAPI::toJsonValue(m_zone));
    }
    return obj;
}

QString OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::getInterface() const {
    return m_interface;
}
void OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::setInterface(const QString &interface) {
    m_interface = interface;
    m_interface_isSet = true;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::is_interface_Set() const{
    return m_interface_isSet;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::is_interface_Valid() const{
    return m_interface_isValid;
}

QString OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::getName() const {
    return m_name;
}
void OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::is_name_Set() const{
    return m_name_isSet;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::getPort() const {
    return m_port;
}
void OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::setPort(const qint32 &port) {
    m_port = port;
    m_port_isSet = true;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::is_port_Set() const{
    return m_port_isSet;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::is_port_Valid() const{
    return m_port_isValid;
}

QString OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::getProject() const {
    return m_project;
}
void OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::setProject(const QString &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::is_project_Set() const{
    return m_project_isSet;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::is_project_Valid() const{
    return m_project_isValid;
}

QString OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::getSelfLink() const {
    return m_self_link;
}
void OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::setSelfLink(const QString &self_link) {
    m_self_link = self_link;
    m_self_link_isSet = true;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::is_self_link_Set() const{
    return m_self_link_isSet;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::is_self_link_Valid() const{
    return m_self_link_isValid;
}

QString OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::getZone() const {
    return m_zone;
}
void OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::setZone(const QString &zone) {
    m_zone = zone;
    m_zone_isSet = true;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::is_zone_Set() const{
    return m_zone_isSet;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::is_zone_Valid() const{
    return m_zone_isValid;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_interface_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_port_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICloudSecurityZerotrustApplinkAppConnectorProtoGateway::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
