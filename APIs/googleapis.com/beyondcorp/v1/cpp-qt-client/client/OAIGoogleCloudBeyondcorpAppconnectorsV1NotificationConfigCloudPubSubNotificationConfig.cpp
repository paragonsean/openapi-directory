/**
 * BeyondCorp API
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig() {
    this->initializeModel();
}

OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::~OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig() {}

void OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::initializeModel() {

    m_pubsub_subscription_isSet = false;
    m_pubsub_subscription_isValid = false;
}

void OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::fromJsonObject(QJsonObject json) {

    m_pubsub_subscription_isValid = ::OpenAPI::fromJsonValue(m_pubsub_subscription, json[QString("pubsubSubscription")]);
    m_pubsub_subscription_isSet = !json[QString("pubsubSubscription")].isNull() && m_pubsub_subscription_isValid;
}

QString OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_pubsub_subscription_isSet) {
        obj.insert(QString("pubsubSubscription"), ::OpenAPI::toJsonValue(m_pubsub_subscription));
    }
    return obj;
}

QString OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::getPubsubSubscription() const {
    return m_pubsub_subscription;
}
void OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::setPubsubSubscription(const QString &pubsub_subscription) {
    m_pubsub_subscription = pubsub_subscription;
    m_pubsub_subscription_isSet = true;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::is_pubsub_subscription_Set() const{
    return m_pubsub_subscription_isSet;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::is_pubsub_subscription_Valid() const{
    return m_pubsub_subscription_isValid;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pubsub_subscription_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
