/**
 * Google Site Verification API
 * Verifies ownership of websites or domains with Google.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SiteVerificationWebResourceGettokenResponse model module.
 * @module model/SiteVerificationWebResourceGettokenResponse
 * @version v1
 */
class SiteVerificationWebResourceGettokenResponse {
    /**
     * Constructs a new <code>SiteVerificationWebResourceGettokenResponse</code>.
     * @alias module:model/SiteVerificationWebResourceGettokenResponse
     */
    constructor() { 
        
        SiteVerificationWebResourceGettokenResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SiteVerificationWebResourceGettokenResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SiteVerificationWebResourceGettokenResponse} obj Optional instance to populate.
     * @return {module:model/SiteVerificationWebResourceGettokenResponse} The populated <code>SiteVerificationWebResourceGettokenResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SiteVerificationWebResourceGettokenResponse();

            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SiteVerificationWebResourceGettokenResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SiteVerificationWebResourceGettokenResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }

        return true;
    }


}



/**
 * The verification method to use in conjunction with this token. For FILE, the token should be placed in the top-level directory of the site, stored inside a file of the same name. For META, the token should be placed in the HEAD tag of the default page that is loaded for the site. For DNS, the token should be placed in a TXT record of the domain.
 * @member {String} method
 */
SiteVerificationWebResourceGettokenResponse.prototype['method'] = undefined;

/**
 * The verification token. The token must be placed appropriately in order for verification to succeed.
 * @member {String} token
 */
SiteVerificationWebResourceGettokenResponse.prototype['token'] = undefined;






export default SiteVerificationWebResourceGettokenResponse;

