/*
 * Google Site Verification API
 * Verifies ownership of websites or domains with Google.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SiteVerificationWebResourceGettokenRequest;
import org.openapitools.client.model.SiteVerificationWebResourceGettokenResponse;
import org.openapitools.client.model.SiteVerificationWebResourceListResponse;
import org.openapitools.client.model.SiteVerificationWebResourceResource;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebResourceApi
 */
@Disabled
public class WebResourceApiTest {

    private final WebResourceApi api = new WebResourceApi();

    /**
     * Relinquish ownership of a website or domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void siteVerificationWebResourceDeleteTest() throws ApiException {
        String id = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        api.siteVerificationWebResourceDelete(id, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

    /**
     * Get the most current data for a website or domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void siteVerificationWebResourceGetTest() throws ApiException {
        String id = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        SiteVerificationWebResourceResource response = api.siteVerificationWebResourceGet(id, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

    /**
     * Get a verification token for placing on a website or domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void siteVerificationWebResourceGetTokenTest() throws ApiException {
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        SiteVerificationWebResourceGettokenRequest siteVerificationWebResourceGettokenRequest = null;
        SiteVerificationWebResourceGettokenResponse response = api.siteVerificationWebResourceGetToken(alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, siteVerificationWebResourceGettokenRequest);
        // TODO: test validations
    }

    /**
     * Attempt verification of a website or domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void siteVerificationWebResourceInsertTest() throws ApiException {
        String verificationMethod = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        SiteVerificationWebResourceResource siteVerificationWebResourceResource = null;
        SiteVerificationWebResourceResource response = api.siteVerificationWebResourceInsert(verificationMethod, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, siteVerificationWebResourceResource);
        // TODO: test validations
    }

    /**
     * Get the list of your verified websites and domains.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void siteVerificationWebResourceListTest() throws ApiException {
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        SiteVerificationWebResourceListResponse response = api.siteVerificationWebResourceList(alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

    /**
     * Modify the list of owners for your website or domain. This method supports patch semantics.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void siteVerificationWebResourcePatchTest() throws ApiException {
        String id = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        SiteVerificationWebResourceResource siteVerificationWebResourceResource = null;
        SiteVerificationWebResourceResource response = api.siteVerificationWebResourcePatch(id, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, siteVerificationWebResourceResource);
        // TODO: test validations
    }

    /**
     * Modify the list of owners for your website or domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void siteVerificationWebResourceUpdateTest() throws ApiException {
        String id = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        SiteVerificationWebResourceResource siteVerificationWebResourceResource = null;
        SiteVerificationWebResourceResource response = api.siteVerificationWebResourceUpdate(id, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, siteVerificationWebResourceResource);
        // TODO: test validations
    }

}
