# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_recommender_v1_insight_recommendation_reference import GoogleCloudRecommenderV1InsightRecommendationReference
from openapi_server.models.google_cloud_recommender_v1_insight_state_info import GoogleCloudRecommenderV1InsightStateInfo
from openapi_server import util


class GoogleCloudRecommenderV1Insight(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, associated_recommendations: List[GoogleCloudRecommenderV1InsightRecommendationReference]=None, category: str=None, content: Dict[str, object]=None, description: str=None, etag: str=None, insight_subtype: str=None, last_refresh_time: str=None, name: str=None, observation_period: str=None, severity: str=None, state_info: GoogleCloudRecommenderV1InsightStateInfo=None, target_resources: List[str]=None):
        """GoogleCloudRecommenderV1Insight - a model defined in OpenAPI

        :param associated_recommendations: The associated_recommendations of this GoogleCloudRecommenderV1Insight.
        :param category: The category of this GoogleCloudRecommenderV1Insight.
        :param content: The content of this GoogleCloudRecommenderV1Insight.
        :param description: The description of this GoogleCloudRecommenderV1Insight.
        :param etag: The etag of this GoogleCloudRecommenderV1Insight.
        :param insight_subtype: The insight_subtype of this GoogleCloudRecommenderV1Insight.
        :param last_refresh_time: The last_refresh_time of this GoogleCloudRecommenderV1Insight.
        :param name: The name of this GoogleCloudRecommenderV1Insight.
        :param observation_period: The observation_period of this GoogleCloudRecommenderV1Insight.
        :param severity: The severity of this GoogleCloudRecommenderV1Insight.
        :param state_info: The state_info of this GoogleCloudRecommenderV1Insight.
        :param target_resources: The target_resources of this GoogleCloudRecommenderV1Insight.
        """
        self.openapi_types = {
            'associated_recommendations': List[GoogleCloudRecommenderV1InsightRecommendationReference],
            'category': str,
            'content': Dict[str, object],
            'description': str,
            'etag': str,
            'insight_subtype': str,
            'last_refresh_time': str,
            'name': str,
            'observation_period': str,
            'severity': str,
            'state_info': GoogleCloudRecommenderV1InsightStateInfo,
            'target_resources': List[str]
        }

        self.attribute_map = {
            'associated_recommendations': 'associatedRecommendations',
            'category': 'category',
            'content': 'content',
            'description': 'description',
            'etag': 'etag',
            'insight_subtype': 'insightSubtype',
            'last_refresh_time': 'lastRefreshTime',
            'name': 'name',
            'observation_period': 'observationPeriod',
            'severity': 'severity',
            'state_info': 'stateInfo',
            'target_resources': 'targetResources'
        }

        self._associated_recommendations = associated_recommendations
        self._category = category
        self._content = content
        self._description = description
        self._etag = etag
        self._insight_subtype = insight_subtype
        self._last_refresh_time = last_refresh_time
        self._name = name
        self._observation_period = observation_period
        self._severity = severity
        self._state_info = state_info
        self._target_resources = target_resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRecommenderV1Insight':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRecommenderV1Insight of this GoogleCloudRecommenderV1Insight.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def associated_recommendations(self):
        """Gets the associated_recommendations of this GoogleCloudRecommenderV1Insight.

        Recommendations derived from this insight.

        :return: The associated_recommendations of this GoogleCloudRecommenderV1Insight.
        :rtype: List[GoogleCloudRecommenderV1InsightRecommendationReference]
        """
        return self._associated_recommendations

    @associated_recommendations.setter
    def associated_recommendations(self, associated_recommendations):
        """Sets the associated_recommendations of this GoogleCloudRecommenderV1Insight.

        Recommendations derived from this insight.

        :param associated_recommendations: The associated_recommendations of this GoogleCloudRecommenderV1Insight.
        :type associated_recommendations: List[GoogleCloudRecommenderV1InsightRecommendationReference]
        """

        self._associated_recommendations = associated_recommendations

    @property
    def category(self):
        """Gets the category of this GoogleCloudRecommenderV1Insight.

        Category being targeted by the insight.

        :return: The category of this GoogleCloudRecommenderV1Insight.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this GoogleCloudRecommenderV1Insight.

        Category being targeted by the insight.

        :param category: The category of this GoogleCloudRecommenderV1Insight.
        :type category: str
        """
        allowed_values = ["CATEGORY_UNSPECIFIED", "COST", "SECURITY", "PERFORMANCE", "MANAGEABILITY", "SUSTAINABILITY", "RELIABILITY"]  # noqa: E501
        if category not in allowed_values:
            raise ValueError(
                "Invalid value for `category` ({0}), must be one of {1}"
                .format(category, allowed_values)
            )

        self._category = category

    @property
    def content(self):
        """Gets the content of this GoogleCloudRecommenderV1Insight.

        A struct of custom fields to explain the insight. Example: \"grantedPermissionsCount\": \"1000\"

        :return: The content of this GoogleCloudRecommenderV1Insight.
        :rtype: Dict[str, object]
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this GoogleCloudRecommenderV1Insight.

        A struct of custom fields to explain the insight. Example: \"grantedPermissionsCount\": \"1000\"

        :param content: The content of this GoogleCloudRecommenderV1Insight.
        :type content: Dict[str, object]
        """

        self._content = content

    @property
    def description(self):
        """Gets the description of this GoogleCloudRecommenderV1Insight.

        Free-form human readable summary in English. The maximum length is 500 characters.

        :return: The description of this GoogleCloudRecommenderV1Insight.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudRecommenderV1Insight.

        Free-form human readable summary in English. The maximum length is 500 characters.

        :param description: The description of this GoogleCloudRecommenderV1Insight.
        :type description: str
        """

        self._description = description

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudRecommenderV1Insight.

        Fingerprint of the Insight. Provides optimistic locking when updating states.

        :return: The etag of this GoogleCloudRecommenderV1Insight.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudRecommenderV1Insight.

        Fingerprint of the Insight. Provides optimistic locking when updating states.

        :param etag: The etag of this GoogleCloudRecommenderV1Insight.
        :type etag: str
        """

        self._etag = etag

    @property
    def insight_subtype(self):
        """Gets the insight_subtype of this GoogleCloudRecommenderV1Insight.

        Insight subtype. Insight content schema will be stable for a given subtype.

        :return: The insight_subtype of this GoogleCloudRecommenderV1Insight.
        :rtype: str
        """
        return self._insight_subtype

    @insight_subtype.setter
    def insight_subtype(self, insight_subtype):
        """Sets the insight_subtype of this GoogleCloudRecommenderV1Insight.

        Insight subtype. Insight content schema will be stable for a given subtype.

        :param insight_subtype: The insight_subtype of this GoogleCloudRecommenderV1Insight.
        :type insight_subtype: str
        """

        self._insight_subtype = insight_subtype

    @property
    def last_refresh_time(self):
        """Gets the last_refresh_time of this GoogleCloudRecommenderV1Insight.

        Timestamp of the latest data used to generate the insight.

        :return: The last_refresh_time of this GoogleCloudRecommenderV1Insight.
        :rtype: str
        """
        return self._last_refresh_time

    @last_refresh_time.setter
    def last_refresh_time(self, last_refresh_time):
        """Sets the last_refresh_time of this GoogleCloudRecommenderV1Insight.

        Timestamp of the latest data used to generate the insight.

        :param last_refresh_time: The last_refresh_time of this GoogleCloudRecommenderV1Insight.
        :type last_refresh_time: str
        """

        self._last_refresh_time = last_refresh_time

    @property
    def name(self):
        """Gets the name of this GoogleCloudRecommenderV1Insight.

        Name of the insight.

        :return: The name of this GoogleCloudRecommenderV1Insight.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudRecommenderV1Insight.

        Name of the insight.

        :param name: The name of this GoogleCloudRecommenderV1Insight.
        :type name: str
        """

        self._name = name

    @property
    def observation_period(self):
        """Gets the observation_period of this GoogleCloudRecommenderV1Insight.

        Observation period that led to the insight. The source data used to generate the insight ends at last_refresh_time and begins at (last_refresh_time - observation_period).

        :return: The observation_period of this GoogleCloudRecommenderV1Insight.
        :rtype: str
        """
        return self._observation_period

    @observation_period.setter
    def observation_period(self, observation_period):
        """Sets the observation_period of this GoogleCloudRecommenderV1Insight.

        Observation period that led to the insight. The source data used to generate the insight ends at last_refresh_time and begins at (last_refresh_time - observation_period).

        :param observation_period: The observation_period of this GoogleCloudRecommenderV1Insight.
        :type observation_period: str
        """

        self._observation_period = observation_period

    @property
    def severity(self):
        """Gets the severity of this GoogleCloudRecommenderV1Insight.

        Insight's severity.

        :return: The severity of this GoogleCloudRecommenderV1Insight.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this GoogleCloudRecommenderV1Insight.

        Insight's severity.

        :param severity: The severity of this GoogleCloudRecommenderV1Insight.
        :type severity: str
        """
        allowed_values = ["SEVERITY_UNSPECIFIED", "LOW", "MEDIUM", "HIGH", "CRITICAL"]  # noqa: E501
        if severity not in allowed_values:
            raise ValueError(
                "Invalid value for `severity` ({0}), must be one of {1}"
                .format(severity, allowed_values)
            )

        self._severity = severity

    @property
    def state_info(self):
        """Gets the state_info of this GoogleCloudRecommenderV1Insight.


        :return: The state_info of this GoogleCloudRecommenderV1Insight.
        :rtype: GoogleCloudRecommenderV1InsightStateInfo
        """
        return self._state_info

    @state_info.setter
    def state_info(self, state_info):
        """Sets the state_info of this GoogleCloudRecommenderV1Insight.


        :param state_info: The state_info of this GoogleCloudRecommenderV1Insight.
        :type state_info: GoogleCloudRecommenderV1InsightStateInfo
        """

        self._state_info = state_info

    @property
    def target_resources(self):
        """Gets the target_resources of this GoogleCloudRecommenderV1Insight.

        Fully qualified resource names that this insight is targeting.

        :return: The target_resources of this GoogleCloudRecommenderV1Insight.
        :rtype: List[str]
        """
        return self._target_resources

    @target_resources.setter
    def target_resources(self, target_resources):
        """Sets the target_resources of this GoogleCloudRecommenderV1Insight.

        Fully qualified resource names that this insight is targeting.

        :param target_resources: The target_resources of this GoogleCloudRecommenderV1Insight.
        :type target_resources: List[str]
        """

        self._target_resources = target_resources
