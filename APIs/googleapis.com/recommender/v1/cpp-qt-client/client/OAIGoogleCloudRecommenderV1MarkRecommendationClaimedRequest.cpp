/**
 * Recommender API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest() {
    this->initializeModel();
}

OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::~OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest() {}

void OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::initializeModel() {

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_state_metadata_isSet = false;
    m_state_metadata_isValid = false;
}

void OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::fromJsonObject(QJsonObject json) {

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_state_metadata_isValid = ::OpenAPI::fromJsonValue(m_state_metadata, json[QString("stateMetadata")]);
    m_state_metadata_isSet = !json[QString("stateMetadata")].isNull() && m_state_metadata_isValid;
}

QString OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_state_metadata.size() > 0) {
        obj.insert(QString("stateMetadata"), ::OpenAPI::toJsonValue(m_state_metadata));
    }
    return obj;
}

QString OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::is_etag_Valid() const{
    return m_etag_isValid;
}

QMap<QString, QString> OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::getStateMetadata() const {
    return m_state_metadata;
}
void OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::setStateMetadata(const QMap<QString, QString> &state_metadata) {
    m_state_metadata = state_metadata;
    m_state_metadata_isSet = true;
}

bool OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::is_state_metadata_Set() const{
    return m_state_metadata_isSet;
}

bool OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::is_state_metadata_Valid() const{
    return m_state_metadata_isValid;
}

bool OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommenderV1MarkRecommendationClaimedRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
