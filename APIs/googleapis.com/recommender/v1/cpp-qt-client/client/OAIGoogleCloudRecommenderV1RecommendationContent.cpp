/**
 * Recommender API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommenderV1RecommendationContent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommenderV1RecommendationContent::OAIGoogleCloudRecommenderV1RecommendationContent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommenderV1RecommendationContent::OAIGoogleCloudRecommenderV1RecommendationContent() {
    this->initializeModel();
}

OAIGoogleCloudRecommenderV1RecommendationContent::~OAIGoogleCloudRecommenderV1RecommendationContent() {}

void OAIGoogleCloudRecommenderV1RecommendationContent::initializeModel() {

    m_operation_groups_isSet = false;
    m_operation_groups_isValid = false;

    m_overview_isSet = false;
    m_overview_isValid = false;
}

void OAIGoogleCloudRecommenderV1RecommendationContent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommenderV1RecommendationContent::fromJsonObject(QJsonObject json) {

    m_operation_groups_isValid = ::OpenAPI::fromJsonValue(m_operation_groups, json[QString("operationGroups")]);
    m_operation_groups_isSet = !json[QString("operationGroups")].isNull() && m_operation_groups_isValid;

    m_overview_isValid = ::OpenAPI::fromJsonValue(m_overview, json[QString("overview")]);
    m_overview_isSet = !json[QString("overview")].isNull() && m_overview_isValid;
}

QString OAIGoogleCloudRecommenderV1RecommendationContent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommenderV1RecommendationContent::asJsonObject() const {
    QJsonObject obj;
    if (m_operation_groups.size() > 0) {
        obj.insert(QString("operationGroups"), ::OpenAPI::toJsonValue(m_operation_groups));
    }
    if (m_overview.size() > 0) {
        obj.insert(QString("overview"), ::OpenAPI::toJsonValue(m_overview));
    }
    return obj;
}

QList<OAIGoogleCloudRecommenderV1OperationGroup> OAIGoogleCloudRecommenderV1RecommendationContent::getOperationGroups() const {
    return m_operation_groups;
}
void OAIGoogleCloudRecommenderV1RecommendationContent::setOperationGroups(const QList<OAIGoogleCloudRecommenderV1OperationGroup> &operation_groups) {
    m_operation_groups = operation_groups;
    m_operation_groups_isSet = true;
}

bool OAIGoogleCloudRecommenderV1RecommendationContent::is_operation_groups_Set() const{
    return m_operation_groups_isSet;
}

bool OAIGoogleCloudRecommenderV1RecommendationContent::is_operation_groups_Valid() const{
    return m_operation_groups_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudRecommenderV1RecommendationContent::getOverview() const {
    return m_overview;
}
void OAIGoogleCloudRecommenderV1RecommendationContent::setOverview(const QMap<QString, QJsonValue> &overview) {
    m_overview = overview;
    m_overview_isSet = true;
}

bool OAIGoogleCloudRecommenderV1RecommendationContent::is_overview_Set() const{
    return m_overview_isSet;
}

bool OAIGoogleCloudRecommenderV1RecommendationContent::is_overview_Valid() const{
    return m_overview_isValid;
}

bool OAIGoogleCloudRecommenderV1RecommendationContent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_operation_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_overview.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommenderV1RecommendationContent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
