/**
 * Recommender API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommenderV1Insight.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommenderV1Insight::OAIGoogleCloudRecommenderV1Insight(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommenderV1Insight::OAIGoogleCloudRecommenderV1Insight() {
    this->initializeModel();
}

OAIGoogleCloudRecommenderV1Insight::~OAIGoogleCloudRecommenderV1Insight() {}

void OAIGoogleCloudRecommenderV1Insight::initializeModel() {

    m_associated_recommendations_isSet = false;
    m_associated_recommendations_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_insight_subtype_isSet = false;
    m_insight_subtype_isValid = false;

    m_last_refresh_time_isSet = false;
    m_last_refresh_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_observation_period_isSet = false;
    m_observation_period_isValid = false;

    m_severity_isSet = false;
    m_severity_isValid = false;

    m_state_info_isSet = false;
    m_state_info_isValid = false;

    m_target_resources_isSet = false;
    m_target_resources_isValid = false;
}

void OAIGoogleCloudRecommenderV1Insight::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommenderV1Insight::fromJsonObject(QJsonObject json) {

    m_associated_recommendations_isValid = ::OpenAPI::fromJsonValue(m_associated_recommendations, json[QString("associatedRecommendations")]);
    m_associated_recommendations_isSet = !json[QString("associatedRecommendations")].isNull() && m_associated_recommendations_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_insight_subtype_isValid = ::OpenAPI::fromJsonValue(m_insight_subtype, json[QString("insightSubtype")]);
    m_insight_subtype_isSet = !json[QString("insightSubtype")].isNull() && m_insight_subtype_isValid;

    m_last_refresh_time_isValid = ::OpenAPI::fromJsonValue(m_last_refresh_time, json[QString("lastRefreshTime")]);
    m_last_refresh_time_isSet = !json[QString("lastRefreshTime")].isNull() && m_last_refresh_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_observation_period_isValid = ::OpenAPI::fromJsonValue(m_observation_period, json[QString("observationPeriod")]);
    m_observation_period_isSet = !json[QString("observationPeriod")].isNull() && m_observation_period_isValid;

    m_severity_isValid = ::OpenAPI::fromJsonValue(m_severity, json[QString("severity")]);
    m_severity_isSet = !json[QString("severity")].isNull() && m_severity_isValid;

    m_state_info_isValid = ::OpenAPI::fromJsonValue(m_state_info, json[QString("stateInfo")]);
    m_state_info_isSet = !json[QString("stateInfo")].isNull() && m_state_info_isValid;

    m_target_resources_isValid = ::OpenAPI::fromJsonValue(m_target_resources, json[QString("targetResources")]);
    m_target_resources_isSet = !json[QString("targetResources")].isNull() && m_target_resources_isValid;
}

QString OAIGoogleCloudRecommenderV1Insight::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommenderV1Insight::asJsonObject() const {
    QJsonObject obj;
    if (m_associated_recommendations.size() > 0) {
        obj.insert(QString("associatedRecommendations"), ::OpenAPI::toJsonValue(m_associated_recommendations));
    }
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_content.size() > 0) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_insight_subtype_isSet) {
        obj.insert(QString("insightSubtype"), ::OpenAPI::toJsonValue(m_insight_subtype));
    }
    if (m_last_refresh_time_isSet) {
        obj.insert(QString("lastRefreshTime"), ::OpenAPI::toJsonValue(m_last_refresh_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_observation_period_isSet) {
        obj.insert(QString("observationPeriod"), ::OpenAPI::toJsonValue(m_observation_period));
    }
    if (m_severity_isSet) {
        obj.insert(QString("severity"), ::OpenAPI::toJsonValue(m_severity));
    }
    if (m_state_info.isSet()) {
        obj.insert(QString("stateInfo"), ::OpenAPI::toJsonValue(m_state_info));
    }
    if (m_target_resources.size() > 0) {
        obj.insert(QString("targetResources"), ::OpenAPI::toJsonValue(m_target_resources));
    }
    return obj;
}

QList<OAIGoogleCloudRecommenderV1InsightRecommendationReference> OAIGoogleCloudRecommenderV1Insight::getAssociatedRecommendations() const {
    return m_associated_recommendations;
}
void OAIGoogleCloudRecommenderV1Insight::setAssociatedRecommendations(const QList<OAIGoogleCloudRecommenderV1InsightRecommendationReference> &associated_recommendations) {
    m_associated_recommendations = associated_recommendations;
    m_associated_recommendations_isSet = true;
}

bool OAIGoogleCloudRecommenderV1Insight::is_associated_recommendations_Set() const{
    return m_associated_recommendations_isSet;
}

bool OAIGoogleCloudRecommenderV1Insight::is_associated_recommendations_Valid() const{
    return m_associated_recommendations_isValid;
}

QString OAIGoogleCloudRecommenderV1Insight::getCategory() const {
    return m_category;
}
void OAIGoogleCloudRecommenderV1Insight::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIGoogleCloudRecommenderV1Insight::is_category_Set() const{
    return m_category_isSet;
}

bool OAIGoogleCloudRecommenderV1Insight::is_category_Valid() const{
    return m_category_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudRecommenderV1Insight::getContent() const {
    return m_content;
}
void OAIGoogleCloudRecommenderV1Insight::setContent(const QMap<QString, QJsonValue> &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIGoogleCloudRecommenderV1Insight::is_content_Set() const{
    return m_content_isSet;
}

bool OAIGoogleCloudRecommenderV1Insight::is_content_Valid() const{
    return m_content_isValid;
}

QString OAIGoogleCloudRecommenderV1Insight::getDescription() const {
    return m_description;
}
void OAIGoogleCloudRecommenderV1Insight::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudRecommenderV1Insight::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudRecommenderV1Insight::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudRecommenderV1Insight::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudRecommenderV1Insight::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudRecommenderV1Insight::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudRecommenderV1Insight::is_etag_Valid() const{
    return m_etag_isValid;
}

QString OAIGoogleCloudRecommenderV1Insight::getInsightSubtype() const {
    return m_insight_subtype;
}
void OAIGoogleCloudRecommenderV1Insight::setInsightSubtype(const QString &insight_subtype) {
    m_insight_subtype = insight_subtype;
    m_insight_subtype_isSet = true;
}

bool OAIGoogleCloudRecommenderV1Insight::is_insight_subtype_Set() const{
    return m_insight_subtype_isSet;
}

bool OAIGoogleCloudRecommenderV1Insight::is_insight_subtype_Valid() const{
    return m_insight_subtype_isValid;
}

QString OAIGoogleCloudRecommenderV1Insight::getLastRefreshTime() const {
    return m_last_refresh_time;
}
void OAIGoogleCloudRecommenderV1Insight::setLastRefreshTime(const QString &last_refresh_time) {
    m_last_refresh_time = last_refresh_time;
    m_last_refresh_time_isSet = true;
}

bool OAIGoogleCloudRecommenderV1Insight::is_last_refresh_time_Set() const{
    return m_last_refresh_time_isSet;
}

bool OAIGoogleCloudRecommenderV1Insight::is_last_refresh_time_Valid() const{
    return m_last_refresh_time_isValid;
}

QString OAIGoogleCloudRecommenderV1Insight::getName() const {
    return m_name;
}
void OAIGoogleCloudRecommenderV1Insight::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudRecommenderV1Insight::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudRecommenderV1Insight::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudRecommenderV1Insight::getObservationPeriod() const {
    return m_observation_period;
}
void OAIGoogleCloudRecommenderV1Insight::setObservationPeriod(const QString &observation_period) {
    m_observation_period = observation_period;
    m_observation_period_isSet = true;
}

bool OAIGoogleCloudRecommenderV1Insight::is_observation_period_Set() const{
    return m_observation_period_isSet;
}

bool OAIGoogleCloudRecommenderV1Insight::is_observation_period_Valid() const{
    return m_observation_period_isValid;
}

QString OAIGoogleCloudRecommenderV1Insight::getSeverity() const {
    return m_severity;
}
void OAIGoogleCloudRecommenderV1Insight::setSeverity(const QString &severity) {
    m_severity = severity;
    m_severity_isSet = true;
}

bool OAIGoogleCloudRecommenderV1Insight::is_severity_Set() const{
    return m_severity_isSet;
}

bool OAIGoogleCloudRecommenderV1Insight::is_severity_Valid() const{
    return m_severity_isValid;
}

OAIGoogleCloudRecommenderV1InsightStateInfo OAIGoogleCloudRecommenderV1Insight::getStateInfo() const {
    return m_state_info;
}
void OAIGoogleCloudRecommenderV1Insight::setStateInfo(const OAIGoogleCloudRecommenderV1InsightStateInfo &state_info) {
    m_state_info = state_info;
    m_state_info_isSet = true;
}

bool OAIGoogleCloudRecommenderV1Insight::is_state_info_Set() const{
    return m_state_info_isSet;
}

bool OAIGoogleCloudRecommenderV1Insight::is_state_info_Valid() const{
    return m_state_info_isValid;
}

QList<QString> OAIGoogleCloudRecommenderV1Insight::getTargetResources() const {
    return m_target_resources;
}
void OAIGoogleCloudRecommenderV1Insight::setTargetResources(const QList<QString> &target_resources) {
    m_target_resources = target_resources;
    m_target_resources_isSet = true;
}

bool OAIGoogleCloudRecommenderV1Insight::is_target_resources_Set() const{
    return m_target_resources_isSet;
}

bool OAIGoogleCloudRecommenderV1Insight::is_target_resources_Valid() const{
    return m_target_resources_isValid;
}

bool OAIGoogleCloudRecommenderV1Insight::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_associated_recommendations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_insight_subtype_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_refresh_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_observation_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_severity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommenderV1Insight::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
