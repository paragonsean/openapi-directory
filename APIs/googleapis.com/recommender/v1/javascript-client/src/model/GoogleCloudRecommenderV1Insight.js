/**
 * Recommender API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRecommenderV1InsightRecommendationReference from './GoogleCloudRecommenderV1InsightRecommendationReference';
import GoogleCloudRecommenderV1InsightStateInfo from './GoogleCloudRecommenderV1InsightStateInfo';

/**
 * The GoogleCloudRecommenderV1Insight model module.
 * @module model/GoogleCloudRecommenderV1Insight
 * @version v1
 */
class GoogleCloudRecommenderV1Insight {
    /**
     * Constructs a new <code>GoogleCloudRecommenderV1Insight</code>.
     * An insight along with the information used to derive the insight. The insight may have associated recommendations as well.
     * @alias module:model/GoogleCloudRecommenderV1Insight
     */
    constructor() { 
        
        GoogleCloudRecommenderV1Insight.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRecommenderV1Insight</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRecommenderV1Insight} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRecommenderV1Insight} The populated <code>GoogleCloudRecommenderV1Insight</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRecommenderV1Insight();

            if (data.hasOwnProperty('associatedRecommendations')) {
                obj['associatedRecommendations'] = ApiClient.convertToType(data['associatedRecommendations'], [GoogleCloudRecommenderV1InsightRecommendationReference]);
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], {'String': Object});
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('insightSubtype')) {
                obj['insightSubtype'] = ApiClient.convertToType(data['insightSubtype'], 'String');
            }
            if (data.hasOwnProperty('lastRefreshTime')) {
                obj['lastRefreshTime'] = ApiClient.convertToType(data['lastRefreshTime'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('observationPeriod')) {
                obj['observationPeriod'] = ApiClient.convertToType(data['observationPeriod'], 'String');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('stateInfo')) {
                obj['stateInfo'] = GoogleCloudRecommenderV1InsightStateInfo.constructFromObject(data['stateInfo']);
            }
            if (data.hasOwnProperty('targetResources')) {
                obj['targetResources'] = ApiClient.convertToType(data['targetResources'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRecommenderV1Insight</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRecommenderV1Insight</code>.
     */
    static validateJSON(data) {
        if (data['associatedRecommendations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['associatedRecommendations'])) {
                throw new Error("Expected the field `associatedRecommendations` to be an array in the JSON data but got " + data['associatedRecommendations']);
            }
            // validate the optional field `associatedRecommendations` (array)
            for (const item of data['associatedRecommendations']) {
                GoogleCloudRecommenderV1InsightRecommendationReference.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['insightSubtype'] && !(typeof data['insightSubtype'] === 'string' || data['insightSubtype'] instanceof String)) {
            throw new Error("Expected the field `insightSubtype` to be a primitive type in the JSON string but got " + data['insightSubtype']);
        }
        // ensure the json data is a string
        if (data['lastRefreshTime'] && !(typeof data['lastRefreshTime'] === 'string' || data['lastRefreshTime'] instanceof String)) {
            throw new Error("Expected the field `lastRefreshTime` to be a primitive type in the JSON string but got " + data['lastRefreshTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['observationPeriod'] && !(typeof data['observationPeriod'] === 'string' || data['observationPeriod'] instanceof String)) {
            throw new Error("Expected the field `observationPeriod` to be a primitive type in the JSON string but got " + data['observationPeriod']);
        }
        // ensure the json data is a string
        if (data['severity'] && !(typeof data['severity'] === 'string' || data['severity'] instanceof String)) {
            throw new Error("Expected the field `severity` to be a primitive type in the JSON string but got " + data['severity']);
        }
        // validate the optional field `stateInfo`
        if (data['stateInfo']) { // data not null
          GoogleCloudRecommenderV1InsightStateInfo.validateJSON(data['stateInfo']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['targetResources'])) {
            throw new Error("Expected the field `targetResources` to be an array in the JSON data but got " + data['targetResources']);
        }

        return true;
    }


}



/**
 * Recommendations derived from this insight.
 * @member {Array.<module:model/GoogleCloudRecommenderV1InsightRecommendationReference>} associatedRecommendations
 */
GoogleCloudRecommenderV1Insight.prototype['associatedRecommendations'] = undefined;

/**
 * Category being targeted by the insight.
 * @member {module:model/GoogleCloudRecommenderV1Insight.CategoryEnum} category
 */
GoogleCloudRecommenderV1Insight.prototype['category'] = undefined;

/**
 * A struct of custom fields to explain the insight. Example: \"grantedPermissionsCount\": \"1000\"
 * @member {Object.<String, Object>} content
 */
GoogleCloudRecommenderV1Insight.prototype['content'] = undefined;

/**
 * Free-form human readable summary in English. The maximum length is 500 characters.
 * @member {String} description
 */
GoogleCloudRecommenderV1Insight.prototype['description'] = undefined;

/**
 * Fingerprint of the Insight. Provides optimistic locking when updating states.
 * @member {String} etag
 */
GoogleCloudRecommenderV1Insight.prototype['etag'] = undefined;

/**
 * Insight subtype. Insight content schema will be stable for a given subtype.
 * @member {String} insightSubtype
 */
GoogleCloudRecommenderV1Insight.prototype['insightSubtype'] = undefined;

/**
 * Timestamp of the latest data used to generate the insight.
 * @member {String} lastRefreshTime
 */
GoogleCloudRecommenderV1Insight.prototype['lastRefreshTime'] = undefined;

/**
 * Name of the insight.
 * @member {String} name
 */
GoogleCloudRecommenderV1Insight.prototype['name'] = undefined;

/**
 * Observation period that led to the insight. The source data used to generate the insight ends at last_refresh_time and begins at (last_refresh_time - observation_period).
 * @member {String} observationPeriod
 */
GoogleCloudRecommenderV1Insight.prototype['observationPeriod'] = undefined;

/**
 * Insight's severity.
 * @member {module:model/GoogleCloudRecommenderV1Insight.SeverityEnum} severity
 */
GoogleCloudRecommenderV1Insight.prototype['severity'] = undefined;

/**
 * @member {module:model/GoogleCloudRecommenderV1InsightStateInfo} stateInfo
 */
GoogleCloudRecommenderV1Insight.prototype['stateInfo'] = undefined;

/**
 * Fully qualified resource names that this insight is targeting.
 * @member {Array.<String>} targetResources
 */
GoogleCloudRecommenderV1Insight.prototype['targetResources'] = undefined;





/**
 * Allowed values for the <code>category</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudRecommenderV1Insight['CategoryEnum'] = {

    /**
     * value: "CATEGORY_UNSPECIFIED"
     * @const
     */
    "CATEGORY_UNSPECIFIED": "CATEGORY_UNSPECIFIED",

    /**
     * value: "COST"
     * @const
     */
    "COST": "COST",

    /**
     * value: "SECURITY"
     * @const
     */
    "SECURITY": "SECURITY",

    /**
     * value: "PERFORMANCE"
     * @const
     */
    "PERFORMANCE": "PERFORMANCE",

    /**
     * value: "MANAGEABILITY"
     * @const
     */
    "MANAGEABILITY": "MANAGEABILITY",

    /**
     * value: "SUSTAINABILITY"
     * @const
     */
    "SUSTAINABILITY": "SUSTAINABILITY",

    /**
     * value: "RELIABILITY"
     * @const
     */
    "RELIABILITY": "RELIABILITY"
};


/**
 * Allowed values for the <code>severity</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudRecommenderV1Insight['SeverityEnum'] = {

    /**
     * value: "SEVERITY_UNSPECIFIED"
     * @const
     */
    "SEVERITY_UNSPECIFIED": "SEVERITY_UNSPECIFIED",

    /**
     * value: "LOW"
     * @const
     */
    "LOW": "LOW",

    /**
     * value: "MEDIUM"
     * @const
     */
    "MEDIUM": "MEDIUM",

    /**
     * value: "HIGH"
     * @const
     */
    "HIGH": "HIGH",

    /**
     * value: "CRITICAL"
     * @const
     */
    "CRITICAL": "CRITICAL"
};



export default GoogleCloudRecommenderV1Insight;

