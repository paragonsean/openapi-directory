# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_type_money import GoogleTypeMoney
from openapi_server import util


class GoogleCloudRecommenderV1beta1CostProjection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost: GoogleTypeMoney=None, cost_in_local_currency: GoogleTypeMoney=None, duration: str=None, pricing_type: str=None):
        """GoogleCloudRecommenderV1beta1CostProjection - a model defined in OpenAPI

        :param cost: The cost of this GoogleCloudRecommenderV1beta1CostProjection.
        :param cost_in_local_currency: The cost_in_local_currency of this GoogleCloudRecommenderV1beta1CostProjection.
        :param duration: The duration of this GoogleCloudRecommenderV1beta1CostProjection.
        :param pricing_type: The pricing_type of this GoogleCloudRecommenderV1beta1CostProjection.
        """
        self.openapi_types = {
            'cost': GoogleTypeMoney,
            'cost_in_local_currency': GoogleTypeMoney,
            'duration': str,
            'pricing_type': str
        }

        self.attribute_map = {
            'cost': 'cost',
            'cost_in_local_currency': 'costInLocalCurrency',
            'duration': 'duration',
            'pricing_type': 'pricingType'
        }

        self._cost = cost
        self._cost_in_local_currency = cost_in_local_currency
        self._duration = duration
        self._pricing_type = pricing_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRecommenderV1beta1CostProjection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRecommenderV1beta1CostProjection of this GoogleCloudRecommenderV1beta1CostProjection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost(self):
        """Gets the cost of this GoogleCloudRecommenderV1beta1CostProjection.


        :return: The cost of this GoogleCloudRecommenderV1beta1CostProjection.
        :rtype: GoogleTypeMoney
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """Sets the cost of this GoogleCloudRecommenderV1beta1CostProjection.


        :param cost: The cost of this GoogleCloudRecommenderV1beta1CostProjection.
        :type cost: GoogleTypeMoney
        """

        self._cost = cost

    @property
    def cost_in_local_currency(self):
        """Gets the cost_in_local_currency of this GoogleCloudRecommenderV1beta1CostProjection.


        :return: The cost_in_local_currency of this GoogleCloudRecommenderV1beta1CostProjection.
        :rtype: GoogleTypeMoney
        """
        return self._cost_in_local_currency

    @cost_in_local_currency.setter
    def cost_in_local_currency(self, cost_in_local_currency):
        """Sets the cost_in_local_currency of this GoogleCloudRecommenderV1beta1CostProjection.


        :param cost_in_local_currency: The cost_in_local_currency of this GoogleCloudRecommenderV1beta1CostProjection.
        :type cost_in_local_currency: GoogleTypeMoney
        """

        self._cost_in_local_currency = cost_in_local_currency

    @property
    def duration(self):
        """Gets the duration of this GoogleCloudRecommenderV1beta1CostProjection.

        Duration for which this cost applies.

        :return: The duration of this GoogleCloudRecommenderV1beta1CostProjection.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this GoogleCloudRecommenderV1beta1CostProjection.

        Duration for which this cost applies.

        :param duration: The duration of this GoogleCloudRecommenderV1beta1CostProjection.
        :type duration: str
        """

        self._duration = duration

    @property
    def pricing_type(self):
        """Gets the pricing_type of this GoogleCloudRecommenderV1beta1CostProjection.

        How the cost is calculated.

        :return: The pricing_type of this GoogleCloudRecommenderV1beta1CostProjection.
        :rtype: str
        """
        return self._pricing_type

    @pricing_type.setter
    def pricing_type(self, pricing_type):
        """Sets the pricing_type of this GoogleCloudRecommenderV1beta1CostProjection.

        How the cost is calculated.

        :param pricing_type: The pricing_type of this GoogleCloudRecommenderV1beta1CostProjection.
        :type pricing_type: str
        """
        allowed_values = ["PRICING_TYPE_UNSPECIFIED", "LIST_PRICE", "CUSTOM_PRICE"]  # noqa: E501
        if pricing_type not in allowed_values:
            raise ValueError(
                "Invalid value for `pricing_type` ({0}), must be one of {1}"
                .format(pricing_type, allowed_values)
            )

        self._pricing_type = pricing_type
