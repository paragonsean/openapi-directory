# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_recommender_v1beta1_insight_type_generation_config import GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig
from openapi_server import util


class GoogleCloudRecommenderV1beta1InsightTypeConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotations: Dict[str, str]=None, display_name: str=None, etag: str=None, insight_type_generation_config: GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig=None, name: str=None, revision_id: str=None, update_time: str=None):
        """GoogleCloudRecommenderV1beta1InsightTypeConfig - a model defined in OpenAPI

        :param annotations: The annotations of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :param display_name: The display_name of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :param etag: The etag of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :param insight_type_generation_config: The insight_type_generation_config of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :param name: The name of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :param revision_id: The revision_id of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :param update_time: The update_time of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        """
        self.openapi_types = {
            'annotations': Dict[str, str],
            'display_name': str,
            'etag': str,
            'insight_type_generation_config': GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig,
            'name': str,
            'revision_id': str,
            'update_time': str
        }

        self.attribute_map = {
            'annotations': 'annotations',
            'display_name': 'displayName',
            'etag': 'etag',
            'insight_type_generation_config': 'insightTypeGenerationConfig',
            'name': 'name',
            'revision_id': 'revisionId',
            'update_time': 'updateTime'
        }

        self._annotations = annotations
        self._display_name = display_name
        self._etag = etag
        self._insight_type_generation_config = insight_type_generation_config
        self._name = name
        self._revision_id = revision_id
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRecommenderV1beta1InsightTypeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRecommenderV1beta1InsightTypeConfig of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations(self):
        """Gets the annotations of this GoogleCloudRecommenderV1beta1InsightTypeConfig.

        Allows clients to store small amounts of arbitrary data. Annotations must follow the Kubernetes syntax. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.

        :return: The annotations of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :rtype: Dict[str, str]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this GoogleCloudRecommenderV1beta1InsightTypeConfig.

        Allows clients to store small amounts of arbitrary data. Annotations must follow the Kubernetes syntax. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.

        :param annotations: The annotations of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :type annotations: Dict[str, str]
        """

        self._annotations = annotations

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudRecommenderV1beta1InsightTypeConfig.

        A user-settable field to provide a human-readable name to be used in user interfaces.

        :return: The display_name of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudRecommenderV1beta1InsightTypeConfig.

        A user-settable field to provide a human-readable name to be used in user interfaces.

        :param display_name: The display_name of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudRecommenderV1beta1InsightTypeConfig.

        Fingerprint of the InsightTypeConfig. Provides optimistic locking when updating.

        :return: The etag of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudRecommenderV1beta1InsightTypeConfig.

        Fingerprint of the InsightTypeConfig. Provides optimistic locking when updating.

        :param etag: The etag of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :type etag: str
        """

        self._etag = etag

    @property
    def insight_type_generation_config(self):
        """Gets the insight_type_generation_config of this GoogleCloudRecommenderV1beta1InsightTypeConfig.


        :return: The insight_type_generation_config of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :rtype: GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig
        """
        return self._insight_type_generation_config

    @insight_type_generation_config.setter
    def insight_type_generation_config(self, insight_type_generation_config):
        """Sets the insight_type_generation_config of this GoogleCloudRecommenderV1beta1InsightTypeConfig.


        :param insight_type_generation_config: The insight_type_generation_config of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :type insight_type_generation_config: GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig
        """

        self._insight_type_generation_config = insight_type_generation_config

    @property
    def name(self):
        """Gets the name of this GoogleCloudRecommenderV1beta1InsightTypeConfig.

        Name of insight type config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/config

        :return: The name of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudRecommenderV1beta1InsightTypeConfig.

        Name of insight type config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/config

        :param name: The name of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :type name: str
        """

        self._name = name

    @property
    def revision_id(self):
        """Gets the revision_id of this GoogleCloudRecommenderV1beta1InsightTypeConfig.

        Output only. Immutable. The revision ID of the config. A new revision is committed whenever the config is changed in any way. The format is an 8-character hexadecimal string.

        :return: The revision_id of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :rtype: str
        """
        return self._revision_id

    @revision_id.setter
    def revision_id(self, revision_id):
        """Sets the revision_id of this GoogleCloudRecommenderV1beta1InsightTypeConfig.

        Output only. Immutable. The revision ID of the config. A new revision is committed whenever the config is changed in any way. The format is an 8-character hexadecimal string.

        :param revision_id: The revision_id of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :type revision_id: str
        """

        self._revision_id = revision_id

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudRecommenderV1beta1InsightTypeConfig.

        Last time when the config was updated.

        :return: The update_time of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudRecommenderV1beta1InsightTypeConfig.

        Last time when the config was updated.

        :param update_time: The update_time of this GoogleCloudRecommenderV1beta1InsightTypeConfig.
        :type update_time: str
        """

        self._update_time = update_time
