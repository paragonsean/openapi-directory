/**
 * Recommender API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommenderV1beta1SustainabilityProjection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::OAIGoogleCloudRecommenderV1beta1SustainabilityProjection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::OAIGoogleCloudRecommenderV1beta1SustainabilityProjection() {
    this->initializeModel();
}

OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::~OAIGoogleCloudRecommenderV1beta1SustainabilityProjection() {}

void OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::initializeModel() {

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_kg_co2e_isSet = false;
    m_kg_co2e_isValid = false;
}

void OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::fromJsonObject(QJsonObject json) {

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_kg_co2e_isValid = ::OpenAPI::fromJsonValue(m_kg_co2e, json[QString("kgCO2e")]);
    m_kg_co2e_isSet = !json[QString("kgCO2e")].isNull() && m_kg_co2e_isValid;
}

QString OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::asJsonObject() const {
    QJsonObject obj;
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_kg_co2e_isSet) {
        obj.insert(QString("kgCO2e"), ::OpenAPI::toJsonValue(m_kg_co2e));
    }
    return obj;
}

QString OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::getDuration() const {
    return m_duration;
}
void OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::is_duration_Valid() const{
    return m_duration_isValid;
}

double OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::getKgCo2e() const {
    return m_kg_co2e;
}
void OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::setKgCo2e(const double &kg_co2e) {
    m_kg_co2e = kg_co2e;
    m_kg_co2e_isSet = true;
}

bool OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::is_kg_co2e_Set() const{
    return m_kg_co2e_isSet;
}

bool OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::is_kg_co2e_Valid() const{
    return m_kg_co2e_isValid;
}

bool OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kg_co2e_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommenderV1beta1SustainabilityProjection::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
