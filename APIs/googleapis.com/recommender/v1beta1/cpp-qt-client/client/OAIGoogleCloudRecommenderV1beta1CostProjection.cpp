/**
 * Recommender API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommenderV1beta1CostProjection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommenderV1beta1CostProjection::OAIGoogleCloudRecommenderV1beta1CostProjection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommenderV1beta1CostProjection::OAIGoogleCloudRecommenderV1beta1CostProjection() {
    this->initializeModel();
}

OAIGoogleCloudRecommenderV1beta1CostProjection::~OAIGoogleCloudRecommenderV1beta1CostProjection() {}

void OAIGoogleCloudRecommenderV1beta1CostProjection::initializeModel() {

    m_cost_isSet = false;
    m_cost_isValid = false;

    m_cost_in_local_currency_isSet = false;
    m_cost_in_local_currency_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_pricing_type_isSet = false;
    m_pricing_type_isValid = false;
}

void OAIGoogleCloudRecommenderV1beta1CostProjection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommenderV1beta1CostProjection::fromJsonObject(QJsonObject json) {

    m_cost_isValid = ::OpenAPI::fromJsonValue(m_cost, json[QString("cost")]);
    m_cost_isSet = !json[QString("cost")].isNull() && m_cost_isValid;

    m_cost_in_local_currency_isValid = ::OpenAPI::fromJsonValue(m_cost_in_local_currency, json[QString("costInLocalCurrency")]);
    m_cost_in_local_currency_isSet = !json[QString("costInLocalCurrency")].isNull() && m_cost_in_local_currency_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_pricing_type_isValid = ::OpenAPI::fromJsonValue(m_pricing_type, json[QString("pricingType")]);
    m_pricing_type_isSet = !json[QString("pricingType")].isNull() && m_pricing_type_isValid;
}

QString OAIGoogleCloudRecommenderV1beta1CostProjection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommenderV1beta1CostProjection::asJsonObject() const {
    QJsonObject obj;
    if (m_cost.isSet()) {
        obj.insert(QString("cost"), ::OpenAPI::toJsonValue(m_cost));
    }
    if (m_cost_in_local_currency.isSet()) {
        obj.insert(QString("costInLocalCurrency"), ::OpenAPI::toJsonValue(m_cost_in_local_currency));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_pricing_type_isSet) {
        obj.insert(QString("pricingType"), ::OpenAPI::toJsonValue(m_pricing_type));
    }
    return obj;
}

OAIGoogleTypeMoney OAIGoogleCloudRecommenderV1beta1CostProjection::getCost() const {
    return m_cost;
}
void OAIGoogleCloudRecommenderV1beta1CostProjection::setCost(const OAIGoogleTypeMoney &cost) {
    m_cost = cost;
    m_cost_isSet = true;
}

bool OAIGoogleCloudRecommenderV1beta1CostProjection::is_cost_Set() const{
    return m_cost_isSet;
}

bool OAIGoogleCloudRecommenderV1beta1CostProjection::is_cost_Valid() const{
    return m_cost_isValid;
}

OAIGoogleTypeMoney OAIGoogleCloudRecommenderV1beta1CostProjection::getCostInLocalCurrency() const {
    return m_cost_in_local_currency;
}
void OAIGoogleCloudRecommenderV1beta1CostProjection::setCostInLocalCurrency(const OAIGoogleTypeMoney &cost_in_local_currency) {
    m_cost_in_local_currency = cost_in_local_currency;
    m_cost_in_local_currency_isSet = true;
}

bool OAIGoogleCloudRecommenderV1beta1CostProjection::is_cost_in_local_currency_Set() const{
    return m_cost_in_local_currency_isSet;
}

bool OAIGoogleCloudRecommenderV1beta1CostProjection::is_cost_in_local_currency_Valid() const{
    return m_cost_in_local_currency_isValid;
}

QString OAIGoogleCloudRecommenderV1beta1CostProjection::getDuration() const {
    return m_duration;
}
void OAIGoogleCloudRecommenderV1beta1CostProjection::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIGoogleCloudRecommenderV1beta1CostProjection::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIGoogleCloudRecommenderV1beta1CostProjection::is_duration_Valid() const{
    return m_duration_isValid;
}

QString OAIGoogleCloudRecommenderV1beta1CostProjection::getPricingType() const {
    return m_pricing_type;
}
void OAIGoogleCloudRecommenderV1beta1CostProjection::setPricingType(const QString &pricing_type) {
    m_pricing_type = pricing_type;
    m_pricing_type_isSet = true;
}

bool OAIGoogleCloudRecommenderV1beta1CostProjection::is_pricing_type_Set() const{
    return m_pricing_type_isSet;
}

bool OAIGoogleCloudRecommenderV1beta1CostProjection::is_pricing_type_Valid() const{
    return m_pricing_type_isValid;
}

bool OAIGoogleCloudRecommenderV1beta1CostProjection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cost.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cost_in_local_currency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommenderV1beta1CostProjection::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
