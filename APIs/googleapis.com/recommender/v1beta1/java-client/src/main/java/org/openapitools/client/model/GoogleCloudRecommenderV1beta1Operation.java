/*
 * Recommender API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudRecommenderV1beta1ValueMatcher;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains an operation for a resource loosely based on the JSON-PATCH format with support for: * Custom filters for describing partial array patch. * Extended path values for describing nested arrays. * Custom fields for describing the resource for which the operation is being described. * Allows extension to custom operations not natively supported by RFC6902. See https://tools.ietf.org/html/rfc6902 for details on the original RFC.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:34.351793-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRecommenderV1beta1Operation {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_PATH_FILTERS = "pathFilters";
  @SerializedName(SERIALIZED_NAME_PATH_FILTERS)
  private Map<String, Object> pathFilters = new HashMap<>();

  public static final String SERIALIZED_NAME_PATH_VALUE_MATCHERS = "pathValueMatchers";
  @SerializedName(SERIALIZED_NAME_PATH_VALUE_MATCHERS)
  private Map<String, GoogleCloudRecommenderV1beta1ValueMatcher> pathValueMatchers = new HashMap<>();

  public static final String SERIALIZED_NAME_RESOURCE = "resource";
  @SerializedName(SERIALIZED_NAME_RESOURCE)
  private String resource;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "resourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private String resourceType;

  public static final String SERIALIZED_NAME_SOURCE_PATH = "sourcePath";
  @SerializedName(SERIALIZED_NAME_SOURCE_PATH)
  private String sourcePath;

  public static final String SERIALIZED_NAME_SOURCE_RESOURCE = "sourceResource";
  @SerializedName(SERIALIZED_NAME_SOURCE_RESOURCE)
  private String sourceResource;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Object value = null;

  public static final String SERIALIZED_NAME_VALUE_MATCHER = "valueMatcher";
  @SerializedName(SERIALIZED_NAME_VALUE_MATCHER)
  private GoogleCloudRecommenderV1beta1ValueMatcher valueMatcher;

  public GoogleCloudRecommenderV1beta1Operation() {
  }

  public GoogleCloudRecommenderV1beta1Operation action(String action) {
    this.action = action;
    return this;
  }

  /**
   * Type of this operation. Contains one of &#39;add&#39;, &#39;remove&#39;, &#39;replace&#39;, &#39;move&#39;, &#39;copy&#39;, &#39;test&#39; and &#39;custom&#39; operations. This field is case-insensitive and always populated.
   * @return action
   */
  @javax.annotation.Nullable
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  public GoogleCloudRecommenderV1beta1Operation path(String path) {
    this.path = path;
    return this;
  }

  /**
   * Path to the target field being operated on. If the operation is at the resource level, then path should be \&quot;/\&quot;. This field is always populated.
   * @return path
   */
  @javax.annotation.Nullable
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }


  public GoogleCloudRecommenderV1beta1Operation pathFilters(Map<String, Object> pathFilters) {
    this.pathFilters = pathFilters;
    return this;
  }

  public GoogleCloudRecommenderV1beta1Operation putPathFiltersItem(String key, Object pathFiltersItem) {
    if (this.pathFilters == null) {
      this.pathFilters = new HashMap<>();
    }
    this.pathFilters.put(key, pathFiltersItem);
    return this;
  }

  /**
   * Set of filters to apply if &#x60;path&#x60; refers to array elements or nested array elements in order to narrow down to a single unique element that is being tested/modified. This is intended to be an exact match per filter. To perform advanced matching, use path_value_matchers. * Example: &#x60;&#x60;&#x60; { \&quot;/versions/_*_/name\&quot; : \&quot;it-123\&quot; \&quot;/versions/_*_/targetSize/percent\&quot;: 20 } &#x60;&#x60;&#x60; * Example: &#x60;&#x60;&#x60; { \&quot;/bindings/_*_/role\&quot;: \&quot;roles/owner\&quot; \&quot;/bindings/_*_/condition\&quot; : null } &#x60;&#x60;&#x60; * Example: &#x60;&#x60;&#x60; { \&quot;/bindings/_*_/role\&quot;: \&quot;roles/owner\&quot; \&quot;/bindings/_*_/members/_*\&quot; : [\&quot;x@example.com\&quot;, \&quot;y@example.com\&quot;] } &#x60;&#x60;&#x60; When both path_filters and path_value_matchers are set, an implicit AND must be performed.
   * @return pathFilters
   */
  @javax.annotation.Nullable
  public Map<String, Object> getPathFilters() {
    return pathFilters;
  }

  public void setPathFilters(Map<String, Object> pathFilters) {
    this.pathFilters = pathFilters;
  }


  public GoogleCloudRecommenderV1beta1Operation pathValueMatchers(Map<String, GoogleCloudRecommenderV1beta1ValueMatcher> pathValueMatchers) {
    this.pathValueMatchers = pathValueMatchers;
    return this;
  }

  public GoogleCloudRecommenderV1beta1Operation putPathValueMatchersItem(String key, GoogleCloudRecommenderV1beta1ValueMatcher pathValueMatchersItem) {
    if (this.pathValueMatchers == null) {
      this.pathValueMatchers = new HashMap<>();
    }
    this.pathValueMatchers.put(key, pathValueMatchersItem);
    return this;
  }

  /**
   * Similar to path_filters, this contains set of filters to apply if &#x60;path&#x60; field refers to array elements. This is meant to support value matching beyond exact match. To perform exact match, use path_filters. When both path_filters and path_value_matchers are set, an implicit AND must be performed.
   * @return pathValueMatchers
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudRecommenderV1beta1ValueMatcher> getPathValueMatchers() {
    return pathValueMatchers;
  }

  public void setPathValueMatchers(Map<String, GoogleCloudRecommenderV1beta1ValueMatcher> pathValueMatchers) {
    this.pathValueMatchers = pathValueMatchers;
  }


  public GoogleCloudRecommenderV1beta1Operation resource(String resource) {
    this.resource = resource;
    return this;
  }

  /**
   * Contains the fully qualified resource name. This field is always populated. ex: //cloudresourcemanager.googleapis.com/projects/foo.
   * @return resource
   */
  @javax.annotation.Nullable
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }


  public GoogleCloudRecommenderV1beta1Operation resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Type of GCP resource being modified/tested. This field is always populated. Example: cloudresourcemanager.googleapis.com/Project, compute.googleapis.com/Instance
   * @return resourceType
   */
  @javax.annotation.Nullable
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }


  public GoogleCloudRecommenderV1beta1Operation sourcePath(String sourcePath) {
    this.sourcePath = sourcePath;
    return this;
  }

  /**
   * Can be set with action &#39;copy&#39; or &#39;move&#39; to indicate the source field within resource or source_resource, ignored if provided for other operation types.
   * @return sourcePath
   */
  @javax.annotation.Nullable
  public String getSourcePath() {
    return sourcePath;
  }

  public void setSourcePath(String sourcePath) {
    this.sourcePath = sourcePath;
  }


  public GoogleCloudRecommenderV1beta1Operation sourceResource(String sourceResource) {
    this.sourceResource = sourceResource;
    return this;
  }

  /**
   * Can be set with action &#39;copy&#39; to copy resource configuration across different resources of the same type. Example: A resource clone can be done via action &#x3D; &#39;copy&#39;, path &#x3D; \&quot;/\&quot;, from &#x3D; \&quot;/\&quot;, source_resource &#x3D; and resource_name &#x3D; . This field is empty for all other values of &#x60;action&#x60;.
   * @return sourceResource
   */
  @javax.annotation.Nullable
  public String getSourceResource() {
    return sourceResource;
  }

  public void setSourceResource(String sourceResource) {
    this.sourceResource = sourceResource;
  }


  public GoogleCloudRecommenderV1beta1Operation value(Object value) {
    this.value = value;
    return this;
  }

  /**
   * Value for the &#x60;path&#x60; field. Will be set for actions:&#39;add&#39;/&#39;replace&#39;. Maybe set for action: &#39;test&#39;. Either this or &#x60;value_matcher&#x60; will be set for &#39;test&#39; operation. An exact match must be performed.
   * @return value
   */
  @javax.annotation.Nullable
  public Object getValue() {
    return value;
  }

  public void setValue(Object value) {
    this.value = value;
  }


  public GoogleCloudRecommenderV1beta1Operation valueMatcher(GoogleCloudRecommenderV1beta1ValueMatcher valueMatcher) {
    this.valueMatcher = valueMatcher;
    return this;
  }

  /**
   * Get valueMatcher
   * @return valueMatcher
   */
  @javax.annotation.Nullable
  public GoogleCloudRecommenderV1beta1ValueMatcher getValueMatcher() {
    return valueMatcher;
  }

  public void setValueMatcher(GoogleCloudRecommenderV1beta1ValueMatcher valueMatcher) {
    this.valueMatcher = valueMatcher;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRecommenderV1beta1Operation googleCloudRecommenderV1beta1Operation = (GoogleCloudRecommenderV1beta1Operation) o;
    return Objects.equals(this.action, googleCloudRecommenderV1beta1Operation.action) &&
        Objects.equals(this.path, googleCloudRecommenderV1beta1Operation.path) &&
        Objects.equals(this.pathFilters, googleCloudRecommenderV1beta1Operation.pathFilters) &&
        Objects.equals(this.pathValueMatchers, googleCloudRecommenderV1beta1Operation.pathValueMatchers) &&
        Objects.equals(this.resource, googleCloudRecommenderV1beta1Operation.resource) &&
        Objects.equals(this.resourceType, googleCloudRecommenderV1beta1Operation.resourceType) &&
        Objects.equals(this.sourcePath, googleCloudRecommenderV1beta1Operation.sourcePath) &&
        Objects.equals(this.sourceResource, googleCloudRecommenderV1beta1Operation.sourceResource) &&
        Objects.equals(this.value, googleCloudRecommenderV1beta1Operation.value) &&
        Objects.equals(this.valueMatcher, googleCloudRecommenderV1beta1Operation.valueMatcher);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, path, pathFilters, pathValueMatchers, resource, resourceType, sourcePath, sourceResource, value, valueMatcher);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRecommenderV1beta1Operation {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    pathFilters: ").append(toIndentedString(pathFilters)).append("\n");
    sb.append("    pathValueMatchers: ").append(toIndentedString(pathValueMatchers)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    sourcePath: ").append(toIndentedString(sourcePath)).append("\n");
    sb.append("    sourceResource: ").append(toIndentedString(sourceResource)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    valueMatcher: ").append(toIndentedString(valueMatcher)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("path");
    openapiFields.add("pathFilters");
    openapiFields.add("pathValueMatchers");
    openapiFields.add("resource");
    openapiFields.add("resourceType");
    openapiFields.add("sourcePath");
    openapiFields.add("sourceResource");
    openapiFields.add("value");
    openapiFields.add("valueMatcher");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRecommenderV1beta1Operation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRecommenderV1beta1Operation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRecommenderV1beta1Operation is not found in the empty JSON string", GoogleCloudRecommenderV1beta1Operation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRecommenderV1beta1Operation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRecommenderV1beta1Operation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if ((jsonObj.get("path") != null && !jsonObj.get("path").isJsonNull()) && !jsonObj.get("path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path").toString()));
      }
      if ((jsonObj.get("resource") != null && !jsonObj.get("resource").isJsonNull()) && !jsonObj.get("resource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resource").toString()));
      }
      if ((jsonObj.get("resourceType") != null && !jsonObj.get("resourceType").isJsonNull()) && !jsonObj.get("resourceType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceType").toString()));
      }
      if ((jsonObj.get("sourcePath") != null && !jsonObj.get("sourcePath").isJsonNull()) && !jsonObj.get("sourcePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourcePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourcePath").toString()));
      }
      if ((jsonObj.get("sourceResource") != null && !jsonObj.get("sourceResource").isJsonNull()) && !jsonObj.get("sourceResource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceResource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceResource").toString()));
      }
      // validate the optional field `valueMatcher`
      if (jsonObj.get("valueMatcher") != null && !jsonObj.get("valueMatcher").isJsonNull()) {
        GoogleCloudRecommenderV1beta1ValueMatcher.validateJsonElement(jsonObj.get("valueMatcher"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRecommenderV1beta1Operation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRecommenderV1beta1Operation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRecommenderV1beta1Operation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRecommenderV1beta1Operation.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRecommenderV1beta1Operation>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRecommenderV1beta1Operation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRecommenderV1beta1Operation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRecommenderV1beta1Operation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRecommenderV1beta1Operation
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRecommenderV1beta1Operation
   */
  public static GoogleCloudRecommenderV1beta1Operation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRecommenderV1beta1Operation.class);
  }

  /**
   * Convert an instance of GoogleCloudRecommenderV1beta1Operation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

