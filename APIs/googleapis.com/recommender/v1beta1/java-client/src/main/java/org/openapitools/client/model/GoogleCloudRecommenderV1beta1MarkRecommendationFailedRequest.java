/*
 * Recommender API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request for the &#x60;MarkRecommendationFailed&#x60; Method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:34.351793-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest {
  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_STATE_METADATA = "stateMetadata";
  @SerializedName(SERIALIZED_NAME_STATE_METADATA)
  private Map<String, String> stateMetadata = new HashMap<>();

  public GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest() {
  }

  public GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Required. Fingerprint of the Recommendation. Provides optimistic locking.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest stateMetadata(Map<String, String> stateMetadata) {
    this.stateMetadata = stateMetadata;
    return this;
  }

  public GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest putStateMetadataItem(String key, String stateMetadataItem) {
    if (this.stateMetadata == null) {
      this.stateMetadata = new HashMap<>();
    }
    this.stateMetadata.put(key, stateMetadataItem);
    return this;
  }

  /**
   * State properties to include with this state. Overwrites any existing &#x60;state_metadata&#x60;. Keys must match the regex &#x60;/^a-z0-9{0,62}$/&#x60;. Values must match the regex &#x60;/^[a-zA-Z0-9_./-]{0,255}$/&#x60;.
   * @return stateMetadata
   */
  @javax.annotation.Nullable
  public Map<String, String> getStateMetadata() {
    return stateMetadata;
  }

  public void setStateMetadata(Map<String, String> stateMetadata) {
    this.stateMetadata = stateMetadata;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest googleCloudRecommenderV1beta1MarkRecommendationFailedRequest = (GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest) o;
    return Objects.equals(this.etag, googleCloudRecommenderV1beta1MarkRecommendationFailedRequest.etag) &&
        Objects.equals(this.stateMetadata, googleCloudRecommenderV1beta1MarkRecommendationFailedRequest.stateMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(etag, stateMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest {\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    stateMetadata: ").append(toIndentedString(stateMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("etag");
    openapiFields.add("stateMetadata");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest is not found in the empty JSON string", GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest
   */
  public static GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

