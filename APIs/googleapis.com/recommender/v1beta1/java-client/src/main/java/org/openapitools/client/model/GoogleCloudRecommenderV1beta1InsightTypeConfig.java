/*
 * Recommender API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Configuration for an InsightType.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:34.351793-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRecommenderV1beta1InsightTypeConfig {
  public static final String SERIALIZED_NAME_ANNOTATIONS = "annotations";
  @SerializedName(SERIALIZED_NAME_ANNOTATIONS)
  private Map<String, String> annotations = new HashMap<>();

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_INSIGHT_TYPE_GENERATION_CONFIG = "insightTypeGenerationConfig";
  @SerializedName(SERIALIZED_NAME_INSIGHT_TYPE_GENERATION_CONFIG)
  private GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig insightTypeGenerationConfig;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REVISION_ID = "revisionId";
  @SerializedName(SERIALIZED_NAME_REVISION_ID)
  private String revisionId;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudRecommenderV1beta1InsightTypeConfig() {
  }

  public GoogleCloudRecommenderV1beta1InsightTypeConfig(
     String revisionId
  ) {
    this();
    this.revisionId = revisionId;
  }

  public GoogleCloudRecommenderV1beta1InsightTypeConfig annotations(Map<String, String> annotations) {
    this.annotations = annotations;
    return this;
  }

  public GoogleCloudRecommenderV1beta1InsightTypeConfig putAnnotationsItem(String key, String annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new HashMap<>();
    }
    this.annotations.put(key, annotationsItem);
    return this;
  }

  /**
   * Allows clients to store small amounts of arbitrary data. Annotations must follow the Kubernetes syntax. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
   * @return annotations
   */
  @javax.annotation.Nullable
  public Map<String, String> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(Map<String, String> annotations) {
    this.annotations = annotations;
  }


  public GoogleCloudRecommenderV1beta1InsightTypeConfig displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * A user-settable field to provide a human-readable name to be used in user interfaces.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudRecommenderV1beta1InsightTypeConfig etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Fingerprint of the InsightTypeConfig. Provides optimistic locking when updating.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public GoogleCloudRecommenderV1beta1InsightTypeConfig insightTypeGenerationConfig(GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig insightTypeGenerationConfig) {
    this.insightTypeGenerationConfig = insightTypeGenerationConfig;
    return this;
  }

  /**
   * Get insightTypeGenerationConfig
   * @return insightTypeGenerationConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig getInsightTypeGenerationConfig() {
    return insightTypeGenerationConfig;
  }

  public void setInsightTypeGenerationConfig(GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig insightTypeGenerationConfig) {
    this.insightTypeGenerationConfig = insightTypeGenerationConfig;
  }


  public GoogleCloudRecommenderV1beta1InsightTypeConfig name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of insight type config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/config
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  /**
   * Output only. Immutable. The revision ID of the config. A new revision is committed whenever the config is changed in any way. The format is an 8-character hexadecimal string.
   * @return revisionId
   */
  @javax.annotation.Nullable
  public String getRevisionId() {
    return revisionId;
  }



  public GoogleCloudRecommenderV1beta1InsightTypeConfig updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Last time when the config was updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRecommenderV1beta1InsightTypeConfig googleCloudRecommenderV1beta1InsightTypeConfig = (GoogleCloudRecommenderV1beta1InsightTypeConfig) o;
    return Objects.equals(this.annotations, googleCloudRecommenderV1beta1InsightTypeConfig.annotations) &&
        Objects.equals(this.displayName, googleCloudRecommenderV1beta1InsightTypeConfig.displayName) &&
        Objects.equals(this.etag, googleCloudRecommenderV1beta1InsightTypeConfig.etag) &&
        Objects.equals(this.insightTypeGenerationConfig, googleCloudRecommenderV1beta1InsightTypeConfig.insightTypeGenerationConfig) &&
        Objects.equals(this.name, googleCloudRecommenderV1beta1InsightTypeConfig.name) &&
        Objects.equals(this.revisionId, googleCloudRecommenderV1beta1InsightTypeConfig.revisionId) &&
        Objects.equals(this.updateTime, googleCloudRecommenderV1beta1InsightTypeConfig.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotations, displayName, etag, insightTypeGenerationConfig, name, revisionId, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRecommenderV1beta1InsightTypeConfig {\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    insightTypeGenerationConfig: ").append(toIndentedString(insightTypeGenerationConfig)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    revisionId: ").append(toIndentedString(revisionId)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annotations");
    openapiFields.add("displayName");
    openapiFields.add("etag");
    openapiFields.add("insightTypeGenerationConfig");
    openapiFields.add("name");
    openapiFields.add("revisionId");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRecommenderV1beta1InsightTypeConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRecommenderV1beta1InsightTypeConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRecommenderV1beta1InsightTypeConfig is not found in the empty JSON string", GoogleCloudRecommenderV1beta1InsightTypeConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRecommenderV1beta1InsightTypeConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRecommenderV1beta1InsightTypeConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      // validate the optional field `insightTypeGenerationConfig`
      if (jsonObj.get("insightTypeGenerationConfig") != null && !jsonObj.get("insightTypeGenerationConfig").isJsonNull()) {
        GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig.validateJsonElement(jsonObj.get("insightTypeGenerationConfig"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("revisionId") != null && !jsonObj.get("revisionId").isJsonNull()) && !jsonObj.get("revisionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revisionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revisionId").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRecommenderV1beta1InsightTypeConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRecommenderV1beta1InsightTypeConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRecommenderV1beta1InsightTypeConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRecommenderV1beta1InsightTypeConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRecommenderV1beta1InsightTypeConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRecommenderV1beta1InsightTypeConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRecommenderV1beta1InsightTypeConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRecommenderV1beta1InsightTypeConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRecommenderV1beta1InsightTypeConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRecommenderV1beta1InsightTypeConfig
   */
  public static GoogleCloudRecommenderV1beta1InsightTypeConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRecommenderV1beta1InsightTypeConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudRecommenderV1beta1InsightTypeConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

