/*
 * Recommender API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRecommenderV1beta1Impact;
import org.openapitools.client.model.GoogleCloudRecommenderV1beta1RecommendationContent;
import org.openapitools.client.model.GoogleCloudRecommenderV1beta1RecommendationInsightReference;
import org.openapitools.client.model.GoogleCloudRecommenderV1beta1RecommendationStateInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A recommendation along with a suggested action. E.g., a rightsizing recommendation for an underutilized VM, IAM role recommendations, etc
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:34.351793-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRecommenderV1beta1Recommendation {
  public static final String SERIALIZED_NAME_ADDITIONAL_IMPACT = "additionalImpact";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_IMPACT)
  private List<GoogleCloudRecommenderV1beta1Impact> additionalImpact = new ArrayList<>();

  public static final String SERIALIZED_NAME_ASSOCIATED_INSIGHTS = "associatedInsights";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_INSIGHTS)
  private List<GoogleCloudRecommenderV1beta1RecommendationInsightReference> associatedInsights = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private GoogleCloudRecommenderV1beta1RecommendationContent content;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_LAST_REFRESH_TIME = "lastRefreshTime";
  @SerializedName(SERIALIZED_NAME_LAST_REFRESH_TIME)
  private String lastRefreshTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRIMARY_IMPACT = "primaryImpact";
  @SerializedName(SERIALIZED_NAME_PRIMARY_IMPACT)
  private GoogleCloudRecommenderV1beta1Impact primaryImpact;

  /**
   * Recommendation&#39;s priority.
   */
  @JsonAdapter(PriorityEnum.Adapter.class)
  public enum PriorityEnum {
    PRIORITY_UNSPECIFIED("PRIORITY_UNSPECIFIED"),
    
    P4("P4"),
    
    P3("P3"),
    
    P2("P2"),
    
    P1("P1");

    private String value;

    PriorityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PriorityEnum fromValue(String value) {
      for (PriorityEnum b : PriorityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PriorityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PriorityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PriorityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PriorityEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PriorityEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private PriorityEnum priority;

  public static final String SERIALIZED_NAME_RECOMMENDER_SUBTYPE = "recommenderSubtype";
  @SerializedName(SERIALIZED_NAME_RECOMMENDER_SUBTYPE)
  private String recommenderSubtype;

  public static final String SERIALIZED_NAME_STATE_INFO = "stateInfo";
  @SerializedName(SERIALIZED_NAME_STATE_INFO)
  private GoogleCloudRecommenderV1beta1RecommendationStateInfo stateInfo;

  public static final String SERIALIZED_NAME_TARGET_RESOURCES = "targetResources";
  @SerializedName(SERIALIZED_NAME_TARGET_RESOURCES)
  private List<String> targetResources = new ArrayList<>();

  public static final String SERIALIZED_NAME_XOR_GROUP_ID = "xorGroupId";
  @SerializedName(SERIALIZED_NAME_XOR_GROUP_ID)
  private String xorGroupId;

  public GoogleCloudRecommenderV1beta1Recommendation() {
  }

  public GoogleCloudRecommenderV1beta1Recommendation additionalImpact(List<GoogleCloudRecommenderV1beta1Impact> additionalImpact) {
    this.additionalImpact = additionalImpact;
    return this;
  }

  public GoogleCloudRecommenderV1beta1Recommendation addAdditionalImpactItem(GoogleCloudRecommenderV1beta1Impact additionalImpactItem) {
    if (this.additionalImpact == null) {
      this.additionalImpact = new ArrayList<>();
    }
    this.additionalImpact.add(additionalImpactItem);
    return this;
  }

  /**
   * Optional set of additional impact that this recommendation may have when trying to optimize for the primary category. These may be positive or negative.
   * @return additionalImpact
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRecommenderV1beta1Impact> getAdditionalImpact() {
    return additionalImpact;
  }

  public void setAdditionalImpact(List<GoogleCloudRecommenderV1beta1Impact> additionalImpact) {
    this.additionalImpact = additionalImpact;
  }


  public GoogleCloudRecommenderV1beta1Recommendation associatedInsights(List<GoogleCloudRecommenderV1beta1RecommendationInsightReference> associatedInsights) {
    this.associatedInsights = associatedInsights;
    return this;
  }

  public GoogleCloudRecommenderV1beta1Recommendation addAssociatedInsightsItem(GoogleCloudRecommenderV1beta1RecommendationInsightReference associatedInsightsItem) {
    if (this.associatedInsights == null) {
      this.associatedInsights = new ArrayList<>();
    }
    this.associatedInsights.add(associatedInsightsItem);
    return this;
  }

  /**
   * Insights that led to this recommendation.
   * @return associatedInsights
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRecommenderV1beta1RecommendationInsightReference> getAssociatedInsights() {
    return associatedInsights;
  }

  public void setAssociatedInsights(List<GoogleCloudRecommenderV1beta1RecommendationInsightReference> associatedInsights) {
    this.associatedInsights = associatedInsights;
  }


  public GoogleCloudRecommenderV1beta1Recommendation content(GoogleCloudRecommenderV1beta1RecommendationContent content) {
    this.content = content;
    return this;
  }

  /**
   * Get content
   * @return content
   */
  @javax.annotation.Nullable
  public GoogleCloudRecommenderV1beta1RecommendationContent getContent() {
    return content;
  }

  public void setContent(GoogleCloudRecommenderV1beta1RecommendationContent content) {
    this.content = content;
  }


  public GoogleCloudRecommenderV1beta1Recommendation description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Free-form human readable summary in English. The maximum length is 500 characters.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudRecommenderV1beta1Recommendation etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Fingerprint of the Recommendation. Provides optimistic locking when updating states.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public GoogleCloudRecommenderV1beta1Recommendation lastRefreshTime(String lastRefreshTime) {
    this.lastRefreshTime = lastRefreshTime;
    return this;
  }

  /**
   * Last time this recommendation was refreshed by the system that created it in the first place.
   * @return lastRefreshTime
   */
  @javax.annotation.Nullable
  public String getLastRefreshTime() {
    return lastRefreshTime;
  }

  public void setLastRefreshTime(String lastRefreshTime) {
    this.lastRefreshTime = lastRefreshTime;
  }


  public GoogleCloudRecommenderV1beta1Recommendation name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of recommendation.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudRecommenderV1beta1Recommendation primaryImpact(GoogleCloudRecommenderV1beta1Impact primaryImpact) {
    this.primaryImpact = primaryImpact;
    return this;
  }

  /**
   * Get primaryImpact
   * @return primaryImpact
   */
  @javax.annotation.Nullable
  public GoogleCloudRecommenderV1beta1Impact getPrimaryImpact() {
    return primaryImpact;
  }

  public void setPrimaryImpact(GoogleCloudRecommenderV1beta1Impact primaryImpact) {
    this.primaryImpact = primaryImpact;
  }


  public GoogleCloudRecommenderV1beta1Recommendation priority(PriorityEnum priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Recommendation&#39;s priority.
   * @return priority
   */
  @javax.annotation.Nullable
  public PriorityEnum getPriority() {
    return priority;
  }

  public void setPriority(PriorityEnum priority) {
    this.priority = priority;
  }


  public GoogleCloudRecommenderV1beta1Recommendation recommenderSubtype(String recommenderSubtype) {
    this.recommenderSubtype = recommenderSubtype;
    return this;
  }

  /**
   * Contains an identifier for a subtype of recommendations produced for the same recommender. Subtype is a function of content and impact, meaning a new subtype might be added when significant changes to &#x60;content&#x60; or &#x60;primary_impact.category&#x60; are introduced. See the Recommenders section to see a list of subtypes for a given Recommender. Examples: For recommender &#x3D; \&quot;google.iam.policy.Recommender\&quot;, recommender_subtype can be one of \&quot;REMOVE_ROLE\&quot;/\&quot;REPLACE_ROLE\&quot;
   * @return recommenderSubtype
   */
  @javax.annotation.Nullable
  public String getRecommenderSubtype() {
    return recommenderSubtype;
  }

  public void setRecommenderSubtype(String recommenderSubtype) {
    this.recommenderSubtype = recommenderSubtype;
  }


  public GoogleCloudRecommenderV1beta1Recommendation stateInfo(GoogleCloudRecommenderV1beta1RecommendationStateInfo stateInfo) {
    this.stateInfo = stateInfo;
    return this;
  }

  /**
   * Get stateInfo
   * @return stateInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudRecommenderV1beta1RecommendationStateInfo getStateInfo() {
    return stateInfo;
  }

  public void setStateInfo(GoogleCloudRecommenderV1beta1RecommendationStateInfo stateInfo) {
    this.stateInfo = stateInfo;
  }


  public GoogleCloudRecommenderV1beta1Recommendation targetResources(List<String> targetResources) {
    this.targetResources = targetResources;
    return this;
  }

  public GoogleCloudRecommenderV1beta1Recommendation addTargetResourcesItem(String targetResourcesItem) {
    if (this.targetResources == null) {
      this.targetResources = new ArrayList<>();
    }
    this.targetResources.add(targetResourcesItem);
    return this;
  }

  /**
   * Fully qualified resource names that this recommendation is targeting.
   * @return targetResources
   */
  @javax.annotation.Nullable
  public List<String> getTargetResources() {
    return targetResources;
  }

  public void setTargetResources(List<String> targetResources) {
    this.targetResources = targetResources;
  }


  public GoogleCloudRecommenderV1beta1Recommendation xorGroupId(String xorGroupId) {
    this.xorGroupId = xorGroupId;
    return this;
  }

  /**
   * Corresponds to a mutually exclusive group ID within a recommender. A non-empty ID indicates that the recommendation belongs to a mutually exclusive group. This means that only one recommendation within the group is suggested to be applied.
   * @return xorGroupId
   */
  @javax.annotation.Nullable
  public String getXorGroupId() {
    return xorGroupId;
  }

  public void setXorGroupId(String xorGroupId) {
    this.xorGroupId = xorGroupId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRecommenderV1beta1Recommendation googleCloudRecommenderV1beta1Recommendation = (GoogleCloudRecommenderV1beta1Recommendation) o;
    return Objects.equals(this.additionalImpact, googleCloudRecommenderV1beta1Recommendation.additionalImpact) &&
        Objects.equals(this.associatedInsights, googleCloudRecommenderV1beta1Recommendation.associatedInsights) &&
        Objects.equals(this.content, googleCloudRecommenderV1beta1Recommendation.content) &&
        Objects.equals(this.description, googleCloudRecommenderV1beta1Recommendation.description) &&
        Objects.equals(this.etag, googleCloudRecommenderV1beta1Recommendation.etag) &&
        Objects.equals(this.lastRefreshTime, googleCloudRecommenderV1beta1Recommendation.lastRefreshTime) &&
        Objects.equals(this.name, googleCloudRecommenderV1beta1Recommendation.name) &&
        Objects.equals(this.primaryImpact, googleCloudRecommenderV1beta1Recommendation.primaryImpact) &&
        Objects.equals(this.priority, googleCloudRecommenderV1beta1Recommendation.priority) &&
        Objects.equals(this.recommenderSubtype, googleCloudRecommenderV1beta1Recommendation.recommenderSubtype) &&
        Objects.equals(this.stateInfo, googleCloudRecommenderV1beta1Recommendation.stateInfo) &&
        Objects.equals(this.targetResources, googleCloudRecommenderV1beta1Recommendation.targetResources) &&
        Objects.equals(this.xorGroupId, googleCloudRecommenderV1beta1Recommendation.xorGroupId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalImpact, associatedInsights, content, description, etag, lastRefreshTime, name, primaryImpact, priority, recommenderSubtype, stateInfo, targetResources, xorGroupId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRecommenderV1beta1Recommendation {\n");
    sb.append("    additionalImpact: ").append(toIndentedString(additionalImpact)).append("\n");
    sb.append("    associatedInsights: ").append(toIndentedString(associatedInsights)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    lastRefreshTime: ").append(toIndentedString(lastRefreshTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    primaryImpact: ").append(toIndentedString(primaryImpact)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    recommenderSubtype: ").append(toIndentedString(recommenderSubtype)).append("\n");
    sb.append("    stateInfo: ").append(toIndentedString(stateInfo)).append("\n");
    sb.append("    targetResources: ").append(toIndentedString(targetResources)).append("\n");
    sb.append("    xorGroupId: ").append(toIndentedString(xorGroupId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additionalImpact");
    openapiFields.add("associatedInsights");
    openapiFields.add("content");
    openapiFields.add("description");
    openapiFields.add("etag");
    openapiFields.add("lastRefreshTime");
    openapiFields.add("name");
    openapiFields.add("primaryImpact");
    openapiFields.add("priority");
    openapiFields.add("recommenderSubtype");
    openapiFields.add("stateInfo");
    openapiFields.add("targetResources");
    openapiFields.add("xorGroupId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRecommenderV1beta1Recommendation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRecommenderV1beta1Recommendation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRecommenderV1beta1Recommendation is not found in the empty JSON string", GoogleCloudRecommenderV1beta1Recommendation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRecommenderV1beta1Recommendation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRecommenderV1beta1Recommendation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("additionalImpact") != null && !jsonObj.get("additionalImpact").isJsonNull()) {
        JsonArray jsonArrayadditionalImpact = jsonObj.getAsJsonArray("additionalImpact");
        if (jsonArrayadditionalImpact != null) {
          // ensure the json data is an array
          if (!jsonObj.get("additionalImpact").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `additionalImpact` to be an array in the JSON string but got `%s`", jsonObj.get("additionalImpact").toString()));
          }

          // validate the optional field `additionalImpact` (array)
          for (int i = 0; i < jsonArrayadditionalImpact.size(); i++) {
            GoogleCloudRecommenderV1beta1Impact.validateJsonElement(jsonArrayadditionalImpact.get(i));
          };
        }
      }
      if (jsonObj.get("associatedInsights") != null && !jsonObj.get("associatedInsights").isJsonNull()) {
        JsonArray jsonArrayassociatedInsights = jsonObj.getAsJsonArray("associatedInsights");
        if (jsonArrayassociatedInsights != null) {
          // ensure the json data is an array
          if (!jsonObj.get("associatedInsights").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `associatedInsights` to be an array in the JSON string but got `%s`", jsonObj.get("associatedInsights").toString()));
          }

          // validate the optional field `associatedInsights` (array)
          for (int i = 0; i < jsonArrayassociatedInsights.size(); i++) {
            GoogleCloudRecommenderV1beta1RecommendationInsightReference.validateJsonElement(jsonArrayassociatedInsights.get(i));
          };
        }
      }
      // validate the optional field `content`
      if (jsonObj.get("content") != null && !jsonObj.get("content").isJsonNull()) {
        GoogleCloudRecommenderV1beta1RecommendationContent.validateJsonElement(jsonObj.get("content"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      if ((jsonObj.get("lastRefreshTime") != null && !jsonObj.get("lastRefreshTime").isJsonNull()) && !jsonObj.get("lastRefreshTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastRefreshTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastRefreshTime").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `primaryImpact`
      if (jsonObj.get("primaryImpact") != null && !jsonObj.get("primaryImpact").isJsonNull()) {
        GoogleCloudRecommenderV1beta1Impact.validateJsonElement(jsonObj.get("primaryImpact"));
      }
      if ((jsonObj.get("priority") != null && !jsonObj.get("priority").isJsonNull()) && !jsonObj.get("priority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priority").toString()));
      }
      // validate the optional field `priority`
      if (jsonObj.get("priority") != null && !jsonObj.get("priority").isJsonNull()) {
        PriorityEnum.validateJsonElement(jsonObj.get("priority"));
      }
      if ((jsonObj.get("recommenderSubtype") != null && !jsonObj.get("recommenderSubtype").isJsonNull()) && !jsonObj.get("recommenderSubtype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recommenderSubtype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recommenderSubtype").toString()));
      }
      // validate the optional field `stateInfo`
      if (jsonObj.get("stateInfo") != null && !jsonObj.get("stateInfo").isJsonNull()) {
        GoogleCloudRecommenderV1beta1RecommendationStateInfo.validateJsonElement(jsonObj.get("stateInfo"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("targetResources") != null && !jsonObj.get("targetResources").isJsonNull() && !jsonObj.get("targetResources").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetResources` to be an array in the JSON string but got `%s`", jsonObj.get("targetResources").toString()));
      }
      if ((jsonObj.get("xorGroupId") != null && !jsonObj.get("xorGroupId").isJsonNull()) && !jsonObj.get("xorGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xorGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xorGroupId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRecommenderV1beta1Recommendation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRecommenderV1beta1Recommendation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRecommenderV1beta1Recommendation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRecommenderV1beta1Recommendation.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRecommenderV1beta1Recommendation>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRecommenderV1beta1Recommendation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRecommenderV1beta1Recommendation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRecommenderV1beta1Recommendation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRecommenderV1beta1Recommendation
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRecommenderV1beta1Recommendation
   */
  public static GoogleCloudRecommenderV1beta1Recommendation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRecommenderV1beta1Recommendation.class);
  }

  /**
   * Convert an instance of GoogleCloudRecommenderV1beta1Recommendation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

