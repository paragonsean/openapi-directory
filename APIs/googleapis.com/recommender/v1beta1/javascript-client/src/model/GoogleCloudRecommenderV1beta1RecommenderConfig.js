/**
 * Recommender API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRecommenderV1beta1RecommenderGenerationConfig from './GoogleCloudRecommenderV1beta1RecommenderGenerationConfig';

/**
 * The GoogleCloudRecommenderV1beta1RecommenderConfig model module.
 * @module model/GoogleCloudRecommenderV1beta1RecommenderConfig
 * @version v1beta1
 */
class GoogleCloudRecommenderV1beta1RecommenderConfig {
    /**
     * Constructs a new <code>GoogleCloudRecommenderV1beta1RecommenderConfig</code>.
     * Configuration for a Recommender.
     * @alias module:model/GoogleCloudRecommenderV1beta1RecommenderConfig
     */
    constructor() { 
        
        GoogleCloudRecommenderV1beta1RecommenderConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRecommenderV1beta1RecommenderConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRecommenderV1beta1RecommenderConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRecommenderV1beta1RecommenderConfig} The populated <code>GoogleCloudRecommenderV1beta1RecommenderConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRecommenderV1beta1RecommenderConfig();

            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], {'String': 'String'});
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('recommenderGenerationConfig')) {
                obj['recommenderGenerationConfig'] = GoogleCloudRecommenderV1beta1RecommenderGenerationConfig.constructFromObject(data['recommenderGenerationConfig']);
            }
            if (data.hasOwnProperty('revisionId')) {
                obj['revisionId'] = ApiClient.convertToType(data['revisionId'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRecommenderV1beta1RecommenderConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRecommenderV1beta1RecommenderConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `recommenderGenerationConfig`
        if (data['recommenderGenerationConfig']) { // data not null
          GoogleCloudRecommenderV1beta1RecommenderGenerationConfig.validateJSON(data['recommenderGenerationConfig']);
        }
        // ensure the json data is a string
        if (data['revisionId'] && !(typeof data['revisionId'] === 'string' || data['revisionId'] instanceof String)) {
            throw new Error("Expected the field `revisionId` to be a primitive type in the JSON string but got " + data['revisionId']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Allows clients to store small amounts of arbitrary data. Annotations must follow the Kubernetes syntax. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
 * @member {Object.<String, String>} annotations
 */
GoogleCloudRecommenderV1beta1RecommenderConfig.prototype['annotations'] = undefined;

/**
 * A user-settable field to provide a human-readable name to be used in user interfaces.
 * @member {String} displayName
 */
GoogleCloudRecommenderV1beta1RecommenderConfig.prototype['displayName'] = undefined;

/**
 * Fingerprint of the RecommenderConfig. Provides optimistic locking when updating.
 * @member {String} etag
 */
GoogleCloudRecommenderV1beta1RecommenderConfig.prototype['etag'] = undefined;

/**
 * Name of recommender config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config
 * @member {String} name
 */
GoogleCloudRecommenderV1beta1RecommenderConfig.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleCloudRecommenderV1beta1RecommenderGenerationConfig} recommenderGenerationConfig
 */
GoogleCloudRecommenderV1beta1RecommenderConfig.prototype['recommenderGenerationConfig'] = undefined;

/**
 * Output only. Immutable. The revision ID of the config. A new revision is committed whenever the config is changed in any way. The format is an 8-character hexadecimal string.
 * @member {String} revisionId
 */
GoogleCloudRecommenderV1beta1RecommenderConfig.prototype['revisionId'] = undefined;

/**
 * Last time when the config was updated.
 * @member {String} updateTime
 */
GoogleCloudRecommenderV1beta1RecommenderConfig.prototype['updateTime'] = undefined;






export default GoogleCloudRecommenderV1beta1RecommenderConfig;

