/**
 * Recommender API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRecommenderV1beta1ValueMatcher from './GoogleCloudRecommenderV1beta1ValueMatcher';

/**
 * The GoogleCloudRecommenderV1beta1Operation model module.
 * @module model/GoogleCloudRecommenderV1beta1Operation
 * @version v1beta1
 */
class GoogleCloudRecommenderV1beta1Operation {
    /**
     * Constructs a new <code>GoogleCloudRecommenderV1beta1Operation</code>.
     * Contains an operation for a resource loosely based on the JSON-PATCH format with support for: * Custom filters for describing partial array patch. * Extended path values for describing nested arrays. * Custom fields for describing the resource for which the operation is being described. * Allows extension to custom operations not natively supported by RFC6902. See https://tools.ietf.org/html/rfc6902 for details on the original RFC.
     * @alias module:model/GoogleCloudRecommenderV1beta1Operation
     */
    constructor() { 
        
        GoogleCloudRecommenderV1beta1Operation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRecommenderV1beta1Operation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRecommenderV1beta1Operation} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRecommenderV1beta1Operation} The populated <code>GoogleCloudRecommenderV1beta1Operation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRecommenderV1beta1Operation();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('pathFilters')) {
                obj['pathFilters'] = ApiClient.convertToType(data['pathFilters'], {'String': Object});
            }
            if (data.hasOwnProperty('pathValueMatchers')) {
                obj['pathValueMatchers'] = ApiClient.convertToType(data['pathValueMatchers'], {'String': GoogleCloudRecommenderV1beta1ValueMatcher});
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = ApiClient.convertToType(data['resource'], 'String');
            }
            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], 'String');
            }
            if (data.hasOwnProperty('sourcePath')) {
                obj['sourcePath'] = ApiClient.convertToType(data['sourcePath'], 'String');
            }
            if (data.hasOwnProperty('sourceResource')) {
                obj['sourceResource'] = ApiClient.convertToType(data['sourceResource'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], Object);
            }
            if (data.hasOwnProperty('valueMatcher')) {
                obj['valueMatcher'] = GoogleCloudRecommenderV1beta1ValueMatcher.constructFromObject(data['valueMatcher']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRecommenderV1beta1Operation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRecommenderV1beta1Operation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['resource'] && !(typeof data['resource'] === 'string' || data['resource'] instanceof String)) {
            throw new Error("Expected the field `resource` to be a primitive type in the JSON string but got " + data['resource']);
        }
        // ensure the json data is a string
        if (data['resourceType'] && !(typeof data['resourceType'] === 'string' || data['resourceType'] instanceof String)) {
            throw new Error("Expected the field `resourceType` to be a primitive type in the JSON string but got " + data['resourceType']);
        }
        // ensure the json data is a string
        if (data['sourcePath'] && !(typeof data['sourcePath'] === 'string' || data['sourcePath'] instanceof String)) {
            throw new Error("Expected the field `sourcePath` to be a primitive type in the JSON string but got " + data['sourcePath']);
        }
        // ensure the json data is a string
        if (data['sourceResource'] && !(typeof data['sourceResource'] === 'string' || data['sourceResource'] instanceof String)) {
            throw new Error("Expected the field `sourceResource` to be a primitive type in the JSON string but got " + data['sourceResource']);
        }
        // validate the optional field `valueMatcher`
        if (data['valueMatcher']) { // data not null
          GoogleCloudRecommenderV1beta1ValueMatcher.validateJSON(data['valueMatcher']);
        }

        return true;
    }


}



/**
 * Type of this operation. Contains one of 'add', 'remove', 'replace', 'move', 'copy', 'test' and 'custom' operations. This field is case-insensitive and always populated.
 * @member {String} action
 */
GoogleCloudRecommenderV1beta1Operation.prototype['action'] = undefined;

/**
 * Path to the target field being operated on. If the operation is at the resource level, then path should be \"/\". This field is always populated.
 * @member {String} path
 */
GoogleCloudRecommenderV1beta1Operation.prototype['path'] = undefined;

/**
 * Set of filters to apply if `path` refers to array elements or nested array elements in order to narrow down to a single unique element that is being tested/modified. This is intended to be an exact match per filter. To perform advanced matching, use path_value_matchers. * Example: ``` { \"/versions/_*_/name\" : \"it-123\" \"/versions/_*_/targetSize/percent\": 20 } ``` * Example: ``` { \"/bindings/_*_/role\": \"roles/owner\" \"/bindings/_*_/condition\" : null } ``` * Example: ``` { \"/bindings/_*_/role\": \"roles/owner\" \"/bindings/_*_/members/_*\" : [\"x@example.com\", \"y@example.com\"] } ``` When both path_filters and path_value_matchers are set, an implicit AND must be performed.
 * @member {Object.<String, Object>} pathFilters
 */
GoogleCloudRecommenderV1beta1Operation.prototype['pathFilters'] = undefined;

/**
 * Similar to path_filters, this contains set of filters to apply if `path` field refers to array elements. This is meant to support value matching beyond exact match. To perform exact match, use path_filters. When both path_filters and path_value_matchers are set, an implicit AND must be performed.
 * @member {Object.<String, module:model/GoogleCloudRecommenderV1beta1ValueMatcher>} pathValueMatchers
 */
GoogleCloudRecommenderV1beta1Operation.prototype['pathValueMatchers'] = undefined;

/**
 * Contains the fully qualified resource name. This field is always populated. ex: //cloudresourcemanager.googleapis.com/projects/foo.
 * @member {String} resource
 */
GoogleCloudRecommenderV1beta1Operation.prototype['resource'] = undefined;

/**
 * Type of GCP resource being modified/tested. This field is always populated. Example: cloudresourcemanager.googleapis.com/Project, compute.googleapis.com/Instance
 * @member {String} resourceType
 */
GoogleCloudRecommenderV1beta1Operation.prototype['resourceType'] = undefined;

/**
 * Can be set with action 'copy' or 'move' to indicate the source field within resource or source_resource, ignored if provided for other operation types.
 * @member {String} sourcePath
 */
GoogleCloudRecommenderV1beta1Operation.prototype['sourcePath'] = undefined;

/**
 * Can be set with action 'copy' to copy resource configuration across different resources of the same type. Example: A resource clone can be done via action = 'copy', path = \"/\", from = \"/\", source_resource = and resource_name = . This field is empty for all other values of `action`.
 * @member {String} sourceResource
 */
GoogleCloudRecommenderV1beta1Operation.prototype['sourceResource'] = undefined;

/**
 * Value for the `path` field. Will be set for actions:'add'/'replace'. Maybe set for action: 'test'. Either this or `value_matcher` will be set for 'test' operation. An exact match must be performed.
 * @member {Object} value
 */
GoogleCloudRecommenderV1beta1Operation.prototype['value'] = undefined;

/**
 * @member {module:model/GoogleCloudRecommenderV1beta1ValueMatcher} valueMatcher
 */
GoogleCloudRecommenderV1beta1Operation.prototype['valueMatcher'] = undefined;






export default GoogleCloudRecommenderV1beta1Operation;

