/**
 * BigQuery Reservation API
 * A service to modify your BigQuery flat-rate reservations.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBiReservation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBiReservation::OAIBiReservation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBiReservation::OAIBiReservation() {
    this->initializeModel();
}

OAIBiReservation::~OAIBiReservation() {}

void OAIBiReservation::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_preferred_tables_isSet = false;
    m_preferred_tables_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIBiReservation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBiReservation::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_preferred_tables_isValid = ::OpenAPI::fromJsonValue(m_preferred_tables, json[QString("preferredTables")]);
    m_preferred_tables_isSet = !json[QString("preferredTables")].isNull() && m_preferred_tables_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIBiReservation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBiReservation::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_preferred_tables.size() > 0) {
        obj.insert(QString("preferredTables"), ::OpenAPI::toJsonValue(m_preferred_tables));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIBiReservation::getName() const {
    return m_name;
}
void OAIBiReservation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBiReservation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBiReservation::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAITableReference> OAIBiReservation::getPreferredTables() const {
    return m_preferred_tables;
}
void OAIBiReservation::setPreferredTables(const QList<OAITableReference> &preferred_tables) {
    m_preferred_tables = preferred_tables;
    m_preferred_tables_isSet = true;
}

bool OAIBiReservation::is_preferred_tables_Set() const{
    return m_preferred_tables_isSet;
}

bool OAIBiReservation::is_preferred_tables_Valid() const{
    return m_preferred_tables_isValid;
}

QString OAIBiReservation::getSize() const {
    return m_size;
}
void OAIBiReservation::setSize(const QString &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIBiReservation::is_size_Set() const{
    return m_size_isSet;
}

bool OAIBiReservation::is_size_Valid() const{
    return m_size_isValid;
}

QString OAIBiReservation::getUpdateTime() const {
    return m_update_time;
}
void OAIBiReservation::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIBiReservation::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIBiReservation::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIBiReservation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_preferred_tables.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBiReservation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
