/**
 * BigQuery Reservation API
 * A service to modify your BigQuery flat-rate reservations.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Assignment from './model/Assignment';
import BiReservation from './model/BiReservation';
import CapacityCommitment from './model/CapacityCommitment';
import ListAssignmentsResponse from './model/ListAssignmentsResponse';
import ListCapacityCommitmentsResponse from './model/ListCapacityCommitmentsResponse';
import ListReservationsResponse from './model/ListReservationsResponse';
import MergeCapacityCommitmentsRequest from './model/MergeCapacityCommitmentsRequest';
import MoveAssignmentRequest from './model/MoveAssignmentRequest';
import Reservation from './model/Reservation';
import SearchAssignmentsResponse from './model/SearchAssignmentsResponse';
import SplitCapacityCommitmentRequest from './model/SplitCapacityCommitmentRequest';
import SplitCapacityCommitmentResponse from './model/SplitCapacityCommitmentResponse';
import Status from './model/Status';
import TableReference from './model/TableReference';
import ProjectsApi from './api/ProjectsApi';


/**
* A service to modify your BigQuery flat-rate reservations..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var BigQueryReservationApi = require('index'); // See note below*.
* var xxxSvc = new BigQueryReservationApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new BigQueryReservationApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new BigQueryReservationApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new BigQueryReservationApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1beta1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Assignment model constructor.
     * @property {module:model/Assignment}
     */
    Assignment,

    /**
     * The BiReservation model constructor.
     * @property {module:model/BiReservation}
     */
    BiReservation,

    /**
     * The CapacityCommitment model constructor.
     * @property {module:model/CapacityCommitment}
     */
    CapacityCommitment,

    /**
     * The ListAssignmentsResponse model constructor.
     * @property {module:model/ListAssignmentsResponse}
     */
    ListAssignmentsResponse,

    /**
     * The ListCapacityCommitmentsResponse model constructor.
     * @property {module:model/ListCapacityCommitmentsResponse}
     */
    ListCapacityCommitmentsResponse,

    /**
     * The ListReservationsResponse model constructor.
     * @property {module:model/ListReservationsResponse}
     */
    ListReservationsResponse,

    /**
     * The MergeCapacityCommitmentsRequest model constructor.
     * @property {module:model/MergeCapacityCommitmentsRequest}
     */
    MergeCapacityCommitmentsRequest,

    /**
     * The MoveAssignmentRequest model constructor.
     * @property {module:model/MoveAssignmentRequest}
     */
    MoveAssignmentRequest,

    /**
     * The Reservation model constructor.
     * @property {module:model/Reservation}
     */
    Reservation,

    /**
     * The SearchAssignmentsResponse model constructor.
     * @property {module:model/SearchAssignmentsResponse}
     */
    SearchAssignmentsResponse,

    /**
     * The SplitCapacityCommitmentRequest model constructor.
     * @property {module:model/SplitCapacityCommitmentRequest}
     */
    SplitCapacityCommitmentRequest,

    /**
     * The SplitCapacityCommitmentResponse model constructor.
     * @property {module:model/SplitCapacityCommitmentResponse}
     */
    SplitCapacityCommitmentResponse,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The TableReference model constructor.
     * @property {module:model/TableReference}
     */
    TableReference,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
