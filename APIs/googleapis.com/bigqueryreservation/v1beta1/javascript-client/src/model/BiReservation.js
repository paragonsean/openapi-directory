/**
 * BigQuery Reservation API
 * A service to modify your BigQuery flat-rate reservations.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TableReference from './TableReference';

/**
 * The BiReservation model module.
 * @module model/BiReservation
 * @version v1beta1
 */
class BiReservation {
    /**
     * Constructs a new <code>BiReservation</code>.
     * Represents a BI Reservation.
     * @alias module:model/BiReservation
     */
    constructor() { 
        
        BiReservation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BiReservation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BiReservation} obj Optional instance to populate.
     * @return {module:model/BiReservation} The populated <code>BiReservation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BiReservation();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('preferredTables')) {
                obj['preferredTables'] = ApiClient.convertToType(data['preferredTables'], [TableReference]);
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BiReservation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BiReservation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['preferredTables']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['preferredTables'])) {
                throw new Error("Expected the field `preferredTables` to be an array in the JSON data but got " + data['preferredTables']);
            }
            // validate the optional field `preferredTables` (array)
            for (const item of data['preferredTables']) {
                TableReference.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['size'] && !(typeof data['size'] === 'string' || data['size'] instanceof String)) {
            throw new Error("Expected the field `size` to be a primitive type in the JSON string but got " + data['size']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * The resource name of the singleton BI reservation. Reservation names have the form `projects/{project_id}/locations/{location_id}/biReservation`.
 * @member {String} name
 */
BiReservation.prototype['name'] = undefined;

/**
 * Preferred tables to use BI capacity for.
 * @member {Array.<module:model/TableReference>} preferredTables
 */
BiReservation.prototype['preferredTables'] = undefined;

/**
 * Size of a reservation, in bytes.
 * @member {String} size
 */
BiReservation.prototype['size'] = undefined;

/**
 * Output only. The last update timestamp of a reservation.
 * @member {String} updateTime
 */
BiReservation.prototype['updateTime'] = undefined;






export default BiReservation;

