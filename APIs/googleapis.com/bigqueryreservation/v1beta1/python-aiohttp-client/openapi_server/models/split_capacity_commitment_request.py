# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SplitCapacityCommitmentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, slot_count: str=None):
        """SplitCapacityCommitmentRequest - a model defined in OpenAPI

        :param slot_count: The slot_count of this SplitCapacityCommitmentRequest.
        """
        self.openapi_types = {
            'slot_count': str
        }

        self.attribute_map = {
            'slot_count': 'slotCount'
        }

        self._slot_count = slot_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SplitCapacityCommitmentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SplitCapacityCommitmentRequest of this SplitCapacityCommitmentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def slot_count(self):
        """Gets the slot_count of this SplitCapacityCommitmentRequest.

        Number of slots in the capacity commitment after the split.

        :return: The slot_count of this SplitCapacityCommitmentRequest.
        :rtype: str
        """
        return self._slot_count

    @slot_count.setter
    def slot_count(self, slot_count):
        """Sets the slot_count of this SplitCapacityCommitmentRequest.

        Number of slots in the capacity commitment after the split.

        :param slot_count: The slot_count of this SplitCapacityCommitmentRequest.
        :type slot_count: str
        """

        self._slot_count = slot_count
