# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.capacity_commitment import CapacityCommitment
from openapi_server import util


class SplitCapacityCommitmentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first: CapacityCommitment=None, second: CapacityCommitment=None):
        """SplitCapacityCommitmentResponse - a model defined in OpenAPI

        :param first: The first of this SplitCapacityCommitmentResponse.
        :param second: The second of this SplitCapacityCommitmentResponse.
        """
        self.openapi_types = {
            'first': CapacityCommitment,
            'second': CapacityCommitment
        }

        self.attribute_map = {
            'first': 'first',
            'second': 'second'
        }

        self._first = first
        self._second = second

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SplitCapacityCommitmentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SplitCapacityCommitmentResponse of this SplitCapacityCommitmentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first(self):
        """Gets the first of this SplitCapacityCommitmentResponse.


        :return: The first of this SplitCapacityCommitmentResponse.
        :rtype: CapacityCommitment
        """
        return self._first

    @first.setter
    def first(self, first):
        """Sets the first of this SplitCapacityCommitmentResponse.


        :param first: The first of this SplitCapacityCommitmentResponse.
        :type first: CapacityCommitment
        """

        self._first = first

    @property
    def second(self):
        """Gets the second of this SplitCapacityCommitmentResponse.


        :return: The second of this SplitCapacityCommitmentResponse.
        :rtype: CapacityCommitment
        """
        return self._second

    @second.setter
    def second(self, second):
        """Sets the second of this SplitCapacityCommitmentResponse.


        :param second: The second of this SplitCapacityCommitmentResponse.
        :type second: CapacityCommitment
        """

        self._second = second
