# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Autoscale(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_slots: str=None, max_slots: str=None):
        """Autoscale - a model defined in OpenAPI

        :param current_slots: The current_slots of this Autoscale.
        :param max_slots: The max_slots of this Autoscale.
        """
        self.openapi_types = {
            'current_slots': str,
            'max_slots': str
        }

        self.attribute_map = {
            'current_slots': 'currentSlots',
            'max_slots': 'maxSlots'
        }

        self._current_slots = current_slots
        self._max_slots = max_slots

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Autoscale':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Autoscale of this Autoscale.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_slots(self):
        """Gets the current_slots of this Autoscale.

        Output only. The slot capacity added to this reservation when autoscale happens. Will be between [0, max_slots].

        :return: The current_slots of this Autoscale.
        :rtype: str
        """
        return self._current_slots

    @current_slots.setter
    def current_slots(self, current_slots):
        """Sets the current_slots of this Autoscale.

        Output only. The slot capacity added to this reservation when autoscale happens. Will be between [0, max_slots].

        :param current_slots: The current_slots of this Autoscale.
        :type current_slots: str
        """

        self._current_slots = current_slots

    @property
    def max_slots(self):
        """Gets the max_slots of this Autoscale.

        Number of slots to be scaled when needed.

        :return: The max_slots of this Autoscale.
        :rtype: str
        """
        return self._max_slots

    @max_slots.setter
    def max_slots(self, max_slots):
        """Sets the max_slots of this Autoscale.

        Number of slots to be scaled when needed.

        :param max_slots: The max_slots of this Autoscale.
        :type max_slots: str
        """

        self._max_slots = max_slots
