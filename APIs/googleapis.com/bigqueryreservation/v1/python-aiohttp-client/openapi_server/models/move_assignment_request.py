# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MoveAssignmentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assignment_id: str=None, destination_id: str=None):
        """MoveAssignmentRequest - a model defined in OpenAPI

        :param assignment_id: The assignment_id of this MoveAssignmentRequest.
        :param destination_id: The destination_id of this MoveAssignmentRequest.
        """
        self.openapi_types = {
            'assignment_id': str,
            'destination_id': str
        }

        self.attribute_map = {
            'assignment_id': 'assignmentId',
            'destination_id': 'destinationId'
        }

        self._assignment_id = assignment_id
        self._destination_id = destination_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MoveAssignmentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MoveAssignmentRequest of this MoveAssignmentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assignment_id(self):
        """Gets the assignment_id of this MoveAssignmentRequest.

        The optional assignment ID. A new assignment name is generated if this field is empty. This field can contain only lowercase alphanumeric characters or dashes. Max length is 64 characters.

        :return: The assignment_id of this MoveAssignmentRequest.
        :rtype: str
        """
        return self._assignment_id

    @assignment_id.setter
    def assignment_id(self, assignment_id):
        """Sets the assignment_id of this MoveAssignmentRequest.

        The optional assignment ID. A new assignment name is generated if this field is empty. This field can contain only lowercase alphanumeric characters or dashes. Max length is 64 characters.

        :param assignment_id: The assignment_id of this MoveAssignmentRequest.
        :type assignment_id: str
        """

        self._assignment_id = assignment_id

    @property
    def destination_id(self):
        """Gets the destination_id of this MoveAssignmentRequest.

        The new reservation ID, e.g.: `projects/myotherproject/locations/US/reservations/team2-prod`

        :return: The destination_id of this MoveAssignmentRequest.
        :rtype: str
        """
        return self._destination_id

    @destination_id.setter
    def destination_id(self, destination_id):
        """Sets the destination_id of this MoveAssignmentRequest.

        The new reservation ID, e.g.: `projects/myotherproject/locations/US/reservations/team2-prod`

        :param destination_id: The destination_id of this MoveAssignmentRequest.
        :type destination_id: str
        """

        self._destination_id = destination_id
