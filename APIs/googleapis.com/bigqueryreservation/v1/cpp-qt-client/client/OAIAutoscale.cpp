/**
 * BigQuery Reservation API
 * A service to modify your BigQuery flat-rate reservations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutoscale.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutoscale::OAIAutoscale(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutoscale::OAIAutoscale() {
    this->initializeModel();
}

OAIAutoscale::~OAIAutoscale() {}

void OAIAutoscale::initializeModel() {

    m_current_slots_isSet = false;
    m_current_slots_isValid = false;

    m_max_slots_isSet = false;
    m_max_slots_isValid = false;
}

void OAIAutoscale::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutoscale::fromJsonObject(QJsonObject json) {

    m_current_slots_isValid = ::OpenAPI::fromJsonValue(m_current_slots, json[QString("currentSlots")]);
    m_current_slots_isSet = !json[QString("currentSlots")].isNull() && m_current_slots_isValid;

    m_max_slots_isValid = ::OpenAPI::fromJsonValue(m_max_slots, json[QString("maxSlots")]);
    m_max_slots_isSet = !json[QString("maxSlots")].isNull() && m_max_slots_isValid;
}

QString OAIAutoscale::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutoscale::asJsonObject() const {
    QJsonObject obj;
    if (m_current_slots_isSet) {
        obj.insert(QString("currentSlots"), ::OpenAPI::toJsonValue(m_current_slots));
    }
    if (m_max_slots_isSet) {
        obj.insert(QString("maxSlots"), ::OpenAPI::toJsonValue(m_max_slots));
    }
    return obj;
}

QString OAIAutoscale::getCurrentSlots() const {
    return m_current_slots;
}
void OAIAutoscale::setCurrentSlots(const QString &current_slots) {
    m_current_slots = current_slots;
    m_current_slots_isSet = true;
}

bool OAIAutoscale::is_current_slots_Set() const{
    return m_current_slots_isSet;
}

bool OAIAutoscale::is_current_slots_Valid() const{
    return m_current_slots_isValid;
}

QString OAIAutoscale::getMaxSlots() const {
    return m_max_slots;
}
void OAIAutoscale::setMaxSlots(const QString &max_slots) {
    m_max_slots = max_slots;
    m_max_slots_isSet = true;
}

bool OAIAutoscale::is_max_slots_Set() const{
    return m_max_slots_isSet;
}

bool OAIAutoscale::is_max_slots_Valid() const{
    return m_max_slots_isValid;
}

bool OAIAutoscale::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_current_slots_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_slots_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutoscale::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
