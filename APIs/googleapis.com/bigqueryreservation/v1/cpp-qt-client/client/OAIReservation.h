/**
 * BigQuery Reservation API
 * A service to modify your BigQuery flat-rate reservations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReservation.h
 *
 * A reservation is a mechanism used to guarantee slots to users.
 */

#ifndef OAIReservation_H
#define OAIReservation_H

#include <QJsonObject>

#include "OAIAutoscale.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAutoscale;

class OAIReservation : public OAIObject {
public:
    OAIReservation();
    OAIReservation(QString json);
    ~OAIReservation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAutoscale getAutoscale() const;
    void setAutoscale(const OAIAutoscale &autoscale);
    bool is_autoscale_Set() const;
    bool is_autoscale_Valid() const;

    QString getConcurrency() const;
    void setConcurrency(const QString &concurrency);
    bool is_concurrency_Set() const;
    bool is_concurrency_Valid() const;

    QString getCreationTime() const;
    void setCreationTime(const QString &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getEdition() const;
    void setEdition(const QString &edition);
    bool is_edition_Set() const;
    bool is_edition_Valid() const;

    bool isIgnoreIdleSlots() const;
    void setIgnoreIdleSlots(const bool &ignore_idle_slots);
    bool is_ignore_idle_slots_Set() const;
    bool is_ignore_idle_slots_Valid() const;

    bool isMultiRegionAuxiliary() const;
    void setMultiRegionAuxiliary(const bool &multi_region_auxiliary);
    bool is_multi_region_auxiliary_Set() const;
    bool is_multi_region_auxiliary_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSlotCapacity() const;
    void setSlotCapacity(const QString &slot_capacity);
    bool is_slot_capacity_Set() const;
    bool is_slot_capacity_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAutoscale m_autoscale;
    bool m_autoscale_isSet;
    bool m_autoscale_isValid;

    QString m_concurrency;
    bool m_concurrency_isSet;
    bool m_concurrency_isValid;

    QString m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_edition;
    bool m_edition_isSet;
    bool m_edition_isValid;

    bool m_ignore_idle_slots;
    bool m_ignore_idle_slots_isSet;
    bool m_ignore_idle_slots_isValid;

    bool m_multi_region_auxiliary;
    bool m_multi_region_auxiliary_isSet;
    bool m_multi_region_auxiliary_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_slot_capacity;
    bool m_slot_capacity_isSet;
    bool m_slot_capacity_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReservation)

#endif // OAIReservation_H
