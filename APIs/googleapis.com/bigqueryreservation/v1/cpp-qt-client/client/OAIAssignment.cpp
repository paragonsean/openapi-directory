/**
 * BigQuery Reservation API
 * A service to modify your BigQuery flat-rate reservations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssignment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssignment::OAIAssignment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssignment::OAIAssignment() {
    this->initializeModel();
}

OAIAssignment::~OAIAssignment() {}

void OAIAssignment::initializeModel() {

    m_assignee_isSet = false;
    m_assignee_isValid = false;

    m_job_type_isSet = false;
    m_job_type_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIAssignment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssignment::fromJsonObject(QJsonObject json) {

    m_assignee_isValid = ::OpenAPI::fromJsonValue(m_assignee, json[QString("assignee")]);
    m_assignee_isSet = !json[QString("assignee")].isNull() && m_assignee_isValid;

    m_job_type_isValid = ::OpenAPI::fromJsonValue(m_job_type, json[QString("jobType")]);
    m_job_type_isSet = !json[QString("jobType")].isNull() && m_job_type_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIAssignment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssignment::asJsonObject() const {
    QJsonObject obj;
    if (m_assignee_isSet) {
        obj.insert(QString("assignee"), ::OpenAPI::toJsonValue(m_assignee));
    }
    if (m_job_type_isSet) {
        obj.insert(QString("jobType"), ::OpenAPI::toJsonValue(m_job_type));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIAssignment::getAssignee() const {
    return m_assignee;
}
void OAIAssignment::setAssignee(const QString &assignee) {
    m_assignee = assignee;
    m_assignee_isSet = true;
}

bool OAIAssignment::is_assignee_Set() const{
    return m_assignee_isSet;
}

bool OAIAssignment::is_assignee_Valid() const{
    return m_assignee_isValid;
}

QString OAIAssignment::getJobType() const {
    return m_job_type;
}
void OAIAssignment::setJobType(const QString &job_type) {
    m_job_type = job_type;
    m_job_type_isSet = true;
}

bool OAIAssignment::is_job_type_Set() const{
    return m_job_type_isSet;
}

bool OAIAssignment::is_job_type_Valid() const{
    return m_job_type_isValid;
}

QString OAIAssignment::getName() const {
    return m_name;
}
void OAIAssignment::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAssignment::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAssignment::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAssignment::getState() const {
    return m_state;
}
void OAIAssignment::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIAssignment::is_state_Set() const{
    return m_state_isSet;
}

bool OAIAssignment::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIAssignment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assignee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssignment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
