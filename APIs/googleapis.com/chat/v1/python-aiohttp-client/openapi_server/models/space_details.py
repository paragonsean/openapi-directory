# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SpaceDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, guidelines: str=None):
        """SpaceDetails - a model defined in OpenAPI

        :param description: The description of this SpaceDetails.
        :param guidelines: The guidelines of this SpaceDetails.
        """
        self.openapi_types = {
            'description': str,
            'guidelines': str
        }

        self.attribute_map = {
            'description': 'description',
            'guidelines': 'guidelines'
        }

        self._description = description
        self._guidelines = guidelines

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpaceDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpaceDetails of this SpaceDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this SpaceDetails.

        Optional. A description of the space. For example, describe the space's discussion topic, functional purpose, or participants. Supports up to 150 characters.

        :return: The description of this SpaceDetails.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SpaceDetails.

        Optional. A description of the space. For example, describe the space's discussion topic, functional purpose, or participants. Supports up to 150 characters.

        :param description: The description of this SpaceDetails.
        :type description: str
        """

        self._description = description

    @property
    def guidelines(self):
        """Gets the guidelines of this SpaceDetails.

        Optional. The space's rules, expectations, and etiquette. Supports up to 5,000 characters.

        :return: The guidelines of this SpaceDetails.
        :rtype: str
        """
        return self._guidelines

    @guidelines.setter
    def guidelines(self, guidelines):
        """Sets the guidelines of this SpaceDetails.

        Optional. The space's rules, expectations, and etiquette. Supports up to 5,000 characters.

        :param guidelines: The guidelines of this SpaceDetails.
        :type guidelines: str
        """

        self._guidelines = guidelines
