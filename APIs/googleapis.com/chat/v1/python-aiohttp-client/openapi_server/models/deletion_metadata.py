# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeletionMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deletion_type: str=None):
        """DeletionMetadata - a model defined in OpenAPI

        :param deletion_type: The deletion_type of this DeletionMetadata.
        """
        self.openapi_types = {
            'deletion_type': str
        }

        self.attribute_map = {
            'deletion_type': 'deletionType'
        }

        self._deletion_type = deletion_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeletionMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeletionMetadata of this DeletionMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deletion_type(self):
        """Gets the deletion_type of this DeletionMetadata.

        Indicates who deleted the message.

        :return: The deletion_type of this DeletionMetadata.
        :rtype: str
        """
        return self._deletion_type

    @deletion_type.setter
    def deletion_type(self, deletion_type):
        """Sets the deletion_type of this DeletionMetadata.

        Indicates who deleted the message.

        :param deletion_type: The deletion_type of this DeletionMetadata.
        :type deletion_type: str
        """
        allowed_values = ["DELETION_TYPE_UNSPECIFIED", "CREATOR", "SPACE_OWNER", "ADMIN", "APP_MESSAGE_EXPIRY", "CREATOR_VIA_APP", "SPACE_OWNER_VIA_APP"]  # noqa: E501
        if deletion_type not in allowed_values:
            raise ValueError(
                "Invalid value for `deletion_type` ({0}), must be one of {1}"
                .format(deletion_type, allowed_values)
            )

        self._deletion_type = deletion_type
