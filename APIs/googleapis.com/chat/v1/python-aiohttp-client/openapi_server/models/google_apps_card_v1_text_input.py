# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_apps_card_v1_action import GoogleAppsCardV1Action
from openapi_server.models.google_apps_card_v1_suggestions import GoogleAppsCardV1Suggestions
from openapi_server import util


class GoogleAppsCardV1TextInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_complete_action: GoogleAppsCardV1Action=None, hint_text: str=None, initial_suggestions: GoogleAppsCardV1Suggestions=None, label: str=None, name: str=None, on_change_action: GoogleAppsCardV1Action=None, placeholder_text: str=None, type: str=None, value: str=None):
        """GoogleAppsCardV1TextInput - a model defined in OpenAPI

        :param auto_complete_action: The auto_complete_action of this GoogleAppsCardV1TextInput.
        :param hint_text: The hint_text of this GoogleAppsCardV1TextInput.
        :param initial_suggestions: The initial_suggestions of this GoogleAppsCardV1TextInput.
        :param label: The label of this GoogleAppsCardV1TextInput.
        :param name: The name of this GoogleAppsCardV1TextInput.
        :param on_change_action: The on_change_action of this GoogleAppsCardV1TextInput.
        :param placeholder_text: The placeholder_text of this GoogleAppsCardV1TextInput.
        :param type: The type of this GoogleAppsCardV1TextInput.
        :param value: The value of this GoogleAppsCardV1TextInput.
        """
        self.openapi_types = {
            'auto_complete_action': GoogleAppsCardV1Action,
            'hint_text': str,
            'initial_suggestions': GoogleAppsCardV1Suggestions,
            'label': str,
            'name': str,
            'on_change_action': GoogleAppsCardV1Action,
            'placeholder_text': str,
            'type': str,
            'value': str
        }

        self.attribute_map = {
            'auto_complete_action': 'autoCompleteAction',
            'hint_text': 'hintText',
            'initial_suggestions': 'initialSuggestions',
            'label': 'label',
            'name': 'name',
            'on_change_action': 'onChangeAction',
            'placeholder_text': 'placeholderText',
            'type': 'type',
            'value': 'value'
        }

        self._auto_complete_action = auto_complete_action
        self._hint_text = hint_text
        self._initial_suggestions = initial_suggestions
        self._label = label
        self._name = name
        self._on_change_action = on_change_action
        self._placeholder_text = placeholder_text
        self._type = type
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsCardV1TextInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsCardV1TextInput of this GoogleAppsCardV1TextInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_complete_action(self):
        """Gets the auto_complete_action of this GoogleAppsCardV1TextInput.


        :return: The auto_complete_action of this GoogleAppsCardV1TextInput.
        :rtype: GoogleAppsCardV1Action
        """
        return self._auto_complete_action

    @auto_complete_action.setter
    def auto_complete_action(self, auto_complete_action):
        """Sets the auto_complete_action of this GoogleAppsCardV1TextInput.


        :param auto_complete_action: The auto_complete_action of this GoogleAppsCardV1TextInput.
        :type auto_complete_action: GoogleAppsCardV1Action
        """

        self._auto_complete_action = auto_complete_action

    @property
    def hint_text(self):
        """Gets the hint_text of this GoogleAppsCardV1TextInput.

        Text that appears below the text input field meant to assist users by prompting them to enter a certain value. This text is always visible. Required if `label` is unspecified. Otherwise, optional.

        :return: The hint_text of this GoogleAppsCardV1TextInput.
        :rtype: str
        """
        return self._hint_text

    @hint_text.setter
    def hint_text(self, hint_text):
        """Sets the hint_text of this GoogleAppsCardV1TextInput.

        Text that appears below the text input field meant to assist users by prompting them to enter a certain value. This text is always visible. Required if `label` is unspecified. Otherwise, optional.

        :param hint_text: The hint_text of this GoogleAppsCardV1TextInput.
        :type hint_text: str
        """

        self._hint_text = hint_text

    @property
    def initial_suggestions(self):
        """Gets the initial_suggestions of this GoogleAppsCardV1TextInput.


        :return: The initial_suggestions of this GoogleAppsCardV1TextInput.
        :rtype: GoogleAppsCardV1Suggestions
        """
        return self._initial_suggestions

    @initial_suggestions.setter
    def initial_suggestions(self, initial_suggestions):
        """Sets the initial_suggestions of this GoogleAppsCardV1TextInput.


        :param initial_suggestions: The initial_suggestions of this GoogleAppsCardV1TextInput.
        :type initial_suggestions: GoogleAppsCardV1Suggestions
        """

        self._initial_suggestions = initial_suggestions

    @property
    def label(self):
        """Gets the label of this GoogleAppsCardV1TextInput.

        The text that appears above the text input field in the user interface. Specify text that helps the user enter the information your app needs. For example, if you are asking someone's name, but specifically need their surname, write `surname` instead of `name`. Required if `hintText` is unspecified. Otherwise, optional.

        :return: The label of this GoogleAppsCardV1TextInput.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this GoogleAppsCardV1TextInput.

        The text that appears above the text input field in the user interface. Specify text that helps the user enter the information your app needs. For example, if you are asking someone's name, but specifically need their surname, write `surname` instead of `name`. Required if `hintText` is unspecified. Otherwise, optional.

        :param label: The label of this GoogleAppsCardV1TextInput.
        :type label: str
        """

        self._label = label

    @property
    def name(self):
        """Gets the name of this GoogleAppsCardV1TextInput.

        The name by which the text input is identified in a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/ui/read-form-data).

        :return: The name of this GoogleAppsCardV1TextInput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAppsCardV1TextInput.

        The name by which the text input is identified in a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/ui/read-form-data).

        :param name: The name of this GoogleAppsCardV1TextInput.
        :type name: str
        """

        self._name = name

    @property
    def on_change_action(self):
        """Gets the on_change_action of this GoogleAppsCardV1TextInput.


        :return: The on_change_action of this GoogleAppsCardV1TextInput.
        :rtype: GoogleAppsCardV1Action
        """
        return self._on_change_action

    @on_change_action.setter
    def on_change_action(self, on_change_action):
        """Sets the on_change_action of this GoogleAppsCardV1TextInput.


        :param on_change_action: The on_change_action of this GoogleAppsCardV1TextInput.
        :type on_change_action: GoogleAppsCardV1Action
        """

        self._on_change_action = on_change_action

    @property
    def placeholder_text(self):
        """Gets the placeholder_text of this GoogleAppsCardV1TextInput.

        Text that appears in the text input field when the field is empty. Use this text to prompt users to enter a value. For example, `Enter a number from 0 to 100`. [Google Chat apps](https://developers.google.com/chat):

        :return: The placeholder_text of this GoogleAppsCardV1TextInput.
        :rtype: str
        """
        return self._placeholder_text

    @placeholder_text.setter
    def placeholder_text(self, placeholder_text):
        """Sets the placeholder_text of this GoogleAppsCardV1TextInput.

        Text that appears in the text input field when the field is empty. Use this text to prompt users to enter a value. For example, `Enter a number from 0 to 100`. [Google Chat apps](https://developers.google.com/chat):

        :param placeholder_text: The placeholder_text of this GoogleAppsCardV1TextInput.
        :type placeholder_text: str
        """

        self._placeholder_text = placeholder_text

    @property
    def type(self):
        """Gets the type of this GoogleAppsCardV1TextInput.

        How a text input field appears in the user interface. For example, whether the field is single or multi-line.

        :return: The type of this GoogleAppsCardV1TextInput.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleAppsCardV1TextInput.

        How a text input field appears in the user interface. For example, whether the field is single or multi-line.

        :param type: The type of this GoogleAppsCardV1TextInput.
        :type type: str
        """
        allowed_values = ["SINGLE_LINE", "MULTIPLE_LINE"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def value(self):
        """Gets the value of this GoogleAppsCardV1TextInput.

        The value entered by a user, returned as part of a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/ui/read-form-data).

        :return: The value of this GoogleAppsCardV1TextInput.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this GoogleAppsCardV1TextInput.

        The value entered by a user, returned as part of a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/ui/read-form-data).

        :param value: The value of this GoogleAppsCardV1TextInput.
        :type value: str
        """

        self._value = value
