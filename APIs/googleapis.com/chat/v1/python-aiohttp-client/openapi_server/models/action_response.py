# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dialog_action import DialogAction
from openapi_server.models.updated_widget import UpdatedWidget
from openapi_server import util


class ActionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dialog_action: DialogAction=None, type: str=None, updated_widget: UpdatedWidget=None, url: str=None):
        """ActionResponse - a model defined in OpenAPI

        :param dialog_action: The dialog_action of this ActionResponse.
        :param type: The type of this ActionResponse.
        :param updated_widget: The updated_widget of this ActionResponse.
        :param url: The url of this ActionResponse.
        """
        self.openapi_types = {
            'dialog_action': DialogAction,
            'type': str,
            'updated_widget': UpdatedWidget,
            'url': str
        }

        self.attribute_map = {
            'dialog_action': 'dialogAction',
            'type': 'type',
            'updated_widget': 'updatedWidget',
            'url': 'url'
        }

        self._dialog_action = dialog_action
        self._type = type
        self._updated_widget = updated_widget
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionResponse of this ActionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dialog_action(self):
        """Gets the dialog_action of this ActionResponse.


        :return: The dialog_action of this ActionResponse.
        :rtype: DialogAction
        """
        return self._dialog_action

    @dialog_action.setter
    def dialog_action(self, dialog_action):
        """Sets the dialog_action of this ActionResponse.


        :param dialog_action: The dialog_action of this ActionResponse.
        :type dialog_action: DialogAction
        """

        self._dialog_action = dialog_action

    @property
    def type(self):
        """Gets the type of this ActionResponse.

        Input only. The type of Chat app response.

        :return: The type of this ActionResponse.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ActionResponse.

        Input only. The type of Chat app response.

        :param type: The type of this ActionResponse.
        :type type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "NEW_MESSAGE", "UPDATE_MESSAGE", "UPDATE_USER_MESSAGE_CARDS", "REQUEST_CONFIG", "DIALOG", "UPDATE_WIDGET"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def updated_widget(self):
        """Gets the updated_widget of this ActionResponse.


        :return: The updated_widget of this ActionResponse.
        :rtype: UpdatedWidget
        """
        return self._updated_widget

    @updated_widget.setter
    def updated_widget(self, updated_widget):
        """Sets the updated_widget of this ActionResponse.


        :param updated_widget: The updated_widget of this ActionResponse.
        :type updated_widget: UpdatedWidget
        """

        self._updated_widget = updated_widget

    @property
    def url(self):
        """Gets the url of this ActionResponse.

        Input only. URL for users to authenticate or configure. (Only for `REQUEST_CONFIG` response types.)

        :return: The url of this ActionResponse.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ActionResponse.

        Input only. URL for users to authenticate or configure. (Only for `REQUEST_CONFIG` response types.)

        :param url: The url of this ActionResponse.
        :type url: str
        """

        self._url = url
