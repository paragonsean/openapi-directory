# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_apps_card_v1_action import GoogleAppsCardV1Action
from openapi_server.models.google_apps_card_v1_platform_data_source import GoogleAppsCardV1PlatformDataSource
from openapi_server.models.google_apps_card_v1_selection_item import GoogleAppsCardV1SelectionItem
from openapi_server import util


class GoogleAppsCardV1SelectionInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_data_source: GoogleAppsCardV1Action=None, items: List[GoogleAppsCardV1SelectionItem]=None, label: str=None, multi_select_max_selected_items: int=None, multi_select_min_query_length: int=None, name: str=None, on_change_action: GoogleAppsCardV1Action=None, platform_data_source: GoogleAppsCardV1PlatformDataSource=None, type: str=None):
        """GoogleAppsCardV1SelectionInput - a model defined in OpenAPI

        :param external_data_source: The external_data_source of this GoogleAppsCardV1SelectionInput.
        :param items: The items of this GoogleAppsCardV1SelectionInput.
        :param label: The label of this GoogleAppsCardV1SelectionInput.
        :param multi_select_max_selected_items: The multi_select_max_selected_items of this GoogleAppsCardV1SelectionInput.
        :param multi_select_min_query_length: The multi_select_min_query_length of this GoogleAppsCardV1SelectionInput.
        :param name: The name of this GoogleAppsCardV1SelectionInput.
        :param on_change_action: The on_change_action of this GoogleAppsCardV1SelectionInput.
        :param platform_data_source: The platform_data_source of this GoogleAppsCardV1SelectionInput.
        :param type: The type of this GoogleAppsCardV1SelectionInput.
        """
        self.openapi_types = {
            'external_data_source': GoogleAppsCardV1Action,
            'items': List[GoogleAppsCardV1SelectionItem],
            'label': str,
            'multi_select_max_selected_items': int,
            'multi_select_min_query_length': int,
            'name': str,
            'on_change_action': GoogleAppsCardV1Action,
            'platform_data_source': GoogleAppsCardV1PlatformDataSource,
            'type': str
        }

        self.attribute_map = {
            'external_data_source': 'externalDataSource',
            'items': 'items',
            'label': 'label',
            'multi_select_max_selected_items': 'multiSelectMaxSelectedItems',
            'multi_select_min_query_length': 'multiSelectMinQueryLength',
            'name': 'name',
            'on_change_action': 'onChangeAction',
            'platform_data_source': 'platformDataSource',
            'type': 'type'
        }

        self._external_data_source = external_data_source
        self._items = items
        self._label = label
        self._multi_select_max_selected_items = multi_select_max_selected_items
        self._multi_select_min_query_length = multi_select_min_query_length
        self._name = name
        self._on_change_action = on_change_action
        self._platform_data_source = platform_data_source
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsCardV1SelectionInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsCardV1SelectionInput of this GoogleAppsCardV1SelectionInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_data_source(self):
        """Gets the external_data_source of this GoogleAppsCardV1SelectionInput.


        :return: The external_data_source of this GoogleAppsCardV1SelectionInput.
        :rtype: GoogleAppsCardV1Action
        """
        return self._external_data_source

    @external_data_source.setter
    def external_data_source(self, external_data_source):
        """Sets the external_data_source of this GoogleAppsCardV1SelectionInput.


        :param external_data_source: The external_data_source of this GoogleAppsCardV1SelectionInput.
        :type external_data_source: GoogleAppsCardV1Action
        """

        self._external_data_source = external_data_source

    @property
    def items(self):
        """Gets the items of this GoogleAppsCardV1SelectionInput.

        An array of selectable items. For example, an array of radio buttons or checkboxes. Supports up to 100 items.

        :return: The items of this GoogleAppsCardV1SelectionInput.
        :rtype: List[GoogleAppsCardV1SelectionItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this GoogleAppsCardV1SelectionInput.

        An array of selectable items. For example, an array of radio buttons or checkboxes. Supports up to 100 items.

        :param items: The items of this GoogleAppsCardV1SelectionInput.
        :type items: List[GoogleAppsCardV1SelectionItem]
        """

        self._items = items

    @property
    def label(self):
        """Gets the label of this GoogleAppsCardV1SelectionInput.

        The text that appears above the selection input field in the user interface. Specify text that helps the user enter the information your app needs. For example, if users are selecting the urgency of a work ticket from a drop-down menu, the label might be \"Urgency\" or \"Select urgency\".

        :return: The label of this GoogleAppsCardV1SelectionInput.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this GoogleAppsCardV1SelectionInput.

        The text that appears above the selection input field in the user interface. Specify text that helps the user enter the information your app needs. For example, if users are selecting the urgency of a work ticket from a drop-down menu, the label might be \"Urgency\" or \"Select urgency\".

        :param label: The label of this GoogleAppsCardV1SelectionInput.
        :type label: str
        """

        self._label = label

    @property
    def multi_select_max_selected_items(self):
        """Gets the multi_select_max_selected_items of this GoogleAppsCardV1SelectionInput.

        For multiselect menus, the maximum number of items that a user can select. Minimum value is 1 item. If unspecified, defaults to 3 items.

        :return: The multi_select_max_selected_items of this GoogleAppsCardV1SelectionInput.
        :rtype: int
        """
        return self._multi_select_max_selected_items

    @multi_select_max_selected_items.setter
    def multi_select_max_selected_items(self, multi_select_max_selected_items):
        """Sets the multi_select_max_selected_items of this GoogleAppsCardV1SelectionInput.

        For multiselect menus, the maximum number of items that a user can select. Minimum value is 1 item. If unspecified, defaults to 3 items.

        :param multi_select_max_selected_items: The multi_select_max_selected_items of this GoogleAppsCardV1SelectionInput.
        :type multi_select_max_selected_items: int
        """

        self._multi_select_max_selected_items = multi_select_max_selected_items

    @property
    def multi_select_min_query_length(self):
        """Gets the multi_select_min_query_length of this GoogleAppsCardV1SelectionInput.

        For multiselect menus, the number of text characters that a user inputs before the Chat app queries autocomplete and displays suggested items in the menu. If unspecified, defaults to 0 characters for static data sources and 3 characters for external data sources.

        :return: The multi_select_min_query_length of this GoogleAppsCardV1SelectionInput.
        :rtype: int
        """
        return self._multi_select_min_query_length

    @multi_select_min_query_length.setter
    def multi_select_min_query_length(self, multi_select_min_query_length):
        """Sets the multi_select_min_query_length of this GoogleAppsCardV1SelectionInput.

        For multiselect menus, the number of text characters that a user inputs before the Chat app queries autocomplete and displays suggested items in the menu. If unspecified, defaults to 0 characters for static data sources and 3 characters for external data sources.

        :param multi_select_min_query_length: The multi_select_min_query_length of this GoogleAppsCardV1SelectionInput.
        :type multi_select_min_query_length: int
        """

        self._multi_select_min_query_length = multi_select_min_query_length

    @property
    def name(self):
        """Gets the name of this GoogleAppsCardV1SelectionInput.

        The name that identifies the selection input in a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/ui/read-form-data).

        :return: The name of this GoogleAppsCardV1SelectionInput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAppsCardV1SelectionInput.

        The name that identifies the selection input in a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/ui/read-form-data).

        :param name: The name of this GoogleAppsCardV1SelectionInput.
        :type name: str
        """

        self._name = name

    @property
    def on_change_action(self):
        """Gets the on_change_action of this GoogleAppsCardV1SelectionInput.


        :return: The on_change_action of this GoogleAppsCardV1SelectionInput.
        :rtype: GoogleAppsCardV1Action
        """
        return self._on_change_action

    @on_change_action.setter
    def on_change_action(self, on_change_action):
        """Sets the on_change_action of this GoogleAppsCardV1SelectionInput.


        :param on_change_action: The on_change_action of this GoogleAppsCardV1SelectionInput.
        :type on_change_action: GoogleAppsCardV1Action
        """

        self._on_change_action = on_change_action

    @property
    def platform_data_source(self):
        """Gets the platform_data_source of this GoogleAppsCardV1SelectionInput.


        :return: The platform_data_source of this GoogleAppsCardV1SelectionInput.
        :rtype: GoogleAppsCardV1PlatformDataSource
        """
        return self._platform_data_source

    @platform_data_source.setter
    def platform_data_source(self, platform_data_source):
        """Sets the platform_data_source of this GoogleAppsCardV1SelectionInput.


        :param platform_data_source: The platform_data_source of this GoogleAppsCardV1SelectionInput.
        :type platform_data_source: GoogleAppsCardV1PlatformDataSource
        """

        self._platform_data_source = platform_data_source

    @property
    def type(self):
        """Gets the type of this GoogleAppsCardV1SelectionInput.

        The type of items that are displayed to users in a `SelectionInput` widget. Selection types support different types of interactions. For example, users can select one or more checkboxes, but they can only select one value from a dropdown menu.

        :return: The type of this GoogleAppsCardV1SelectionInput.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleAppsCardV1SelectionInput.

        The type of items that are displayed to users in a `SelectionInput` widget. Selection types support different types of interactions. For example, users can select one or more checkboxes, but they can only select one value from a dropdown menu.

        :param type: The type of this GoogleAppsCardV1SelectionInput.
        :type type: str
        """
        allowed_values = ["CHECK_BOX", "RADIO_BUTTON", "SWITCH", "DROPDOWN", "MULTI_SELECT"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
