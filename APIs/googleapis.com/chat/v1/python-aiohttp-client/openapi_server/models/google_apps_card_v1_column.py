# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_apps_card_v1_widgets import GoogleAppsCardV1Widgets
from openapi_server import util


class GoogleAppsCardV1Column(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, horizontal_alignment: str=None, horizontal_size_style: str=None, vertical_alignment: str=None, widgets: List[GoogleAppsCardV1Widgets]=None):
        """GoogleAppsCardV1Column - a model defined in OpenAPI

        :param horizontal_alignment: The horizontal_alignment of this GoogleAppsCardV1Column.
        :param horizontal_size_style: The horizontal_size_style of this GoogleAppsCardV1Column.
        :param vertical_alignment: The vertical_alignment of this GoogleAppsCardV1Column.
        :param widgets: The widgets of this GoogleAppsCardV1Column.
        """
        self.openapi_types = {
            'horizontal_alignment': str,
            'horizontal_size_style': str,
            'vertical_alignment': str,
            'widgets': List[GoogleAppsCardV1Widgets]
        }

        self.attribute_map = {
            'horizontal_alignment': 'horizontalAlignment',
            'horizontal_size_style': 'horizontalSizeStyle',
            'vertical_alignment': 'verticalAlignment',
            'widgets': 'widgets'
        }

        self._horizontal_alignment = horizontal_alignment
        self._horizontal_size_style = horizontal_size_style
        self._vertical_alignment = vertical_alignment
        self._widgets = widgets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsCardV1Column':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsCardV1Column of this GoogleAppsCardV1Column.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def horizontal_alignment(self):
        """Gets the horizontal_alignment of this GoogleAppsCardV1Column.

        Specifies whether widgets align to the left, right, or center of a column.

        :return: The horizontal_alignment of this GoogleAppsCardV1Column.
        :rtype: str
        """
        return self._horizontal_alignment

    @horizontal_alignment.setter
    def horizontal_alignment(self, horizontal_alignment):
        """Sets the horizontal_alignment of this GoogleAppsCardV1Column.

        Specifies whether widgets align to the left, right, or center of a column.

        :param horizontal_alignment: The horizontal_alignment of this GoogleAppsCardV1Column.
        :type horizontal_alignment: str
        """
        allowed_values = ["HORIZONTAL_ALIGNMENT_UNSPECIFIED", "START", "CENTER", "END"]  # noqa: E501
        if horizontal_alignment not in allowed_values:
            raise ValueError(
                "Invalid value for `horizontal_alignment` ({0}), must be one of {1}"
                .format(horizontal_alignment, allowed_values)
            )

        self._horizontal_alignment = horizontal_alignment

    @property
    def horizontal_size_style(self):
        """Gets the horizontal_size_style of this GoogleAppsCardV1Column.

        Specifies how a column fills the width of the card. [Google Chat apps](https://developers.google.com/chat):

        :return: The horizontal_size_style of this GoogleAppsCardV1Column.
        :rtype: str
        """
        return self._horizontal_size_style

    @horizontal_size_style.setter
    def horizontal_size_style(self, horizontal_size_style):
        """Sets the horizontal_size_style of this GoogleAppsCardV1Column.

        Specifies how a column fills the width of the card. [Google Chat apps](https://developers.google.com/chat):

        :param horizontal_size_style: The horizontal_size_style of this GoogleAppsCardV1Column.
        :type horizontal_size_style: str
        """
        allowed_values = ["HORIZONTAL_SIZE_STYLE_UNSPECIFIED", "FILL_AVAILABLE_SPACE", "FILL_MINIMUM_SPACE"]  # noqa: E501
        if horizontal_size_style not in allowed_values:
            raise ValueError(
                "Invalid value for `horizontal_size_style` ({0}), must be one of {1}"
                .format(horizontal_size_style, allowed_values)
            )

        self._horizontal_size_style = horizontal_size_style

    @property
    def vertical_alignment(self):
        """Gets the vertical_alignment of this GoogleAppsCardV1Column.

        Specifies whether widgets align to the top, bottom, or center of a column. [Google Chat apps](https://developers.google.com/chat):

        :return: The vertical_alignment of this GoogleAppsCardV1Column.
        :rtype: str
        """
        return self._vertical_alignment

    @vertical_alignment.setter
    def vertical_alignment(self, vertical_alignment):
        """Sets the vertical_alignment of this GoogleAppsCardV1Column.

        Specifies whether widgets align to the top, bottom, or center of a column. [Google Chat apps](https://developers.google.com/chat):

        :param vertical_alignment: The vertical_alignment of this GoogleAppsCardV1Column.
        :type vertical_alignment: str
        """
        allowed_values = ["VERTICAL_ALIGNMENT_UNSPECIFIED", "CENTER", "TOP", "BOTTOM"]  # noqa: E501
        if vertical_alignment not in allowed_values:
            raise ValueError(
                "Invalid value for `vertical_alignment` ({0}), must be one of {1}"
                .format(vertical_alignment, allowed_values)
            )

        self._vertical_alignment = vertical_alignment

    @property
    def widgets(self):
        """Gets the widgets of this GoogleAppsCardV1Column.

        An array of widgets included in a column. Widgets appear in the order that they are specified.

        :return: The widgets of this GoogleAppsCardV1Column.
        :rtype: List[GoogleAppsCardV1Widgets]
        """
        return self._widgets

    @widgets.setter
    def widgets(self, widgets):
        """Sets the widgets of this GoogleAppsCardV1Column.

        An array of widgets included in a column. Widgets appear in the order that they are specified.

        :param widgets: The widgets of this GoogleAppsCardV1Column.
        :type widgets: List[GoogleAppsCardV1Widgets]
        """

        self._widgets = widgets
