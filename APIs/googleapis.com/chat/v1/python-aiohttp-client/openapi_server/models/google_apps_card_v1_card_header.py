# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAppsCardV1CardHeader(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_alt_text: str=None, image_type: str=None, image_url: str=None, subtitle: str=None, title: str=None):
        """GoogleAppsCardV1CardHeader - a model defined in OpenAPI

        :param image_alt_text: The image_alt_text of this GoogleAppsCardV1CardHeader.
        :param image_type: The image_type of this GoogleAppsCardV1CardHeader.
        :param image_url: The image_url of this GoogleAppsCardV1CardHeader.
        :param subtitle: The subtitle of this GoogleAppsCardV1CardHeader.
        :param title: The title of this GoogleAppsCardV1CardHeader.
        """
        self.openapi_types = {
            'image_alt_text': str,
            'image_type': str,
            'image_url': str,
            'subtitle': str,
            'title': str
        }

        self.attribute_map = {
            'image_alt_text': 'imageAltText',
            'image_type': 'imageType',
            'image_url': 'imageUrl',
            'subtitle': 'subtitle',
            'title': 'title'
        }

        self._image_alt_text = image_alt_text
        self._image_type = image_type
        self._image_url = image_url
        self._subtitle = subtitle
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsCardV1CardHeader':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsCardV1CardHeader of this GoogleAppsCardV1CardHeader.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_alt_text(self):
        """Gets the image_alt_text of this GoogleAppsCardV1CardHeader.

        The alternative text of this image that's used for accessibility.

        :return: The image_alt_text of this GoogleAppsCardV1CardHeader.
        :rtype: str
        """
        return self._image_alt_text

    @image_alt_text.setter
    def image_alt_text(self, image_alt_text):
        """Sets the image_alt_text of this GoogleAppsCardV1CardHeader.

        The alternative text of this image that's used for accessibility.

        :param image_alt_text: The image_alt_text of this GoogleAppsCardV1CardHeader.
        :type image_alt_text: str
        """

        self._image_alt_text = image_alt_text

    @property
    def image_type(self):
        """Gets the image_type of this GoogleAppsCardV1CardHeader.

        The shape used to crop the image. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):

        :return: The image_type of this GoogleAppsCardV1CardHeader.
        :rtype: str
        """
        return self._image_type

    @image_type.setter
    def image_type(self, image_type):
        """Sets the image_type of this GoogleAppsCardV1CardHeader.

        The shape used to crop the image. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):

        :param image_type: The image_type of this GoogleAppsCardV1CardHeader.
        :type image_type: str
        """
        allowed_values = ["SQUARE", "CIRCLE"]  # noqa: E501
        if image_type not in allowed_values:
            raise ValueError(
                "Invalid value for `image_type` ({0}), must be one of {1}"
                .format(image_type, allowed_values)
            )

        self._image_type = image_type

    @property
    def image_url(self):
        """Gets the image_url of this GoogleAppsCardV1CardHeader.

        The HTTPS URL of the image in the card header.

        :return: The image_url of this GoogleAppsCardV1CardHeader.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this GoogleAppsCardV1CardHeader.

        The HTTPS URL of the image in the card header.

        :param image_url: The image_url of this GoogleAppsCardV1CardHeader.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def subtitle(self):
        """Gets the subtitle of this GoogleAppsCardV1CardHeader.

        The subtitle of the card header. If specified, appears on its own line below the `title`.

        :return: The subtitle of this GoogleAppsCardV1CardHeader.
        :rtype: str
        """
        return self._subtitle

    @subtitle.setter
    def subtitle(self, subtitle):
        """Sets the subtitle of this GoogleAppsCardV1CardHeader.

        The subtitle of the card header. If specified, appears on its own line below the `title`.

        :param subtitle: The subtitle of this GoogleAppsCardV1CardHeader.
        :type subtitle: str
        """

        self._subtitle = subtitle

    @property
    def title(self):
        """Gets the title of this GoogleAppsCardV1CardHeader.

        Required. The title of the card header. The header has a fixed height: if both a title and subtitle are specified, each takes up one line. If only the title is specified, it takes up both lines.

        :return: The title of this GoogleAppsCardV1CardHeader.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this GoogleAppsCardV1CardHeader.

        Required. The title of the card header. The header has a fixed height: if both a title and subtitle are specified, each takes up one line. If only the title is specified, it takes up both lines.

        :param title: The title of this GoogleAppsCardV1CardHeader.
        :type title: str
        """

        self._title = title
