# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chat_client_data_source_markup import ChatClientDataSourceMarkup
from openapi_server import util


class HostAppDataSourceMarkup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chat_data_source: ChatClientDataSourceMarkup=None):
        """HostAppDataSourceMarkup - a model defined in OpenAPI

        :param chat_data_source: The chat_data_source of this HostAppDataSourceMarkup.
        """
        self.openapi_types = {
            'chat_data_source': ChatClientDataSourceMarkup
        }

        self.attribute_map = {
            'chat_data_source': 'chatDataSource'
        }

        self._chat_data_source = chat_data_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HostAppDataSourceMarkup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HostAppDataSourceMarkup of this HostAppDataSourceMarkup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chat_data_source(self):
        """Gets the chat_data_source of this HostAppDataSourceMarkup.


        :return: The chat_data_source of this HostAppDataSourceMarkup.
        :rtype: ChatClientDataSourceMarkup
        """
        return self._chat_data_source

    @chat_data_source.setter
    def chat_data_source(self, chat_data_source):
        """Sets the chat_data_source of this HostAppDataSourceMarkup.


        :param chat_data_source: The chat_data_source of this HostAppDataSourceMarkup.
        :type chat_data_source: ChatClientDataSourceMarkup
        """

        self._chat_data_source = chat_data_source
