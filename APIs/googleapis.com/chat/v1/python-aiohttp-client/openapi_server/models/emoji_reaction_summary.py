# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.emoji import Emoji
from openapi_server import util


class EmojiReactionSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, emoji: Emoji=None, reaction_count: int=None):
        """EmojiReactionSummary - a model defined in OpenAPI

        :param emoji: The emoji of this EmojiReactionSummary.
        :param reaction_count: The reaction_count of this EmojiReactionSummary.
        """
        self.openapi_types = {
            'emoji': Emoji,
            'reaction_count': int
        }

        self.attribute_map = {
            'emoji': 'emoji',
            'reaction_count': 'reactionCount'
        }

        self._emoji = emoji
        self._reaction_count = reaction_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EmojiReactionSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EmojiReactionSummary of this EmojiReactionSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def emoji(self):
        """Gets the emoji of this EmojiReactionSummary.


        :return: The emoji of this EmojiReactionSummary.
        :rtype: Emoji
        """
        return self._emoji

    @emoji.setter
    def emoji(self, emoji):
        """Sets the emoji of this EmojiReactionSummary.


        :param emoji: The emoji of this EmojiReactionSummary.
        :type emoji: Emoji
        """

        self._emoji = emoji

    @property
    def reaction_count(self):
        """Gets the reaction_count of this EmojiReactionSummary.

        The total number of reactions using the associated emoji.

        :return: The reaction_count of this EmojiReactionSummary.
        :rtype: int
        """
        return self._reaction_count

    @reaction_count.setter
    def reaction_count(self, reaction_count):
        """Sets the reaction_count of this EmojiReactionSummary.

        The total number of reactions using the associated emoji.

        :param reaction_count: The reaction_count of this EmojiReactionSummary.
        :type reaction_count: int
        """

        self._reaction_count = reaction_count
