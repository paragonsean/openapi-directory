# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAppsCardV1Icon(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alt_text: str=None, icon_url: str=None, image_type: str=None, known_icon: str=None):
        """GoogleAppsCardV1Icon - a model defined in OpenAPI

        :param alt_text: The alt_text of this GoogleAppsCardV1Icon.
        :param icon_url: The icon_url of this GoogleAppsCardV1Icon.
        :param image_type: The image_type of this GoogleAppsCardV1Icon.
        :param known_icon: The known_icon of this GoogleAppsCardV1Icon.
        """
        self.openapi_types = {
            'alt_text': str,
            'icon_url': str,
            'image_type': str,
            'known_icon': str
        }

        self.attribute_map = {
            'alt_text': 'altText',
            'icon_url': 'iconUrl',
            'image_type': 'imageType',
            'known_icon': 'knownIcon'
        }

        self._alt_text = alt_text
        self._icon_url = icon_url
        self._image_type = image_type
        self._known_icon = known_icon

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsCardV1Icon':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsCardV1Icon of this GoogleAppsCardV1Icon.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alt_text(self):
        """Gets the alt_text of this GoogleAppsCardV1Icon.

        Optional. A description of the icon used for accessibility. If unspecified, the default value `Button` is provided. As a best practice, you should set a helpful description for what the icon displays, and if applicable, what it does. For example, `A user's account portrait`, or `Opens a new browser tab and navigates to the Google Chat developer documentation at https://developers.google.com/chat`. If the icon is set in a `Button`, the `altText` appears as helper text when the user hovers over the button. However, if the button also sets `text`, the icon's `altText` is ignored.

        :return: The alt_text of this GoogleAppsCardV1Icon.
        :rtype: str
        """
        return self._alt_text

    @alt_text.setter
    def alt_text(self, alt_text):
        """Sets the alt_text of this GoogleAppsCardV1Icon.

        Optional. A description of the icon used for accessibility. If unspecified, the default value `Button` is provided. As a best practice, you should set a helpful description for what the icon displays, and if applicable, what it does. For example, `A user's account portrait`, or `Opens a new browser tab and navigates to the Google Chat developer documentation at https://developers.google.com/chat`. If the icon is set in a `Button`, the `altText` appears as helper text when the user hovers over the button. However, if the button also sets `text`, the icon's `altText` is ignored.

        :param alt_text: The alt_text of this GoogleAppsCardV1Icon.
        :type alt_text: str
        """

        self._alt_text = alt_text

    @property
    def icon_url(self):
        """Gets the icon_url of this GoogleAppsCardV1Icon.

        Display a custom icon hosted at an HTTPS URL. For example: ``` \"iconUrl\": \"https://developers.google.com/chat/images/quickstart-app-avatar.png\" ``` Supported file types include `.png` and `.jpg`.

        :return: The icon_url of this GoogleAppsCardV1Icon.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this GoogleAppsCardV1Icon.

        Display a custom icon hosted at an HTTPS URL. For example: ``` \"iconUrl\": \"https://developers.google.com/chat/images/quickstart-app-avatar.png\" ``` Supported file types include `.png` and `.jpg`.

        :param icon_url: The icon_url of this GoogleAppsCardV1Icon.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def image_type(self):
        """Gets the image_type of this GoogleAppsCardV1Icon.

        The crop style applied to the image. In some cases, applying a `CIRCLE` crop causes the image to be drawn larger than a built-in icon.

        :return: The image_type of this GoogleAppsCardV1Icon.
        :rtype: str
        """
        return self._image_type

    @image_type.setter
    def image_type(self, image_type):
        """Sets the image_type of this GoogleAppsCardV1Icon.

        The crop style applied to the image. In some cases, applying a `CIRCLE` crop causes the image to be drawn larger than a built-in icon.

        :param image_type: The image_type of this GoogleAppsCardV1Icon.
        :type image_type: str
        """
        allowed_values = ["SQUARE", "CIRCLE"]  # noqa: E501
        if image_type not in allowed_values:
            raise ValueError(
                "Invalid value for `image_type` ({0}), must be one of {1}"
                .format(image_type, allowed_values)
            )

        self._image_type = image_type

    @property
    def known_icon(self):
        """Gets the known_icon of this GoogleAppsCardV1Icon.

        Display one of the built-in icons provided by Google Workspace. For example, to display an airplane icon, specify `AIRPLANE`. For a bus, specify `BUS`. For a full list of supported icons, see [built-in icons](https://developers.google.com/chat/format-messages#builtinicons).

        :return: The known_icon of this GoogleAppsCardV1Icon.
        :rtype: str
        """
        return self._known_icon

    @known_icon.setter
    def known_icon(self, known_icon):
        """Sets the known_icon of this GoogleAppsCardV1Icon.

        Display one of the built-in icons provided by Google Workspace. For example, to display an airplane icon, specify `AIRPLANE`. For a bus, specify `BUS`. For a full list of supported icons, see [built-in icons](https://developers.google.com/chat/format-messages#builtinicons).

        :param known_icon: The known_icon of this GoogleAppsCardV1Icon.
        :type known_icon: str
        """

        self._known_icon = known_icon
