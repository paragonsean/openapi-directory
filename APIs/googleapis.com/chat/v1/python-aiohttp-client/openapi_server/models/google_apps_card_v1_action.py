# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_apps_card_v1_action_parameter import GoogleAppsCardV1ActionParameter
from openapi_server import util


class GoogleAppsCardV1Action(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, function: str=None, interaction: str=None, load_indicator: str=None, parameters: List[GoogleAppsCardV1ActionParameter]=None, persist_values: bool=None):
        """GoogleAppsCardV1Action - a model defined in OpenAPI

        :param function: The function of this GoogleAppsCardV1Action.
        :param interaction: The interaction of this GoogleAppsCardV1Action.
        :param load_indicator: The load_indicator of this GoogleAppsCardV1Action.
        :param parameters: The parameters of this GoogleAppsCardV1Action.
        :param persist_values: The persist_values of this GoogleAppsCardV1Action.
        """
        self.openapi_types = {
            'function': str,
            'interaction': str,
            'load_indicator': str,
            'parameters': List[GoogleAppsCardV1ActionParameter],
            'persist_values': bool
        }

        self.attribute_map = {
            'function': 'function',
            'interaction': 'interaction',
            'load_indicator': 'loadIndicator',
            'parameters': 'parameters',
            'persist_values': 'persistValues'
        }

        self._function = function
        self._interaction = interaction
        self._load_indicator = load_indicator
        self._parameters = parameters
        self._persist_values = persist_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsCardV1Action':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsCardV1Action of this GoogleAppsCardV1Action.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def function(self):
        """Gets the function of this GoogleAppsCardV1Action.

        A custom function to invoke when the containing element is clicked or othrwise activated. For example usage, see [Create interactive cards](https://developers.google.com/chat/how-tos/cards-onclick).

        :return: The function of this GoogleAppsCardV1Action.
        :rtype: str
        """
        return self._function

    @function.setter
    def function(self, function):
        """Sets the function of this GoogleAppsCardV1Action.

        A custom function to invoke when the containing element is clicked or othrwise activated. For example usage, see [Create interactive cards](https://developers.google.com/chat/how-tos/cards-onclick).

        :param function: The function of this GoogleAppsCardV1Action.
        :type function: str
        """

        self._function = function

    @property
    def interaction(self):
        """Gets the interaction of this GoogleAppsCardV1Action.

        Optional. Required when opening a [dialog](https://developers.google.com/chat/how-tos/dialogs). What to do in response to an interaction with a user, such as a user clicking a button in a card message. If unspecified, the app responds by executing an `action`—like opening a link or running a function—as normal. By specifying an `interaction`, the app can respond in special interactive ways. For example, by setting `interaction` to `OPEN_DIALOG`, the app can open a [dialog](https://developers.google.com/chat/how-tos/dialogs). When specified, a loading indicator isn't shown. If specified for an add-on, the entire card is stripped and nothing is shown in the client. [Google Chat apps](https://developers.google.com/chat):

        :return: The interaction of this GoogleAppsCardV1Action.
        :rtype: str
        """
        return self._interaction

    @interaction.setter
    def interaction(self, interaction):
        """Sets the interaction of this GoogleAppsCardV1Action.

        Optional. Required when opening a [dialog](https://developers.google.com/chat/how-tos/dialogs). What to do in response to an interaction with a user, such as a user clicking a button in a card message. If unspecified, the app responds by executing an `action`—like opening a link or running a function—as normal. By specifying an `interaction`, the app can respond in special interactive ways. For example, by setting `interaction` to `OPEN_DIALOG`, the app can open a [dialog](https://developers.google.com/chat/how-tos/dialogs). When specified, a loading indicator isn't shown. If specified for an add-on, the entire card is stripped and nothing is shown in the client. [Google Chat apps](https://developers.google.com/chat):

        :param interaction: The interaction of this GoogleAppsCardV1Action.
        :type interaction: str
        """
        allowed_values = ["INTERACTION_UNSPECIFIED", "OPEN_DIALOG"]  # noqa: E501
        if interaction not in allowed_values:
            raise ValueError(
                "Invalid value for `interaction` ({0}), must be one of {1}"
                .format(interaction, allowed_values)
            )

        self._interaction = interaction

    @property
    def load_indicator(self):
        """Gets the load_indicator of this GoogleAppsCardV1Action.

        Specifies the loading indicator that the action displays while making the call to the action.

        :return: The load_indicator of this GoogleAppsCardV1Action.
        :rtype: str
        """
        return self._load_indicator

    @load_indicator.setter
    def load_indicator(self, load_indicator):
        """Sets the load_indicator of this GoogleAppsCardV1Action.

        Specifies the loading indicator that the action displays while making the call to the action.

        :param load_indicator: The load_indicator of this GoogleAppsCardV1Action.
        :type load_indicator: str
        """
        allowed_values = ["SPINNER", "NONE"]  # noqa: E501
        if load_indicator not in allowed_values:
            raise ValueError(
                "Invalid value for `load_indicator` ({0}), must be one of {1}"
                .format(load_indicator, allowed_values)
            )

        self._load_indicator = load_indicator

    @property
    def parameters(self):
        """Gets the parameters of this GoogleAppsCardV1Action.

        List of action parameters.

        :return: The parameters of this GoogleAppsCardV1Action.
        :rtype: List[GoogleAppsCardV1ActionParameter]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleAppsCardV1Action.

        List of action parameters.

        :param parameters: The parameters of this GoogleAppsCardV1Action.
        :type parameters: List[GoogleAppsCardV1ActionParameter]
        """

        self._parameters = parameters

    @property
    def persist_values(self):
        """Gets the persist_values of this GoogleAppsCardV1Action.

        Indicates whether form values persist after the action. The default value is `false`. If `true`, form values remain after the action is triggered. To let the user make changes while the action is being processed, set [`LoadIndicator`](https://developers.google.com/workspace/add-ons/reference/rpc/google.apps.card.v1#loadindicator) to `NONE`. For [card messages](https://developers.google.com/chat/api/guides/v1/messages/create#create) in Chat apps, you must also set the action's [`ResponseType`](https://developers.google.com/chat/api/reference/rest/v1/spaces.messages#responsetype) to `UPDATE_MESSAGE` and use the same [`card_id`](https://developers.google.com/chat/api/reference/rest/v1/spaces.messages#CardWithId) from the card that contained the action. If `false`, the form values are cleared when the action is triggered. To prevent the user from making changes while the action is being processed, set [`LoadIndicator`](https://developers.google.com/workspace/add-ons/reference/rpc/google.apps.card.v1#loadindicator) to `SPINNER`.

        :return: The persist_values of this GoogleAppsCardV1Action.
        :rtype: bool
        """
        return self._persist_values

    @persist_values.setter
    def persist_values(self, persist_values):
        """Sets the persist_values of this GoogleAppsCardV1Action.

        Indicates whether form values persist after the action. The default value is `false`. If `true`, form values remain after the action is triggered. To let the user make changes while the action is being processed, set [`LoadIndicator`](https://developers.google.com/workspace/add-ons/reference/rpc/google.apps.card.v1#loadindicator) to `NONE`. For [card messages](https://developers.google.com/chat/api/guides/v1/messages/create#create) in Chat apps, you must also set the action's [`ResponseType`](https://developers.google.com/chat/api/reference/rest/v1/spaces.messages#responsetype) to `UPDATE_MESSAGE` and use the same [`card_id`](https://developers.google.com/chat/api/reference/rest/v1/spaces.messages#CardWithId) from the card that contained the action. If `false`, the form values are cleared when the action is triggered. To prevent the user from making changes while the action is being processed, set [`LoadIndicator`](https://developers.google.com/workspace/add-ons/reference/rpc/google.apps.card.v1#loadindicator) to `SPINNER`.

        :param persist_values: The persist_values of this GoogleAppsCardV1Action.
        :type persist_values: bool
        """

        self._persist_values = persist_values
