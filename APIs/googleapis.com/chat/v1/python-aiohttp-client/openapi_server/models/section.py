# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.widget_markup import WidgetMarkup
from openapi_server import util


class Section(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, header: str=None, widgets: List[WidgetMarkup]=None):
        """Section - a model defined in OpenAPI

        :param header: The header of this Section.
        :param widgets: The widgets of this Section.
        """
        self.openapi_types = {
            'header': str,
            'widgets': List[WidgetMarkup]
        }

        self.attribute_map = {
            'header': 'header',
            'widgets': 'widgets'
        }

        self._header = header
        self._widgets = widgets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Section':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Section of this Section.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def header(self):
        """Gets the header of this Section.

        The header of the section. Formatted text is supported. For more information about formatting text, see [Formatting text in Google Chat apps](https://developers.google.com/chat/format-messages#card-formatting) and [Formatting text in Google Workspace Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).

        :return: The header of this Section.
        :rtype: str
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this Section.

        The header of the section. Formatted text is supported. For more information about formatting text, see [Formatting text in Google Chat apps](https://developers.google.com/chat/format-messages#card-formatting) and [Formatting text in Google Workspace Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).

        :param header: The header of this Section.
        :type header: str
        """

        self._header = header

    @property
    def widgets(self):
        """Gets the widgets of this Section.

        A section must contain at least one widget.

        :return: The widgets of this Section.
        :rtype: List[WidgetMarkup]
        """
        return self._widgets

    @widgets.setter
    def widgets(self, widgets):
        """Sets the widgets of this Section.

        A section must contain at least one widget.

        :param widgets: The widgets of this Section.
        :type widgets: List[WidgetMarkup]
        """

        self._widgets = widgets
