# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.color import Color
from openapi_server.models.google_apps_card_v1_icon import GoogleAppsCardV1Icon
from openapi_server.models.google_apps_card_v1_on_click import GoogleAppsCardV1OnClick
from openapi_server import util


class GoogleAppsCardV1Button(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alt_text: str=None, color: Color=None, disabled: bool=None, icon: GoogleAppsCardV1Icon=None, on_click: GoogleAppsCardV1OnClick=None, text: str=None):
        """GoogleAppsCardV1Button - a model defined in OpenAPI

        :param alt_text: The alt_text of this GoogleAppsCardV1Button.
        :param color: The color of this GoogleAppsCardV1Button.
        :param disabled: The disabled of this GoogleAppsCardV1Button.
        :param icon: The icon of this GoogleAppsCardV1Button.
        :param on_click: The on_click of this GoogleAppsCardV1Button.
        :param text: The text of this GoogleAppsCardV1Button.
        """
        self.openapi_types = {
            'alt_text': str,
            'color': Color,
            'disabled': bool,
            'icon': GoogleAppsCardV1Icon,
            'on_click': GoogleAppsCardV1OnClick,
            'text': str
        }

        self.attribute_map = {
            'alt_text': 'altText',
            'color': 'color',
            'disabled': 'disabled',
            'icon': 'icon',
            'on_click': 'onClick',
            'text': 'text'
        }

        self._alt_text = alt_text
        self._color = color
        self._disabled = disabled
        self._icon = icon
        self._on_click = on_click
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsCardV1Button':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsCardV1Button of this GoogleAppsCardV1Button.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alt_text(self):
        """Gets the alt_text of this GoogleAppsCardV1Button.

        The alternative text that's used for accessibility. Set descriptive text that lets users know what the button does. For example, if a button opens a hyperlink, you might write: \"Opens a new browser tab and navigates to the Google Chat developer documentation at https://developers.google.com/chat\".

        :return: The alt_text of this GoogleAppsCardV1Button.
        :rtype: str
        """
        return self._alt_text

    @alt_text.setter
    def alt_text(self, alt_text):
        """Sets the alt_text of this GoogleAppsCardV1Button.

        The alternative text that's used for accessibility. Set descriptive text that lets users know what the button does. For example, if a button opens a hyperlink, you might write: \"Opens a new browser tab and navigates to the Google Chat developer documentation at https://developers.google.com/chat\".

        :param alt_text: The alt_text of this GoogleAppsCardV1Button.
        :type alt_text: str
        """

        self._alt_text = alt_text

    @property
    def color(self):
        """Gets the color of this GoogleAppsCardV1Button.


        :return: The color of this GoogleAppsCardV1Button.
        :rtype: Color
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this GoogleAppsCardV1Button.


        :param color: The color of this GoogleAppsCardV1Button.
        :type color: Color
        """

        self._color = color

    @property
    def disabled(self):
        """Gets the disabled of this GoogleAppsCardV1Button.

        If `true`, the button is displayed in an inactive state and doesn't respond to user actions.

        :return: The disabled of this GoogleAppsCardV1Button.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this GoogleAppsCardV1Button.

        If `true`, the button is displayed in an inactive state and doesn't respond to user actions.

        :param disabled: The disabled of this GoogleAppsCardV1Button.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def icon(self):
        """Gets the icon of this GoogleAppsCardV1Button.


        :return: The icon of this GoogleAppsCardV1Button.
        :rtype: GoogleAppsCardV1Icon
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this GoogleAppsCardV1Button.


        :param icon: The icon of this GoogleAppsCardV1Button.
        :type icon: GoogleAppsCardV1Icon
        """

        self._icon = icon

    @property
    def on_click(self):
        """Gets the on_click of this GoogleAppsCardV1Button.


        :return: The on_click of this GoogleAppsCardV1Button.
        :rtype: GoogleAppsCardV1OnClick
        """
        return self._on_click

    @on_click.setter
    def on_click(self, on_click):
        """Sets the on_click of this GoogleAppsCardV1Button.


        :param on_click: The on_click of this GoogleAppsCardV1Button.
        :type on_click: GoogleAppsCardV1OnClick
        """

        self._on_click = on_click

    @property
    def text(self):
        """Gets the text of this GoogleAppsCardV1Button.

        The text displayed inside the button.

        :return: The text of this GoogleAppsCardV1Button.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this GoogleAppsCardV1Button.

        The text displayed inside the button.

        :param text: The text of this GoogleAppsCardV1Button.
        :type text: str
        """

        self._text = text
