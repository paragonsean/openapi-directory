# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.date_input import DateInput
from openapi_server.models.date_time_input import DateTimeInput
from openapi_server.models.string_inputs import StringInputs
from openapi_server.models.time_input import TimeInput
from openapi_server import util


class Inputs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_input: DateInput=None, date_time_input: DateTimeInput=None, string_inputs: StringInputs=None, time_input: TimeInput=None):
        """Inputs - a model defined in OpenAPI

        :param date_input: The date_input of this Inputs.
        :param date_time_input: The date_time_input of this Inputs.
        :param string_inputs: The string_inputs of this Inputs.
        :param time_input: The time_input of this Inputs.
        """
        self.openapi_types = {
            'date_input': DateInput,
            'date_time_input': DateTimeInput,
            'string_inputs': StringInputs,
            'time_input': TimeInput
        }

        self.attribute_map = {
            'date_input': 'dateInput',
            'date_time_input': 'dateTimeInput',
            'string_inputs': 'stringInputs',
            'time_input': 'timeInput'
        }

        self._date_input = date_input
        self._date_time_input = date_time_input
        self._string_inputs = string_inputs
        self._time_input = time_input

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Inputs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Inputs of this Inputs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_input(self):
        """Gets the date_input of this Inputs.


        :return: The date_input of this Inputs.
        :rtype: DateInput
        """
        return self._date_input

    @date_input.setter
    def date_input(self, date_input):
        """Sets the date_input of this Inputs.


        :param date_input: The date_input of this Inputs.
        :type date_input: DateInput
        """

        self._date_input = date_input

    @property
    def date_time_input(self):
        """Gets the date_time_input of this Inputs.


        :return: The date_time_input of this Inputs.
        :rtype: DateTimeInput
        """
        return self._date_time_input

    @date_time_input.setter
    def date_time_input(self, date_time_input):
        """Sets the date_time_input of this Inputs.


        :param date_time_input: The date_time_input of this Inputs.
        :type date_time_input: DateTimeInput
        """

        self._date_time_input = date_time_input

    @property
    def string_inputs(self):
        """Gets the string_inputs of this Inputs.


        :return: The string_inputs of this Inputs.
        :rtype: StringInputs
        """
        return self._string_inputs

    @string_inputs.setter
    def string_inputs(self, string_inputs):
        """Sets the string_inputs of this Inputs.


        :param string_inputs: The string_inputs of this Inputs.
        :type string_inputs: StringInputs
        """

        self._string_inputs = string_inputs

    @property
    def time_input(self):
        """Gets the time_input of this Inputs.


        :return: The time_input of this Inputs.
        :rtype: TimeInput
        """
        return self._time_input

    @time_input.setter
    def time_input(self, time_input):
        """Sets the time_input of this Inputs.


        :param time_input: The time_input of this Inputs.
        :type time_input: TimeInput
        """

        self._time_input = time_input
