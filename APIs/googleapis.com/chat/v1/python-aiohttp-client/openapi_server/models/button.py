# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_button import ImageButton
from openapi_server.models.text_button import TextButton
from openapi_server import util


class Button(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_button: ImageButton=None, text_button: TextButton=None):
        """Button - a model defined in OpenAPI

        :param image_button: The image_button of this Button.
        :param text_button: The text_button of this Button.
        """
        self.openapi_types = {
            'image_button': ImageButton,
            'text_button': TextButton
        }

        self.attribute_map = {
            'image_button': 'imageButton',
            'text_button': 'textButton'
        }

        self._image_button = image_button
        self._text_button = text_button

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Button':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Button of this Button.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_button(self):
        """Gets the image_button of this Button.


        :return: The image_button of this Button.
        :rtype: ImageButton
        """
        return self._image_button

    @image_button.setter
    def image_button(self, image_button):
        """Sets the image_button of this Button.


        :param image_button: The image_button of this Button.
        :type image_button: ImageButton
        """

        self._image_button = image_button

    @property
    def text_button(self):
        """Gets the text_button of this Button.


        :return: The text_button of this Button.
        :rtype: TextButton
        """
        return self._text_button

    @text_button.setter
    def text_button(self, text_button):
        """Sets the text_button of this Button.


        :param text_button: The text_button of this Button.
        :type text_button: TextButton
        """

        self._text_button = text_button
