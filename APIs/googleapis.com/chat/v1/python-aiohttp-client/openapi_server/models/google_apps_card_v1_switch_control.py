# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_apps_card_v1_action import GoogleAppsCardV1Action
from openapi_server import util


class GoogleAppsCardV1SwitchControl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, control_type: str=None, name: str=None, on_change_action: GoogleAppsCardV1Action=None, selected: bool=None, value: str=None):
        """GoogleAppsCardV1SwitchControl - a model defined in OpenAPI

        :param control_type: The control_type of this GoogleAppsCardV1SwitchControl.
        :param name: The name of this GoogleAppsCardV1SwitchControl.
        :param on_change_action: The on_change_action of this GoogleAppsCardV1SwitchControl.
        :param selected: The selected of this GoogleAppsCardV1SwitchControl.
        :param value: The value of this GoogleAppsCardV1SwitchControl.
        """
        self.openapi_types = {
            'control_type': str,
            'name': str,
            'on_change_action': GoogleAppsCardV1Action,
            'selected': bool,
            'value': str
        }

        self.attribute_map = {
            'control_type': 'controlType',
            'name': 'name',
            'on_change_action': 'onChangeAction',
            'selected': 'selected',
            'value': 'value'
        }

        self._control_type = control_type
        self._name = name
        self._on_change_action = on_change_action
        self._selected = selected
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsCardV1SwitchControl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsCardV1SwitchControl of this GoogleAppsCardV1SwitchControl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def control_type(self):
        """Gets the control_type of this GoogleAppsCardV1SwitchControl.

        How the switch appears in the user interface. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):

        :return: The control_type of this GoogleAppsCardV1SwitchControl.
        :rtype: str
        """
        return self._control_type

    @control_type.setter
    def control_type(self, control_type):
        """Sets the control_type of this GoogleAppsCardV1SwitchControl.

        How the switch appears in the user interface. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):

        :param control_type: The control_type of this GoogleAppsCardV1SwitchControl.
        :type control_type: str
        """
        allowed_values = ["SWITCH", "CHECKBOX", "CHECK_BOX"]  # noqa: E501
        if control_type not in allowed_values:
            raise ValueError(
                "Invalid value for `control_type` ({0}), must be one of {1}"
                .format(control_type, allowed_values)
            )

        self._control_type = control_type

    @property
    def name(self):
        """Gets the name of this GoogleAppsCardV1SwitchControl.

        The name by which the switch widget is identified in a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/ui/read-form-data).

        :return: The name of this GoogleAppsCardV1SwitchControl.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAppsCardV1SwitchControl.

        The name by which the switch widget is identified in a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/ui/read-form-data).

        :param name: The name of this GoogleAppsCardV1SwitchControl.
        :type name: str
        """

        self._name = name

    @property
    def on_change_action(self):
        """Gets the on_change_action of this GoogleAppsCardV1SwitchControl.


        :return: The on_change_action of this GoogleAppsCardV1SwitchControl.
        :rtype: GoogleAppsCardV1Action
        """
        return self._on_change_action

    @on_change_action.setter
    def on_change_action(self, on_change_action):
        """Sets the on_change_action of this GoogleAppsCardV1SwitchControl.


        :param on_change_action: The on_change_action of this GoogleAppsCardV1SwitchControl.
        :type on_change_action: GoogleAppsCardV1Action
        """

        self._on_change_action = on_change_action

    @property
    def selected(self):
        """Gets the selected of this GoogleAppsCardV1SwitchControl.

        When `true`, the switch is selected.

        :return: The selected of this GoogleAppsCardV1SwitchControl.
        :rtype: bool
        """
        return self._selected

    @selected.setter
    def selected(self, selected):
        """Sets the selected of this GoogleAppsCardV1SwitchControl.

        When `true`, the switch is selected.

        :param selected: The selected of this GoogleAppsCardV1SwitchControl.
        :type selected: bool
        """

        self._selected = selected

    @property
    def value(self):
        """Gets the value of this GoogleAppsCardV1SwitchControl.

        The value entered by a user, returned as part of a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/ui/read-form-data).

        :return: The value of this GoogleAppsCardV1SwitchControl.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this GoogleAppsCardV1SwitchControl.

        The value entered by a user, returned as part of a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/ui/read-form-data).

        :param value: The value of this GoogleAppsCardV1SwitchControl.
        :type value: str
        """

        self._value = value
