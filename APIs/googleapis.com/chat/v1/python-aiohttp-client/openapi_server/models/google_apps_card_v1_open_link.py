# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAppsCardV1OpenLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, on_close: str=None, open_as: str=None, url: str=None):
        """GoogleAppsCardV1OpenLink - a model defined in OpenAPI

        :param on_close: The on_close of this GoogleAppsCardV1OpenLink.
        :param open_as: The open_as of this GoogleAppsCardV1OpenLink.
        :param url: The url of this GoogleAppsCardV1OpenLink.
        """
        self.openapi_types = {
            'on_close': str,
            'open_as': str,
            'url': str
        }

        self.attribute_map = {
            'on_close': 'onClose',
            'open_as': 'openAs',
            'url': 'url'
        }

        self._on_close = on_close
        self._open_as = open_as
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsCardV1OpenLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsCardV1OpenLink of this GoogleAppsCardV1OpenLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def on_close(self):
        """Gets the on_close of this GoogleAppsCardV1OpenLink.

        Whether the client forgets about a link after opening it, or observes it until the window closes. [Google Workspace Add-ons](https://developers.google.com/workspace/add-ons):

        :return: The on_close of this GoogleAppsCardV1OpenLink.
        :rtype: str
        """
        return self._on_close

    @on_close.setter
    def on_close(self, on_close):
        """Sets the on_close of this GoogleAppsCardV1OpenLink.

        Whether the client forgets about a link after opening it, or observes it until the window closes. [Google Workspace Add-ons](https://developers.google.com/workspace/add-ons):

        :param on_close: The on_close of this GoogleAppsCardV1OpenLink.
        :type on_close: str
        """
        allowed_values = ["NOTHING", "RELOAD"]  # noqa: E501
        if on_close not in allowed_values:
            raise ValueError(
                "Invalid value for `on_close` ({0}), must be one of {1}"
                .format(on_close, allowed_values)
            )

        self._on_close = on_close

    @property
    def open_as(self):
        """Gets the open_as of this GoogleAppsCardV1OpenLink.

        How to open a link. [Google Workspace Add-ons](https://developers.google.com/workspace/add-ons):

        :return: The open_as of this GoogleAppsCardV1OpenLink.
        :rtype: str
        """
        return self._open_as

    @open_as.setter
    def open_as(self, open_as):
        """Sets the open_as of this GoogleAppsCardV1OpenLink.

        How to open a link. [Google Workspace Add-ons](https://developers.google.com/workspace/add-ons):

        :param open_as: The open_as of this GoogleAppsCardV1OpenLink.
        :type open_as: str
        """
        allowed_values = ["FULL_SIZE", "OVERLAY"]  # noqa: E501
        if open_as not in allowed_values:
            raise ValueError(
                "Invalid value for `open_as` ({0}), must be one of {1}"
                .format(open_as, allowed_values)
            )

        self._open_as = open_as

    @property
    def url(self):
        """Gets the url of this GoogleAppsCardV1OpenLink.

        The URL to open.

        :return: The url of this GoogleAppsCardV1OpenLink.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this GoogleAppsCardV1OpenLink.

        The URL to open.

        :param url: The url of this GoogleAppsCardV1OpenLink.
        :type url: str
        """

        self._url = url
