# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_apps_card_v1_button import GoogleAppsCardV1Button
from openapi_server.models.google_apps_card_v1_icon import GoogleAppsCardV1Icon
from openapi_server.models.google_apps_card_v1_on_click import GoogleAppsCardV1OnClick
from openapi_server.models.google_apps_card_v1_switch_control import GoogleAppsCardV1SwitchControl
from openapi_server import util


class GoogleAppsCardV1DecoratedText(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bottom_label: str=None, button: GoogleAppsCardV1Button=None, end_icon: GoogleAppsCardV1Icon=None, icon: GoogleAppsCardV1Icon=None, on_click: GoogleAppsCardV1OnClick=None, start_icon: GoogleAppsCardV1Icon=None, switch_control: GoogleAppsCardV1SwitchControl=None, text: str=None, top_label: str=None, wrap_text: bool=None):
        """GoogleAppsCardV1DecoratedText - a model defined in OpenAPI

        :param bottom_label: The bottom_label of this GoogleAppsCardV1DecoratedText.
        :param button: The button of this GoogleAppsCardV1DecoratedText.
        :param end_icon: The end_icon of this GoogleAppsCardV1DecoratedText.
        :param icon: The icon of this GoogleAppsCardV1DecoratedText.
        :param on_click: The on_click of this GoogleAppsCardV1DecoratedText.
        :param start_icon: The start_icon of this GoogleAppsCardV1DecoratedText.
        :param switch_control: The switch_control of this GoogleAppsCardV1DecoratedText.
        :param text: The text of this GoogleAppsCardV1DecoratedText.
        :param top_label: The top_label of this GoogleAppsCardV1DecoratedText.
        :param wrap_text: The wrap_text of this GoogleAppsCardV1DecoratedText.
        """
        self.openapi_types = {
            'bottom_label': str,
            'button': GoogleAppsCardV1Button,
            'end_icon': GoogleAppsCardV1Icon,
            'icon': GoogleAppsCardV1Icon,
            'on_click': GoogleAppsCardV1OnClick,
            'start_icon': GoogleAppsCardV1Icon,
            'switch_control': GoogleAppsCardV1SwitchControl,
            'text': str,
            'top_label': str,
            'wrap_text': bool
        }

        self.attribute_map = {
            'bottom_label': 'bottomLabel',
            'button': 'button',
            'end_icon': 'endIcon',
            'icon': 'icon',
            'on_click': 'onClick',
            'start_icon': 'startIcon',
            'switch_control': 'switchControl',
            'text': 'text',
            'top_label': 'topLabel',
            'wrap_text': 'wrapText'
        }

        self._bottom_label = bottom_label
        self._button = button
        self._end_icon = end_icon
        self._icon = icon
        self._on_click = on_click
        self._start_icon = start_icon
        self._switch_control = switch_control
        self._text = text
        self._top_label = top_label
        self._wrap_text = wrap_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsCardV1DecoratedText':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsCardV1DecoratedText of this GoogleAppsCardV1DecoratedText.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bottom_label(self):
        """Gets the bottom_label of this GoogleAppsCardV1DecoratedText.

        The text that appears below `text`. Always wraps.

        :return: The bottom_label of this GoogleAppsCardV1DecoratedText.
        :rtype: str
        """
        return self._bottom_label

    @bottom_label.setter
    def bottom_label(self, bottom_label):
        """Sets the bottom_label of this GoogleAppsCardV1DecoratedText.

        The text that appears below `text`. Always wraps.

        :param bottom_label: The bottom_label of this GoogleAppsCardV1DecoratedText.
        :type bottom_label: str
        """

        self._bottom_label = bottom_label

    @property
    def button(self):
        """Gets the button of this GoogleAppsCardV1DecoratedText.


        :return: The button of this GoogleAppsCardV1DecoratedText.
        :rtype: GoogleAppsCardV1Button
        """
        return self._button

    @button.setter
    def button(self, button):
        """Sets the button of this GoogleAppsCardV1DecoratedText.


        :param button: The button of this GoogleAppsCardV1DecoratedText.
        :type button: GoogleAppsCardV1Button
        """

        self._button = button

    @property
    def end_icon(self):
        """Gets the end_icon of this GoogleAppsCardV1DecoratedText.


        :return: The end_icon of this GoogleAppsCardV1DecoratedText.
        :rtype: GoogleAppsCardV1Icon
        """
        return self._end_icon

    @end_icon.setter
    def end_icon(self, end_icon):
        """Sets the end_icon of this GoogleAppsCardV1DecoratedText.


        :param end_icon: The end_icon of this GoogleAppsCardV1DecoratedText.
        :type end_icon: GoogleAppsCardV1Icon
        """

        self._end_icon = end_icon

    @property
    def icon(self):
        """Gets the icon of this GoogleAppsCardV1DecoratedText.


        :return: The icon of this GoogleAppsCardV1DecoratedText.
        :rtype: GoogleAppsCardV1Icon
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this GoogleAppsCardV1DecoratedText.


        :param icon: The icon of this GoogleAppsCardV1DecoratedText.
        :type icon: GoogleAppsCardV1Icon
        """

        self._icon = icon

    @property
    def on_click(self):
        """Gets the on_click of this GoogleAppsCardV1DecoratedText.


        :return: The on_click of this GoogleAppsCardV1DecoratedText.
        :rtype: GoogleAppsCardV1OnClick
        """
        return self._on_click

    @on_click.setter
    def on_click(self, on_click):
        """Sets the on_click of this GoogleAppsCardV1DecoratedText.


        :param on_click: The on_click of this GoogleAppsCardV1DecoratedText.
        :type on_click: GoogleAppsCardV1OnClick
        """

        self._on_click = on_click

    @property
    def start_icon(self):
        """Gets the start_icon of this GoogleAppsCardV1DecoratedText.


        :return: The start_icon of this GoogleAppsCardV1DecoratedText.
        :rtype: GoogleAppsCardV1Icon
        """
        return self._start_icon

    @start_icon.setter
    def start_icon(self, start_icon):
        """Sets the start_icon of this GoogleAppsCardV1DecoratedText.


        :param start_icon: The start_icon of this GoogleAppsCardV1DecoratedText.
        :type start_icon: GoogleAppsCardV1Icon
        """

        self._start_icon = start_icon

    @property
    def switch_control(self):
        """Gets the switch_control of this GoogleAppsCardV1DecoratedText.


        :return: The switch_control of this GoogleAppsCardV1DecoratedText.
        :rtype: GoogleAppsCardV1SwitchControl
        """
        return self._switch_control

    @switch_control.setter
    def switch_control(self, switch_control):
        """Sets the switch_control of this GoogleAppsCardV1DecoratedText.


        :param switch_control: The switch_control of this GoogleAppsCardV1DecoratedText.
        :type switch_control: GoogleAppsCardV1SwitchControl
        """

        self._switch_control = switch_control

    @property
    def text(self):
        """Gets the text of this GoogleAppsCardV1DecoratedText.

        Required. The primary text. Supports simple formatting. For more information about formatting text, see [Formatting text in Google Chat apps](https://developers.google.com/chat/format-messages#card-formatting) and [Formatting text in Google Workspace Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).

        :return: The text of this GoogleAppsCardV1DecoratedText.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this GoogleAppsCardV1DecoratedText.

        Required. The primary text. Supports simple formatting. For more information about formatting text, see [Formatting text in Google Chat apps](https://developers.google.com/chat/format-messages#card-formatting) and [Formatting text in Google Workspace Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).

        :param text: The text of this GoogleAppsCardV1DecoratedText.
        :type text: str
        """

        self._text = text

    @property
    def top_label(self):
        """Gets the top_label of this GoogleAppsCardV1DecoratedText.

        The text that appears above `text`. Always truncates.

        :return: The top_label of this GoogleAppsCardV1DecoratedText.
        :rtype: str
        """
        return self._top_label

    @top_label.setter
    def top_label(self, top_label):
        """Sets the top_label of this GoogleAppsCardV1DecoratedText.

        The text that appears above `text`. Always truncates.

        :param top_label: The top_label of this GoogleAppsCardV1DecoratedText.
        :type top_label: str
        """

        self._top_label = top_label

    @property
    def wrap_text(self):
        """Gets the wrap_text of this GoogleAppsCardV1DecoratedText.

        The wrap text setting. If `true`, the text wraps and displays on multiple lines. Otherwise, the text is truncated. Only applies to `text`, not `topLabel` and `bottomLabel`.

        :return: The wrap_text of this GoogleAppsCardV1DecoratedText.
        :rtype: bool
        """
        return self._wrap_text

    @wrap_text.setter
    def wrap_text(self, wrap_text):
        """Sets the wrap_text of this GoogleAppsCardV1DecoratedText.

        The wrap text setting. If `true`, the text wraps and displays on multiple lines. Otherwise, the text is truncated. Only applies to `text`, not `topLabel` and `bottomLabel`.

        :param wrap_text: The wrap_text of this GoogleAppsCardV1DecoratedText.
        :type wrap_text: bool
        """

        self._wrap_text = wrap_text
