# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_apps_card_v1_card_action import GoogleAppsCardV1CardAction
from openapi_server.models.google_apps_card_v1_card_fixed_footer import GoogleAppsCardV1CardFixedFooter
from openapi_server.models.google_apps_card_v1_card_header import GoogleAppsCardV1CardHeader
from openapi_server.models.google_apps_card_v1_section import GoogleAppsCardV1Section
from openapi_server import util


class GoogleAppsCardV1Card(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, card_actions: List[GoogleAppsCardV1CardAction]=None, display_style: str=None, fixed_footer: GoogleAppsCardV1CardFixedFooter=None, header: GoogleAppsCardV1CardHeader=None, name: str=None, peek_card_header: GoogleAppsCardV1CardHeader=None, section_divider_style: str=None, sections: List[GoogleAppsCardV1Section]=None):
        """GoogleAppsCardV1Card - a model defined in OpenAPI

        :param card_actions: The card_actions of this GoogleAppsCardV1Card.
        :param display_style: The display_style of this GoogleAppsCardV1Card.
        :param fixed_footer: The fixed_footer of this GoogleAppsCardV1Card.
        :param header: The header of this GoogleAppsCardV1Card.
        :param name: The name of this GoogleAppsCardV1Card.
        :param peek_card_header: The peek_card_header of this GoogleAppsCardV1Card.
        :param section_divider_style: The section_divider_style of this GoogleAppsCardV1Card.
        :param sections: The sections of this GoogleAppsCardV1Card.
        """
        self.openapi_types = {
            'card_actions': List[GoogleAppsCardV1CardAction],
            'display_style': str,
            'fixed_footer': GoogleAppsCardV1CardFixedFooter,
            'header': GoogleAppsCardV1CardHeader,
            'name': str,
            'peek_card_header': GoogleAppsCardV1CardHeader,
            'section_divider_style': str,
            'sections': List[GoogleAppsCardV1Section]
        }

        self.attribute_map = {
            'card_actions': 'cardActions',
            'display_style': 'displayStyle',
            'fixed_footer': 'fixedFooter',
            'header': 'header',
            'name': 'name',
            'peek_card_header': 'peekCardHeader',
            'section_divider_style': 'sectionDividerStyle',
            'sections': 'sections'
        }

        self._card_actions = card_actions
        self._display_style = display_style
        self._fixed_footer = fixed_footer
        self._header = header
        self._name = name
        self._peek_card_header = peek_card_header
        self._section_divider_style = section_divider_style
        self._sections = sections

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsCardV1Card':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsCardV1Card of this GoogleAppsCardV1Card.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def card_actions(self):
        """Gets the card_actions of this GoogleAppsCardV1Card.

        The card's actions. Actions are added to the card's toolbar menu. [Google Workspace Add-ons](https://developers.google.com/workspace/add-ons): For example, the following JSON constructs a card action menu with `Settings` and `Send Feedback` options: ``` \"card_actions\": [ { \"actionLabel\": \"Settings\", \"onClick\": { \"action\": { \"functionName\": \"goToView\", \"parameters\": [ { \"key\": \"viewType\", \"value\": \"SETTING\" } ], \"loadIndicator\": \"LoadIndicator.SPINNER\" } } }, { \"actionLabel\": \"Send Feedback\", \"onClick\": { \"openLink\": { \"url\": \"https://example.com/feedback\" } } } ] ```

        :return: The card_actions of this GoogleAppsCardV1Card.
        :rtype: List[GoogleAppsCardV1CardAction]
        """
        return self._card_actions

    @card_actions.setter
    def card_actions(self, card_actions):
        """Sets the card_actions of this GoogleAppsCardV1Card.

        The card's actions. Actions are added to the card's toolbar menu. [Google Workspace Add-ons](https://developers.google.com/workspace/add-ons): For example, the following JSON constructs a card action menu with `Settings` and `Send Feedback` options: ``` \"card_actions\": [ { \"actionLabel\": \"Settings\", \"onClick\": { \"action\": { \"functionName\": \"goToView\", \"parameters\": [ { \"key\": \"viewType\", \"value\": \"SETTING\" } ], \"loadIndicator\": \"LoadIndicator.SPINNER\" } } }, { \"actionLabel\": \"Send Feedback\", \"onClick\": { \"openLink\": { \"url\": \"https://example.com/feedback\" } } } ] ```

        :param card_actions: The card_actions of this GoogleAppsCardV1Card.
        :type card_actions: List[GoogleAppsCardV1CardAction]
        """

        self._card_actions = card_actions

    @property
    def display_style(self):
        """Gets the display_style of this GoogleAppsCardV1Card.

        In Google Workspace Add-ons, sets the display properties of the `peekCardHeader`. [Google Workspace Add-ons](https://developers.google.com/workspace/add-ons):

        :return: The display_style of this GoogleAppsCardV1Card.
        :rtype: str
        """
        return self._display_style

    @display_style.setter
    def display_style(self, display_style):
        """Sets the display_style of this GoogleAppsCardV1Card.

        In Google Workspace Add-ons, sets the display properties of the `peekCardHeader`. [Google Workspace Add-ons](https://developers.google.com/workspace/add-ons):

        :param display_style: The display_style of this GoogleAppsCardV1Card.
        :type display_style: str
        """
        allowed_values = ["DISPLAY_STYLE_UNSPECIFIED", "PEEK", "REPLACE"]  # noqa: E501
        if display_style not in allowed_values:
            raise ValueError(
                "Invalid value for `display_style` ({0}), must be one of {1}"
                .format(display_style, allowed_values)
            )

        self._display_style = display_style

    @property
    def fixed_footer(self):
        """Gets the fixed_footer of this GoogleAppsCardV1Card.


        :return: The fixed_footer of this GoogleAppsCardV1Card.
        :rtype: GoogleAppsCardV1CardFixedFooter
        """
        return self._fixed_footer

    @fixed_footer.setter
    def fixed_footer(self, fixed_footer):
        """Sets the fixed_footer of this GoogleAppsCardV1Card.


        :param fixed_footer: The fixed_footer of this GoogleAppsCardV1Card.
        :type fixed_footer: GoogleAppsCardV1CardFixedFooter
        """

        self._fixed_footer = fixed_footer

    @property
    def header(self):
        """Gets the header of this GoogleAppsCardV1Card.


        :return: The header of this GoogleAppsCardV1Card.
        :rtype: GoogleAppsCardV1CardHeader
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this GoogleAppsCardV1Card.


        :param header: The header of this GoogleAppsCardV1Card.
        :type header: GoogleAppsCardV1CardHeader
        """

        self._header = header

    @property
    def name(self):
        """Gets the name of this GoogleAppsCardV1Card.

        Name of the card. Used as a card identifier in card navigation. [Google Workspace Add-ons](https://developers.google.com/workspace/add-ons):

        :return: The name of this GoogleAppsCardV1Card.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAppsCardV1Card.

        Name of the card. Used as a card identifier in card navigation. [Google Workspace Add-ons](https://developers.google.com/workspace/add-ons):

        :param name: The name of this GoogleAppsCardV1Card.
        :type name: str
        """

        self._name = name

    @property
    def peek_card_header(self):
        """Gets the peek_card_header of this GoogleAppsCardV1Card.


        :return: The peek_card_header of this GoogleAppsCardV1Card.
        :rtype: GoogleAppsCardV1CardHeader
        """
        return self._peek_card_header

    @peek_card_header.setter
    def peek_card_header(self, peek_card_header):
        """Sets the peek_card_header of this GoogleAppsCardV1Card.


        :param peek_card_header: The peek_card_header of this GoogleAppsCardV1Card.
        :type peek_card_header: GoogleAppsCardV1CardHeader
        """

        self._peek_card_header = peek_card_header

    @property
    def section_divider_style(self):
        """Gets the section_divider_style of this GoogleAppsCardV1Card.

        The divider style between sections.

        :return: The section_divider_style of this GoogleAppsCardV1Card.
        :rtype: str
        """
        return self._section_divider_style

    @section_divider_style.setter
    def section_divider_style(self, section_divider_style):
        """Sets the section_divider_style of this GoogleAppsCardV1Card.

        The divider style between sections.

        :param section_divider_style: The section_divider_style of this GoogleAppsCardV1Card.
        :type section_divider_style: str
        """
        allowed_values = ["DIVIDER_STYLE_UNSPECIFIED", "SOLID_DIVIDER", "NO_DIVIDER"]  # noqa: E501
        if section_divider_style not in allowed_values:
            raise ValueError(
                "Invalid value for `section_divider_style` ({0}), must be one of {1}"
                .format(section_divider_style, allowed_values)
            )

        self._section_divider_style = section_divider_style

    @property
    def sections(self):
        """Gets the sections of this GoogleAppsCardV1Card.

        Contains a collection of widgets. Each section has its own, optional header. Sections are visually separated by a line divider. For an example in Google Chat apps, see [Card section](https://developers.google.com/chat/ui/widgets/card-section).

        :return: The sections of this GoogleAppsCardV1Card.
        :rtype: List[GoogleAppsCardV1Section]
        """
        return self._sections

    @sections.setter
    def sections(self, sections):
        """Sets the sections of this GoogleAppsCardV1Card.

        Contains a collection of widgets. Each section has its own, optional header. Sections are visually separated by a line divider. For an example in Google Chat apps, see [Card section](https://developers.google.com/chat/ui/widgets/card-section).

        :param sections: The sections of this GoogleAppsCardV1Card.
        :type sections: List[GoogleAppsCardV1Section]
        """

        self._sections = sections
