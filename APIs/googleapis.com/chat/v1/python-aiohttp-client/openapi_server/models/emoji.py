# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_emoji import CustomEmoji
from openapi_server import util


class Emoji(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_emoji: CustomEmoji=None, unicode: str=None):
        """Emoji - a model defined in OpenAPI

        :param custom_emoji: The custom_emoji of this Emoji.
        :param unicode: The unicode of this Emoji.
        """
        self.openapi_types = {
            'custom_emoji': CustomEmoji,
            'unicode': str
        }

        self.attribute_map = {
            'custom_emoji': 'customEmoji',
            'unicode': 'unicode'
        }

        self._custom_emoji = custom_emoji
        self._unicode = unicode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Emoji':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Emoji of this Emoji.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_emoji(self):
        """Gets the custom_emoji of this Emoji.


        :return: The custom_emoji of this Emoji.
        :rtype: CustomEmoji
        """
        return self._custom_emoji

    @custom_emoji.setter
    def custom_emoji(self, custom_emoji):
        """Sets the custom_emoji of this Emoji.


        :param custom_emoji: The custom_emoji of this Emoji.
        :type custom_emoji: CustomEmoji
        """

        self._custom_emoji = custom_emoji

    @property
    def unicode(self):
        """Gets the unicode of this Emoji.

        A basic emoji represented by a unicode string.

        :return: The unicode of this Emoji.
        :rtype: str
        """
        return self._unicode

    @unicode.setter
    def unicode(self, unicode):
        """Sets the unicode of this Emoji.

        A basic emoji represented by a unicode string.

        :param unicode: The unicode of this Emoji.
        :type unicode: str
        """

        self._unicode = unicode
