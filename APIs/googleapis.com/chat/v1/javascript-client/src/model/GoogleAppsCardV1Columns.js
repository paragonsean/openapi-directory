/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAppsCardV1Column from './GoogleAppsCardV1Column';

/**
 * The GoogleAppsCardV1Columns model module.
 * @module model/GoogleAppsCardV1Columns
 * @version v1
 */
class GoogleAppsCardV1Columns {
    /**
     * Constructs a new <code>GoogleAppsCardV1Columns</code>.
     * The &#x60;Columns&#x60; widget displays up to 2 columns in a card or dialog. You can add widgets to each column; the widgets appear in the order that they are specified. For an example in Google Chat apps, see [Columns](https://developers.google.com/chat/ui/widgets/columns). The height of each column is determined by the taller column. For example, if the first column is taller than the second column, both columns have the height of the first column. Because each column can contain a different number of widgets, you can&#39;t define rows or align widgets between the columns. Columns are displayed side-by-side. You can customize the width of each column using the &#x60;HorizontalSizeStyle&#x60; field. If the user&#39;s screen width is too narrow, the second column wraps below the first: * On web, the second column wraps if the screen width is less than or equal to 480 pixels. * On iOS devices, the second column wraps if the screen width is less than or equal to 300 pt. * On Android devices, the second column wraps if the screen width is less than or equal to 320 dp. To include more than 2 columns, or to use rows, use the &#x60;Grid&#x60; widget. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend): Columns for Google Workspace Add-ons are in [Developer Preview](https://developers.google.com/workspace/preview).
     * @alias module:model/GoogleAppsCardV1Columns
     */
    constructor() { 
        
        GoogleAppsCardV1Columns.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsCardV1Columns</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsCardV1Columns} obj Optional instance to populate.
     * @return {module:model/GoogleAppsCardV1Columns} The populated <code>GoogleAppsCardV1Columns</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsCardV1Columns();

            if (data.hasOwnProperty('columnItems')) {
                obj['columnItems'] = ApiClient.convertToType(data['columnItems'], [GoogleAppsCardV1Column]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsCardV1Columns</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsCardV1Columns</code>.
     */
    static validateJSON(data) {
        if (data['columnItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['columnItems'])) {
                throw new Error("Expected the field `columnItems` to be an array in the JSON data but got " + data['columnItems']);
            }
            // validate the optional field `columnItems` (array)
            for (const item of data['columnItems']) {
                GoogleAppsCardV1Column.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * An array of columns. You can include up to 2 columns in a card or dialog.
 * @member {Array.<module:model/GoogleAppsCardV1Column>} columnItems
 */
GoogleAppsCardV1Columns.prototype['columnItems'] = undefined;






export default GoogleAppsCardV1Columns;

