/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Color from './Color';
import GoogleAppsCardV1Icon from './GoogleAppsCardV1Icon';
import GoogleAppsCardV1OnClick from './GoogleAppsCardV1OnClick';

/**
 * The GoogleAppsCardV1Button model module.
 * @module model/GoogleAppsCardV1Button
 * @version v1
 */
class GoogleAppsCardV1Button {
    /**
     * Constructs a new <code>GoogleAppsCardV1Button</code>.
     * A text, icon, or text and icon button that users can click. For an example in Google Chat apps, see [Button list](https://developers.google.com/chat/ui/widgets/button-list). To make an image a clickable button, specify an &#x60;Image&#x60; (not an &#x60;ImageComponent&#x60;) and set an &#x60;onClick&#x60; action. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):
     * @alias module:model/GoogleAppsCardV1Button
     */
    constructor() { 
        
        GoogleAppsCardV1Button.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsCardV1Button</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsCardV1Button} obj Optional instance to populate.
     * @return {module:model/GoogleAppsCardV1Button} The populated <code>GoogleAppsCardV1Button</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsCardV1Button();

            if (data.hasOwnProperty('altText')) {
                obj['altText'] = ApiClient.convertToType(data['altText'], 'String');
            }
            if (data.hasOwnProperty('color')) {
                obj['color'] = Color.constructFromObject(data['color']);
            }
            if (data.hasOwnProperty('disabled')) {
                obj['disabled'] = ApiClient.convertToType(data['disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('icon')) {
                obj['icon'] = GoogleAppsCardV1Icon.constructFromObject(data['icon']);
            }
            if (data.hasOwnProperty('onClick')) {
                obj['onClick'] = GoogleAppsCardV1OnClick.constructFromObject(data['onClick']);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsCardV1Button</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsCardV1Button</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['altText'] && !(typeof data['altText'] === 'string' || data['altText'] instanceof String)) {
            throw new Error("Expected the field `altText` to be a primitive type in the JSON string but got " + data['altText']);
        }
        // validate the optional field `color`
        if (data['color']) { // data not null
          Color.validateJSON(data['color']);
        }
        // validate the optional field `icon`
        if (data['icon']) { // data not null
          GoogleAppsCardV1Icon.validateJSON(data['icon']);
        }
        // validate the optional field `onClick`
        if (data['onClick']) { // data not null
          GoogleAppsCardV1OnClick.validateJSON(data['onClick']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }

        return true;
    }


}



/**
 * The alternative text that's used for accessibility. Set descriptive text that lets users know what the button does. For example, if a button opens a hyperlink, you might write: \"Opens a new browser tab and navigates to the Google Chat developer documentation at https://developers.google.com/chat\".
 * @member {String} altText
 */
GoogleAppsCardV1Button.prototype['altText'] = undefined;

/**
 * @member {module:model/Color} color
 */
GoogleAppsCardV1Button.prototype['color'] = undefined;

/**
 * If `true`, the button is displayed in an inactive state and doesn't respond to user actions.
 * @member {Boolean} disabled
 */
GoogleAppsCardV1Button.prototype['disabled'] = undefined;

/**
 * @member {module:model/GoogleAppsCardV1Icon} icon
 */
GoogleAppsCardV1Button.prototype['icon'] = undefined;

/**
 * @member {module:model/GoogleAppsCardV1OnClick} onClick
 */
GoogleAppsCardV1Button.prototype['onClick'] = undefined;

/**
 * The text displayed inside the button.
 * @member {String} text
 */
GoogleAppsCardV1Button.prototype['text'] = undefined;






export default GoogleAppsCardV1Button;

