/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SpaceDataSource model module.
 * @module model/SpaceDataSource
 * @version v1
 */
class SpaceDataSource {
    /**
     * Constructs a new <code>SpaceDataSource</code>.
     * A data source that populates Google Chat spaces as selection items for a multiselect menu. Only populates spaces that the user is a member of. [Google Chat apps](https://developers.google.com/chat):
     * @alias module:model/SpaceDataSource
     */
    constructor() { 
        
        SpaceDataSource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SpaceDataSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpaceDataSource} obj Optional instance to populate.
     * @return {module:model/SpaceDataSource} The populated <code>SpaceDataSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpaceDataSource();

            if (data.hasOwnProperty('defaultToCurrentSpace')) {
                obj['defaultToCurrentSpace'] = ApiClient.convertToType(data['defaultToCurrentSpace'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SpaceDataSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SpaceDataSource</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * If set to `true`, the multiselect menu selects the current Google Chat space as an item by default.
 * @member {Boolean} defaultToCurrentSpace
 */
SpaceDataSource.prototype['defaultToCurrentSpace'] = undefined;






export default SpaceDataSource;

