/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAppsCardV1Button from './GoogleAppsCardV1Button';
import GoogleAppsCardV1Icon from './GoogleAppsCardV1Icon';
import GoogleAppsCardV1OnClick from './GoogleAppsCardV1OnClick';
import GoogleAppsCardV1SwitchControl from './GoogleAppsCardV1SwitchControl';

/**
 * The GoogleAppsCardV1DecoratedText model module.
 * @module model/GoogleAppsCardV1DecoratedText
 * @version v1
 */
class GoogleAppsCardV1DecoratedText {
    /**
     * Constructs a new <code>GoogleAppsCardV1DecoratedText</code>.
     * A widget that displays text with optional decorations such as a label above or below the text, an icon in front of the text, a selection widget, or a button after the text. For an example in Google Chat apps, see [Decorated text](https://developers.google.com/chat/ui/widgets/decorated-text). [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):
     * @alias module:model/GoogleAppsCardV1DecoratedText
     */
    constructor() { 
        
        GoogleAppsCardV1DecoratedText.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsCardV1DecoratedText</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsCardV1DecoratedText} obj Optional instance to populate.
     * @return {module:model/GoogleAppsCardV1DecoratedText} The populated <code>GoogleAppsCardV1DecoratedText</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsCardV1DecoratedText();

            if (data.hasOwnProperty('bottomLabel')) {
                obj['bottomLabel'] = ApiClient.convertToType(data['bottomLabel'], 'String');
            }
            if (data.hasOwnProperty('button')) {
                obj['button'] = GoogleAppsCardV1Button.constructFromObject(data['button']);
            }
            if (data.hasOwnProperty('endIcon')) {
                obj['endIcon'] = GoogleAppsCardV1Icon.constructFromObject(data['endIcon']);
            }
            if (data.hasOwnProperty('icon')) {
                obj['icon'] = GoogleAppsCardV1Icon.constructFromObject(data['icon']);
            }
            if (data.hasOwnProperty('onClick')) {
                obj['onClick'] = GoogleAppsCardV1OnClick.constructFromObject(data['onClick']);
            }
            if (data.hasOwnProperty('startIcon')) {
                obj['startIcon'] = GoogleAppsCardV1Icon.constructFromObject(data['startIcon']);
            }
            if (data.hasOwnProperty('switchControl')) {
                obj['switchControl'] = GoogleAppsCardV1SwitchControl.constructFromObject(data['switchControl']);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('topLabel')) {
                obj['topLabel'] = ApiClient.convertToType(data['topLabel'], 'String');
            }
            if (data.hasOwnProperty('wrapText')) {
                obj['wrapText'] = ApiClient.convertToType(data['wrapText'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsCardV1DecoratedText</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsCardV1DecoratedText</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bottomLabel'] && !(typeof data['bottomLabel'] === 'string' || data['bottomLabel'] instanceof String)) {
            throw new Error("Expected the field `bottomLabel` to be a primitive type in the JSON string but got " + data['bottomLabel']);
        }
        // validate the optional field `button`
        if (data['button']) { // data not null
          GoogleAppsCardV1Button.validateJSON(data['button']);
        }
        // validate the optional field `endIcon`
        if (data['endIcon']) { // data not null
          GoogleAppsCardV1Icon.validateJSON(data['endIcon']);
        }
        // validate the optional field `icon`
        if (data['icon']) { // data not null
          GoogleAppsCardV1Icon.validateJSON(data['icon']);
        }
        // validate the optional field `onClick`
        if (data['onClick']) { // data not null
          GoogleAppsCardV1OnClick.validateJSON(data['onClick']);
        }
        // validate the optional field `startIcon`
        if (data['startIcon']) { // data not null
          GoogleAppsCardV1Icon.validateJSON(data['startIcon']);
        }
        // validate the optional field `switchControl`
        if (data['switchControl']) { // data not null
          GoogleAppsCardV1SwitchControl.validateJSON(data['switchControl']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['topLabel'] && !(typeof data['topLabel'] === 'string' || data['topLabel'] instanceof String)) {
            throw new Error("Expected the field `topLabel` to be a primitive type in the JSON string but got " + data['topLabel']);
        }

        return true;
    }


}



/**
 * The text that appears below `text`. Always wraps.
 * @member {String} bottomLabel
 */
GoogleAppsCardV1DecoratedText.prototype['bottomLabel'] = undefined;

/**
 * @member {module:model/GoogleAppsCardV1Button} button
 */
GoogleAppsCardV1DecoratedText.prototype['button'] = undefined;

/**
 * @member {module:model/GoogleAppsCardV1Icon} endIcon
 */
GoogleAppsCardV1DecoratedText.prototype['endIcon'] = undefined;

/**
 * @member {module:model/GoogleAppsCardV1Icon} icon
 */
GoogleAppsCardV1DecoratedText.prototype['icon'] = undefined;

/**
 * @member {module:model/GoogleAppsCardV1OnClick} onClick
 */
GoogleAppsCardV1DecoratedText.prototype['onClick'] = undefined;

/**
 * @member {module:model/GoogleAppsCardV1Icon} startIcon
 */
GoogleAppsCardV1DecoratedText.prototype['startIcon'] = undefined;

/**
 * @member {module:model/GoogleAppsCardV1SwitchControl} switchControl
 */
GoogleAppsCardV1DecoratedText.prototype['switchControl'] = undefined;

/**
 * Required. The primary text. Supports simple formatting. For more information about formatting text, see [Formatting text in Google Chat apps](https://developers.google.com/chat/format-messages#card-formatting) and [Formatting text in Google Workspace Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).
 * @member {String} text
 */
GoogleAppsCardV1DecoratedText.prototype['text'] = undefined;

/**
 * The text that appears above `text`. Always truncates.
 * @member {String} topLabel
 */
GoogleAppsCardV1DecoratedText.prototype['topLabel'] = undefined;

/**
 * The wrap text setting. If `true`, the text wraps and displays on multiple lines. Otherwise, the text is truncated. Only applies to `text`, not `topLabel` and `bottomLabel`.
 * @member {Boolean} wrapText
 */
GoogleAppsCardV1DecoratedText.prototype['wrapText'] = undefined;






export default GoogleAppsCardV1DecoratedText;

