/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleAppsCardV1SelectionItem model module.
 * @module model/GoogleAppsCardV1SelectionItem
 * @version v1
 */
class GoogleAppsCardV1SelectionItem {
    /**
     * Constructs a new <code>GoogleAppsCardV1SelectionItem</code>.
     * An item that users can select in a selection input, such as a checkbox or switch. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):
     * @alias module:model/GoogleAppsCardV1SelectionItem
     */
    constructor() { 
        
        GoogleAppsCardV1SelectionItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsCardV1SelectionItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsCardV1SelectionItem} obj Optional instance to populate.
     * @return {module:model/GoogleAppsCardV1SelectionItem} The populated <code>GoogleAppsCardV1SelectionItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsCardV1SelectionItem();

            if (data.hasOwnProperty('bottomText')) {
                obj['bottomText'] = ApiClient.convertToType(data['bottomText'], 'String');
            }
            if (data.hasOwnProperty('selected')) {
                obj['selected'] = ApiClient.convertToType(data['selected'], 'Boolean');
            }
            if (data.hasOwnProperty('startIconUri')) {
                obj['startIconUri'] = ApiClient.convertToType(data['startIconUri'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsCardV1SelectionItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsCardV1SelectionItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bottomText'] && !(typeof data['bottomText'] === 'string' || data['bottomText'] instanceof String)) {
            throw new Error("Expected the field `bottomText` to be a primitive type in the JSON string but got " + data['bottomText']);
        }
        // ensure the json data is a string
        if (data['startIconUri'] && !(typeof data['startIconUri'] === 'string' || data['startIconUri'] instanceof String)) {
            throw new Error("Expected the field `startIconUri` to be a primitive type in the JSON string but got " + data['startIconUri']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * For multiselect menus, a text description or label that's displayed below the item's `text` field.
 * @member {String} bottomText
 */
GoogleAppsCardV1SelectionItem.prototype['bottomText'] = undefined;

/**
 * Whether the item is selected by default. If the selection input only accepts one value (such as for radio buttons or a dropdown menu), only set this field for one item.
 * @member {Boolean} selected
 */
GoogleAppsCardV1SelectionItem.prototype['selected'] = undefined;

/**
 * For multiselect menus, the URL for the icon displayed next to the item's `text` field. Supports PNG and JPEG files. Must be an `HTTPS` URL. For example, `https://developers.google.com/chat/images/quickstart-app-avatar.png`.
 * @member {String} startIconUri
 */
GoogleAppsCardV1SelectionItem.prototype['startIconUri'] = undefined;

/**
 * The text that identifies or describes the item to users.
 * @member {String} text
 */
GoogleAppsCardV1SelectionItem.prototype['text'] = undefined;

/**
 * The value associated with this item. The client should use this as a form input value. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/ui/read-form-data).
 * @member {String} value
 */
GoogleAppsCardV1SelectionItem.prototype['value'] = undefined;






export default GoogleAppsCardV1SelectionItem;

