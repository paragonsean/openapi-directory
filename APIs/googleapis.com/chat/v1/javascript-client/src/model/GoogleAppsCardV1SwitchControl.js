/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAppsCardV1Action from './GoogleAppsCardV1Action';

/**
 * The GoogleAppsCardV1SwitchControl model module.
 * @module model/GoogleAppsCardV1SwitchControl
 * @version v1
 */
class GoogleAppsCardV1SwitchControl {
    /**
     * Constructs a new <code>GoogleAppsCardV1SwitchControl</code>.
     * Either a toggle-style switch or a checkbox inside a &#x60;decoratedText&#x60; widget. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend): Only supported in the &#x60;decoratedText&#x60; widget.
     * @alias module:model/GoogleAppsCardV1SwitchControl
     */
    constructor() { 
        
        GoogleAppsCardV1SwitchControl.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsCardV1SwitchControl</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsCardV1SwitchControl} obj Optional instance to populate.
     * @return {module:model/GoogleAppsCardV1SwitchControl} The populated <code>GoogleAppsCardV1SwitchControl</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsCardV1SwitchControl();

            if (data.hasOwnProperty('controlType')) {
                obj['controlType'] = ApiClient.convertToType(data['controlType'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('onChangeAction')) {
                obj['onChangeAction'] = GoogleAppsCardV1Action.constructFromObject(data['onChangeAction']);
            }
            if (data.hasOwnProperty('selected')) {
                obj['selected'] = ApiClient.convertToType(data['selected'], 'Boolean');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsCardV1SwitchControl</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsCardV1SwitchControl</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['controlType'] && !(typeof data['controlType'] === 'string' || data['controlType'] instanceof String)) {
            throw new Error("Expected the field `controlType` to be a primitive type in the JSON string but got " + data['controlType']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `onChangeAction`
        if (data['onChangeAction']) { // data not null
          GoogleAppsCardV1Action.validateJSON(data['onChangeAction']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * How the switch appears in the user interface. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):
 * @member {module:model/GoogleAppsCardV1SwitchControl.ControlTypeEnum} controlType
 */
GoogleAppsCardV1SwitchControl.prototype['controlType'] = undefined;

/**
 * The name by which the switch widget is identified in a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/ui/read-form-data).
 * @member {String} name
 */
GoogleAppsCardV1SwitchControl.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleAppsCardV1Action} onChangeAction
 */
GoogleAppsCardV1SwitchControl.prototype['onChangeAction'] = undefined;

/**
 * When `true`, the switch is selected.
 * @member {Boolean} selected
 */
GoogleAppsCardV1SwitchControl.prototype['selected'] = undefined;

/**
 * The value entered by a user, returned as part of a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/ui/read-form-data).
 * @member {String} value
 */
GoogleAppsCardV1SwitchControl.prototype['value'] = undefined;





/**
 * Allowed values for the <code>controlType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAppsCardV1SwitchControl['ControlTypeEnum'] = {

    /**
     * value: "SWITCH"
     * @const
     */
    "SWITCH": "SWITCH",

    /**
     * value: "CHECKBOX"
     * @const
     */
    "CHECKBOX": "CHECKBOX",

    /**
     * value: "CHECK_BOX"
     * @const
     */
    "CHECK_BOX": "CHECK_BOX"
};



export default GoogleAppsCardV1SwitchControl;

