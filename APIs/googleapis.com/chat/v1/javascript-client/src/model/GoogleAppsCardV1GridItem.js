/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAppsCardV1ImageComponent from './GoogleAppsCardV1ImageComponent';

/**
 * The GoogleAppsCardV1GridItem model module.
 * @module model/GoogleAppsCardV1GridItem
 * @version v1
 */
class GoogleAppsCardV1GridItem {
    /**
     * Constructs a new <code>GoogleAppsCardV1GridItem</code>.
     * Represents an item in a grid layout. Items can contain text, an image, or both text and an image. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):
     * @alias module:model/GoogleAppsCardV1GridItem
     */
    constructor() { 
        
        GoogleAppsCardV1GridItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsCardV1GridItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsCardV1GridItem} obj Optional instance to populate.
     * @return {module:model/GoogleAppsCardV1GridItem} The populated <code>GoogleAppsCardV1GridItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsCardV1GridItem();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = GoogleAppsCardV1ImageComponent.constructFromObject(data['image']);
            }
            if (data.hasOwnProperty('layout')) {
                obj['layout'] = ApiClient.convertToType(data['layout'], 'String');
            }
            if (data.hasOwnProperty('subtitle')) {
                obj['subtitle'] = ApiClient.convertToType(data['subtitle'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsCardV1GridItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsCardV1GridItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `image`
        if (data['image']) { // data not null
          GoogleAppsCardV1ImageComponent.validateJSON(data['image']);
        }
        // ensure the json data is a string
        if (data['layout'] && !(typeof data['layout'] === 'string' || data['layout'] instanceof String)) {
            throw new Error("Expected the field `layout` to be a primitive type in the JSON string but got " + data['layout']);
        }
        // ensure the json data is a string
        if (data['subtitle'] && !(typeof data['subtitle'] === 'string' || data['subtitle'] instanceof String)) {
            throw new Error("Expected the field `subtitle` to be a primitive type in the JSON string but got " + data['subtitle']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * A user-specified identifier for this grid item. This identifier is returned in the parent grid's `onClick` callback parameters.
 * @member {String} id
 */
GoogleAppsCardV1GridItem.prototype['id'] = undefined;

/**
 * @member {module:model/GoogleAppsCardV1ImageComponent} image
 */
GoogleAppsCardV1GridItem.prototype['image'] = undefined;

/**
 * The layout to use for the grid item.
 * @member {module:model/GoogleAppsCardV1GridItem.LayoutEnum} layout
 */
GoogleAppsCardV1GridItem.prototype['layout'] = undefined;

/**
 * The grid item's subtitle.
 * @member {String} subtitle
 */
GoogleAppsCardV1GridItem.prototype['subtitle'] = undefined;

/**
 * The grid item's title.
 * @member {String} title
 */
GoogleAppsCardV1GridItem.prototype['title'] = undefined;





/**
 * Allowed values for the <code>layout</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAppsCardV1GridItem['LayoutEnum'] = {

    /**
     * value: "GRID_ITEM_LAYOUT_UNSPECIFIED"
     * @const
     */
    "GRID_ITEM_LAYOUT_UNSPECIFIED": "GRID_ITEM_LAYOUT_UNSPECIFIED",

    /**
     * value: "TEXT_BELOW"
     * @const
     */
    "TEXT_BELOW": "TEXT_BELOW",

    /**
     * value: "TEXT_ABOVE"
     * @const
     */
    "TEXT_ABOVE": "TEXT_ABOVE"
};



export default GoogleAppsCardV1GridItem;

