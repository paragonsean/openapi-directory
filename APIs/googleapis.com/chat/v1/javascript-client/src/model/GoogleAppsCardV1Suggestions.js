/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAppsCardV1SuggestionItem from './GoogleAppsCardV1SuggestionItem';

/**
 * The GoogleAppsCardV1Suggestions model module.
 * @module model/GoogleAppsCardV1Suggestions
 * @version v1
 */
class GoogleAppsCardV1Suggestions {
    /**
     * Constructs a new <code>GoogleAppsCardV1Suggestions</code>.
     * Suggested values that users can enter. These values appear when users click inside the text input field. As users type, the suggested values dynamically filter to match what the users have typed. For example, a text input field for programming language might suggest Java, JavaScript, Python, and C++. When users start typing &#x60;Jav&#x60;, the list of suggestions filters to show &#x60;Java&#x60; and &#x60;JavaScript&#x60;. Suggested values help guide users to enter values that your app can make sense of. When referring to JavaScript, some users might enter &#x60;javascript&#x60; and others &#x60;java script&#x60;. Suggesting &#x60;JavaScript&#x60; can standardize how users interact with your app. When specified, &#x60;TextInput.type&#x60; is always &#x60;SINGLE_LINE&#x60;, even if it&#39;s set to &#x60;MULTIPLE_LINE&#x60;. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):
     * @alias module:model/GoogleAppsCardV1Suggestions
     */
    constructor() { 
        
        GoogleAppsCardV1Suggestions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsCardV1Suggestions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsCardV1Suggestions} obj Optional instance to populate.
     * @return {module:model/GoogleAppsCardV1Suggestions} The populated <code>GoogleAppsCardV1Suggestions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsCardV1Suggestions();

            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [GoogleAppsCardV1SuggestionItem]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsCardV1Suggestions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsCardV1Suggestions</code>.
     */
    static validateJSON(data) {
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                GoogleAppsCardV1SuggestionItem.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A list of suggestions used for autocomplete recommendations in text input fields.
 * @member {Array.<module:model/GoogleAppsCardV1SuggestionItem>} items
 */
GoogleAppsCardV1Suggestions.prototype['items'] = undefined;






export default GoogleAppsCardV1Suggestions;

