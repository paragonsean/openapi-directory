/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleAppsCardV1Icon model module.
 * @module model/GoogleAppsCardV1Icon
 * @version v1
 */
class GoogleAppsCardV1Icon {
    /**
     * Constructs a new <code>GoogleAppsCardV1Icon</code>.
     * An icon displayed in a widget on a card. For an example in Google Chat apps, see [Icon](https://developers.google.com/chat/ui/widgets/icon). Supports [built-in](https://developers.google.com/chat/format-messages#builtinicons) and [custom](https://developers.google.com/chat/format-messages#customicons) icons. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):
     * @alias module:model/GoogleAppsCardV1Icon
     */
    constructor() { 
        
        GoogleAppsCardV1Icon.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsCardV1Icon</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsCardV1Icon} obj Optional instance to populate.
     * @return {module:model/GoogleAppsCardV1Icon} The populated <code>GoogleAppsCardV1Icon</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsCardV1Icon();

            if (data.hasOwnProperty('altText')) {
                obj['altText'] = ApiClient.convertToType(data['altText'], 'String');
            }
            if (data.hasOwnProperty('iconUrl')) {
                obj['iconUrl'] = ApiClient.convertToType(data['iconUrl'], 'String');
            }
            if (data.hasOwnProperty('imageType')) {
                obj['imageType'] = ApiClient.convertToType(data['imageType'], 'String');
            }
            if (data.hasOwnProperty('knownIcon')) {
                obj['knownIcon'] = ApiClient.convertToType(data['knownIcon'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsCardV1Icon</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsCardV1Icon</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['altText'] && !(typeof data['altText'] === 'string' || data['altText'] instanceof String)) {
            throw new Error("Expected the field `altText` to be a primitive type in the JSON string but got " + data['altText']);
        }
        // ensure the json data is a string
        if (data['iconUrl'] && !(typeof data['iconUrl'] === 'string' || data['iconUrl'] instanceof String)) {
            throw new Error("Expected the field `iconUrl` to be a primitive type in the JSON string but got " + data['iconUrl']);
        }
        // ensure the json data is a string
        if (data['imageType'] && !(typeof data['imageType'] === 'string' || data['imageType'] instanceof String)) {
            throw new Error("Expected the field `imageType` to be a primitive type in the JSON string but got " + data['imageType']);
        }
        // ensure the json data is a string
        if (data['knownIcon'] && !(typeof data['knownIcon'] === 'string' || data['knownIcon'] instanceof String)) {
            throw new Error("Expected the field `knownIcon` to be a primitive type in the JSON string but got " + data['knownIcon']);
        }

        return true;
    }


}



/**
 * Optional. A description of the icon used for accessibility. If unspecified, the default value `Button` is provided. As a best practice, you should set a helpful description for what the icon displays, and if applicable, what it does. For example, `A user's account portrait`, or `Opens a new browser tab and navigates to the Google Chat developer documentation at https://developers.google.com/chat`. If the icon is set in a `Button`, the `altText` appears as helper text when the user hovers over the button. However, if the button also sets `text`, the icon's `altText` is ignored.
 * @member {String} altText
 */
GoogleAppsCardV1Icon.prototype['altText'] = undefined;

/**
 * Display a custom icon hosted at an HTTPS URL. For example: ``` \"iconUrl\": \"https://developers.google.com/chat/images/quickstart-app-avatar.png\" ``` Supported file types include `.png` and `.jpg`.
 * @member {String} iconUrl
 */
GoogleAppsCardV1Icon.prototype['iconUrl'] = undefined;

/**
 * The crop style applied to the image. In some cases, applying a `CIRCLE` crop causes the image to be drawn larger than a built-in icon.
 * @member {module:model/GoogleAppsCardV1Icon.ImageTypeEnum} imageType
 */
GoogleAppsCardV1Icon.prototype['imageType'] = undefined;

/**
 * Display one of the built-in icons provided by Google Workspace. For example, to display an airplane icon, specify `AIRPLANE`. For a bus, specify `BUS`. For a full list of supported icons, see [built-in icons](https://developers.google.com/chat/format-messages#builtinicons).
 * @member {String} knownIcon
 */
GoogleAppsCardV1Icon.prototype['knownIcon'] = undefined;





/**
 * Allowed values for the <code>imageType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAppsCardV1Icon['ImageTypeEnum'] = {

    /**
     * value: "SQUARE"
     * @const
     */
    "SQUARE": "SQUARE",

    /**
     * value: "CIRCLE"
     * @const
     */
    "CIRCLE": "CIRCLE"
};



export default GoogleAppsCardV1Icon;

