/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateInput from './DateInput';
import DateTimeInput from './DateTimeInput';
import StringInputs from './StringInputs';
import TimeInput from './TimeInput';

/**
 * The Inputs model module.
 * @module model/Inputs
 * @version v1
 */
class Inputs {
    /**
     * Constructs a new <code>Inputs</code>.
     * Types of data that users can [input on cards or dialogs](https://developers.google.com/chat/ui/read-form-data). The input type depends on the type of values that the widget accepts.
     * @alias module:model/Inputs
     */
    constructor() { 
        
        Inputs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Inputs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Inputs} obj Optional instance to populate.
     * @return {module:model/Inputs} The populated <code>Inputs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Inputs();

            if (data.hasOwnProperty('dateInput')) {
                obj['dateInput'] = DateInput.constructFromObject(data['dateInput']);
            }
            if (data.hasOwnProperty('dateTimeInput')) {
                obj['dateTimeInput'] = DateTimeInput.constructFromObject(data['dateTimeInput']);
            }
            if (data.hasOwnProperty('stringInputs')) {
                obj['stringInputs'] = StringInputs.constructFromObject(data['stringInputs']);
            }
            if (data.hasOwnProperty('timeInput')) {
                obj['timeInput'] = TimeInput.constructFromObject(data['timeInput']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Inputs</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Inputs</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dateInput`
        if (data['dateInput']) { // data not null
          DateInput.validateJSON(data['dateInput']);
        }
        // validate the optional field `dateTimeInput`
        if (data['dateTimeInput']) { // data not null
          DateTimeInput.validateJSON(data['dateTimeInput']);
        }
        // validate the optional field `stringInputs`
        if (data['stringInputs']) { // data not null
          StringInputs.validateJSON(data['stringInputs']);
        }
        // validate the optional field `timeInput`
        if (data['timeInput']) { // data not null
          TimeInput.validateJSON(data['timeInput']);
        }

        return true;
    }


}



/**
 * @member {module:model/DateInput} dateInput
 */
Inputs.prototype['dateInput'] = undefined;

/**
 * @member {module:model/DateTimeInput} dateTimeInput
 */
Inputs.prototype['dateTimeInput'] = undefined;

/**
 * @member {module:model/StringInputs} stringInputs
 */
Inputs.prototype['stringInputs'] = undefined;

/**
 * @member {module:model/TimeInput} timeInput
 */
Inputs.prototype['timeInput'] = undefined;






export default Inputs;

