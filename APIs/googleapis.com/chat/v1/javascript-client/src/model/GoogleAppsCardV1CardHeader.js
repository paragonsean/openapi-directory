/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleAppsCardV1CardHeader model module.
 * @module model/GoogleAppsCardV1CardHeader
 * @version v1
 */
class GoogleAppsCardV1CardHeader {
    /**
     * Constructs a new <code>GoogleAppsCardV1CardHeader</code>.
     * Represents a card header. For an example in Google Chat apps, see [Card header](https://developers.google.com/chat/ui/widgets/card-header). [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):
     * @alias module:model/GoogleAppsCardV1CardHeader
     */
    constructor() { 
        
        GoogleAppsCardV1CardHeader.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsCardV1CardHeader</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsCardV1CardHeader} obj Optional instance to populate.
     * @return {module:model/GoogleAppsCardV1CardHeader} The populated <code>GoogleAppsCardV1CardHeader</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsCardV1CardHeader();

            if (data.hasOwnProperty('imageAltText')) {
                obj['imageAltText'] = ApiClient.convertToType(data['imageAltText'], 'String');
            }
            if (data.hasOwnProperty('imageType')) {
                obj['imageType'] = ApiClient.convertToType(data['imageType'], 'String');
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('subtitle')) {
                obj['subtitle'] = ApiClient.convertToType(data['subtitle'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsCardV1CardHeader</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsCardV1CardHeader</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['imageAltText'] && !(typeof data['imageAltText'] === 'string' || data['imageAltText'] instanceof String)) {
            throw new Error("Expected the field `imageAltText` to be a primitive type in the JSON string but got " + data['imageAltText']);
        }
        // ensure the json data is a string
        if (data['imageType'] && !(typeof data['imageType'] === 'string' || data['imageType'] instanceof String)) {
            throw new Error("Expected the field `imageType` to be a primitive type in the JSON string but got " + data['imageType']);
        }
        // ensure the json data is a string
        if (data['imageUrl'] && !(typeof data['imageUrl'] === 'string' || data['imageUrl'] instanceof String)) {
            throw new Error("Expected the field `imageUrl` to be a primitive type in the JSON string but got " + data['imageUrl']);
        }
        // ensure the json data is a string
        if (data['subtitle'] && !(typeof data['subtitle'] === 'string' || data['subtitle'] instanceof String)) {
            throw new Error("Expected the field `subtitle` to be a primitive type in the JSON string but got " + data['subtitle']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * The alternative text of this image that's used for accessibility.
 * @member {String} imageAltText
 */
GoogleAppsCardV1CardHeader.prototype['imageAltText'] = undefined;

/**
 * The shape used to crop the image. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):
 * @member {module:model/GoogleAppsCardV1CardHeader.ImageTypeEnum} imageType
 */
GoogleAppsCardV1CardHeader.prototype['imageType'] = undefined;

/**
 * The HTTPS URL of the image in the card header.
 * @member {String} imageUrl
 */
GoogleAppsCardV1CardHeader.prototype['imageUrl'] = undefined;

/**
 * The subtitle of the card header. If specified, appears on its own line below the `title`.
 * @member {String} subtitle
 */
GoogleAppsCardV1CardHeader.prototype['subtitle'] = undefined;

/**
 * Required. The title of the card header. The header has a fixed height: if both a title and subtitle are specified, each takes up one line. If only the title is specified, it takes up both lines.
 * @member {String} title
 */
GoogleAppsCardV1CardHeader.prototype['title'] = undefined;





/**
 * Allowed values for the <code>imageType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAppsCardV1CardHeader['ImageTypeEnum'] = {

    /**
     * value: "SQUARE"
     * @const
     */
    "SQUARE": "SQUARE",

    /**
     * value: "CIRCLE"
     * @const
     */
    "CIRCLE": "CIRCLE"
};



export default GoogleAppsCardV1CardHeader;

