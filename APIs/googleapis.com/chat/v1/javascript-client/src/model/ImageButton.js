/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OnClick from './OnClick';

/**
 * The ImageButton model module.
 * @module model/ImageButton
 * @version v1
 */
class ImageButton {
    /**
     * Constructs a new <code>ImageButton</code>.
     * An image button with an &#x60;onclick&#x60; action.
     * @alias module:model/ImageButton
     */
    constructor() { 
        
        ImageButton.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageButton</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageButton} obj Optional instance to populate.
     * @return {module:model/ImageButton} The populated <code>ImageButton</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageButton();

            if (data.hasOwnProperty('icon')) {
                obj['icon'] = ApiClient.convertToType(data['icon'], 'String');
            }
            if (data.hasOwnProperty('iconUrl')) {
                obj['iconUrl'] = ApiClient.convertToType(data['iconUrl'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('onClick')) {
                obj['onClick'] = OnClick.constructFromObject(data['onClick']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageButton</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageButton</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['icon'] && !(typeof data['icon'] === 'string' || data['icon'] instanceof String)) {
            throw new Error("Expected the field `icon` to be a primitive type in the JSON string but got " + data['icon']);
        }
        // ensure the json data is a string
        if (data['iconUrl'] && !(typeof data['iconUrl'] === 'string' || data['iconUrl'] instanceof String)) {
            throw new Error("Expected the field `iconUrl` to be a primitive type in the JSON string but got " + data['iconUrl']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `onClick`
        if (data['onClick']) { // data not null
          OnClick.validateJSON(data['onClick']);
        }

        return true;
    }


}



/**
 * The icon specified by an `enum` that indices to an icon provided by Chat API.
 * @member {module:model/ImageButton.IconEnum} icon
 */
ImageButton.prototype['icon'] = undefined;

/**
 * The icon specified by a URL.
 * @member {String} iconUrl
 */
ImageButton.prototype['iconUrl'] = undefined;

/**
 * The name of this `image_button` that's used for accessibility. Default value is provided if this name isn't specified.
 * @member {String} name
 */
ImageButton.prototype['name'] = undefined;

/**
 * @member {module:model/OnClick} onClick
 */
ImageButton.prototype['onClick'] = undefined;





/**
 * Allowed values for the <code>icon</code> property.
 * @enum {String}
 * @readonly
 */
ImageButton['IconEnum'] = {

    /**
     * value: "ICON_UNSPECIFIED"
     * @const
     */
    "ICON_UNSPECIFIED": "ICON_UNSPECIFIED",

    /**
     * value: "AIRPLANE"
     * @const
     */
    "AIRPLANE": "AIRPLANE",

    /**
     * value: "BOOKMARK"
     * @const
     */
    "BOOKMARK": "BOOKMARK",

    /**
     * value: "BUS"
     * @const
     */
    "BUS": "BUS",

    /**
     * value: "CAR"
     * @const
     */
    "CAR": "CAR",

    /**
     * value: "CLOCK"
     * @const
     */
    "CLOCK": "CLOCK",

    /**
     * value: "CONFIRMATION_NUMBER_ICON"
     * @const
     */
    "CONFIRMATION_NUMBER_ICON": "CONFIRMATION_NUMBER_ICON",

    /**
     * value: "DOLLAR"
     * @const
     */
    "DOLLAR": "DOLLAR",

    /**
     * value: "DESCRIPTION"
     * @const
     */
    "DESCRIPTION": "DESCRIPTION",

    /**
     * value: "EMAIL"
     * @const
     */
    "EMAIL": "EMAIL",

    /**
     * value: "EVENT_PERFORMER"
     * @const
     */
    "EVENT_PERFORMER": "EVENT_PERFORMER",

    /**
     * value: "EVENT_SEAT"
     * @const
     */
    "EVENT_SEAT": "EVENT_SEAT",

    /**
     * value: "FLIGHT_ARRIVAL"
     * @const
     */
    "FLIGHT_ARRIVAL": "FLIGHT_ARRIVAL",

    /**
     * value: "FLIGHT_DEPARTURE"
     * @const
     */
    "FLIGHT_DEPARTURE": "FLIGHT_DEPARTURE",

    /**
     * value: "HOTEL"
     * @const
     */
    "HOTEL": "HOTEL",

    /**
     * value: "HOTEL_ROOM_TYPE"
     * @const
     */
    "HOTEL_ROOM_TYPE": "HOTEL_ROOM_TYPE",

    /**
     * value: "INVITE"
     * @const
     */
    "INVITE": "INVITE",

    /**
     * value: "MAP_PIN"
     * @const
     */
    "MAP_PIN": "MAP_PIN",

    /**
     * value: "MEMBERSHIP"
     * @const
     */
    "MEMBERSHIP": "MEMBERSHIP",

    /**
     * value: "MULTIPLE_PEOPLE"
     * @const
     */
    "MULTIPLE_PEOPLE": "MULTIPLE_PEOPLE",

    /**
     * value: "OFFER"
     * @const
     */
    "OFFER": "OFFER",

    /**
     * value: "PERSON"
     * @const
     */
    "PERSON": "PERSON",

    /**
     * value: "PHONE"
     * @const
     */
    "PHONE": "PHONE",

    /**
     * value: "RESTAURANT_ICON"
     * @const
     */
    "RESTAURANT_ICON": "RESTAURANT_ICON",

    /**
     * value: "SHOPPING_CART"
     * @const
     */
    "SHOPPING_CART": "SHOPPING_CART",

    /**
     * value: "STAR"
     * @const
     */
    "STAR": "STAR",

    /**
     * value: "STORE"
     * @const
     */
    "STORE": "STORE",

    /**
     * value: "TICKET"
     * @const
     */
    "TICKET": "TICKET",

    /**
     * value: "TRAIN"
     * @const
     */
    "TRAIN": "TRAIN",

    /**
     * value: "VIDEO_CAMERA"
     * @const
     */
    "VIDEO_CAMERA": "VIDEO_CAMERA",

    /**
     * value: "VIDEO_PLAY"
     * @const
     */
    "VIDEO_PLAY": "VIDEO_PLAY"
};



export default ImageButton;

