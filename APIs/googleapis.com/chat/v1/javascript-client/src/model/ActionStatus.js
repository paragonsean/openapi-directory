/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActionStatus model module.
 * @module model/ActionStatus
 * @version v1
 */
class ActionStatus {
    /**
     * Constructs a new <code>ActionStatus</code>.
     * Represents the status for a request to either invoke or submit a [dialog](https://developers.google.com/chat/how-tos/dialogs).
     * @alias module:model/ActionStatus
     */
    constructor() { 
        
        ActionStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActionStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActionStatus} obj Optional instance to populate.
     * @return {module:model/ActionStatus} The populated <code>ActionStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActionStatus();

            if (data.hasOwnProperty('statusCode')) {
                obj['statusCode'] = ApiClient.convertToType(data['statusCode'], 'String');
            }
            if (data.hasOwnProperty('userFacingMessage')) {
                obj['userFacingMessage'] = ApiClient.convertToType(data['userFacingMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActionStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActionStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['statusCode'] && !(typeof data['statusCode'] === 'string' || data['statusCode'] instanceof String)) {
            throw new Error("Expected the field `statusCode` to be a primitive type in the JSON string but got " + data['statusCode']);
        }
        // ensure the json data is a string
        if (data['userFacingMessage'] && !(typeof data['userFacingMessage'] === 'string' || data['userFacingMessage'] instanceof String)) {
            throw new Error("Expected the field `userFacingMessage` to be a primitive type in the JSON string but got " + data['userFacingMessage']);
        }

        return true;
    }


}



/**
 * The status code.
 * @member {module:model/ActionStatus.StatusCodeEnum} statusCode
 */
ActionStatus.prototype['statusCode'] = undefined;

/**
 * The message to send users about the status of their request. If unset, a generic message based on the `status_code` is sent.
 * @member {String} userFacingMessage
 */
ActionStatus.prototype['userFacingMessage'] = undefined;





/**
 * Allowed values for the <code>statusCode</code> property.
 * @enum {String}
 * @readonly
 */
ActionStatus['StatusCodeEnum'] = {

    /**
     * value: "OK"
     * @const
     */
    "OK": "OK",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED",

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "INVALID_ARGUMENT"
     * @const
     */
    "INVALID_ARGUMENT": "INVALID_ARGUMENT",

    /**
     * value: "DEADLINE_EXCEEDED"
     * @const
     */
    "DEADLINE_EXCEEDED": "DEADLINE_EXCEEDED",

    /**
     * value: "NOT_FOUND"
     * @const
     */
    "NOT_FOUND": "NOT_FOUND",

    /**
     * value: "ALREADY_EXISTS"
     * @const
     */
    "ALREADY_EXISTS": "ALREADY_EXISTS",

    /**
     * value: "PERMISSION_DENIED"
     * @const
     */
    "PERMISSION_DENIED": "PERMISSION_DENIED",

    /**
     * value: "UNAUTHENTICATED"
     * @const
     */
    "UNAUTHENTICATED": "UNAUTHENTICATED",

    /**
     * value: "RESOURCE_EXHAUSTED"
     * @const
     */
    "RESOURCE_EXHAUSTED": "RESOURCE_EXHAUSTED",

    /**
     * value: "FAILED_PRECONDITION"
     * @const
     */
    "FAILED_PRECONDITION": "FAILED_PRECONDITION",

    /**
     * value: "ABORTED"
     * @const
     */
    "ABORTED": "ABORTED",

    /**
     * value: "OUT_OF_RANGE"
     * @const
     */
    "OUT_OF_RANGE": "OUT_OF_RANGE",

    /**
     * value: "UNIMPLEMENTED"
     * @const
     */
    "UNIMPLEMENTED": "UNIMPLEMENTED",

    /**
     * value: "INTERNAL"
     * @const
     */
    "INTERNAL": "INTERNAL",

    /**
     * value: "UNAVAILABLE"
     * @const
     */
    "UNAVAILABLE": "UNAVAILABLE",

    /**
     * value: "DATA_LOSS"
     * @const
     */
    "DATA_LOSS": "DATA_LOSS"
};



export default ActionStatus;

