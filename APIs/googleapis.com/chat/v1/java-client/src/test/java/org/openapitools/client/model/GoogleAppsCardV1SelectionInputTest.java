/*
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleAppsCardV1Action;
import org.openapitools.client.model.GoogleAppsCardV1PlatformDataSource;
import org.openapitools.client.model.GoogleAppsCardV1SelectionItem;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleAppsCardV1SelectionInput
 */
public class GoogleAppsCardV1SelectionInputTest {
    private final GoogleAppsCardV1SelectionInput model = new GoogleAppsCardV1SelectionInput();

    /**
     * Model tests for GoogleAppsCardV1SelectionInput
     */
    @Test
    public void testGoogleAppsCardV1SelectionInput() {
        // TODO: test GoogleAppsCardV1SelectionInput
    }

    /**
     * Test the property 'externalDataSource'
     */
    @Test
    public void externalDataSourceTest() {
        // TODO: test externalDataSource
    }

    /**
     * Test the property 'items'
     */
    @Test
    public void itemsTest() {
        // TODO: test items
    }

    /**
     * Test the property 'label'
     */
    @Test
    public void labelTest() {
        // TODO: test label
    }

    /**
     * Test the property 'multiSelectMaxSelectedItems'
     */
    @Test
    public void multiSelectMaxSelectedItemsTest() {
        // TODO: test multiSelectMaxSelectedItems
    }

    /**
     * Test the property 'multiSelectMinQueryLength'
     */
    @Test
    public void multiSelectMinQueryLengthTest() {
        // TODO: test multiSelectMinQueryLength
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'onChangeAction'
     */
    @Test
    public void onChangeActionTest() {
        // TODO: test onChangeAction
    }

    /**
     * Test the property 'platformDataSource'
     */
    @Test
    public void platformDataSourceTest() {
        // TODO: test platformDataSource
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
