/*
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleAppsCardV1BorderStyle;
import org.openapitools.client.model.GoogleAppsCardV1ImageCropStyle;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents an image. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:45.023335-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAppsCardV1ImageComponent {
  public static final String SERIALIZED_NAME_ALT_TEXT = "altText";
  @SerializedName(SERIALIZED_NAME_ALT_TEXT)
  private String altText;

  public static final String SERIALIZED_NAME_BORDER_STYLE = "borderStyle";
  @SerializedName(SERIALIZED_NAME_BORDER_STYLE)
  private GoogleAppsCardV1BorderStyle borderStyle;

  public static final String SERIALIZED_NAME_CROP_STYLE = "cropStyle";
  @SerializedName(SERIALIZED_NAME_CROP_STYLE)
  private GoogleAppsCardV1ImageCropStyle cropStyle;

  public static final String SERIALIZED_NAME_IMAGE_URI = "imageUri";
  @SerializedName(SERIALIZED_NAME_IMAGE_URI)
  private String imageUri;

  public GoogleAppsCardV1ImageComponent() {
  }

  public GoogleAppsCardV1ImageComponent altText(String altText) {
    this.altText = altText;
    return this;
  }

  /**
   * The accessibility label for the image.
   * @return altText
   */
  @javax.annotation.Nullable
  public String getAltText() {
    return altText;
  }

  public void setAltText(String altText) {
    this.altText = altText;
  }


  public GoogleAppsCardV1ImageComponent borderStyle(GoogleAppsCardV1BorderStyle borderStyle) {
    this.borderStyle = borderStyle;
    return this;
  }

  /**
   * Get borderStyle
   * @return borderStyle
   */
  @javax.annotation.Nullable
  public GoogleAppsCardV1BorderStyle getBorderStyle() {
    return borderStyle;
  }

  public void setBorderStyle(GoogleAppsCardV1BorderStyle borderStyle) {
    this.borderStyle = borderStyle;
  }


  public GoogleAppsCardV1ImageComponent cropStyle(GoogleAppsCardV1ImageCropStyle cropStyle) {
    this.cropStyle = cropStyle;
    return this;
  }

  /**
   * Get cropStyle
   * @return cropStyle
   */
  @javax.annotation.Nullable
  public GoogleAppsCardV1ImageCropStyle getCropStyle() {
    return cropStyle;
  }

  public void setCropStyle(GoogleAppsCardV1ImageCropStyle cropStyle) {
    this.cropStyle = cropStyle;
  }


  public GoogleAppsCardV1ImageComponent imageUri(String imageUri) {
    this.imageUri = imageUri;
    return this;
  }

  /**
   * The image URL.
   * @return imageUri
   */
  @javax.annotation.Nullable
  public String getImageUri() {
    return imageUri;
  }

  public void setImageUri(String imageUri) {
    this.imageUri = imageUri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAppsCardV1ImageComponent googleAppsCardV1ImageComponent = (GoogleAppsCardV1ImageComponent) o;
    return Objects.equals(this.altText, googleAppsCardV1ImageComponent.altText) &&
        Objects.equals(this.borderStyle, googleAppsCardV1ImageComponent.borderStyle) &&
        Objects.equals(this.cropStyle, googleAppsCardV1ImageComponent.cropStyle) &&
        Objects.equals(this.imageUri, googleAppsCardV1ImageComponent.imageUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(altText, borderStyle, cropStyle, imageUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAppsCardV1ImageComponent {\n");
    sb.append("    altText: ").append(toIndentedString(altText)).append("\n");
    sb.append("    borderStyle: ").append(toIndentedString(borderStyle)).append("\n");
    sb.append("    cropStyle: ").append(toIndentedString(cropStyle)).append("\n");
    sb.append("    imageUri: ").append(toIndentedString(imageUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("altText");
    openapiFields.add("borderStyle");
    openapiFields.add("cropStyle");
    openapiFields.add("imageUri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAppsCardV1ImageComponent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAppsCardV1ImageComponent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAppsCardV1ImageComponent is not found in the empty JSON string", GoogleAppsCardV1ImageComponent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAppsCardV1ImageComponent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAppsCardV1ImageComponent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("altText") != null && !jsonObj.get("altText").isJsonNull()) && !jsonObj.get("altText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `altText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("altText").toString()));
      }
      // validate the optional field `borderStyle`
      if (jsonObj.get("borderStyle") != null && !jsonObj.get("borderStyle").isJsonNull()) {
        GoogleAppsCardV1BorderStyle.validateJsonElement(jsonObj.get("borderStyle"));
      }
      // validate the optional field `cropStyle`
      if (jsonObj.get("cropStyle") != null && !jsonObj.get("cropStyle").isJsonNull()) {
        GoogleAppsCardV1ImageCropStyle.validateJsonElement(jsonObj.get("cropStyle"));
      }
      if ((jsonObj.get("imageUri") != null && !jsonObj.get("imageUri").isJsonNull()) && !jsonObj.get("imageUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageUri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAppsCardV1ImageComponent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAppsCardV1ImageComponent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAppsCardV1ImageComponent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAppsCardV1ImageComponent.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAppsCardV1ImageComponent>() {
           @Override
           public void write(JsonWriter out, GoogleAppsCardV1ImageComponent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAppsCardV1ImageComponent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAppsCardV1ImageComponent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAppsCardV1ImageComponent
   * @throws IOException if the JSON string is invalid with respect to GoogleAppsCardV1ImageComponent
   */
  public static GoogleAppsCardV1ImageComponent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAppsCardV1ImageComponent.class);
  }

  /**
   * Convert an instance of GoogleAppsCardV1ImageComponent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

