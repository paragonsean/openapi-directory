/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessage.h
 *
 * A message in a Google Chat space.
 */

#ifndef OAIMessage_H
#define OAIMessage_H

#include <QJsonObject>

#include "OAIActionResponse.h"
#include "OAIAnnotation.h"
#include "OAIAttachedGif.h"
#include "OAIAttachment.h"
#include "OAICard.h"
#include "OAICardWithId.h"
#include "OAIDeletionMetadata.h"
#include "OAIEmojiReactionSummary.h"
#include "OAIMatchedUrl.h"
#include "OAIQuotedMessageMetadata.h"
#include "OAISlashCommand.h"
#include "OAISpace.h"
#include "OAIThread.h"
#include "OAIUser.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIActionResponse;
class OAIAnnotation;
class OAIAttachedGif;
class OAIAttachment;
class OAICard;
class OAICardWithId;
class OAIDeletionMetadata;
class OAIEmojiReactionSummary;
class OAIMatchedUrl;
class OAIUser;
class OAIQuotedMessageMetadata;
class OAISlashCommand;
class OAISpace;
class OAIThread;

class OAIMessage : public OAIObject {
public:
    OAIMessage();
    OAIMessage(QString json);
    ~OAIMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIActionResponse getActionResponse() const;
    void setActionResponse(const OAIActionResponse &action_response);
    bool is_action_response_Set() const;
    bool is_action_response_Valid() const;

    QList<OAIAnnotation> getAnnotations() const;
    void setAnnotations(const QList<OAIAnnotation> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    QString getArgumentText() const;
    void setArgumentText(const QString &argument_text);
    bool is_argument_text_Set() const;
    bool is_argument_text_Valid() const;

    QList<OAIAttachedGif> getAttachedGifs() const;
    void setAttachedGifs(const QList<OAIAttachedGif> &attached_gifs);
    bool is_attached_gifs_Set() const;
    bool is_attached_gifs_Valid() const;

    QList<OAIAttachment> getAttachment() const;
    void setAttachment(const QList<OAIAttachment> &attachment);
    bool is_attachment_Set() const;
    bool is_attachment_Valid() const;

    Q_DECL_DEPRECATED QList<OAICard> getCards() const;
    Q_DECL_DEPRECATED void setCards(const QList<OAICard> &cards);
    Q_DECL_DEPRECATED bool is_cards_Set() const;
    Q_DECL_DEPRECATED bool is_cards_Valid() const;

    QList<OAICardWithId> getCardsV2() const;
    void setCardsV2(const QList<OAICardWithId> &cards_v2);
    bool is_cards_v2_Set() const;
    bool is_cards_v2_Valid() const;

    QString getClientAssignedMessageId() const;
    void setClientAssignedMessageId(const QString &client_assigned_message_id);
    bool is_client_assigned_message_id_Set() const;
    bool is_client_assigned_message_id_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDeleteTime() const;
    void setDeleteTime(const QString &delete_time);
    bool is_delete_time_Set() const;
    bool is_delete_time_Valid() const;

    OAIDeletionMetadata getDeletionMetadata() const;
    void setDeletionMetadata(const OAIDeletionMetadata &deletion_metadata);
    bool is_deletion_metadata_Set() const;
    bool is_deletion_metadata_Valid() const;

    QList<OAIEmojiReactionSummary> getEmojiReactionSummaries() const;
    void setEmojiReactionSummaries(const QList<OAIEmojiReactionSummary> &emoji_reaction_summaries);
    bool is_emoji_reaction_summaries_Set() const;
    bool is_emoji_reaction_summaries_Valid() const;

    QString getFallbackText() const;
    void setFallbackText(const QString &fallback_text);
    bool is_fallback_text_Set() const;
    bool is_fallback_text_Valid() const;

    QString getFormattedText() const;
    void setFormattedText(const QString &formatted_text);
    bool is_formatted_text_Set() const;
    bool is_formatted_text_Valid() const;

    QString getLastUpdateTime() const;
    void setLastUpdateTime(const QString &last_update_time);
    bool is_last_update_time_Set() const;
    bool is_last_update_time_Valid() const;

    OAIMatchedUrl getMatchedUrl() const;
    void setMatchedUrl(const OAIMatchedUrl &matched_url);
    bool is_matched_url_Set() const;
    bool is_matched_url_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIUser getPrivateMessageViewer() const;
    void setPrivateMessageViewer(const OAIUser &private_message_viewer);
    bool is_private_message_viewer_Set() const;
    bool is_private_message_viewer_Valid() const;

    OAIQuotedMessageMetadata getQuotedMessageMetadata() const;
    void setQuotedMessageMetadata(const OAIQuotedMessageMetadata &quoted_message_metadata);
    bool is_quoted_message_metadata_Set() const;
    bool is_quoted_message_metadata_Valid() const;

    OAIUser getSender() const;
    void setSender(const OAIUser &sender);
    bool is_sender_Set() const;
    bool is_sender_Valid() const;

    OAISlashCommand getSlashCommand() const;
    void setSlashCommand(const OAISlashCommand &slash_command);
    bool is_slash_command_Set() const;
    bool is_slash_command_Valid() const;

    OAISpace getSpace() const;
    void setSpace(const OAISpace &space);
    bool is_space_Set() const;
    bool is_space_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    OAIThread getThread() const;
    void setThread(const OAIThread &thread);
    bool is_thread_Set() const;
    bool is_thread_Valid() const;

    bool isThreadReply() const;
    void setThreadReply(const bool &thread_reply);
    bool is_thread_reply_Set() const;
    bool is_thread_reply_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIActionResponse m_action_response;
    bool m_action_response_isSet;
    bool m_action_response_isValid;

    QList<OAIAnnotation> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    QString m_argument_text;
    bool m_argument_text_isSet;
    bool m_argument_text_isValid;

    QList<OAIAttachedGif> m_attached_gifs;
    bool m_attached_gifs_isSet;
    bool m_attached_gifs_isValid;

    QList<OAIAttachment> m_attachment;
    bool m_attachment_isSet;
    bool m_attachment_isValid;

    QList<OAICard> m_cards;
    bool m_cards_isSet;
    bool m_cards_isValid;

    QList<OAICardWithId> m_cards_v2;
    bool m_cards_v2_isSet;
    bool m_cards_v2_isValid;

    QString m_client_assigned_message_id;
    bool m_client_assigned_message_id_isSet;
    bool m_client_assigned_message_id_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_delete_time;
    bool m_delete_time_isSet;
    bool m_delete_time_isValid;

    OAIDeletionMetadata m_deletion_metadata;
    bool m_deletion_metadata_isSet;
    bool m_deletion_metadata_isValid;

    QList<OAIEmojiReactionSummary> m_emoji_reaction_summaries;
    bool m_emoji_reaction_summaries_isSet;
    bool m_emoji_reaction_summaries_isValid;

    QString m_fallback_text;
    bool m_fallback_text_isSet;
    bool m_fallback_text_isValid;

    QString m_formatted_text;
    bool m_formatted_text_isSet;
    bool m_formatted_text_isValid;

    QString m_last_update_time;
    bool m_last_update_time_isSet;
    bool m_last_update_time_isValid;

    OAIMatchedUrl m_matched_url;
    bool m_matched_url_isSet;
    bool m_matched_url_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIUser m_private_message_viewer;
    bool m_private_message_viewer_isSet;
    bool m_private_message_viewer_isValid;

    OAIQuotedMessageMetadata m_quoted_message_metadata;
    bool m_quoted_message_metadata_isSet;
    bool m_quoted_message_metadata_isValid;

    OAIUser m_sender;
    bool m_sender_isSet;
    bool m_sender_isValid;

    OAISlashCommand m_slash_command;
    bool m_slash_command_isSet;
    bool m_slash_command_isValid;

    OAISpace m_space;
    bool m_space_isSet;
    bool m_space_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    OAIThread m_thread;
    bool m_thread_isSet;
    bool m_thread_isValid;

    bool m_thread_reply;
    bool m_thread_reply_isSet;
    bool m_thread_reply_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessage)

#endif // OAIMessage_H
