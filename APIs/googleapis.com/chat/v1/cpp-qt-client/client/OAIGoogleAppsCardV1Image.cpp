/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsCardV1Image.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsCardV1Image::OAIGoogleAppsCardV1Image(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsCardV1Image::OAIGoogleAppsCardV1Image() {
    this->initializeModel();
}

OAIGoogleAppsCardV1Image::~OAIGoogleAppsCardV1Image() {}

void OAIGoogleAppsCardV1Image::initializeModel() {

    m_alt_text_isSet = false;
    m_alt_text_isValid = false;

    m_image_url_isSet = false;
    m_image_url_isValid = false;

    m_on_click_isSet = false;
    m_on_click_isValid = false;
}

void OAIGoogleAppsCardV1Image::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsCardV1Image::fromJsonObject(QJsonObject json) {

    m_alt_text_isValid = ::OpenAPI::fromJsonValue(m_alt_text, json[QString("altText")]);
    m_alt_text_isSet = !json[QString("altText")].isNull() && m_alt_text_isValid;

    m_image_url_isValid = ::OpenAPI::fromJsonValue(m_image_url, json[QString("imageUrl")]);
    m_image_url_isSet = !json[QString("imageUrl")].isNull() && m_image_url_isValid;

    m_on_click_isValid = ::OpenAPI::fromJsonValue(m_on_click, json[QString("onClick")]);
    m_on_click_isSet = !json[QString("onClick")].isNull() && m_on_click_isValid;
}

QString OAIGoogleAppsCardV1Image::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsCardV1Image::asJsonObject() const {
    QJsonObject obj;
    if (m_alt_text_isSet) {
        obj.insert(QString("altText"), ::OpenAPI::toJsonValue(m_alt_text));
    }
    if (m_image_url_isSet) {
        obj.insert(QString("imageUrl"), ::OpenAPI::toJsonValue(m_image_url));
    }
    if (m_on_click.isSet()) {
        obj.insert(QString("onClick"), ::OpenAPI::toJsonValue(m_on_click));
    }
    return obj;
}

QString OAIGoogleAppsCardV1Image::getAltText() const {
    return m_alt_text;
}
void OAIGoogleAppsCardV1Image::setAltText(const QString &alt_text) {
    m_alt_text = alt_text;
    m_alt_text_isSet = true;
}

bool OAIGoogleAppsCardV1Image::is_alt_text_Set() const{
    return m_alt_text_isSet;
}

bool OAIGoogleAppsCardV1Image::is_alt_text_Valid() const{
    return m_alt_text_isValid;
}

QString OAIGoogleAppsCardV1Image::getImageUrl() const {
    return m_image_url;
}
void OAIGoogleAppsCardV1Image::setImageUrl(const QString &image_url) {
    m_image_url = image_url;
    m_image_url_isSet = true;
}

bool OAIGoogleAppsCardV1Image::is_image_url_Set() const{
    return m_image_url_isSet;
}

bool OAIGoogleAppsCardV1Image::is_image_url_Valid() const{
    return m_image_url_isValid;
}

OAIGoogleAppsCardV1OnClick OAIGoogleAppsCardV1Image::getOnClick() const {
    return m_on_click;
}
void OAIGoogleAppsCardV1Image::setOnClick(const OAIGoogleAppsCardV1OnClick &on_click) {
    m_on_click = on_click;
    m_on_click_isSet = true;
}

bool OAIGoogleAppsCardV1Image::is_on_click_Set() const{
    return m_on_click_isSet;
}

bool OAIGoogleAppsCardV1Image::is_on_click_Valid() const{
    return m_on_click_isValid;
}

bool OAIGoogleAppsCardV1Image::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alt_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_on_click.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsCardV1Image::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
