/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISection.h
 *
 * A section contains a collection of widgets that are rendered (vertically) in the order that they are specified. Across all platforms, cards have a narrow fixed width, so there&#39;s currently no need for layout properties (for example, float).
 */

#ifndef OAISection_H
#define OAISection_H

#include <QJsonObject>

#include "OAIWidgetMarkup.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWidgetMarkup;

class OAISection : public OAIObject {
public:
    OAISection();
    OAISection(QString json);
    ~OAISection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHeader() const;
    void setHeader(const QString &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    QList<OAIWidgetMarkup> getWidgets() const;
    void setWidgets(const QList<OAIWidgetMarkup> &widgets);
    bool is_widgets_Set() const;
    bool is_widgets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    QList<OAIWidgetMarkup> m_widgets;
    bool m_widgets_isSet;
    bool m_widgets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISection)

#endif // OAISection_H
