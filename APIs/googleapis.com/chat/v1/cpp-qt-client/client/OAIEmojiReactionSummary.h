/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEmojiReactionSummary.h
 *
 * The number of people who reacted to a message with a specific emoji.
 */

#ifndef OAIEmojiReactionSummary_H
#define OAIEmojiReactionSummary_H

#include <QJsonObject>

#include "OAIEmoji.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmoji;

class OAIEmojiReactionSummary : public OAIObject {
public:
    OAIEmojiReactionSummary();
    OAIEmojiReactionSummary(QString json);
    ~OAIEmojiReactionSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEmoji getEmoji() const;
    void setEmoji(const OAIEmoji &emoji);
    bool is_emoji_Set() const;
    bool is_emoji_Valid() const;

    qint32 getReactionCount() const;
    void setReactionCount(const qint32 &reaction_count);
    bool is_reaction_count_Set() const;
    bool is_reaction_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEmoji m_emoji;
    bool m_emoji_isSet;
    bool m_emoji_isValid;

    qint32 m_reaction_count;
    bool m_reaction_count_isSet;
    bool m_reaction_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEmojiReactionSummary)

#endif // OAIEmojiReactionSummary_H
