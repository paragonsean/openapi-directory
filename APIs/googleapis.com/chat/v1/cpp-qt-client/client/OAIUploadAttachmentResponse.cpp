/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUploadAttachmentResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUploadAttachmentResponse::OAIUploadAttachmentResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUploadAttachmentResponse::OAIUploadAttachmentResponse() {
    this->initializeModel();
}

OAIUploadAttachmentResponse::~OAIUploadAttachmentResponse() {}

void OAIUploadAttachmentResponse::initializeModel() {

    m_attachment_data_ref_isSet = false;
    m_attachment_data_ref_isValid = false;
}

void OAIUploadAttachmentResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUploadAttachmentResponse::fromJsonObject(QJsonObject json) {

    m_attachment_data_ref_isValid = ::OpenAPI::fromJsonValue(m_attachment_data_ref, json[QString("attachmentDataRef")]);
    m_attachment_data_ref_isSet = !json[QString("attachmentDataRef")].isNull() && m_attachment_data_ref_isValid;
}

QString OAIUploadAttachmentResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUploadAttachmentResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_attachment_data_ref.isSet()) {
        obj.insert(QString("attachmentDataRef"), ::OpenAPI::toJsonValue(m_attachment_data_ref));
    }
    return obj;
}

OAIAttachmentDataRef OAIUploadAttachmentResponse::getAttachmentDataRef() const {
    return m_attachment_data_ref;
}
void OAIUploadAttachmentResponse::setAttachmentDataRef(const OAIAttachmentDataRef &attachment_data_ref) {
    m_attachment_data_ref = attachment_data_ref;
    m_attachment_data_ref_isSet = true;
}

bool OAIUploadAttachmentResponse::is_attachment_data_ref_Set() const{
    return m_attachment_data_ref_isSet;
}

bool OAIUploadAttachmentResponse::is_attachment_data_ref_Valid() const{
    return m_attachment_data_ref_isValid;
}

bool OAIUploadAttachmentResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attachment_data_ref.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUploadAttachmentResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
