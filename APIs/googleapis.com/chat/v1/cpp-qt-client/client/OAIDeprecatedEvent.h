/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeprecatedEvent.h
 *
 * A Google Chat app interaction event. To learn about interaction events, see [Receive and respond to interactions with your Google Chat app](https://developers.google.com/chat/api/guides/message-formats). To learn about event types and for example event payloads, see [Types of Google Chat app interaction events](https://developers.google.com/chat/api/guides/message-formats/events).
 */

#ifndef OAIDeprecatedEvent_H
#define OAIDeprecatedEvent_H

#include <QJsonObject>

#include "OAICommonEventObject.h"
#include "OAIFormAction.h"
#include "OAIMessage.h"
#include "OAISpace.h"
#include "OAIUser.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFormAction;
class OAICommonEventObject;
class OAIMessage;
class OAISpace;
class OAIUser;

class OAIDeprecatedEvent : public OAIObject {
public:
    OAIDeprecatedEvent();
    OAIDeprecatedEvent(QString json);
    ~OAIDeprecatedEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFormAction getAction() const;
    void setAction(const OAIFormAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    OAICommonEventObject getCommon() const;
    void setCommon(const OAICommonEventObject &common);
    bool is_common_Set() const;
    bool is_common_Valid() const;

    QString getConfigCompleteRedirectUrl() const;
    void setConfigCompleteRedirectUrl(const QString &config_complete_redirect_url);
    bool is_config_complete_redirect_url_Set() const;
    bool is_config_complete_redirect_url_Valid() const;

    QString getDialogEventType() const;
    void setDialogEventType(const QString &dialog_event_type);
    bool is_dialog_event_type_Set() const;
    bool is_dialog_event_type_Valid() const;

    QString getEventTime() const;
    void setEventTime(const QString &event_time);
    bool is_event_time_Set() const;
    bool is_event_time_Valid() const;

    bool isIsDialogEvent() const;
    void setIsDialogEvent(const bool &is_dialog_event);
    bool is_is_dialog_event_Set() const;
    bool is_is_dialog_event_Valid() const;

    OAIMessage getMessage() const;
    void setMessage(const OAIMessage &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    OAISpace getSpace() const;
    void setSpace(const OAISpace &space);
    bool is_space_Set() const;
    bool is_space_Valid() const;

    QString getThreadKey() const;
    void setThreadKey(const QString &thread_key);
    bool is_thread_key_Set() const;
    bool is_thread_key_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFormAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    OAICommonEventObject m_common;
    bool m_common_isSet;
    bool m_common_isValid;

    QString m_config_complete_redirect_url;
    bool m_config_complete_redirect_url_isSet;
    bool m_config_complete_redirect_url_isValid;

    QString m_dialog_event_type;
    bool m_dialog_event_type_isSet;
    bool m_dialog_event_type_isValid;

    QString m_event_time;
    bool m_event_time_isSet;
    bool m_event_time_isValid;

    bool m_is_dialog_event;
    bool m_is_dialog_event_isSet;
    bool m_is_dialog_event_isValid;

    OAIMessage m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    OAISpace m_space;
    bool m_space_isSet;
    bool m_space_isValid;

    QString m_thread_key;
    bool m_thread_key_isSet;
    bool m_thread_key_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeprecatedEvent)

#endif // OAIDeprecatedEvent_H
