/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChatAppLogEntry.h
 *
 * JSON payload of error messages. If the Cloud Logging API is enabled, these error messages are logged to [Google Cloud Logging](https://cloud.google.com/logging/docs).
 */

#ifndef OAIChatAppLogEntry_H
#define OAIChatAppLogEntry_H

#include <QJsonObject>

#include "OAIStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStatus;

class OAIChatAppLogEntry : public OAIObject {
public:
    OAIChatAppLogEntry();
    OAIChatAppLogEntry(QString json);
    ~OAIChatAppLogEntry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeployment() const;
    void setDeployment(const QString &deployment);
    bool is_deployment_Set() const;
    bool is_deployment_Valid() const;

    QString getDeploymentFunction() const;
    void setDeploymentFunction(const QString &deployment_function);
    bool is_deployment_function_Set() const;
    bool is_deployment_function_Valid() const;

    OAIStatus getError() const;
    void setError(const OAIStatus &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_deployment;
    bool m_deployment_isSet;
    bool m_deployment_isValid;

    QString m_deployment_function;
    bool m_deployment_function_isSet;
    bool m_deployment_function_isValid;

    OAIStatus m_error;
    bool m_error_isSet;
    bool m_error_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChatAppLogEntry)

#endif // OAIChatAppLogEntry_H
