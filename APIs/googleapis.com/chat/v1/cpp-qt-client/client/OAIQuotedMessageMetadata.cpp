/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQuotedMessageMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQuotedMessageMetadata::OAIQuotedMessageMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQuotedMessageMetadata::OAIQuotedMessageMetadata() {
    this->initializeModel();
}

OAIQuotedMessageMetadata::~OAIQuotedMessageMetadata() {}

void OAIQuotedMessageMetadata::initializeModel() {

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIQuotedMessageMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQuotedMessageMetadata::fromJsonObject(QJsonObject json) {

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("lastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("lastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIQuotedMessageMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQuotedMessageMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_last_update_time_isSet) {
        obj.insert(QString("lastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIQuotedMessageMetadata::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAIQuotedMessageMetadata::setLastUpdateTime(const QString &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAIQuotedMessageMetadata::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAIQuotedMessageMetadata::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

QString OAIQuotedMessageMetadata::getName() const {
    return m_name;
}
void OAIQuotedMessageMetadata::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIQuotedMessageMetadata::is_name_Set() const{
    return m_name_isSet;
}

bool OAIQuotedMessageMetadata::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIQuotedMessageMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQuotedMessageMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
