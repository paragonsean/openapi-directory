/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIImageButton.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIImageButton::OAIImageButton(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIImageButton::OAIImageButton() {
    this->initializeModel();
}

OAIImageButton::~OAIImageButton() {}

void OAIImageButton::initializeModel() {

    m_icon_isSet = false;
    m_icon_isValid = false;

    m_icon_url_isSet = false;
    m_icon_url_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_on_click_isSet = false;
    m_on_click_isValid = false;
}

void OAIImageButton::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIImageButton::fromJsonObject(QJsonObject json) {

    m_icon_isValid = ::OpenAPI::fromJsonValue(m_icon, json[QString("icon")]);
    m_icon_isSet = !json[QString("icon")].isNull() && m_icon_isValid;

    m_icon_url_isValid = ::OpenAPI::fromJsonValue(m_icon_url, json[QString("iconUrl")]);
    m_icon_url_isSet = !json[QString("iconUrl")].isNull() && m_icon_url_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_on_click_isValid = ::OpenAPI::fromJsonValue(m_on_click, json[QString("onClick")]);
    m_on_click_isSet = !json[QString("onClick")].isNull() && m_on_click_isValid;
}

QString OAIImageButton::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIImageButton::asJsonObject() const {
    QJsonObject obj;
    if (m_icon_isSet) {
        obj.insert(QString("icon"), ::OpenAPI::toJsonValue(m_icon));
    }
    if (m_icon_url_isSet) {
        obj.insert(QString("iconUrl"), ::OpenAPI::toJsonValue(m_icon_url));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_on_click.isSet()) {
        obj.insert(QString("onClick"), ::OpenAPI::toJsonValue(m_on_click));
    }
    return obj;
}

QString OAIImageButton::getIcon() const {
    return m_icon;
}
void OAIImageButton::setIcon(const QString &icon) {
    m_icon = icon;
    m_icon_isSet = true;
}

bool OAIImageButton::is_icon_Set() const{
    return m_icon_isSet;
}

bool OAIImageButton::is_icon_Valid() const{
    return m_icon_isValid;
}

QString OAIImageButton::getIconUrl() const {
    return m_icon_url;
}
void OAIImageButton::setIconUrl(const QString &icon_url) {
    m_icon_url = icon_url;
    m_icon_url_isSet = true;
}

bool OAIImageButton::is_icon_url_Set() const{
    return m_icon_url_isSet;
}

bool OAIImageButton::is_icon_url_Valid() const{
    return m_icon_url_isValid;
}

QString OAIImageButton::getName() const {
    return m_name;
}
void OAIImageButton::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIImageButton::is_name_Set() const{
    return m_name_isSet;
}

bool OAIImageButton::is_name_Valid() const{
    return m_name_isValid;
}

OAIOnClick OAIImageButton::getOnClick() const {
    return m_on_click;
}
void OAIImageButton::setOnClick(const OAIOnClick &on_click) {
    m_on_click = on_click;
    m_on_click_isSet = true;
}

bool OAIImageButton::is_on_click_Set() const{
    return m_on_click_isSet;
}

bool OAIImageButton::is_on_click_Valid() const{
    return m_on_click_isValid;
}

bool OAIImageButton::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_icon_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_icon_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_on_click.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIImageButton::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
