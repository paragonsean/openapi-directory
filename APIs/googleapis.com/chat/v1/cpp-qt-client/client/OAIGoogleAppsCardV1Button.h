/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAppsCardV1Button.h
 *
 * A text, icon, or text and icon button that users can click. For an example in Google Chat apps, see [Button list](https://developers.google.com/chat/ui/widgets/button-list). To make an image a clickable button, specify an &#x60;Image&#x60; (not an &#x60;ImageComponent&#x60;) and set an &#x60;onClick&#x60; action. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):
 */

#ifndef OAIGoogleAppsCardV1Button_H
#define OAIGoogleAppsCardV1Button_H

#include <QJsonObject>

#include "OAIColor.h"
#include "OAIGoogleAppsCardV1Icon.h"
#include "OAIGoogleAppsCardV1OnClick.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIColor;
class OAIGoogleAppsCardV1Icon;
class OAIGoogleAppsCardV1OnClick;

class OAIGoogleAppsCardV1Button : public OAIObject {
public:
    OAIGoogleAppsCardV1Button();
    OAIGoogleAppsCardV1Button(QString json);
    ~OAIGoogleAppsCardV1Button() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAltText() const;
    void setAltText(const QString &alt_text);
    bool is_alt_text_Set() const;
    bool is_alt_text_Valid() const;

    OAIColor getColor() const;
    void setColor(const OAIColor &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    bool isDisabled() const;
    void setDisabled(const bool &disabled);
    bool is_disabled_Set() const;
    bool is_disabled_Valid() const;

    OAIGoogleAppsCardV1Icon getIcon() const;
    void setIcon(const OAIGoogleAppsCardV1Icon &icon);
    bool is_icon_Set() const;
    bool is_icon_Valid() const;

    OAIGoogleAppsCardV1OnClick getOnClick() const;
    void setOnClick(const OAIGoogleAppsCardV1OnClick &on_click);
    bool is_on_click_Set() const;
    bool is_on_click_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alt_text;
    bool m_alt_text_isSet;
    bool m_alt_text_isValid;

    OAIColor m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    bool m_disabled;
    bool m_disabled_isSet;
    bool m_disabled_isValid;

    OAIGoogleAppsCardV1Icon m_icon;
    bool m_icon_isSet;
    bool m_icon_isValid;

    OAIGoogleAppsCardV1OnClick m_on_click;
    bool m_on_click_isSet;
    bool m_on_click_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAppsCardV1Button)

#endif // OAIGoogleAppsCardV1Button_H
