/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAppsCardV1DateTimePicker.h
 *
 * Lets users input a date, a time, or both a date and a time. For an example in Google Chat apps, see [Date time picker](https://developers.google.com/chat/ui/widgets/date-time-picker). Users can input text or use the picker to select dates and times. If users input an invalid date or time, the picker shows an error that prompts users to input the information correctly. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):
 */

#ifndef OAIGoogleAppsCardV1DateTimePicker_H
#define OAIGoogleAppsCardV1DateTimePicker_H

#include <QJsonObject>

#include "OAIGoogleAppsCardV1Action.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAppsCardV1Action;

class OAIGoogleAppsCardV1DateTimePicker : public OAIObject {
public:
    OAIGoogleAppsCardV1DateTimePicker();
    OAIGoogleAppsCardV1DateTimePicker(QString json);
    ~OAIGoogleAppsCardV1DateTimePicker() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIGoogleAppsCardV1Action getOnChangeAction() const;
    void setOnChangeAction(const OAIGoogleAppsCardV1Action &on_change_action);
    bool is_on_change_action_Set() const;
    bool is_on_change_action_Valid() const;

    qint32 getTimezoneOffsetDate() const;
    void setTimezoneOffsetDate(const qint32 &timezone_offset_date);
    bool is_timezone_offset_date_Set() const;
    bool is_timezone_offset_date_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getValueMsEpoch() const;
    void setValueMsEpoch(const QString &value_ms_epoch);
    bool is_value_ms_epoch_Set() const;
    bool is_value_ms_epoch_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIGoogleAppsCardV1Action m_on_change_action;
    bool m_on_change_action_isSet;
    bool m_on_change_action_isValid;

    qint32 m_timezone_offset_date;
    bool m_timezone_offset_date_isSet;
    bool m_timezone_offset_date_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_value_ms_epoch;
    bool m_value_ms_epoch_isSet;
    bool m_value_ms_epoch_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAppsCardV1DateTimePicker)

#endif // OAIGoogleAppsCardV1DateTimePicker_H
