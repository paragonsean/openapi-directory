/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISlashCommandMetadata.h
 *
 * Annotation metadata for slash commands (/).
 */

#ifndef OAISlashCommandMetadata_H
#define OAISlashCommandMetadata_H

#include <QJsonObject>

#include "OAIUser.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUser;

class OAISlashCommandMetadata : public OAIObject {
public:
    OAISlashCommandMetadata();
    OAISlashCommandMetadata(QString json);
    ~OAISlashCommandMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUser getBot() const;
    void setBot(const OAIUser &bot);
    bool is_bot_Set() const;
    bool is_bot_Valid() const;

    QString getCommandId() const;
    void setCommandId(const QString &command_id);
    bool is_command_id_Set() const;
    bool is_command_id_Valid() const;

    QString getCommandName() const;
    void setCommandName(const QString &command_name);
    bool is_command_name_Set() const;
    bool is_command_name_Valid() const;

    bool isTriggersDialog() const;
    void setTriggersDialog(const bool &triggers_dialog);
    bool is_triggers_dialog_Set() const;
    bool is_triggers_dialog_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUser m_bot;
    bool m_bot_isSet;
    bool m_bot_isValid;

    QString m_command_id;
    bool m_command_id_isSet;
    bool m_command_id_isValid;

    QString m_command_name;
    bool m_command_name_isSet;
    bool m_command_name_isValid;

    bool m_triggers_dialog;
    bool m_triggers_dialog_isSet;
    bool m_triggers_dialog_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISlashCommandMetadata)

#endif // OAISlashCommandMetadata_H
