/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsCardV1GridItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsCardV1GridItem::OAIGoogleAppsCardV1GridItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsCardV1GridItem::OAIGoogleAppsCardV1GridItem() {
    this->initializeModel();
}

OAIGoogleAppsCardV1GridItem::~OAIGoogleAppsCardV1GridItem() {}

void OAIGoogleAppsCardV1GridItem::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_image_isSet = false;
    m_image_isValid = false;

    m_layout_isSet = false;
    m_layout_isValid = false;

    m_subtitle_isSet = false;
    m_subtitle_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIGoogleAppsCardV1GridItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsCardV1GridItem::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_image_isValid = ::OpenAPI::fromJsonValue(m_image, json[QString("image")]);
    m_image_isSet = !json[QString("image")].isNull() && m_image_isValid;

    m_layout_isValid = ::OpenAPI::fromJsonValue(m_layout, json[QString("layout")]);
    m_layout_isSet = !json[QString("layout")].isNull() && m_layout_isValid;

    m_subtitle_isValid = ::OpenAPI::fromJsonValue(m_subtitle, json[QString("subtitle")]);
    m_subtitle_isSet = !json[QString("subtitle")].isNull() && m_subtitle_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIGoogleAppsCardV1GridItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsCardV1GridItem::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_image.isSet()) {
        obj.insert(QString("image"), ::OpenAPI::toJsonValue(m_image));
    }
    if (m_layout_isSet) {
        obj.insert(QString("layout"), ::OpenAPI::toJsonValue(m_layout));
    }
    if (m_subtitle_isSet) {
        obj.insert(QString("subtitle"), ::OpenAPI::toJsonValue(m_subtitle));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIGoogleAppsCardV1GridItem::getId() const {
    return m_id;
}
void OAIGoogleAppsCardV1GridItem::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleAppsCardV1GridItem::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleAppsCardV1GridItem::is_id_Valid() const{
    return m_id_isValid;
}

OAIGoogleAppsCardV1ImageComponent OAIGoogleAppsCardV1GridItem::getImage() const {
    return m_image;
}
void OAIGoogleAppsCardV1GridItem::setImage(const OAIGoogleAppsCardV1ImageComponent &image) {
    m_image = image;
    m_image_isSet = true;
}

bool OAIGoogleAppsCardV1GridItem::is_image_Set() const{
    return m_image_isSet;
}

bool OAIGoogleAppsCardV1GridItem::is_image_Valid() const{
    return m_image_isValid;
}

QString OAIGoogleAppsCardV1GridItem::getLayout() const {
    return m_layout;
}
void OAIGoogleAppsCardV1GridItem::setLayout(const QString &layout) {
    m_layout = layout;
    m_layout_isSet = true;
}

bool OAIGoogleAppsCardV1GridItem::is_layout_Set() const{
    return m_layout_isSet;
}

bool OAIGoogleAppsCardV1GridItem::is_layout_Valid() const{
    return m_layout_isValid;
}

QString OAIGoogleAppsCardV1GridItem::getSubtitle() const {
    return m_subtitle;
}
void OAIGoogleAppsCardV1GridItem::setSubtitle(const QString &subtitle) {
    m_subtitle = subtitle;
    m_subtitle_isSet = true;
}

bool OAIGoogleAppsCardV1GridItem::is_subtitle_Set() const{
    return m_subtitle_isSet;
}

bool OAIGoogleAppsCardV1GridItem::is_subtitle_Valid() const{
    return m_subtitle_isValid;
}

QString OAIGoogleAppsCardV1GridItem::getTitle() const {
    return m_title;
}
void OAIGoogleAppsCardV1GridItem::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIGoogleAppsCardV1GridItem::is_title_Set() const{
    return m_title_isSet;
}

bool OAIGoogleAppsCardV1GridItem::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIGoogleAppsCardV1GridItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_layout_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtitle_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsCardV1GridItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
