/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDateTimeInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDateTimeInput::OAIDateTimeInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDateTimeInput::OAIDateTimeInput() {
    this->initializeModel();
}

OAIDateTimeInput::~OAIDateTimeInput() {}

void OAIDateTimeInput::initializeModel() {

    m_has_date_isSet = false;
    m_has_date_isValid = false;

    m_has_time_isSet = false;
    m_has_time_isValid = false;

    m_ms_since_epoch_isSet = false;
    m_ms_since_epoch_isValid = false;
}

void OAIDateTimeInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDateTimeInput::fromJsonObject(QJsonObject json) {

    m_has_date_isValid = ::OpenAPI::fromJsonValue(m_has_date, json[QString("hasDate")]);
    m_has_date_isSet = !json[QString("hasDate")].isNull() && m_has_date_isValid;

    m_has_time_isValid = ::OpenAPI::fromJsonValue(m_has_time, json[QString("hasTime")]);
    m_has_time_isSet = !json[QString("hasTime")].isNull() && m_has_time_isValid;

    m_ms_since_epoch_isValid = ::OpenAPI::fromJsonValue(m_ms_since_epoch, json[QString("msSinceEpoch")]);
    m_ms_since_epoch_isSet = !json[QString("msSinceEpoch")].isNull() && m_ms_since_epoch_isValid;
}

QString OAIDateTimeInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDateTimeInput::asJsonObject() const {
    QJsonObject obj;
    if (m_has_date_isSet) {
        obj.insert(QString("hasDate"), ::OpenAPI::toJsonValue(m_has_date));
    }
    if (m_has_time_isSet) {
        obj.insert(QString("hasTime"), ::OpenAPI::toJsonValue(m_has_time));
    }
    if (m_ms_since_epoch_isSet) {
        obj.insert(QString("msSinceEpoch"), ::OpenAPI::toJsonValue(m_ms_since_epoch));
    }
    return obj;
}

bool OAIDateTimeInput::isHasDate() const {
    return m_has_date;
}
void OAIDateTimeInput::setHasDate(const bool &has_date) {
    m_has_date = has_date;
    m_has_date_isSet = true;
}

bool OAIDateTimeInput::is_has_date_Set() const{
    return m_has_date_isSet;
}

bool OAIDateTimeInput::is_has_date_Valid() const{
    return m_has_date_isValid;
}

bool OAIDateTimeInput::isHasTime() const {
    return m_has_time;
}
void OAIDateTimeInput::setHasTime(const bool &has_time) {
    m_has_time = has_time;
    m_has_time_isSet = true;
}

bool OAIDateTimeInput::is_has_time_Set() const{
    return m_has_time_isSet;
}

bool OAIDateTimeInput::is_has_time_Valid() const{
    return m_has_time_isValid;
}

QString OAIDateTimeInput::getMsSinceEpoch() const {
    return m_ms_since_epoch;
}
void OAIDateTimeInput::setMsSinceEpoch(const QString &ms_since_epoch) {
    m_ms_since_epoch = ms_since_epoch;
    m_ms_since_epoch_isSet = true;
}

bool OAIDateTimeInput::is_ms_since_epoch_Set() const{
    return m_ms_since_epoch_isSet;
}

bool OAIDateTimeInput::is_ms_since_epoch_Valid() const{
    return m_ms_since_epoch_isValid;
}

bool OAIDateTimeInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_has_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ms_since_epoch_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDateTimeInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
