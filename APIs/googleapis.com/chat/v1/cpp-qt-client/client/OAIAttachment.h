/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttachment.h
 *
 * An attachment in Google Chat.
 */

#ifndef OAIAttachment_H
#define OAIAttachment_H

#include <QJsonObject>

#include "OAIAttachmentDataRef.h"
#include "OAIDriveDataRef.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttachmentDataRef;
class OAIDriveDataRef;

class OAIAttachment : public OAIObject {
public:
    OAIAttachment();
    OAIAttachment(QString json);
    ~OAIAttachment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAttachmentDataRef getAttachmentDataRef() const;
    void setAttachmentDataRef(const OAIAttachmentDataRef &attachment_data_ref);
    bool is_attachment_data_ref_Set() const;
    bool is_attachment_data_ref_Valid() const;

    QString getContentName() const;
    void setContentName(const QString &content_name);
    bool is_content_name_Set() const;
    bool is_content_name_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getDownloadUri() const;
    void setDownloadUri(const QString &download_uri);
    bool is_download_uri_Set() const;
    bool is_download_uri_Valid() const;

    OAIDriveDataRef getDriveDataRef() const;
    void setDriveDataRef(const OAIDriveDataRef &drive_data_ref);
    bool is_drive_data_ref_Set() const;
    bool is_drive_data_ref_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getThumbnailUri() const;
    void setThumbnailUri(const QString &thumbnail_uri);
    bool is_thumbnail_uri_Set() const;
    bool is_thumbnail_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAttachmentDataRef m_attachment_data_ref;
    bool m_attachment_data_ref_isSet;
    bool m_attachment_data_ref_isValid;

    QString m_content_name;
    bool m_content_name_isSet;
    bool m_content_name_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_download_uri;
    bool m_download_uri_isSet;
    bool m_download_uri_isValid;

    OAIDriveDataRef m_drive_data_ref;
    bool m_drive_data_ref_isSet;
    bool m_drive_data_ref_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_thumbnail_uri;
    bool m_thumbnail_uri_isSet;
    bool m_thumbnail_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttachment)

#endif // OAIAttachment_H
