/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAppsCardV1Card.h
 *
 * A card interface displayed in a Google Chat message or Google Workspace Add-on. Cards support a defined layout, interactive UI elements like buttons, and rich media like images. Use cards to present detailed information, gather information from users, and guide users to take a next step. [Card builder](https://addons.gsuite.google.com/uikit/builder) To learn how to build cards, see the following documentation: * For Google Chat apps, see [Design dynamic, interactive, and consistent UIs with cards](https://developers.google.com/chat/ui). * For Google Workspace Add-ons, see [Card-based interfaces](https://developers.google.com/apps-script/add-ons/concepts/cards). **Example: Card message for a Google Chat app** ![Example contact card](https://developers.google.com/chat/images/card_api_reference.png) To create the sample card message in Google Chat, use the following JSON: &#x60;&#x60;&#x60; { \&quot;cardsV2\&quot;: [ { \&quot;cardId\&quot;: \&quot;unique-card-id\&quot;, \&quot;card\&quot;: { \&quot;header\&quot;: { \&quot;title\&quot;: \&quot;Sasha\&quot;, \&quot;subtitle\&quot;: \&quot;Software Engineer\&quot;, \&quot;imageUrl\&quot;: \&quot;https://developers.google.com/chat/images/quickstart-app-avatar.png\&quot;, \&quot;imageType\&quot;: \&quot;CIRCLE\&quot;, \&quot;imageAltText\&quot;: \&quot;Avatar for Sasha\&quot;, }, \&quot;sections\&quot;: [ { \&quot;header\&quot;: \&quot;Contact Info\&quot;, \&quot;collapsible\&quot;: true, \&quot;uncollapsibleWidgetsCount\&quot;: 1, \&quot;widgets\&quot;: [ { \&quot;decoratedText\&quot;: { \&quot;startIcon\&quot;: { \&quot;knownIcon\&quot;: \&quot;EMAIL\&quot;, }, \&quot;text\&quot;: \&quot;sasha@example.com\&quot;, } }, { \&quot;decoratedText\&quot;: { \&quot;startIcon\&quot;: { \&quot;knownIcon\&quot;: \&quot;PERSON\&quot;, }, \&quot;text\&quot;: \&quot;Online\&quot;, }, }, { \&quot;decoratedText\&quot;: { \&quot;startIcon\&quot;: { \&quot;knownIcon\&quot;: \&quot;PHONE\&quot;, }, \&quot;text\&quot;: \&quot;+1 (555) 555-1234\&quot;, } }, { \&quot;buttonList\&quot;: { \&quot;buttons\&quot;: [ { \&quot;text\&quot;: \&quot;Share\&quot;, \&quot;onClick\&quot;: { \&quot;openLink\&quot;: { \&quot;url\&quot;: \&quot;https://example.com/share\&quot;, } } }, { \&quot;text\&quot;: \&quot;Edit\&quot;, \&quot;onClick\&quot;: { \&quot;action\&quot;: { \&quot;function\&quot;: \&quot;goToView\&quot;, \&quot;parameters\&quot;: [ { \&quot;key\&quot;: \&quot;viewType\&quot;, \&quot;value\&quot;: \&quot;EDIT\&quot;, } ], } } }, ], } }, ], }, ], }, } ], } &#x60;&#x60;&#x60;
 */

#ifndef OAIGoogleAppsCardV1Card_H
#define OAIGoogleAppsCardV1Card_H

#include <QJsonObject>

#include "OAIGoogleAppsCardV1CardAction.h"
#include "OAIGoogleAppsCardV1CardFixedFooter.h"
#include "OAIGoogleAppsCardV1CardHeader.h"
#include "OAIGoogleAppsCardV1Section.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAppsCardV1CardAction;
class OAIGoogleAppsCardV1CardFixedFooter;
class OAIGoogleAppsCardV1CardHeader;
class OAIGoogleAppsCardV1Section;

class OAIGoogleAppsCardV1Card : public OAIObject {
public:
    OAIGoogleAppsCardV1Card();
    OAIGoogleAppsCardV1Card(QString json);
    ~OAIGoogleAppsCardV1Card() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleAppsCardV1CardAction> getCardActions() const;
    void setCardActions(const QList<OAIGoogleAppsCardV1CardAction> &card_actions);
    bool is_card_actions_Set() const;
    bool is_card_actions_Valid() const;

    QString getDisplayStyle() const;
    void setDisplayStyle(const QString &display_style);
    bool is_display_style_Set() const;
    bool is_display_style_Valid() const;

    OAIGoogleAppsCardV1CardFixedFooter getFixedFooter() const;
    void setFixedFooter(const OAIGoogleAppsCardV1CardFixedFooter &fixed_footer);
    bool is_fixed_footer_Set() const;
    bool is_fixed_footer_Valid() const;

    OAIGoogleAppsCardV1CardHeader getHeader() const;
    void setHeader(const OAIGoogleAppsCardV1CardHeader &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIGoogleAppsCardV1CardHeader getPeekCardHeader() const;
    void setPeekCardHeader(const OAIGoogleAppsCardV1CardHeader &peek_card_header);
    bool is_peek_card_header_Set() const;
    bool is_peek_card_header_Valid() const;

    QString getSectionDividerStyle() const;
    void setSectionDividerStyle(const QString &section_divider_style);
    bool is_section_divider_style_Set() const;
    bool is_section_divider_style_Valid() const;

    QList<OAIGoogleAppsCardV1Section> getSections() const;
    void setSections(const QList<OAIGoogleAppsCardV1Section> &sections);
    bool is_sections_Set() const;
    bool is_sections_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleAppsCardV1CardAction> m_card_actions;
    bool m_card_actions_isSet;
    bool m_card_actions_isValid;

    QString m_display_style;
    bool m_display_style_isSet;
    bool m_display_style_isValid;

    OAIGoogleAppsCardV1CardFixedFooter m_fixed_footer;
    bool m_fixed_footer_isSet;
    bool m_fixed_footer_isValid;

    OAIGoogleAppsCardV1CardHeader m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIGoogleAppsCardV1CardHeader m_peek_card_header;
    bool m_peek_card_header_isSet;
    bool m_peek_card_header_isValid;

    QString m_section_divider_style;
    bool m_section_divider_style_isSet;
    bool m_section_divider_style_isValid;

    QList<OAIGoogleAppsCardV1Section> m_sections;
    bool m_sections_isSet;
    bool m_sections_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAppsCardV1Card)

#endif // OAIGoogleAppsCardV1Card_H
