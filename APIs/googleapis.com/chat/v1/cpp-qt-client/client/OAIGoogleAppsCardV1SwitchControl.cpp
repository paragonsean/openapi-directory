/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsCardV1SwitchControl.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsCardV1SwitchControl::OAIGoogleAppsCardV1SwitchControl(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsCardV1SwitchControl::OAIGoogleAppsCardV1SwitchControl() {
    this->initializeModel();
}

OAIGoogleAppsCardV1SwitchControl::~OAIGoogleAppsCardV1SwitchControl() {}

void OAIGoogleAppsCardV1SwitchControl::initializeModel() {

    m_control_type_isSet = false;
    m_control_type_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_on_change_action_isSet = false;
    m_on_change_action_isValid = false;

    m_selected_isSet = false;
    m_selected_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIGoogleAppsCardV1SwitchControl::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsCardV1SwitchControl::fromJsonObject(QJsonObject json) {

    m_control_type_isValid = ::OpenAPI::fromJsonValue(m_control_type, json[QString("controlType")]);
    m_control_type_isSet = !json[QString("controlType")].isNull() && m_control_type_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_on_change_action_isValid = ::OpenAPI::fromJsonValue(m_on_change_action, json[QString("onChangeAction")]);
    m_on_change_action_isSet = !json[QString("onChangeAction")].isNull() && m_on_change_action_isValid;

    m_selected_isValid = ::OpenAPI::fromJsonValue(m_selected, json[QString("selected")]);
    m_selected_isSet = !json[QString("selected")].isNull() && m_selected_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIGoogleAppsCardV1SwitchControl::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsCardV1SwitchControl::asJsonObject() const {
    QJsonObject obj;
    if (m_control_type_isSet) {
        obj.insert(QString("controlType"), ::OpenAPI::toJsonValue(m_control_type));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_on_change_action.isSet()) {
        obj.insert(QString("onChangeAction"), ::OpenAPI::toJsonValue(m_on_change_action));
    }
    if (m_selected_isSet) {
        obj.insert(QString("selected"), ::OpenAPI::toJsonValue(m_selected));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIGoogleAppsCardV1SwitchControl::getControlType() const {
    return m_control_type;
}
void OAIGoogleAppsCardV1SwitchControl::setControlType(const QString &control_type) {
    m_control_type = control_type;
    m_control_type_isSet = true;
}

bool OAIGoogleAppsCardV1SwitchControl::is_control_type_Set() const{
    return m_control_type_isSet;
}

bool OAIGoogleAppsCardV1SwitchControl::is_control_type_Valid() const{
    return m_control_type_isValid;
}

QString OAIGoogleAppsCardV1SwitchControl::getName() const {
    return m_name;
}
void OAIGoogleAppsCardV1SwitchControl::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAppsCardV1SwitchControl::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAppsCardV1SwitchControl::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleAppsCardV1Action OAIGoogleAppsCardV1SwitchControl::getOnChangeAction() const {
    return m_on_change_action;
}
void OAIGoogleAppsCardV1SwitchControl::setOnChangeAction(const OAIGoogleAppsCardV1Action &on_change_action) {
    m_on_change_action = on_change_action;
    m_on_change_action_isSet = true;
}

bool OAIGoogleAppsCardV1SwitchControl::is_on_change_action_Set() const{
    return m_on_change_action_isSet;
}

bool OAIGoogleAppsCardV1SwitchControl::is_on_change_action_Valid() const{
    return m_on_change_action_isValid;
}

bool OAIGoogleAppsCardV1SwitchControl::isSelected() const {
    return m_selected;
}
void OAIGoogleAppsCardV1SwitchControl::setSelected(const bool &selected) {
    m_selected = selected;
    m_selected_isSet = true;
}

bool OAIGoogleAppsCardV1SwitchControl::is_selected_Set() const{
    return m_selected_isSet;
}

bool OAIGoogleAppsCardV1SwitchControl::is_selected_Valid() const{
    return m_selected_isValid;
}

QString OAIGoogleAppsCardV1SwitchControl::getValue() const {
    return m_value;
}
void OAIGoogleAppsCardV1SwitchControl::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIGoogleAppsCardV1SwitchControl::is_value_Set() const{
    return m_value_isSet;
}

bool OAIGoogleAppsCardV1SwitchControl::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIGoogleAppsCardV1SwitchControl::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_control_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_on_change_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_selected_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsCardV1SwitchControl::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
