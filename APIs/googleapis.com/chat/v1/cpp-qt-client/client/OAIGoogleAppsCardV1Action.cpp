/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsCardV1Action.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsCardV1Action::OAIGoogleAppsCardV1Action(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsCardV1Action::OAIGoogleAppsCardV1Action() {
    this->initializeModel();
}

OAIGoogleAppsCardV1Action::~OAIGoogleAppsCardV1Action() {}

void OAIGoogleAppsCardV1Action::initializeModel() {

    m_function_isSet = false;
    m_function_isValid = false;

    m_interaction_isSet = false;
    m_interaction_isValid = false;

    m_load_indicator_isSet = false;
    m_load_indicator_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_persist_values_isSet = false;
    m_persist_values_isValid = false;
}

void OAIGoogleAppsCardV1Action::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsCardV1Action::fromJsonObject(QJsonObject json) {

    m_function_isValid = ::OpenAPI::fromJsonValue(m_function, json[QString("function")]);
    m_function_isSet = !json[QString("function")].isNull() && m_function_isValid;

    m_interaction_isValid = ::OpenAPI::fromJsonValue(m_interaction, json[QString("interaction")]);
    m_interaction_isSet = !json[QString("interaction")].isNull() && m_interaction_isValid;

    m_load_indicator_isValid = ::OpenAPI::fromJsonValue(m_load_indicator, json[QString("loadIndicator")]);
    m_load_indicator_isSet = !json[QString("loadIndicator")].isNull() && m_load_indicator_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_persist_values_isValid = ::OpenAPI::fromJsonValue(m_persist_values, json[QString("persistValues")]);
    m_persist_values_isSet = !json[QString("persistValues")].isNull() && m_persist_values_isValid;
}

QString OAIGoogleAppsCardV1Action::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsCardV1Action::asJsonObject() const {
    QJsonObject obj;
    if (m_function_isSet) {
        obj.insert(QString("function"), ::OpenAPI::toJsonValue(m_function));
    }
    if (m_interaction_isSet) {
        obj.insert(QString("interaction"), ::OpenAPI::toJsonValue(m_interaction));
    }
    if (m_load_indicator_isSet) {
        obj.insert(QString("loadIndicator"), ::OpenAPI::toJsonValue(m_load_indicator));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_persist_values_isSet) {
        obj.insert(QString("persistValues"), ::OpenAPI::toJsonValue(m_persist_values));
    }
    return obj;
}

QString OAIGoogleAppsCardV1Action::getFunction() const {
    return m_function;
}
void OAIGoogleAppsCardV1Action::setFunction(const QString &function) {
    m_function = function;
    m_function_isSet = true;
}

bool OAIGoogleAppsCardV1Action::is_function_Set() const{
    return m_function_isSet;
}

bool OAIGoogleAppsCardV1Action::is_function_Valid() const{
    return m_function_isValid;
}

QString OAIGoogleAppsCardV1Action::getInteraction() const {
    return m_interaction;
}
void OAIGoogleAppsCardV1Action::setInteraction(const QString &interaction) {
    m_interaction = interaction;
    m_interaction_isSet = true;
}

bool OAIGoogleAppsCardV1Action::is_interaction_Set() const{
    return m_interaction_isSet;
}

bool OAIGoogleAppsCardV1Action::is_interaction_Valid() const{
    return m_interaction_isValid;
}

QString OAIGoogleAppsCardV1Action::getLoadIndicator() const {
    return m_load_indicator;
}
void OAIGoogleAppsCardV1Action::setLoadIndicator(const QString &load_indicator) {
    m_load_indicator = load_indicator;
    m_load_indicator_isSet = true;
}

bool OAIGoogleAppsCardV1Action::is_load_indicator_Set() const{
    return m_load_indicator_isSet;
}

bool OAIGoogleAppsCardV1Action::is_load_indicator_Valid() const{
    return m_load_indicator_isValid;
}

QList<OAIGoogleAppsCardV1ActionParameter> OAIGoogleAppsCardV1Action::getParameters() const {
    return m_parameters;
}
void OAIGoogleAppsCardV1Action::setParameters(const QList<OAIGoogleAppsCardV1ActionParameter> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIGoogleAppsCardV1Action::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIGoogleAppsCardV1Action::is_parameters_Valid() const{
    return m_parameters_isValid;
}

bool OAIGoogleAppsCardV1Action::isPersistValues() const {
    return m_persist_values;
}
void OAIGoogleAppsCardV1Action::setPersistValues(const bool &persist_values) {
    m_persist_values = persist_values;
    m_persist_values_isSet = true;
}

bool OAIGoogleAppsCardV1Action::is_persist_values_Set() const{
    return m_persist_values_isSet;
}

bool OAIGoogleAppsCardV1Action::is_persist_values_Valid() const{
    return m_persist_values_isValid;
}

bool OAIGoogleAppsCardV1Action::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_function_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_interaction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_load_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_persist_values_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsCardV1Action::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
