/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsCardV1DecoratedText.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsCardV1DecoratedText::OAIGoogleAppsCardV1DecoratedText(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsCardV1DecoratedText::OAIGoogleAppsCardV1DecoratedText() {
    this->initializeModel();
}

OAIGoogleAppsCardV1DecoratedText::~OAIGoogleAppsCardV1DecoratedText() {}

void OAIGoogleAppsCardV1DecoratedText::initializeModel() {

    m_bottom_label_isSet = false;
    m_bottom_label_isValid = false;

    m_button_isSet = false;
    m_button_isValid = false;

    m_end_icon_isSet = false;
    m_end_icon_isValid = false;

    m_icon_isSet = false;
    m_icon_isValid = false;

    m_on_click_isSet = false;
    m_on_click_isValid = false;

    m_start_icon_isSet = false;
    m_start_icon_isValid = false;

    m_switch_control_isSet = false;
    m_switch_control_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;

    m_top_label_isSet = false;
    m_top_label_isValid = false;

    m_wrap_text_isSet = false;
    m_wrap_text_isValid = false;
}

void OAIGoogleAppsCardV1DecoratedText::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsCardV1DecoratedText::fromJsonObject(QJsonObject json) {

    m_bottom_label_isValid = ::OpenAPI::fromJsonValue(m_bottom_label, json[QString("bottomLabel")]);
    m_bottom_label_isSet = !json[QString("bottomLabel")].isNull() && m_bottom_label_isValid;

    m_button_isValid = ::OpenAPI::fromJsonValue(m_button, json[QString("button")]);
    m_button_isSet = !json[QString("button")].isNull() && m_button_isValid;

    m_end_icon_isValid = ::OpenAPI::fromJsonValue(m_end_icon, json[QString("endIcon")]);
    m_end_icon_isSet = !json[QString("endIcon")].isNull() && m_end_icon_isValid;

    m_icon_isValid = ::OpenAPI::fromJsonValue(m_icon, json[QString("icon")]);
    m_icon_isSet = !json[QString("icon")].isNull() && m_icon_isValid;

    m_on_click_isValid = ::OpenAPI::fromJsonValue(m_on_click, json[QString("onClick")]);
    m_on_click_isSet = !json[QString("onClick")].isNull() && m_on_click_isValid;

    m_start_icon_isValid = ::OpenAPI::fromJsonValue(m_start_icon, json[QString("startIcon")]);
    m_start_icon_isSet = !json[QString("startIcon")].isNull() && m_start_icon_isValid;

    m_switch_control_isValid = ::OpenAPI::fromJsonValue(m_switch_control, json[QString("switchControl")]);
    m_switch_control_isSet = !json[QString("switchControl")].isNull() && m_switch_control_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;

    m_top_label_isValid = ::OpenAPI::fromJsonValue(m_top_label, json[QString("topLabel")]);
    m_top_label_isSet = !json[QString("topLabel")].isNull() && m_top_label_isValid;

    m_wrap_text_isValid = ::OpenAPI::fromJsonValue(m_wrap_text, json[QString("wrapText")]);
    m_wrap_text_isSet = !json[QString("wrapText")].isNull() && m_wrap_text_isValid;
}

QString OAIGoogleAppsCardV1DecoratedText::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsCardV1DecoratedText::asJsonObject() const {
    QJsonObject obj;
    if (m_bottom_label_isSet) {
        obj.insert(QString("bottomLabel"), ::OpenAPI::toJsonValue(m_bottom_label));
    }
    if (m_button.isSet()) {
        obj.insert(QString("button"), ::OpenAPI::toJsonValue(m_button));
    }
    if (m_end_icon.isSet()) {
        obj.insert(QString("endIcon"), ::OpenAPI::toJsonValue(m_end_icon));
    }
    if (m_icon.isSet()) {
        obj.insert(QString("icon"), ::OpenAPI::toJsonValue(m_icon));
    }
    if (m_on_click.isSet()) {
        obj.insert(QString("onClick"), ::OpenAPI::toJsonValue(m_on_click));
    }
    if (m_start_icon.isSet()) {
        obj.insert(QString("startIcon"), ::OpenAPI::toJsonValue(m_start_icon));
    }
    if (m_switch_control.isSet()) {
        obj.insert(QString("switchControl"), ::OpenAPI::toJsonValue(m_switch_control));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    if (m_top_label_isSet) {
        obj.insert(QString("topLabel"), ::OpenAPI::toJsonValue(m_top_label));
    }
    if (m_wrap_text_isSet) {
        obj.insert(QString("wrapText"), ::OpenAPI::toJsonValue(m_wrap_text));
    }
    return obj;
}

QString OAIGoogleAppsCardV1DecoratedText::getBottomLabel() const {
    return m_bottom_label;
}
void OAIGoogleAppsCardV1DecoratedText::setBottomLabel(const QString &bottom_label) {
    m_bottom_label = bottom_label;
    m_bottom_label_isSet = true;
}

bool OAIGoogleAppsCardV1DecoratedText::is_bottom_label_Set() const{
    return m_bottom_label_isSet;
}

bool OAIGoogleAppsCardV1DecoratedText::is_bottom_label_Valid() const{
    return m_bottom_label_isValid;
}

OAIGoogleAppsCardV1Button OAIGoogleAppsCardV1DecoratedText::getButton() const {
    return m_button;
}
void OAIGoogleAppsCardV1DecoratedText::setButton(const OAIGoogleAppsCardV1Button &button) {
    m_button = button;
    m_button_isSet = true;
}

bool OAIGoogleAppsCardV1DecoratedText::is_button_Set() const{
    return m_button_isSet;
}

bool OAIGoogleAppsCardV1DecoratedText::is_button_Valid() const{
    return m_button_isValid;
}

OAIGoogleAppsCardV1Icon OAIGoogleAppsCardV1DecoratedText::getEndIcon() const {
    return m_end_icon;
}
void OAIGoogleAppsCardV1DecoratedText::setEndIcon(const OAIGoogleAppsCardV1Icon &end_icon) {
    m_end_icon = end_icon;
    m_end_icon_isSet = true;
}

bool OAIGoogleAppsCardV1DecoratedText::is_end_icon_Set() const{
    return m_end_icon_isSet;
}

bool OAIGoogleAppsCardV1DecoratedText::is_end_icon_Valid() const{
    return m_end_icon_isValid;
}

OAIGoogleAppsCardV1Icon OAIGoogleAppsCardV1DecoratedText::getIcon() const {
    return m_icon;
}
void OAIGoogleAppsCardV1DecoratedText::setIcon(const OAIGoogleAppsCardV1Icon &icon) {
    m_icon = icon;
    m_icon_isSet = true;
}

bool OAIGoogleAppsCardV1DecoratedText::is_icon_Set() const{
    return m_icon_isSet;
}

bool OAIGoogleAppsCardV1DecoratedText::is_icon_Valid() const{
    return m_icon_isValid;
}

OAIGoogleAppsCardV1OnClick OAIGoogleAppsCardV1DecoratedText::getOnClick() const {
    return m_on_click;
}
void OAIGoogleAppsCardV1DecoratedText::setOnClick(const OAIGoogleAppsCardV1OnClick &on_click) {
    m_on_click = on_click;
    m_on_click_isSet = true;
}

bool OAIGoogleAppsCardV1DecoratedText::is_on_click_Set() const{
    return m_on_click_isSet;
}

bool OAIGoogleAppsCardV1DecoratedText::is_on_click_Valid() const{
    return m_on_click_isValid;
}

OAIGoogleAppsCardV1Icon OAIGoogleAppsCardV1DecoratedText::getStartIcon() const {
    return m_start_icon;
}
void OAIGoogleAppsCardV1DecoratedText::setStartIcon(const OAIGoogleAppsCardV1Icon &start_icon) {
    m_start_icon = start_icon;
    m_start_icon_isSet = true;
}

bool OAIGoogleAppsCardV1DecoratedText::is_start_icon_Set() const{
    return m_start_icon_isSet;
}

bool OAIGoogleAppsCardV1DecoratedText::is_start_icon_Valid() const{
    return m_start_icon_isValid;
}

OAIGoogleAppsCardV1SwitchControl OAIGoogleAppsCardV1DecoratedText::getSwitchControl() const {
    return m_switch_control;
}
void OAIGoogleAppsCardV1DecoratedText::setSwitchControl(const OAIGoogleAppsCardV1SwitchControl &switch_control) {
    m_switch_control = switch_control;
    m_switch_control_isSet = true;
}

bool OAIGoogleAppsCardV1DecoratedText::is_switch_control_Set() const{
    return m_switch_control_isSet;
}

bool OAIGoogleAppsCardV1DecoratedText::is_switch_control_Valid() const{
    return m_switch_control_isValid;
}

QString OAIGoogleAppsCardV1DecoratedText::getText() const {
    return m_text;
}
void OAIGoogleAppsCardV1DecoratedText::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIGoogleAppsCardV1DecoratedText::is_text_Set() const{
    return m_text_isSet;
}

bool OAIGoogleAppsCardV1DecoratedText::is_text_Valid() const{
    return m_text_isValid;
}

QString OAIGoogleAppsCardV1DecoratedText::getTopLabel() const {
    return m_top_label;
}
void OAIGoogleAppsCardV1DecoratedText::setTopLabel(const QString &top_label) {
    m_top_label = top_label;
    m_top_label_isSet = true;
}

bool OAIGoogleAppsCardV1DecoratedText::is_top_label_Set() const{
    return m_top_label_isSet;
}

bool OAIGoogleAppsCardV1DecoratedText::is_top_label_Valid() const{
    return m_top_label_isValid;
}

bool OAIGoogleAppsCardV1DecoratedText::isWrapText() const {
    return m_wrap_text;
}
void OAIGoogleAppsCardV1DecoratedText::setWrapText(const bool &wrap_text) {
    m_wrap_text = wrap_text;
    m_wrap_text_isSet = true;
}

bool OAIGoogleAppsCardV1DecoratedText::is_wrap_text_Set() const{
    return m_wrap_text_isSet;
}

bool OAIGoogleAppsCardV1DecoratedText::is_wrap_text_Valid() const{
    return m_wrap_text_isValid;
}

bool OAIGoogleAppsCardV1DecoratedText::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bottom_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_button.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_icon.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_icon.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_on_click.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_icon.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_switch_control.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_top_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wrap_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsCardV1DecoratedText::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
