/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsCardV1Column.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsCardV1Column::OAIGoogleAppsCardV1Column(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsCardV1Column::OAIGoogleAppsCardV1Column() {
    this->initializeModel();
}

OAIGoogleAppsCardV1Column::~OAIGoogleAppsCardV1Column() {}

void OAIGoogleAppsCardV1Column::initializeModel() {

    m_horizontal_alignment_isSet = false;
    m_horizontal_alignment_isValid = false;

    m_horizontal_size_style_isSet = false;
    m_horizontal_size_style_isValid = false;

    m_vertical_alignment_isSet = false;
    m_vertical_alignment_isValid = false;

    m_widgets_isSet = false;
    m_widgets_isValid = false;
}

void OAIGoogleAppsCardV1Column::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsCardV1Column::fromJsonObject(QJsonObject json) {

    m_horizontal_alignment_isValid = ::OpenAPI::fromJsonValue(m_horizontal_alignment, json[QString("horizontalAlignment")]);
    m_horizontal_alignment_isSet = !json[QString("horizontalAlignment")].isNull() && m_horizontal_alignment_isValid;

    m_horizontal_size_style_isValid = ::OpenAPI::fromJsonValue(m_horizontal_size_style, json[QString("horizontalSizeStyle")]);
    m_horizontal_size_style_isSet = !json[QString("horizontalSizeStyle")].isNull() && m_horizontal_size_style_isValid;

    m_vertical_alignment_isValid = ::OpenAPI::fromJsonValue(m_vertical_alignment, json[QString("verticalAlignment")]);
    m_vertical_alignment_isSet = !json[QString("verticalAlignment")].isNull() && m_vertical_alignment_isValid;

    m_widgets_isValid = ::OpenAPI::fromJsonValue(m_widgets, json[QString("widgets")]);
    m_widgets_isSet = !json[QString("widgets")].isNull() && m_widgets_isValid;
}

QString OAIGoogleAppsCardV1Column::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsCardV1Column::asJsonObject() const {
    QJsonObject obj;
    if (m_horizontal_alignment_isSet) {
        obj.insert(QString("horizontalAlignment"), ::OpenAPI::toJsonValue(m_horizontal_alignment));
    }
    if (m_horizontal_size_style_isSet) {
        obj.insert(QString("horizontalSizeStyle"), ::OpenAPI::toJsonValue(m_horizontal_size_style));
    }
    if (m_vertical_alignment_isSet) {
        obj.insert(QString("verticalAlignment"), ::OpenAPI::toJsonValue(m_vertical_alignment));
    }
    if (m_widgets.size() > 0) {
        obj.insert(QString("widgets"), ::OpenAPI::toJsonValue(m_widgets));
    }
    return obj;
}

QString OAIGoogleAppsCardV1Column::getHorizontalAlignment() const {
    return m_horizontal_alignment;
}
void OAIGoogleAppsCardV1Column::setHorizontalAlignment(const QString &horizontal_alignment) {
    m_horizontal_alignment = horizontal_alignment;
    m_horizontal_alignment_isSet = true;
}

bool OAIGoogleAppsCardV1Column::is_horizontal_alignment_Set() const{
    return m_horizontal_alignment_isSet;
}

bool OAIGoogleAppsCardV1Column::is_horizontal_alignment_Valid() const{
    return m_horizontal_alignment_isValid;
}

QString OAIGoogleAppsCardV1Column::getHorizontalSizeStyle() const {
    return m_horizontal_size_style;
}
void OAIGoogleAppsCardV1Column::setHorizontalSizeStyle(const QString &horizontal_size_style) {
    m_horizontal_size_style = horizontal_size_style;
    m_horizontal_size_style_isSet = true;
}

bool OAIGoogleAppsCardV1Column::is_horizontal_size_style_Set() const{
    return m_horizontal_size_style_isSet;
}

bool OAIGoogleAppsCardV1Column::is_horizontal_size_style_Valid() const{
    return m_horizontal_size_style_isValid;
}

QString OAIGoogleAppsCardV1Column::getVerticalAlignment() const {
    return m_vertical_alignment;
}
void OAIGoogleAppsCardV1Column::setVerticalAlignment(const QString &vertical_alignment) {
    m_vertical_alignment = vertical_alignment;
    m_vertical_alignment_isSet = true;
}

bool OAIGoogleAppsCardV1Column::is_vertical_alignment_Set() const{
    return m_vertical_alignment_isSet;
}

bool OAIGoogleAppsCardV1Column::is_vertical_alignment_Valid() const{
    return m_vertical_alignment_isValid;
}

QList<OAIGoogleAppsCardV1Widgets> OAIGoogleAppsCardV1Column::getWidgets() const {
    return m_widgets;
}
void OAIGoogleAppsCardV1Column::setWidgets(const QList<OAIGoogleAppsCardV1Widgets> &widgets) {
    m_widgets = widgets;
    m_widgets_isSet = true;
}

bool OAIGoogleAppsCardV1Column::is_widgets_Set() const{
    return m_widgets_isSet;
}

bool OAIGoogleAppsCardV1Column::is_widgets_Valid() const{
    return m_widgets_isValid;
}

bool OAIGoogleAppsCardV1Column::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_horizontal_alignment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_horizontal_size_style_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vertical_alignment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_widgets.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsCardV1Column::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
