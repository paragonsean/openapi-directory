/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardWithId.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardWithId::OAICardWithId(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardWithId::OAICardWithId() {
    this->initializeModel();
}

OAICardWithId::~OAICardWithId() {}

void OAICardWithId::initializeModel() {

    m_card_isSet = false;
    m_card_isValid = false;

    m_card_id_isSet = false;
    m_card_id_isValid = false;
}

void OAICardWithId::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICardWithId::fromJsonObject(QJsonObject json) {

    m_card_isValid = ::OpenAPI::fromJsonValue(m_card, json[QString("card")]);
    m_card_isSet = !json[QString("card")].isNull() && m_card_isValid;

    m_card_id_isValid = ::OpenAPI::fromJsonValue(m_card_id, json[QString("cardId")]);
    m_card_id_isSet = !json[QString("cardId")].isNull() && m_card_id_isValid;
}

QString OAICardWithId::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICardWithId::asJsonObject() const {
    QJsonObject obj;
    if (m_card.isSet()) {
        obj.insert(QString("card"), ::OpenAPI::toJsonValue(m_card));
    }
    if (m_card_id_isSet) {
        obj.insert(QString("cardId"), ::OpenAPI::toJsonValue(m_card_id));
    }
    return obj;
}

OAIGoogleAppsCardV1Card OAICardWithId::getCard() const {
    return m_card;
}
void OAICardWithId::setCard(const OAIGoogleAppsCardV1Card &card) {
    m_card = card;
    m_card_isSet = true;
}

bool OAICardWithId::is_card_Set() const{
    return m_card_isSet;
}

bool OAICardWithId::is_card_Valid() const{
    return m_card_isValid;
}

QString OAICardWithId::getCardId() const {
    return m_card_id;
}
void OAICardWithId::setCardId(const QString &card_id) {
    m_card_id = card_id;
    m_card_id_isSet = true;
}

bool OAICardWithId::is_card_id_Set() const{
    return m_card_id_isSet;
}

bool OAICardWithId::is_card_id_Valid() const{
    return m_card_id_isValid;
}

bool OAICardWithId::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_card.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICardWithId::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
