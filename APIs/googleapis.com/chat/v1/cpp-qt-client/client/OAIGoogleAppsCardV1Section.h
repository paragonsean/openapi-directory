/**
 * Google Chat API
 * The Google Chat API lets you build Chat apps to integrate your services with Google Chat and manage Chat resources such as spaces, members, and messages.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAppsCardV1Section.h
 *
 * A section contains a collection of widgets that are rendered vertically in the order that they&#39;re specified. [Google Workspace Add-ons and Chat apps](https://developers.google.com/workspace/extend):
 */

#ifndef OAIGoogleAppsCardV1Section_H
#define OAIGoogleAppsCardV1Section_H

#include <QJsonObject>

#include "OAIGoogleAppsCardV1Widget.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAppsCardV1Widget;

class OAIGoogleAppsCardV1Section : public OAIObject {
public:
    OAIGoogleAppsCardV1Section();
    OAIGoogleAppsCardV1Section(QString json);
    ~OAIGoogleAppsCardV1Section() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCollapsible() const;
    void setCollapsible(const bool &collapsible);
    bool is_collapsible_Set() const;
    bool is_collapsible_Valid() const;

    QString getHeader() const;
    void setHeader(const QString &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    qint32 getUncollapsibleWidgetsCount() const;
    void setUncollapsibleWidgetsCount(const qint32 &uncollapsible_widgets_count);
    bool is_uncollapsible_widgets_count_Set() const;
    bool is_uncollapsible_widgets_count_Valid() const;

    QList<OAIGoogleAppsCardV1Widget> getWidgets() const;
    void setWidgets(const QList<OAIGoogleAppsCardV1Widget> &widgets);
    bool is_widgets_Set() const;
    bool is_widgets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_collapsible;
    bool m_collapsible_isSet;
    bool m_collapsible_isValid;

    QString m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    qint32 m_uncollapsible_widgets_count;
    bool m_uncollapsible_widgets_count_isSet;
    bool m_uncollapsible_widgets_count_isValid;

    QList<OAIGoogleAppsCardV1Widget> m_widgets;
    bool m_widgets_isSet;
    bool m_widgets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAppsCardV1Section)

#endif // OAIGoogleAppsCardV1Section_H
