/**
 * API Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApigatewayAuditConfig from './model/ApigatewayAuditConfig';
import ApigatewayAuditLogConfig from './model/ApigatewayAuditLogConfig';
import ApigatewayBinding from './model/ApigatewayBinding';
import ApigatewayExpr from './model/ApigatewayExpr';
import ApigatewayListLocationsResponse from './model/ApigatewayListLocationsResponse';
import ApigatewayListOperationsResponse from './model/ApigatewayListOperationsResponse';
import ApigatewayLocation from './model/ApigatewayLocation';
import ApigatewayOperation from './model/ApigatewayOperation';
import ApigatewayPolicy from './model/ApigatewayPolicy';
import ApigatewaySetIamPolicyRequest from './model/ApigatewaySetIamPolicyRequest';
import ApigatewayStatus from './model/ApigatewayStatus';
import ApigatewayTestIamPermissionsRequest from './model/ApigatewayTestIamPermissionsRequest';
import ApigatewayTestIamPermissionsResponse from './model/ApigatewayTestIamPermissionsResponse';
import ProjectsApi from './api/ProjectsApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiGatewayApi = require('index'); // See note below*.
* var xxxSvc = new ApiGatewayApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiGatewayApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiGatewayApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiGatewayApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1alpha2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApigatewayAuditConfig model constructor.
     * @property {module:model/ApigatewayAuditConfig}
     */
    ApigatewayAuditConfig,

    /**
     * The ApigatewayAuditLogConfig model constructor.
     * @property {module:model/ApigatewayAuditLogConfig}
     */
    ApigatewayAuditLogConfig,

    /**
     * The ApigatewayBinding model constructor.
     * @property {module:model/ApigatewayBinding}
     */
    ApigatewayBinding,

    /**
     * The ApigatewayExpr model constructor.
     * @property {module:model/ApigatewayExpr}
     */
    ApigatewayExpr,

    /**
     * The ApigatewayListLocationsResponse model constructor.
     * @property {module:model/ApigatewayListLocationsResponse}
     */
    ApigatewayListLocationsResponse,

    /**
     * The ApigatewayListOperationsResponse model constructor.
     * @property {module:model/ApigatewayListOperationsResponse}
     */
    ApigatewayListOperationsResponse,

    /**
     * The ApigatewayLocation model constructor.
     * @property {module:model/ApigatewayLocation}
     */
    ApigatewayLocation,

    /**
     * The ApigatewayOperation model constructor.
     * @property {module:model/ApigatewayOperation}
     */
    ApigatewayOperation,

    /**
     * The ApigatewayPolicy model constructor.
     * @property {module:model/ApigatewayPolicy}
     */
    ApigatewayPolicy,

    /**
     * The ApigatewaySetIamPolicyRequest model constructor.
     * @property {module:model/ApigatewaySetIamPolicyRequest}
     */
    ApigatewaySetIamPolicyRequest,

    /**
     * The ApigatewayStatus model constructor.
     * @property {module:model/ApigatewayStatus}
     */
    ApigatewayStatus,

    /**
     * The ApigatewayTestIamPermissionsRequest model constructor.
     * @property {module:model/ApigatewayTestIamPermissionsRequest}
     */
    ApigatewayTestIamPermissionsRequest,

    /**
     * The ApigatewayTestIamPermissionsResponse model constructor.
     * @property {module:model/ApigatewayTestIamPermissionsResponse}
     */
    ApigatewayTestIamPermissionsResponse,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
