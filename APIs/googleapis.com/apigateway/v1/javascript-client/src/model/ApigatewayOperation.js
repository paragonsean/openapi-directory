/**
 * API Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApigatewayStatus from './ApigatewayStatus';

/**
 * The ApigatewayOperation model module.
 * @module model/ApigatewayOperation
 * @version v1
 */
class ApigatewayOperation {
    /**
     * Constructs a new <code>ApigatewayOperation</code>.
     * This resource represents a long-running operation that is the result of a network API call.
     * @alias module:model/ApigatewayOperation
     */
    constructor() { 
        
        ApigatewayOperation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApigatewayOperation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApigatewayOperation} obj Optional instance to populate.
     * @return {module:model/ApigatewayOperation} The populated <code>ApigatewayOperation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApigatewayOperation();

            if (data.hasOwnProperty('done')) {
                obj['done'] = ApiClient.convertToType(data['done'], 'Boolean');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApigatewayStatus.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': Object});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('response')) {
                obj['response'] = ApiClient.convertToType(data['response'], {'String': Object});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApigatewayOperation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApigatewayOperation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `error`
        if (data['error']) { // data not null
          ApigatewayStatus.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
 * @member {Boolean} done
 */
ApigatewayOperation.prototype['done'] = undefined;

/**
 * @member {module:model/ApigatewayStatus} error
 */
ApigatewayOperation.prototype['error'] = undefined;

/**
 * Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
 * @member {Object.<String, Object>} metadata
 */
ApigatewayOperation.prototype['metadata'] = undefined;

/**
 * The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
 * @member {String} name
 */
ApigatewayOperation.prototype['name'] = undefined;

/**
 * The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 * @member {Object.<String, Object>} response
 */
ApigatewayOperation.prototype['response'] = undefined;






export default ApigatewayOperation;

