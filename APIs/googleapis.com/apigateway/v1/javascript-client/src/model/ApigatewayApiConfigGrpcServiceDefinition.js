/**
 * API Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApigatewayApiConfigFile from './ApigatewayApiConfigFile';

/**
 * The ApigatewayApiConfigGrpcServiceDefinition model module.
 * @module model/ApigatewayApiConfigGrpcServiceDefinition
 * @version v1
 */
class ApigatewayApiConfigGrpcServiceDefinition {
    /**
     * Constructs a new <code>ApigatewayApiConfigGrpcServiceDefinition</code>.
     * A gRPC service definition.
     * @alias module:model/ApigatewayApiConfigGrpcServiceDefinition
     */
    constructor() { 
        
        ApigatewayApiConfigGrpcServiceDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApigatewayApiConfigGrpcServiceDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApigatewayApiConfigGrpcServiceDefinition} obj Optional instance to populate.
     * @return {module:model/ApigatewayApiConfigGrpcServiceDefinition} The populated <code>ApigatewayApiConfigGrpcServiceDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApigatewayApiConfigGrpcServiceDefinition();

            if (data.hasOwnProperty('fileDescriptorSet')) {
                obj['fileDescriptorSet'] = ApigatewayApiConfigFile.constructFromObject(data['fileDescriptorSet']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], [ApigatewayApiConfigFile]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApigatewayApiConfigGrpcServiceDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApigatewayApiConfigGrpcServiceDefinition</code>.
     */
    static validateJSON(data) {
        // validate the optional field `fileDescriptorSet`
        if (data['fileDescriptorSet']) { // data not null
          ApigatewayApiConfigFile.validateJSON(data['fileDescriptorSet']);
        }
        if (data['source']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['source'])) {
                throw new Error("Expected the field `source` to be an array in the JSON data but got " + data['source']);
            }
            // validate the optional field `source` (array)
            for (const item of data['source']) {
                ApigatewayApiConfigFile.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/ApigatewayApiConfigFile} fileDescriptorSet
 */
ApigatewayApiConfigGrpcServiceDefinition.prototype['fileDescriptorSet'] = undefined;

/**
 * Optional. Uncompiled proto files associated with the descriptor set, used for display purposes (server-side compilation is not supported). These should match the inputs to 'protoc' command used to generate file_descriptor_set.
 * @member {Array.<module:model/ApigatewayApiConfigFile>} source
 */
ApigatewayApiConfigGrpcServiceDefinition.prototype['source'] = undefined;






export default ApigatewayApiConfigGrpcServiceDefinition;

