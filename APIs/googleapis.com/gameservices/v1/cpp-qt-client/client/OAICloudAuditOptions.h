/**
 * Game Services API
 * Deploy and manage infrastructure for global multiplayer gaming experiences.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICloudAuditOptions.h
 *
 * Write a Cloud Audit log
 */

#ifndef OAICloudAuditOptions_H
#define OAICloudAuditOptions_H

#include <QJsonObject>

#include "OAIAuthorizationLoggingOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuthorizationLoggingOptions;

class OAICloudAuditOptions : public OAIObject {
public:
    OAICloudAuditOptions();
    OAICloudAuditOptions(QString json);
    ~OAICloudAuditOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAuthorizationLoggingOptions getAuthorizationLoggingOptions() const;
    void setAuthorizationLoggingOptions(const OAIAuthorizationLoggingOptions &authorization_logging_options);
    bool is_authorization_logging_options_Set() const;
    bool is_authorization_logging_options_Valid() const;

    QString getLogName() const;
    void setLogName(const QString &log_name);
    bool is_log_name_Set() const;
    bool is_log_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAuthorizationLoggingOptions m_authorization_logging_options;
    bool m_authorization_logging_options_isSet;
    bool m_authorization_logging_options_isValid;

    QString m_log_name;
    bool m_log_name_isSet;
    bool m_log_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICloudAuditOptions)

#endif // OAICloudAuditOptions_H
