/**
 * Game Services API
 * Deploy and manage infrastructure for global multiplayer gaming experiences.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthorizationLoggingOptions from './AuthorizationLoggingOptions';

/**
 * The CloudAuditOptions model module.
 * @module model/CloudAuditOptions
 * @version v1
 */
class CloudAuditOptions {
    /**
     * Constructs a new <code>CloudAuditOptions</code>.
     * Write a Cloud Audit log
     * @alias module:model/CloudAuditOptions
     */
    constructor() { 
        
        CloudAuditOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CloudAuditOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudAuditOptions} obj Optional instance to populate.
     * @return {module:model/CloudAuditOptions} The populated <code>CloudAuditOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudAuditOptions();

            if (data.hasOwnProperty('authorizationLoggingOptions')) {
                obj['authorizationLoggingOptions'] = AuthorizationLoggingOptions.constructFromObject(data['authorizationLoggingOptions']);
            }
            if (data.hasOwnProperty('logName')) {
                obj['logName'] = ApiClient.convertToType(data['logName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudAuditOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudAuditOptions</code>.
     */
    static validateJSON(data) {
        // validate the optional field `authorizationLoggingOptions`
        if (data['authorizationLoggingOptions']) { // data not null
          AuthorizationLoggingOptions.validateJSON(data['authorizationLoggingOptions']);
        }
        // ensure the json data is a string
        if (data['logName'] && !(typeof data['logName'] === 'string' || data['logName'] instanceof String)) {
            throw new Error("Expected the field `logName` to be a primitive type in the JSON string but got " + data['logName']);
        }

        return true;
    }


}



/**
 * @member {module:model/AuthorizationLoggingOptions} authorizationLoggingOptions
 */
CloudAuditOptions.prototype['authorizationLoggingOptions'] = undefined;

/**
 * The log_name to populate in the Cloud Audit Record.
 * @member {module:model/CloudAuditOptions.LogNameEnum} logName
 */
CloudAuditOptions.prototype['logName'] = undefined;





/**
 * Allowed values for the <code>logName</code> property.
 * @enum {String}
 * @readonly
 */
CloudAuditOptions['LogNameEnum'] = {

    /**
     * value: "UNSPECIFIED_LOG_NAME"
     * @const
     */
    "UNSPECIFIED_LOG_NAME": "UNSPECIFIED_LOG_NAME",

    /**
     * value: "ADMIN_ACTIVITY"
     * @const
     */
    "ADMIN_ACTIVITY": "ADMIN_ACTIVITY",

    /**
     * value: "DATA_ACCESS"
     * @const
     */
    "DATA_ACCESS": "DATA_ACCESS"
};



export default CloudAuditOptions;

