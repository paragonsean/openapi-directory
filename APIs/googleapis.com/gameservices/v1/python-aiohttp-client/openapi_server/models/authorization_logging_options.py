# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AuthorizationLoggingOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, permission_type: str=None):
        """AuthorizationLoggingOptions - a model defined in OpenAPI

        :param permission_type: The permission_type of this AuthorizationLoggingOptions.
        """
        self.openapi_types = {
            'permission_type': str
        }

        self.attribute_map = {
            'permission_type': 'permissionType'
        }

        self._permission_type = permission_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthorizationLoggingOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthorizationLoggingOptions of this AuthorizationLoggingOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def permission_type(self):
        """Gets the permission_type of this AuthorizationLoggingOptions.

        The type of the permission that was checked.

        :return: The permission_type of this AuthorizationLoggingOptions.
        :rtype: str
        """
        return self._permission_type

    @permission_type.setter
    def permission_type(self, permission_type):
        """Sets the permission_type of this AuthorizationLoggingOptions.

        The type of the permission that was checked.

        :param permission_type: The permission_type of this AuthorizationLoggingOptions.
        :type permission_type: str
        """
        allowed_values = ["PERMISSION_TYPE_UNSPECIFIED", "ADMIN_READ", "ADMIN_WRITE", "DATA_READ", "DATA_WRITE"]  # noqa: E501
        if permission_type not in allowed_values:
            raise ValueError(
                "Invalid value for `permission_type` ({0}), must be one of {1}"
                .format(permission_type, allowed_values)
            )

        self._permission_type = permission_type
