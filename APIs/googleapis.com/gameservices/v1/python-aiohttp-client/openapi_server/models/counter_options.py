# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_field import CustomField
from openapi_server import util


class CounterOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_fields: List[CustomField]=None, _field: str=None, metric: str=None):
        """CounterOptions - a model defined in OpenAPI

        :param custom_fields: The custom_fields of this CounterOptions.
        :param _field: The _field of this CounterOptions.
        :param metric: The metric of this CounterOptions.
        """
        self.openapi_types = {
            'custom_fields': List[CustomField],
            '_field': str,
            'metric': str
        }

        self.attribute_map = {
            'custom_fields': 'customFields',
            '_field': 'field',
            'metric': 'metric'
        }

        self._custom_fields = custom_fields
        self.__field = _field
        self._metric = metric

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CounterOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CounterOptions of this CounterOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_fields(self):
        """Gets the custom_fields of this CounterOptions.

        Custom fields.

        :return: The custom_fields of this CounterOptions.
        :rtype: List[CustomField]
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this CounterOptions.

        Custom fields.

        :param custom_fields: The custom_fields of this CounterOptions.
        :type custom_fields: List[CustomField]
        """

        self._custom_fields = custom_fields

    @property
    def _field(self):
        """Gets the _field of this CounterOptions.

        The field value to attribute.

        :return: The _field of this CounterOptions.
        :rtype: str
        """
        return self.__field

    @_field.setter
    def _field(self, _field):
        """Sets the _field of this CounterOptions.

        The field value to attribute.

        :param _field: The _field of this CounterOptions.
        :type _field: str
        """

        self.__field = _field

    @property
    def metric(self):
        """Gets the metric of this CounterOptions.

        The metric to update.

        :return: The metric of this CounterOptions.
        :rtype: str
        """
        return self._metric

    @metric.setter
    def metric(self, metric):
        """Sets the metric of this CounterOptions.

        The metric to update.

        :param metric: The metric of this CounterOptions.
        :type metric: str
        """

        self._metric = metric
