/**
 * Game Services API
 * Deploy and manage infrastructure for global multiplayer gaming experiences.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudAuditOptions from './CloudAuditOptions';
import CounterOptions from './CounterOptions';
import DataAccessOptions from './DataAccessOptions';

/**
 * The LogConfig model module.
 * @module model/LogConfig
 * @version v1beta
 */
class LogConfig {
    /**
     * Constructs a new <code>LogConfig</code>.
     * Specifies what kind of log the caller must write
     * @alias module:model/LogConfig
     */
    constructor() { 
        
        LogConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LogConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LogConfig} obj Optional instance to populate.
     * @return {module:model/LogConfig} The populated <code>LogConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LogConfig();

            if (data.hasOwnProperty('cloudAudit')) {
                obj['cloudAudit'] = CloudAuditOptions.constructFromObject(data['cloudAudit']);
            }
            if (data.hasOwnProperty('counter')) {
                obj['counter'] = CounterOptions.constructFromObject(data['counter']);
            }
            if (data.hasOwnProperty('dataAccess')) {
                obj['dataAccess'] = DataAccessOptions.constructFromObject(data['dataAccess']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LogConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LogConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cloudAudit`
        if (data['cloudAudit']) { // data not null
          CloudAuditOptions.validateJSON(data['cloudAudit']);
        }
        // validate the optional field `counter`
        if (data['counter']) { // data not null
          CounterOptions.validateJSON(data['counter']);
        }
        // validate the optional field `dataAccess`
        if (data['dataAccess']) { // data not null
          DataAccessOptions.validateJSON(data['dataAccess']);
        }

        return true;
    }


}



/**
 * @member {module:model/CloudAuditOptions} cloudAudit
 */
LogConfig.prototype['cloudAudit'] = undefined;

/**
 * @member {module:model/CounterOptions} counter
 */
LogConfig.prototype['counter'] = undefined;

/**
 * @member {module:model/DataAccessOptions} dataAccess
 */
LogConfig.prototype['dataAccess'] = undefined;






export default LogConfig;

