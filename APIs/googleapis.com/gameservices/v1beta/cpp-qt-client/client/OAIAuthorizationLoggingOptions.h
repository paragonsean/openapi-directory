/**
 * Game Services API
 * Deploy and manage infrastructure for global multiplayer gaming experiences.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthorizationLoggingOptions.h
 *
 * Authorization-related information used by Cloud Audit Logging.
 */

#ifndef OAIAuthorizationLoggingOptions_H
#define OAIAuthorizationLoggingOptions_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAuthorizationLoggingOptions : public OAIObject {
public:
    OAIAuthorizationLoggingOptions();
    OAIAuthorizationLoggingOptions(QString json);
    ~OAIAuthorizationLoggingOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPermissionType() const;
    void setPermissionType(const QString &permission_type);
    bool is_permission_type_Set() const;
    bool is_permission_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_permission_type;
    bool m_permission_type_isSet;
    bool m_permission_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthorizationLoggingOptions)

#endif // OAIAuthorizationLoggingOptions_H
