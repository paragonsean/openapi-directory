# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DiskStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, free_space_bytes: str=None, total_space_bytes: str=None):
        """DiskStatus - a model defined in OpenAPI

        :param free_space_bytes: The free_space_bytes of this DiskStatus.
        :param total_space_bytes: The total_space_bytes of this DiskStatus.
        """
        self.openapi_types = {
            'free_space_bytes': str,
            'total_space_bytes': str
        }

        self.attribute_map = {
            'free_space_bytes': 'freeSpaceBytes',
            'total_space_bytes': 'totalSpaceBytes'
        }

        self._free_space_bytes = free_space_bytes
        self._total_space_bytes = total_space_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiskStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiskStatus of this DiskStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def free_space_bytes(self):
        """Gets the free_space_bytes of this DiskStatus.

        Free disk space.

        :return: The free_space_bytes of this DiskStatus.
        :rtype: str
        """
        return self._free_space_bytes

    @free_space_bytes.setter
    def free_space_bytes(self, free_space_bytes):
        """Sets the free_space_bytes of this DiskStatus.

        Free disk space.

        :param free_space_bytes: The free_space_bytes of this DiskStatus.
        :type free_space_bytes: str
        """

        self._free_space_bytes = free_space_bytes

    @property
    def total_space_bytes(self):
        """Gets the total_space_bytes of this DiskStatus.

        Total disk space.

        :return: The total_space_bytes of this DiskStatus.
        :rtype: str
        """
        return self._total_space_bytes

    @total_space_bytes.setter
    def total_space_bytes(self, total_space_bytes):
        """Sets the total_space_bytes of this DiskStatus.

        Total disk space.

        :param total_space_bytes: The total_space_bytes of this DiskStatus.
        :type total_space_bytes: str
        """

        self._total_space_bytes = total_space_bytes
