# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DelayedEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cause: str=None, metrics: List[str]=None):
        """DelayedEvent - a model defined in OpenAPI

        :param cause: The cause of this DelayedEvent.
        :param metrics: The metrics of this DelayedEvent.
        """
        self.openapi_types = {
            'cause': str,
            'metrics': List[str]
        }

        self.attribute_map = {
            'cause': 'cause',
            'metrics': 'metrics'
        }

        self._cause = cause
        self._metrics = metrics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DelayedEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DelayedEvent of this DelayedEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cause(self):
        """Gets the cause of this DelayedEvent.

        A textual description of the cause of the delay. The string can change without notice because it is often generated by another service (such as Compute Engine).

        :return: The cause of this DelayedEvent.
        :rtype: str
        """
        return self._cause

    @cause.setter
    def cause(self, cause):
        """Sets the cause of this DelayedEvent.

        A textual description of the cause of the delay. The string can change without notice because it is often generated by another service (such as Compute Engine).

        :param cause: The cause of this DelayedEvent.
        :type cause: str
        """

        self._cause = cause

    @property
    def metrics(self):
        """Gets the metrics of this DelayedEvent.

        If the delay was caused by a resource shortage, this field lists the Compute Engine metrics that are preventing this operation from running (for example, `CPUS` or `INSTANCES`). If the particular metric is not known, a single `UNKNOWN` metric will be present.

        :return: The metrics of this DelayedEvent.
        :rtype: List[str]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this DelayedEvent.

        If the delay was caused by a resource shortage, this field lists the Compute Engine metrics that are preventing this operation from running (for example, `CPUS` or `INSTANCES`). If the particular metric is not known, a single `UNKNOWN` metric will be present.

        :param metrics: The metrics of this DelayedEvent.
        :type metrics: List[str]
        """

        self._metrics = metrics
