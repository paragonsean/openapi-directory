# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Secret(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cipher_text: str=None, key_name: str=None):
        """Secret - a model defined in OpenAPI

        :param cipher_text: The cipher_text of this Secret.
        :param key_name: The key_name of this Secret.
        """
        self.openapi_types = {
            'cipher_text': str,
            'key_name': str
        }

        self.attribute_map = {
            'cipher_text': 'cipherText',
            'key_name': 'keyName'
        }

        self._cipher_text = cipher_text
        self._key_name = key_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Secret':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Secret of this Secret.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cipher_text(self):
        """Gets the cipher_text of this Secret.

        The value of the cipherText response from the `encrypt` method. This field is intentionally unaudited.

        :return: The cipher_text of this Secret.
        :rtype: str
        """
        return self._cipher_text

    @cipher_text.setter
    def cipher_text(self, cipher_text):
        """Sets the cipher_text of this Secret.

        The value of the cipherText response from the `encrypt` method. This field is intentionally unaudited.

        :param cipher_text: The cipher_text of this Secret.
        :type cipher_text: str
        """

        self._cipher_text = cipher_text

    @property
    def key_name(self):
        """Gets the key_name of this Secret.

        The name of the Cloud KMS key that will be used to decrypt the secret value. The VM service account must have the required permissions and authentication scopes to invoke the `decrypt` method on the specified key.

        :return: The key_name of this Secret.
        :rtype: str
        """
        return self._key_name

    @key_name.setter
    def key_name(self, key_name):
        """Sets the key_name of this Secret.

        The name of the Cloud KMS key that will be used to decrypt the secret value. The VM service account must have the required permissions and authentication scopes to invoke the `decrypt` method on the specified key.

        :param key_name: The key_name of this Secret.
        :type key_name: str
        """

        self._key_name = key_name
