# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event import Event
from openapi_server.models.pipeline import Pipeline
from openapi_server import util


class Metadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, end_time: str=None, events: List[Event]=None, labels: Dict[str, str]=None, pipeline: Pipeline=None, start_time: str=None):
        """Metadata - a model defined in OpenAPI

        :param create_time: The create_time of this Metadata.
        :param end_time: The end_time of this Metadata.
        :param events: The events of this Metadata.
        :param labels: The labels of this Metadata.
        :param pipeline: The pipeline of this Metadata.
        :param start_time: The start_time of this Metadata.
        """
        self.openapi_types = {
            'create_time': str,
            'end_time': str,
            'events': List[Event],
            'labels': Dict[str, str],
            'pipeline': Pipeline,
            'start_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'end_time': 'endTime',
            'events': 'events',
            'labels': 'labels',
            'pipeline': 'pipeline',
            'start_time': 'startTime'
        }

        self._create_time = create_time
        self._end_time = end_time
        self._events = events
        self._labels = labels
        self._pipeline = pipeline
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Metadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Metadata of this Metadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this Metadata.

        The time at which the operation was created by the API.

        :return: The create_time of this Metadata.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this Metadata.

        The time at which the operation was created by the API.

        :param create_time: The create_time of this Metadata.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def end_time(self):
        """Gets the end_time of this Metadata.

        The time at which execution was completed and resources were cleaned up.

        :return: The end_time of this Metadata.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this Metadata.

        The time at which execution was completed and resources were cleaned up.

        :param end_time: The end_time of this Metadata.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def events(self):
        """Gets the events of this Metadata.

        The list of events that have happened so far during the execution of this operation.

        :return: The events of this Metadata.
        :rtype: List[Event]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this Metadata.

        The list of events that have happened so far during the execution of this operation.

        :param events: The events of this Metadata.
        :type events: List[Event]
        """

        self._events = events

    @property
    def labels(self):
        """Gets the labels of this Metadata.

        The user-defined labels associated with this operation.

        :return: The labels of this Metadata.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this Metadata.

        The user-defined labels associated with this operation.

        :param labels: The labels of this Metadata.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def pipeline(self):
        """Gets the pipeline of this Metadata.


        :return: The pipeline of this Metadata.
        :rtype: Pipeline
        """
        return self._pipeline

    @pipeline.setter
    def pipeline(self, pipeline):
        """Sets the pipeline of this Metadata.


        :param pipeline: The pipeline of this Metadata.
        :type pipeline: Pipeline
        """

        self._pipeline = pipeline

    @property
    def start_time(self):
        """Gets the start_time of this Metadata.

        The first time at which resources were allocated to execute the pipeline.

        :return: The start_time of this Metadata.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this Metadata.

        The first time at which resources were allocated to execute the pipeline.

        :param start_time: The start_time of this Metadata.
        :type start_time: str
        """

        self._start_time = start_time
