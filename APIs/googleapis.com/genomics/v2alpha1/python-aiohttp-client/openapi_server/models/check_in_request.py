# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server.models.timestamped_event import TimestampedEvent
from openapi_server.models.worker_status import WorkerStatus
from openapi_server import util


class CheckInRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deadline_expired: object=None, event: Dict[str, object]=None, events: List[TimestampedEvent]=None, result: Status=None, sos_report: str=None, worker_status: WorkerStatus=None):
        """CheckInRequest - a model defined in OpenAPI

        :param deadline_expired: The deadline_expired of this CheckInRequest.
        :param event: The event of this CheckInRequest.
        :param events: The events of this CheckInRequest.
        :param result: The result of this CheckInRequest.
        :param sos_report: The sos_report of this CheckInRequest.
        :param worker_status: The worker_status of this CheckInRequest.
        """
        self.openapi_types = {
            'deadline_expired': object,
            'event': Dict[str, object],
            'events': List[TimestampedEvent],
            'result': Status,
            'sos_report': str,
            'worker_status': WorkerStatus
        }

        self.attribute_map = {
            'deadline_expired': 'deadlineExpired',
            'event': 'event',
            'events': 'events',
            'result': 'result',
            'sos_report': 'sosReport',
            'worker_status': 'workerStatus'
        }

        self._deadline_expired = deadline_expired
        self._event = event
        self._events = events
        self._result = result
        self._sos_report = sos_report
        self._worker_status = worker_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckInRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CheckInRequest of this CheckInRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deadline_expired(self):
        """Gets the deadline_expired of this CheckInRequest.

        A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }

        :return: The deadline_expired of this CheckInRequest.
        :rtype: object
        """
        return self._deadline_expired

    @deadline_expired.setter
    def deadline_expired(self, deadline_expired):
        """Sets the deadline_expired of this CheckInRequest.

        A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }

        :param deadline_expired: The deadline_expired of this CheckInRequest.
        :type deadline_expired: object
        """

        self._deadline_expired = deadline_expired

    @property
    def event(self):
        """Gets the event of this CheckInRequest.

        A workflow specific event occurred.

        :return: The event of this CheckInRequest.
        :rtype: Dict[str, object]
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this CheckInRequest.

        A workflow specific event occurred.

        :param event: The event of this CheckInRequest.
        :type event: Dict[str, object]
        """

        self._event = event

    @property
    def events(self):
        """Gets the events of this CheckInRequest.

        A list of timestamped events.

        :return: The events of this CheckInRequest.
        :rtype: List[TimestampedEvent]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this CheckInRequest.

        A list of timestamped events.

        :param events: The events of this CheckInRequest.
        :type events: List[TimestampedEvent]
        """

        self._events = events

    @property
    def result(self):
        """Gets the result of this CheckInRequest.


        :return: The result of this CheckInRequest.
        :rtype: Status
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this CheckInRequest.


        :param result: The result of this CheckInRequest.
        :type result: Status
        """

        self._result = result

    @property
    def sos_report(self):
        """Gets the sos_report of this CheckInRequest.

        An SOS report for an unexpected VM failure.

        :return: The sos_report of this CheckInRequest.
        :rtype: str
        """
        return self._sos_report

    @sos_report.setter
    def sos_report(self, sos_report):
        """Sets the sos_report of this CheckInRequest.

        An SOS report for an unexpected VM failure.

        :param sos_report: The sos_report of this CheckInRequest.
        :type sos_report: str
        """

        self._sos_report = sos_report

    @property
    def worker_status(self):
        """Gets the worker_status of this CheckInRequest.


        :return: The worker_status of this CheckInRequest.
        :rtype: WorkerStatus
        """
        return self._worker_status

    @worker_status.setter
    def worker_status(self, worker_status):
        """Sets the worker_status of this CheckInRequest.


        :param worker_status: The worker_status of this CheckInRequest.
        :type worker_status: WorkerStatus
        """

        self._worker_status = worker_status
