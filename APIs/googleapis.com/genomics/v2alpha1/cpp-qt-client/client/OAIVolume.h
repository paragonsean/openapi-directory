/**
 * Genomics API
 * Uploads, processes, queries, and searches Genomics data in the cloud.
 *
 * The version of the OpenAPI document: v2alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVolume.h
 *
 * Carries information about storage that can be attached to a VM. Specify either &#x60;Volume&#x60; or &#x60;Disk&#x60;, but not both.
 */

#ifndef OAIVolume_H
#define OAIVolume_H

#include <QJsonObject>

#include "OAIExistingDisk.h"
#include "OAINFSMount.h"
#include "OAIPersistentDisk.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExistingDisk;
class OAINFSMount;
class OAIPersistentDisk;

class OAIVolume : public OAIObject {
public:
    OAIVolume();
    OAIVolume(QString json);
    ~OAIVolume() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIExistingDisk getExistingDisk() const;
    void setExistingDisk(const OAIExistingDisk &existing_disk);
    bool is_existing_disk_Set() const;
    bool is_existing_disk_Valid() const;

    OAINFSMount getNfsMount() const;
    void setNfsMount(const OAINFSMount &nfs_mount);
    bool is_nfs_mount_Set() const;
    bool is_nfs_mount_Valid() const;

    OAIPersistentDisk getPersistentDisk() const;
    void setPersistentDisk(const OAIPersistentDisk &persistent_disk);
    bool is_persistent_disk_Set() const;
    bool is_persistent_disk_Valid() const;

    QString getVolume() const;
    void setVolume(const QString &volume);
    bool is_volume_Set() const;
    bool is_volume_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIExistingDisk m_existing_disk;
    bool m_existing_disk_isSet;
    bool m_existing_disk_isValid;

    OAINFSMount m_nfs_mount;
    bool m_nfs_mount_isSet;
    bool m_nfs_mount_isValid;

    OAIPersistentDisk m_persistent_disk;
    bool m_persistent_disk_isSet;
    bool m_persistent_disk_isValid;

    QString m_volume;
    bool m_volume_isSet;
    bool m_volume_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVolume)

#endif // OAIVolume_H
