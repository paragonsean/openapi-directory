/**
 * Genomics API
 * Uploads, processes, queries, and searches Genomics data in the cloud.
 *
 * The version of the OpenAPI document: v2alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimestampedEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimestampedEvent::OAITimestampedEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimestampedEvent::OAITimestampedEvent() {
    this->initializeModel();
}

OAITimestampedEvent::~OAITimestampedEvent() {}

void OAITimestampedEvent::initializeModel() {

    m_data_isSet = false;
    m_data_isValid = false;

    m_timestamp_isSet = false;
    m_timestamp_isValid = false;
}

void OAITimestampedEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimestampedEvent::fromJsonObject(QJsonObject json) {

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_timestamp_isValid = ::OpenAPI::fromJsonValue(m_timestamp, json[QString("timestamp")]);
    m_timestamp_isSet = !json[QString("timestamp")].isNull() && m_timestamp_isValid;
}

QString OAITimestampedEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimestampedEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_data.size() > 0) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_timestamp_isSet) {
        obj.insert(QString("timestamp"), ::OpenAPI::toJsonValue(m_timestamp));
    }
    return obj;
}

QMap<QString, QJsonValue> OAITimestampedEvent::getData() const {
    return m_data;
}
void OAITimestampedEvent::setData(const QMap<QString, QJsonValue> &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAITimestampedEvent::is_data_Set() const{
    return m_data_isSet;
}

bool OAITimestampedEvent::is_data_Valid() const{
    return m_data_isValid;
}

QString OAITimestampedEvent::getTimestamp() const {
    return m_timestamp;
}
void OAITimestampedEvent::setTimestamp(const QString &timestamp) {
    m_timestamp = timestamp;
    m_timestamp_isSet = true;
}

bool OAITimestampedEvent::is_timestamp_Set() const{
    return m_timestamp_isSet;
}

bool OAITimestampedEvent::is_timestamp_Valid() const{
    return m_timestamp_isValid;
}

bool OAITimestampedEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimestampedEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
