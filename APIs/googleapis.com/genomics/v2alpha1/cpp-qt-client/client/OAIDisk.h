/**
 * Genomics API
 * Uploads, processes, queries, and searches Genomics data in the cloud.
 *
 * The version of the OpenAPI document: v2alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDisk.h
 *
 * Carries information about a disk that can be attached to a VM. See https://cloud.google.com/compute/docs/disks/performance for more information about disk type, size, and performance considerations. Specify either &#x60;Volume&#x60; or &#x60;Disk&#x60;, but not both.
 */

#ifndef OAIDisk_H
#define OAIDisk_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDisk : public OAIObject {
public:
    OAIDisk();
    OAIDisk(QString json);
    ~OAIDisk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getSizeGb() const;
    void setSizeGb(const qint32 &size_gb);
    bool is_size_gb_Set() const;
    bool is_size_gb_Valid() const;

    QString getSourceImage() const;
    void setSourceImage(const QString &source_image);
    bool is_source_image_Set() const;
    bool is_source_image_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_size_gb;
    bool m_size_gb_isSet;
    bool m_size_gb_isValid;

    QString m_source_image;
    bool m_source_image_isSet;
    bool m_source_image_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDisk)

#endif // OAIDisk_H
