/**
 * Genomics API
 * Uploads, processes, queries, and searches Genomics data in the cloud.
 *
 * The version of the OpenAPI document: v2alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContainerStartedEvent model module.
 * @module model/ContainerStartedEvent
 * @version v2alpha1
 */
class ContainerStartedEvent {
    /**
     * Constructs a new <code>ContainerStartedEvent</code>.
     * An event generated when a container starts.
     * @alias module:model/ContainerStartedEvent
     */
    constructor() { 
        
        ContainerStartedEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContainerStartedEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContainerStartedEvent} obj Optional instance to populate.
     * @return {module:model/ContainerStartedEvent} The populated <code>ContainerStartedEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContainerStartedEvent();

            if (data.hasOwnProperty('actionId')) {
                obj['actionId'] = ApiClient.convertToType(data['actionId'], 'Number');
            }
            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('portMappings')) {
                obj['portMappings'] = ApiClient.convertToType(data['portMappings'], {'String': 'Number'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContainerStartedEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContainerStartedEvent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }

        return true;
    }


}



/**
 * The numeric ID of the action that started this container.
 * @member {Number} actionId
 */
ContainerStartedEvent.prototype['actionId'] = undefined;

/**
 * The public IP address that can be used to connect to the container. This field is only populated when at least one port mapping is present. If the instance was created with a private address, this field will be empty even if port mappings exist.
 * @member {String} ipAddress
 */
ContainerStartedEvent.prototype['ipAddress'] = undefined;

/**
 * The container-to-host port mappings installed for this container. This set will contain any ports exposed using the `PUBLISH_EXPOSED_PORTS` flag as well as any specified in the `Action` definition.
 * @member {Object.<String, Number>} portMappings
 */
ContainerStartedEvent.prototype['portMappings'] = undefined;






export default ContainerStartedEvent;

