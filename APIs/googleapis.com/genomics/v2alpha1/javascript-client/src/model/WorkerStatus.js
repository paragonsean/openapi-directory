/**
 * Genomics API
 * Uploads, processes, queries, and searches Genomics data in the cloud.
 *
 * The version of the OpenAPI document: v2alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DiskStatus from './DiskStatus';

/**
 * The WorkerStatus model module.
 * @module model/WorkerStatus
 * @version v2alpha1
 */
class WorkerStatus {
    /**
     * Constructs a new <code>WorkerStatus</code>.
     * The status of the worker VM.
     * @alias module:model/WorkerStatus
     */
    constructor() { 
        
        WorkerStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkerStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkerStatus} obj Optional instance to populate.
     * @return {module:model/WorkerStatus} The populated <code>WorkerStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkerStatus();

            if (data.hasOwnProperty('attachedDisks')) {
                obj['attachedDisks'] = ApiClient.convertToType(data['attachedDisks'], {'String': DiskStatus});
            }
            if (data.hasOwnProperty('bootDisk')) {
                obj['bootDisk'] = DiskStatus.constructFromObject(data['bootDisk']);
            }
            if (data.hasOwnProperty('freeRamBytes')) {
                obj['freeRamBytes'] = ApiClient.convertToType(data['freeRamBytes'], 'String');
            }
            if (data.hasOwnProperty('totalRamBytes')) {
                obj['totalRamBytes'] = ApiClient.convertToType(data['totalRamBytes'], 'String');
            }
            if (data.hasOwnProperty('uptimeSeconds')) {
                obj['uptimeSeconds'] = ApiClient.convertToType(data['uptimeSeconds'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkerStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkerStatus</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bootDisk`
        if (data['bootDisk']) { // data not null
          DiskStatus.validateJSON(data['bootDisk']);
        }
        // ensure the json data is a string
        if (data['freeRamBytes'] && !(typeof data['freeRamBytes'] === 'string' || data['freeRamBytes'] instanceof String)) {
            throw new Error("Expected the field `freeRamBytes` to be a primitive type in the JSON string but got " + data['freeRamBytes']);
        }
        // ensure the json data is a string
        if (data['totalRamBytes'] && !(typeof data['totalRamBytes'] === 'string' || data['totalRamBytes'] instanceof String)) {
            throw new Error("Expected the field `totalRamBytes` to be a primitive type in the JSON string but got " + data['totalRamBytes']);
        }
        // ensure the json data is a string
        if (data['uptimeSeconds'] && !(typeof data['uptimeSeconds'] === 'string' || data['uptimeSeconds'] instanceof String)) {
            throw new Error("Expected the field `uptimeSeconds` to be a primitive type in the JSON string but got " + data['uptimeSeconds']);
        }

        return true;
    }


}



/**
 * Status of attached disks.
 * @member {Object.<String, module:model/DiskStatus>} attachedDisks
 */
WorkerStatus.prototype['attachedDisks'] = undefined;

/**
 * @member {module:model/DiskStatus} bootDisk
 */
WorkerStatus.prototype['bootDisk'] = undefined;

/**
 * Free RAM.
 * @member {String} freeRamBytes
 */
WorkerStatus.prototype['freeRamBytes'] = undefined;

/**
 * Total RAM.
 * @member {String} totalRamBytes
 */
WorkerStatus.prototype['totalRamBytes'] = undefined;

/**
 * System uptime.
 * @member {String} uptimeSeconds
 */
WorkerStatus.prototype['uptimeSeconds'] = undefined;






export default WorkerStatus;

