/**
 * Genomics API
 * Uploads, processes, queries, and searches Genomics data in the cloud.
 *
 * The version of the OpenAPI document: v2alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CheckInResponse model module.
 * @module model/CheckInResponse
 * @version v2alpha1
 */
class CheckInResponse {
    /**
     * Constructs a new <code>CheckInResponse</code>.
     * The response to the CheckIn method.
     * @alias module:model/CheckInResponse
     */
    constructor() { 
        
        CheckInResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CheckInResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckInResponse} obj Optional instance to populate.
     * @return {module:model/CheckInResponse} The populated <code>CheckInResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckInResponse();

            if (data.hasOwnProperty('deadline')) {
                obj['deadline'] = ApiClient.convertToType(data['deadline'], 'String');
            }
            if (data.hasOwnProperty('features')) {
                obj['features'] = ApiClient.convertToType(data['features'], {'String': Object});
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': Object});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckInResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckInResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deadline'] && !(typeof data['deadline'] === 'string' || data['deadline'] instanceof String)) {
            throw new Error("Expected the field `deadline` to be a primitive type in the JSON string but got " + data['deadline']);
        }

        return true;
    }


}



/**
 * The deadline by which the worker must request an extension. The backend will allow for network transmission time and other delays, but the worker must attempt to transmit the extension request no later than the deadline.
 * @member {String} deadline
 */
CheckInResponse.prototype['deadline'] = undefined;

/**
 * Feature configuration for the operation.
 * @member {Object.<String, Object>} features
 */
CheckInResponse.prototype['features'] = undefined;

/**
 * The metadata that describes the operation assigned to the worker.
 * @member {Object.<String, Object>} metadata
 */
CheckInResponse.prototype['metadata'] = undefined;






export default CheckInResponse;

