openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "The My Business Account Management API provides an interface for managing\
    \ access to a location on Google. Note - If you have a quota of 0 after enabling\
    \ the API, please request for GBP API access."
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: My Business Account Management API
  version: v1
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
  - format: google
    url: https://mybusinessaccountmanagement.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: mybusinessaccountmanagement
externalDocs:
  url: https://developers.google.com/my-business/
servers:
- url: https://mybusinessaccountmanagement.googleapis.com/
tags:
- name: accounts
- name: locations
paths:
  /v1/accounts:
    get:
      description: "Lists all of the accounts for the authenticated user. This includes\
        \ all accounts that the user owns, as well as any accounts for which the user\
        \ has management rights."
      operationId: mybusinessaccountmanagement.accounts.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A filter constraining the accounts to return. The\
          \ response includes only entries that match the filter. If `filter` is empty,\
          \ then no constraints are applied and all accounts (paginated) are retrieved\
          \ for the requested account. For example, a request with the filter `type=USER_GROUP`\
          \ will only return user groups. The `type` field is the only supported filter."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Optional. How many accounts to fetch per page. The default and
          maximum is 20.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Optional. If specified, the next page of accounts is retrieved.\
          \ The `pageToken` is returned when a call to `accounts.list` returns more\
          \ results than can fit into the requested page size."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. The resource name of the account for which the list\
          \ of directly accessible accounts is to be retrieved. This only makes sense\
          \ for Organizations and User Groups. If empty, will return `ListAccounts`\
          \ for the authenticated user. `accounts/{account_id}`."
        explode: true
        in: query
        name: parentAccount
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountsResponse'
          description: Successful response
      tags:
      - accounts
      x-accepts:
      - application/json
    post:
      description: Creates an account with the specified name and type under the given
        parent. - Personal accounts and Organizations cannot be created. - User Groups
        cannot be created with a Personal account as primary owner. - Location Groups
        cannot be created with a primary owner of a Personal account if the Personal
        account is in an Organization. - Location Groups cannot own Location Groups.
      operationId: mybusinessaccountmanagement.accounts.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful response
      tags:
      - accounts
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{name}:
    delete:
      description: Removes the specified admin as a manager of the specified location.
      operationId: mybusinessaccountmanagement.locations.admins.delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The resource name of the admin to remove from the location.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      tags:
      - locations
      x-accepts:
      - application/json
    get:
      description: Gets the specified account. Returns `NOT_FOUND` if the account
        does not exist or if the caller does not have access rights to it.
      operationId: mybusinessaccountmanagement.accounts.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the account to fetch.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful response
      tags:
      - accounts
      x-accepts:
      - application/json
    patch:
      description: Updates the Admin for the specified location. Only the AdminRole
        of the Admin can be updated.
      operationId: mybusinessaccountmanagement.locations.admins.patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Immutable. The resource name. For account admins, this is in\
          \ the form: `accounts/{account_id}/admins/{admin_id}` For location admins,\
          \ this is in the form: `locations/{location_id}/admins/{admin_id}` This\
          \ field will be ignored if set during admin creation."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Required. The specific fields that should be updated. The only
          editable field is role.
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. If true, the request is validated without actually\
          \ updating the account."
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
          description: Successful response
      tags:
      - locations
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{name}:accept:
    post:
      description: Accepts the specified invitation.
      operationId: mybusinessaccountmanagement.accounts.invitations.accept
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the invitation that is being accepted.\
          \ `accounts/{account_id}/invitations/{invitation_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptInvitationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      tags:
      - accounts
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{name}:decline:
    post:
      description: Declines the specified invitation.
      operationId: mybusinessaccountmanagement.accounts.invitations.decline
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the account invitation that is being declined.\
          \ `accounts/{account_id}/invitations/{invitation_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclineInvitationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      tags:
      - accounts
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{name}:transfer:
    post:
      description: Moves a location from an account that the user owns to another
        account that the same user administers. The user must be an owner of the account
        the location is currently associated with and must also be at least a manager
        of the destination account.
      operationId: mybusinessaccountmanagement.locations.transfer
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the location to transfer. `locations/{location_id}`."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferLocationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      tags:
      - locations
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/admins:
    get:
      description: Lists all of the admins for the specified location.
      operationId: mybusinessaccountmanagement.locations.admins.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the location to list admins of. `locations/{location_id}/admins`."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationAdminsResponse'
          description: Successful response
      tags:
      - locations
      x-accepts:
      - application/json
    post:
      description: Invites the specified user to become an administrator for the specified
        location. The invitee must accept the invitation in order to be granted access
        to the location. See AcceptInvitation to programmatically accept an invitation.
      operationId: mybusinessaccountmanagement.locations.admins.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The resource name of the location this admin is created\
          \ for. `locations/{location_id}/admins`."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
          description: Successful response
      tags:
      - locations
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/invitations:
    get:
      description: Lists pending invitations for the specified account.
      operationId: mybusinessaccountmanagement.accounts.invitations.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the account from which the list of invitations\
          \ is being retrieved. `accounts/{account_id}/invitations`"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Filtering the response is supported via the Invitation.target_type
          field.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvitationsResponse'
          description: Successful response
      tags:
      - accounts
      x-accepts:
      - application/json
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    AcceptInvitationRequest:
      description: Request message for AccessControl.AcceptInvitation.
      properties: {}
      type: object
    Account:
      description: "An account is a container for your location. If you are the only\
        \ user who manages locations for your business, you can use your personal\
        \ Google Account. To share management of locations with multiple users, [create\
        \ a business account] (https://support.google.com/business/answer/6085339?ref_topic=6085325)."
      example:
        permissionLevel: PERMISSION_LEVEL_UNSPECIFIED
        role: ACCOUNT_ROLE_UNSPECIFIED
        vettedState: VETTED_STATE_UNSPECIFIED
        accountName: accountName
        organizationInfo:
          address:
            regionCode: regionCode
            sortingCode: sortingCode
            recipients:
            - recipients
            - recipients
            organization: organization
            postalCode: postalCode
            locality: locality
            sublocality: sublocality
            addressLines:
            - addressLines
            - addressLines
            administrativeArea: administrativeArea
            languageCode: languageCode
            revision: 0
          phoneNumber: phoneNumber
          registeredDomain: registeredDomain
        primaryOwner: primaryOwner
        name: name
        accountNumber: accountNumber
        type: ACCOUNT_TYPE_UNSPECIFIED
        verificationState: VERIFICATION_STATE_UNSPECIFIED
      properties:
        accountName:
          description: "Required. The name of the account. For an account of type\
            \ `PERSONAL`, this is the first and last name of the user account."
          type: string
        accountNumber:
          description: Output only. Account reference number if provisioned.
          readOnly: true
          type: string
        name:
          description: "Immutable. The resource name, in the format `accounts/{account_id}`."
          type: string
        organizationInfo:
          $ref: '#/components/schemas/OrganizationInfo'
        permissionLevel:
          description: Output only. Specifies the permission level the user has for
            this account.
          enum:
          - PERMISSION_LEVEL_UNSPECIFIED
          - OWNER_LEVEL
          - MEMBER_LEVEL
          readOnly: true
          type: string
        primaryOwner:
          description: "Required. Input only. The resource name of the account which\
            \ will be the primary owner of the account being created. It should be\
            \ of the form `accounts/{account_id}`."
          type: string
        role:
          description: Output only. Specifies the AccountRole of this account.
          enum:
          - ACCOUNT_ROLE_UNSPECIFIED
          - PRIMARY_OWNER
          - OWNER
          - MANAGER
          - SITE_MANAGER
          readOnly: true
          type: string
        type:
          description: Required. Contains the type of account. Accounts of type PERSONAL
            and ORGANIZATION cannot be created using this API.
          enum:
          - ACCOUNT_TYPE_UNSPECIFIED
          - PERSONAL
          - LOCATION_GROUP
          - USER_GROUP
          - ORGANIZATION
          type: string
        verificationState:
          description: "Output only. If verified, future locations that are created\
            \ are automatically connected to Google Maps, and have Google+ pages created,\
            \ without requiring moderation."
          enum:
          - VERIFICATION_STATE_UNSPECIFIED
          - VERIFIED
          - UNVERIFIED
          - VERIFICATION_REQUESTED
          readOnly: true
          type: string
        vettedState:
          description: Output only. Indicates whether the account is vetted by Google.
            A vetted account is able to verify locations via the VETTED_PARTNER method.
          enum:
          - VETTED_STATE_UNSPECIFIED
          - NOT_VETTED
          - VETTED
          - INVALID
          readOnly: true
          type: string
      type: object
    Admin:
      description: An administrator of an Account or a location.
      example:
        pendingInvitation: true
        role: ADMIN_ROLE_UNSPECIFIED
        name: name
        admin: admin
        account: account
      properties:
        account:
          description: "Immutable. The name of the Account resource that this Admin\
            \ refers to. Used when calling locations.admins.create to invite a LocationGroup\
            \ as an admin. If both this field and `admin` are set on `CREATE` requests,\
            \ this field takes precedence and the email address in `admin` will be\
            \ ignored. Format: `accounts/{account}`."
          type: string
        admin:
          description: "Optional. The name of the admin. When making the initial invitation,\
            \ this is the invitee's email address. On `GET` calls, the user's email\
            \ address is returned if the invitation is still pending. Otherwise, it\
            \ contains the user's first and last names. This field is only needed\
            \ to be set during admin creation."
          type: string
        name:
          description: "Immutable. The resource name. For account admins, this is\
            \ in the form: `accounts/{account_id}/admins/{admin_id}` For location\
            \ admins, this is in the form: `locations/{location_id}/admins/{admin_id}`\
            \ This field will be ignored if set during admin creation."
          type: string
        pendingInvitation:
          description: Output only. Indicates whether this admin has a pending invitation
            for the specified resource.
          readOnly: true
          type: boolean
        role:
          description: Required. Specifies the role that this admin uses with the
            specified Account or Location.
          enum:
          - ADMIN_ROLE_UNSPECIFIED
          - PRIMARY_OWNER
          - OWNER
          - MANAGER
          - SITE_MANAGER
          type: string
      type: object
    DeclineInvitationRequest:
      description: Request message for AccessControl.DeclineInvitation.
      properties: {}
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    Invitation:
      description: Represents a pending invitation.
      example:
        role: ADMIN_ROLE_UNSPECIFIED
        name: name
        targetAccount:
          permissionLevel: PERMISSION_LEVEL_UNSPECIFIED
          role: ACCOUNT_ROLE_UNSPECIFIED
          vettedState: VETTED_STATE_UNSPECIFIED
          accountName: accountName
          organizationInfo:
            address:
              regionCode: regionCode
              sortingCode: sortingCode
              recipients:
              - recipients
              - recipients
              organization: organization
              postalCode: postalCode
              locality: locality
              sublocality: sublocality
              addressLines:
              - addressLines
              - addressLines
              administrativeArea: administrativeArea
              languageCode: languageCode
              revision: 0
            phoneNumber: phoneNumber
            registeredDomain: registeredDomain
          primaryOwner: primaryOwner
          name: name
          accountNumber: accountNumber
          type: ACCOUNT_TYPE_UNSPECIFIED
          verificationState: VERIFICATION_STATE_UNSPECIFIED
        targetType: TARGET_TYPE_UNSPECIFIED
        targetLocation:
          address: address
          locationName: locationName
      properties:
        name:
          description: "Required. The resource name for the invitation. `accounts/{account_id}/invitations/{invitation_id}`."
          type: string
        role:
          description: Output only. The invited role on the account.
          enum:
          - ADMIN_ROLE_UNSPECIFIED
          - PRIMARY_OWNER
          - OWNER
          - MANAGER
          - SITE_MANAGER
          readOnly: true
          type: string
        targetAccount:
          $ref: '#/components/schemas/Account'
        targetLocation:
          $ref: '#/components/schemas/TargetLocation'
        targetType:
          description: Output only. Specifies which target types should appear in
            the response.
          enum:
          - TARGET_TYPE_UNSPECIFIED
          - ACCOUNTS_ONLY
          - LOCATIONS_ONLY
          readOnly: true
          type: string
      type: object
    ListAccountAdminsResponse:
      description: Response message for AccessControl.ListAccountAdmins.
      properties:
        accountAdmins:
          description: A collection of Admin instances.
          items:
            $ref: '#/components/schemas/Admin'
          type: array
      type: object
    ListAccountsResponse:
      description: Response message for Accounts.ListAccounts.
      example:
        nextPageToken: nextPageToken
        accounts:
        - permissionLevel: PERMISSION_LEVEL_UNSPECIFIED
          role: ACCOUNT_ROLE_UNSPECIFIED
          vettedState: VETTED_STATE_UNSPECIFIED
          accountName: accountName
          organizationInfo:
            address:
              regionCode: regionCode
              sortingCode: sortingCode
              recipients:
              - recipients
              - recipients
              organization: organization
              postalCode: postalCode
              locality: locality
              sublocality: sublocality
              addressLines:
              - addressLines
              - addressLines
              administrativeArea: administrativeArea
              languageCode: languageCode
              revision: 0
            phoneNumber: phoneNumber
            registeredDomain: registeredDomain
          primaryOwner: primaryOwner
          name: name
          accountNumber: accountNumber
          type: ACCOUNT_TYPE_UNSPECIFIED
          verificationState: VERIFICATION_STATE_UNSPECIFIED
        - permissionLevel: PERMISSION_LEVEL_UNSPECIFIED
          role: ACCOUNT_ROLE_UNSPECIFIED
          vettedState: VETTED_STATE_UNSPECIFIED
          accountName: accountName
          organizationInfo:
            address:
              regionCode: regionCode
              sortingCode: sortingCode
              recipients:
              - recipients
              - recipients
              organization: organization
              postalCode: postalCode
              locality: locality
              sublocality: sublocality
              addressLines:
              - addressLines
              - addressLines
              administrativeArea: administrativeArea
              languageCode: languageCode
              revision: 0
            phoneNumber: phoneNumber
            registeredDomain: registeredDomain
          primaryOwner: primaryOwner
          name: name
          accountNumber: accountNumber
          type: ACCOUNT_TYPE_UNSPECIFIED
          verificationState: VERIFICATION_STATE_UNSPECIFIED
      properties:
        accounts:
          description: "A collection of accounts to which the user has access. The\
            \ personal account of the user doing the query will always be the first\
            \ item of the result, unless it is filtered out."
          items:
            $ref: '#/components/schemas/Account'
          type: array
        nextPageToken:
          description: "If the number of accounts exceeds the requested page size,\
            \ this field is populated with a token to fetch the next page of accounts\
            \ on a subsequent call to `accounts.list`. If there are no more accounts,\
            \ this field is not present in the response."
          type: string
      type: object
    ListInvitationsResponse:
      description: Response message for AccessControl.ListInvitations.
      example:
        invitations:
        - role: ADMIN_ROLE_UNSPECIFIED
          name: name
          targetAccount:
            permissionLevel: PERMISSION_LEVEL_UNSPECIFIED
            role: ACCOUNT_ROLE_UNSPECIFIED
            vettedState: VETTED_STATE_UNSPECIFIED
            accountName: accountName
            organizationInfo:
              address:
                regionCode: regionCode
                sortingCode: sortingCode
                recipients:
                - recipients
                - recipients
                organization: organization
                postalCode: postalCode
                locality: locality
                sublocality: sublocality
                addressLines:
                - addressLines
                - addressLines
                administrativeArea: administrativeArea
                languageCode: languageCode
                revision: 0
              phoneNumber: phoneNumber
              registeredDomain: registeredDomain
            primaryOwner: primaryOwner
            name: name
            accountNumber: accountNumber
            type: ACCOUNT_TYPE_UNSPECIFIED
            verificationState: VERIFICATION_STATE_UNSPECIFIED
          targetType: TARGET_TYPE_UNSPECIFIED
          targetLocation:
            address: address
            locationName: locationName
        - role: ADMIN_ROLE_UNSPECIFIED
          name: name
          targetAccount:
            permissionLevel: PERMISSION_LEVEL_UNSPECIFIED
            role: ACCOUNT_ROLE_UNSPECIFIED
            vettedState: VETTED_STATE_UNSPECIFIED
            accountName: accountName
            organizationInfo:
              address:
                regionCode: regionCode
                sortingCode: sortingCode
                recipients:
                - recipients
                - recipients
                organization: organization
                postalCode: postalCode
                locality: locality
                sublocality: sublocality
                addressLines:
                - addressLines
                - addressLines
                administrativeArea: administrativeArea
                languageCode: languageCode
                revision: 0
              phoneNumber: phoneNumber
              registeredDomain: registeredDomain
            primaryOwner: primaryOwner
            name: name
            accountNumber: accountNumber
            type: ACCOUNT_TYPE_UNSPECIFIED
            verificationState: VERIFICATION_STATE_UNSPECIFIED
          targetType: TARGET_TYPE_UNSPECIFIED
          targetLocation:
            address: address
            locationName: locationName
      properties:
        invitations:
          description: A collection of invitations that are pending for the account.
            The number of invitations listed here cannot exceed 1000.
          items:
            $ref: '#/components/schemas/Invitation'
          type: array
      type: object
    ListLocationAdminsResponse:
      description: Response message for AccessControl.ListLocationAdmins.
      example:
        admins:
        - pendingInvitation: true
          role: ADMIN_ROLE_UNSPECIFIED
          name: name
          admin: admin
          account: account
        - pendingInvitation: true
          role: ADMIN_ROLE_UNSPECIFIED
          name: name
          admin: admin
          account: account
      properties:
        admins:
          description: A collection of Admins.
          items:
            $ref: '#/components/schemas/Admin'
          type: array
      type: object
    OrganizationInfo:
      description: Additional information stored for an organization.
      example:
        address:
          regionCode: regionCode
          sortingCode: sortingCode
          recipients:
          - recipients
          - recipients
          organization: organization
          postalCode: postalCode
          locality: locality
          sublocality: sublocality
          addressLines:
          - addressLines
          - addressLines
          administrativeArea: administrativeArea
          languageCode: languageCode
          revision: 0
        phoneNumber: phoneNumber
        registeredDomain: registeredDomain
      properties:
        address:
          $ref: '#/components/schemas/PostalAddress'
        phoneNumber:
          description: Output only. The contact number for the organization.
          readOnly: true
          type: string
        registeredDomain:
          description: Output only. The registered domain for the account.
          readOnly: true
          type: string
      type: object
    PostalAddress:
      description: "Represents a postal address, e.g. for postal delivery or payments\
        \ addresses. Given a postal address, a postal service can deliver items to\
        \ a premise, P.O. Box or similar. It is not intended to model geographical\
        \ locations (roads, towns, mountains). In typical usage an address would be\
        \ created via user input or from importing existing data, depending on the\
        \ type of process. Advice on address input / editing: - Use an internationalization-ready\
        \ address widget such as https://github.com/google/libaddressinput) - Users\
        \ should not be presented with UI elements for input or editing of fields\
        \ outside countries where that field is used. For more guidance on how to\
        \ use this schema, please see: https://support.google.com/business/answer/6397478"
      example:
        regionCode: regionCode
        sortingCode: sortingCode
        recipients:
        - recipients
        - recipients
        organization: organization
        postalCode: postalCode
        locality: locality
        sublocality: sublocality
        addressLines:
        - addressLines
        - addressLines
        administrativeArea: administrativeArea
        languageCode: languageCode
        revision: 0
      properties:
        addressLines:
          description: "Unstructured address lines describing the lower levels of\
            \ an address. Because values in address_lines do not have type information\
            \ and may sometimes contain multiple values in a single field (e.g. \"\
            Austin, TX\"), it is important that the line order is clear. The order\
            \ of address lines should be \"envelope order\" for the country/region\
            \ of the address. In places where this can vary (e.g. Japan), address_language\
            \ is used to make it explicit (e.g. \"ja\" for large-to-small ordering\
            \ and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific\
            \ line of an address can be selected based on the language. The minimum\
            \ permitted structural representation of an address consists of a region_code\
            \ with all remaining information placed in the address_lines. It would\
            \ be possible to format such an address very approximately without geocoding,\
            \ but no semantic reasoning could be made about any of the address components\
            \ until it was at least partially resolved. Creating an address only containing\
            \ a region_code and address_lines, and then geocoding is the recommended\
            \ way to handle completely unstructured addresses (as opposed to guessing\
            \ which parts of the address should be localities or administrative areas)."
          items:
            type: string
          type: array
        administrativeArea:
          description: "Optional. Highest administrative subdivision which is used\
            \ for postal addresses of a country or region. For example, this can be\
            \ a state, a province, an oblast, or a prefecture. Specifically, for Spain\
            \ this is the province and not the autonomous community (e.g. \"Barcelona\"\
            \ and not \"Catalonia\"). Many countries don't use an administrative area\
            \ in postal addresses. E.g. in Switzerland this should be left unpopulated."
          type: string
        languageCode:
          description: "Optional. BCP-47 language code of the contents of this address\
            \ (if known). This is often the UI language of the input form or is expected\
            \ to match one of the languages used in the address' country/region, or\
            \ their transliterated equivalents. This can affect formatting in certain\
            \ countries, but is not critical to the correctness of the data and will\
            \ never affect any validation or other non-formatting related operations.\
            \ If this value is not known, it should be omitted (rather than specifying\
            \ a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\"\
            , \"en\"."
          type: string
        locality:
          description: "Optional. Generally refers to the city/town portion of the\
            \ address. Examples: US city, IT comune, UK post town. In regions of the\
            \ world where localities are not well defined or do not fit into this\
            \ structure well, leave locality empty and use address_lines."
          type: string
        organization:
          description: Optional. The name of the organization at the address.
          type: string
        postalCode:
          description: "Optional. Postal code of the address. Not all countries use\
            \ or require postal codes to be present, but where they are used, they\
            \ may trigger additional validation with other parts of the address (e.g.\
            \ state/zip validation in the U.S.A.)."
          type: string
        recipients:
          description: "Optional. The recipient at the address. This field may, under\
            \ certain circumstances, contain multiline information. For example, it\
            \ might contain \"care of\" information."
          items:
            type: string
          type: array
        regionCode:
          description: "Required. CLDR region code of the country/region of the address.\
            \ This is never inferred and it is up to the user to ensure the value\
            \ is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html\
            \ for details. Example: \"CH\" for Switzerland."
          type: string
        revision:
          description: "The schema revision of the `PostalAddress`. This must be set\
            \ to 0, which is the latest revision. All new revisions **must** be backward\
            \ compatible with old revisions."
          format: int32
          type: integer
        sortingCode:
          description: "Optional. Additional, country-specific, sorting code. This\
            \ is not used in most regions. Where it is used, the value is either a\
            \ string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX\
            \ 7\"), or just a number alone, representing the \"sector code\" (Jamaica),\
            \ \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g.\
            \ Côte d'Ivoire)."
          type: string
        sublocality:
          description: "Optional. Sublocality of the address. For example, this can\
            \ be neighborhoods, boroughs, districts."
          type: string
      type: object
    TargetLocation:
      description: Represents a target location for a pending invitation.
      example:
        address: address
        locationName: locationName
      properties:
        address:
          description: The address of the location to which the user is invited.
          type: string
        locationName:
          description: The name of the location to which the user is invited.
          type: string
      type: object
    TransferLocationRequest:
      description: Request message for AccessControl.TransferLocation.
      example:
        destinationAccount: destinationAccount
      properties:
        destinationAccount:
          description: "Required. Name of the account resource to transfer the location\
            \ to (for example, \"accounts/{account}\")."
          type: string
      type: object

