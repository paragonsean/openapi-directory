/**
 * My Business Account Management API
 * The My Business Account Management API provides an interface for managing access to a location on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITargetLocation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITargetLocation::OAITargetLocation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITargetLocation::OAITargetLocation() {
    this->initializeModel();
}

OAITargetLocation::~OAITargetLocation() {}

void OAITargetLocation::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_location_name_isSet = false;
    m_location_name_isValid = false;
}

void OAITargetLocation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITargetLocation::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_location_name_isValid = ::OpenAPI::fromJsonValue(m_location_name, json[QString("locationName")]);
    m_location_name_isSet = !json[QString("locationName")].isNull() && m_location_name_isValid;
}

QString OAITargetLocation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITargetLocation::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_location_name_isSet) {
        obj.insert(QString("locationName"), ::OpenAPI::toJsonValue(m_location_name));
    }
    return obj;
}

QString OAITargetLocation::getAddress() const {
    return m_address;
}
void OAITargetLocation::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAITargetLocation::is_address_Set() const{
    return m_address_isSet;
}

bool OAITargetLocation::is_address_Valid() const{
    return m_address_isValid;
}

QString OAITargetLocation::getLocationName() const {
    return m_location_name;
}
void OAITargetLocation::setLocationName(const QString &location_name) {
    m_location_name = location_name;
    m_location_name_isSet = true;
}

bool OAITargetLocation::is_location_name_Set() const{
    return m_location_name_isSet;
}

bool OAITargetLocation::is_location_name_Valid() const{
    return m_location_name_isValid;
}

bool OAITargetLocation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITargetLocation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
