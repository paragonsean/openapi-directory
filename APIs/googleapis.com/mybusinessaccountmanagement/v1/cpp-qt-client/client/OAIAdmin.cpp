/**
 * My Business Account Management API
 * The My Business Account Management API provides an interface for managing access to a location on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdmin.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdmin::OAIAdmin(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdmin::OAIAdmin() {
    this->initializeModel();
}

OAIAdmin::~OAIAdmin() {}

void OAIAdmin::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;

    m_admin_isSet = false;
    m_admin_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pending_invitation_isSet = false;
    m_pending_invitation_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;
}

void OAIAdmin::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdmin::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;

    m_admin_isValid = ::OpenAPI::fromJsonValue(m_admin, json[QString("admin")]);
    m_admin_isSet = !json[QString("admin")].isNull() && m_admin_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_pending_invitation_isValid = ::OpenAPI::fromJsonValue(m_pending_invitation, json[QString("pendingInvitation")]);
    m_pending_invitation_isSet = !json[QString("pendingInvitation")].isNull() && m_pending_invitation_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;
}

QString OAIAdmin::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdmin::asJsonObject() const {
    QJsonObject obj;
    if (m_account_isSet) {
        obj.insert(QString("account"), ::OpenAPI::toJsonValue(m_account));
    }
    if (m_admin_isSet) {
        obj.insert(QString("admin"), ::OpenAPI::toJsonValue(m_admin));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pending_invitation_isSet) {
        obj.insert(QString("pendingInvitation"), ::OpenAPI::toJsonValue(m_pending_invitation));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    return obj;
}

QString OAIAdmin::getAccount() const {
    return m_account;
}
void OAIAdmin::setAccount(const QString &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIAdmin::is_account_Set() const{
    return m_account_isSet;
}

bool OAIAdmin::is_account_Valid() const{
    return m_account_isValid;
}

QString OAIAdmin::getAdmin() const {
    return m_admin;
}
void OAIAdmin::setAdmin(const QString &admin) {
    m_admin = admin;
    m_admin_isSet = true;
}

bool OAIAdmin::is_admin_Set() const{
    return m_admin_isSet;
}

bool OAIAdmin::is_admin_Valid() const{
    return m_admin_isValid;
}

QString OAIAdmin::getName() const {
    return m_name;
}
void OAIAdmin::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAdmin::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAdmin::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIAdmin::isPendingInvitation() const {
    return m_pending_invitation;
}
void OAIAdmin::setPendingInvitation(const bool &pending_invitation) {
    m_pending_invitation = pending_invitation;
    m_pending_invitation_isSet = true;
}

bool OAIAdmin::is_pending_invitation_Set() const{
    return m_pending_invitation_isSet;
}

bool OAIAdmin::is_pending_invitation_Valid() const{
    return m_pending_invitation_isValid;
}

QString OAIAdmin::getRole() const {
    return m_role;
}
void OAIAdmin::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAIAdmin::is_role_Set() const{
    return m_role_isSet;
}

bool OAIAdmin::is_role_Valid() const{
    return m_role_isValid;
}

bool OAIAdmin::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_admin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pending_invitation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdmin::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
