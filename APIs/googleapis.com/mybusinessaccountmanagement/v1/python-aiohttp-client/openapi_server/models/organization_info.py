# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.postal_address import PostalAddress
from openapi_server import util


class OrganizationInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: PostalAddress=None, phone_number: str=None, registered_domain: str=None):
        """OrganizationInfo - a model defined in OpenAPI

        :param address: The address of this OrganizationInfo.
        :param phone_number: The phone_number of this OrganizationInfo.
        :param registered_domain: The registered_domain of this OrganizationInfo.
        """
        self.openapi_types = {
            'address': PostalAddress,
            'phone_number': str,
            'registered_domain': str
        }

        self.attribute_map = {
            'address': 'address',
            'phone_number': 'phoneNumber',
            'registered_domain': 'registeredDomain'
        }

        self._address = address
        self._phone_number = phone_number
        self._registered_domain = registered_domain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrganizationInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrganizationInfo of this OrganizationInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this OrganizationInfo.


        :return: The address of this OrganizationInfo.
        :rtype: PostalAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this OrganizationInfo.


        :param address: The address of this OrganizationInfo.
        :type address: PostalAddress
        """

        self._address = address

    @property
    def phone_number(self):
        """Gets the phone_number of this OrganizationInfo.

        Output only. The contact number for the organization.

        :return: The phone_number of this OrganizationInfo.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this OrganizationInfo.

        Output only. The contact number for the organization.

        :param phone_number: The phone_number of this OrganizationInfo.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def registered_domain(self):
        """Gets the registered_domain of this OrganizationInfo.

        Output only. The registered domain for the account.

        :return: The registered_domain of this OrganizationInfo.
        :rtype: str
        """
        return self._registered_domain

    @registered_domain.setter
    def registered_domain(self, registered_domain):
        """Sets the registered_domain of this OrganizationInfo.

        Output only. The registered domain for the account.

        :param registered_domain: The registered_domain of this OrganizationInfo.
        :type registered_domain: str
        """

        self._registered_domain = registered_domain
