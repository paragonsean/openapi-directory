# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account import Account
from openapi_server import util


class ListAccountsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accounts: List[Account]=None, next_page_token: str=None):
        """ListAccountsResponse - a model defined in OpenAPI

        :param accounts: The accounts of this ListAccountsResponse.
        :param next_page_token: The next_page_token of this ListAccountsResponse.
        """
        self.openapi_types = {
            'accounts': List[Account],
            'next_page_token': str
        }

        self.attribute_map = {
            'accounts': 'accounts',
            'next_page_token': 'nextPageToken'
        }

        self._accounts = accounts
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListAccountsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListAccountsResponse of this ListAccountsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accounts(self):
        """Gets the accounts of this ListAccountsResponse.

        A collection of accounts to which the user has access. The personal account of the user doing the query will always be the first item of the result, unless it is filtered out.

        :return: The accounts of this ListAccountsResponse.
        :rtype: List[Account]
        """
        return self._accounts

    @accounts.setter
    def accounts(self, accounts):
        """Sets the accounts of this ListAccountsResponse.

        A collection of accounts to which the user has access. The personal account of the user doing the query will always be the first item of the result, unless it is filtered out.

        :param accounts: The accounts of this ListAccountsResponse.
        :type accounts: List[Account]
        """

        self._accounts = accounts

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListAccountsResponse.

        If the number of accounts exceeds the requested page size, this field is populated with a token to fetch the next page of accounts on a subsequent call to `accounts.list`. If there are no more accounts, this field is not present in the response.

        :return: The next_page_token of this ListAccountsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListAccountsResponse.

        If the number of accounts exceeds the requested page size, this field is populated with a token to fetch the next page of accounts on a subsequent call to `accounts.list`. If there are no more accounts, this field is not present in the response.

        :param next_page_token: The next_page_token of this ListAccountsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
