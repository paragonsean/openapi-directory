# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TransferLocationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_account: str=None):
        """TransferLocationRequest - a model defined in OpenAPI

        :param destination_account: The destination_account of this TransferLocationRequest.
        """
        self.openapi_types = {
            'destination_account': str
        }

        self.attribute_map = {
            'destination_account': 'destinationAccount'
        }

        self._destination_account = destination_account

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransferLocationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransferLocationRequest of this TransferLocationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_account(self):
        """Gets the destination_account of this TransferLocationRequest.

        Required. Name of the account resource to transfer the location to (for example, \"accounts/{account}\").

        :return: The destination_account of this TransferLocationRequest.
        :rtype: str
        """
        return self._destination_account

    @destination_account.setter
    def destination_account(self, destination_account):
        """Sets the destination_account of this TransferLocationRequest.

        Required. Name of the account resource to transfer the location to (for example, \"accounts/{account}\").

        :param destination_account: The destination_account of this TransferLocationRequest.
        :type destination_account: str
        """

        self._destination_account = destination_account
