/**
 * My Business Account Management API
 * The My Business Account Management API provides an interface for managing access to a location on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Account from './model/Account';
import Admin from './model/Admin';
import Invitation from './model/Invitation';
import ListAccountAdminsResponse from './model/ListAccountAdminsResponse';
import ListAccountsResponse from './model/ListAccountsResponse';
import ListInvitationsResponse from './model/ListInvitationsResponse';
import ListLocationAdminsResponse from './model/ListLocationAdminsResponse';
import OrganizationInfo from './model/OrganizationInfo';
import PostalAddress from './model/PostalAddress';
import TargetLocation from './model/TargetLocation';
import TransferLocationRequest from './model/TransferLocationRequest';
import AccountsApi from './api/AccountsApi';
import LocationsApi from './api/LocationsApi';


/**
* The My Business Account Management API provides an interface for managing access to a location on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MyBusinessAccountManagementApi = require('index'); // See note below*.
* var xxxSvc = new MyBusinessAccountManagementApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MyBusinessAccountManagementApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MyBusinessAccountManagementApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MyBusinessAccountManagementApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account,

    /**
     * The Admin model constructor.
     * @property {module:model/Admin}
     */
    Admin,

    /**
     * The Invitation model constructor.
     * @property {module:model/Invitation}
     */
    Invitation,

    /**
     * The ListAccountAdminsResponse model constructor.
     * @property {module:model/ListAccountAdminsResponse}
     */
    ListAccountAdminsResponse,

    /**
     * The ListAccountsResponse model constructor.
     * @property {module:model/ListAccountsResponse}
     */
    ListAccountsResponse,

    /**
     * The ListInvitationsResponse model constructor.
     * @property {module:model/ListInvitationsResponse}
     */
    ListInvitationsResponse,

    /**
     * The ListLocationAdminsResponse model constructor.
     * @property {module:model/ListLocationAdminsResponse}
     */
    ListLocationAdminsResponse,

    /**
     * The OrganizationInfo model constructor.
     * @property {module:model/OrganizationInfo}
     */
    OrganizationInfo,

    /**
     * The PostalAddress model constructor.
     * @property {module:model/PostalAddress}
     */
    PostalAddress,

    /**
     * The TargetLocation model constructor.
     * @property {module:model/TargetLocation}
     */
    TargetLocation,

    /**
     * The TransferLocationRequest model constructor.
     * @property {module:model/TransferLocationRequest}
     */
    TransferLocationRequest,

    /**
    * The AccountsApi service constructor.
    * @property {module:api/AccountsApi}
    */
    AccountsApi,

    /**
    * The LocationsApi service constructor.
    * @property {module:api/LocationsApi}
    */
    LocationsApi
};
