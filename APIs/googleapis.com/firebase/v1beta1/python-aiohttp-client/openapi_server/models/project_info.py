# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, location_id: str=None, project: str=None):
        """ProjectInfo - a model defined in OpenAPI

        :param display_name: The display_name of this ProjectInfo.
        :param location_id: The location_id of this ProjectInfo.
        :param project: The project of this ProjectInfo.
        """
        self.openapi_types = {
            'display_name': str,
            'location_id': str,
            'project': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'location_id': 'locationId',
            'project': 'project'
        }

        self._display_name = display_name
        self._location_id = location_id
        self._project = project

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectInfo of this ProjectInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this ProjectInfo.

        The user-assigned display name of the GCP `Project`, for example: `My App`

        :return: The display_name of this ProjectInfo.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ProjectInfo.

        The user-assigned display name of the GCP `Project`, for example: `My App`

        :param display_name: The display_name of this ProjectInfo.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def location_id(self):
        """Gets the location_id of this ProjectInfo.

        The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). Not all Projects will have this field populated. If it is not populated, it means that the Project does not yet have a default GCP resource location. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project.

        :return: The location_id of this ProjectInfo.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this ProjectInfo.

        The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). Not all Projects will have this field populated. If it is not populated, it means that the Project does not yet have a default GCP resource location. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project.

        :param location_id: The location_id of this ProjectInfo.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def project(self):
        """Gets the project of this ProjectInfo.

        The resource name of the GCP `Project` to which Firebase resources can be added, in the format: projects/PROJECT_IDENTIFIER Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.

        :return: The project of this ProjectInfo.
        :rtype: str
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this ProjectInfo.

        The resource name of the GCP `Project` to which Firebase resources can be added, in the format: projects/PROJECT_IDENTIFIER Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.

        :param project: The project of this ProjectInfo.
        :type project: str
        """

        self._project = project
