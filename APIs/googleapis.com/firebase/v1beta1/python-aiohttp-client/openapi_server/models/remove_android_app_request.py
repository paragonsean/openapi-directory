# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RemoveAndroidAppRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_missing: bool=None, etag: str=None, immediate: bool=None, validate_only: bool=None):
        """RemoveAndroidAppRequest - a model defined in OpenAPI

        :param allow_missing: The allow_missing of this RemoveAndroidAppRequest.
        :param etag: The etag of this RemoveAndroidAppRequest.
        :param immediate: The immediate of this RemoveAndroidAppRequest.
        :param validate_only: The validate_only of this RemoveAndroidAppRequest.
        """
        self.openapi_types = {
            'allow_missing': bool,
            'etag': str,
            'immediate': bool,
            'validate_only': bool
        }

        self.attribute_map = {
            'allow_missing': 'allowMissing',
            'etag': 'etag',
            'immediate': 'immediate',
            'validate_only': 'validateOnly'
        }

        self._allow_missing = allow_missing
        self._etag = etag
        self._immediate = immediate
        self._validate_only = validate_only

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoveAndroidAppRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoveAndroidAppRequest of this RemoveAndroidAppRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_missing(self):
        """Gets the allow_missing of this RemoveAndroidAppRequest.

        If set to true, and the App is not found, the request will succeed but no action will be taken on the server.

        :return: The allow_missing of this RemoveAndroidAppRequest.
        :rtype: bool
        """
        return self._allow_missing

    @allow_missing.setter
    def allow_missing(self, allow_missing):
        """Sets the allow_missing of this RemoveAndroidAppRequest.

        If set to true, and the App is not found, the request will succeed but no action will be taken on the server.

        :param allow_missing: The allow_missing of this RemoveAndroidAppRequest.
        :type allow_missing: bool
        """

        self._allow_missing = allow_missing

    @property
    def etag(self):
        """Gets the etag of this RemoveAndroidAppRequest.

        Checksum provided in the AndroidApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.

        :return: The etag of this RemoveAndroidAppRequest.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this RemoveAndroidAppRequest.

        Checksum provided in the AndroidApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.

        :param etag: The etag of this RemoveAndroidAppRequest.
        :type etag: str
        """

        self._etag = etag

    @property
    def immediate(self):
        """Gets the immediate of this RemoveAndroidAppRequest.

        Determines whether to _immediately_ delete the AndroidApp. If set to true, the App is immediately deleted from the Project and cannot be restored to the Project. If not set, defaults to false, which means the App will be set to expire in 30 days. Within the 30 days, the App may be restored to the Project using UndeleteAndroidApp.

        :return: The immediate of this RemoveAndroidAppRequest.
        :rtype: bool
        """
        return self._immediate

    @immediate.setter
    def immediate(self, immediate):
        """Sets the immediate of this RemoveAndroidAppRequest.

        Determines whether to _immediately_ delete the AndroidApp. If set to true, the App is immediately deleted from the Project and cannot be restored to the Project. If not set, defaults to false, which means the App will be set to expire in 30 days. Within the 30 days, the App may be restored to the Project using UndeleteAndroidApp.

        :param immediate: The immediate of this RemoveAndroidAppRequest.
        :type immediate: bool
        """

        self._immediate = immediate

    @property
    def validate_only(self):
        """Gets the validate_only of this RemoveAndroidAppRequest.

        If set to true, the request is only validated. The App will _not_ be removed.

        :return: The validate_only of this RemoveAndroidAppRequest.
        :rtype: bool
        """
        return self._validate_only

    @validate_only.setter
    def validate_only(self, validate_only):
        """Sets the validate_only of this RemoveAndroidAppRequest.

        If set to true, the request is only validated. The App will _not_ be removed.

        :param validate_only: The validate_only of this RemoveAndroidAppRequest.
        :type validate_only: bool
        """

        self._validate_only = validate_only
