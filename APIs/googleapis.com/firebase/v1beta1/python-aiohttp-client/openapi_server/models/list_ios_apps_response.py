# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ios_app import IosApp
from openapi_server import util


class ListIosAppsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apps: List[IosApp]=None, next_page_token: str=None):
        """ListIosAppsResponse - a model defined in OpenAPI

        :param apps: The apps of this ListIosAppsResponse.
        :param next_page_token: The next_page_token of this ListIosAppsResponse.
        """
        self.openapi_types = {
            'apps': List[IosApp],
            'next_page_token': str
        }

        self.attribute_map = {
            'apps': 'apps',
            'next_page_token': 'nextPageToken'
        }

        self._apps = apps
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListIosAppsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListIosAppsResponse of this ListIosAppsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apps(self):
        """Gets the apps of this ListIosAppsResponse.

        List of each `IosApp` associated with the specified `FirebaseProject`.

        :return: The apps of this ListIosAppsResponse.
        :rtype: List[IosApp]
        """
        return self._apps

    @apps.setter
    def apps(self, apps):
        """Sets the apps of this ListIosAppsResponse.

        List of each `IosApp` associated with the specified `FirebaseProject`.

        :param apps: The apps of this ListIosAppsResponse.
        :type apps: List[IosApp]
        """

        self._apps = apps

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListIosAppsResponse.

        If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListIosApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted.

        :return: The next_page_token of this ListIosAppsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListIosAppsResponse.

        If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListIosApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted.

        :param next_page_token: The next_page_token of this ListIosAppsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
