/**
 * Firebase Management API
 * The Firebase Management API enables programmatic setup and management of Firebase projects, including a project's Firebase resources and Firebase apps.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AnalyticsProperty model module.
 * @module model/AnalyticsProperty
 * @version v1beta1
 */
class AnalyticsProperty {
    /**
     * Constructs a new <code>AnalyticsProperty</code>.
     * Details of a Google Analytics property
     * @alias module:model/AnalyticsProperty
     */
    constructor() { 
        
        AnalyticsProperty.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AnalyticsProperty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnalyticsProperty} obj Optional instance to populate.
     * @return {module:model/AnalyticsProperty} The populated <code>AnalyticsProperty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnalyticsProperty();

            if (data.hasOwnProperty('analyticsAccountId')) {
                obj['analyticsAccountId'] = ApiClient.convertToType(data['analyticsAccountId'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnalyticsProperty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnalyticsProperty</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['analyticsAccountId'] && !(typeof data['analyticsAccountId'] === 'string' || data['analyticsAccountId'] instanceof String)) {
            throw new Error("Expected the field `analyticsAccountId` to be a primitive type in the JSON string but got " + data['analyticsAccountId']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}



/**
 * Output only. The ID of the [Google Analytics account](https://www.google.com/analytics/) for the Google Analytics property associated with the specified FirebaseProject.
 * @member {String} analyticsAccountId
 */
AnalyticsProperty.prototype['analyticsAccountId'] = undefined;

/**
 * The display name of the Google Analytics property associated with the specified `FirebaseProject`.
 * @member {String} displayName
 */
AnalyticsProperty.prototype['displayName'] = undefined;

/**
 * The globally unique, Google-assigned identifier of the Google Analytics property associated with the specified `FirebaseProject`. If you called [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) to link the `FirebaseProject` with a Google Analytics account, the value in this `id` field is the same as the ID of the property either specified or provisioned with that call to `AddGoogleAnalytics`.
 * @member {String} id
 */
AnalyticsProperty.prototype['id'] = undefined;






export default AnalyticsProperty;

