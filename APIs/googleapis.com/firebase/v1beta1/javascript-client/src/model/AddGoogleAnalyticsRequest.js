/**
 * Firebase Management API
 * The Firebase Management API enables programmatic setup and management of Firebase projects, including a project's Firebase resources and Firebase apps.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AddGoogleAnalyticsRequest model module.
 * @module model/AddGoogleAnalyticsRequest
 * @version v1beta1
 */
class AddGoogleAnalyticsRequest {
    /**
     * Constructs a new <code>AddGoogleAnalyticsRequest</code>.
     * @alias module:model/AddGoogleAnalyticsRequest
     */
    constructor() { 
        
        AddGoogleAnalyticsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddGoogleAnalyticsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddGoogleAnalyticsRequest} obj Optional instance to populate.
     * @return {module:model/AddGoogleAnalyticsRequest} The populated <code>AddGoogleAnalyticsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddGoogleAnalyticsRequest();

            if (data.hasOwnProperty('analyticsAccountId')) {
                obj['analyticsAccountId'] = ApiClient.convertToType(data['analyticsAccountId'], 'String');
            }
            if (data.hasOwnProperty('analyticsPropertyId')) {
                obj['analyticsPropertyId'] = ApiClient.convertToType(data['analyticsPropertyId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddGoogleAnalyticsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddGoogleAnalyticsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['analyticsAccountId'] && !(typeof data['analyticsAccountId'] === 'string' || data['analyticsAccountId'] instanceof String)) {
            throw new Error("Expected the field `analyticsAccountId` to be a primitive type in the JSON string but got " + data['analyticsAccountId']);
        }
        // ensure the json data is a string
        if (data['analyticsPropertyId'] && !(typeof data['analyticsPropertyId'] === 'string' || data['analyticsPropertyId'] instanceof String)) {
            throw new Error("Expected the field `analyticsPropertyId` to be a primitive type in the JSON string but got " + data['analyticsPropertyId']);
        }

        return true;
    }


}



/**
 * The ID for the existing [Google Analytics account](http://www.google.com/analytics/) that you want to link with the `FirebaseProject`. Specifying this field will provision a new Google Analytics property in your Google Analytics account and associate the new property with the `FirebaseProject`.
 * @member {String} analyticsAccountId
 */
AddGoogleAnalyticsRequest.prototype['analyticsAccountId'] = undefined;

/**
 * The ID for the existing Google Analytics property that you want to associate with the `FirebaseProject`.
 * @member {String} analyticsPropertyId
 */
AddGoogleAnalyticsRequest.prototype['analyticsPropertyId'] = undefined;






export default AddGoogleAnalyticsRequest;

