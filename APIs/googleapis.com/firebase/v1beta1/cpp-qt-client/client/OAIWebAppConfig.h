/**
 * Firebase Management API
 * The Firebase Management API enables programmatic setup and management of Firebase projects, including a project's Firebase resources and Firebase apps.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebAppConfig.h
 *
 * Configuration metadata of a single Firebase App for the web.
 */

#ifndef OAIWebAppConfig_H
#define OAIWebAppConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWebAppConfig : public OAIObject {
public:
    OAIWebAppConfig();
    OAIWebAppConfig(QString json);
    ~OAIWebAppConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiKey() const;
    void setApiKey(const QString &api_key);
    bool is_api_key_Set() const;
    bool is_api_key_Valid() const;

    QString getAppId() const;
    void setAppId(const QString &app_id);
    bool is_app_id_Set() const;
    bool is_app_id_Valid() const;

    QString getAuthDomain() const;
    void setAuthDomain(const QString &auth_domain);
    bool is_auth_domain_Set() const;
    bool is_auth_domain_Valid() const;

    Q_DECL_DEPRECATED QString getDatabaseUrl() const;
    Q_DECL_DEPRECATED void setDatabaseUrl(const QString &database_url);
    Q_DECL_DEPRECATED bool is_database_url_Set() const;
    Q_DECL_DEPRECATED bool is_database_url_Valid() const;

    Q_DECL_DEPRECATED QString getLocationId() const;
    Q_DECL_DEPRECATED void setLocationId(const QString &location_id);
    Q_DECL_DEPRECATED bool is_location_id_Set() const;
    Q_DECL_DEPRECATED bool is_location_id_Valid() const;

    QString getMeasurementId() const;
    void setMeasurementId(const QString &measurement_id);
    bool is_measurement_id_Set() const;
    bool is_measurement_id_Valid() const;

    QString getMessagingSenderId() const;
    void setMessagingSenderId(const QString &messaging_sender_id);
    bool is_messaging_sender_id_Set() const;
    bool is_messaging_sender_id_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    Q_DECL_DEPRECATED QString getStorageBucket() const;
    Q_DECL_DEPRECATED void setStorageBucket(const QString &storage_bucket);
    Q_DECL_DEPRECATED bool is_storage_bucket_Set() const;
    Q_DECL_DEPRECATED bool is_storage_bucket_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_key;
    bool m_api_key_isSet;
    bool m_api_key_isValid;

    QString m_app_id;
    bool m_app_id_isSet;
    bool m_app_id_isValid;

    QString m_auth_domain;
    bool m_auth_domain_isSet;
    bool m_auth_domain_isValid;

    QString m_database_url;
    bool m_database_url_isSet;
    bool m_database_url_isValid;

    QString m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    QString m_measurement_id;
    bool m_measurement_id_isSet;
    bool m_measurement_id_isValid;

    QString m_messaging_sender_id;
    bool m_messaging_sender_id_isSet;
    bool m_messaging_sender_id_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_storage_bucket;
    bool m_storage_bucket_isSet;
    bool m_storage_bucket_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebAppConfig)

#endif // OAIWebAppConfig_H
