/**
 * Firebase Management API
 * The Firebase Management API enables programmatic setup and management of Firebase projects, including a project's Firebase resources and Firebase apps.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAndroidAppConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAndroidAppConfig::OAIAndroidAppConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAndroidAppConfig::OAIAndroidAppConfig() {
    this->initializeModel();
}

OAIAndroidAppConfig::~OAIAndroidAppConfig() {}

void OAIAndroidAppConfig::initializeModel() {

    m_config_file_contents_isSet = false;
    m_config_file_contents_isValid = false;

    m_config_filename_isSet = false;
    m_config_filename_isValid = false;
}

void OAIAndroidAppConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAndroidAppConfig::fromJsonObject(QJsonObject json) {

    m_config_file_contents_isValid = ::OpenAPI::fromJsonValue(m_config_file_contents, json[QString("configFileContents")]);
    m_config_file_contents_isSet = !json[QString("configFileContents")].isNull() && m_config_file_contents_isValid;

    m_config_filename_isValid = ::OpenAPI::fromJsonValue(m_config_filename, json[QString("configFilename")]);
    m_config_filename_isSet = !json[QString("configFilename")].isNull() && m_config_filename_isValid;
}

QString OAIAndroidAppConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAndroidAppConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_config_file_contents_isSet) {
        obj.insert(QString("configFileContents"), ::OpenAPI::toJsonValue(m_config_file_contents));
    }
    if (m_config_filename_isSet) {
        obj.insert(QString("configFilename"), ::OpenAPI::toJsonValue(m_config_filename));
    }
    return obj;
}

QByteArray OAIAndroidAppConfig::getConfigFileContents() const {
    return m_config_file_contents;
}
void OAIAndroidAppConfig::setConfigFileContents(const QByteArray &config_file_contents) {
    m_config_file_contents = config_file_contents;
    m_config_file_contents_isSet = true;
}

bool OAIAndroidAppConfig::is_config_file_contents_Set() const{
    return m_config_file_contents_isSet;
}

bool OAIAndroidAppConfig::is_config_file_contents_Valid() const{
    return m_config_file_contents_isValid;
}

QString OAIAndroidAppConfig::getConfigFilename() const {
    return m_config_filename;
}
void OAIAndroidAppConfig::setConfigFilename(const QString &config_filename) {
    m_config_filename = config_filename;
    m_config_filename_isSet = true;
}

bool OAIAndroidAppConfig::is_config_filename_Set() const{
    return m_config_filename_isSet;
}

bool OAIAndroidAppConfig::is_config_filename_Valid() const{
    return m_config_filename_isValid;
}

bool OAIAndroidAppConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_config_file_contents_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_config_filename_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAndroidAppConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
