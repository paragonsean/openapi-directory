/**
 * Firebase Management API
 * The Firebase Management API enables programmatic setup and management of Firebase projects, including a project's Firebase resources and Firebase apps.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductMetadata::OAIProductMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductMetadata::OAIProductMetadata() {
    this->initializeModel();
}

OAIProductMetadata::~OAIProductMetadata() {}

void OAIProductMetadata::initializeModel() {

    m_warning_messages_isSet = false;
    m_warning_messages_isValid = false;
}

void OAIProductMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductMetadata::fromJsonObject(QJsonObject json) {

    m_warning_messages_isValid = ::OpenAPI::fromJsonValue(m_warning_messages, json[QString("warningMessages")]);
    m_warning_messages_isSet = !json[QString("warningMessages")].isNull() && m_warning_messages_isValid;
}

QString OAIProductMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_warning_messages.size() > 0) {
        obj.insert(QString("warningMessages"), ::OpenAPI::toJsonValue(m_warning_messages));
    }
    return obj;
}

QList<QString> OAIProductMetadata::getWarningMessages() const {
    return m_warning_messages;
}
void OAIProductMetadata::setWarningMessages(const QList<QString> &warning_messages) {
    m_warning_messages = warning_messages;
    m_warning_messages_isSet = true;
}

bool OAIProductMetadata::is_warning_messages_Set() const{
    return m_warning_messages_isSet;
}

bool OAIProductMetadata::is_warning_messages_Valid() const{
    return m_warning_messages_isValid;
}

bool OAIProductMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_warning_messages.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
