# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OperationMetadataV1Alpha1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_time: str=None, insert_time: str=None, method: str=None, target: str=None):
        """OperationMetadataV1Alpha1 - a model defined in OpenAPI

        :param end_time: The end_time of this OperationMetadataV1Alpha1.
        :param insert_time: The insert_time of this OperationMetadataV1Alpha1.
        :param method: The method of this OperationMetadataV1Alpha1.
        :param target: The target of this OperationMetadataV1Alpha1.
        """
        self.openapi_types = {
            'end_time': str,
            'insert_time': str,
            'method': str,
            'target': str
        }

        self.attribute_map = {
            'end_time': 'endTime',
            'insert_time': 'insertTime',
            'method': 'method',
            'target': 'target'
        }

        self._end_time = end_time
        self._insert_time = insert_time
        self._method = method
        self._target = target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OperationMetadataV1Alpha1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OperationMetadataV1Alpha1 of this OperationMetadataV1Alpha1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_time(self):
        """Gets the end_time of this OperationMetadataV1Alpha1.

        Output only. Time when the operation completed.

        :return: The end_time of this OperationMetadataV1Alpha1.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this OperationMetadataV1Alpha1.

        Output only. Time when the operation completed.

        :param end_time: The end_time of this OperationMetadataV1Alpha1.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def insert_time(self):
        """Gets the insert_time of this OperationMetadataV1Alpha1.

        Output only. Time when the operation was created.

        :return: The insert_time of this OperationMetadataV1Alpha1.
        :rtype: str
        """
        return self._insert_time

    @insert_time.setter
    def insert_time(self, insert_time):
        """Sets the insert_time of this OperationMetadataV1Alpha1.

        Output only. Time when the operation was created.

        :param insert_time: The insert_time of this OperationMetadataV1Alpha1.
        :type insert_time: str
        """

        self._insert_time = insert_time

    @property
    def method(self):
        """Gets the method of this OperationMetadataV1Alpha1.

        Output only. Method that initiated the operation e.g. google.cloud.vpcaccess.v1alpha1.Connectors.CreateConnector.

        :return: The method of this OperationMetadataV1Alpha1.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this OperationMetadataV1Alpha1.

        Output only. Method that initiated the operation e.g. google.cloud.vpcaccess.v1alpha1.Connectors.CreateConnector.

        :param method: The method of this OperationMetadataV1Alpha1.
        :type method: str
        """

        self._method = method

    @property
    def target(self):
        """Gets the target of this OperationMetadataV1Alpha1.

        Output only. Name of the resource that this operation is acting on e.g. projects/my-project/locations/us-central1/connectors/v1.

        :return: The target of this OperationMetadataV1Alpha1.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this OperationMetadataV1Alpha1.

        Output only. Name of the resource that this operation is acting on e.g. projects/my-project/locations/us-central1/connectors/v1.

        :param target: The target of this OperationMetadataV1Alpha1.
        :type target: str
        """

        self._target = target
