/**
 * Serverless VPC Access API
 * API for managing VPC access connectors.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ServerlessVpcAccessApi);
  }
}(this, function(expect, ServerlessVpcAccessApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ServerlessVpcAccessApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('vpcaccessProjectsLocationsConnectorsCreate', function() {
      it('should call vpcaccessProjectsLocationsConnectorsCreate successfully', function(done) {
        //uncomment below and update the code to test vpcaccessProjectsLocationsConnectorsCreate
        //instance.vpcaccessProjectsLocationsConnectorsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vpcaccessProjectsLocationsConnectorsDelete', function() {
      it('should call vpcaccessProjectsLocationsConnectorsDelete successfully', function(done) {
        //uncomment below and update the code to test vpcaccessProjectsLocationsConnectorsDelete
        //instance.vpcaccessProjectsLocationsConnectorsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vpcaccessProjectsLocationsConnectorsList', function() {
      it('should call vpcaccessProjectsLocationsConnectorsList successfully', function(done) {
        //uncomment below and update the code to test vpcaccessProjectsLocationsConnectorsList
        //instance.vpcaccessProjectsLocationsConnectorsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vpcaccessProjectsLocationsConnectorsPatch', function() {
      it('should call vpcaccessProjectsLocationsConnectorsPatch successfully', function(done) {
        //uncomment below and update the code to test vpcaccessProjectsLocationsConnectorsPatch
        //instance.vpcaccessProjectsLocationsConnectorsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vpcaccessProjectsLocationsList', function() {
      it('should call vpcaccessProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test vpcaccessProjectsLocationsList
        //instance.vpcaccessProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vpcaccessProjectsLocationsOperationsGet', function() {
      it('should call vpcaccessProjectsLocationsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test vpcaccessProjectsLocationsOperationsGet
        //instance.vpcaccessProjectsLocationsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vpcaccessProjectsLocationsOperationsList', function() {
      it('should call vpcaccessProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test vpcaccessProjectsLocationsOperationsList
        //instance.vpcaccessProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
