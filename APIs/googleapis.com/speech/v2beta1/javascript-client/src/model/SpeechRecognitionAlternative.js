/**
 * Cloud Speech-to-Text API
 * Converts audio to text by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WordInfo from './WordInfo';

/**
 * The SpeechRecognitionAlternative model module.
 * @module model/SpeechRecognitionAlternative
 * @version v2beta1
 */
class SpeechRecognitionAlternative {
    /**
     * Constructs a new <code>SpeechRecognitionAlternative</code>.
     * Alternative hypotheses (a.k.a. n-best list).
     * @alias module:model/SpeechRecognitionAlternative
     */
    constructor() { 
        
        SpeechRecognitionAlternative.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SpeechRecognitionAlternative</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpeechRecognitionAlternative} obj Optional instance to populate.
     * @return {module:model/SpeechRecognitionAlternative} The populated <code>SpeechRecognitionAlternative</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpeechRecognitionAlternative();

            if (data.hasOwnProperty('confidence')) {
                obj['confidence'] = ApiClient.convertToType(data['confidence'], 'Number');
            }
            if (data.hasOwnProperty('transcript')) {
                obj['transcript'] = ApiClient.convertToType(data['transcript'], 'String');
            }
            if (data.hasOwnProperty('words')) {
                obj['words'] = ApiClient.convertToType(data['words'], [WordInfo]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SpeechRecognitionAlternative</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SpeechRecognitionAlternative</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['transcript'] && !(typeof data['transcript'] === 'string' || data['transcript'] instanceof String)) {
            throw new Error("Expected the field `transcript` to be a primitive type in the JSON string but got " + data['transcript']);
        }
        if (data['words']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['words'])) {
                throw new Error("Expected the field `words` to be an array in the JSON data but got " + data['words']);
            }
            // validate the optional field `words` (array)
            for (const item of data['words']) {
                WordInfo.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for the top alternative of a non-streaming result or, of a streaming result where `is_final=true`. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating `confidence` was not set.
 * @member {Number} confidence
 */
SpeechRecognitionAlternative.prototype['confidence'] = undefined;

/**
 * Output only. Transcript text representing the words that the user spoke.
 * @member {String} transcript
 */
SpeechRecognitionAlternative.prototype['transcript'] = undefined;

/**
 * Output only. A list of word-specific information for each recognized word. Note: When `enable_speaker_diarization` is true, you will see all the words from the beginning of the audio.
 * @member {Array.<module:model/WordInfo>} words
 */
SpeechRecognitionAlternative.prototype['words'] = undefined;






export default SpeechRecognitionAlternative;

