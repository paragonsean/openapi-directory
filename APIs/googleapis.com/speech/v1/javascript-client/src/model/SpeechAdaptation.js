/**
 * Cloud Speech-to-Text API
 * Converts audio to text by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ABNFGrammar from './ABNFGrammar';
import CustomClass from './CustomClass';
import PhraseSet from './PhraseSet';

/**
 * The SpeechAdaptation model module.
 * @module model/SpeechAdaptation
 * @version v1
 */
class SpeechAdaptation {
    /**
     * Constructs a new <code>SpeechAdaptation</code>.
     * Speech adaptation configuration.
     * @alias module:model/SpeechAdaptation
     */
    constructor() { 
        
        SpeechAdaptation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SpeechAdaptation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpeechAdaptation} obj Optional instance to populate.
     * @return {module:model/SpeechAdaptation} The populated <code>SpeechAdaptation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpeechAdaptation();

            if (data.hasOwnProperty('abnfGrammar')) {
                obj['abnfGrammar'] = ABNFGrammar.constructFromObject(data['abnfGrammar']);
            }
            if (data.hasOwnProperty('customClasses')) {
                obj['customClasses'] = ApiClient.convertToType(data['customClasses'], [CustomClass]);
            }
            if (data.hasOwnProperty('phraseSetReferences')) {
                obj['phraseSetReferences'] = ApiClient.convertToType(data['phraseSetReferences'], ['String']);
            }
            if (data.hasOwnProperty('phraseSets')) {
                obj['phraseSets'] = ApiClient.convertToType(data['phraseSets'], [PhraseSet]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SpeechAdaptation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SpeechAdaptation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `abnfGrammar`
        if (data['abnfGrammar']) { // data not null
          ABNFGrammar.validateJSON(data['abnfGrammar']);
        }
        if (data['customClasses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['customClasses'])) {
                throw new Error("Expected the field `customClasses` to be an array in the JSON data but got " + data['customClasses']);
            }
            // validate the optional field `customClasses` (array)
            for (const item of data['customClasses']) {
                CustomClass.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['phraseSetReferences'])) {
            throw new Error("Expected the field `phraseSetReferences` to be an array in the JSON data but got " + data['phraseSetReferences']);
        }
        if (data['phraseSets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['phraseSets'])) {
                throw new Error("Expected the field `phraseSets` to be an array in the JSON data but got " + data['phraseSets']);
            }
            // validate the optional field `phraseSets` (array)
            for (const item of data['phraseSets']) {
                PhraseSet.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/ABNFGrammar} abnfGrammar
 */
SpeechAdaptation.prototype['abnfGrammar'] = undefined;

/**
 * A collection of custom classes. To specify the classes inline, leave the class' `name` blank and fill in the rest of its fields, giving it a unique `custom_class_id`. Refer to the inline defined class in phrase hints by its `custom_class_id`.
 * @member {Array.<module:model/CustomClass>} customClasses
 */
SpeechAdaptation.prototype['customClasses'] = undefined;

/**
 * A collection of phrase set resource names to use.
 * @member {Array.<String>} phraseSetReferences
 */
SpeechAdaptation.prototype['phraseSetReferences'] = undefined;

/**
 * A collection of phrase sets. To specify the hints inline, leave the phrase set's `name` blank and fill in the rest of its fields. Any phrase set can use any custom class.
 * @member {Array.<module:model/PhraseSet>} phraseSets
 */
SpeechAdaptation.prototype['phraseSets'] = undefined;






export default SpeechAdaptation;

