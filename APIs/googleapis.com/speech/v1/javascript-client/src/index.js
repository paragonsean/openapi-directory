/**
 * Cloud Speech-to-Text API
 * Converts audio to text by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ABNFGrammar from './model/ABNFGrammar';
import ClassItem from './model/ClassItem';
import CreateCustomClassRequest from './model/CreateCustomClassRequest';
import CreatePhraseSetRequest from './model/CreatePhraseSetRequest';
import CustomClass from './model/CustomClass';
import Entry from './model/Entry';
import ListCustomClassesResponse from './model/ListCustomClassesResponse';
import ListOperationsResponse from './model/ListOperationsResponse';
import ListPhraseSetResponse from './model/ListPhraseSetResponse';
import LongRunningRecognizeMetadata from './model/LongRunningRecognizeMetadata';
import LongRunningRecognizeRequest from './model/LongRunningRecognizeRequest';
import LongRunningRecognizeResponse from './model/LongRunningRecognizeResponse';
import Operation from './model/Operation';
import Phrase from './model/Phrase';
import PhraseSet from './model/PhraseSet';
import RecognitionAudio from './model/RecognitionAudio';
import RecognitionConfig from './model/RecognitionConfig';
import RecognitionMetadata from './model/RecognitionMetadata';
import RecognizeRequest from './model/RecognizeRequest';
import RecognizeResponse from './model/RecognizeResponse';
import SpeakerDiarizationConfig from './model/SpeakerDiarizationConfig';
import SpeechAdaptation from './model/SpeechAdaptation';
import SpeechAdaptationInfo from './model/SpeechAdaptationInfo';
import SpeechContext from './model/SpeechContext';
import SpeechRecognitionAlternative from './model/SpeechRecognitionAlternative';
import SpeechRecognitionResult from './model/SpeechRecognitionResult';
import Status from './model/Status';
import TranscriptNormalization from './model/TranscriptNormalization';
import TranscriptOutputConfig from './model/TranscriptOutputConfig';
import WordInfo from './model/WordInfo';
import OperationsApi from './api/OperationsApi';
import ProjectsApi from './api/ProjectsApi';
import SpeechApi from './api/SpeechApi';


/**
* Converts audio to text by applying powerful neural network models..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudSpeechToTextApi = require('index'); // See note below*.
* var xxxSvc = new CloudSpeechToTextApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudSpeechToTextApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudSpeechToTextApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudSpeechToTextApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ABNFGrammar model constructor.
     * @property {module:model/ABNFGrammar}
     */
    ABNFGrammar,

    /**
     * The ClassItem model constructor.
     * @property {module:model/ClassItem}
     */
    ClassItem,

    /**
     * The CreateCustomClassRequest model constructor.
     * @property {module:model/CreateCustomClassRequest}
     */
    CreateCustomClassRequest,

    /**
     * The CreatePhraseSetRequest model constructor.
     * @property {module:model/CreatePhraseSetRequest}
     */
    CreatePhraseSetRequest,

    /**
     * The CustomClass model constructor.
     * @property {module:model/CustomClass}
     */
    CustomClass,

    /**
     * The Entry model constructor.
     * @property {module:model/Entry}
     */
    Entry,

    /**
     * The ListCustomClassesResponse model constructor.
     * @property {module:model/ListCustomClassesResponse}
     */
    ListCustomClassesResponse,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The ListPhraseSetResponse model constructor.
     * @property {module:model/ListPhraseSetResponse}
     */
    ListPhraseSetResponse,

    /**
     * The LongRunningRecognizeMetadata model constructor.
     * @property {module:model/LongRunningRecognizeMetadata}
     */
    LongRunningRecognizeMetadata,

    /**
     * The LongRunningRecognizeRequest model constructor.
     * @property {module:model/LongRunningRecognizeRequest}
     */
    LongRunningRecognizeRequest,

    /**
     * The LongRunningRecognizeResponse model constructor.
     * @property {module:model/LongRunningRecognizeResponse}
     */
    LongRunningRecognizeResponse,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The Phrase model constructor.
     * @property {module:model/Phrase}
     */
    Phrase,

    /**
     * The PhraseSet model constructor.
     * @property {module:model/PhraseSet}
     */
    PhraseSet,

    /**
     * The RecognitionAudio model constructor.
     * @property {module:model/RecognitionAudio}
     */
    RecognitionAudio,

    /**
     * The RecognitionConfig model constructor.
     * @property {module:model/RecognitionConfig}
     */
    RecognitionConfig,

    /**
     * The RecognitionMetadata model constructor.
     * @property {module:model/RecognitionMetadata}
     */
    RecognitionMetadata,

    /**
     * The RecognizeRequest model constructor.
     * @property {module:model/RecognizeRequest}
     */
    RecognizeRequest,

    /**
     * The RecognizeResponse model constructor.
     * @property {module:model/RecognizeResponse}
     */
    RecognizeResponse,

    /**
     * The SpeakerDiarizationConfig model constructor.
     * @property {module:model/SpeakerDiarizationConfig}
     */
    SpeakerDiarizationConfig,

    /**
     * The SpeechAdaptation model constructor.
     * @property {module:model/SpeechAdaptation}
     */
    SpeechAdaptation,

    /**
     * The SpeechAdaptationInfo model constructor.
     * @property {module:model/SpeechAdaptationInfo}
     */
    SpeechAdaptationInfo,

    /**
     * The SpeechContext model constructor.
     * @property {module:model/SpeechContext}
     */
    SpeechContext,

    /**
     * The SpeechRecognitionAlternative model constructor.
     * @property {module:model/SpeechRecognitionAlternative}
     */
    SpeechRecognitionAlternative,

    /**
     * The SpeechRecognitionResult model constructor.
     * @property {module:model/SpeechRecognitionResult}
     */
    SpeechRecognitionResult,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The TranscriptNormalization model constructor.
     * @property {module:model/TranscriptNormalization}
     */
    TranscriptNormalization,

    /**
     * The TranscriptOutputConfig model constructor.
     * @property {module:model/TranscriptOutputConfig}
     */
    TranscriptOutputConfig,

    /**
     * The WordInfo model constructor.
     * @property {module:model/WordInfo}
     */
    WordInfo,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi,

    /**
    * The SpeechApi service constructor.
    * @property {module:api/SpeechApi}
    */
    SpeechApi
};
