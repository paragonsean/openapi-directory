# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Entry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, case_sensitive: bool=None, replace: str=None, search: str=None):
        """Entry - a model defined in OpenAPI

        :param case_sensitive: The case_sensitive of this Entry.
        :param replace: The replace of this Entry.
        :param search: The search of this Entry.
        """
        self.openapi_types = {
            'case_sensitive': bool,
            'replace': str,
            'search': str
        }

        self.attribute_map = {
            'case_sensitive': 'caseSensitive',
            'replace': 'replace',
            'search': 'search'
        }

        self._case_sensitive = case_sensitive
        self._replace = replace
        self._search = search

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Entry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Entry of this Entry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def case_sensitive(self):
        """Gets the case_sensitive of this Entry.

        Whether the search is case sensitive.

        :return: The case_sensitive of this Entry.
        :rtype: bool
        """
        return self._case_sensitive

    @case_sensitive.setter
    def case_sensitive(self, case_sensitive):
        """Sets the case_sensitive of this Entry.

        Whether the search is case sensitive.

        :param case_sensitive: The case_sensitive of this Entry.
        :type case_sensitive: bool
        """

        self._case_sensitive = case_sensitive

    @property
    def replace(self):
        """Gets the replace of this Entry.

        What to replace with. Max length is 100 characters.

        :return: The replace of this Entry.
        :rtype: str
        """
        return self._replace

    @replace.setter
    def replace(self, replace):
        """Sets the replace of this Entry.

        What to replace with. Max length is 100 characters.

        :param replace: The replace of this Entry.
        :type replace: str
        """

        self._replace = replace

    @property
    def search(self):
        """Gets the search of this Entry.

        What to replace. Max length is 100 characters.

        :return: The search of this Entry.
        :rtype: str
        """
        return self._search

    @search.setter
    def search(self, search):
        """Sets the search of this Entry.

        What to replace. Max length is 100 characters.

        :param search: The search of this Entry.
        :type search: str
        """

        self._search = search
