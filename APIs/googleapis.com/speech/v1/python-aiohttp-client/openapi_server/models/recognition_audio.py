# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecognitionAudio(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, uri: str=None):
        """RecognitionAudio - a model defined in OpenAPI

        :param content: The content of this RecognitionAudio.
        :param uri: The uri of this RecognitionAudio.
        """
        self.openapi_types = {
            'content': str,
            'uri': str
        }

        self.attribute_map = {
            'content': 'content',
            'uri': 'uri'
        }

        self._content = content
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecognitionAudio':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecognitionAudio of this RecognitionAudio.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this RecognitionAudio.

        The audio data bytes encoded as specified in `RecognitionConfig`. Note: as with all bytes fields, proto buffers use a pure binary representation, whereas JSON representations use base64.

        :return: The content of this RecognitionAudio.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this RecognitionAudio.

        The audio data bytes encoded as specified in `RecognitionConfig`. Note: as with all bytes fields, proto buffers use a pure binary representation, whereas JSON representations use base64.

        :param content: The content of this RecognitionAudio.
        :type content: str
        """

        self._content = content

    @property
    def uri(self):
        """Gets the uri of this RecognitionAudio.

        URI that points to a file that contains audio data bytes as specified in `RecognitionConfig`. The file must not be compressed (for example, gzip). Currently, only Google Cloud Storage URIs are supported, which must be specified in the following format: `gs://bucket_name/object_name` (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/reference-uris).

        :return: The uri of this RecognitionAudio.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this RecognitionAudio.

        URI that points to a file that contains audio data bytes as specified in `RecognitionConfig`. The file must not be compressed (for example, gzip). Currently, only Google Cloud Storage URIs are supported, which must be specified in the following format: `gs://bucket_name/object_name` (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/reference-uris).

        :param uri: The uri of this RecognitionAudio.
        :type uri: str
        """

        self._uri = uri
