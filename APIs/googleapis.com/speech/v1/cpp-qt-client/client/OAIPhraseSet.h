/**
 * Cloud Speech-to-Text API
 * Converts audio to text by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPhraseSet.h
 *
 * Provides \&quot;hints\&quot; to the speech recognizer to favor specific words and phrases in the results.
 */

#ifndef OAIPhraseSet_H
#define OAIPhraseSet_H

#include <QJsonObject>

#include "OAIPhrase.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPhrase;

class OAIPhraseSet : public OAIObject {
public:
    OAIPhraseSet();
    OAIPhraseSet(QString json);
    ~OAIPhraseSet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAnnotations() const;
    void setAnnotations(const QMap<QString, QString> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    float getBoost() const;
    void setBoost(const float &boost);
    bool is_boost_Set() const;
    bool is_boost_Valid() const;

    QString getDeleteTime() const;
    void setDeleteTime(const QString &delete_time);
    bool is_delete_time_Set() const;
    bool is_delete_time_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getExpireTime() const;
    void setExpireTime(const QString &expire_time);
    bool is_expire_time_Set() const;
    bool is_expire_time_Valid() const;

    QString getKmsKeyName() const;
    void setKmsKeyName(const QString &kms_key_name);
    bool is_kms_key_name_Set() const;
    bool is_kms_key_name_Valid() const;

    QString getKmsKeyVersionName() const;
    void setKmsKeyVersionName(const QString &kms_key_version_name);
    bool is_kms_key_version_name_Set() const;
    bool is_kms_key_version_name_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIPhrase> getPhrases() const;
    void setPhrases(const QList<OAIPhrase> &phrases);
    bool is_phrases_Set() const;
    bool is_phrases_Valid() const;

    bool isReconciling() const;
    void setReconciling(const bool &reconciling);
    bool is_reconciling_Set() const;
    bool is_reconciling_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    float m_boost;
    bool m_boost_isSet;
    bool m_boost_isValid;

    QString m_delete_time;
    bool m_delete_time_isSet;
    bool m_delete_time_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_expire_time;
    bool m_expire_time_isSet;
    bool m_expire_time_isValid;

    QString m_kms_key_name;
    bool m_kms_key_name_isSet;
    bool m_kms_key_name_isValid;

    QString m_kms_key_version_name;
    bool m_kms_key_version_name_isSet;
    bool m_kms_key_version_name_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIPhrase> m_phrases;
    bool m_phrases_isSet;
    bool m_phrases_isValid;

    bool m_reconciling;
    bool m_reconciling_isSet;
    bool m_reconciling_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPhraseSet)

#endif // OAIPhraseSet_H
