/**
 * Cloud Speech-to-Text API
 * Converts audio to text by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISpeechRecognitionResult.h
 *
 * A speech recognition result corresponding to a portion of the audio.
 */

#ifndef OAISpeechRecognitionResult_H
#define OAISpeechRecognitionResult_H

#include <QJsonObject>

#include "OAISpeechRecognitionAlternative.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISpeechRecognitionAlternative;

class OAISpeechRecognitionResult : public OAIObject {
public:
    OAISpeechRecognitionResult();
    OAISpeechRecognitionResult(QString json);
    ~OAISpeechRecognitionResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISpeechRecognitionAlternative> getAlternatives() const;
    void setAlternatives(const QList<OAISpeechRecognitionAlternative> &alternatives);
    bool is_alternatives_Set() const;
    bool is_alternatives_Valid() const;

    qint32 getChannelTag() const;
    void setChannelTag(const qint32 &channel_tag);
    bool is_channel_tag_Set() const;
    bool is_channel_tag_Valid() const;

    QString getLanguageCode() const;
    void setLanguageCode(const QString &language_code);
    bool is_language_code_Set() const;
    bool is_language_code_Valid() const;

    QString getResultEndTime() const;
    void setResultEndTime(const QString &result_end_time);
    bool is_result_end_time_Set() const;
    bool is_result_end_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISpeechRecognitionAlternative> m_alternatives;
    bool m_alternatives_isSet;
    bool m_alternatives_isValid;

    qint32 m_channel_tag;
    bool m_channel_tag_isSet;
    bool m_channel_tag_isValid;

    QString m_language_code;
    bool m_language_code_isSet;
    bool m_language_code_isValid;

    QString m_result_end_time;
    bool m_result_end_time_isSet;
    bool m_result_end_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISpeechRecognitionResult)

#endif // OAISpeechRecognitionResult_H
