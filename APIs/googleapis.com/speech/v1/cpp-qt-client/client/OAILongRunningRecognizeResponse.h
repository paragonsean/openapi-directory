/**
 * Cloud Speech-to-Text API
 * Converts audio to text by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILongRunningRecognizeResponse.h
 *
 * The only message returned to the client by the &#x60;LongRunningRecognize&#x60; method. It contains the result as zero or more sequential &#x60;SpeechRecognitionResult&#x60; messages. It is included in the &#x60;result.response&#x60; field of the &#x60;Operation&#x60; returned by the &#x60;GetOperation&#x60; call of the &#x60;google::longrunning::Operations&#x60; service.
 */

#ifndef OAILongRunningRecognizeResponse_H
#define OAILongRunningRecognizeResponse_H

#include <QJsonObject>

#include "OAISpeechAdaptationInfo.h"
#include "OAISpeechRecognitionResult.h"
#include "OAIStatus.h"
#include "OAITranscriptOutputConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITranscriptOutputConfig;
class OAIStatus;
class OAISpeechRecognitionResult;
class OAISpeechAdaptationInfo;

class OAILongRunningRecognizeResponse : public OAIObject {
public:
    OAILongRunningRecognizeResponse();
    OAILongRunningRecognizeResponse(QString json);
    ~OAILongRunningRecognizeResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITranscriptOutputConfig getOutputConfig() const;
    void setOutputConfig(const OAITranscriptOutputConfig &output_config);
    bool is_output_config_Set() const;
    bool is_output_config_Valid() const;

    OAIStatus getOutputError() const;
    void setOutputError(const OAIStatus &output_error);
    bool is_output_error_Set() const;
    bool is_output_error_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QList<OAISpeechRecognitionResult> getResults() const;
    void setResults(const QList<OAISpeechRecognitionResult> &results);
    bool is_results_Set() const;
    bool is_results_Valid() const;

    OAISpeechAdaptationInfo getSpeechAdaptationInfo() const;
    void setSpeechAdaptationInfo(const OAISpeechAdaptationInfo &speech_adaptation_info);
    bool is_speech_adaptation_info_Set() const;
    bool is_speech_adaptation_info_Valid() const;

    QString getTotalBilledTime() const;
    void setTotalBilledTime(const QString &total_billed_time);
    bool is_total_billed_time_Set() const;
    bool is_total_billed_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITranscriptOutputConfig m_output_config;
    bool m_output_config_isSet;
    bool m_output_config_isValid;

    OAIStatus m_output_error;
    bool m_output_error_isSet;
    bool m_output_error_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QList<OAISpeechRecognitionResult> m_results;
    bool m_results_isSet;
    bool m_results_isValid;

    OAISpeechAdaptationInfo m_speech_adaptation_info;
    bool m_speech_adaptation_info_isSet;
    bool m_speech_adaptation_info_isValid;

    QString m_total_billed_time;
    bool m_total_billed_time_isSet;
    bool m_total_billed_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILongRunningRecognizeResponse)

#endif // OAILongRunningRecognizeResponse_H
