/**
 * Cloud Speech-to-Text API
 * Converts audio to text by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateCustomClassRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateCustomClassRequest::OAICreateCustomClassRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateCustomClassRequest::OAICreateCustomClassRequest() {
    this->initializeModel();
}

OAICreateCustomClassRequest::~OAICreateCustomClassRequest() {}

void OAICreateCustomClassRequest::initializeModel() {

    m_custom_class_isSet = false;
    m_custom_class_isValid = false;

    m_custom_class_id_isSet = false;
    m_custom_class_id_isValid = false;
}

void OAICreateCustomClassRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateCustomClassRequest::fromJsonObject(QJsonObject json) {

    m_custom_class_isValid = ::OpenAPI::fromJsonValue(m_custom_class, json[QString("customClass")]);
    m_custom_class_isSet = !json[QString("customClass")].isNull() && m_custom_class_isValid;

    m_custom_class_id_isValid = ::OpenAPI::fromJsonValue(m_custom_class_id, json[QString("customClassId")]);
    m_custom_class_id_isSet = !json[QString("customClassId")].isNull() && m_custom_class_id_isValid;
}

QString OAICreateCustomClassRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateCustomClassRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_class.isSet()) {
        obj.insert(QString("customClass"), ::OpenAPI::toJsonValue(m_custom_class));
    }
    if (m_custom_class_id_isSet) {
        obj.insert(QString("customClassId"), ::OpenAPI::toJsonValue(m_custom_class_id));
    }
    return obj;
}

OAICustomClass OAICreateCustomClassRequest::getCustomClass() const {
    return m_custom_class;
}
void OAICreateCustomClassRequest::setCustomClass(const OAICustomClass &custom_class) {
    m_custom_class = custom_class;
    m_custom_class_isSet = true;
}

bool OAICreateCustomClassRequest::is_custom_class_Set() const{
    return m_custom_class_isSet;
}

bool OAICreateCustomClassRequest::is_custom_class_Valid() const{
    return m_custom_class_isValid;
}

QString OAICreateCustomClassRequest::getCustomClassId() const {
    return m_custom_class_id;
}
void OAICreateCustomClassRequest::setCustomClassId(const QString &custom_class_id) {
    m_custom_class_id = custom_class_id;
    m_custom_class_id_isSet = true;
}

bool OAICreateCustomClassRequest::is_custom_class_id_Set() const{
    return m_custom_class_id_isSet;
}

bool OAICreateCustomClassRequest::is_custom_class_id_Valid() const{
    return m_custom_class_id_isValid;
}

bool OAICreateCustomClassRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_class.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_class_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateCustomClassRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
