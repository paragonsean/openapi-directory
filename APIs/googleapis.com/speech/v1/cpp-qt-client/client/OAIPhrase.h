/**
 * Cloud Speech-to-Text API
 * Converts audio to text by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPhrase.h
 *
 * A phrases containing words and phrase \&quot;hints\&quot; so that the speech recognition is more likely to recognize them. This can be used to improve the accuracy for specific words and phrases, for example, if specific commands are typically spoken by the user. This can also be used to add additional words to the vocabulary of the recognizer. See [usage limits](https://cloud.google.com/speech-to-text/quotas#content). List items can also include pre-built or custom classes containing groups of words that represent common concepts that occur in natural language. For example, rather than providing a phrase hint for every month of the year (e.g. \&quot;i was born in january\&quot;, \&quot;i was born in febuary\&quot;, ...), use the pre-built &#x60;$MONTH&#x60; class improves the likelihood of correctly transcribing audio that includes months (e.g. \&quot;i was born in $month\&quot;). To refer to pre-built classes, use the class&#39; symbol prepended with &#x60;$&#x60; e.g. &#x60;$MONTH&#x60;. To refer to custom classes that were defined inline in the request, set the class&#39;s &#x60;custom_class_id&#x60; to a string unique to all class resources and inline classes. Then use the class&#39; id wrapped in $&#x60;{...}&#x60; e.g. \&quot;${my-months}\&quot;. To refer to custom classes resources, use the class&#39; id wrapped in &#x60;${}&#x60; (e.g. &#x60;${my-months}&#x60;). Speech-to-Text supports three locations: &#x60;global&#x60;, &#x60;us&#x60; (US North America), and &#x60;eu&#x60; (Europe). If you are calling the &#x60;speech.googleapis.com&#x60; endpoint, use the &#x60;global&#x60; location. To specify a region, use a [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints) with matching &#x60;us&#x60; or &#x60;eu&#x60; location value.
 */

#ifndef OAIPhrase_H
#define OAIPhrase_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPhrase : public OAIObject {
public:
    OAIPhrase();
    OAIPhrase(QString json);
    ~OAIPhrase() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getBoost() const;
    void setBoost(const float &boost);
    bool is_boost_Set() const;
    bool is_boost_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_boost;
    bool m_boost_isSet;
    bool m_boost_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPhrase)

#endif // OAIPhrase_H
