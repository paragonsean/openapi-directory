/*
 * Cloud Speech-to-Text API
 * Converts audio to text by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ABNFGrammar;
import org.openapitools.client.model.CustomClass;
import org.openapitools.client.model.PhraseSet;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Speech adaptation configuration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:53.441209-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SpeechAdaptation {
  public static final String SERIALIZED_NAME_ABNF_GRAMMAR = "abnfGrammar";
  @SerializedName(SERIALIZED_NAME_ABNF_GRAMMAR)
  private ABNFGrammar abnfGrammar;

  public static final String SERIALIZED_NAME_CUSTOM_CLASSES = "customClasses";
  @SerializedName(SERIALIZED_NAME_CUSTOM_CLASSES)
  private List<CustomClass> customClasses = new ArrayList<>();

  public static final String SERIALIZED_NAME_PHRASE_SET_REFERENCES = "phraseSetReferences";
  @SerializedName(SERIALIZED_NAME_PHRASE_SET_REFERENCES)
  private List<String> phraseSetReferences = new ArrayList<>();

  public static final String SERIALIZED_NAME_PHRASE_SETS = "phraseSets";
  @SerializedName(SERIALIZED_NAME_PHRASE_SETS)
  private List<PhraseSet> phraseSets = new ArrayList<>();

  public SpeechAdaptation() {
  }

  public SpeechAdaptation abnfGrammar(ABNFGrammar abnfGrammar) {
    this.abnfGrammar = abnfGrammar;
    return this;
  }

  /**
   * Get abnfGrammar
   * @return abnfGrammar
   */
  @javax.annotation.Nullable
  public ABNFGrammar getAbnfGrammar() {
    return abnfGrammar;
  }

  public void setAbnfGrammar(ABNFGrammar abnfGrammar) {
    this.abnfGrammar = abnfGrammar;
  }


  public SpeechAdaptation customClasses(List<CustomClass> customClasses) {
    this.customClasses = customClasses;
    return this;
  }

  public SpeechAdaptation addCustomClassesItem(CustomClass customClassesItem) {
    if (this.customClasses == null) {
      this.customClasses = new ArrayList<>();
    }
    this.customClasses.add(customClassesItem);
    return this;
  }

  /**
   * A collection of custom classes. To specify the classes inline, leave the class&#39; &#x60;name&#x60; blank and fill in the rest of its fields, giving it a unique &#x60;custom_class_id&#x60;. Refer to the inline defined class in phrase hints by its &#x60;custom_class_id&#x60;.
   * @return customClasses
   */
  @javax.annotation.Nullable
  public List<CustomClass> getCustomClasses() {
    return customClasses;
  }

  public void setCustomClasses(List<CustomClass> customClasses) {
    this.customClasses = customClasses;
  }


  public SpeechAdaptation phraseSetReferences(List<String> phraseSetReferences) {
    this.phraseSetReferences = phraseSetReferences;
    return this;
  }

  public SpeechAdaptation addPhraseSetReferencesItem(String phraseSetReferencesItem) {
    if (this.phraseSetReferences == null) {
      this.phraseSetReferences = new ArrayList<>();
    }
    this.phraseSetReferences.add(phraseSetReferencesItem);
    return this;
  }

  /**
   * A collection of phrase set resource names to use.
   * @return phraseSetReferences
   */
  @javax.annotation.Nullable
  public List<String> getPhraseSetReferences() {
    return phraseSetReferences;
  }

  public void setPhraseSetReferences(List<String> phraseSetReferences) {
    this.phraseSetReferences = phraseSetReferences;
  }


  public SpeechAdaptation phraseSets(List<PhraseSet> phraseSets) {
    this.phraseSets = phraseSets;
    return this;
  }

  public SpeechAdaptation addPhraseSetsItem(PhraseSet phraseSetsItem) {
    if (this.phraseSets == null) {
      this.phraseSets = new ArrayList<>();
    }
    this.phraseSets.add(phraseSetsItem);
    return this;
  }

  /**
   * A collection of phrase sets. To specify the hints inline, leave the phrase set&#39;s &#x60;name&#x60; blank and fill in the rest of its fields. Any phrase set can use any custom class.
   * @return phraseSets
   */
  @javax.annotation.Nullable
  public List<PhraseSet> getPhraseSets() {
    return phraseSets;
  }

  public void setPhraseSets(List<PhraseSet> phraseSets) {
    this.phraseSets = phraseSets;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpeechAdaptation speechAdaptation = (SpeechAdaptation) o;
    return Objects.equals(this.abnfGrammar, speechAdaptation.abnfGrammar) &&
        Objects.equals(this.customClasses, speechAdaptation.customClasses) &&
        Objects.equals(this.phraseSetReferences, speechAdaptation.phraseSetReferences) &&
        Objects.equals(this.phraseSets, speechAdaptation.phraseSets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abnfGrammar, customClasses, phraseSetReferences, phraseSets);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpeechAdaptation {\n");
    sb.append("    abnfGrammar: ").append(toIndentedString(abnfGrammar)).append("\n");
    sb.append("    customClasses: ").append(toIndentedString(customClasses)).append("\n");
    sb.append("    phraseSetReferences: ").append(toIndentedString(phraseSetReferences)).append("\n");
    sb.append("    phraseSets: ").append(toIndentedString(phraseSets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("abnfGrammar");
    openapiFields.add("customClasses");
    openapiFields.add("phraseSetReferences");
    openapiFields.add("phraseSets");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SpeechAdaptation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SpeechAdaptation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SpeechAdaptation is not found in the empty JSON string", SpeechAdaptation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SpeechAdaptation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SpeechAdaptation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `abnfGrammar`
      if (jsonObj.get("abnfGrammar") != null && !jsonObj.get("abnfGrammar").isJsonNull()) {
        ABNFGrammar.validateJsonElement(jsonObj.get("abnfGrammar"));
      }
      if (jsonObj.get("customClasses") != null && !jsonObj.get("customClasses").isJsonNull()) {
        JsonArray jsonArraycustomClasses = jsonObj.getAsJsonArray("customClasses");
        if (jsonArraycustomClasses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customClasses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customClasses` to be an array in the JSON string but got `%s`", jsonObj.get("customClasses").toString()));
          }

          // validate the optional field `customClasses` (array)
          for (int i = 0; i < jsonArraycustomClasses.size(); i++) {
            CustomClass.validateJsonElement(jsonArraycustomClasses.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("phraseSetReferences") != null && !jsonObj.get("phraseSetReferences").isJsonNull() && !jsonObj.get("phraseSetReferences").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `phraseSetReferences` to be an array in the JSON string but got `%s`", jsonObj.get("phraseSetReferences").toString()));
      }
      if (jsonObj.get("phraseSets") != null && !jsonObj.get("phraseSets").isJsonNull()) {
        JsonArray jsonArrayphraseSets = jsonObj.getAsJsonArray("phraseSets");
        if (jsonArrayphraseSets != null) {
          // ensure the json data is an array
          if (!jsonObj.get("phraseSets").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `phraseSets` to be an array in the JSON string but got `%s`", jsonObj.get("phraseSets").toString()));
          }

          // validate the optional field `phraseSets` (array)
          for (int i = 0; i < jsonArrayphraseSets.size(); i++) {
            PhraseSet.validateJsonElement(jsonArrayphraseSets.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SpeechAdaptation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SpeechAdaptation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SpeechAdaptation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SpeechAdaptation.class));

       return (TypeAdapter<T>) new TypeAdapter<SpeechAdaptation>() {
           @Override
           public void write(JsonWriter out, SpeechAdaptation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SpeechAdaptation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SpeechAdaptation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SpeechAdaptation
   * @throws IOException if the JSON string is invalid with respect to SpeechAdaptation
   */
  public static SpeechAdaptation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SpeechAdaptation.class);
  }

  /**
   * Convert an instance of SpeechAdaptation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

