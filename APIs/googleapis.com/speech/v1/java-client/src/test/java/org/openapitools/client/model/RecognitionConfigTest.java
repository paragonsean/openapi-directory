/*
 * Cloud Speech-to-Text API
 * Converts audio to text by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RecognitionMetadata;
import org.openapitools.client.model.SpeakerDiarizationConfig;
import org.openapitools.client.model.SpeechAdaptation;
import org.openapitools.client.model.SpeechContext;
import org.openapitools.client.model.TranscriptNormalization;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for RecognitionConfig
 */
public class RecognitionConfigTest {
    private final RecognitionConfig model = new RecognitionConfig();

    /**
     * Model tests for RecognitionConfig
     */
    @Test
    public void testRecognitionConfig() {
        // TODO: test RecognitionConfig
    }

    /**
     * Test the property 'adaptation'
     */
    @Test
    public void adaptationTest() {
        // TODO: test adaptation
    }

    /**
     * Test the property 'alternativeLanguageCodes'
     */
    @Test
    public void alternativeLanguageCodesTest() {
        // TODO: test alternativeLanguageCodes
    }

    /**
     * Test the property 'audioChannelCount'
     */
    @Test
    public void audioChannelCountTest() {
        // TODO: test audioChannelCount
    }

    /**
     * Test the property 'diarizationConfig'
     */
    @Test
    public void diarizationConfigTest() {
        // TODO: test diarizationConfig
    }

    /**
     * Test the property 'enableAutomaticPunctuation'
     */
    @Test
    public void enableAutomaticPunctuationTest() {
        // TODO: test enableAutomaticPunctuation
    }

    /**
     * Test the property 'enableSeparateRecognitionPerChannel'
     */
    @Test
    public void enableSeparateRecognitionPerChannelTest() {
        // TODO: test enableSeparateRecognitionPerChannel
    }

    /**
     * Test the property 'enableSpokenEmojis'
     */
    @Test
    public void enableSpokenEmojisTest() {
        // TODO: test enableSpokenEmojis
    }

    /**
     * Test the property 'enableSpokenPunctuation'
     */
    @Test
    public void enableSpokenPunctuationTest() {
        // TODO: test enableSpokenPunctuation
    }

    /**
     * Test the property 'enableWordConfidence'
     */
    @Test
    public void enableWordConfidenceTest() {
        // TODO: test enableWordConfidence
    }

    /**
     * Test the property 'enableWordTimeOffsets'
     */
    @Test
    public void enableWordTimeOffsetsTest() {
        // TODO: test enableWordTimeOffsets
    }

    /**
     * Test the property 'encoding'
     */
    @Test
    public void encodingTest() {
        // TODO: test encoding
    }

    /**
     * Test the property 'languageCode'
     */
    @Test
    public void languageCodeTest() {
        // TODO: test languageCode
    }

    /**
     * Test the property 'maxAlternatives'
     */
    @Test
    public void maxAlternativesTest() {
        // TODO: test maxAlternatives
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'model'
     */
    @Test
    public void modelTest() {
        // TODO: test model
    }

    /**
     * Test the property 'profanityFilter'
     */
    @Test
    public void profanityFilterTest() {
        // TODO: test profanityFilter
    }

    /**
     * Test the property 'sampleRateHertz'
     */
    @Test
    public void sampleRateHertzTest() {
        // TODO: test sampleRateHertz
    }

    /**
     * Test the property 'speechContexts'
     */
    @Test
    public void speechContextsTest() {
        // TODO: test speechContexts
    }

    /**
     * Test the property 'transcriptNormalization'
     */
    @Test
    public void transcriptNormalizationTest() {
        // TODO: test transcriptNormalization
    }

    /**
     * Test the property 'useEnhanced'
     */
    @Test
    public void useEnhancedTest() {
        // TODO: test useEnhanced
    }

}
