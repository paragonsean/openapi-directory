# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recognition_audio import RecognitionAudio
from openapi_server.models.recognition_config import RecognitionConfig
from openapi_server.models.transcript_output_config import TranscriptOutputConfig
from openapi_server import util


class LongRunningRecognizeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio: RecognitionAudio=None, config: RecognitionConfig=None, output_config: TranscriptOutputConfig=None):
        """LongRunningRecognizeRequest - a model defined in OpenAPI

        :param audio: The audio of this LongRunningRecognizeRequest.
        :param config: The config of this LongRunningRecognizeRequest.
        :param output_config: The output_config of this LongRunningRecognizeRequest.
        """
        self.openapi_types = {
            'audio': RecognitionAudio,
            'config': RecognitionConfig,
            'output_config': TranscriptOutputConfig
        }

        self.attribute_map = {
            'audio': 'audio',
            'config': 'config',
            'output_config': 'outputConfig'
        }

        self._audio = audio
        self._config = config
        self._output_config = output_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LongRunningRecognizeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LongRunningRecognizeRequest of this LongRunningRecognizeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio(self):
        """Gets the audio of this LongRunningRecognizeRequest.


        :return: The audio of this LongRunningRecognizeRequest.
        :rtype: RecognitionAudio
        """
        return self._audio

    @audio.setter
    def audio(self, audio):
        """Sets the audio of this LongRunningRecognizeRequest.


        :param audio: The audio of this LongRunningRecognizeRequest.
        :type audio: RecognitionAudio
        """

        self._audio = audio

    @property
    def config(self):
        """Gets the config of this LongRunningRecognizeRequest.


        :return: The config of this LongRunningRecognizeRequest.
        :rtype: RecognitionConfig
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this LongRunningRecognizeRequest.


        :param config: The config of this LongRunningRecognizeRequest.
        :type config: RecognitionConfig
        """

        self._config = config

    @property
    def output_config(self):
        """Gets the output_config of this LongRunningRecognizeRequest.


        :return: The output_config of this LongRunningRecognizeRequest.
        :rtype: TranscriptOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this LongRunningRecognizeRequest.


        :param output_config: The output_config of this LongRunningRecognizeRequest.
        :type output_config: TranscriptOutputConfig
        """

        self._output_config = output_config
