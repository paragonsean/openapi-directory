/**
 * Cloud Speech-to-Text API
 * Converts audio to text by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClassItem from './ClassItem';

/**
 * The CustomClass model module.
 * @module model/CustomClass
 * @version v1p1beta1
 */
class CustomClass {
    /**
     * Constructs a new <code>CustomClass</code>.
     * A set of words or phrases that represents a common concept likely to appear in your audio, for example a list of passenger ship names. CustomClass items can be substituted into placeholders that you set in PhraseSet phrases.
     * @alias module:model/CustomClass
     */
    constructor() { 
        
        CustomClass.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomClass</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomClass} obj Optional instance to populate.
     * @return {module:model/CustomClass} The populated <code>CustomClass</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomClass();

            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], {'String': 'String'});
            }
            if (data.hasOwnProperty('customClassId')) {
                obj['customClassId'] = ApiClient.convertToType(data['customClassId'], 'String');
            }
            if (data.hasOwnProperty('deleteTime')) {
                obj['deleteTime'] = ApiClient.convertToType(data['deleteTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('expireTime')) {
                obj['expireTime'] = ApiClient.convertToType(data['expireTime'], 'String');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [ClassItem]);
            }
            if (data.hasOwnProperty('kmsKeyName')) {
                obj['kmsKeyName'] = ApiClient.convertToType(data['kmsKeyName'], 'String');
            }
            if (data.hasOwnProperty('kmsKeyVersionName')) {
                obj['kmsKeyVersionName'] = ApiClient.convertToType(data['kmsKeyVersionName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('reconciling')) {
                obj['reconciling'] = ApiClient.convertToType(data['reconciling'], 'Boolean');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomClass</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomClass</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customClassId'] && !(typeof data['customClassId'] === 'string' || data['customClassId'] instanceof String)) {
            throw new Error("Expected the field `customClassId` to be a primitive type in the JSON string but got " + data['customClassId']);
        }
        // ensure the json data is a string
        if (data['deleteTime'] && !(typeof data['deleteTime'] === 'string' || data['deleteTime'] instanceof String)) {
            throw new Error("Expected the field `deleteTime` to be a primitive type in the JSON string but got " + data['deleteTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['expireTime'] && !(typeof data['expireTime'] === 'string' || data['expireTime'] instanceof String)) {
            throw new Error("Expected the field `expireTime` to be a primitive type in the JSON string but got " + data['expireTime']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                ClassItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['kmsKeyName'] && !(typeof data['kmsKeyName'] === 'string' || data['kmsKeyName'] instanceof String)) {
            throw new Error("Expected the field `kmsKeyName` to be a primitive type in the JSON string but got " + data['kmsKeyName']);
        }
        // ensure the json data is a string
        if (data['kmsKeyVersionName'] && !(typeof data['kmsKeyVersionName'] === 'string' || data['kmsKeyVersionName'] instanceof String)) {
            throw new Error("Expected the field `kmsKeyVersionName` to be a primitive type in the JSON string but got " + data['kmsKeyVersionName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }

        return true;
    }


}



/**
 * Output only. Allows users to store small amounts of arbitrary data. Both the key and the value must be 63 characters or less each. At most 100 annotations. This field is not used.
 * @member {Object.<String, String>} annotations
 */
CustomClass.prototype['annotations'] = undefined;

/**
 * If this custom class is a resource, the custom_class_id is the resource id of the CustomClass. Case sensitive.
 * @member {String} customClassId
 */
CustomClass.prototype['customClassId'] = undefined;

/**
 * Output only. The time at which this resource was requested for deletion. This field is not used.
 * @member {String} deleteTime
 */
CustomClass.prototype['deleteTime'] = undefined;

/**
 * Output only. User-settable, human-readable name for the CustomClass. Must be 63 characters or less. This field is not used.
 * @member {String} displayName
 */
CustomClass.prototype['displayName'] = undefined;

/**
 * Output only. This checksum is computed by the server based on the value of other fields. This may be sent on update, undelete, and delete requests to ensure the client has an up-to-date value before proceeding. This field is not used.
 * @member {String} etag
 */
CustomClass.prototype['etag'] = undefined;

/**
 * Output only. The time at which this resource will be purged. This field is not used.
 * @member {String} expireTime
 */
CustomClass.prototype['expireTime'] = undefined;

/**
 * A collection of class items.
 * @member {Array.<module:model/ClassItem>} items
 */
CustomClass.prototype['items'] = undefined;

/**
 * Output only. The [KMS key name](https://cloud.google.com/kms/docs/resource-hierarchy#keys) with which the content of the ClassItem is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.
 * @member {String} kmsKeyName
 */
CustomClass.prototype['kmsKeyName'] = undefined;

/**
 * Output only. The [KMS key version name](https://cloud.google.com/kms/docs/resource-hierarchy#key_versions) with which content of the ClassItem is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}/cryptoKeyVersions/{crypto_key_version}`.
 * @member {String} kmsKeyVersionName
 */
CustomClass.prototype['kmsKeyVersionName'] = undefined;

/**
 * The resource name of the custom class.
 * @member {String} name
 */
CustomClass.prototype['name'] = undefined;

/**
 * Output only. Whether or not this CustomClass is in the process of being updated. This field is not used.
 * @member {Boolean} reconciling
 */
CustomClass.prototype['reconciling'] = undefined;

/**
 * Output only. The CustomClass lifecycle state. This field is not used.
 * @member {module:model/CustomClass.StateEnum} state
 */
CustomClass.prototype['state'] = undefined;

/**
 * Output only. System-assigned unique identifier for the CustomClass. This field is not used.
 * @member {String} uid
 */
CustomClass.prototype['uid'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
CustomClass['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "DELETED"
     * @const
     */
    "DELETED": "DELETED"
};



export default CustomClass;

