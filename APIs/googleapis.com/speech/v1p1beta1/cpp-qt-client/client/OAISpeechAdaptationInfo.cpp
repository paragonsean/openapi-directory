/**
 * Cloud Speech-to-Text API
 * Converts audio to text by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISpeechAdaptationInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISpeechAdaptationInfo::OAISpeechAdaptationInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISpeechAdaptationInfo::OAISpeechAdaptationInfo() {
    this->initializeModel();
}

OAISpeechAdaptationInfo::~OAISpeechAdaptationInfo() {}

void OAISpeechAdaptationInfo::initializeModel() {

    m_adaptation_timeout_isSet = false;
    m_adaptation_timeout_isValid = false;

    m_timeout_message_isSet = false;
    m_timeout_message_isValid = false;
}

void OAISpeechAdaptationInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISpeechAdaptationInfo::fromJsonObject(QJsonObject json) {

    m_adaptation_timeout_isValid = ::OpenAPI::fromJsonValue(m_adaptation_timeout, json[QString("adaptationTimeout")]);
    m_adaptation_timeout_isSet = !json[QString("adaptationTimeout")].isNull() && m_adaptation_timeout_isValid;

    m_timeout_message_isValid = ::OpenAPI::fromJsonValue(m_timeout_message, json[QString("timeoutMessage")]);
    m_timeout_message_isSet = !json[QString("timeoutMessage")].isNull() && m_timeout_message_isValid;
}

QString OAISpeechAdaptationInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISpeechAdaptationInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_adaptation_timeout_isSet) {
        obj.insert(QString("adaptationTimeout"), ::OpenAPI::toJsonValue(m_adaptation_timeout));
    }
    if (m_timeout_message_isSet) {
        obj.insert(QString("timeoutMessage"), ::OpenAPI::toJsonValue(m_timeout_message));
    }
    return obj;
}

bool OAISpeechAdaptationInfo::isAdaptationTimeout() const {
    return m_adaptation_timeout;
}
void OAISpeechAdaptationInfo::setAdaptationTimeout(const bool &adaptation_timeout) {
    m_adaptation_timeout = adaptation_timeout;
    m_adaptation_timeout_isSet = true;
}

bool OAISpeechAdaptationInfo::is_adaptation_timeout_Set() const{
    return m_adaptation_timeout_isSet;
}

bool OAISpeechAdaptationInfo::is_adaptation_timeout_Valid() const{
    return m_adaptation_timeout_isValid;
}

QString OAISpeechAdaptationInfo::getTimeoutMessage() const {
    return m_timeout_message;
}
void OAISpeechAdaptationInfo::setTimeoutMessage(const QString &timeout_message) {
    m_timeout_message = timeout_message;
    m_timeout_message_isSet = true;
}

bool OAISpeechAdaptationInfo::is_timeout_message_Set() const{
    return m_timeout_message_isSet;
}

bool OAISpeechAdaptationInfo::is_timeout_message_Valid() const{
    return m_timeout_message_isValid;
}

bool OAISpeechAdaptationInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_adaptation_timeout_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timeout_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISpeechAdaptationInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
