/**
 * Cloud Speech-to-Text API
 * Converts audio to text by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITranscriptNormalization.h
 *
 * Transcription normalization configuration. Use transcription normalization to automatically replace parts of the transcript with phrases of your choosing. For StreamingRecognize, this normalization only applies to stable partial transcripts (stability &gt; 0.8) and final transcripts.
 */

#ifndef OAITranscriptNormalization_H
#define OAITranscriptNormalization_H

#include <QJsonObject>

#include "OAIEntry.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEntry;

class OAITranscriptNormalization : public OAIObject {
public:
    OAITranscriptNormalization();
    OAITranscriptNormalization(QString json);
    ~OAITranscriptNormalization() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIEntry> getEntries() const;
    void setEntries(const QList<OAIEntry> &entries);
    bool is_entries_Set() const;
    bool is_entries_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIEntry> m_entries;
    bool m_entries_isSet;
    bool m_entries_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITranscriptNormalization)

#endif // OAITranscriptNormalization_H
