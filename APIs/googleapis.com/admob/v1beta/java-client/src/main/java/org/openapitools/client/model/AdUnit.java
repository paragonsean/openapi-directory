/*
 * AdMob API
 * The AdMob API allows publishers to programmatically get information about their AdMob account. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AdUnitRewardSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes an AdMob ad unit.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:40.681529-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdUnit {
  public static final String SERIALIZED_NAME_AD_FORMAT = "adFormat";
  @SerializedName(SERIALIZED_NAME_AD_FORMAT)
  private String adFormat;

  public static final String SERIALIZED_NAME_AD_TYPES = "adTypes";
  @SerializedName(SERIALIZED_NAME_AD_TYPES)
  private List<String> adTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_AD_UNIT_ID = "adUnitId";
  @SerializedName(SERIALIZED_NAME_AD_UNIT_ID)
  private String adUnitId;

  public static final String SERIALIZED_NAME_APP_ID = "appId";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REWARD_SETTINGS = "rewardSettings";
  @SerializedName(SERIALIZED_NAME_REWARD_SETTINGS)
  private AdUnitRewardSettings rewardSettings;

  public AdUnit() {
  }

  public AdUnit adFormat(String adFormat) {
    this.adFormat = adFormat;
    return this;
  }

  /**
   * AdFormat of the ad unit. Possible values are as follows: \&quot;APP_OPEN\&quot; - App Open ad format. \&quot;BANNER\&quot; - Banner ad format. \&quot;BANNER_INTERSTITIAL\&quot; - Legacy format that can be used as either banner or interstitial. This format can no longer be created but can be targeted by mediation groups. \&quot;INTERSTITIAL\&quot; - A full screen ad. Supported ad types are \&quot;RICH_MEDIA\&quot; and \&quot;VIDEO\&quot;. \&quot;NATIVE\&quot; - Native ad format. \&quot;REWARDED\&quot; - An ad that, once viewed, gets a callback verifying the view so that a reward can be given to the user. Supported ad types are \&quot;RICH_MEDIA\&quot; (interactive) and video where video can not be excluded. \&quot;REWARDED_INTERSTITIAL\&quot; - Rewarded Interstitial ad format. Only supports video ad type. See https://support.google.com/admob/answer/9884467.
   * @return adFormat
   */
  @javax.annotation.Nullable
  public String getAdFormat() {
    return adFormat;
  }

  public void setAdFormat(String adFormat) {
    this.adFormat = adFormat;
  }


  public AdUnit adTypes(List<String> adTypes) {
    this.adTypes = adTypes;
    return this;
  }

  public AdUnit addAdTypesItem(String adTypesItem) {
    if (this.adTypes == null) {
      this.adTypes = new ArrayList<>();
    }
    this.adTypes.add(adTypesItem);
    return this;
  }

  /**
   * Ad media type supported by this ad unit. Possible values as follows: \&quot;RICH_MEDIA\&quot; - Text, image, and other non-video media. \&quot;VIDEO\&quot; - Video media.
   * @return adTypes
   */
  @javax.annotation.Nullable
  public List<String> getAdTypes() {
    return adTypes;
  }

  public void setAdTypes(List<String> adTypes) {
    this.adTypes = adTypes;
  }


  public AdUnit adUnitId(String adUnitId) {
    this.adUnitId = adUnitId;
    return this;
  }

  /**
   * The externally visible ID of the ad unit which can be used to integrate with the AdMob SDK. This is a read only property. Example: ca-app-pub-9876543210987654/0123456789
   * @return adUnitId
   */
  @javax.annotation.Nullable
  public String getAdUnitId() {
    return adUnitId;
  }

  public void setAdUnitId(String adUnitId) {
    this.adUnitId = adUnitId;
  }


  public AdUnit appId(String appId) {
    this.appId = appId;
    return this;
  }

  /**
   * The externally visible ID of the app this ad unit is associated with. Example: ca-app-pub-9876543210987654~0123456789
   * @return appId
   */
  @javax.annotation.Nullable
  public String getAppId() {
    return appId;
  }

  public void setAppId(String appId) {
    this.appId = appId;
  }


  public AdUnit displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The display name of the ad unit as shown in the AdMob UI, which is provided by the user. The maximum length allowed is 80 characters.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public AdUnit name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Resource name for this ad unit. Format is accounts/{publisher_id}/adUnits/{ad_unit_id_fragment} Example: accounts/pub-9876543210987654/adUnits/0123456789
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AdUnit rewardSettings(AdUnitRewardSettings rewardSettings) {
    this.rewardSettings = rewardSettings;
    return this;
  }

  /**
   * Get rewardSettings
   * @return rewardSettings
   */
  @javax.annotation.Nullable
  public AdUnitRewardSettings getRewardSettings() {
    return rewardSettings;
  }

  public void setRewardSettings(AdUnitRewardSettings rewardSettings) {
    this.rewardSettings = rewardSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdUnit adUnit = (AdUnit) o;
    return Objects.equals(this.adFormat, adUnit.adFormat) &&
        Objects.equals(this.adTypes, adUnit.adTypes) &&
        Objects.equals(this.adUnitId, adUnit.adUnitId) &&
        Objects.equals(this.appId, adUnit.appId) &&
        Objects.equals(this.displayName, adUnit.displayName) &&
        Objects.equals(this.name, adUnit.name) &&
        Objects.equals(this.rewardSettings, adUnit.rewardSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adFormat, adTypes, adUnitId, appId, displayName, name, rewardSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdUnit {\n");
    sb.append("    adFormat: ").append(toIndentedString(adFormat)).append("\n");
    sb.append("    adTypes: ").append(toIndentedString(adTypes)).append("\n");
    sb.append("    adUnitId: ").append(toIndentedString(adUnitId)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rewardSettings: ").append(toIndentedString(rewardSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adFormat");
    openapiFields.add("adTypes");
    openapiFields.add("adUnitId");
    openapiFields.add("appId");
    openapiFields.add("displayName");
    openapiFields.add("name");
    openapiFields.add("rewardSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdUnit
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdUnit.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdUnit is not found in the empty JSON string", AdUnit.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdUnit.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdUnit` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("adFormat") != null && !jsonObj.get("adFormat").isJsonNull()) && !jsonObj.get("adFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adFormat").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("adTypes") != null && !jsonObj.get("adTypes").isJsonNull() && !jsonObj.get("adTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `adTypes` to be an array in the JSON string but got `%s`", jsonObj.get("adTypes").toString()));
      }
      if ((jsonObj.get("adUnitId") != null && !jsonObj.get("adUnitId").isJsonNull()) && !jsonObj.get("adUnitId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adUnitId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adUnitId").toString()));
      }
      if ((jsonObj.get("appId") != null && !jsonObj.get("appId").isJsonNull()) && !jsonObj.get("appId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appId").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `rewardSettings`
      if (jsonObj.get("rewardSettings") != null && !jsonObj.get("rewardSettings").isJsonNull()) {
        AdUnitRewardSettings.validateJsonElement(jsonObj.get("rewardSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdUnit.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdUnit' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdUnit> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdUnit.class));

       return (TypeAdapter<T>) new TypeAdapter<AdUnit>() {
           @Override
           public void write(JsonWriter out, AdUnit value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdUnit read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdUnit given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdUnit
   * @throws IOException if the JSON string is invalid with respect to AdUnit
   */
  public static AdUnit fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdUnit.class);
  }

  /**
   * Convert an instance of AdUnit to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

