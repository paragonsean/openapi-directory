/**
 * AdMob API
 * The AdMob API allows publishers to programmatically get information about their AdMob account. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMediationGroupMediationGroupLine.h
 *
 * Settings for an ad network used by a mediation group.
 */

#ifndef OAIMediationGroupMediationGroupLine_H
#define OAIMediationGroupMediationGroupLine_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMediationGroupMediationGroupLine : public OAIObject {
public:
    OAIMediationGroupMediationGroupLine();
    OAIMediationGroupMediationGroupLine(QString json);
    ~OAIMediationGroupMediationGroupLine() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdSourceId() const;
    void setAdSourceId(const QString &ad_source_id);
    bool is_ad_source_id_Set() const;
    bool is_ad_source_id_Valid() const;

    QMap<QString, QString> getAdUnitMappings() const;
    void setAdUnitMappings(const QMap<QString, QString> &ad_unit_mappings);
    bool is_ad_unit_mappings_Set() const;
    bool is_ad_unit_mappings_Valid() const;

    QString getCpmMicros() const;
    void setCpmMicros(const QString &cpm_micros);
    bool is_cpm_micros_Set() const;
    bool is_cpm_micros_Valid() const;

    QString getCpmMode() const;
    void setCpmMode(const QString &cpm_mode);
    bool is_cpm_mode_Set() const;
    bool is_cpm_mode_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getExperimentVariant() const;
    void setExperimentVariant(const QString &experiment_variant);
    bool is_experiment_variant_Set() const;
    bool is_experiment_variant_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ad_source_id;
    bool m_ad_source_id_isSet;
    bool m_ad_source_id_isValid;

    QMap<QString, QString> m_ad_unit_mappings;
    bool m_ad_unit_mappings_isSet;
    bool m_ad_unit_mappings_isValid;

    QString m_cpm_micros;
    bool m_cpm_micros_isSet;
    bool m_cpm_micros_isValid;

    QString m_cpm_mode;
    bool m_cpm_mode_isSet;
    bool m_cpm_mode_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_experiment_variant;
    bool m_experiment_variant_isSet;
    bool m_experiment_variant_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMediationGroupMediationGroupLine)

#endif // OAIMediationGroupMediationGroupLine_H
