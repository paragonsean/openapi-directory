/**
 * AdMob API
 * The AdMob API allows publishers to programmatically get information about their AdMob account. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdapter.h
 *
 * Describes adapters supported by each mediation ad source. Adapters correspond to a specific SDK implementation of the ad source, and are each associated with a single platform and a list of supported ad unit formats. Adapters may also require setting some configurations to perform ad requests. Configurations can be specified in the AdUnitMapping by setting the [ad_unit_configurations](#AdUnitMapping.ad_unit_configurations) key/value pairs. For example, the ad_unit_configurations can be used to pass various IDs to the adapter&#39;s third-party SDK.
 */

#ifndef OAIAdapter_H
#define OAIAdapter_H

#include <QJsonObject>

#include "OAIAdapterAdapterConfigMetadata.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdapterAdapterConfigMetadata;

class OAIAdapter : public OAIObject {
public:
    OAIAdapter();
    OAIAdapter(QString json);
    ~OAIAdapter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAdapterAdapterConfigMetadata> getAdapterConfigMetadata() const;
    void setAdapterConfigMetadata(const QList<OAIAdapterAdapterConfigMetadata> &adapter_config_metadata);
    bool is_adapter_config_metadata_Set() const;
    bool is_adapter_config_metadata_Valid() const;

    QString getAdapterId() const;
    void setAdapterId(const QString &adapter_id);
    bool is_adapter_id_Set() const;
    bool is_adapter_id_Valid() const;

    QList<QString> getFormats() const;
    void setFormats(const QList<QString> &formats);
    bool is_formats_Set() const;
    bool is_formats_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPlatform() const;
    void setPlatform(const QString &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAdapterAdapterConfigMetadata> m_adapter_config_metadata;
    bool m_adapter_config_metadata_isSet;
    bool m_adapter_config_metadata_isValid;

    QString m_adapter_id;
    bool m_adapter_id_isSet;
    bool m_adapter_id_isValid;

    QList<QString> m_formats;
    bool m_formats_isSet;
    bool m_formats_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdapter)

#endif // OAIAdapter_H
