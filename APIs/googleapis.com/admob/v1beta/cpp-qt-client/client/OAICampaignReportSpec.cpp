/**
 * AdMob API
 * The AdMob API allows publishers to programmatically get information about their AdMob account. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICampaignReportSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICampaignReportSpec::OAICampaignReportSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICampaignReportSpec::OAICampaignReportSpec() {
    this->initializeModel();
}

OAICampaignReportSpec::~OAICampaignReportSpec() {}

void OAICampaignReportSpec::initializeModel() {

    m_date_range_isSet = false;
    m_date_range_isValid = false;

    m_dimensions_isSet = false;
    m_dimensions_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_metrics_isSet = false;
    m_metrics_isValid = false;
}

void OAICampaignReportSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICampaignReportSpec::fromJsonObject(QJsonObject json) {

    m_date_range_isValid = ::OpenAPI::fromJsonValue(m_date_range, json[QString("dateRange")]);
    m_date_range_isSet = !json[QString("dateRange")].isNull() && m_date_range_isValid;

    m_dimensions_isValid = ::OpenAPI::fromJsonValue(m_dimensions, json[QString("dimensions")]);
    m_dimensions_isSet = !json[QString("dimensions")].isNull() && m_dimensions_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;
}

QString OAICampaignReportSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICampaignReportSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_date_range.isSet()) {
        obj.insert(QString("dateRange"), ::OpenAPI::toJsonValue(m_date_range));
    }
    if (m_dimensions.size() > 0) {
        obj.insert(QString("dimensions"), ::OpenAPI::toJsonValue(m_dimensions));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_metrics.size() > 0) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    return obj;
}

OAIDateRange OAICampaignReportSpec::getDateRange() const {
    return m_date_range;
}
void OAICampaignReportSpec::setDateRange(const OAIDateRange &date_range) {
    m_date_range = date_range;
    m_date_range_isSet = true;
}

bool OAICampaignReportSpec::is_date_range_Set() const{
    return m_date_range_isSet;
}

bool OAICampaignReportSpec::is_date_range_Valid() const{
    return m_date_range_isValid;
}

QList<QString> OAICampaignReportSpec::getDimensions() const {
    return m_dimensions;
}
void OAICampaignReportSpec::setDimensions(const QList<QString> &dimensions) {
    m_dimensions = dimensions;
    m_dimensions_isSet = true;
}

bool OAICampaignReportSpec::is_dimensions_Set() const{
    return m_dimensions_isSet;
}

bool OAICampaignReportSpec::is_dimensions_Valid() const{
    return m_dimensions_isValid;
}

QString OAICampaignReportSpec::getLanguageCode() const {
    return m_language_code;
}
void OAICampaignReportSpec::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAICampaignReportSpec::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAICampaignReportSpec::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QList<QString> OAICampaignReportSpec::getMetrics() const {
    return m_metrics;
}
void OAICampaignReportSpec::setMetrics(const QList<QString> &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAICampaignReportSpec::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAICampaignReportSpec::is_metrics_Valid() const{
    return m_metrics_isValid;
}

bool OAICampaignReportSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimensions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICampaignReportSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
