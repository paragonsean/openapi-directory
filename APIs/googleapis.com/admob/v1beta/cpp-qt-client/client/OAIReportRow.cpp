/**
 * AdMob API
 * The AdMob API allows publishers to programmatically get information about their AdMob account. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportRow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportRow::OAIReportRow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportRow::OAIReportRow() {
    this->initializeModel();
}

OAIReportRow::~OAIReportRow() {}

void OAIReportRow::initializeModel() {

    m_dimension_values_isSet = false;
    m_dimension_values_isValid = false;

    m_metric_values_isSet = false;
    m_metric_values_isValid = false;
}

void OAIReportRow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReportRow::fromJsonObject(QJsonObject json) {

    m_dimension_values_isValid = ::OpenAPI::fromJsonValue(m_dimension_values, json[QString("dimensionValues")]);
    m_dimension_values_isSet = !json[QString("dimensionValues")].isNull() && m_dimension_values_isValid;

    m_metric_values_isValid = ::OpenAPI::fromJsonValue(m_metric_values, json[QString("metricValues")]);
    m_metric_values_isSet = !json[QString("metricValues")].isNull() && m_metric_values_isValid;
}

QString OAIReportRow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReportRow::asJsonObject() const {
    QJsonObject obj;
    if (m_dimension_values.size() > 0) {
        obj.insert(QString("dimensionValues"), ::OpenAPI::toJsonValue(m_dimension_values));
    }
    if (m_metric_values.size() > 0) {
        obj.insert(QString("metricValues"), ::OpenAPI::toJsonValue(m_metric_values));
    }
    return obj;
}

QMap<QString, OAIReportRowDimensionValue> OAIReportRow::getDimensionValues() const {
    return m_dimension_values;
}
void OAIReportRow::setDimensionValues(const QMap<QString, OAIReportRowDimensionValue> &dimension_values) {
    m_dimension_values = dimension_values;
    m_dimension_values_isSet = true;
}

bool OAIReportRow::is_dimension_values_Set() const{
    return m_dimension_values_isSet;
}

bool OAIReportRow::is_dimension_values_Valid() const{
    return m_dimension_values_isValid;
}

QMap<QString, OAIReportRowMetricValue> OAIReportRow::getMetricValues() const {
    return m_metric_values;
}
void OAIReportRow::setMetricValues(const QMap<QString, OAIReportRowMetricValue> &metric_values) {
    m_metric_values = metric_values;
    m_metric_values_isSet = true;
}

bool OAIReportRow::is_metric_values_Set() const{
    return m_metric_values_isSet;
}

bool OAIReportRow::is_metric_values_Valid() const{
    return m_metric_values_isValid;
}

bool OAIReportRow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dimension_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReportRow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
