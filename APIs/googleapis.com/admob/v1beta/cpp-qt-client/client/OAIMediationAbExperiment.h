/**
 * AdMob API
 * The AdMob API allows publishers to programmatically get information about their AdMob account. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMediationAbExperiment.h
 *
 * The mediation A/B experiment.
 */

#ifndef OAIMediationAbExperiment_H
#define OAIMediationAbExperiment_H

#include <QJsonObject>

#include "OAIMediationAbExperimentExperimentMediationLine.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMediationAbExperimentExperimentMediationLine;

class OAIMediationAbExperiment : public OAIObject {
public:
    OAIMediationAbExperiment();
    OAIMediationAbExperiment(QString json);
    ~OAIMediationAbExperiment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIMediationAbExperimentExperimentMediationLine> getControlMediationLines() const;
    void setControlMediationLines(const QList<OAIMediationAbExperimentExperimentMediationLine> &control_mediation_lines);
    bool is_control_mediation_lines_Set() const;
    bool is_control_mediation_lines_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getExperimentId() const;
    void setExperimentId(const QString &experiment_id);
    bool is_experiment_id_Set() const;
    bool is_experiment_id_Valid() const;

    QString getMediationGroupId() const;
    void setMediationGroupId(const QString &mediation_group_id);
    bool is_mediation_group_id_Set() const;
    bool is_mediation_group_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QList<OAIMediationAbExperimentExperimentMediationLine> getTreatmentMediationLines() const;
    void setTreatmentMediationLines(const QList<OAIMediationAbExperimentExperimentMediationLine> &treatment_mediation_lines);
    bool is_treatment_mediation_lines_Set() const;
    bool is_treatment_mediation_lines_Valid() const;

    QString getTreatmentTrafficPercentage() const;
    void setTreatmentTrafficPercentage(const QString &treatment_traffic_percentage);
    bool is_treatment_traffic_percentage_Set() const;
    bool is_treatment_traffic_percentage_Valid() const;

    QString getVariantLeader() const;
    void setVariantLeader(const QString &variant_leader);
    bool is_variant_leader_Set() const;
    bool is_variant_leader_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIMediationAbExperimentExperimentMediationLine> m_control_mediation_lines;
    bool m_control_mediation_lines_isSet;
    bool m_control_mediation_lines_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_experiment_id;
    bool m_experiment_id_isSet;
    bool m_experiment_id_isValid;

    QString m_mediation_group_id;
    bool m_mediation_group_id_isSet;
    bool m_mediation_group_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QList<OAIMediationAbExperimentExperimentMediationLine> m_treatment_mediation_lines;
    bool m_treatment_mediation_lines_isSet;
    bool m_treatment_mediation_lines_isValid;

    QString m_treatment_traffic_percentage;
    bool m_treatment_traffic_percentage_isSet;
    bool m_treatment_traffic_percentage_isValid;

    QString m_variant_leader;
    bool m_variant_leader_isSet;
    bool m_variant_leader_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMediationAbExperiment)

#endif // OAIMediationAbExperiment_H
