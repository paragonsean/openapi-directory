/**
 * AdMob API
 * The AdMob API allows publishers to programmatically get information about their AdMob account. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppLinkedAppInfo model module.
 * @module model/AppLinkedAppInfo
 * @version v1beta
 */
class AppLinkedAppInfo {
    /**
     * Constructs a new <code>AppLinkedAppInfo</code>.
     * Information from the app store if the app is linked to an app store.
     * @alias module:model/AppLinkedAppInfo
     */
    constructor() { 
        
        AppLinkedAppInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppLinkedAppInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppLinkedAppInfo} obj Optional instance to populate.
     * @return {module:model/AppLinkedAppInfo} The populated <code>AppLinkedAppInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppLinkedAppInfo();

            if (data.hasOwnProperty('androidAppStores')) {
                obj['androidAppStores'] = ApiClient.convertToType(data['androidAppStores'], ['String']);
            }
            if (data.hasOwnProperty('appStoreId')) {
                obj['appStoreId'] = ApiClient.convertToType(data['appStoreId'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppLinkedAppInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppLinkedAppInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['androidAppStores'])) {
            throw new Error("Expected the field `androidAppStores` to be an array in the JSON data but got " + data['androidAppStores']);
        }
        // ensure the json data is a string
        if (data['appStoreId'] && !(typeof data['appStoreId'] === 'string' || data['appStoreId'] instanceof String)) {
            throw new Error("Expected the field `appStoreId` to be a primitive type in the JSON string but got " + data['appStoreId']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }

        return true;
    }


}



/**
 * Optional. The app store information for published Android apps. This field is only used for apps on the Android platform and will be ignored if the PLATFORM is set to iOS. The default value is the Google Play App store. This field can be updated after app is created. If the app is not published, this field will not be included in the response.
 * @member {Array.<module:model/AppLinkedAppInfo.AndroidAppStoresEnum>} androidAppStores
 */
AppLinkedAppInfo.prototype['androidAppStores'] = undefined;

/**
 * The app store ID of the app; present if and only if the app is linked to an app store. If the app is added to the Google Play store, it will be the application ID of the app. For example: \"com.example.myapp\". See https://developer.android.com/studio/build/application-id. If the app is added to the Apple App Store, it will be app store ID. For example \"105169111\". Note that setting the app store id is considered an irreversible action. Once an app is linked, it cannot be unlinked.
 * @member {String} appStoreId
 */
AppLinkedAppInfo.prototype['appStoreId'] = undefined;

/**
 * Output only. Display name of the app as it appears in the app store. This is an output-only field, and may be empty if the app cannot be found in the store.
 * @member {String} displayName
 */
AppLinkedAppInfo.prototype['displayName'] = undefined;





/**
 * Allowed values for the <code>androidAppStores</code> property.
 * @enum {String}
 * @readonly
 */
AppLinkedAppInfo['AndroidAppStoresEnum'] = {

    /**
     * value: "ANDROID_APP_STORE_UNSPECIFIED"
     * @const
     */
    "ANDROID_APP_STORE_UNSPECIFIED": "ANDROID_APP_STORE_UNSPECIFIED",

    /**
     * value: "GOOGLE_PLAY_APP_STORE"
     * @const
     */
    "GOOGLE_PLAY_APP_STORE": "GOOGLE_PLAY_APP_STORE",

    /**
     * value: "AMAZON_APP_STORE"
     * @const
     */
    "AMAZON_APP_STORE": "AMAZON_APP_STORE",

    /**
     * value: "OPPO_APP_STORE"
     * @const
     */
    "OPPO_APP_STORE": "OPPO_APP_STORE",

    /**
     * value: "SAMSUNG_APP_STORE"
     * @const
     */
    "SAMSUNG_APP_STORE": "SAMSUNG_APP_STORE",

    /**
     * value: "VIVO_APP_STORE"
     * @const
     */
    "VIVO_APP_STORE": "VIVO_APP_STORE",

    /**
     * value: "XIAOMI_APP_STORE"
     * @const
     */
    "XIAOMI_APP_STORE": "XIAOMI_APP_STORE"
};



export default AppLinkedAppInfo;

