/**
 * AdMob API
 * The AdMob API allows publishers to programmatically get information about their AdMob account. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateRange from './DateRange';

/**
 * The CampaignReportSpec model module.
 * @module model/CampaignReportSpec
 * @version v1beta
 */
class CampaignReportSpec {
    /**
     * Constructs a new <code>CampaignReportSpec</code>.
     * The specification for generating a Campaign report. For example, the specification to get IMPRESSIONS and CLICKS sliced by CAMPAIGN_ID can look like the following example: { \&quot;date_range\&quot;: { \&quot;start_date\&quot;: {\&quot;year\&quot;: 2021, \&quot;month\&quot;: 12, \&quot;day\&quot;: 1}, \&quot;end_date\&quot;: {\&quot;year\&quot;: 2021, \&quot;month\&quot;: 12, \&quot;day\&quot;: 30} }, \&quot;dimensions\&quot;: [\&quot;CAMPAIGN_ID\&quot;], \&quot;metrics\&quot;: [\&quot;IMPRESSIONS\&quot;, \&quot;CLICKS\&quot;], }
     * @alias module:model/CampaignReportSpec
     */
    constructor() { 
        
        CampaignReportSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CampaignReportSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CampaignReportSpec} obj Optional instance to populate.
     * @return {module:model/CampaignReportSpec} The populated <code>CampaignReportSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CampaignReportSpec();

            if (data.hasOwnProperty('dateRange')) {
                obj['dateRange'] = DateRange.constructFromObject(data['dateRange']);
            }
            if (data.hasOwnProperty('dimensions')) {
                obj['dimensions'] = ApiClient.convertToType(data['dimensions'], ['String']);
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CampaignReportSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CampaignReportSpec</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dateRange`
        if (data['dateRange']) { // data not null
          DateRange.validateJSON(data['dateRange']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dimensions'])) {
            throw new Error("Expected the field `dimensions` to be an array in the JSON data but got " + data['dimensions']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['metrics'])) {
            throw new Error("Expected the field `metrics` to be an array in the JSON data but got " + data['metrics']);
        }

        return true;
    }


}



/**
 * @member {module:model/DateRange} dateRange
 */
CampaignReportSpec.prototype['dateRange'] = undefined;

/**
 * List of dimensions of the report. The value combination of these dimensions determines the row of the report. If no dimensions are specified, the report returns a single row of requested metrics for the entire account.
 * @member {Array.<module:model/CampaignReportSpec.DimensionsEnum>} dimensions
 */
CampaignReportSpec.prototype['dimensions'] = undefined;

/**
 * Language used for any localized text, such as certain applicable dimension values. The language tag is defined in the IETF BCP47. Defaults to 'en-US' if unspecified or invalid.
 * @member {String} languageCode
 */
CampaignReportSpec.prototype['languageCode'] = undefined;

/**
 * List of metrics of the report. A report must specify at least one metric.
 * @member {Array.<module:model/CampaignReportSpec.MetricsEnum>} metrics
 */
CampaignReportSpec.prototype['metrics'] = undefined;





/**
 * Allowed values for the <code>dimensions</code> property.
 * @enum {String}
 * @readonly
 */
CampaignReportSpec['DimensionsEnum'] = {

    /**
     * value: "DIMENSION_UNSPECIFIED"
     * @const
     */
    "DIMENSION_UNSPECIFIED": "DIMENSION_UNSPECIFIED",

    /**
     * value: "DATE"
     * @const
     */
    "DATE": "DATE",

    /**
     * value: "CAMPAIGN_ID"
     * @const
     */
    "CAMPAIGN_ID": "CAMPAIGN_ID",

    /**
     * value: "CAMPAIGN_NAME"
     * @const
     */
    "CAMPAIGN_NAME": "CAMPAIGN_NAME",

    /**
     * value: "AD_ID"
     * @const
     */
    "AD_ID": "AD_ID",

    /**
     * value: "AD_NAME"
     * @const
     */
    "AD_NAME": "AD_NAME",

    /**
     * value: "PLACEMENT_ID"
     * @const
     */
    "PLACEMENT_ID": "PLACEMENT_ID",

    /**
     * value: "PLACEMENT_NAME"
     * @const
     */
    "PLACEMENT_NAME": "PLACEMENT_NAME",

    /**
     * value: "PLACEMENT_PLATFORM"
     * @const
     */
    "PLACEMENT_PLATFORM": "PLACEMENT_PLATFORM",

    /**
     * value: "COUNTRY"
     * @const
     */
    "COUNTRY": "COUNTRY",

    /**
     * value: "FORMAT"
     * @const
     */
    "FORMAT": "FORMAT"
};


/**
 * Allowed values for the <code>metrics</code> property.
 * @enum {String}
 * @readonly
 */
CampaignReportSpec['MetricsEnum'] = {

    /**
     * value: "METRIC_UNSPECIFIED"
     * @const
     */
    "METRIC_UNSPECIFIED": "METRIC_UNSPECIFIED",

    /**
     * value: "IMPRESSIONS"
     * @const
     */
    "IMPRESSIONS": "IMPRESSIONS",

    /**
     * value: "CLICKS"
     * @const
     */
    "CLICKS": "CLICKS",

    /**
     * value: "CLICK_THROUGH_RATE"
     * @const
     */
    "CLICK_THROUGH_RATE": "CLICK_THROUGH_RATE",

    /**
     * value: "INSTALLS"
     * @const
     */
    "INSTALLS": "INSTALLS",

    /**
     * value: "ESTIMATED_COST"
     * @const
     */
    "ESTIMATED_COST": "ESTIMATED_COST",

    /**
     * value: "AVERAGE_CPI"
     * @const
     */
    "AVERAGE_CPI": "AVERAGE_CPI",

    /**
     * value: "INTERACTIONS"
     * @const
     */
    "INTERACTIONS": "INTERACTIONS"
};



export default CampaignReportSpec;

