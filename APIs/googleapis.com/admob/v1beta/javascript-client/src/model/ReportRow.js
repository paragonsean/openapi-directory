/**
 * AdMob API
 * The AdMob API allows publishers to programmatically get information about their AdMob account. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReportRowDimensionValue from './ReportRowDimensionValue';
import ReportRowMetricValue from './ReportRowMetricValue';

/**
 * The ReportRow model module.
 * @module model/ReportRow
 * @version v1beta
 */
class ReportRow {
    /**
     * Constructs a new <code>ReportRow</code>.
     * A row of the returning report.
     * @alias module:model/ReportRow
     */
    constructor() { 
        
        ReportRow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportRow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportRow} obj Optional instance to populate.
     * @return {module:model/ReportRow} The populated <code>ReportRow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportRow();

            if (data.hasOwnProperty('dimensionValues')) {
                obj['dimensionValues'] = ApiClient.convertToType(data['dimensionValues'], {'String': ReportRowDimensionValue});
            }
            if (data.hasOwnProperty('metricValues')) {
                obj['metricValues'] = ApiClient.convertToType(data['metricValues'], {'String': ReportRowMetricValue});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportRow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportRow</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Map of dimension values in a row, with keys as enum name of the dimensions.
 * @member {Object.<String, module:model/ReportRowDimensionValue>} dimensionValues
 */
ReportRow.prototype['dimensionValues'] = undefined;

/**
 * Map of metric values in a row, with keys as enum name of the metrics. If a metric being requested has no value returned, the map will not include it.
 * @member {Object.<String, module:model/ReportRowMetricValue>} metricValues
 */
ReportRow.prototype['metricValues'] = undefined;






export default ReportRow;

