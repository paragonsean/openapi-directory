# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppLinkedAppInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, android_app_stores: List[str]=None, app_store_id: str=None, display_name: str=None):
        """AppLinkedAppInfo - a model defined in OpenAPI

        :param android_app_stores: The android_app_stores of this AppLinkedAppInfo.
        :param app_store_id: The app_store_id of this AppLinkedAppInfo.
        :param display_name: The display_name of this AppLinkedAppInfo.
        """
        self.openapi_types = {
            'android_app_stores': List[str],
            'app_store_id': str,
            'display_name': str
        }

        self.attribute_map = {
            'android_app_stores': 'androidAppStores',
            'app_store_id': 'appStoreId',
            'display_name': 'displayName'
        }

        self._android_app_stores = android_app_stores
        self._app_store_id = app_store_id
        self._display_name = display_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppLinkedAppInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppLinkedAppInfo of this AppLinkedAppInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def android_app_stores(self):
        """Gets the android_app_stores of this AppLinkedAppInfo.

        Optional. The app store information for published Android apps. This field is only used for apps on the Android platform and will be ignored if the PLATFORM is set to iOS. The default value is the Google Play App store. This field can be updated after app is created. If the app is not published, this field will not be included in the response.

        :return: The android_app_stores of this AppLinkedAppInfo.
        :rtype: List[str]
        """
        return self._android_app_stores

    @android_app_stores.setter
    def android_app_stores(self, android_app_stores):
        """Sets the android_app_stores of this AppLinkedAppInfo.

        Optional. The app store information for published Android apps. This field is only used for apps on the Android platform and will be ignored if the PLATFORM is set to iOS. The default value is the Google Play App store. This field can be updated after app is created. If the app is not published, this field will not be included in the response.

        :param android_app_stores: The android_app_stores of this AppLinkedAppInfo.
        :type android_app_stores: List[str]
        """
        allowed_values = ["ANDROID_APP_STORE_UNSPECIFIED", "GOOGLE_PLAY_APP_STORE", "AMAZON_APP_STORE", "OPPO_APP_STORE", "SAMSUNG_APP_STORE", "VIVO_APP_STORE", "XIAOMI_APP_STORE"]  # noqa: E501
        if not set(android_app_stores).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `android_app_stores` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(android_app_stores) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._android_app_stores = android_app_stores

    @property
    def app_store_id(self):
        """Gets the app_store_id of this AppLinkedAppInfo.

        The app store ID of the app; present if and only if the app is linked to an app store. If the app is added to the Google Play store, it will be the application ID of the app. For example: \"com.example.myapp\". See https://developer.android.com/studio/build/application-id. If the app is added to the Apple App Store, it will be app store ID. For example \"105169111\". Note that setting the app store id is considered an irreversible action. Once an app is linked, it cannot be unlinked.

        :return: The app_store_id of this AppLinkedAppInfo.
        :rtype: str
        """
        return self._app_store_id

    @app_store_id.setter
    def app_store_id(self, app_store_id):
        """Sets the app_store_id of this AppLinkedAppInfo.

        The app store ID of the app; present if and only if the app is linked to an app store. If the app is added to the Google Play store, it will be the application ID of the app. For example: \"com.example.myapp\". See https://developer.android.com/studio/build/application-id. If the app is added to the Apple App Store, it will be app store ID. For example \"105169111\". Note that setting the app store id is considered an irreversible action. Once an app is linked, it cannot be unlinked.

        :param app_store_id: The app_store_id of this AppLinkedAppInfo.
        :type app_store_id: str
        """

        self._app_store_id = app_store_id

    @property
    def display_name(self):
        """Gets the display_name of this AppLinkedAppInfo.

        Output only. Display name of the app as it appears in the app store. This is an output-only field, and may be empty if the app cannot be found in the store.

        :return: The display_name of this AppLinkedAppInfo.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this AppLinkedAppInfo.

        Output only. Display name of the app as it appears in the app store. This is an output-only field, and may be empty if the app cannot be found in the store.

        :param display_name: The display_name of this AppLinkedAppInfo.
        :type display_name: str
        """

        self._display_name = display_name
