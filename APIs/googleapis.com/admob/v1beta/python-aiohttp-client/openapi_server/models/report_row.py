# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.report_row_dimension_value import ReportRowDimensionValue
from openapi_server.models.report_row_metric_value import ReportRowMetricValue
from openapi_server import util


class ReportRow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimension_values: Dict[str, ReportRowDimensionValue]=None, metric_values: Dict[str, ReportRowMetricValue]=None):
        """ReportRow - a model defined in OpenAPI

        :param dimension_values: The dimension_values of this ReportRow.
        :param metric_values: The metric_values of this ReportRow.
        """
        self.openapi_types = {
            'dimension_values': Dict[str, ReportRowDimensionValue],
            'metric_values': Dict[str, ReportRowMetricValue]
        }

        self.attribute_map = {
            'dimension_values': 'dimensionValues',
            'metric_values': 'metricValues'
        }

        self._dimension_values = dimension_values
        self._metric_values = metric_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportRow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportRow of this ReportRow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimension_values(self):
        """Gets the dimension_values of this ReportRow.

        Map of dimension values in a row, with keys as enum name of the dimensions.

        :return: The dimension_values of this ReportRow.
        :rtype: Dict[str, ReportRowDimensionValue]
        """
        return self._dimension_values

    @dimension_values.setter
    def dimension_values(self, dimension_values):
        """Sets the dimension_values of this ReportRow.

        Map of dimension values in a row, with keys as enum name of the dimensions.

        :param dimension_values: The dimension_values of this ReportRow.
        :type dimension_values: Dict[str, ReportRowDimensionValue]
        """

        self._dimension_values = dimension_values

    @property
    def metric_values(self):
        """Gets the metric_values of this ReportRow.

        Map of metric values in a row, with keys as enum name of the metrics. If a metric being requested has no value returned, the map will not include it.

        :return: The metric_values of this ReportRow.
        :rtype: Dict[str, ReportRowMetricValue]
        """
        return self._metric_values

    @metric_values.setter
    def metric_values(self, metric_values):
        """Sets the metric_values of this ReportRow.

        Map of metric values in a row, with keys as enum name of the metrics. If a metric being requested has no value returned, the map will not include it.

        :param metric_values: The metric_values of this ReportRow.
        :type metric_values: Dict[str, ReportRowMetricValue]
        """

        self._metric_values = metric_values
