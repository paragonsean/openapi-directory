# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.string_list import StringList
from openapi_server import util


class NetworkReportSpecDimensionFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimension: str=None, matches_any: StringList=None):
        """NetworkReportSpecDimensionFilter - a model defined in OpenAPI

        :param dimension: The dimension of this NetworkReportSpecDimensionFilter.
        :param matches_any: The matches_any of this NetworkReportSpecDimensionFilter.
        """
        self.openapi_types = {
            'dimension': str,
            'matches_any': StringList
        }

        self.attribute_map = {
            'dimension': 'dimension',
            'matches_any': 'matchesAny'
        }

        self._dimension = dimension
        self._matches_any = matches_any

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkReportSpecDimensionFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkReportSpecDimensionFilter of this NetworkReportSpecDimensionFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimension(self):
        """Gets the dimension of this NetworkReportSpecDimensionFilter.

        Applies the filter criterion to the specified dimension.

        :return: The dimension of this NetworkReportSpecDimensionFilter.
        :rtype: str
        """
        return self._dimension

    @dimension.setter
    def dimension(self, dimension):
        """Sets the dimension of this NetworkReportSpecDimensionFilter.

        Applies the filter criterion to the specified dimension.

        :param dimension: The dimension of this NetworkReportSpecDimensionFilter.
        :type dimension: str
        """
        allowed_values = ["DIMENSION_UNSPECIFIED", "DATE", "MONTH", "WEEK", "AD_UNIT", "APP", "AD_TYPE", "COUNTRY", "FORMAT", "PLATFORM", "MOBILE_OS_VERSION", "GMA_SDK_VERSION", "APP_VERSION_NAME", "SERVING_RESTRICTION"]  # noqa: E501
        if dimension not in allowed_values:
            raise ValueError(
                "Invalid value for `dimension` ({0}), must be one of {1}"
                .format(dimension, allowed_values)
            )

        self._dimension = dimension

    @property
    def matches_any(self):
        """Gets the matches_any of this NetworkReportSpecDimensionFilter.


        :return: The matches_any of this NetworkReportSpecDimensionFilter.
        :rtype: StringList
        """
        return self._matches_any

    @matches_any.setter
    def matches_any(self, matches_any):
        """Sets the matches_any of this NetworkReportSpecDimensionFilter.


        :param matches_any: The matches_any of this NetworkReportSpecDimensionFilter.
        :type matches_any: StringList
        """

        self._matches_any = matches_any
