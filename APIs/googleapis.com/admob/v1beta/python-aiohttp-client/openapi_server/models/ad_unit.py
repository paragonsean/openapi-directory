# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ad_unit_reward_settings import AdUnitRewardSettings
from openapi_server import util


class AdUnit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_format: str=None, ad_types: List[str]=None, ad_unit_id: str=None, app_id: str=None, display_name: str=None, name: str=None, reward_settings: AdUnitRewardSettings=None):
        """AdUnit - a model defined in OpenAPI

        :param ad_format: The ad_format of this AdUnit.
        :param ad_types: The ad_types of this AdUnit.
        :param ad_unit_id: The ad_unit_id of this AdUnit.
        :param app_id: The app_id of this AdUnit.
        :param display_name: The display_name of this AdUnit.
        :param name: The name of this AdUnit.
        :param reward_settings: The reward_settings of this AdUnit.
        """
        self.openapi_types = {
            'ad_format': str,
            'ad_types': List[str],
            'ad_unit_id': str,
            'app_id': str,
            'display_name': str,
            'name': str,
            'reward_settings': AdUnitRewardSettings
        }

        self.attribute_map = {
            'ad_format': 'adFormat',
            'ad_types': 'adTypes',
            'ad_unit_id': 'adUnitId',
            'app_id': 'appId',
            'display_name': 'displayName',
            'name': 'name',
            'reward_settings': 'rewardSettings'
        }

        self._ad_format = ad_format
        self._ad_types = ad_types
        self._ad_unit_id = ad_unit_id
        self._app_id = app_id
        self._display_name = display_name
        self._name = name
        self._reward_settings = reward_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdUnit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdUnit of this AdUnit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_format(self):
        """Gets the ad_format of this AdUnit.

        AdFormat of the ad unit. Possible values are as follows: \"APP_OPEN\" - App Open ad format. \"BANNER\" - Banner ad format. \"BANNER_INTERSTITIAL\" - Legacy format that can be used as either banner or interstitial. This format can no longer be created but can be targeted by mediation groups. \"INTERSTITIAL\" - A full screen ad. Supported ad types are \"RICH_MEDIA\" and \"VIDEO\". \"NATIVE\" - Native ad format. \"REWARDED\" - An ad that, once viewed, gets a callback verifying the view so that a reward can be given to the user. Supported ad types are \"RICH_MEDIA\" (interactive) and video where video can not be excluded. \"REWARDED_INTERSTITIAL\" - Rewarded Interstitial ad format. Only supports video ad type. See https://support.google.com/admob/answer/9884467.

        :return: The ad_format of this AdUnit.
        :rtype: str
        """
        return self._ad_format

    @ad_format.setter
    def ad_format(self, ad_format):
        """Sets the ad_format of this AdUnit.

        AdFormat of the ad unit. Possible values are as follows: \"APP_OPEN\" - App Open ad format. \"BANNER\" - Banner ad format. \"BANNER_INTERSTITIAL\" - Legacy format that can be used as either banner or interstitial. This format can no longer be created but can be targeted by mediation groups. \"INTERSTITIAL\" - A full screen ad. Supported ad types are \"RICH_MEDIA\" and \"VIDEO\". \"NATIVE\" - Native ad format. \"REWARDED\" - An ad that, once viewed, gets a callback verifying the view so that a reward can be given to the user. Supported ad types are \"RICH_MEDIA\" (interactive) and video where video can not be excluded. \"REWARDED_INTERSTITIAL\" - Rewarded Interstitial ad format. Only supports video ad type. See https://support.google.com/admob/answer/9884467.

        :param ad_format: The ad_format of this AdUnit.
        :type ad_format: str
        """

        self._ad_format = ad_format

    @property
    def ad_types(self):
        """Gets the ad_types of this AdUnit.

        Ad media type supported by this ad unit. Possible values as follows: \"RICH_MEDIA\" - Text, image, and other non-video media. \"VIDEO\" - Video media.

        :return: The ad_types of this AdUnit.
        :rtype: List[str]
        """
        return self._ad_types

    @ad_types.setter
    def ad_types(self, ad_types):
        """Sets the ad_types of this AdUnit.

        Ad media type supported by this ad unit. Possible values as follows: \"RICH_MEDIA\" - Text, image, and other non-video media. \"VIDEO\" - Video media.

        :param ad_types: The ad_types of this AdUnit.
        :type ad_types: List[str]
        """

        self._ad_types = ad_types

    @property
    def ad_unit_id(self):
        """Gets the ad_unit_id of this AdUnit.

        The externally visible ID of the ad unit which can be used to integrate with the AdMob SDK. This is a read only property. Example: ca-app-pub-9876543210987654/0123456789

        :return: The ad_unit_id of this AdUnit.
        :rtype: str
        """
        return self._ad_unit_id

    @ad_unit_id.setter
    def ad_unit_id(self, ad_unit_id):
        """Sets the ad_unit_id of this AdUnit.

        The externally visible ID of the ad unit which can be used to integrate with the AdMob SDK. This is a read only property. Example: ca-app-pub-9876543210987654/0123456789

        :param ad_unit_id: The ad_unit_id of this AdUnit.
        :type ad_unit_id: str
        """

        self._ad_unit_id = ad_unit_id

    @property
    def app_id(self):
        """Gets the app_id of this AdUnit.

        The externally visible ID of the app this ad unit is associated with. Example: ca-app-pub-9876543210987654~0123456789

        :return: The app_id of this AdUnit.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this AdUnit.

        The externally visible ID of the app this ad unit is associated with. Example: ca-app-pub-9876543210987654~0123456789

        :param app_id: The app_id of this AdUnit.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def display_name(self):
        """Gets the display_name of this AdUnit.

        The display name of the ad unit as shown in the AdMob UI, which is provided by the user. The maximum length allowed is 80 characters.

        :return: The display_name of this AdUnit.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this AdUnit.

        The display name of the ad unit as shown in the AdMob UI, which is provided by the user. The maximum length allowed is 80 characters.

        :param display_name: The display_name of this AdUnit.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this AdUnit.

        Resource name for this ad unit. Format is accounts/{publisher_id}/adUnits/{ad_unit_id_fragment} Example: accounts/pub-9876543210987654/adUnits/0123456789

        :return: The name of this AdUnit.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AdUnit.

        Resource name for this ad unit. Format is accounts/{publisher_id}/adUnits/{ad_unit_id_fragment} Example: accounts/pub-9876543210987654/adUnits/0123456789

        :param name: The name of this AdUnit.
        :type name: str
        """

        self._name = name

    @property
    def reward_settings(self):
        """Gets the reward_settings of this AdUnit.


        :return: The reward_settings of this AdUnit.
        :rtype: AdUnitRewardSettings
        """
        return self._reward_settings

    @reward_settings.setter
    def reward_settings(self, reward_settings):
        """Sets the reward_settings of this AdUnit.


        :param reward_settings: The reward_settings of this AdUnit.
        :type reward_settings: AdUnitRewardSettings
        """

        self._reward_settings = reward_settings
