# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.report_warning import ReportWarning
from openapi_server import util


class ReportFooter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, matching_row_count: str=None, warnings: List[ReportWarning]=None):
        """ReportFooter - a model defined in OpenAPI

        :param matching_row_count: The matching_row_count of this ReportFooter.
        :param warnings: The warnings of this ReportFooter.
        """
        self.openapi_types = {
            'matching_row_count': str,
            'warnings': List[ReportWarning]
        }

        self.attribute_map = {
            'matching_row_count': 'matchingRowCount',
            'warnings': 'warnings'
        }

        self._matching_row_count = matching_row_count
        self._warnings = warnings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportFooter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportFooter of this ReportFooter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def matching_row_count(self):
        """Gets the matching_row_count of this ReportFooter.

        Total number of rows that matched the request. Warning: This count does NOT always match the number of rows in the response. Do not make that assumption when processing the response.

        :return: The matching_row_count of this ReportFooter.
        :rtype: str
        """
        return self._matching_row_count

    @matching_row_count.setter
    def matching_row_count(self, matching_row_count):
        """Sets the matching_row_count of this ReportFooter.

        Total number of rows that matched the request. Warning: This count does NOT always match the number of rows in the response. Do not make that assumption when processing the response.

        :param matching_row_count: The matching_row_count of this ReportFooter.
        :type matching_row_count: str
        """

        self._matching_row_count = matching_row_count

    @property
    def warnings(self):
        """Gets the warnings of this ReportFooter.

        Warnings associated with generation of the report.

        :return: The warnings of this ReportFooter.
        :rtype: List[ReportWarning]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this ReportFooter.

        Warnings associated with generation of the report.

        :param warnings: The warnings of this ReportFooter.
        :type warnings: List[ReportWarning]
        """

        self._warnings = warnings
