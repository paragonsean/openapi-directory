# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.date_range import DateRange
from openapi_server.models.localization_settings import LocalizationSettings
from openapi_server import util


class ReportHeader(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_range: DateRange=None, localization_settings: LocalizationSettings=None, reporting_time_zone: str=None):
        """ReportHeader - a model defined in OpenAPI

        :param date_range: The date_range of this ReportHeader.
        :param localization_settings: The localization_settings of this ReportHeader.
        :param reporting_time_zone: The reporting_time_zone of this ReportHeader.
        """
        self.openapi_types = {
            'date_range': DateRange,
            'localization_settings': LocalizationSettings,
            'reporting_time_zone': str
        }

        self.attribute_map = {
            'date_range': 'dateRange',
            'localization_settings': 'localizationSettings',
            'reporting_time_zone': 'reportingTimeZone'
        }

        self._date_range = date_range
        self._localization_settings = localization_settings
        self._reporting_time_zone = reporting_time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportHeader':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportHeader of this ReportHeader.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_range(self):
        """Gets the date_range of this ReportHeader.


        :return: The date_range of this ReportHeader.
        :rtype: DateRange
        """
        return self._date_range

    @date_range.setter
    def date_range(self, date_range):
        """Sets the date_range of this ReportHeader.


        :param date_range: The date_range of this ReportHeader.
        :type date_range: DateRange
        """

        self._date_range = date_range

    @property
    def localization_settings(self):
        """Gets the localization_settings of this ReportHeader.


        :return: The localization_settings of this ReportHeader.
        :rtype: LocalizationSettings
        """
        return self._localization_settings

    @localization_settings.setter
    def localization_settings(self, localization_settings):
        """Sets the localization_settings of this ReportHeader.


        :param localization_settings: The localization_settings of this ReportHeader.
        :type localization_settings: LocalizationSettings
        """

        self._localization_settings = localization_settings

    @property
    def reporting_time_zone(self):
        """Gets the reporting_time_zone of this ReportHeader.

        The report time zone. The value is a time-zone ID as specified by the CLDR project, for example, \"America/Los_Angeles\".

        :return: The reporting_time_zone of this ReportHeader.
        :rtype: str
        """
        return self._reporting_time_zone

    @reporting_time_zone.setter
    def reporting_time_zone(self, reporting_time_zone):
        """Sets the reporting_time_zone of this ReportHeader.

        The report time zone. The value is a time-zone ID as specified by the CLDR project, for example, \"America/Los_Angeles\".

        :param reporting_time_zone: The reporting_time_zone of this ReportHeader.
        :type reporting_time_zone: str
        """

        self._reporting_time_zone = reporting_time_zone
