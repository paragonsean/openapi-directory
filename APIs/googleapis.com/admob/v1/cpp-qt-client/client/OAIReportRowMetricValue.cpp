/**
 * AdMob API
 * The AdMob API allows publishers to programmatically get information about their AdMob account. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportRowMetricValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportRowMetricValue::OAIReportRowMetricValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportRowMetricValue::OAIReportRowMetricValue() {
    this->initializeModel();
}

OAIReportRowMetricValue::~OAIReportRowMetricValue() {}

void OAIReportRowMetricValue::initializeModel() {

    m_double_value_isSet = false;
    m_double_value_isValid = false;

    m_integer_value_isSet = false;
    m_integer_value_isValid = false;

    m_micros_value_isSet = false;
    m_micros_value_isValid = false;
}

void OAIReportRowMetricValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReportRowMetricValue::fromJsonObject(QJsonObject json) {

    m_double_value_isValid = ::OpenAPI::fromJsonValue(m_double_value, json[QString("doubleValue")]);
    m_double_value_isSet = !json[QString("doubleValue")].isNull() && m_double_value_isValid;

    m_integer_value_isValid = ::OpenAPI::fromJsonValue(m_integer_value, json[QString("integerValue")]);
    m_integer_value_isSet = !json[QString("integerValue")].isNull() && m_integer_value_isValid;

    m_micros_value_isValid = ::OpenAPI::fromJsonValue(m_micros_value, json[QString("microsValue")]);
    m_micros_value_isSet = !json[QString("microsValue")].isNull() && m_micros_value_isValid;
}

QString OAIReportRowMetricValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReportRowMetricValue::asJsonObject() const {
    QJsonObject obj;
    if (m_double_value_isSet) {
        obj.insert(QString("doubleValue"), ::OpenAPI::toJsonValue(m_double_value));
    }
    if (m_integer_value_isSet) {
        obj.insert(QString("integerValue"), ::OpenAPI::toJsonValue(m_integer_value));
    }
    if (m_micros_value_isSet) {
        obj.insert(QString("microsValue"), ::OpenAPI::toJsonValue(m_micros_value));
    }
    return obj;
}

double OAIReportRowMetricValue::getDoubleValue() const {
    return m_double_value;
}
void OAIReportRowMetricValue::setDoubleValue(const double &double_value) {
    m_double_value = double_value;
    m_double_value_isSet = true;
}

bool OAIReportRowMetricValue::is_double_value_Set() const{
    return m_double_value_isSet;
}

bool OAIReportRowMetricValue::is_double_value_Valid() const{
    return m_double_value_isValid;
}

QString OAIReportRowMetricValue::getIntegerValue() const {
    return m_integer_value;
}
void OAIReportRowMetricValue::setIntegerValue(const QString &integer_value) {
    m_integer_value = integer_value;
    m_integer_value_isSet = true;
}

bool OAIReportRowMetricValue::is_integer_value_Set() const{
    return m_integer_value_isSet;
}

bool OAIReportRowMetricValue::is_integer_value_Valid() const{
    return m_integer_value_isValid;
}

QString OAIReportRowMetricValue::getMicrosValue() const {
    return m_micros_value;
}
void OAIReportRowMetricValue::setMicrosValue(const QString &micros_value) {
    m_micros_value = micros_value;
    m_micros_value_isSet = true;
}

bool OAIReportRowMetricValue::is_micros_value_Set() const{
    return m_micros_value_isSet;
}

bool OAIReportRowMetricValue::is_micros_value_Valid() const{
    return m_micros_value_isValid;
}

bool OAIReportRowMetricValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_double_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_integer_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_micros_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReportRowMetricValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
