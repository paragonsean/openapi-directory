# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LocalizationSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency_code: str=None, language_code: str=None):
        """LocalizationSettings - a model defined in OpenAPI

        :param currency_code: The currency_code of this LocalizationSettings.
        :param language_code: The language_code of this LocalizationSettings.
        """
        self.openapi_types = {
            'currency_code': str,
            'language_code': str
        }

        self.attribute_map = {
            'currency_code': 'currencyCode',
            'language_code': 'languageCode'
        }

        self._currency_code = currency_code
        self._language_code = language_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocalizationSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocalizationSettings of this LocalizationSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency_code(self):
        """Gets the currency_code of this LocalizationSettings.

        Currency code of the earning related metrics, which is the 3-letter code defined in ISO 4217. The daily average rate is used for the currency conversion. Defaults to the account currency code if unspecified.

        :return: The currency_code of this LocalizationSettings.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this LocalizationSettings.

        Currency code of the earning related metrics, which is the 3-letter code defined in ISO 4217. The daily average rate is used for the currency conversion. Defaults to the account currency code if unspecified.

        :param currency_code: The currency_code of this LocalizationSettings.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def language_code(self):
        """Gets the language_code of this LocalizationSettings.

        Language used for any localized text, such as some dimension value display labels. The language tag defined in the IETF BCP47. Defaults to 'en-US' if unspecified.

        :return: The language_code of this LocalizationSettings.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this LocalizationSettings.

        Language used for any localized text, such as some dimension value display labels. The language tag defined in the IETF BCP47. Defaults to 'en-US' if unspecified.

        :param language_code: The language_code of this LocalizationSettings.
        :type language_code: str
        """

        self._language_code = language_code
