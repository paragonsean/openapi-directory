/**
 * AdMob API
 * The AdMob API allows publishers to programmatically get information about their AdMob account. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateRange from './DateRange';
import LocalizationSettings from './LocalizationSettings';

/**
 * The ReportHeader model module.
 * @module model/ReportHeader
 * @version v1
 */
class ReportHeader {
    /**
     * Constructs a new <code>ReportHeader</code>.
     * Groups data helps to treat the generated report. Always sent as a first message in the stream response.
     * @alias module:model/ReportHeader
     */
    constructor() { 
        
        ReportHeader.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportHeader</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportHeader} obj Optional instance to populate.
     * @return {module:model/ReportHeader} The populated <code>ReportHeader</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportHeader();

            if (data.hasOwnProperty('dateRange')) {
                obj['dateRange'] = DateRange.constructFromObject(data['dateRange']);
            }
            if (data.hasOwnProperty('localizationSettings')) {
                obj['localizationSettings'] = LocalizationSettings.constructFromObject(data['localizationSettings']);
            }
            if (data.hasOwnProperty('reportingTimeZone')) {
                obj['reportingTimeZone'] = ApiClient.convertToType(data['reportingTimeZone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportHeader</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportHeader</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dateRange`
        if (data['dateRange']) { // data not null
          DateRange.validateJSON(data['dateRange']);
        }
        // validate the optional field `localizationSettings`
        if (data['localizationSettings']) { // data not null
          LocalizationSettings.validateJSON(data['localizationSettings']);
        }
        // ensure the json data is a string
        if (data['reportingTimeZone'] && !(typeof data['reportingTimeZone'] === 'string' || data['reportingTimeZone'] instanceof String)) {
            throw new Error("Expected the field `reportingTimeZone` to be a primitive type in the JSON string but got " + data['reportingTimeZone']);
        }

        return true;
    }


}



/**
 * @member {module:model/DateRange} dateRange
 */
ReportHeader.prototype['dateRange'] = undefined;

/**
 * @member {module:model/LocalizationSettings} localizationSettings
 */
ReportHeader.prototype['localizationSettings'] = undefined;

/**
 * The report time zone. The value is a time-zone ID as specified by the CLDR project, for example, \"America/Los_Angeles\".
 * @member {String} reportingTimeZone
 */
ReportHeader.prototype['reportingTimeZone'] = undefined;






export default ReportHeader;

