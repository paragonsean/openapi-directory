/**
 * AdMob API
 * The AdMob API allows publishers to programmatically get information about their AdMob account. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReportRowMetricValue model module.
 * @module model/ReportRowMetricValue
 * @version v1
 */
class ReportRowMetricValue {
    /**
     * Constructs a new <code>ReportRowMetricValue</code>.
     * Representation of a metric value.
     * @alias module:model/ReportRowMetricValue
     */
    constructor() { 
        
        ReportRowMetricValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportRowMetricValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportRowMetricValue} obj Optional instance to populate.
     * @return {module:model/ReportRowMetricValue} The populated <code>ReportRowMetricValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportRowMetricValue();

            if (data.hasOwnProperty('doubleValue')) {
                obj['doubleValue'] = ApiClient.convertToType(data['doubleValue'], 'Number');
            }
            if (data.hasOwnProperty('integerValue')) {
                obj['integerValue'] = ApiClient.convertToType(data['integerValue'], 'String');
            }
            if (data.hasOwnProperty('microsValue')) {
                obj['microsValue'] = ApiClient.convertToType(data['microsValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportRowMetricValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportRowMetricValue</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['integerValue'] && !(typeof data['integerValue'] === 'string' || data['integerValue'] instanceof String)) {
            throw new Error("Expected the field `integerValue` to be a primitive type in the JSON string but got " + data['integerValue']);
        }
        // ensure the json data is a string
        if (data['microsValue'] && !(typeof data['microsValue'] === 'string' || data['microsValue'] instanceof String)) {
            throw new Error("Expected the field `microsValue` to be a primitive type in the JSON string but got " + data['microsValue']);
        }

        return true;
    }


}



/**
 * Double precision (approximate) decimal values. Rates are from 0 to 1.
 * @member {Number} doubleValue
 */
ReportRowMetricValue.prototype['doubleValue'] = undefined;

/**
 * Metric integer value.
 * @member {String} integerValue
 */
ReportRowMetricValue.prototype['integerValue'] = undefined;

/**
 * Amount in micros. One million is equivalent to one unit. Currency value is in the unit (USD, EUR or other) specified by the request. For example, $6.50 whould be represented as 6500000 micros.
 * @member {String} microsValue
 */
ReportRowMetricValue.prototype['microsValue'] = undefined;






export default ReportRowMetricValue;

