/**
 * AdMob API
 * The AdMob API allows publishers to programmatically get information about their AdMob account. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdUnit model module.
 * @module model/AdUnit
 * @version v1
 */
class AdUnit {
    /**
     * Constructs a new <code>AdUnit</code>.
     * Describes an AdMob ad unit.
     * @alias module:model/AdUnit
     */
    constructor() { 
        
        AdUnit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdUnit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdUnit} obj Optional instance to populate.
     * @return {module:model/AdUnit} The populated <code>AdUnit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdUnit();

            if (data.hasOwnProperty('adFormat')) {
                obj['adFormat'] = ApiClient.convertToType(data['adFormat'], 'String');
            }
            if (data.hasOwnProperty('adTypes')) {
                obj['adTypes'] = ApiClient.convertToType(data['adTypes'], ['String']);
            }
            if (data.hasOwnProperty('adUnitId')) {
                obj['adUnitId'] = ApiClient.convertToType(data['adUnitId'], 'String');
            }
            if (data.hasOwnProperty('appId')) {
                obj['appId'] = ApiClient.convertToType(data['appId'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdUnit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdUnit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adFormat'] && !(typeof data['adFormat'] === 'string' || data['adFormat'] instanceof String)) {
            throw new Error("Expected the field `adFormat` to be a primitive type in the JSON string but got " + data['adFormat']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['adTypes'])) {
            throw new Error("Expected the field `adTypes` to be an array in the JSON data but got " + data['adTypes']);
        }
        // ensure the json data is a string
        if (data['adUnitId'] && !(typeof data['adUnitId'] === 'string' || data['adUnitId'] instanceof String)) {
            throw new Error("Expected the field `adUnitId` to be a primitive type in the JSON string but got " + data['adUnitId']);
        }
        // ensure the json data is a string
        if (data['appId'] && !(typeof data['appId'] === 'string' || data['appId'] instanceof String)) {
            throw new Error("Expected the field `appId` to be a primitive type in the JSON string but got " + data['appId']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * AdFormat of the ad unit. Possible values are as follows: \"APP_OPEN\" - App Open ad format. \"BANNER\" - Banner ad format. \"BANNER_INTERSTITIAL\" - Legacy format that can be used as either banner or interstitial. This format can no longer be created but can be targeted by mediation groups. \"INTERSTITIAL\" - A full screen ad. Supported ad types are \"RICH_MEDIA\" and \"VIDEO\". \"NATIVE\" - Native ad format. \"REWARDED\" - An ad that, once viewed, gets a callback verifying the view so that a reward can be given to the user. Supported ad types are \"RICH_MEDIA\" (interactive) and video where video can not be excluded. \"REWARDED_INTERSTITIAL\" - Rewarded Interstitial ad format. Only supports video ad type. See https://support.google.com/admob/answer/9884467.
 * @member {String} adFormat
 */
AdUnit.prototype['adFormat'] = undefined;

/**
 * Ad media type supported by this ad unit. Possible values as follows: \"RICH_MEDIA\" - Text, image, and other non-video media. \"VIDEO\" - Video media.
 * @member {Array.<String>} adTypes
 */
AdUnit.prototype['adTypes'] = undefined;

/**
 * The externally visible ID of the ad unit which can be used to integrate with the AdMob SDK. This is a read only property. Example: ca-app-pub-9876543210987654/0123456789
 * @member {String} adUnitId
 */
AdUnit.prototype['adUnitId'] = undefined;

/**
 * The externally visible ID of the app this ad unit is associated with. Example: ca-app-pub-9876543210987654~0123456789
 * @member {String} appId
 */
AdUnit.prototype['appId'] = undefined;

/**
 * The display name of the ad unit as shown in the AdMob UI, which is provided by the user. The maximum length allowed is 80 characters.
 * @member {String} displayName
 */
AdUnit.prototype['displayName'] = undefined;

/**
 * Resource name for this ad unit. Format is accounts/{publisher_id}/adUnits/{ad_unit_id_fragment} Example: accounts/pub-9876543210987654/adUnits/0123456789
 * @member {String} name
 */
AdUnit.prototype['name'] = undefined;






export default AdUnit;

