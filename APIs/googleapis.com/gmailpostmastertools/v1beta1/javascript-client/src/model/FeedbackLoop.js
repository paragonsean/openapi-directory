/**
 * Gmail Postmaster Tools API
 * The Postmaster Tools API is a RESTful API that provides programmatic access to email traffic metrics (like spam reports, delivery errors etc) otherwise available through the Gmail Postmaster Tools UI currently.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FeedbackLoop model module.
 * @module model/FeedbackLoop
 * @version v1beta1
 */
class FeedbackLoop {
    /**
     * Constructs a new <code>FeedbackLoop</code>.
     * [Feedback loop](https://support.google.com/mail/answer/6254652) identifier information.
     * @alias module:model/FeedbackLoop
     */
    constructor() { 
        
        FeedbackLoop.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FeedbackLoop</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FeedbackLoop} obj Optional instance to populate.
     * @return {module:model/FeedbackLoop} The populated <code>FeedbackLoop</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FeedbackLoop();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('spamRatio')) {
                obj['spamRatio'] = ApiClient.convertToType(data['spamRatio'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FeedbackLoop</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FeedbackLoop</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}



/**
 * Feedback loop identifier that uniquely identifies individual campaigns.
 * @member {String} id
 */
FeedbackLoop.prototype['id'] = undefined;

/**
 * The ratio of user marked spam messages with the identifier vs the total number of inboxed messages with that identifier.
 * @member {Number} spamRatio
 */
FeedbackLoop.prototype['spamRatio'] = undefined;






export default FeedbackLoop;

