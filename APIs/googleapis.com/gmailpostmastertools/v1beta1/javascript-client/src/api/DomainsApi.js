/**
 * Gmail Postmaster Tools API
 * The Postmaster Tools API is a RESTful API that provides programmatic access to email traffic metrics (like spam reports, delivery errors etc) otherwise available through the Gmail Postmaster Tools UI currently.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListDomainsResponse from '../model/ListDomainsResponse';
import ListTrafficStatsResponse from '../model/ListTrafficStatsResponse';
import TrafficStats from '../model/TrafficStats';

/**
* Domains service.
* @module api/DomainsApi
* @version v1beta1
*/
export default class DomainsApi {

    /**
    * Constructs a new DomainsApi. 
    * @alias module:api/DomainsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gmailpostmastertoolsDomainsList operation.
     * @callback module:api/DomainsApi~gmailpostmastertoolsDomainsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListDomainsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the domains that have been registered by the client. The order of domains in the response is unspecified and non-deterministic. Newly created domains will not necessarily be added to the end of this list.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Requested page size. Server may return fewer domains than requested. If unspecified, server will pick an appropriate default.
     * @param {String} [pageToken] The next_page_token value returned from a previous List request, if any. This is the value of ListDomainsResponse.next_page_token returned from the previous call to `ListDomains` method.
     * @param {module:api/DomainsApi~gmailpostmastertoolsDomainsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListDomainsResponse}
     */
    gmailpostmastertoolsDomainsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListDomainsResponse;
      return this.apiClient.callApi(
        '/v1beta1/domains', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gmailpostmastertoolsDomainsTrafficStatsGet operation.
     * @callback module:api/DomainsApi~gmailpostmastertoolsDomainsTrafficStatsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrafficStats} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get traffic statistics for a domain on a specific date. Returns PERMISSION_DENIED if user does not have permission to access TrafficStats for the domain.
     * @param {String} name The resource name of the traffic statistics to get. E.g., domains/mymail.mydomain.com/trafficStats/20160807.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/DomainsApi~gmailpostmastertoolsDomainsTrafficStatsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrafficStats}
     */
    gmailpostmastertoolsDomainsTrafficStatsGet(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling gmailpostmastertoolsDomainsTrafficStatsGet");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TrafficStats;
      return this.apiClient.callApi(
        '/v1beta1/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gmailpostmastertoolsDomainsTrafficStatsList operation.
     * @callback module:api/DomainsApi~gmailpostmastertoolsDomainsTrafficStatsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTrafficStatsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List traffic statistics for all available days. Returns PERMISSION_DENIED if user does not have permission to access TrafficStats for the domain.
     * @param {String} parent The resource name of the domain whose traffic statistics we'd like to list. It should have the form `domains/{domain_name}`, where domain_name is the fully qualified domain name.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [endDateDay] Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
     * @param {Number} [endDateMonth] Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
     * @param {Number} [endDateYear] Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
     * @param {Number} [pageSize] Requested page size. Server may return fewer TrafficStats than requested. If unspecified, server will pick an appropriate default.
     * @param {String} [pageToken] The next_page_token value returned from a previous List request, if any. This is the value of ListTrafficStatsResponse.next_page_token returned from the previous call to `ListTrafficStats` method.
     * @param {Number} [startDateDay] Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
     * @param {Number} [startDateMonth] Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
     * @param {Number} [startDateYear] Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
     * @param {module:api/DomainsApi~gmailpostmastertoolsDomainsTrafficStatsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTrafficStatsResponse}
     */
    gmailpostmastertoolsDomainsTrafficStatsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling gmailpostmastertoolsDomainsTrafficStatsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'endDate.day': opts['endDateDay'],
        'endDate.month': opts['endDateMonth'],
        'endDate.year': opts['endDateYear'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'startDate.day': opts['startDateDay'],
        'startDate.month': opts['startDateMonth'],
        'startDate.year': opts['startDateYear']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListTrafficStatsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/trafficStats', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
