/**
 * Cloud Data Fusion API
 * Cloud Data Fusion is a fully-managed, cloud native, enterprise data integration service for quickly building and managing data pipelines. It provides a graphical interface to increase time efficiency and reduce complexity, and allows business users, developers, and data scientists to easily and reliably build scalable data integration solutions to cleanse, prepare, blend, transfer and transform data without having to wrestle with infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceData from './ServiceData';

/**
 * The DataResidencyAugmentedView model module.
 * @module model/DataResidencyAugmentedView
 * @version v1
 */
class DataResidencyAugmentedView {
    /**
     * Constructs a new <code>DataResidencyAugmentedView</code>.
     * Next tag: 7
     * @alias module:model/DataResidencyAugmentedView
     */
    constructor() { 
        
        DataResidencyAugmentedView.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataResidencyAugmentedView</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataResidencyAugmentedView} obj Optional instance to populate.
     * @return {module:model/DataResidencyAugmentedView} The populated <code>DataResidencyAugmentedView</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataResidencyAugmentedView();

            if (data.hasOwnProperty('crGopoGuris')) {
                obj['crGopoGuris'] = ApiClient.convertToType(data['crGopoGuris'], ['String']);
            }
            if (data.hasOwnProperty('crGopoPrefixes')) {
                obj['crGopoPrefixes'] = ApiClient.convertToType(data['crGopoPrefixes'], ['String']);
            }
            if (data.hasOwnProperty('serviceData')) {
                obj['serviceData'] = ServiceData.constructFromObject(data['serviceData']);
            }
            if (data.hasOwnProperty('tpIds')) {
                obj['tpIds'] = ApiClient.convertToType(data['tpIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataResidencyAugmentedView</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataResidencyAugmentedView</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['crGopoGuris'])) {
            throw new Error("Expected the field `crGopoGuris` to be an array in the JSON data but got " + data['crGopoGuris']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['crGopoPrefixes'])) {
            throw new Error("Expected the field `crGopoPrefixes` to be an array in the JSON data but got " + data['crGopoPrefixes']);
        }
        // validate the optional field `serviceData`
        if (data['serviceData']) { // data not null
          ServiceData.validateJSON(data['serviceData']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tpIds'])) {
            throw new Error("Expected the field `tpIds` to be an array in the JSON data but got " + data['tpIds']);
        }

        return true;
    }


}



/**
 * Cloud resource to Google owned production object mapping in the form of GURIs. The GURIs should be available in DG KB storage/cns tables. This is the preferred way of providing cloud resource mappings. For further details please read go/cloud-resource-monitoring_sig
 * @member {Array.<String>} crGopoGuris
 */
DataResidencyAugmentedView.prototype['crGopoGuris'] = undefined;

/**
 * Cloud resource to Google owned production object mapping in the form of prefixes. These should be available in DG KB storage/cns tables. The entity type, which is the part of the string before the first colon in the GURI, must be completely specified in prefix. For details about GURI please read go/guri. For further details about the field please read go/cloud-resource-monitoring_sig.
 * @member {Array.<String>} crGopoPrefixes
 */
DataResidencyAugmentedView.prototype['crGopoPrefixes'] = undefined;

/**
 * @member {module:model/ServiceData} serviceData
 */
DataResidencyAugmentedView.prototype['serviceData'] = undefined;

/**
 * The list of project_id's of the tenant projects in the 'google.com' org which serve the Cloud Resource. See go/drz-mst-sig for more details.
 * @member {Array.<String>} tpIds
 */
DataResidencyAugmentedView.prototype['tpIds'] = undefined;






export default DataResidencyAugmentedView;

