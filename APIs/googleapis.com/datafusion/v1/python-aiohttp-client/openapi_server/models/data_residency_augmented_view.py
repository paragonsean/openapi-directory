# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_data import ServiceData
from openapi_server import util


class DataResidencyAugmentedView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cr_gopo_guris: List[str]=None, cr_gopo_prefixes: List[str]=None, service_data: ServiceData=None, tp_ids: List[str]=None):
        """DataResidencyAugmentedView - a model defined in OpenAPI

        :param cr_gopo_guris: The cr_gopo_guris of this DataResidencyAugmentedView.
        :param cr_gopo_prefixes: The cr_gopo_prefixes of this DataResidencyAugmentedView.
        :param service_data: The service_data of this DataResidencyAugmentedView.
        :param tp_ids: The tp_ids of this DataResidencyAugmentedView.
        """
        self.openapi_types = {
            'cr_gopo_guris': List[str],
            'cr_gopo_prefixes': List[str],
            'service_data': ServiceData,
            'tp_ids': List[str]
        }

        self.attribute_map = {
            'cr_gopo_guris': 'crGopoGuris',
            'cr_gopo_prefixes': 'crGopoPrefixes',
            'service_data': 'serviceData',
            'tp_ids': 'tpIds'
        }

        self._cr_gopo_guris = cr_gopo_guris
        self._cr_gopo_prefixes = cr_gopo_prefixes
        self._service_data = service_data
        self._tp_ids = tp_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataResidencyAugmentedView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataResidencyAugmentedView of this DataResidencyAugmentedView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cr_gopo_guris(self):
        """Gets the cr_gopo_guris of this DataResidencyAugmentedView.

        Cloud resource to Google owned production object mapping in the form of GURIs. The GURIs should be available in DG KB storage/cns tables. This is the preferred way of providing cloud resource mappings. For further details please read go/cloud-resource-monitoring_sig

        :return: The cr_gopo_guris of this DataResidencyAugmentedView.
        :rtype: List[str]
        """
        return self._cr_gopo_guris

    @cr_gopo_guris.setter
    def cr_gopo_guris(self, cr_gopo_guris):
        """Sets the cr_gopo_guris of this DataResidencyAugmentedView.

        Cloud resource to Google owned production object mapping in the form of GURIs. The GURIs should be available in DG KB storage/cns tables. This is the preferred way of providing cloud resource mappings. For further details please read go/cloud-resource-monitoring_sig

        :param cr_gopo_guris: The cr_gopo_guris of this DataResidencyAugmentedView.
        :type cr_gopo_guris: List[str]
        """

        self._cr_gopo_guris = cr_gopo_guris

    @property
    def cr_gopo_prefixes(self):
        """Gets the cr_gopo_prefixes of this DataResidencyAugmentedView.

        Cloud resource to Google owned production object mapping in the form of prefixes. These should be available in DG KB storage/cns tables. The entity type, which is the part of the string before the first colon in the GURI, must be completely specified in prefix. For details about GURI please read go/guri. For further details about the field please read go/cloud-resource-monitoring_sig.

        :return: The cr_gopo_prefixes of this DataResidencyAugmentedView.
        :rtype: List[str]
        """
        return self._cr_gopo_prefixes

    @cr_gopo_prefixes.setter
    def cr_gopo_prefixes(self, cr_gopo_prefixes):
        """Sets the cr_gopo_prefixes of this DataResidencyAugmentedView.

        Cloud resource to Google owned production object mapping in the form of prefixes. These should be available in DG KB storage/cns tables. The entity type, which is the part of the string before the first colon in the GURI, must be completely specified in prefix. For details about GURI please read go/guri. For further details about the field please read go/cloud-resource-monitoring_sig.

        :param cr_gopo_prefixes: The cr_gopo_prefixes of this DataResidencyAugmentedView.
        :type cr_gopo_prefixes: List[str]
        """

        self._cr_gopo_prefixes = cr_gopo_prefixes

    @property
    def service_data(self):
        """Gets the service_data of this DataResidencyAugmentedView.


        :return: The service_data of this DataResidencyAugmentedView.
        :rtype: ServiceData
        """
        return self._service_data

    @service_data.setter
    def service_data(self, service_data):
        """Sets the service_data of this DataResidencyAugmentedView.


        :param service_data: The service_data of this DataResidencyAugmentedView.
        :type service_data: ServiceData
        """

        self._service_data = service_data

    @property
    def tp_ids(self):
        """Gets the tp_ids of this DataResidencyAugmentedView.

        The list of project_id's of the tenant projects in the 'google.com' org which serve the Cloud Resource. See go/drz-mst-sig for more details.

        :return: The tp_ids of this DataResidencyAugmentedView.
        :rtype: List[str]
        """
        return self._tp_ids

    @tp_ids.setter
    def tp_ids(self, tp_ids):
        """Sets the tp_ids of this DataResidencyAugmentedView.

        The list of project_id's of the tenant projects in the 'google.com' org which serve the Cloud Resource. See go/drz-mst-sig for more details.

        :param tp_ids: The tp_ids of this DataResidencyAugmentedView.
        :type tp_ids: List[str]
        """

        self._tp_ids = tp_ids
