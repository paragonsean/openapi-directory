/**
 * Cloud Data Fusion API
 * Cloud Data Fusion is a fully-managed, cloud native, enterprise data integration service for quickly building and managing data pipelines. It provides a graphical interface to increase time efficiency and reduce complexity, and allows business users, developers, and data scientists to easily and reliably build scalable data integration solutions to cleanse, prepare, blend, transfer and transform data without having to wrestle with infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICryptoKeyConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICryptoKeyConfig::OAICryptoKeyConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICryptoKeyConfig::OAICryptoKeyConfig() {
    this->initializeModel();
}

OAICryptoKeyConfig::~OAICryptoKeyConfig() {}

void OAICryptoKeyConfig::initializeModel() {

    m_key_reference_isSet = false;
    m_key_reference_isValid = false;
}

void OAICryptoKeyConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICryptoKeyConfig::fromJsonObject(QJsonObject json) {

    m_key_reference_isValid = ::OpenAPI::fromJsonValue(m_key_reference, json[QString("keyReference")]);
    m_key_reference_isSet = !json[QString("keyReference")].isNull() && m_key_reference_isValid;
}

QString OAICryptoKeyConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICryptoKeyConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_key_reference_isSet) {
        obj.insert(QString("keyReference"), ::OpenAPI::toJsonValue(m_key_reference));
    }
    return obj;
}

QString OAICryptoKeyConfig::getKeyReference() const {
    return m_key_reference;
}
void OAICryptoKeyConfig::setKeyReference(const QString &key_reference) {
    m_key_reference = key_reference;
    m_key_reference_isSet = true;
}

bool OAICryptoKeyConfig::is_key_reference_Set() const{
    return m_key_reference_isSet;
}

bool OAICryptoKeyConfig::is_key_reference_Valid() const{
    return m_key_reference_isValid;
}

bool OAICryptoKeyConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICryptoKeyConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
