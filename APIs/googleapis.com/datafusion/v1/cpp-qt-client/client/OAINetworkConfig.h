/**
 * Cloud Data Fusion API
 * Cloud Data Fusion is a fully-managed, cloud native, enterprise data integration service for quickly building and managing data pipelines. It provides a graphical interface to increase time efficiency and reduce complexity, and allows business users, developers, and data scientists to easily and reliably build scalable data integration solutions to cleanse, prepare, blend, transfer and transform data without having to wrestle with infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkConfig.h
 *
 * Network configuration for a Data Fusion instance. These configurations are used for peering with the customer network. Configurations are optional when a public Data Fusion instance is to be created. However, providing these configurations allows several benefits, such as reduced network latency while accessing the customer resources from managed Data Fusion instance nodes, as well as access to the customer on-prem resources.
 */

#ifndef OAINetworkConfig_H
#define OAINetworkConfig_H

#include <QJsonObject>

#include "OAIPrivateServiceConnectConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPrivateServiceConnectConfig;

class OAINetworkConfig : public OAIObject {
public:
    OAINetworkConfig();
    OAINetworkConfig(QString json);
    ~OAINetworkConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConnectionType() const;
    void setConnectionType(const QString &connection_type);
    bool is_connection_type_Set() const;
    bool is_connection_type_Valid() const;

    QString getIpAllocation() const;
    void setIpAllocation(const QString &ip_allocation);
    bool is_ip_allocation_Set() const;
    bool is_ip_allocation_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    OAIPrivateServiceConnectConfig getPrivateServiceConnectConfig() const;
    void setPrivateServiceConnectConfig(const OAIPrivateServiceConnectConfig &private_service_connect_config);
    bool is_private_service_connect_config_Set() const;
    bool is_private_service_connect_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_connection_type;
    bool m_connection_type_isSet;
    bool m_connection_type_isValid;

    QString m_ip_allocation;
    bool m_ip_allocation_isSet;
    bool m_ip_allocation_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    OAIPrivateServiceConnectConfig m_private_service_connect_config;
    bool m_private_service_connect_config_isSet;
    bool m_private_service_connect_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkConfig)

#endif // OAINetworkConfig_H
