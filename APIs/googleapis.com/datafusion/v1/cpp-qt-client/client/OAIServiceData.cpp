/**
 * Cloud Data Fusion API
 * Cloud Data Fusion is a fully-managed, cloud native, enterprise data integration service for quickly building and managing data pipelines. It provides a graphical interface to increase time efficiency and reduce complexity, and allows business users, developers, and data scientists to easily and reliably build scalable data integration solutions to cleanse, prepare, blend, transfer and transform data without having to wrestle with infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceData::OAIServiceData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceData::OAIServiceData() {
    this->initializeModel();
}

OAIServiceData::~OAIServiceData() {}

void OAIServiceData::initializeModel() {

    m_pd_isSet = false;
    m_pd_isValid = false;
}

void OAIServiceData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceData::fromJsonObject(QJsonObject json) {

    m_pd_isValid = ::OpenAPI::fromJsonValue(m_pd, json[QString("pd")]);
    m_pd_isSet = !json[QString("pd")].isNull() && m_pd_isValid;
}

QString OAIServiceData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceData::asJsonObject() const {
    QJsonObject obj;
    if (m_pd.isSet()) {
        obj.insert(QString("pd"), ::OpenAPI::toJsonValue(m_pd));
    }
    return obj;
}

OAIPersistentDiskData OAIServiceData::getPd() const {
    return m_pd;
}
void OAIServiceData::setPd(const OAIPersistentDiskData &pd) {
    m_pd = pd;
    m_pd_isSet = true;
}

bool OAIServiceData::is_pd_Set() const{
    return m_pd_isSet;
}

bool OAIServiceData::is_pd_Valid() const{
    return m_pd_isValid;
}

bool OAIServiceData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pd.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
