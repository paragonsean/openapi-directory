/**
 * Cloud Data Fusion API
 * Cloud Data Fusion is a fully-managed, cloud native, enterprise data integration service for quickly building and managing data pipelines. It provides a graphical interface to increase time efficiency and reduce complexity, and allows business users, developers, and data scientists to easily and reliably build scalable data integration solutions to cleanse, prepare, blend, transfer and transform data without having to wrestle with infrastructure.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Accelerator from './model/Accelerator';
import AuditConfig from './model/AuditConfig';
import AuditLogConfig from './model/AuditLogConfig';
import Binding from './model/Binding';
import CryptoKeyConfig from './model/CryptoKeyConfig';
import DataResidencyAugmentedView from './model/DataResidencyAugmentedView';
import DnsPeering from './model/DnsPeering';
import EventPublishConfig from './model/EventPublishConfig';
import Expr from './model/Expr';
import IAMPolicy from './model/IAMPolicy';
import Instance from './model/Instance';
import ListAvailableVersionsResponse from './model/ListAvailableVersionsResponse';
import ListDnsPeeringsResponse from './model/ListDnsPeeringsResponse';
import ListInstancesResponse from './model/ListInstancesResponse';
import ListLocationsResponse from './model/ListLocationsResponse';
import ListNamespacesResponse from './model/ListNamespacesResponse';
import ListOperationsResponse from './model/ListOperationsResponse';
import Location from './model/Location';
import Namespace from './model/Namespace';
import NetworkConfig from './model/NetworkConfig';
import Operation from './model/Operation';
import OperationMetadata from './model/OperationMetadata';
import PersistentDiskData from './model/PersistentDiskData';
import Policy from './model/Policy';
import PrivateServiceConnectConfig from './model/PrivateServiceConnectConfig';
import ServiceData from './model/ServiceData';
import SetIamPolicyRequest from './model/SetIamPolicyRequest';
import Status from './model/Status';
import TestIamPermissionsRequest from './model/TestIamPermissionsRequest';
import TestIamPermissionsResponse from './model/TestIamPermissionsResponse';
import Version from './model/Version';
import ProjectsApi from './api/ProjectsApi';


/**
* Cloud Data Fusion is a fully-managed, cloud native, enterprise data integration service for quickly building and managing data pipelines. It provides a graphical interface to increase time efficiency and reduce complexity, and allows business users, developers, and data scientists to easily and reliably build scalable data integration solutions to cleanse, prepare, blend, transfer and transform data without having to wrestle with infrastructure..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudDataFusionApi = require('index'); // See note below*.
* var xxxSvc = new CloudDataFusionApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudDataFusionApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudDataFusionApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudDataFusionApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1beta1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Accelerator model constructor.
     * @property {module:model/Accelerator}
     */
    Accelerator,

    /**
     * The AuditConfig model constructor.
     * @property {module:model/AuditConfig}
     */
    AuditConfig,

    /**
     * The AuditLogConfig model constructor.
     * @property {module:model/AuditLogConfig}
     */
    AuditLogConfig,

    /**
     * The Binding model constructor.
     * @property {module:model/Binding}
     */
    Binding,

    /**
     * The CryptoKeyConfig model constructor.
     * @property {module:model/CryptoKeyConfig}
     */
    CryptoKeyConfig,

    /**
     * The DataResidencyAugmentedView model constructor.
     * @property {module:model/DataResidencyAugmentedView}
     */
    DataResidencyAugmentedView,

    /**
     * The DnsPeering model constructor.
     * @property {module:model/DnsPeering}
     */
    DnsPeering,

    /**
     * The EventPublishConfig model constructor.
     * @property {module:model/EventPublishConfig}
     */
    EventPublishConfig,

    /**
     * The Expr model constructor.
     * @property {module:model/Expr}
     */
    Expr,

    /**
     * The IAMPolicy model constructor.
     * @property {module:model/IAMPolicy}
     */
    IAMPolicy,

    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance,

    /**
     * The ListAvailableVersionsResponse model constructor.
     * @property {module:model/ListAvailableVersionsResponse}
     */
    ListAvailableVersionsResponse,

    /**
     * The ListDnsPeeringsResponse model constructor.
     * @property {module:model/ListDnsPeeringsResponse}
     */
    ListDnsPeeringsResponse,

    /**
     * The ListInstancesResponse model constructor.
     * @property {module:model/ListInstancesResponse}
     */
    ListInstancesResponse,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The ListNamespacesResponse model constructor.
     * @property {module:model/ListNamespacesResponse}
     */
    ListNamespacesResponse,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The Namespace model constructor.
     * @property {module:model/Namespace}
     */
    Namespace,

    /**
     * The NetworkConfig model constructor.
     * @property {module:model/NetworkConfig}
     */
    NetworkConfig,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationMetadata model constructor.
     * @property {module:model/OperationMetadata}
     */
    OperationMetadata,

    /**
     * The PersistentDiskData model constructor.
     * @property {module:model/PersistentDiskData}
     */
    PersistentDiskData,

    /**
     * The Policy model constructor.
     * @property {module:model/Policy}
     */
    Policy,

    /**
     * The PrivateServiceConnectConfig model constructor.
     * @property {module:model/PrivateServiceConnectConfig}
     */
    PrivateServiceConnectConfig,

    /**
     * The ServiceData model constructor.
     * @property {module:model/ServiceData}
     */
    ServiceData,

    /**
     * The SetIamPolicyRequest model constructor.
     * @property {module:model/SetIamPolicyRequest}
     */
    SetIamPolicyRequest,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The TestIamPermissionsRequest model constructor.
     * @property {module:model/TestIamPermissionsRequest}
     */
    TestIamPermissionsRequest,

    /**
     * The TestIamPermissionsResponse model constructor.
     * @property {module:model/TestIamPermissionsResponse}
     */
    TestIamPermissionsResponse,

    /**
     * The Version model constructor.
     * @property {module:model/Version}
     */
    Version,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
