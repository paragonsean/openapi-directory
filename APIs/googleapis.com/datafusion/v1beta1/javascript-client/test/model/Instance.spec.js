/**
 * Cloud Data Fusion API
 * Cloud Data Fusion is a fully-managed, cloud native, enterprise data integration service for quickly building and managing data pipelines. It provides a graphical interface to increase time efficiency and reduce complexity, and allows business users, developers, and data scientists to easily and reliably build scalable data integration solutions to cleanse, prepare, blend, transfer and transform data without having to wrestle with infrastructure.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudDataFusionApi);
  }
}(this, function(expect, CloudDataFusionApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudDataFusionApi.Instance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Instance', function() {
    it('should create an instance of Instance', function() {
      // uncomment below and update the code to test Instance
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be.a(CloudDataFusionApi.Instance);
    });

    it('should have the property accelerators (base name: "accelerators")', function() {
      // uncomment below and update the code to test the property accelerators
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property apiEndpoint (base name: "apiEndpoint")', function() {
      // uncomment below and update the code to test the property apiEndpoint
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property availableVersion (base name: "availableVersion")', function() {
      // uncomment below and update the code to test the property availableVersion
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property cryptoKeyConfig (base name: "cryptoKeyConfig")', function() {
      // uncomment below and update the code to test the property cryptoKeyConfig
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property dataplexDataLineageIntegrationEnabled (base name: "dataplexDataLineageIntegrationEnabled")', function() {
      // uncomment below and update the code to test the property dataplexDataLineageIntegrationEnabled
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property dataprocServiceAccount (base name: "dataprocServiceAccount")', function() {
      // uncomment below and update the code to test the property dataprocServiceAccount
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property disabledReason (base name: "disabledReason")', function() {
      // uncomment below and update the code to test the property disabledReason
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property enableRbac (base name: "enableRbac")', function() {
      // uncomment below and update the code to test the property enableRbac
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property enableStackdriverLogging (base name: "enableStackdriverLogging")', function() {
      // uncomment below and update the code to test the property enableStackdriverLogging
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property enableStackdriverMonitoring (base name: "enableStackdriverMonitoring")', function() {
      // uncomment below and update the code to test the property enableStackdriverMonitoring
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property enableZoneSeparation (base name: "enableZoneSeparation")', function() {
      // uncomment below and update the code to test the property enableZoneSeparation
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property eventPublishConfig (base name: "eventPublishConfig")', function() {
      // uncomment below and update the code to test the property eventPublishConfig
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property gcsBucket (base name: "gcsBucket")', function() {
      // uncomment below and update the code to test the property gcsBucket
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property networkConfig (base name: "networkConfig")', function() {
      // uncomment below and update the code to test the property networkConfig
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property options (base name: "options")', function() {
      // uncomment below and update the code to test the property options
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property p4ServiceAccount (base name: "p4ServiceAccount")', function() {
      // uncomment below and update the code to test the property p4ServiceAccount
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property patchRevision (base name: "patchRevision")', function() {
      // uncomment below and update the code to test the property patchRevision
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property privateInstance (base name: "privateInstance")', function() {
      // uncomment below and update the code to test the property privateInstance
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property satisfiesPzs (base name: "satisfiesPzs")', function() {
      // uncomment below and update the code to test the property satisfiesPzs
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property serviceAccount (base name: "serviceAccount")', function() {
      // uncomment below and update the code to test the property serviceAccount
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property serviceEndpoint (base name: "serviceEndpoint")', function() {
      // uncomment below and update the code to test the property serviceEndpoint
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property stateMessage (base name: "stateMessage")', function() {
      // uncomment below and update the code to test the property stateMessage
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property tenantProjectId (base name: "tenantProjectId")', function() {
      // uncomment below and update the code to test the property tenantProjectId
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property workforceIdentityServiceEndpoint (base name: "workforceIdentityServiceEndpoint")', function() {
      // uncomment below and update the code to test the property workforceIdentityServiceEndpoint
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property zone (base name: "zone")', function() {
      // uncomment below and update the code to test the property zone
      //var instance = new CloudDataFusionApi.Instance();
      //expect(instance).to.be();
    });

  });

}));
