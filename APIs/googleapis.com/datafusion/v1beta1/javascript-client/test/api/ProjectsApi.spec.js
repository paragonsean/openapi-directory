/**
 * Cloud Data Fusion API
 * Cloud Data Fusion is a fully-managed, cloud native, enterprise data integration service for quickly building and managing data pipelines. It provides a graphical interface to increase time efficiency and reduce complexity, and allows business users, developers, and data scientists to easily and reliably build scalable data integration solutions to cleanse, prepare, blend, transfer and transform data without having to wrestle with infrastructure.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudDataFusionApi);
  }
}(this, function(expect, CloudDataFusionApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudDataFusionApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('datafusionProjectsLocationsInstancesCreate', function() {
      it('should call datafusionProjectsLocationsInstancesCreate successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsInstancesCreate
        //instance.datafusionProjectsLocationsInstancesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsInstancesDnsPeeringsCreate', function() {
      it('should call datafusionProjectsLocationsInstancesDnsPeeringsCreate successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsInstancesDnsPeeringsCreate
        //instance.datafusionProjectsLocationsInstancesDnsPeeringsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsInstancesDnsPeeringsList', function() {
      it('should call datafusionProjectsLocationsInstancesDnsPeeringsList successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsInstancesDnsPeeringsList
        //instance.datafusionProjectsLocationsInstancesDnsPeeringsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsInstancesList', function() {
      it('should call datafusionProjectsLocationsInstancesList successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsInstancesList
        //instance.datafusionProjectsLocationsInstancesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsInstancesNamespacesGetIamPolicy', function() {
      it('should call datafusionProjectsLocationsInstancesNamespacesGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsInstancesNamespacesGetIamPolicy
        //instance.datafusionProjectsLocationsInstancesNamespacesGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsInstancesNamespacesList', function() {
      it('should call datafusionProjectsLocationsInstancesNamespacesList successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsInstancesNamespacesList
        //instance.datafusionProjectsLocationsInstancesNamespacesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsInstancesNamespacesSetIamPolicy', function() {
      it('should call datafusionProjectsLocationsInstancesNamespacesSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsInstancesNamespacesSetIamPolicy
        //instance.datafusionProjectsLocationsInstancesNamespacesSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsInstancesNamespacesTestIamPermissions', function() {
      it('should call datafusionProjectsLocationsInstancesNamespacesTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsInstancesNamespacesTestIamPermissions
        //instance.datafusionProjectsLocationsInstancesNamespacesTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsInstancesPatch', function() {
      it('should call datafusionProjectsLocationsInstancesPatch successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsInstancesPatch
        //instance.datafusionProjectsLocationsInstancesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsInstancesRestart', function() {
      it('should call datafusionProjectsLocationsInstancesRestart successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsInstancesRestart
        //instance.datafusionProjectsLocationsInstancesRestart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsInstancesUpgrade', function() {
      it('should call datafusionProjectsLocationsInstancesUpgrade successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsInstancesUpgrade
        //instance.datafusionProjectsLocationsInstancesUpgrade(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsList', function() {
      it('should call datafusionProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsList
        //instance.datafusionProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsOperationsCancel', function() {
      it('should call datafusionProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsOperationsCancel
        //instance.datafusionProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsOperationsDelete', function() {
      it('should call datafusionProjectsLocationsOperationsDelete successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsOperationsDelete
        //instance.datafusionProjectsLocationsOperationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsOperationsGet', function() {
      it('should call datafusionProjectsLocationsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsOperationsGet
        //instance.datafusionProjectsLocationsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsOperationsList', function() {
      it('should call datafusionProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsOperationsList
        //instance.datafusionProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsRemoveIamPolicy', function() {
      it('should call datafusionProjectsLocationsRemoveIamPolicy successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsRemoveIamPolicy
        //instance.datafusionProjectsLocationsRemoveIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datafusionProjectsLocationsVersionsList', function() {
      it('should call datafusionProjectsLocationsVersionsList successfully', function(done) {
        //uncomment below and update the code to test datafusionProjectsLocationsVersionsList
        //instance.datafusionProjectsLocationsVersionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
