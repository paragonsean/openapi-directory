# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CryptoKeyConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_reference: str=None):
        """CryptoKeyConfig - a model defined in OpenAPI

        :param key_reference: The key_reference of this CryptoKeyConfig.
        """
        self.openapi_types = {
            'key_reference': str
        }

        self.attribute_map = {
            'key_reference': 'keyReference'
        }

        self._key_reference = key_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CryptoKeyConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CryptoKeyConfig of this CryptoKeyConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_reference(self):
        """Gets the key_reference of this CryptoKeyConfig.

        The name of the key which is used to encrypt/decrypt customer data. For key in Cloud KMS, the key should be in the format of `projects/*/locations/*/keyRings/*/cryptoKeys/*`.

        :return: The key_reference of this CryptoKeyConfig.
        :rtype: str
        """
        return self._key_reference

    @key_reference.setter
    def key_reference(self, key_reference):
        """Sets the key_reference of this CryptoKeyConfig.

        The name of the key which is used to encrypt/decrypt customer data. For key in Cloud KMS, the key should be in the format of `projects/*/locations/*/keyRings/*/cryptoKeys/*`.

        :param key_reference: The key_reference of this CryptoKeyConfig.
        :type key_reference: str
        """

        self._key_reference = key_reference
