# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.policy import Policy
from openapi_server.models.status import Status
from openapi_server import util


class IAMPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy: Policy=None, status: Status=None):
        """IAMPolicy - a model defined in OpenAPI

        :param policy: The policy of this IAMPolicy.
        :param status: The status of this IAMPolicy.
        """
        self.openapi_types = {
            'policy': Policy,
            'status': Status
        }

        self.attribute_map = {
            'policy': 'policy',
            'status': 'status'
        }

        self._policy = policy
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IAMPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IAMPolicy of this IAMPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy(self):
        """Gets the policy of this IAMPolicy.


        :return: The policy of this IAMPolicy.
        :rtype: Policy
        """
        return self._policy

    @policy.setter
    def policy(self, policy):
        """Sets the policy of this IAMPolicy.


        :param policy: The policy of this IAMPolicy.
        :type policy: Policy
        """

        self._policy = policy

    @property
    def status(self):
        """Gets the status of this IAMPolicy.


        :return: The status of this IAMPolicy.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this IAMPolicy.


        :param status: The status of this IAMPolicy.
        :type status: Status
        """

        self._status = status
