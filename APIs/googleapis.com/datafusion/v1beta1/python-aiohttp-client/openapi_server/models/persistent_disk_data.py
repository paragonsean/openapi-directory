# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PersistentDiskData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cfs_roots: List[str]=None, gcs_bucket_names: List[str]=None):
        """PersistentDiskData - a model defined in OpenAPI

        :param cfs_roots: The cfs_roots of this PersistentDiskData.
        :param gcs_bucket_names: The gcs_bucket_names of this PersistentDiskData.
        """
        self.openapi_types = {
            'cfs_roots': List[str],
            'gcs_bucket_names': List[str]
        }

        self.attribute_map = {
            'cfs_roots': 'cfsRoots',
            'gcs_bucket_names': 'gcsBucketNames'
        }

        self._cfs_roots = cfs_roots
        self._gcs_bucket_names = gcs_bucket_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PersistentDiskData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PersistentDiskData of this PersistentDiskData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cfs_roots(self):
        """Gets the cfs_roots of this PersistentDiskData.

        Path to Colossus root for an LSV. NOTE: Unlike `cr_ti_guris` and `cr_ti_prefixes`, the field `cfs_roots` below does not need to be a GUri or GUri prefix. It can simply be any valid CFS or CFS2 Path. The DRZ KR8 SIG has more details overall, but generally the `cfs_roots` provided here should be scoped to an individual Persistent Disk. An example for a PD Disk with a disk ID 3277719120423414466, follows: * `cr_ti_guris` could be ‘/cfs2/pj/pd-cloud-prod’ as this is a valid GUri present in the DG KB and contains enough information to perform location monitoring and scope ownership of the Production Object. * `cfs_roots` would be: ‘/cfs2/pj/pd-cloud-staging/lsv000001234@/ lsv/projects~773365403387~zones~2700~disks~3277719120423414466 ~bank-blue-careful-3526-lsv00054DB1B7254BA3/’ as this allows us to enumerate the files on CFS2 that belong to an individual Disk.

        :return: The cfs_roots of this PersistentDiskData.
        :rtype: List[str]
        """
        return self._cfs_roots

    @cfs_roots.setter
    def cfs_roots(self, cfs_roots):
        """Sets the cfs_roots of this PersistentDiskData.

        Path to Colossus root for an LSV. NOTE: Unlike `cr_ti_guris` and `cr_ti_prefixes`, the field `cfs_roots` below does not need to be a GUri or GUri prefix. It can simply be any valid CFS or CFS2 Path. The DRZ KR8 SIG has more details overall, but generally the `cfs_roots` provided here should be scoped to an individual Persistent Disk. An example for a PD Disk with a disk ID 3277719120423414466, follows: * `cr_ti_guris` could be ‘/cfs2/pj/pd-cloud-prod’ as this is a valid GUri present in the DG KB and contains enough information to perform location monitoring and scope ownership of the Production Object. * `cfs_roots` would be: ‘/cfs2/pj/pd-cloud-staging/lsv000001234@/ lsv/projects~773365403387~zones~2700~disks~3277719120423414466 ~bank-blue-careful-3526-lsv00054DB1B7254BA3/’ as this allows us to enumerate the files on CFS2 that belong to an individual Disk.

        :param cfs_roots: The cfs_roots of this PersistentDiskData.
        :type cfs_roots: List[str]
        """

        self._cfs_roots = cfs_roots

    @property
    def gcs_bucket_names(self):
        """Gets the gcs_bucket_names of this PersistentDiskData.

        The GCS Buckets that back this snapshot or image. This is required as `cr_ti_prefixes` and `cr_ti_guris` only accept TI resources. This should be the globally unique bucket name.

        :return: The gcs_bucket_names of this PersistentDiskData.
        :rtype: List[str]
        """
        return self._gcs_bucket_names

    @gcs_bucket_names.setter
    def gcs_bucket_names(self, gcs_bucket_names):
        """Sets the gcs_bucket_names of this PersistentDiskData.

        The GCS Buckets that back this snapshot or image. This is required as `cr_ti_prefixes` and `cr_ti_guris` only accept TI resources. This should be the globally unique bucket name.

        :param gcs_bucket_names: The gcs_bucket_names of this PersistentDiskData.
        :type gcs_bucket_names: List[str]
        """

        self._gcs_bucket_names = gcs_bucket_names
