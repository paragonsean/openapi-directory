/**
 * Cloud Data Fusion API
 * Cloud Data Fusion is a fully-managed, cloud native, enterprise data integration service for quickly building and managing data pipelines. It provides a graphical interface to increase time efficiency and reduce complexity, and allows business users, developers, and data scientists to easily and reliably build scalable data integration solutions to cleanse, prepare, blend, transfer and transform data without having to wrestle with infrastructure.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIAMPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIAMPolicy::OAIIAMPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIAMPolicy::OAIIAMPolicy() {
    this->initializeModel();
}

OAIIAMPolicy::~OAIIAMPolicy() {}

void OAIIAMPolicy::initializeModel() {

    m_policy_isSet = false;
    m_policy_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIIAMPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIAMPolicy::fromJsonObject(QJsonObject json) {

    m_policy_isValid = ::OpenAPI::fromJsonValue(m_policy, json[QString("policy")]);
    m_policy_isSet = !json[QString("policy")].isNull() && m_policy_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIIAMPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIAMPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_policy.isSet()) {
        obj.insert(QString("policy"), ::OpenAPI::toJsonValue(m_policy));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAIPolicy OAIIAMPolicy::getPolicy() const {
    return m_policy;
}
void OAIIAMPolicy::setPolicy(const OAIPolicy &policy) {
    m_policy = policy;
    m_policy_isSet = true;
}

bool OAIIAMPolicy::is_policy_Set() const{
    return m_policy_isSet;
}

bool OAIIAMPolicy::is_policy_Valid() const{
    return m_policy_isValid;
}

OAIStatus OAIIAMPolicy::getStatus() const {
    return m_status;
}
void OAIIAMPolicy::setStatus(const OAIStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIIAMPolicy::is_status_Set() const{
    return m_status_isSet;
}

bool OAIIAMPolicy::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIIAMPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIAMPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
