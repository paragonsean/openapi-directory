/**
 * Cloud Data Fusion API
 * Cloud Data Fusion is a fully-managed, cloud native, enterprise data integration service for quickly building and managing data pipelines. It provides a graphical interface to increase time efficiency and reduce complexity, and allows business users, developers, and data scientists to easily and reliably build scalable data integration solutions to cleanse, prepare, blend, transfer and transform data without having to wrestle with infrastructure.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDnsPeering.h
 *
 * DNS peering configuration. These configurations are used to create DNS peering with the customer Cloud DNS.
 */

#ifndef OAIDnsPeering_H
#define OAIDnsPeering_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDnsPeering : public OAIObject {
public:
    OAIDnsPeering();
    OAIDnsPeering(QString json);
    ~OAIDnsPeering() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getTargetNetwork() const;
    void setTargetNetwork(const QString &target_network);
    bool is_target_network_Set() const;
    bool is_target_network_Valid() const;

    QString getTargetProject() const;
    void setTargetProject(const QString &target_project);
    bool is_target_project_Set() const;
    bool is_target_project_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_target_network;
    bool m_target_network_isSet;
    bool m_target_network_isValid;

    QString m_target_project;
    bool m_target_project_isSet;
    bool m_target_project_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDnsPeering)

#endif // OAIDnsPeering_H
