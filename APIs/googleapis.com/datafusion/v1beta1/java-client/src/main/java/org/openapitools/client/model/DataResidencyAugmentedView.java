/*
 * Cloud Data Fusion API
 * Cloud Data Fusion is a fully-managed, cloud native, enterprise data integration service for quickly building and managing data pipelines. It provides a graphical interface to increase time efficiency and reduce complexity, and allows business users, developers, and data scientists to easily and reliably build scalable data integration solutions to cleanse, prepare, blend, transfer and transform data without having to wrestle with infrastructure.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ServiceData;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Next tag: 7
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:55.894095-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DataResidencyAugmentedView {
  public static final String SERIALIZED_NAME_CR_GOPO_GURIS = "crGopoGuris";
  @SerializedName(SERIALIZED_NAME_CR_GOPO_GURIS)
  private List<String> crGopoGuris = new ArrayList<>();

  public static final String SERIALIZED_NAME_CR_GOPO_PREFIXES = "crGopoPrefixes";
  @SerializedName(SERIALIZED_NAME_CR_GOPO_PREFIXES)
  private List<String> crGopoPrefixes = new ArrayList<>();

  public static final String SERIALIZED_NAME_SERVICE_DATA = "serviceData";
  @SerializedName(SERIALIZED_NAME_SERVICE_DATA)
  private ServiceData serviceData;

  public static final String SERIALIZED_NAME_TP_IDS = "tpIds";
  @SerializedName(SERIALIZED_NAME_TP_IDS)
  private List<String> tpIds = new ArrayList<>();

  public DataResidencyAugmentedView() {
  }

  public DataResidencyAugmentedView crGopoGuris(List<String> crGopoGuris) {
    this.crGopoGuris = crGopoGuris;
    return this;
  }

  public DataResidencyAugmentedView addCrGopoGurisItem(String crGopoGurisItem) {
    if (this.crGopoGuris == null) {
      this.crGopoGuris = new ArrayList<>();
    }
    this.crGopoGuris.add(crGopoGurisItem);
    return this;
  }

  /**
   * Cloud resource to Google owned production object mapping in the form of GURIs. The GURIs should be available in DG KB storage/cns tables. This is the preferred way of providing cloud resource mappings. For further details please read go/cloud-resource-monitoring_sig
   * @return crGopoGuris
   */
  @javax.annotation.Nullable
  public List<String> getCrGopoGuris() {
    return crGopoGuris;
  }

  public void setCrGopoGuris(List<String> crGopoGuris) {
    this.crGopoGuris = crGopoGuris;
  }


  public DataResidencyAugmentedView crGopoPrefixes(List<String> crGopoPrefixes) {
    this.crGopoPrefixes = crGopoPrefixes;
    return this;
  }

  public DataResidencyAugmentedView addCrGopoPrefixesItem(String crGopoPrefixesItem) {
    if (this.crGopoPrefixes == null) {
      this.crGopoPrefixes = new ArrayList<>();
    }
    this.crGopoPrefixes.add(crGopoPrefixesItem);
    return this;
  }

  /**
   * Cloud resource to Google owned production object mapping in the form of prefixes. These should be available in DG KB storage/cns tables. The entity type, which is the part of the string before the first colon in the GURI, must be completely specified in prefix. For details about GURI please read go/guri. For further details about the field please read go/cloud-resource-monitoring_sig.
   * @return crGopoPrefixes
   */
  @javax.annotation.Nullable
  public List<String> getCrGopoPrefixes() {
    return crGopoPrefixes;
  }

  public void setCrGopoPrefixes(List<String> crGopoPrefixes) {
    this.crGopoPrefixes = crGopoPrefixes;
  }


  public DataResidencyAugmentedView serviceData(ServiceData serviceData) {
    this.serviceData = serviceData;
    return this;
  }

  /**
   * Get serviceData
   * @return serviceData
   */
  @javax.annotation.Nullable
  public ServiceData getServiceData() {
    return serviceData;
  }

  public void setServiceData(ServiceData serviceData) {
    this.serviceData = serviceData;
  }


  public DataResidencyAugmentedView tpIds(List<String> tpIds) {
    this.tpIds = tpIds;
    return this;
  }

  public DataResidencyAugmentedView addTpIdsItem(String tpIdsItem) {
    if (this.tpIds == null) {
      this.tpIds = new ArrayList<>();
    }
    this.tpIds.add(tpIdsItem);
    return this;
  }

  /**
   * The list of project_id&#39;s of the tenant projects in the &#39;google.com&#39; org which serve the Cloud Resource. See go/drz-mst-sig for more details.
   * @return tpIds
   */
  @javax.annotation.Nullable
  public List<String> getTpIds() {
    return tpIds;
  }

  public void setTpIds(List<String> tpIds) {
    this.tpIds = tpIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataResidencyAugmentedView dataResidencyAugmentedView = (DataResidencyAugmentedView) o;
    return Objects.equals(this.crGopoGuris, dataResidencyAugmentedView.crGopoGuris) &&
        Objects.equals(this.crGopoPrefixes, dataResidencyAugmentedView.crGopoPrefixes) &&
        Objects.equals(this.serviceData, dataResidencyAugmentedView.serviceData) &&
        Objects.equals(this.tpIds, dataResidencyAugmentedView.tpIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(crGopoGuris, crGopoPrefixes, serviceData, tpIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataResidencyAugmentedView {\n");
    sb.append("    crGopoGuris: ").append(toIndentedString(crGopoGuris)).append("\n");
    sb.append("    crGopoPrefixes: ").append(toIndentedString(crGopoPrefixes)).append("\n");
    sb.append("    serviceData: ").append(toIndentedString(serviceData)).append("\n");
    sb.append("    tpIds: ").append(toIndentedString(tpIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("crGopoGuris");
    openapiFields.add("crGopoPrefixes");
    openapiFields.add("serviceData");
    openapiFields.add("tpIds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DataResidencyAugmentedView
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DataResidencyAugmentedView.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DataResidencyAugmentedView is not found in the empty JSON string", DataResidencyAugmentedView.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DataResidencyAugmentedView.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DataResidencyAugmentedView` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("crGopoGuris") != null && !jsonObj.get("crGopoGuris").isJsonNull() && !jsonObj.get("crGopoGuris").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `crGopoGuris` to be an array in the JSON string but got `%s`", jsonObj.get("crGopoGuris").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("crGopoPrefixes") != null && !jsonObj.get("crGopoPrefixes").isJsonNull() && !jsonObj.get("crGopoPrefixes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `crGopoPrefixes` to be an array in the JSON string but got `%s`", jsonObj.get("crGopoPrefixes").toString()));
      }
      // validate the optional field `serviceData`
      if (jsonObj.get("serviceData") != null && !jsonObj.get("serviceData").isJsonNull()) {
        ServiceData.validateJsonElement(jsonObj.get("serviceData"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tpIds") != null && !jsonObj.get("tpIds").isJsonNull() && !jsonObj.get("tpIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tpIds` to be an array in the JSON string but got `%s`", jsonObj.get("tpIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DataResidencyAugmentedView.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DataResidencyAugmentedView' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DataResidencyAugmentedView> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DataResidencyAugmentedView.class));

       return (TypeAdapter<T>) new TypeAdapter<DataResidencyAugmentedView>() {
           @Override
           public void write(JsonWriter out, DataResidencyAugmentedView value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DataResidencyAugmentedView read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DataResidencyAugmentedView given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DataResidencyAugmentedView
   * @throws IOException if the JSON string is invalid with respect to DataResidencyAugmentedView
   */
  public static DataResidencyAugmentedView fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DataResidencyAugmentedView.class);
  }

  /**
   * Convert an instance of DataResidencyAugmentedView to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

