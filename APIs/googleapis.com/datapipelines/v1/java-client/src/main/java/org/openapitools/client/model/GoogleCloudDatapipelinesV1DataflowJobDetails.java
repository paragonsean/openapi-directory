/*
 * Data pipelines API
 * Data Pipelines provides an interface for creating, updating, and managing recurring Data Analytics jobs.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDatapipelinesV1SdkVersion;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Pipeline job details specific to the Dataflow API. This is encapsulated here to allow for more executors to store their specific details separately.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:10.035751-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatapipelinesV1DataflowJobDetails {
  public static final String SERIALIZED_NAME_CURRENT_WORKERS = "currentWorkers";
  @SerializedName(SERIALIZED_NAME_CURRENT_WORKERS)
  private Integer currentWorkers;

  public static final String SERIALIZED_NAME_RESOURCE_INFO = "resourceInfo";
  @SerializedName(SERIALIZED_NAME_RESOURCE_INFO)
  private Map<String, Double> resourceInfo = new HashMap<>();

  public static final String SERIALIZED_NAME_SDK_VERSION = "sdkVersion";
  @SerializedName(SERIALIZED_NAME_SDK_VERSION)
  private GoogleCloudDatapipelinesV1SdkVersion sdkVersion;

  public GoogleCloudDatapipelinesV1DataflowJobDetails() {
  }

  public GoogleCloudDatapipelinesV1DataflowJobDetails(
     Integer currentWorkers
  ) {
    this();
    this.currentWorkers = currentWorkers;
  }

  /**
   * Output only. The current number of workers used to run the jobs. Only set to a value if the job is still running.
   * @return currentWorkers
   */
  @javax.annotation.Nullable
  public Integer getCurrentWorkers() {
    return currentWorkers;
  }



  public GoogleCloudDatapipelinesV1DataflowJobDetails resourceInfo(Map<String, Double> resourceInfo) {
    this.resourceInfo = resourceInfo;
    return this;
  }

  public GoogleCloudDatapipelinesV1DataflowJobDetails putResourceInfoItem(String key, Double resourceInfoItem) {
    if (this.resourceInfo == null) {
      this.resourceInfo = new HashMap<>();
    }
    this.resourceInfo.put(key, resourceInfoItem);
    return this;
  }

  /**
   * Cached version of all the metrics of interest for the job. This value gets stored here when the job is terminated. As long as the job is running, this field is populated from the Dataflow API.
   * @return resourceInfo
   */
  @javax.annotation.Nullable
  public Map<String, Double> getResourceInfo() {
    return resourceInfo;
  }

  public void setResourceInfo(Map<String, Double> resourceInfo) {
    this.resourceInfo = resourceInfo;
  }


  public GoogleCloudDatapipelinesV1DataflowJobDetails sdkVersion(GoogleCloudDatapipelinesV1SdkVersion sdkVersion) {
    this.sdkVersion = sdkVersion;
    return this;
  }

  /**
   * Get sdkVersion
   * @return sdkVersion
   */
  @javax.annotation.Nullable
  public GoogleCloudDatapipelinesV1SdkVersion getSdkVersion() {
    return sdkVersion;
  }

  public void setSdkVersion(GoogleCloudDatapipelinesV1SdkVersion sdkVersion) {
    this.sdkVersion = sdkVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatapipelinesV1DataflowJobDetails googleCloudDatapipelinesV1DataflowJobDetails = (GoogleCloudDatapipelinesV1DataflowJobDetails) o;
    return Objects.equals(this.currentWorkers, googleCloudDatapipelinesV1DataflowJobDetails.currentWorkers) &&
        Objects.equals(this.resourceInfo, googleCloudDatapipelinesV1DataflowJobDetails.resourceInfo) &&
        Objects.equals(this.sdkVersion, googleCloudDatapipelinesV1DataflowJobDetails.sdkVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentWorkers, resourceInfo, sdkVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatapipelinesV1DataflowJobDetails {\n");
    sb.append("    currentWorkers: ").append(toIndentedString(currentWorkers)).append("\n");
    sb.append("    resourceInfo: ").append(toIndentedString(resourceInfo)).append("\n");
    sb.append("    sdkVersion: ").append(toIndentedString(sdkVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("currentWorkers");
    openapiFields.add("resourceInfo");
    openapiFields.add("sdkVersion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatapipelinesV1DataflowJobDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatapipelinesV1DataflowJobDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatapipelinesV1DataflowJobDetails is not found in the empty JSON string", GoogleCloudDatapipelinesV1DataflowJobDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatapipelinesV1DataflowJobDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatapipelinesV1DataflowJobDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `sdkVersion`
      if (jsonObj.get("sdkVersion") != null && !jsonObj.get("sdkVersion").isJsonNull()) {
        GoogleCloudDatapipelinesV1SdkVersion.validateJsonElement(jsonObj.get("sdkVersion"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatapipelinesV1DataflowJobDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatapipelinesV1DataflowJobDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatapipelinesV1DataflowJobDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatapipelinesV1DataflowJobDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatapipelinesV1DataflowJobDetails>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatapipelinesV1DataflowJobDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatapipelinesV1DataflowJobDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatapipelinesV1DataflowJobDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatapipelinesV1DataflowJobDetails
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatapipelinesV1DataflowJobDetails
   */
  public static GoogleCloudDatapipelinesV1DataflowJobDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatapipelinesV1DataflowJobDetails.class);
  }

  /**
   * Convert an instance of GoogleCloudDatapipelinesV1DataflowJobDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

