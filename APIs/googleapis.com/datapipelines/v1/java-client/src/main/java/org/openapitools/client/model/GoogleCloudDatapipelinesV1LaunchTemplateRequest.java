/*
 * Data pipelines API
 * Data Pipelines provides an interface for creating, updating, and managing recurring Data Analytics jobs.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDatapipelinesV1LaunchTemplateParameters;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A request to launch a template.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:10.035751-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatapipelinesV1LaunchTemplateRequest {
  public static final String SERIALIZED_NAME_GCS_PATH = "gcsPath";
  @SerializedName(SERIALIZED_NAME_GCS_PATH)
  private String gcsPath;

  public static final String SERIALIZED_NAME_LAUNCH_PARAMETERS = "launchParameters";
  @SerializedName(SERIALIZED_NAME_LAUNCH_PARAMETERS)
  private GoogleCloudDatapipelinesV1LaunchTemplateParameters launchParameters;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private String projectId;

  public static final String SERIALIZED_NAME_VALIDATE_ONLY = "validateOnly";
  @SerializedName(SERIALIZED_NAME_VALIDATE_ONLY)
  private Boolean validateOnly;

  public GoogleCloudDatapipelinesV1LaunchTemplateRequest() {
  }

  public GoogleCloudDatapipelinesV1LaunchTemplateRequest gcsPath(String gcsPath) {
    this.gcsPath = gcsPath;
    return this;
  }

  /**
   * A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with &#39;gs://&#39;.
   * @return gcsPath
   */
  @javax.annotation.Nullable
  public String getGcsPath() {
    return gcsPath;
  }

  public void setGcsPath(String gcsPath) {
    this.gcsPath = gcsPath;
  }


  public GoogleCloudDatapipelinesV1LaunchTemplateRequest launchParameters(GoogleCloudDatapipelinesV1LaunchTemplateParameters launchParameters) {
    this.launchParameters = launchParameters;
    return this;
  }

  /**
   * Get launchParameters
   * @return launchParameters
   */
  @javax.annotation.Nullable
  public GoogleCloudDatapipelinesV1LaunchTemplateParameters getLaunchParameters() {
    return launchParameters;
  }

  public void setLaunchParameters(GoogleCloudDatapipelinesV1LaunchTemplateParameters launchParameters) {
    this.launchParameters = launchParameters;
  }


  public GoogleCloudDatapipelinesV1LaunchTemplateRequest location(String location) {
    this.location = location;
    return this;
  }

  /**
   * The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public GoogleCloudDatapipelinesV1LaunchTemplateRequest projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Required. The ID of the Cloud Platform project that the job belongs to.
   * @return projectId
   */
  @javax.annotation.Nullable
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }


  public GoogleCloudDatapipelinesV1LaunchTemplateRequest validateOnly(Boolean validateOnly) {
    this.validateOnly = validateOnly;
    return this;
  }

  /**
   * If true, the request is validated but not actually executed. Defaults to false.
   * @return validateOnly
   */
  @javax.annotation.Nullable
  public Boolean getValidateOnly() {
    return validateOnly;
  }

  public void setValidateOnly(Boolean validateOnly) {
    this.validateOnly = validateOnly;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatapipelinesV1LaunchTemplateRequest googleCloudDatapipelinesV1LaunchTemplateRequest = (GoogleCloudDatapipelinesV1LaunchTemplateRequest) o;
    return Objects.equals(this.gcsPath, googleCloudDatapipelinesV1LaunchTemplateRequest.gcsPath) &&
        Objects.equals(this.launchParameters, googleCloudDatapipelinesV1LaunchTemplateRequest.launchParameters) &&
        Objects.equals(this.location, googleCloudDatapipelinesV1LaunchTemplateRequest.location) &&
        Objects.equals(this.projectId, googleCloudDatapipelinesV1LaunchTemplateRequest.projectId) &&
        Objects.equals(this.validateOnly, googleCloudDatapipelinesV1LaunchTemplateRequest.validateOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gcsPath, launchParameters, location, projectId, validateOnly);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatapipelinesV1LaunchTemplateRequest {\n");
    sb.append("    gcsPath: ").append(toIndentedString(gcsPath)).append("\n");
    sb.append("    launchParameters: ").append(toIndentedString(launchParameters)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    validateOnly: ").append(toIndentedString(validateOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("gcsPath");
    openapiFields.add("launchParameters");
    openapiFields.add("location");
    openapiFields.add("projectId");
    openapiFields.add("validateOnly");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatapipelinesV1LaunchTemplateRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatapipelinesV1LaunchTemplateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatapipelinesV1LaunchTemplateRequest is not found in the empty JSON string", GoogleCloudDatapipelinesV1LaunchTemplateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatapipelinesV1LaunchTemplateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatapipelinesV1LaunchTemplateRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("gcsPath") != null && !jsonObj.get("gcsPath").isJsonNull()) && !jsonObj.get("gcsPath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gcsPath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gcsPath").toString()));
      }
      // validate the optional field `launchParameters`
      if (jsonObj.get("launchParameters") != null && !jsonObj.get("launchParameters").isJsonNull()) {
        GoogleCloudDatapipelinesV1LaunchTemplateParameters.validateJsonElement(jsonObj.get("launchParameters"));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("projectId") != null && !jsonObj.get("projectId").isJsonNull()) && !jsonObj.get("projectId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatapipelinesV1LaunchTemplateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatapipelinesV1LaunchTemplateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatapipelinesV1LaunchTemplateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatapipelinesV1LaunchTemplateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatapipelinesV1LaunchTemplateRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatapipelinesV1LaunchTemplateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatapipelinesV1LaunchTemplateRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatapipelinesV1LaunchTemplateRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatapipelinesV1LaunchTemplateRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatapipelinesV1LaunchTemplateRequest
   */
  public static GoogleCloudDatapipelinesV1LaunchTemplateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatapipelinesV1LaunchTemplateRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudDatapipelinesV1LaunchTemplateRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

