/*
 * Data pipelines API
 * Data Pipelines provides an interface for creating, updating, and managing recurring Data Analytics jobs.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDatapipelinesV1ScheduleSpec;
import org.openapitools.client.model.GoogleCloudDatapipelinesV1Workload;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The main pipeline entity and all the necessary metadata for launching and managing linked jobs.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:10.035751-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatapipelinesV1Pipeline {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_JOB_COUNT = "jobCount";
  @SerializedName(SERIALIZED_NAME_JOB_COUNT)
  private Integer jobCount;

  public static final String SERIALIZED_NAME_LAST_UPDATE_TIME = "lastUpdateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_TIME)
  private String lastUpdateTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PIPELINE_SOURCES = "pipelineSources";
  @SerializedName(SERIALIZED_NAME_PIPELINE_SOURCES)
  private Map<String, String> pipelineSources = new HashMap<>();

  public static final String SERIALIZED_NAME_SCHEDULE_INFO = "scheduleInfo";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_INFO)
  private GoogleCloudDatapipelinesV1ScheduleSpec scheduleInfo;

  public static final String SERIALIZED_NAME_SCHEDULER_SERVICE_ACCOUNT_EMAIL = "schedulerServiceAccountEmail";
  @SerializedName(SERIALIZED_NAME_SCHEDULER_SERVICE_ACCOUNT_EMAIL)
  private String schedulerServiceAccountEmail;

  /**
   * Required. The state of the pipeline. When the pipeline is created, the state is set to &#39;PIPELINE_STATE_ACTIVE&#39; by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    UNSPECIFIED("STATE_UNSPECIFIED"),
    
    RESUMING("STATE_RESUMING"),
    
    ACTIVE("STATE_ACTIVE"),
    
    STOPPING("STATE_STOPPING"),
    
    ARCHIVED("STATE_ARCHIVED"),
    
    PAUSED("STATE_PAUSED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  /**
   * Required. The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    UNSPECIFIED("PIPELINE_TYPE_UNSPECIFIED"),
    
    BATCH("PIPELINE_TYPE_BATCH"),
    
    STREAMING("PIPELINE_TYPE_STREAMING");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_WORKLOAD = "workload";
  @SerializedName(SERIALIZED_NAME_WORKLOAD)
  private GoogleCloudDatapipelinesV1Workload workload;

  public GoogleCloudDatapipelinesV1Pipeline() {
  }

  public GoogleCloudDatapipelinesV1Pipeline(
     String createTime, 
     Integer jobCount, 
     String lastUpdateTime
  ) {
    this();
    this.createTime = createTime;
    this.jobCount = jobCount;
    this.lastUpdateTime = lastUpdateTime;
  }

  /**
   * Output only. Immutable. The timestamp when the pipeline was initially created. Set by the Data Pipelines service.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudDatapipelinesV1Pipeline displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores (_).
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  /**
   * Output only. Number of jobs.
   * @return jobCount
   */
  @javax.annotation.Nullable
  public Integer getJobCount() {
    return jobCount;
  }



  /**
   * Output only. Immutable. The timestamp when the pipeline was last modified. Set by the Data Pipelines service.
   * @return lastUpdateTime
   */
  @javax.annotation.Nullable
  public String getLastUpdateTime() {
    return lastUpdateTime;
  }



  public GoogleCloudDatapipelinesV1Pipeline name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The pipeline name. For example: &#x60;projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID&#x60;. * &#x60;PROJECT_ID&#x60; can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * &#x60;LOCATION_ID&#x60; is the canonical ID for the pipeline&#39;s location. The list of available locations can be obtained by calling &#x60;google.cloud.location.Locations.ListLocations&#x60;. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it&#39;s only available in [App Engine regions](https://cloud.google.com/about/locations#region). * &#x60;PIPELINE_ID&#x60; is the ID of the pipeline. Must be unique for the selected project and location.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDatapipelinesV1Pipeline pipelineSources(Map<String, String> pipelineSources) {
    this.pipelineSources = pipelineSources;
    return this;
  }

  public GoogleCloudDatapipelinesV1Pipeline putPipelineSourcesItem(String key, String pipelineSourcesItem) {
    if (this.pipelineSources == null) {
      this.pipelineSources = new HashMap<>();
    }
    this.pipelineSources.put(key, pipelineSourcesItem);
    return this;
  }

  /**
   * Immutable. The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during pipeline creation.
   * @return pipelineSources
   */
  @javax.annotation.Nullable
  public Map<String, String> getPipelineSources() {
    return pipelineSources;
  }

  public void setPipelineSources(Map<String, String> pipelineSources) {
    this.pipelineSources = pipelineSources;
  }


  public GoogleCloudDatapipelinesV1Pipeline scheduleInfo(GoogleCloudDatapipelinesV1ScheduleSpec scheduleInfo) {
    this.scheduleInfo = scheduleInfo;
    return this;
  }

  /**
   * Get scheduleInfo
   * @return scheduleInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDatapipelinesV1ScheduleSpec getScheduleInfo() {
    return scheduleInfo;
  }

  public void setScheduleInfo(GoogleCloudDatapipelinesV1ScheduleSpec scheduleInfo) {
    this.scheduleInfo = scheduleInfo;
  }


  public GoogleCloudDatapipelinesV1Pipeline schedulerServiceAccountEmail(String schedulerServiceAccountEmail) {
    this.schedulerServiceAccountEmail = schedulerServiceAccountEmail;
    return this;
  }

  /**
   * Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine service account will be used.
   * @return schedulerServiceAccountEmail
   */
  @javax.annotation.Nullable
  public String getSchedulerServiceAccountEmail() {
    return schedulerServiceAccountEmail;
  }

  public void setSchedulerServiceAccountEmail(String schedulerServiceAccountEmail) {
    this.schedulerServiceAccountEmail = schedulerServiceAccountEmail;
  }


  public GoogleCloudDatapipelinesV1Pipeline state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * Required. The state of the pipeline. When the pipeline is created, the state is set to &#39;PIPELINE_STATE_ACTIVE&#39; by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }


  public GoogleCloudDatapipelinesV1Pipeline type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Required. The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  public GoogleCloudDatapipelinesV1Pipeline workload(GoogleCloudDatapipelinesV1Workload workload) {
    this.workload = workload;
    return this;
  }

  /**
   * Get workload
   * @return workload
   */
  @javax.annotation.Nullable
  public GoogleCloudDatapipelinesV1Workload getWorkload() {
    return workload;
  }

  public void setWorkload(GoogleCloudDatapipelinesV1Workload workload) {
    this.workload = workload;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatapipelinesV1Pipeline googleCloudDatapipelinesV1Pipeline = (GoogleCloudDatapipelinesV1Pipeline) o;
    return Objects.equals(this.createTime, googleCloudDatapipelinesV1Pipeline.createTime) &&
        Objects.equals(this.displayName, googleCloudDatapipelinesV1Pipeline.displayName) &&
        Objects.equals(this.jobCount, googleCloudDatapipelinesV1Pipeline.jobCount) &&
        Objects.equals(this.lastUpdateTime, googleCloudDatapipelinesV1Pipeline.lastUpdateTime) &&
        Objects.equals(this.name, googleCloudDatapipelinesV1Pipeline.name) &&
        Objects.equals(this.pipelineSources, googleCloudDatapipelinesV1Pipeline.pipelineSources) &&
        Objects.equals(this.scheduleInfo, googleCloudDatapipelinesV1Pipeline.scheduleInfo) &&
        Objects.equals(this.schedulerServiceAccountEmail, googleCloudDatapipelinesV1Pipeline.schedulerServiceAccountEmail) &&
        Objects.equals(this.state, googleCloudDatapipelinesV1Pipeline.state) &&
        Objects.equals(this.type, googleCloudDatapipelinesV1Pipeline.type) &&
        Objects.equals(this.workload, googleCloudDatapipelinesV1Pipeline.workload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, displayName, jobCount, lastUpdateTime, name, pipelineSources, scheduleInfo, schedulerServiceAccountEmail, state, type, workload);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatapipelinesV1Pipeline {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    jobCount: ").append(toIndentedString(jobCount)).append("\n");
    sb.append("    lastUpdateTime: ").append(toIndentedString(lastUpdateTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pipelineSources: ").append(toIndentedString(pipelineSources)).append("\n");
    sb.append("    scheduleInfo: ").append(toIndentedString(scheduleInfo)).append("\n");
    sb.append("    schedulerServiceAccountEmail: ").append(toIndentedString(schedulerServiceAccountEmail)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    workload: ").append(toIndentedString(workload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("displayName");
    openapiFields.add("jobCount");
    openapiFields.add("lastUpdateTime");
    openapiFields.add("name");
    openapiFields.add("pipelineSources");
    openapiFields.add("scheduleInfo");
    openapiFields.add("schedulerServiceAccountEmail");
    openapiFields.add("state");
    openapiFields.add("type");
    openapiFields.add("workload");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatapipelinesV1Pipeline
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatapipelinesV1Pipeline.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatapipelinesV1Pipeline is not found in the empty JSON string", GoogleCloudDatapipelinesV1Pipeline.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatapipelinesV1Pipeline.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatapipelinesV1Pipeline` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("lastUpdateTime") != null && !jsonObj.get("lastUpdateTime").isJsonNull()) && !jsonObj.get("lastUpdateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUpdateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUpdateTime").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `scheduleInfo`
      if (jsonObj.get("scheduleInfo") != null && !jsonObj.get("scheduleInfo").isJsonNull()) {
        GoogleCloudDatapipelinesV1ScheduleSpec.validateJsonElement(jsonObj.get("scheduleInfo"));
      }
      if ((jsonObj.get("schedulerServiceAccountEmail") != null && !jsonObj.get("schedulerServiceAccountEmail").isJsonNull()) && !jsonObj.get("schedulerServiceAccountEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedulerServiceAccountEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedulerServiceAccountEmail").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
      // validate the optional field `workload`
      if (jsonObj.get("workload") != null && !jsonObj.get("workload").isJsonNull()) {
        GoogleCloudDatapipelinesV1Workload.validateJsonElement(jsonObj.get("workload"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatapipelinesV1Pipeline.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatapipelinesV1Pipeline' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatapipelinesV1Pipeline> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatapipelinesV1Pipeline.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatapipelinesV1Pipeline>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatapipelinesV1Pipeline value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatapipelinesV1Pipeline read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatapipelinesV1Pipeline given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatapipelinesV1Pipeline
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatapipelinesV1Pipeline
   */
  public static GoogleCloudDatapipelinesV1Pipeline fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatapipelinesV1Pipeline.class);
  }

  /**
   * Convert an instance of GoogleCloudDatapipelinesV1Pipeline to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

