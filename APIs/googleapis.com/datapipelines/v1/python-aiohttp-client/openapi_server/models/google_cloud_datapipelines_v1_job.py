# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datapipelines_v1_dataflow_job_details import GoogleCloudDatapipelinesV1DataflowJobDetails
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudDatapipelinesV1Job(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, dataflow_job_details: GoogleCloudDatapipelinesV1DataflowJobDetails=None, end_time: str=None, id: str=None, name: str=None, state: str=None, status: GoogleRpcStatus=None):
        """GoogleCloudDatapipelinesV1Job - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudDatapipelinesV1Job.
        :param dataflow_job_details: The dataflow_job_details of this GoogleCloudDatapipelinesV1Job.
        :param end_time: The end_time of this GoogleCloudDatapipelinesV1Job.
        :param id: The id of this GoogleCloudDatapipelinesV1Job.
        :param name: The name of this GoogleCloudDatapipelinesV1Job.
        :param state: The state of this GoogleCloudDatapipelinesV1Job.
        :param status: The status of this GoogleCloudDatapipelinesV1Job.
        """
        self.openapi_types = {
            'create_time': str,
            'dataflow_job_details': GoogleCloudDatapipelinesV1DataflowJobDetails,
            'end_time': str,
            'id': str,
            'name': str,
            'state': str,
            'status': GoogleRpcStatus
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'dataflow_job_details': 'dataflowJobDetails',
            'end_time': 'endTime',
            'id': 'id',
            'name': 'name',
            'state': 'state',
            'status': 'status'
        }

        self._create_time = create_time
        self._dataflow_job_details = dataflow_job_details
        self._end_time = end_time
        self._id = id
        self._name = name
        self._state = state
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatapipelinesV1Job':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatapipelinesV1Job of this GoogleCloudDatapipelinesV1Job.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDatapipelinesV1Job.

        Output only. The time of job creation.

        :return: The create_time of this GoogleCloudDatapipelinesV1Job.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDatapipelinesV1Job.

        Output only. The time of job creation.

        :param create_time: The create_time of this GoogleCloudDatapipelinesV1Job.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def dataflow_job_details(self):
        """Gets the dataflow_job_details of this GoogleCloudDatapipelinesV1Job.


        :return: The dataflow_job_details of this GoogleCloudDatapipelinesV1Job.
        :rtype: GoogleCloudDatapipelinesV1DataflowJobDetails
        """
        return self._dataflow_job_details

    @dataflow_job_details.setter
    def dataflow_job_details(self, dataflow_job_details):
        """Sets the dataflow_job_details of this GoogleCloudDatapipelinesV1Job.


        :param dataflow_job_details: The dataflow_job_details of this GoogleCloudDatapipelinesV1Job.
        :type dataflow_job_details: GoogleCloudDatapipelinesV1DataflowJobDetails
        """

        self._dataflow_job_details = dataflow_job_details

    @property
    def end_time(self):
        """Gets the end_time of this GoogleCloudDatapipelinesV1Job.

        Output only. The time of job termination. This is absent if the job is still running.

        :return: The end_time of this GoogleCloudDatapipelinesV1Job.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GoogleCloudDatapipelinesV1Job.

        Output only. The time of job termination. This is absent if the job is still running.

        :param end_time: The end_time of this GoogleCloudDatapipelinesV1Job.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def id(self):
        """Gets the id of this GoogleCloudDatapipelinesV1Job.

        Output only. The internal ID for the job.

        :return: The id of this GoogleCloudDatapipelinesV1Job.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleCloudDatapipelinesV1Job.

        Output only. The internal ID for the job.

        :param id: The id of this GoogleCloudDatapipelinesV1Job.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this GoogleCloudDatapipelinesV1Job.

        Required. The fully qualified resource name for the job.

        :return: The name of this GoogleCloudDatapipelinesV1Job.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDatapipelinesV1Job.

        Required. The fully qualified resource name for the job.

        :param name: The name of this GoogleCloudDatapipelinesV1Job.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this GoogleCloudDatapipelinesV1Job.

        The current state of the job.

        :return: The state of this GoogleCloudDatapipelinesV1Job.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudDatapipelinesV1Job.

        The current state of the job.

        :param state: The state of this GoogleCloudDatapipelinesV1Job.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "STATE_PENDING", "STATE_RUNNING", "STATE_DONE", "STATE_FAILED", "STATE_CANCELLED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def status(self):
        """Gets the status of this GoogleCloudDatapipelinesV1Job.


        :return: The status of this GoogleCloudDatapipelinesV1Job.
        :rtype: GoogleRpcStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GoogleCloudDatapipelinesV1Job.


        :param status: The status of this GoogleCloudDatapipelinesV1Job.
        :type status: GoogleRpcStatus
        """

        self._status = status
