# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datapipelines_v1_schedule_spec import GoogleCloudDatapipelinesV1ScheduleSpec
from openapi_server.models.google_cloud_datapipelines_v1_workload import GoogleCloudDatapipelinesV1Workload
from openapi_server import util


class GoogleCloudDatapipelinesV1Pipeline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, display_name: str=None, job_count: int=None, last_update_time: str=None, name: str=None, pipeline_sources: Dict[str, str]=None, schedule_info: GoogleCloudDatapipelinesV1ScheduleSpec=None, scheduler_service_account_email: str=None, state: str=None, type: str=None, workload: GoogleCloudDatapipelinesV1Workload=None):
        """GoogleCloudDatapipelinesV1Pipeline - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudDatapipelinesV1Pipeline.
        :param display_name: The display_name of this GoogleCloudDatapipelinesV1Pipeline.
        :param job_count: The job_count of this GoogleCloudDatapipelinesV1Pipeline.
        :param last_update_time: The last_update_time of this GoogleCloudDatapipelinesV1Pipeline.
        :param name: The name of this GoogleCloudDatapipelinesV1Pipeline.
        :param pipeline_sources: The pipeline_sources of this GoogleCloudDatapipelinesV1Pipeline.
        :param schedule_info: The schedule_info of this GoogleCloudDatapipelinesV1Pipeline.
        :param scheduler_service_account_email: The scheduler_service_account_email of this GoogleCloudDatapipelinesV1Pipeline.
        :param state: The state of this GoogleCloudDatapipelinesV1Pipeline.
        :param type: The type of this GoogleCloudDatapipelinesV1Pipeline.
        :param workload: The workload of this GoogleCloudDatapipelinesV1Pipeline.
        """
        self.openapi_types = {
            'create_time': str,
            'display_name': str,
            'job_count': int,
            'last_update_time': str,
            'name': str,
            'pipeline_sources': Dict[str, str],
            'schedule_info': GoogleCloudDatapipelinesV1ScheduleSpec,
            'scheduler_service_account_email': str,
            'state': str,
            'type': str,
            'workload': GoogleCloudDatapipelinesV1Workload
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'display_name': 'displayName',
            'job_count': 'jobCount',
            'last_update_time': 'lastUpdateTime',
            'name': 'name',
            'pipeline_sources': 'pipelineSources',
            'schedule_info': 'scheduleInfo',
            'scheduler_service_account_email': 'schedulerServiceAccountEmail',
            'state': 'state',
            'type': 'type',
            'workload': 'workload'
        }

        self._create_time = create_time
        self._display_name = display_name
        self._job_count = job_count
        self._last_update_time = last_update_time
        self._name = name
        self._pipeline_sources = pipeline_sources
        self._schedule_info = schedule_info
        self._scheduler_service_account_email = scheduler_service_account_email
        self._state = state
        self._type = type
        self._workload = workload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatapipelinesV1Pipeline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatapipelinesV1Pipeline of this GoogleCloudDatapipelinesV1Pipeline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDatapipelinesV1Pipeline.

        Output only. Immutable. The timestamp when the pipeline was initially created. Set by the Data Pipelines service.

        :return: The create_time of this GoogleCloudDatapipelinesV1Pipeline.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDatapipelinesV1Pipeline.

        Output only. Immutable. The timestamp when the pipeline was initially created. Set by the Data Pipelines service.

        :param create_time: The create_time of this GoogleCloudDatapipelinesV1Pipeline.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDatapipelinesV1Pipeline.

        Required. The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores (_).

        :return: The display_name of this GoogleCloudDatapipelinesV1Pipeline.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDatapipelinesV1Pipeline.

        Required. The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores (_).

        :param display_name: The display_name of this GoogleCloudDatapipelinesV1Pipeline.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def job_count(self):
        """Gets the job_count of this GoogleCloudDatapipelinesV1Pipeline.

        Output only. Number of jobs.

        :return: The job_count of this GoogleCloudDatapipelinesV1Pipeline.
        :rtype: int
        """
        return self._job_count

    @job_count.setter
    def job_count(self, job_count):
        """Sets the job_count of this GoogleCloudDatapipelinesV1Pipeline.

        Output only. Number of jobs.

        :param job_count: The job_count of this GoogleCloudDatapipelinesV1Pipeline.
        :type job_count: int
        """

        self._job_count = job_count

    @property
    def last_update_time(self):
        """Gets the last_update_time of this GoogleCloudDatapipelinesV1Pipeline.

        Output only. Immutable. The timestamp when the pipeline was last modified. Set by the Data Pipelines service.

        :return: The last_update_time of this GoogleCloudDatapipelinesV1Pipeline.
        :rtype: str
        """
        return self._last_update_time

    @last_update_time.setter
    def last_update_time(self, last_update_time):
        """Sets the last_update_time of this GoogleCloudDatapipelinesV1Pipeline.

        Output only. Immutable. The timestamp when the pipeline was last modified. Set by the Data Pipelines service.

        :param last_update_time: The last_update_time of this GoogleCloudDatapipelinesV1Pipeline.
        :type last_update_time: str
        """

        self._last_update_time = last_update_time

    @property
    def name(self):
        """Gets the name of this GoogleCloudDatapipelinesV1Pipeline.

        The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID for the pipeline's location. The list of available locations can be obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of the pipeline. Must be unique for the selected project and location.

        :return: The name of this GoogleCloudDatapipelinesV1Pipeline.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDatapipelinesV1Pipeline.

        The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID for the pipeline's location. The list of available locations can be obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of the pipeline. Must be unique for the selected project and location.

        :param name: The name of this GoogleCloudDatapipelinesV1Pipeline.
        :type name: str
        """

        self._name = name

    @property
    def pipeline_sources(self):
        """Gets the pipeline_sources of this GoogleCloudDatapipelinesV1Pipeline.

        Immutable. The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during pipeline creation.

        :return: The pipeline_sources of this GoogleCloudDatapipelinesV1Pipeline.
        :rtype: Dict[str, str]
        """
        return self._pipeline_sources

    @pipeline_sources.setter
    def pipeline_sources(self, pipeline_sources):
        """Sets the pipeline_sources of this GoogleCloudDatapipelinesV1Pipeline.

        Immutable. The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during pipeline creation.

        :param pipeline_sources: The pipeline_sources of this GoogleCloudDatapipelinesV1Pipeline.
        :type pipeline_sources: Dict[str, str]
        """

        self._pipeline_sources = pipeline_sources

    @property
    def schedule_info(self):
        """Gets the schedule_info of this GoogleCloudDatapipelinesV1Pipeline.


        :return: The schedule_info of this GoogleCloudDatapipelinesV1Pipeline.
        :rtype: GoogleCloudDatapipelinesV1ScheduleSpec
        """
        return self._schedule_info

    @schedule_info.setter
    def schedule_info(self, schedule_info):
        """Sets the schedule_info of this GoogleCloudDatapipelinesV1Pipeline.


        :param schedule_info: The schedule_info of this GoogleCloudDatapipelinesV1Pipeline.
        :type schedule_info: GoogleCloudDatapipelinesV1ScheduleSpec
        """

        self._schedule_info = schedule_info

    @property
    def scheduler_service_account_email(self):
        """Gets the scheduler_service_account_email of this GoogleCloudDatapipelinesV1Pipeline.

        Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine service account will be used.

        :return: The scheduler_service_account_email of this GoogleCloudDatapipelinesV1Pipeline.
        :rtype: str
        """
        return self._scheduler_service_account_email

    @scheduler_service_account_email.setter
    def scheduler_service_account_email(self, scheduler_service_account_email):
        """Sets the scheduler_service_account_email of this GoogleCloudDatapipelinesV1Pipeline.

        Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine service account will be used.

        :param scheduler_service_account_email: The scheduler_service_account_email of this GoogleCloudDatapipelinesV1Pipeline.
        :type scheduler_service_account_email: str
        """

        self._scheduler_service_account_email = scheduler_service_account_email

    @property
    def state(self):
        """Gets the state of this GoogleCloudDatapipelinesV1Pipeline.

        Required. The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.

        :return: The state of this GoogleCloudDatapipelinesV1Pipeline.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudDatapipelinesV1Pipeline.

        Required. The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.

        :param state: The state of this GoogleCloudDatapipelinesV1Pipeline.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "STATE_RESUMING", "STATE_ACTIVE", "STATE_STOPPING", "STATE_ARCHIVED", "STATE_PAUSED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def type(self):
        """Gets the type of this GoogleCloudDatapipelinesV1Pipeline.

        Required. The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.

        :return: The type of this GoogleCloudDatapipelinesV1Pipeline.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDatapipelinesV1Pipeline.

        Required. The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.

        :param type: The type of this GoogleCloudDatapipelinesV1Pipeline.
        :type type: str
        """
        allowed_values = ["PIPELINE_TYPE_UNSPECIFIED", "PIPELINE_TYPE_BATCH", "PIPELINE_TYPE_STREAMING"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def workload(self):
        """Gets the workload of this GoogleCloudDatapipelinesV1Pipeline.


        :return: The workload of this GoogleCloudDatapipelinesV1Pipeline.
        :rtype: GoogleCloudDatapipelinesV1Workload
        """
        return self._workload

    @workload.setter
    def workload(self, workload):
        """Sets the workload of this GoogleCloudDatapipelinesV1Pipeline.


        :param workload: The workload of this GoogleCloudDatapipelinesV1Pipeline.
        :type workload: GoogleCloudDatapipelinesV1Workload
        """

        self._workload = workload
