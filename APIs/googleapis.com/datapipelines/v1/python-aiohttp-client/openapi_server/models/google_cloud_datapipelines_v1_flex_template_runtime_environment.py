# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_experiments: List[str]=None, additional_user_labels: Dict[str, str]=None, enable_streaming_engine: bool=None, flexrs_goal: str=None, ip_configuration: str=None, kms_key_name: str=None, machine_type: str=None, max_workers: int=None, network: str=None, num_workers: int=None, service_account_email: str=None, subnetwork: str=None, temp_location: str=None, worker_region: str=None, worker_zone: str=None, zone: str=None):
        """GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment - a model defined in OpenAPI

        :param additional_experiments: The additional_experiments of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param additional_user_labels: The additional_user_labels of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param enable_streaming_engine: The enable_streaming_engine of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param flexrs_goal: The flexrs_goal of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param ip_configuration: The ip_configuration of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param kms_key_name: The kms_key_name of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param machine_type: The machine_type of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param max_workers: The max_workers of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param network: The network of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param num_workers: The num_workers of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param service_account_email: The service_account_email of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param subnetwork: The subnetwork of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param temp_location: The temp_location of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param worker_region: The worker_region of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param worker_zone: The worker_zone of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :param zone: The zone of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        """
        self.openapi_types = {
            'additional_experiments': List[str],
            'additional_user_labels': Dict[str, str],
            'enable_streaming_engine': bool,
            'flexrs_goal': str,
            'ip_configuration': str,
            'kms_key_name': str,
            'machine_type': str,
            'max_workers': int,
            'network': str,
            'num_workers': int,
            'service_account_email': str,
            'subnetwork': str,
            'temp_location': str,
            'worker_region': str,
            'worker_zone': str,
            'zone': str
        }

        self.attribute_map = {
            'additional_experiments': 'additionalExperiments',
            'additional_user_labels': 'additionalUserLabels',
            'enable_streaming_engine': 'enableStreamingEngine',
            'flexrs_goal': 'flexrsGoal',
            'ip_configuration': 'ipConfiguration',
            'kms_key_name': 'kmsKeyName',
            'machine_type': 'machineType',
            'max_workers': 'maxWorkers',
            'network': 'network',
            'num_workers': 'numWorkers',
            'service_account_email': 'serviceAccountEmail',
            'subnetwork': 'subnetwork',
            'temp_location': 'tempLocation',
            'worker_region': 'workerRegion',
            'worker_zone': 'workerZone',
            'zone': 'zone'
        }

        self._additional_experiments = additional_experiments
        self._additional_user_labels = additional_user_labels
        self._enable_streaming_engine = enable_streaming_engine
        self._flexrs_goal = flexrs_goal
        self._ip_configuration = ip_configuration
        self._kms_key_name = kms_key_name
        self._machine_type = machine_type
        self._max_workers = max_workers
        self._network = network
        self._num_workers = num_workers
        self._service_account_email = service_account_email
        self._subnetwork = subnetwork
        self._temp_location = temp_location
        self._worker_region = worker_region
        self._worker_zone = worker_zone
        self._zone = zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_experiments(self):
        """Gets the additional_experiments of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Additional experiment flags for the job.

        :return: The additional_experiments of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: List[str]
        """
        return self._additional_experiments

    @additional_experiments.setter
    def additional_experiments(self, additional_experiments):
        """Sets the additional_experiments of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Additional experiment flags for the job.

        :param additional_experiments: The additional_experiments of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type additional_experiments: List[str]
        """

        self._additional_experiments = additional_experiments

    @property
    def additional_user_labels(self):
        """Gets the additional_user_labels of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }`.

        :return: The additional_user_labels of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: Dict[str, str]
        """
        return self._additional_user_labels

    @additional_user_labels.setter
    def additional_user_labels(self, additional_user_labels):
        """Sets the additional_user_labels of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }`.

        :param additional_user_labels: The additional_user_labels of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type additional_user_labels: Dict[str, str]
        """

        self._additional_user_labels = additional_user_labels

    @property
    def enable_streaming_engine(self):
        """Gets the enable_streaming_engine of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Whether to enable Streaming Engine for the job.

        :return: The enable_streaming_engine of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: bool
        """
        return self._enable_streaming_engine

    @enable_streaming_engine.setter
    def enable_streaming_engine(self, enable_streaming_engine):
        """Sets the enable_streaming_engine of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Whether to enable Streaming Engine for the job.

        :param enable_streaming_engine: The enable_streaming_engine of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type enable_streaming_engine: bool
        """

        self._enable_streaming_engine = enable_streaming_engine

    @property
    def flexrs_goal(self):
        """Gets the flexrs_goal of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs

        :return: The flexrs_goal of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: str
        """
        return self._flexrs_goal

    @flexrs_goal.setter
    def flexrs_goal(self, flexrs_goal):
        """Sets the flexrs_goal of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs

        :param flexrs_goal: The flexrs_goal of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type flexrs_goal: str
        """
        allowed_values = ["FLEXRS_UNSPECIFIED", "FLEXRS_SPEED_OPTIMIZED", "FLEXRS_COST_OPTIMIZED"]  # noqa: E501
        if flexrs_goal not in allowed_values:
            raise ValueError(
                "Invalid value for `flexrs_goal` ({0}), must be one of {1}"
                .format(flexrs_goal, allowed_values)
            )

        self._flexrs_goal = flexrs_goal

    @property
    def ip_configuration(self):
        """Gets the ip_configuration of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Configuration for VM IPs.

        :return: The ip_configuration of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: str
        """
        return self._ip_configuration

    @ip_configuration.setter
    def ip_configuration(self, ip_configuration):
        """Sets the ip_configuration of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Configuration for VM IPs.

        :param ip_configuration: The ip_configuration of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type ip_configuration: str
        """
        allowed_values = ["WORKER_IP_UNSPECIFIED", "WORKER_IP_PUBLIC", "WORKER_IP_PRIVATE"]  # noqa: E501
        if ip_configuration not in allowed_values:
            raise ValueError(
                "Invalid value for `ip_configuration` ({0}), must be one of {1}"
                .format(ip_configuration, allowed_values)
            )

        self._ip_configuration = ip_configuration

    @property
    def kms_key_name(self):
        """Gets the kms_key_name of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/

        :return: The kms_key_name of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: str
        """
        return self._kms_key_name

    @kms_key_name.setter
    def kms_key_name(self, kms_key_name):
        """Sets the kms_key_name of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/

        :param kms_key_name: The kms_key_name of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type kms_key_name: str
        """

        self._kms_key_name = kms_key_name

    @property
    def machine_type(self):
        """Gets the machine_type of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The machine type to use for the job. Defaults to the value from the template if not specified.

        :return: The machine_type of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: str
        """
        return self._machine_type

    @machine_type.setter
    def machine_type(self, machine_type):
        """Sets the machine_type of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The machine type to use for the job. Defaults to the value from the template if not specified.

        :param machine_type: The machine_type of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type machine_type: str
        """

        self._machine_type = machine_type

    @property
    def max_workers(self):
        """Gets the max_workers of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.

        :return: The max_workers of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: int
        """
        return self._max_workers

    @max_workers.setter
    def max_workers(self, max_workers):
        """Sets the max_workers of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.

        :param max_workers: The max_workers of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type max_workers: int
        """

        self._max_workers = max_workers

    @property
    def network(self):
        """Gets the network of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\".

        :return: The network of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\".

        :param network: The network of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type network: str
        """

        self._network = network

    @property
    def num_workers(self):
        """Gets the num_workers of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The initial number of Compute Engine instances for the job.

        :return: The num_workers of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: int
        """
        return self._num_workers

    @num_workers.setter
    def num_workers(self, num_workers):
        """Sets the num_workers of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The initial number of Compute Engine instances for the job.

        :param num_workers: The num_workers of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type num_workers: int
        """

        self._num_workers = num_workers

    @property
    def service_account_email(self):
        """Gets the service_account_email of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The email address of the service account to run the job as.

        :return: The service_account_email of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: str
        """
        return self._service_account_email

    @service_account_email.setter
    def service_account_email(self, service_account_email):
        """Sets the service_account_email of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The email address of the service account to run the job as.

        :param service_account_email: The service_account_email of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type service_account_email: str
        """

        self._service_account_email = service_account_email

    @property
    def subnetwork(self):
        """Gets the subnetwork of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL.

        :return: The subnetwork of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: str
        """
        return self._subnetwork

    @subnetwork.setter
    def subnetwork(self, subnetwork):
        """Sets the subnetwork of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL.

        :param subnetwork: The subnetwork of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type subnetwork: str
        """

        self._subnetwork = subnetwork

    @property
    def temp_location(self):
        """Gets the temp_location of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.

        :return: The temp_location of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: str
        """
        return self._temp_location

    @temp_location.setter
    def temp_location(self, temp_location):
        """Sets the temp_location of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.

        :param temp_location: The temp_location of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type temp_location: str
        """

        self._temp_location = temp_location

    @property
    def worker_region(self):
        """Gets the worker_region of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.

        :return: The worker_region of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: str
        """
        return self._worker_region

    @worker_region.setter
    def worker_region(self, worker_region):
        """Sets the worker_region of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.

        :param worker_region: The worker_region of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type worker_region: str
        """

        self._worker_region = worker_region

    @property
    def worker_zone(self):
        """Gets the worker_zone of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.

        :return: The worker_zone of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: str
        """
        return self._worker_zone

    @worker_zone.setter
    def worker_zone(self, worker_zone):
        """Sets the worker_zone of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.

        :param worker_zone: The worker_zone of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type worker_zone: str
        """

        self._worker_zone = worker_zone

    @property
    def zone(self):
        """Gets the zone of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.

        :return: The zone of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :rtype: str
        """
        return self._zone

    @zone.setter
    def zone(self, zone):
        """Sets the zone of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.

        The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.

        :param zone: The zone of this GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment.
        :type zone: str
        """

        self._zone = zone
