# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datapipelines_v1_flex_template_runtime_environment import GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment
from openapi_server import util


class GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_spec_gcs_path: str=None, environment: GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment=None, job_name: str=None, launch_options: Dict[str, str]=None, parameters: Dict[str, str]=None, transform_name_mappings: Dict[str, str]=None, update: bool=None):
        """GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter - a model defined in OpenAPI

        :param container_spec_gcs_path: The container_spec_gcs_path of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :param environment: The environment of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :param job_name: The job_name of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :param launch_options: The launch_options of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :param parameters: The parameters of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :param transform_name_mappings: The transform_name_mappings of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :param update: The update of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        """
        self.openapi_types = {
            'container_spec_gcs_path': str,
            'environment': GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment,
            'job_name': str,
            'launch_options': Dict[str, str],
            'parameters': Dict[str, str],
            'transform_name_mappings': Dict[str, str],
            'update': bool
        }

        self.attribute_map = {
            'container_spec_gcs_path': 'containerSpecGcsPath',
            'environment': 'environment',
            'job_name': 'jobName',
            'launch_options': 'launchOptions',
            'parameters': 'parameters',
            'transform_name_mappings': 'transformNameMappings',
            'update': 'update'
        }

        self._container_spec_gcs_path = container_spec_gcs_path
        self._environment = environment
        self._job_name = job_name
        self._launch_options = launch_options
        self._parameters = parameters
        self._transform_name_mappings = transform_name_mappings
        self._update = update

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_spec_gcs_path(self):
        """Gets the container_spec_gcs_path of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.

        Cloud Storage path to a file with a JSON-serialized ContainerSpec as content.

        :return: The container_spec_gcs_path of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :rtype: str
        """
        return self._container_spec_gcs_path

    @container_spec_gcs_path.setter
    def container_spec_gcs_path(self, container_spec_gcs_path):
        """Sets the container_spec_gcs_path of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.

        Cloud Storage path to a file with a JSON-serialized ContainerSpec as content.

        :param container_spec_gcs_path: The container_spec_gcs_path of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :type container_spec_gcs_path: str
        """

        self._container_spec_gcs_path = container_spec_gcs_path

    @property
    def environment(self):
        """Gets the environment of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.


        :return: The environment of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :rtype: GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.


        :param environment: The environment of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :type environment: GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment
        """

        self._environment = environment

    @property
    def job_name(self):
        """Gets the job_name of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.

        Required. The job name to use for the created job. For an update job request, the job name should be the same as the existing running job.

        :return: The job_name of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.

        Required. The job name to use for the created job. For an update job request, the job name should be the same as the existing running job.

        :param job_name: The job_name of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :type job_name: str
        """

        self._job_name = job_name

    @property
    def launch_options(self):
        """Gets the launch_options of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.

        Launch options for this Flex Template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.

        :return: The launch_options of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :rtype: Dict[str, str]
        """
        return self._launch_options

    @launch_options.setter
    def launch_options(self, launch_options):
        """Sets the launch_options of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.

        Launch options for this Flex Template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.

        :param launch_options: The launch_options of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :type launch_options: Dict[str, str]
        """

        self._launch_options = launch_options

    @property
    def parameters(self):
        """Gets the parameters of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.

        The parameters for the Flex Template. Example: `{\"num_workers\":\"5\"}`

        :return: The parameters of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :rtype: Dict[str, str]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.

        The parameters for the Flex Template. Example: `{\"num_workers\":\"5\"}`

        :param parameters: The parameters of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :type parameters: Dict[str, str]
        """

        self._parameters = parameters

    @property
    def transform_name_mappings(self):
        """Gets the transform_name_mappings of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.

        Use this to pass transform name mappings for streaming update jobs. Example: `{\"oldTransformName\":\"newTransformName\",...}`

        :return: The transform_name_mappings of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :rtype: Dict[str, str]
        """
        return self._transform_name_mappings

    @transform_name_mappings.setter
    def transform_name_mappings(self, transform_name_mappings):
        """Sets the transform_name_mappings of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.

        Use this to pass transform name mappings for streaming update jobs. Example: `{\"oldTransformName\":\"newTransformName\",...}`

        :param transform_name_mappings: The transform_name_mappings of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :type transform_name_mappings: Dict[str, str]
        """

        self._transform_name_mappings = transform_name_mappings

    @property
    def update(self):
        """Gets the update of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.

        Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.

        :return: The update of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :rtype: bool
        """
        return self._update

    @update.setter
    def update(self, update):
        """Sets the update of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.

        Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.

        :param update: The update of this GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter.
        :type update: bool
        """

        self._update = update
