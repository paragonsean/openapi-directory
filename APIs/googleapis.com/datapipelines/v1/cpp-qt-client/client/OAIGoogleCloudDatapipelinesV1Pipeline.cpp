/**
 * Data pipelines API
 * Data Pipelines provides an interface for creating, updating, and managing recurring Data Analytics jobs.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatapipelinesV1Pipeline.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatapipelinesV1Pipeline::OAIGoogleCloudDatapipelinesV1Pipeline(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatapipelinesV1Pipeline::OAIGoogleCloudDatapipelinesV1Pipeline() {
    this->initializeModel();
}

OAIGoogleCloudDatapipelinesV1Pipeline::~OAIGoogleCloudDatapipelinesV1Pipeline() {}

void OAIGoogleCloudDatapipelinesV1Pipeline::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_job_count_isSet = false;
    m_job_count_isValid = false;

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pipeline_sources_isSet = false;
    m_pipeline_sources_isValid = false;

    m_schedule_info_isSet = false;
    m_schedule_info_isValid = false;

    m_scheduler_service_account_email_isSet = false;
    m_scheduler_service_account_email_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_workload_isSet = false;
    m_workload_isValid = false;
}

void OAIGoogleCloudDatapipelinesV1Pipeline::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatapipelinesV1Pipeline::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_job_count_isValid = ::OpenAPI::fromJsonValue(m_job_count, json[QString("jobCount")]);
    m_job_count_isSet = !json[QString("jobCount")].isNull() && m_job_count_isValid;

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("lastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("lastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_pipeline_sources_isValid = ::OpenAPI::fromJsonValue(m_pipeline_sources, json[QString("pipelineSources")]);
    m_pipeline_sources_isSet = !json[QString("pipelineSources")].isNull() && m_pipeline_sources_isValid;

    m_schedule_info_isValid = ::OpenAPI::fromJsonValue(m_schedule_info, json[QString("scheduleInfo")]);
    m_schedule_info_isSet = !json[QString("scheduleInfo")].isNull() && m_schedule_info_isValid;

    m_scheduler_service_account_email_isValid = ::OpenAPI::fromJsonValue(m_scheduler_service_account_email, json[QString("schedulerServiceAccountEmail")]);
    m_scheduler_service_account_email_isSet = !json[QString("schedulerServiceAccountEmail")].isNull() && m_scheduler_service_account_email_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_workload_isValid = ::OpenAPI::fromJsonValue(m_workload, json[QString("workload")]);
    m_workload_isSet = !json[QString("workload")].isNull() && m_workload_isValid;
}

QString OAIGoogleCloudDatapipelinesV1Pipeline::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatapipelinesV1Pipeline::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_job_count_isSet) {
        obj.insert(QString("jobCount"), ::OpenAPI::toJsonValue(m_job_count));
    }
    if (m_last_update_time_isSet) {
        obj.insert(QString("lastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pipeline_sources.size() > 0) {
        obj.insert(QString("pipelineSources"), ::OpenAPI::toJsonValue(m_pipeline_sources));
    }
    if (m_schedule_info.isSet()) {
        obj.insert(QString("scheduleInfo"), ::OpenAPI::toJsonValue(m_schedule_info));
    }
    if (m_scheduler_service_account_email_isSet) {
        obj.insert(QString("schedulerServiceAccountEmail"), ::OpenAPI::toJsonValue(m_scheduler_service_account_email));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_workload.isSet()) {
        obj.insert(QString("workload"), ::OpenAPI::toJsonValue(m_workload));
    }
    return obj;
}

QString OAIGoogleCloudDatapipelinesV1Pipeline::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDatapipelinesV1Pipeline::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDatapipelinesV1Pipeline::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDatapipelinesV1Pipeline::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_display_name_Valid() const{
    return m_display_name_isValid;
}

qint32 OAIGoogleCloudDatapipelinesV1Pipeline::getJobCount() const {
    return m_job_count;
}
void OAIGoogleCloudDatapipelinesV1Pipeline::setJobCount(const qint32 &job_count) {
    m_job_count = job_count;
    m_job_count_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_job_count_Set() const{
    return m_job_count_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_job_count_Valid() const{
    return m_job_count_isValid;
}

QString OAIGoogleCloudDatapipelinesV1Pipeline::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAIGoogleCloudDatapipelinesV1Pipeline::setLastUpdateTime(const QString &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

QString OAIGoogleCloudDatapipelinesV1Pipeline::getName() const {
    return m_name;
}
void OAIGoogleCloudDatapipelinesV1Pipeline::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_name_Valid() const{
    return m_name_isValid;
}

QMap<QString, QString> OAIGoogleCloudDatapipelinesV1Pipeline::getPipelineSources() const {
    return m_pipeline_sources;
}
void OAIGoogleCloudDatapipelinesV1Pipeline::setPipelineSources(const QMap<QString, QString> &pipeline_sources) {
    m_pipeline_sources = pipeline_sources;
    m_pipeline_sources_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_pipeline_sources_Set() const{
    return m_pipeline_sources_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_pipeline_sources_Valid() const{
    return m_pipeline_sources_isValid;
}

OAIGoogleCloudDatapipelinesV1ScheduleSpec OAIGoogleCloudDatapipelinesV1Pipeline::getScheduleInfo() const {
    return m_schedule_info;
}
void OAIGoogleCloudDatapipelinesV1Pipeline::setScheduleInfo(const OAIGoogleCloudDatapipelinesV1ScheduleSpec &schedule_info) {
    m_schedule_info = schedule_info;
    m_schedule_info_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_schedule_info_Set() const{
    return m_schedule_info_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_schedule_info_Valid() const{
    return m_schedule_info_isValid;
}

QString OAIGoogleCloudDatapipelinesV1Pipeline::getSchedulerServiceAccountEmail() const {
    return m_scheduler_service_account_email;
}
void OAIGoogleCloudDatapipelinesV1Pipeline::setSchedulerServiceAccountEmail(const QString &scheduler_service_account_email) {
    m_scheduler_service_account_email = scheduler_service_account_email;
    m_scheduler_service_account_email_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_scheduler_service_account_email_Set() const{
    return m_scheduler_service_account_email_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_scheduler_service_account_email_Valid() const{
    return m_scheduler_service_account_email_isValid;
}

QString OAIGoogleCloudDatapipelinesV1Pipeline::getState() const {
    return m_state;
}
void OAIGoogleCloudDatapipelinesV1Pipeline::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudDatapipelinesV1Pipeline::getType() const {
    return m_type;
}
void OAIGoogleCloudDatapipelinesV1Pipeline::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_type_Valid() const{
    return m_type_isValid;
}

OAIGoogleCloudDatapipelinesV1Workload OAIGoogleCloudDatapipelinesV1Pipeline::getWorkload() const {
    return m_workload;
}
void OAIGoogleCloudDatapipelinesV1Pipeline::setWorkload(const OAIGoogleCloudDatapipelinesV1Workload &workload) {
    m_workload = workload;
    m_workload_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_workload_Set() const{
    return m_workload_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::is_workload_Valid() const{
    return m_workload_isValid;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pipeline_sources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheduler_service_account_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_workload.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatapipelinesV1Pipeline::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
