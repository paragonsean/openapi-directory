/**
 * Data pipelines API
 * Data Pipelines provides an interface for creating, updating, and managing recurring Data Analytics jobs.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters() {
    this->initializeModel();
}

OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::~OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters() {}

void OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::initializeModel() {

    m_environment_isSet = false;
    m_environment_isValid = false;

    m_job_name_isSet = false;
    m_job_name_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_transform_name_mapping_isSet = false;
    m_transform_name_mapping_isValid = false;

    m_update_isSet = false;
    m_update_isValid = false;
}

void OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::fromJsonObject(QJsonObject json) {

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("environment")]);
    m_environment_isSet = !json[QString("environment")].isNull() && m_environment_isValid;

    m_job_name_isValid = ::OpenAPI::fromJsonValue(m_job_name, json[QString("jobName")]);
    m_job_name_isSet = !json[QString("jobName")].isNull() && m_job_name_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_transform_name_mapping_isValid = ::OpenAPI::fromJsonValue(m_transform_name_mapping, json[QString("transformNameMapping")]);
    m_transform_name_mapping_isSet = !json[QString("transformNameMapping")].isNull() && m_transform_name_mapping_isValid;

    m_update_isValid = ::OpenAPI::fromJsonValue(m_update, json[QString("update")]);
    m_update_isSet = !json[QString("update")].isNull() && m_update_isValid;
}

QString OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_environment.isSet()) {
        obj.insert(QString("environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    if (m_job_name_isSet) {
        obj.insert(QString("jobName"), ::OpenAPI::toJsonValue(m_job_name));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_transform_name_mapping.size() > 0) {
        obj.insert(QString("transformNameMapping"), ::OpenAPI::toJsonValue(m_transform_name_mapping));
    }
    if (m_update_isSet) {
        obj.insert(QString("update"), ::OpenAPI::toJsonValue(m_update));
    }
    return obj;
}

OAIGoogleCloudDatapipelinesV1RuntimeEnvironment OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::getEnvironment() const {
    return m_environment;
}
void OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::setEnvironment(const OAIGoogleCloudDatapipelinesV1RuntimeEnvironment &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::is_environment_Valid() const{
    return m_environment_isValid;
}

QString OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::getJobName() const {
    return m_job_name;
}
void OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::setJobName(const QString &job_name) {
    m_job_name = job_name;
    m_job_name_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::is_job_name_Set() const{
    return m_job_name_isSet;
}

bool OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::is_job_name_Valid() const{
    return m_job_name_isValid;
}

QMap<QString, QString> OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::getParameters() const {
    return m_parameters;
}
void OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::setParameters(const QMap<QString, QString> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::is_parameters_Valid() const{
    return m_parameters_isValid;
}

QMap<QString, QString> OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::getTransformNameMapping() const {
    return m_transform_name_mapping;
}
void OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::setTransformNameMapping(const QMap<QString, QString> &transform_name_mapping) {
    m_transform_name_mapping = transform_name_mapping;
    m_transform_name_mapping_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::is_transform_name_mapping_Set() const{
    return m_transform_name_mapping_isSet;
}

bool OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::is_transform_name_mapping_Valid() const{
    return m_transform_name_mapping_isValid;
}

bool OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::isUpdate() const {
    return m_update;
}
void OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::setUpdate(const bool &update) {
    m_update = update;
    m_update_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::is_update_Set() const{
    return m_update_isSet;
}

bool OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::is_update_Valid() const{
    return m_update_isValid;
}

bool OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_environment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_transform_name_mapping.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatapipelinesV1LaunchTemplateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
