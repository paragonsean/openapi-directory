/**
 * Data pipelines API
 * Data Pipelines provides an interface for creating, updating, and managing recurring Data Analytics jobs.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatapipelinesV1Job.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatapipelinesV1Job::OAIGoogleCloudDatapipelinesV1Job(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatapipelinesV1Job::OAIGoogleCloudDatapipelinesV1Job() {
    this->initializeModel();
}

OAIGoogleCloudDatapipelinesV1Job::~OAIGoogleCloudDatapipelinesV1Job() {}

void OAIGoogleCloudDatapipelinesV1Job::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_dataflow_job_details_isSet = false;
    m_dataflow_job_details_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIGoogleCloudDatapipelinesV1Job::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatapipelinesV1Job::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_dataflow_job_details_isValid = ::OpenAPI::fromJsonValue(m_dataflow_job_details, json[QString("dataflowJobDetails")]);
    m_dataflow_job_details_isSet = !json[QString("dataflowJobDetails")].isNull() && m_dataflow_job_details_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIGoogleCloudDatapipelinesV1Job::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatapipelinesV1Job::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_dataflow_job_details.isSet()) {
        obj.insert(QString("dataflowJobDetails"), ::OpenAPI::toJsonValue(m_dataflow_job_details));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIGoogleCloudDatapipelinesV1Job::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDatapipelinesV1Job::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleCloudDatapipelinesV1DataflowJobDetails OAIGoogleCloudDatapipelinesV1Job::getDataflowJobDetails() const {
    return m_dataflow_job_details;
}
void OAIGoogleCloudDatapipelinesV1Job::setDataflowJobDetails(const OAIGoogleCloudDatapipelinesV1DataflowJobDetails &dataflow_job_details) {
    m_dataflow_job_details = dataflow_job_details;
    m_dataflow_job_details_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_dataflow_job_details_Set() const{
    return m_dataflow_job_details_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_dataflow_job_details_Valid() const{
    return m_dataflow_job_details_isValid;
}

QString OAIGoogleCloudDatapipelinesV1Job::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudDatapipelinesV1Job::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleCloudDatapipelinesV1Job::getId() const {
    return m_id;
}
void OAIGoogleCloudDatapipelinesV1Job::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGoogleCloudDatapipelinesV1Job::getName() const {
    return m_name;
}
void OAIGoogleCloudDatapipelinesV1Job::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDatapipelinesV1Job::getState() const {
    return m_state;
}
void OAIGoogleCloudDatapipelinesV1Job::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_state_Valid() const{
    return m_state_isValid;
}

OAIGoogleRpcStatus OAIGoogleCloudDatapipelinesV1Job::getStatus() const {
    return m_status;
}
void OAIGoogleCloudDatapipelinesV1Job::setStatus(const OAIGoogleRpcStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGoogleCloudDatapipelinesV1Job::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIGoogleCloudDatapipelinesV1Job::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dataflow_job_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatapipelinesV1Job::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
