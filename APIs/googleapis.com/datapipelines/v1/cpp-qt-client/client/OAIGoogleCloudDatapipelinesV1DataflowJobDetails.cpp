/**
 * Data pipelines API
 * Data Pipelines provides an interface for creating, updating, and managing recurring Data Analytics jobs.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatapipelinesV1DataflowJobDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatapipelinesV1DataflowJobDetails::OAIGoogleCloudDatapipelinesV1DataflowJobDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatapipelinesV1DataflowJobDetails::OAIGoogleCloudDatapipelinesV1DataflowJobDetails() {
    this->initializeModel();
}

OAIGoogleCloudDatapipelinesV1DataflowJobDetails::~OAIGoogleCloudDatapipelinesV1DataflowJobDetails() {}

void OAIGoogleCloudDatapipelinesV1DataflowJobDetails::initializeModel() {

    m_current_workers_isSet = false;
    m_current_workers_isValid = false;

    m_resource_info_isSet = false;
    m_resource_info_isValid = false;

    m_sdk_version_isSet = false;
    m_sdk_version_isValid = false;
}

void OAIGoogleCloudDatapipelinesV1DataflowJobDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatapipelinesV1DataflowJobDetails::fromJsonObject(QJsonObject json) {

    m_current_workers_isValid = ::OpenAPI::fromJsonValue(m_current_workers, json[QString("currentWorkers")]);
    m_current_workers_isSet = !json[QString("currentWorkers")].isNull() && m_current_workers_isValid;

    m_resource_info_isValid = ::OpenAPI::fromJsonValue(m_resource_info, json[QString("resourceInfo")]);
    m_resource_info_isSet = !json[QString("resourceInfo")].isNull() && m_resource_info_isValid;

    m_sdk_version_isValid = ::OpenAPI::fromJsonValue(m_sdk_version, json[QString("sdkVersion")]);
    m_sdk_version_isSet = !json[QString("sdkVersion")].isNull() && m_sdk_version_isValid;
}

QString OAIGoogleCloudDatapipelinesV1DataflowJobDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatapipelinesV1DataflowJobDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_current_workers_isSet) {
        obj.insert(QString("currentWorkers"), ::OpenAPI::toJsonValue(m_current_workers));
    }
    if (m_resource_info.size() > 0) {
        obj.insert(QString("resourceInfo"), ::OpenAPI::toJsonValue(m_resource_info));
    }
    if (m_sdk_version.isSet()) {
        obj.insert(QString("sdkVersion"), ::OpenAPI::toJsonValue(m_sdk_version));
    }
    return obj;
}

qint32 OAIGoogleCloudDatapipelinesV1DataflowJobDetails::getCurrentWorkers() const {
    return m_current_workers;
}
void OAIGoogleCloudDatapipelinesV1DataflowJobDetails::setCurrentWorkers(const qint32 &current_workers) {
    m_current_workers = current_workers;
    m_current_workers_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1DataflowJobDetails::is_current_workers_Set() const{
    return m_current_workers_isSet;
}

bool OAIGoogleCloudDatapipelinesV1DataflowJobDetails::is_current_workers_Valid() const{
    return m_current_workers_isValid;
}

QMap<QString, double> OAIGoogleCloudDatapipelinesV1DataflowJobDetails::getResourceInfo() const {
    return m_resource_info;
}
void OAIGoogleCloudDatapipelinesV1DataflowJobDetails::setResourceInfo(const QMap<QString, double> &resource_info) {
    m_resource_info = resource_info;
    m_resource_info_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1DataflowJobDetails::is_resource_info_Set() const{
    return m_resource_info_isSet;
}

bool OAIGoogleCloudDatapipelinesV1DataflowJobDetails::is_resource_info_Valid() const{
    return m_resource_info_isValid;
}

OAIGoogleCloudDatapipelinesV1SdkVersion OAIGoogleCloudDatapipelinesV1DataflowJobDetails::getSdkVersion() const {
    return m_sdk_version;
}
void OAIGoogleCloudDatapipelinesV1DataflowJobDetails::setSdkVersion(const OAIGoogleCloudDatapipelinesV1SdkVersion &sdk_version) {
    m_sdk_version = sdk_version;
    m_sdk_version_isSet = true;
}

bool OAIGoogleCloudDatapipelinesV1DataflowJobDetails::is_sdk_version_Set() const{
    return m_sdk_version_isSet;
}

bool OAIGoogleCloudDatapipelinesV1DataflowJobDetails::is_sdk_version_Valid() const{
    return m_sdk_version_isValid;
}

bool OAIGoogleCloudDatapipelinesV1DataflowJobDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_current_workers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_info.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sdk_version.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatapipelinesV1DataflowJobDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
