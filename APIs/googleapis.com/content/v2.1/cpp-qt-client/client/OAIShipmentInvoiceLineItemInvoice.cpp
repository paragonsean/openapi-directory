/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShipmentInvoiceLineItemInvoice.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShipmentInvoiceLineItemInvoice::OAIShipmentInvoiceLineItemInvoice(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShipmentInvoiceLineItemInvoice::OAIShipmentInvoiceLineItemInvoice() {
    this->initializeModel();
}

OAIShipmentInvoiceLineItemInvoice::~OAIShipmentInvoiceLineItemInvoice() {}

void OAIShipmentInvoiceLineItemInvoice::initializeModel() {

    m_line_item_id_isSet = false;
    m_line_item_id_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_shipment_unit_ids_isSet = false;
    m_shipment_unit_ids_isValid = false;

    m_unit_invoice_isSet = false;
    m_unit_invoice_isValid = false;
}

void OAIShipmentInvoiceLineItemInvoice::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShipmentInvoiceLineItemInvoice::fromJsonObject(QJsonObject json) {

    m_line_item_id_isValid = ::OpenAPI::fromJsonValue(m_line_item_id, json[QString("lineItemId")]);
    m_line_item_id_isSet = !json[QString("lineItemId")].isNull() && m_line_item_id_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("productId")]);
    m_product_id_isSet = !json[QString("productId")].isNull() && m_product_id_isValid;

    m_shipment_unit_ids_isValid = ::OpenAPI::fromJsonValue(m_shipment_unit_ids, json[QString("shipmentUnitIds")]);
    m_shipment_unit_ids_isSet = !json[QString("shipmentUnitIds")].isNull() && m_shipment_unit_ids_isValid;

    m_unit_invoice_isValid = ::OpenAPI::fromJsonValue(m_unit_invoice, json[QString("unitInvoice")]);
    m_unit_invoice_isSet = !json[QString("unitInvoice")].isNull() && m_unit_invoice_isValid;
}

QString OAIShipmentInvoiceLineItemInvoice::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShipmentInvoiceLineItemInvoice::asJsonObject() const {
    QJsonObject obj;
    if (m_line_item_id_isSet) {
        obj.insert(QString("lineItemId"), ::OpenAPI::toJsonValue(m_line_item_id));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("productId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_shipment_unit_ids.size() > 0) {
        obj.insert(QString("shipmentUnitIds"), ::OpenAPI::toJsonValue(m_shipment_unit_ids));
    }
    if (m_unit_invoice.isSet()) {
        obj.insert(QString("unitInvoice"), ::OpenAPI::toJsonValue(m_unit_invoice));
    }
    return obj;
}

QString OAIShipmentInvoiceLineItemInvoice::getLineItemId() const {
    return m_line_item_id;
}
void OAIShipmentInvoiceLineItemInvoice::setLineItemId(const QString &line_item_id) {
    m_line_item_id = line_item_id;
    m_line_item_id_isSet = true;
}

bool OAIShipmentInvoiceLineItemInvoice::is_line_item_id_Set() const{
    return m_line_item_id_isSet;
}

bool OAIShipmentInvoiceLineItemInvoice::is_line_item_id_Valid() const{
    return m_line_item_id_isValid;
}

QString OAIShipmentInvoiceLineItemInvoice::getProductId() const {
    return m_product_id;
}
void OAIShipmentInvoiceLineItemInvoice::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIShipmentInvoiceLineItemInvoice::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIShipmentInvoiceLineItemInvoice::is_product_id_Valid() const{
    return m_product_id_isValid;
}

QList<QString> OAIShipmentInvoiceLineItemInvoice::getShipmentUnitIds() const {
    return m_shipment_unit_ids;
}
void OAIShipmentInvoiceLineItemInvoice::setShipmentUnitIds(const QList<QString> &shipment_unit_ids) {
    m_shipment_unit_ids = shipment_unit_ids;
    m_shipment_unit_ids_isSet = true;
}

bool OAIShipmentInvoiceLineItemInvoice::is_shipment_unit_ids_Set() const{
    return m_shipment_unit_ids_isSet;
}

bool OAIShipmentInvoiceLineItemInvoice::is_shipment_unit_ids_Valid() const{
    return m_shipment_unit_ids_isValid;
}

OAIUnitInvoice OAIShipmentInvoiceLineItemInvoice::getUnitInvoice() const {
    return m_unit_invoice;
}
void OAIShipmentInvoiceLineItemInvoice::setUnitInvoice(const OAIUnitInvoice &unit_invoice) {
    m_unit_invoice = unit_invoice;
    m_unit_invoice_isSet = true;
}

bool OAIShipmentInvoiceLineItemInvoice::is_unit_invoice_Set() const{
    return m_unit_invoice_isSet;
}

bool OAIShipmentInvoiceLineItemInvoice::is_unit_invoice_Valid() const{
    return m_unit_invoice_isValid;
}

bool OAIShipmentInvoiceLineItemInvoice::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_line_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_unit_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_invoice.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShipmentInvoiceLineItemInvoice::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
