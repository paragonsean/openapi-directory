/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderreturnsReturnItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderreturnsReturnItem::OAIOrderreturnsReturnItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderreturnsReturnItem::OAIOrderreturnsReturnItem() {
    this->initializeModel();
}

OAIOrderreturnsReturnItem::~OAIOrderreturnsReturnItem() {}

void OAIOrderreturnsReturnItem::initializeModel() {

    m_refund_isSet = false;
    m_refund_isValid = false;

    m_reject_isSet = false;
    m_reject_isValid = false;

    m_return_item_id_isSet = false;
    m_return_item_id_isValid = false;
}

void OAIOrderreturnsReturnItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderreturnsReturnItem::fromJsonObject(QJsonObject json) {

    m_refund_isValid = ::OpenAPI::fromJsonValue(m_refund, json[QString("refund")]);
    m_refund_isSet = !json[QString("refund")].isNull() && m_refund_isValid;

    m_reject_isValid = ::OpenAPI::fromJsonValue(m_reject, json[QString("reject")]);
    m_reject_isSet = !json[QString("reject")].isNull() && m_reject_isValid;

    m_return_item_id_isValid = ::OpenAPI::fromJsonValue(m_return_item_id, json[QString("returnItemId")]);
    m_return_item_id_isSet = !json[QString("returnItemId")].isNull() && m_return_item_id_isValid;
}

QString OAIOrderreturnsReturnItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderreturnsReturnItem::asJsonObject() const {
    QJsonObject obj;
    if (m_refund.isSet()) {
        obj.insert(QString("refund"), ::OpenAPI::toJsonValue(m_refund));
    }
    if (m_reject.isSet()) {
        obj.insert(QString("reject"), ::OpenAPI::toJsonValue(m_reject));
    }
    if (m_return_item_id_isSet) {
        obj.insert(QString("returnItemId"), ::OpenAPI::toJsonValue(m_return_item_id));
    }
    return obj;
}

OAIOrderreturnsRefundOperation OAIOrderreturnsReturnItem::getRefund() const {
    return m_refund;
}
void OAIOrderreturnsReturnItem::setRefund(const OAIOrderreturnsRefundOperation &refund) {
    m_refund = refund;
    m_refund_isSet = true;
}

bool OAIOrderreturnsReturnItem::is_refund_Set() const{
    return m_refund_isSet;
}

bool OAIOrderreturnsReturnItem::is_refund_Valid() const{
    return m_refund_isValid;
}

OAIOrderreturnsRejectOperation OAIOrderreturnsReturnItem::getReject() const {
    return m_reject;
}
void OAIOrderreturnsReturnItem::setReject(const OAIOrderreturnsRejectOperation &reject) {
    m_reject = reject;
    m_reject_isSet = true;
}

bool OAIOrderreturnsReturnItem::is_reject_Set() const{
    return m_reject_isSet;
}

bool OAIOrderreturnsReturnItem::is_reject_Valid() const{
    return m_reject_isValid;
}

QString OAIOrderreturnsReturnItem::getReturnItemId() const {
    return m_return_item_id;
}
void OAIOrderreturnsReturnItem::setReturnItemId(const QString &return_item_id) {
    m_return_item_id = return_item_id;
    m_return_item_id_isSet = true;
}

bool OAIOrderreturnsReturnItem::is_return_item_id_Set() const{
    return m_return_item_id_isSet;
}

bool OAIOrderreturnsReturnItem::is_return_item_id_Valid() const{
    return m_return_item_id_isValid;
}

bool OAIOrderreturnsReturnItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_refund.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reject.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderreturnsReturnItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
