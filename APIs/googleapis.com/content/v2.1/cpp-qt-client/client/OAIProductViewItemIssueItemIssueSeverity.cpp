/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductViewItemIssueItemIssueSeverity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductViewItemIssueItemIssueSeverity::OAIProductViewItemIssueItemIssueSeverity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductViewItemIssueItemIssueSeverity::OAIProductViewItemIssueItemIssueSeverity() {
    this->initializeModel();
}

OAIProductViewItemIssueItemIssueSeverity::~OAIProductViewItemIssueItemIssueSeverity() {}

void OAIProductViewItemIssueItemIssueSeverity::initializeModel() {

    m_aggregated_severity_isSet = false;
    m_aggregated_severity_isValid = false;

    m_severity_per_destination_isSet = false;
    m_severity_per_destination_isValid = false;
}

void OAIProductViewItemIssueItemIssueSeverity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductViewItemIssueItemIssueSeverity::fromJsonObject(QJsonObject json) {

    m_aggregated_severity_isValid = ::OpenAPI::fromJsonValue(m_aggregated_severity, json[QString("aggregatedSeverity")]);
    m_aggregated_severity_isSet = !json[QString("aggregatedSeverity")].isNull() && m_aggregated_severity_isValid;

    m_severity_per_destination_isValid = ::OpenAPI::fromJsonValue(m_severity_per_destination, json[QString("severityPerDestination")]);
    m_severity_per_destination_isSet = !json[QString("severityPerDestination")].isNull() && m_severity_per_destination_isValid;
}

QString OAIProductViewItemIssueItemIssueSeverity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductViewItemIssueItemIssueSeverity::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregated_severity_isSet) {
        obj.insert(QString("aggregatedSeverity"), ::OpenAPI::toJsonValue(m_aggregated_severity));
    }
    if (m_severity_per_destination.size() > 0) {
        obj.insert(QString("severityPerDestination"), ::OpenAPI::toJsonValue(m_severity_per_destination));
    }
    return obj;
}

QString OAIProductViewItemIssueItemIssueSeverity::getAggregatedSeverity() const {
    return m_aggregated_severity;
}
void OAIProductViewItemIssueItemIssueSeverity::setAggregatedSeverity(const QString &aggregated_severity) {
    m_aggregated_severity = aggregated_severity;
    m_aggregated_severity_isSet = true;
}

bool OAIProductViewItemIssueItemIssueSeverity::is_aggregated_severity_Set() const{
    return m_aggregated_severity_isSet;
}

bool OAIProductViewItemIssueItemIssueSeverity::is_aggregated_severity_Valid() const{
    return m_aggregated_severity_isValid;
}

QList<OAIProductViewItemIssueIssueSeverityPerDestination> OAIProductViewItemIssueItemIssueSeverity::getSeverityPerDestination() const {
    return m_severity_per_destination;
}
void OAIProductViewItemIssueItemIssueSeverity::setSeverityPerDestination(const QList<OAIProductViewItemIssueIssueSeverityPerDestination> &severity_per_destination) {
    m_severity_per_destination = severity_per_destination;
    m_severity_per_destination_isSet = true;
}

bool OAIProductViewItemIssueItemIssueSeverity::is_severity_per_destination_Set() const{
    return m_severity_per_destination_isSet;
}

bool OAIProductViewItemIssueItemIssueSeverity::is_severity_per_destination_Valid() const{
    return m_severity_per_destination_isValid;
}

bool OAIProductViewItemIssueItemIssueSeverity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregated_severity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_severity_per_destination.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductViewItemIssueItemIssueSeverity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
