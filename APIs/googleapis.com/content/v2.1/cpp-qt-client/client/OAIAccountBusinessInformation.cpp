/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountBusinessInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountBusinessInformation::OAIAccountBusinessInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountBusinessInformation::OAIAccountBusinessInformation() {
    this->initializeModel();
}

OAIAccountBusinessInformation::~OAIAccountBusinessInformation() {}

void OAIAccountBusinessInformation::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_customer_service_isSet = false;
    m_customer_service_isValid = false;

    m_korean_business_registration_number_isSet = false;
    m_korean_business_registration_number_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_phone_verification_status_isSet = false;
    m_phone_verification_status_isValid = false;
}

void OAIAccountBusinessInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountBusinessInformation::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_customer_service_isValid = ::OpenAPI::fromJsonValue(m_customer_service, json[QString("customerService")]);
    m_customer_service_isSet = !json[QString("customerService")].isNull() && m_customer_service_isValid;

    m_korean_business_registration_number_isValid = ::OpenAPI::fromJsonValue(m_korean_business_registration_number, json[QString("koreanBusinessRegistrationNumber")]);
    m_korean_business_registration_number_isSet = !json[QString("koreanBusinessRegistrationNumber")].isNull() && m_korean_business_registration_number_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phoneNumber")]);
    m_phone_number_isSet = !json[QString("phoneNumber")].isNull() && m_phone_number_isValid;

    m_phone_verification_status_isValid = ::OpenAPI::fromJsonValue(m_phone_verification_status, json[QString("phoneVerificationStatus")]);
    m_phone_verification_status_isSet = !json[QString("phoneVerificationStatus")].isNull() && m_phone_verification_status_isValid;
}

QString OAIAccountBusinessInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountBusinessInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_customer_service.isSet()) {
        obj.insert(QString("customerService"), ::OpenAPI::toJsonValue(m_customer_service));
    }
    if (m_korean_business_registration_number_isSet) {
        obj.insert(QString("koreanBusinessRegistrationNumber"), ::OpenAPI::toJsonValue(m_korean_business_registration_number));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_phone_verification_status_isSet) {
        obj.insert(QString("phoneVerificationStatus"), ::OpenAPI::toJsonValue(m_phone_verification_status));
    }
    return obj;
}

OAIAccountAddress OAIAccountBusinessInformation::getAddress() const {
    return m_address;
}
void OAIAccountBusinessInformation::setAddress(const OAIAccountAddress &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIAccountBusinessInformation::is_address_Set() const{
    return m_address_isSet;
}

bool OAIAccountBusinessInformation::is_address_Valid() const{
    return m_address_isValid;
}

OAIAccountCustomerService OAIAccountBusinessInformation::getCustomerService() const {
    return m_customer_service;
}
void OAIAccountBusinessInformation::setCustomerService(const OAIAccountCustomerService &customer_service) {
    m_customer_service = customer_service;
    m_customer_service_isSet = true;
}

bool OAIAccountBusinessInformation::is_customer_service_Set() const{
    return m_customer_service_isSet;
}

bool OAIAccountBusinessInformation::is_customer_service_Valid() const{
    return m_customer_service_isValid;
}

QString OAIAccountBusinessInformation::getKoreanBusinessRegistrationNumber() const {
    return m_korean_business_registration_number;
}
void OAIAccountBusinessInformation::setKoreanBusinessRegistrationNumber(const QString &korean_business_registration_number) {
    m_korean_business_registration_number = korean_business_registration_number;
    m_korean_business_registration_number_isSet = true;
}

bool OAIAccountBusinessInformation::is_korean_business_registration_number_Set() const{
    return m_korean_business_registration_number_isSet;
}

bool OAIAccountBusinessInformation::is_korean_business_registration_number_Valid() const{
    return m_korean_business_registration_number_isValid;
}

QString OAIAccountBusinessInformation::getPhoneNumber() const {
    return m_phone_number;
}
void OAIAccountBusinessInformation::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIAccountBusinessInformation::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIAccountBusinessInformation::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIAccountBusinessInformation::getPhoneVerificationStatus() const {
    return m_phone_verification_status;
}
void OAIAccountBusinessInformation::setPhoneVerificationStatus(const QString &phone_verification_status) {
    m_phone_verification_status = phone_verification_status;
    m_phone_verification_status_isSet = true;
}

bool OAIAccountBusinessInformation::is_phone_verification_status_Set() const{
    return m_phone_verification_status_isSet;
}

bool OAIAccountBusinessInformation::is_phone_verification_status_Valid() const{
    return m_phone_verification_status_isValid;
}

bool OAIAccountBusinessInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_service.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_korean_business_registration_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_verification_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountBusinessInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
