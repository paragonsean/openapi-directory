/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILiaInventorySettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILiaInventorySettings::OAILiaInventorySettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILiaInventorySettings::OAILiaInventorySettings() {
    this->initializeModel();
}

OAILiaInventorySettings::~OAILiaInventorySettings() {}

void OAILiaInventorySettings::initializeModel() {

    m_inventory_verification_contact_email_isSet = false;
    m_inventory_verification_contact_email_isValid = false;

    m_inventory_verification_contact_name_isSet = false;
    m_inventory_verification_contact_name_isValid = false;

    m_inventory_verification_contact_status_isSet = false;
    m_inventory_verification_contact_status_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAILiaInventorySettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILiaInventorySettings::fromJsonObject(QJsonObject json) {

    m_inventory_verification_contact_email_isValid = ::OpenAPI::fromJsonValue(m_inventory_verification_contact_email, json[QString("inventoryVerificationContactEmail")]);
    m_inventory_verification_contact_email_isSet = !json[QString("inventoryVerificationContactEmail")].isNull() && m_inventory_verification_contact_email_isValid;

    m_inventory_verification_contact_name_isValid = ::OpenAPI::fromJsonValue(m_inventory_verification_contact_name, json[QString("inventoryVerificationContactName")]);
    m_inventory_verification_contact_name_isSet = !json[QString("inventoryVerificationContactName")].isNull() && m_inventory_verification_contact_name_isValid;

    m_inventory_verification_contact_status_isValid = ::OpenAPI::fromJsonValue(m_inventory_verification_contact_status, json[QString("inventoryVerificationContactStatus")]);
    m_inventory_verification_contact_status_isSet = !json[QString("inventoryVerificationContactStatus")].isNull() && m_inventory_verification_contact_status_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAILiaInventorySettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILiaInventorySettings::asJsonObject() const {
    QJsonObject obj;
    if (m_inventory_verification_contact_email_isSet) {
        obj.insert(QString("inventoryVerificationContactEmail"), ::OpenAPI::toJsonValue(m_inventory_verification_contact_email));
    }
    if (m_inventory_verification_contact_name_isSet) {
        obj.insert(QString("inventoryVerificationContactName"), ::OpenAPI::toJsonValue(m_inventory_verification_contact_name));
    }
    if (m_inventory_verification_contact_status_isSet) {
        obj.insert(QString("inventoryVerificationContactStatus"), ::OpenAPI::toJsonValue(m_inventory_verification_contact_status));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAILiaInventorySettings::getInventoryVerificationContactEmail() const {
    return m_inventory_verification_contact_email;
}
void OAILiaInventorySettings::setInventoryVerificationContactEmail(const QString &inventory_verification_contact_email) {
    m_inventory_verification_contact_email = inventory_verification_contact_email;
    m_inventory_verification_contact_email_isSet = true;
}

bool OAILiaInventorySettings::is_inventory_verification_contact_email_Set() const{
    return m_inventory_verification_contact_email_isSet;
}

bool OAILiaInventorySettings::is_inventory_verification_contact_email_Valid() const{
    return m_inventory_verification_contact_email_isValid;
}

QString OAILiaInventorySettings::getInventoryVerificationContactName() const {
    return m_inventory_verification_contact_name;
}
void OAILiaInventorySettings::setInventoryVerificationContactName(const QString &inventory_verification_contact_name) {
    m_inventory_verification_contact_name = inventory_verification_contact_name;
    m_inventory_verification_contact_name_isSet = true;
}

bool OAILiaInventorySettings::is_inventory_verification_contact_name_Set() const{
    return m_inventory_verification_contact_name_isSet;
}

bool OAILiaInventorySettings::is_inventory_verification_contact_name_Valid() const{
    return m_inventory_verification_contact_name_isValid;
}

QString OAILiaInventorySettings::getInventoryVerificationContactStatus() const {
    return m_inventory_verification_contact_status;
}
void OAILiaInventorySettings::setInventoryVerificationContactStatus(const QString &inventory_verification_contact_status) {
    m_inventory_verification_contact_status = inventory_verification_contact_status;
    m_inventory_verification_contact_status_isSet = true;
}

bool OAILiaInventorySettings::is_inventory_verification_contact_status_Set() const{
    return m_inventory_verification_contact_status_isSet;
}

bool OAILiaInventorySettings::is_inventory_verification_contact_status_Valid() const{
    return m_inventory_verification_contact_status_isValid;
}

QString OAILiaInventorySettings::getStatus() const {
    return m_status;
}
void OAILiaInventorySettings::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAILiaInventorySettings::is_status_Set() const{
    return m_status_isSet;
}

bool OAILiaInventorySettings::is_status_Valid() const{
    return m_status_isValid;
}

bool OAILiaInventorySettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inventory_verification_contact_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_verification_contact_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_verification_contact_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILiaInventorySettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
