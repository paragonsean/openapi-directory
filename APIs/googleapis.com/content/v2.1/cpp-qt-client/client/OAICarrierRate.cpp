/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICarrierRate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICarrierRate::OAICarrierRate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICarrierRate::OAICarrierRate() {
    this->initializeModel();
}

OAICarrierRate::~OAICarrierRate() {}

void OAICarrierRate::initializeModel() {

    m_carrier_name_isSet = false;
    m_carrier_name_isValid = false;

    m_carrier_service_isSet = false;
    m_carrier_service_isValid = false;

    m_flat_adjustment_isSet = false;
    m_flat_adjustment_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_origin_postal_code_isSet = false;
    m_origin_postal_code_isValid = false;

    m_percentage_adjustment_isSet = false;
    m_percentage_adjustment_isValid = false;
}

void OAICarrierRate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICarrierRate::fromJsonObject(QJsonObject json) {

    m_carrier_name_isValid = ::OpenAPI::fromJsonValue(m_carrier_name, json[QString("carrierName")]);
    m_carrier_name_isSet = !json[QString("carrierName")].isNull() && m_carrier_name_isValid;

    m_carrier_service_isValid = ::OpenAPI::fromJsonValue(m_carrier_service, json[QString("carrierService")]);
    m_carrier_service_isSet = !json[QString("carrierService")].isNull() && m_carrier_service_isValid;

    m_flat_adjustment_isValid = ::OpenAPI::fromJsonValue(m_flat_adjustment, json[QString("flatAdjustment")]);
    m_flat_adjustment_isSet = !json[QString("flatAdjustment")].isNull() && m_flat_adjustment_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_origin_postal_code_isValid = ::OpenAPI::fromJsonValue(m_origin_postal_code, json[QString("originPostalCode")]);
    m_origin_postal_code_isSet = !json[QString("originPostalCode")].isNull() && m_origin_postal_code_isValid;

    m_percentage_adjustment_isValid = ::OpenAPI::fromJsonValue(m_percentage_adjustment, json[QString("percentageAdjustment")]);
    m_percentage_adjustment_isSet = !json[QString("percentageAdjustment")].isNull() && m_percentage_adjustment_isValid;
}

QString OAICarrierRate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICarrierRate::asJsonObject() const {
    QJsonObject obj;
    if (m_carrier_name_isSet) {
        obj.insert(QString("carrierName"), ::OpenAPI::toJsonValue(m_carrier_name));
    }
    if (m_carrier_service_isSet) {
        obj.insert(QString("carrierService"), ::OpenAPI::toJsonValue(m_carrier_service));
    }
    if (m_flat_adjustment.isSet()) {
        obj.insert(QString("flatAdjustment"), ::OpenAPI::toJsonValue(m_flat_adjustment));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_origin_postal_code_isSet) {
        obj.insert(QString("originPostalCode"), ::OpenAPI::toJsonValue(m_origin_postal_code));
    }
    if (m_percentage_adjustment_isSet) {
        obj.insert(QString("percentageAdjustment"), ::OpenAPI::toJsonValue(m_percentage_adjustment));
    }
    return obj;
}

QString OAICarrierRate::getCarrierName() const {
    return m_carrier_name;
}
void OAICarrierRate::setCarrierName(const QString &carrier_name) {
    m_carrier_name = carrier_name;
    m_carrier_name_isSet = true;
}

bool OAICarrierRate::is_carrier_name_Set() const{
    return m_carrier_name_isSet;
}

bool OAICarrierRate::is_carrier_name_Valid() const{
    return m_carrier_name_isValid;
}

QString OAICarrierRate::getCarrierService() const {
    return m_carrier_service;
}
void OAICarrierRate::setCarrierService(const QString &carrier_service) {
    m_carrier_service = carrier_service;
    m_carrier_service_isSet = true;
}

bool OAICarrierRate::is_carrier_service_Set() const{
    return m_carrier_service_isSet;
}

bool OAICarrierRate::is_carrier_service_Valid() const{
    return m_carrier_service_isValid;
}

OAIPrice OAICarrierRate::getFlatAdjustment() const {
    return m_flat_adjustment;
}
void OAICarrierRate::setFlatAdjustment(const OAIPrice &flat_adjustment) {
    m_flat_adjustment = flat_adjustment;
    m_flat_adjustment_isSet = true;
}

bool OAICarrierRate::is_flat_adjustment_Set() const{
    return m_flat_adjustment_isSet;
}

bool OAICarrierRate::is_flat_adjustment_Valid() const{
    return m_flat_adjustment_isValid;
}

QString OAICarrierRate::getName() const {
    return m_name;
}
void OAICarrierRate::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICarrierRate::is_name_Set() const{
    return m_name_isSet;
}

bool OAICarrierRate::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICarrierRate::getOriginPostalCode() const {
    return m_origin_postal_code;
}
void OAICarrierRate::setOriginPostalCode(const QString &origin_postal_code) {
    m_origin_postal_code = origin_postal_code;
    m_origin_postal_code_isSet = true;
}

bool OAICarrierRate::is_origin_postal_code_Set() const{
    return m_origin_postal_code_isSet;
}

bool OAICarrierRate::is_origin_postal_code_Valid() const{
    return m_origin_postal_code_isValid;
}

QString OAICarrierRate::getPercentageAdjustment() const {
    return m_percentage_adjustment;
}
void OAICarrierRate::setPercentageAdjustment(const QString &percentage_adjustment) {
    m_percentage_adjustment = percentage_adjustment;
    m_percentage_adjustment_isSet = true;
}

bool OAICarrierRate::is_percentage_adjustment_Set() const{
    return m_percentage_adjustment_isSet;
}

bool OAICarrierRate::is_percentage_adjustment_Valid() const{
    return m_percentage_adjustment_isValid;
}

bool OAICarrierRate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_carrier_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_carrier_service_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flat_adjustment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentage_adjustment_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICarrierRate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
