/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductCertification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductCertification::OAIProductCertification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductCertification::OAIProductCertification() {
    this->initializeModel();
}

OAIProductCertification::~OAIProductCertification() {}

void OAIProductCertification::initializeModel() {

    m_certification_authority_isSet = false;
    m_certification_authority_isValid = false;

    m_certification_code_isSet = false;
    m_certification_code_isValid = false;

    m_certification_name_isSet = false;
    m_certification_name_isValid = false;
}

void OAIProductCertification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductCertification::fromJsonObject(QJsonObject json) {

    m_certification_authority_isValid = ::OpenAPI::fromJsonValue(m_certification_authority, json[QString("certificationAuthority")]);
    m_certification_authority_isSet = !json[QString("certificationAuthority")].isNull() && m_certification_authority_isValid;

    m_certification_code_isValid = ::OpenAPI::fromJsonValue(m_certification_code, json[QString("certificationCode")]);
    m_certification_code_isSet = !json[QString("certificationCode")].isNull() && m_certification_code_isValid;

    m_certification_name_isValid = ::OpenAPI::fromJsonValue(m_certification_name, json[QString("certificationName")]);
    m_certification_name_isSet = !json[QString("certificationName")].isNull() && m_certification_name_isValid;
}

QString OAIProductCertification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductCertification::asJsonObject() const {
    QJsonObject obj;
    if (m_certification_authority_isSet) {
        obj.insert(QString("certificationAuthority"), ::OpenAPI::toJsonValue(m_certification_authority));
    }
    if (m_certification_code_isSet) {
        obj.insert(QString("certificationCode"), ::OpenAPI::toJsonValue(m_certification_code));
    }
    if (m_certification_name_isSet) {
        obj.insert(QString("certificationName"), ::OpenAPI::toJsonValue(m_certification_name));
    }
    return obj;
}

QString OAIProductCertification::getCertificationAuthority() const {
    return m_certification_authority;
}
void OAIProductCertification::setCertificationAuthority(const QString &certification_authority) {
    m_certification_authority = certification_authority;
    m_certification_authority_isSet = true;
}

bool OAIProductCertification::is_certification_authority_Set() const{
    return m_certification_authority_isSet;
}

bool OAIProductCertification::is_certification_authority_Valid() const{
    return m_certification_authority_isValid;
}

QString OAIProductCertification::getCertificationCode() const {
    return m_certification_code;
}
void OAIProductCertification::setCertificationCode(const QString &certification_code) {
    m_certification_code = certification_code;
    m_certification_code_isSet = true;
}

bool OAIProductCertification::is_certification_code_Set() const{
    return m_certification_code_isSet;
}

bool OAIProductCertification::is_certification_code_Valid() const{
    return m_certification_code_isValid;
}

QString OAIProductCertification::getCertificationName() const {
    return m_certification_name;
}
void OAIProductCertification::setCertificationName(const QString &certification_name) {
    m_certification_name = certification_name;
    m_certification_name_isSet = true;
}

bool OAIProductCertification::is_certification_name_Set() const{
    return m_certification_name_isSet;
}

bool OAIProductCertification::is_certification_name_Valid() const{
    return m_certification_name_isValid;
}

bool OAIProductCertification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_certification_authority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_certification_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_certification_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductCertification::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
