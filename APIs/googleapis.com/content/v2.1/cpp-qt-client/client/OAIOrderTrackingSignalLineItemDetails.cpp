/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderTrackingSignalLineItemDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderTrackingSignalLineItemDetails::OAIOrderTrackingSignalLineItemDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderTrackingSignalLineItemDetails::OAIOrderTrackingSignalLineItemDetails() {
    this->initializeModel();
}

OAIOrderTrackingSignalLineItemDetails::~OAIOrderTrackingSignalLineItemDetails() {}

void OAIOrderTrackingSignalLineItemDetails::initializeModel() {

    m_brand_isSet = false;
    m_brand_isValid = false;

    m_gtin_isSet = false;
    m_gtin_isValid = false;

    m_line_item_id_isSet = false;
    m_line_item_id_isValid = false;

    m_mpn_isSet = false;
    m_mpn_isValid = false;

    m_product_description_isSet = false;
    m_product_description_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_product_title_isSet = false;
    m_product_title_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_upc_isSet = false;
    m_upc_isValid = false;
}

void OAIOrderTrackingSignalLineItemDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderTrackingSignalLineItemDetails::fromJsonObject(QJsonObject json) {

    m_brand_isValid = ::OpenAPI::fromJsonValue(m_brand, json[QString("brand")]);
    m_brand_isSet = !json[QString("brand")].isNull() && m_brand_isValid;

    m_gtin_isValid = ::OpenAPI::fromJsonValue(m_gtin, json[QString("gtin")]);
    m_gtin_isSet = !json[QString("gtin")].isNull() && m_gtin_isValid;

    m_line_item_id_isValid = ::OpenAPI::fromJsonValue(m_line_item_id, json[QString("lineItemId")]);
    m_line_item_id_isSet = !json[QString("lineItemId")].isNull() && m_line_item_id_isValid;

    m_mpn_isValid = ::OpenAPI::fromJsonValue(m_mpn, json[QString("mpn")]);
    m_mpn_isSet = !json[QString("mpn")].isNull() && m_mpn_isValid;

    m_product_description_isValid = ::OpenAPI::fromJsonValue(m_product_description, json[QString("productDescription")]);
    m_product_description_isSet = !json[QString("productDescription")].isNull() && m_product_description_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("productId")]);
    m_product_id_isSet = !json[QString("productId")].isNull() && m_product_id_isValid;

    m_product_title_isValid = ::OpenAPI::fromJsonValue(m_product_title, json[QString("productTitle")]);
    m_product_title_isSet = !json[QString("productTitle")].isNull() && m_product_title_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;

    m_upc_isValid = ::OpenAPI::fromJsonValue(m_upc, json[QString("upc")]);
    m_upc_isSet = !json[QString("upc")].isNull() && m_upc_isValid;
}

QString OAIOrderTrackingSignalLineItemDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderTrackingSignalLineItemDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_brand_isSet) {
        obj.insert(QString("brand"), ::OpenAPI::toJsonValue(m_brand));
    }
    if (m_gtin_isSet) {
        obj.insert(QString("gtin"), ::OpenAPI::toJsonValue(m_gtin));
    }
    if (m_line_item_id_isSet) {
        obj.insert(QString("lineItemId"), ::OpenAPI::toJsonValue(m_line_item_id));
    }
    if (m_mpn_isSet) {
        obj.insert(QString("mpn"), ::OpenAPI::toJsonValue(m_mpn));
    }
    if (m_product_description_isSet) {
        obj.insert(QString("productDescription"), ::OpenAPI::toJsonValue(m_product_description));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("productId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_product_title_isSet) {
        obj.insert(QString("productTitle"), ::OpenAPI::toJsonValue(m_product_title));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_sku_isSet) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_upc_isSet) {
        obj.insert(QString("upc"), ::OpenAPI::toJsonValue(m_upc));
    }
    return obj;
}

QString OAIOrderTrackingSignalLineItemDetails::getBrand() const {
    return m_brand;
}
void OAIOrderTrackingSignalLineItemDetails::setBrand(const QString &brand) {
    m_brand = brand;
    m_brand_isSet = true;
}

bool OAIOrderTrackingSignalLineItemDetails::is_brand_Set() const{
    return m_brand_isSet;
}

bool OAIOrderTrackingSignalLineItemDetails::is_brand_Valid() const{
    return m_brand_isValid;
}

QString OAIOrderTrackingSignalLineItemDetails::getGtin() const {
    return m_gtin;
}
void OAIOrderTrackingSignalLineItemDetails::setGtin(const QString &gtin) {
    m_gtin = gtin;
    m_gtin_isSet = true;
}

bool OAIOrderTrackingSignalLineItemDetails::is_gtin_Set() const{
    return m_gtin_isSet;
}

bool OAIOrderTrackingSignalLineItemDetails::is_gtin_Valid() const{
    return m_gtin_isValid;
}

QString OAIOrderTrackingSignalLineItemDetails::getLineItemId() const {
    return m_line_item_id;
}
void OAIOrderTrackingSignalLineItemDetails::setLineItemId(const QString &line_item_id) {
    m_line_item_id = line_item_id;
    m_line_item_id_isSet = true;
}

bool OAIOrderTrackingSignalLineItemDetails::is_line_item_id_Set() const{
    return m_line_item_id_isSet;
}

bool OAIOrderTrackingSignalLineItemDetails::is_line_item_id_Valid() const{
    return m_line_item_id_isValid;
}

QString OAIOrderTrackingSignalLineItemDetails::getMpn() const {
    return m_mpn;
}
void OAIOrderTrackingSignalLineItemDetails::setMpn(const QString &mpn) {
    m_mpn = mpn;
    m_mpn_isSet = true;
}

bool OAIOrderTrackingSignalLineItemDetails::is_mpn_Set() const{
    return m_mpn_isSet;
}

bool OAIOrderTrackingSignalLineItemDetails::is_mpn_Valid() const{
    return m_mpn_isValid;
}

QString OAIOrderTrackingSignalLineItemDetails::getProductDescription() const {
    return m_product_description;
}
void OAIOrderTrackingSignalLineItemDetails::setProductDescription(const QString &product_description) {
    m_product_description = product_description;
    m_product_description_isSet = true;
}

bool OAIOrderTrackingSignalLineItemDetails::is_product_description_Set() const{
    return m_product_description_isSet;
}

bool OAIOrderTrackingSignalLineItemDetails::is_product_description_Valid() const{
    return m_product_description_isValid;
}

QString OAIOrderTrackingSignalLineItemDetails::getProductId() const {
    return m_product_id;
}
void OAIOrderTrackingSignalLineItemDetails::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIOrderTrackingSignalLineItemDetails::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIOrderTrackingSignalLineItemDetails::is_product_id_Valid() const{
    return m_product_id_isValid;
}

QString OAIOrderTrackingSignalLineItemDetails::getProductTitle() const {
    return m_product_title;
}
void OAIOrderTrackingSignalLineItemDetails::setProductTitle(const QString &product_title) {
    m_product_title = product_title;
    m_product_title_isSet = true;
}

bool OAIOrderTrackingSignalLineItemDetails::is_product_title_Set() const{
    return m_product_title_isSet;
}

bool OAIOrderTrackingSignalLineItemDetails::is_product_title_Valid() const{
    return m_product_title_isValid;
}

QString OAIOrderTrackingSignalLineItemDetails::getQuantity() const {
    return m_quantity;
}
void OAIOrderTrackingSignalLineItemDetails::setQuantity(const QString &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIOrderTrackingSignalLineItemDetails::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIOrderTrackingSignalLineItemDetails::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QString OAIOrderTrackingSignalLineItemDetails::getSku() const {
    return m_sku;
}
void OAIOrderTrackingSignalLineItemDetails::setSku(const QString &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIOrderTrackingSignalLineItemDetails::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIOrderTrackingSignalLineItemDetails::is_sku_Valid() const{
    return m_sku_isValid;
}

QString OAIOrderTrackingSignalLineItemDetails::getUpc() const {
    return m_upc;
}
void OAIOrderTrackingSignalLineItemDetails::setUpc(const QString &upc) {
    m_upc = upc;
    m_upc_isSet = true;
}

bool OAIOrderTrackingSignalLineItemDetails::is_upc_Set() const{
    return m_upc_isSet;
}

bool OAIOrderTrackingSignalLineItemDetails::is_upc_Valid() const{
    return m_upc_isValid;
}

bool OAIOrderTrackingSignalLineItemDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_brand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gtin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mpn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upc_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderTrackingSignalLineItemDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
