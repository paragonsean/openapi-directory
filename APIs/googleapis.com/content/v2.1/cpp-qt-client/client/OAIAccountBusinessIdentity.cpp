/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountBusinessIdentity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountBusinessIdentity::OAIAccountBusinessIdentity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountBusinessIdentity::OAIAccountBusinessIdentity() {
    this->initializeModel();
}

OAIAccountBusinessIdentity::~OAIAccountBusinessIdentity() {}

void OAIAccountBusinessIdentity::initializeModel() {

    m_black_owned_isSet = false;
    m_black_owned_isValid = false;

    m_include_for_promotions_isSet = false;
    m_include_for_promotions_isValid = false;

    m_latino_owned_isSet = false;
    m_latino_owned_isValid = false;

    m_small_business_isSet = false;
    m_small_business_isValid = false;

    m_veteran_owned_isSet = false;
    m_veteran_owned_isValid = false;

    m_women_owned_isSet = false;
    m_women_owned_isValid = false;
}

void OAIAccountBusinessIdentity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountBusinessIdentity::fromJsonObject(QJsonObject json) {

    m_black_owned_isValid = ::OpenAPI::fromJsonValue(m_black_owned, json[QString("blackOwned")]);
    m_black_owned_isSet = !json[QString("blackOwned")].isNull() && m_black_owned_isValid;

    m_include_for_promotions_isValid = ::OpenAPI::fromJsonValue(m_include_for_promotions, json[QString("includeForPromotions")]);
    m_include_for_promotions_isSet = !json[QString("includeForPromotions")].isNull() && m_include_for_promotions_isValid;

    m_latino_owned_isValid = ::OpenAPI::fromJsonValue(m_latino_owned, json[QString("latinoOwned")]);
    m_latino_owned_isSet = !json[QString("latinoOwned")].isNull() && m_latino_owned_isValid;

    m_small_business_isValid = ::OpenAPI::fromJsonValue(m_small_business, json[QString("smallBusiness")]);
    m_small_business_isSet = !json[QString("smallBusiness")].isNull() && m_small_business_isValid;

    m_veteran_owned_isValid = ::OpenAPI::fromJsonValue(m_veteran_owned, json[QString("veteranOwned")]);
    m_veteran_owned_isSet = !json[QString("veteranOwned")].isNull() && m_veteran_owned_isValid;

    m_women_owned_isValid = ::OpenAPI::fromJsonValue(m_women_owned, json[QString("womenOwned")]);
    m_women_owned_isSet = !json[QString("womenOwned")].isNull() && m_women_owned_isValid;
}

QString OAIAccountBusinessIdentity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountBusinessIdentity::asJsonObject() const {
    QJsonObject obj;
    if (m_black_owned.isSet()) {
        obj.insert(QString("blackOwned"), ::OpenAPI::toJsonValue(m_black_owned));
    }
    if (m_include_for_promotions_isSet) {
        obj.insert(QString("includeForPromotions"), ::OpenAPI::toJsonValue(m_include_for_promotions));
    }
    if (m_latino_owned.isSet()) {
        obj.insert(QString("latinoOwned"), ::OpenAPI::toJsonValue(m_latino_owned));
    }
    if (m_small_business.isSet()) {
        obj.insert(QString("smallBusiness"), ::OpenAPI::toJsonValue(m_small_business));
    }
    if (m_veteran_owned.isSet()) {
        obj.insert(QString("veteranOwned"), ::OpenAPI::toJsonValue(m_veteran_owned));
    }
    if (m_women_owned.isSet()) {
        obj.insert(QString("womenOwned"), ::OpenAPI::toJsonValue(m_women_owned));
    }
    return obj;
}

OAIAccountIdentityType OAIAccountBusinessIdentity::getBlackOwned() const {
    return m_black_owned;
}
void OAIAccountBusinessIdentity::setBlackOwned(const OAIAccountIdentityType &black_owned) {
    m_black_owned = black_owned;
    m_black_owned_isSet = true;
}

bool OAIAccountBusinessIdentity::is_black_owned_Set() const{
    return m_black_owned_isSet;
}

bool OAIAccountBusinessIdentity::is_black_owned_Valid() const{
    return m_black_owned_isValid;
}

bool OAIAccountBusinessIdentity::isIncludeForPromotions() const {
    return m_include_for_promotions;
}
void OAIAccountBusinessIdentity::setIncludeForPromotions(const bool &include_for_promotions) {
    m_include_for_promotions = include_for_promotions;
    m_include_for_promotions_isSet = true;
}

bool OAIAccountBusinessIdentity::is_include_for_promotions_Set() const{
    return m_include_for_promotions_isSet;
}

bool OAIAccountBusinessIdentity::is_include_for_promotions_Valid() const{
    return m_include_for_promotions_isValid;
}

OAIAccountIdentityType OAIAccountBusinessIdentity::getLatinoOwned() const {
    return m_latino_owned;
}
void OAIAccountBusinessIdentity::setLatinoOwned(const OAIAccountIdentityType &latino_owned) {
    m_latino_owned = latino_owned;
    m_latino_owned_isSet = true;
}

bool OAIAccountBusinessIdentity::is_latino_owned_Set() const{
    return m_latino_owned_isSet;
}

bool OAIAccountBusinessIdentity::is_latino_owned_Valid() const{
    return m_latino_owned_isValid;
}

OAIAccountIdentityType OAIAccountBusinessIdentity::getSmallBusiness() const {
    return m_small_business;
}
void OAIAccountBusinessIdentity::setSmallBusiness(const OAIAccountIdentityType &small_business) {
    m_small_business = small_business;
    m_small_business_isSet = true;
}

bool OAIAccountBusinessIdentity::is_small_business_Set() const{
    return m_small_business_isSet;
}

bool OAIAccountBusinessIdentity::is_small_business_Valid() const{
    return m_small_business_isValid;
}

OAIAccountIdentityType OAIAccountBusinessIdentity::getVeteranOwned() const {
    return m_veteran_owned;
}
void OAIAccountBusinessIdentity::setVeteranOwned(const OAIAccountIdentityType &veteran_owned) {
    m_veteran_owned = veteran_owned;
    m_veteran_owned_isSet = true;
}

bool OAIAccountBusinessIdentity::is_veteran_owned_Set() const{
    return m_veteran_owned_isSet;
}

bool OAIAccountBusinessIdentity::is_veteran_owned_Valid() const{
    return m_veteran_owned_isValid;
}

OAIAccountIdentityType OAIAccountBusinessIdentity::getWomenOwned() const {
    return m_women_owned;
}
void OAIAccountBusinessIdentity::setWomenOwned(const OAIAccountIdentityType &women_owned) {
    m_women_owned = women_owned;
    m_women_owned_isSet = true;
}

bool OAIAccountBusinessIdentity::is_women_owned_Set() const{
    return m_women_owned_isSet;
}

bool OAIAccountBusinessIdentity::is_women_owned_Valid() const{
    return m_women_owned_isValid;
}

bool OAIAccountBusinessIdentity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_black_owned.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_for_promotions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latino_owned.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_small_business.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_veteran_owned.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_women_owned.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountBusinessIdentity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
