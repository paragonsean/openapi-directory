/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuiltInSimpleAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuiltInSimpleAction::OAIBuiltInSimpleAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuiltInSimpleAction::OAIBuiltInSimpleAction() {
    this->initializeModel();
}

OAIBuiltInSimpleAction::~OAIBuiltInSimpleAction() {}

void OAIBuiltInSimpleAction::initializeModel() {

    m_additional_content_isSet = false;
    m_additional_content_isValid = false;

    m_attribute_code_isSet = false;
    m_attribute_code_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIBuiltInSimpleAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuiltInSimpleAction::fromJsonObject(QJsonObject json) {

    m_additional_content_isValid = ::OpenAPI::fromJsonValue(m_additional_content, json[QString("additionalContent")]);
    m_additional_content_isSet = !json[QString("additionalContent")].isNull() && m_additional_content_isValid;

    m_attribute_code_isValid = ::OpenAPI::fromJsonValue(m_attribute_code, json[QString("attributeCode")]);
    m_attribute_code_isSet = !json[QString("attributeCode")].isNull() && m_attribute_code_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIBuiltInSimpleAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuiltInSimpleAction::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_content.isSet()) {
        obj.insert(QString("additionalContent"), ::OpenAPI::toJsonValue(m_additional_content));
    }
    if (m_attribute_code_isSet) {
        obj.insert(QString("attributeCode"), ::OpenAPI::toJsonValue(m_attribute_code));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIBuiltInSimpleActionAdditionalContent OAIBuiltInSimpleAction::getAdditionalContent() const {
    return m_additional_content;
}
void OAIBuiltInSimpleAction::setAdditionalContent(const OAIBuiltInSimpleActionAdditionalContent &additional_content) {
    m_additional_content = additional_content;
    m_additional_content_isSet = true;
}

bool OAIBuiltInSimpleAction::is_additional_content_Set() const{
    return m_additional_content_isSet;
}

bool OAIBuiltInSimpleAction::is_additional_content_Valid() const{
    return m_additional_content_isValid;
}

QString OAIBuiltInSimpleAction::getAttributeCode() const {
    return m_attribute_code;
}
void OAIBuiltInSimpleAction::setAttributeCode(const QString &attribute_code) {
    m_attribute_code = attribute_code;
    m_attribute_code_isSet = true;
}

bool OAIBuiltInSimpleAction::is_attribute_code_Set() const{
    return m_attribute_code_isSet;
}

bool OAIBuiltInSimpleAction::is_attribute_code_Valid() const{
    return m_attribute_code_isValid;
}

QString OAIBuiltInSimpleAction::getType() const {
    return m_type;
}
void OAIBuiltInSimpleAction::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIBuiltInSimpleAction::is_type_Set() const{
    return m_type_isSet;
}

bool OAIBuiltInSimpleAction::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIBuiltInSimpleAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_content.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuiltInSimpleAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
