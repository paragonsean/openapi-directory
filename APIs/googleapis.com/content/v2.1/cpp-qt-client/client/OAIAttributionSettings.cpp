/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributionSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributionSettings::OAIAttributionSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributionSettings::OAIAttributionSettings() {
    this->initializeModel();
}

OAIAttributionSettings::~OAIAttributionSettings() {}

void OAIAttributionSettings::initializeModel() {

    m_attribution_lookback_window_in_days_isSet = false;
    m_attribution_lookback_window_in_days_isValid = false;

    m_attribution_model_isSet = false;
    m_attribution_model_isValid = false;

    m_conversion_type_isSet = false;
    m_conversion_type_isValid = false;
}

void OAIAttributionSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributionSettings::fromJsonObject(QJsonObject json) {

    m_attribution_lookback_window_in_days_isValid = ::OpenAPI::fromJsonValue(m_attribution_lookback_window_in_days, json[QString("attributionLookbackWindowInDays")]);
    m_attribution_lookback_window_in_days_isSet = !json[QString("attributionLookbackWindowInDays")].isNull() && m_attribution_lookback_window_in_days_isValid;

    m_attribution_model_isValid = ::OpenAPI::fromJsonValue(m_attribution_model, json[QString("attributionModel")]);
    m_attribution_model_isSet = !json[QString("attributionModel")].isNull() && m_attribution_model_isValid;

    m_conversion_type_isValid = ::OpenAPI::fromJsonValue(m_conversion_type, json[QString("conversionType")]);
    m_conversion_type_isSet = !json[QString("conversionType")].isNull() && m_conversion_type_isValid;
}

QString OAIAttributionSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributionSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_attribution_lookback_window_in_days_isSet) {
        obj.insert(QString("attributionLookbackWindowInDays"), ::OpenAPI::toJsonValue(m_attribution_lookback_window_in_days));
    }
    if (m_attribution_model_isSet) {
        obj.insert(QString("attributionModel"), ::OpenAPI::toJsonValue(m_attribution_model));
    }
    if (m_conversion_type.size() > 0) {
        obj.insert(QString("conversionType"), ::OpenAPI::toJsonValue(m_conversion_type));
    }
    return obj;
}

qint32 OAIAttributionSettings::getAttributionLookbackWindowInDays() const {
    return m_attribution_lookback_window_in_days;
}
void OAIAttributionSettings::setAttributionLookbackWindowInDays(const qint32 &attribution_lookback_window_in_days) {
    m_attribution_lookback_window_in_days = attribution_lookback_window_in_days;
    m_attribution_lookback_window_in_days_isSet = true;
}

bool OAIAttributionSettings::is_attribution_lookback_window_in_days_Set() const{
    return m_attribution_lookback_window_in_days_isSet;
}

bool OAIAttributionSettings::is_attribution_lookback_window_in_days_Valid() const{
    return m_attribution_lookback_window_in_days_isValid;
}

QString OAIAttributionSettings::getAttributionModel() const {
    return m_attribution_model;
}
void OAIAttributionSettings::setAttributionModel(const QString &attribution_model) {
    m_attribution_model = attribution_model;
    m_attribution_model_isSet = true;
}

bool OAIAttributionSettings::is_attribution_model_Set() const{
    return m_attribution_model_isSet;
}

bool OAIAttributionSettings::is_attribution_model_Valid() const{
    return m_attribution_model_isValid;
}

QList<OAIAttributionSettingsConversionType> OAIAttributionSettings::getConversionType() const {
    return m_conversion_type;
}
void OAIAttributionSettings::setConversionType(const QList<OAIAttributionSettingsConversionType> &conversion_type) {
    m_conversion_type = conversion_type;
    m_conversion_type_isSet = true;
}

bool OAIAttributionSettings::is_conversion_type_Set() const{
    return m_conversion_type_isSet;
}

bool OAIAttributionSettings::is_conversion_type_Valid() const{
    return m_conversion_type_isValid;
}

bool OAIAttributionSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribution_lookback_window_in_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribution_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversion_type.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributionSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
