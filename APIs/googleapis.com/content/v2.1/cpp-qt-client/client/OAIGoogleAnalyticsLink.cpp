/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsLink::OAIGoogleAnalyticsLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsLink::OAIGoogleAnalyticsLink() {
    this->initializeModel();
}

OAIGoogleAnalyticsLink::~OAIGoogleAnalyticsLink() {}

void OAIGoogleAnalyticsLink::initializeModel() {

    m_attribution_settings_isSet = false;
    m_attribution_settings_isValid = false;

    m_property_id_isSet = false;
    m_property_id_isValid = false;

    m_property_name_isSet = false;
    m_property_name_isValid = false;
}

void OAIGoogleAnalyticsLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsLink::fromJsonObject(QJsonObject json) {

    m_attribution_settings_isValid = ::OpenAPI::fromJsonValue(m_attribution_settings, json[QString("attributionSettings")]);
    m_attribution_settings_isSet = !json[QString("attributionSettings")].isNull() && m_attribution_settings_isValid;

    m_property_id_isValid = ::OpenAPI::fromJsonValue(m_property_id, json[QString("propertyId")]);
    m_property_id_isSet = !json[QString("propertyId")].isNull() && m_property_id_isValid;

    m_property_name_isValid = ::OpenAPI::fromJsonValue(m_property_name, json[QString("propertyName")]);
    m_property_name_isSet = !json[QString("propertyName")].isNull() && m_property_name_isValid;
}

QString OAIGoogleAnalyticsLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsLink::asJsonObject() const {
    QJsonObject obj;
    if (m_attribution_settings.isSet()) {
        obj.insert(QString("attributionSettings"), ::OpenAPI::toJsonValue(m_attribution_settings));
    }
    if (m_property_id_isSet) {
        obj.insert(QString("propertyId"), ::OpenAPI::toJsonValue(m_property_id));
    }
    if (m_property_name_isSet) {
        obj.insert(QString("propertyName"), ::OpenAPI::toJsonValue(m_property_name));
    }
    return obj;
}

OAIAttributionSettings OAIGoogleAnalyticsLink::getAttributionSettings() const {
    return m_attribution_settings;
}
void OAIGoogleAnalyticsLink::setAttributionSettings(const OAIAttributionSettings &attribution_settings) {
    m_attribution_settings = attribution_settings;
    m_attribution_settings_isSet = true;
}

bool OAIGoogleAnalyticsLink::is_attribution_settings_Set() const{
    return m_attribution_settings_isSet;
}

bool OAIGoogleAnalyticsLink::is_attribution_settings_Valid() const{
    return m_attribution_settings_isValid;
}

QString OAIGoogleAnalyticsLink::getPropertyId() const {
    return m_property_id;
}
void OAIGoogleAnalyticsLink::setPropertyId(const QString &property_id) {
    m_property_id = property_id;
    m_property_id_isSet = true;
}

bool OAIGoogleAnalyticsLink::is_property_id_Set() const{
    return m_property_id_isSet;
}

bool OAIGoogleAnalyticsLink::is_property_id_Valid() const{
    return m_property_id_isValid;
}

QString OAIGoogleAnalyticsLink::getPropertyName() const {
    return m_property_name;
}
void OAIGoogleAnalyticsLink::setPropertyName(const QString &property_name) {
    m_property_name = property_name;
    m_property_name_isSet = true;
}

bool OAIGoogleAnalyticsLink::is_property_name_Set() const{
    return m_property_name_isSet;
}

bool OAIGoogleAnalyticsLink::is_property_name_Valid() const{
    return m_property_name_isValid;
}

bool OAIGoogleAnalyticsLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribution_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
