/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReturnAddress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReturnAddress::OAIReturnAddress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReturnAddress::OAIReturnAddress() {
    this->initializeModel();
}

OAIReturnAddress::~OAIReturnAddress() {}

void OAIReturnAddress::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_return_address_id_isSet = false;
    m_return_address_id_isValid = false;
}

void OAIReturnAddress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReturnAddress::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phoneNumber")]);
    m_phone_number_isSet = !json[QString("phoneNumber")].isNull() && m_phone_number_isValid;

    m_return_address_id_isValid = ::OpenAPI::fromJsonValue(m_return_address_id, json[QString("returnAddressId")]);
    m_return_address_id_isSet = !json[QString("returnAddressId")].isNull() && m_return_address_id_isValid;
}

QString OAIReturnAddress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReturnAddress::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_return_address_id_isSet) {
        obj.insert(QString("returnAddressId"), ::OpenAPI::toJsonValue(m_return_address_id));
    }
    return obj;
}

OAIReturnAddressAddress OAIReturnAddress::getAddress() const {
    return m_address;
}
void OAIReturnAddress::setAddress(const OAIReturnAddressAddress &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIReturnAddress::is_address_Set() const{
    return m_address_isSet;
}

bool OAIReturnAddress::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIReturnAddress::getCountry() const {
    return m_country;
}
void OAIReturnAddress::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIReturnAddress::is_country_Set() const{
    return m_country_isSet;
}

bool OAIReturnAddress::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIReturnAddress::getKind() const {
    return m_kind;
}
void OAIReturnAddress::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIReturnAddress::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIReturnAddress::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIReturnAddress::getLabel() const {
    return m_label;
}
void OAIReturnAddress::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIReturnAddress::is_label_Set() const{
    return m_label_isSet;
}

bool OAIReturnAddress::is_label_Valid() const{
    return m_label_isValid;
}

QString OAIReturnAddress::getPhoneNumber() const {
    return m_phone_number;
}
void OAIReturnAddress::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIReturnAddress::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIReturnAddress::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIReturnAddress::getReturnAddressId() const {
    return m_return_address_id;
}
void OAIReturnAddress::setReturnAddressId(const QString &return_address_id) {
    m_return_address_id = return_address_id;
    m_return_address_id_isSet = true;
}

bool OAIReturnAddress::is_return_address_id_Set() const{
    return m_return_address_id_isSet;
}

bool OAIReturnAddress::is_return_address_id_Valid() const{
    return m_return_address_id_isValid;
}

bool OAIReturnAddress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_address_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReturnAddress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
