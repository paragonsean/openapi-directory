/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILiasettingsCustomBatchRequestEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILiasettingsCustomBatchRequestEntry::OAILiasettingsCustomBatchRequestEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILiasettingsCustomBatchRequestEntry::OAILiasettingsCustomBatchRequestEntry() {
    this->initializeModel();
}

OAILiasettingsCustomBatchRequestEntry::~OAILiasettingsCustomBatchRequestEntry() {}

void OAILiasettingsCustomBatchRequestEntry::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_batch_id_isSet = false;
    m_batch_id_isValid = false;

    m_contact_email_isSet = false;
    m_contact_email_isValid = false;

    m_contact_name_isSet = false;
    m_contact_name_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_gmb_email_isSet = false;
    m_gmb_email_isValid = false;

    m_lia_settings_isSet = false;
    m_lia_settings_isValid = false;

    m_merchant_id_isSet = false;
    m_merchant_id_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;

    m_omnichannel_experience_isSet = false;
    m_omnichannel_experience_isValid = false;

    m_pos_data_provider_id_isSet = false;
    m_pos_data_provider_id_isValid = false;

    m_pos_external_account_id_isSet = false;
    m_pos_external_account_id_isValid = false;
}

void OAILiasettingsCustomBatchRequestEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILiasettingsCustomBatchRequestEntry::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_batch_id_isValid = ::OpenAPI::fromJsonValue(m_batch_id, json[QString("batchId")]);
    m_batch_id_isSet = !json[QString("batchId")].isNull() && m_batch_id_isValid;

    m_contact_email_isValid = ::OpenAPI::fromJsonValue(m_contact_email, json[QString("contactEmail")]);
    m_contact_email_isSet = !json[QString("contactEmail")].isNull() && m_contact_email_isValid;

    m_contact_name_isValid = ::OpenAPI::fromJsonValue(m_contact_name, json[QString("contactName")]);
    m_contact_name_isSet = !json[QString("contactName")].isNull() && m_contact_name_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_gmb_email_isValid = ::OpenAPI::fromJsonValue(m_gmb_email, json[QString("gmbEmail")]);
    m_gmb_email_isSet = !json[QString("gmbEmail")].isNull() && m_gmb_email_isValid;

    m_lia_settings_isValid = ::OpenAPI::fromJsonValue(m_lia_settings, json[QString("liaSettings")]);
    m_lia_settings_isSet = !json[QString("liaSettings")].isNull() && m_lia_settings_isValid;

    m_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_id, json[QString("merchantId")]);
    m_merchant_id_isSet = !json[QString("merchantId")].isNull() && m_merchant_id_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_omnichannel_experience_isValid = ::OpenAPI::fromJsonValue(m_omnichannel_experience, json[QString("omnichannelExperience")]);
    m_omnichannel_experience_isSet = !json[QString("omnichannelExperience")].isNull() && m_omnichannel_experience_isValid;

    m_pos_data_provider_id_isValid = ::OpenAPI::fromJsonValue(m_pos_data_provider_id, json[QString("posDataProviderId")]);
    m_pos_data_provider_id_isSet = !json[QString("posDataProviderId")].isNull() && m_pos_data_provider_id_isValid;

    m_pos_external_account_id_isValid = ::OpenAPI::fromJsonValue(m_pos_external_account_id, json[QString("posExternalAccountId")]);
    m_pos_external_account_id_isSet = !json[QString("posExternalAccountId")].isNull() && m_pos_external_account_id_isValid;
}

QString OAILiasettingsCustomBatchRequestEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILiasettingsCustomBatchRequestEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_batch_id_isSet) {
        obj.insert(QString("batchId"), ::OpenAPI::toJsonValue(m_batch_id));
    }
    if (m_contact_email_isSet) {
        obj.insert(QString("contactEmail"), ::OpenAPI::toJsonValue(m_contact_email));
    }
    if (m_contact_name_isSet) {
        obj.insert(QString("contactName"), ::OpenAPI::toJsonValue(m_contact_name));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_gmb_email_isSet) {
        obj.insert(QString("gmbEmail"), ::OpenAPI::toJsonValue(m_gmb_email));
    }
    if (m_lia_settings.isSet()) {
        obj.insert(QString("liaSettings"), ::OpenAPI::toJsonValue(m_lia_settings));
    }
    if (m_merchant_id_isSet) {
        obj.insert(QString("merchantId"), ::OpenAPI::toJsonValue(m_merchant_id));
    }
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_omnichannel_experience.isSet()) {
        obj.insert(QString("omnichannelExperience"), ::OpenAPI::toJsonValue(m_omnichannel_experience));
    }
    if (m_pos_data_provider_id_isSet) {
        obj.insert(QString("posDataProviderId"), ::OpenAPI::toJsonValue(m_pos_data_provider_id));
    }
    if (m_pos_external_account_id_isSet) {
        obj.insert(QString("posExternalAccountId"), ::OpenAPI::toJsonValue(m_pos_external_account_id));
    }
    return obj;
}

QString OAILiasettingsCustomBatchRequestEntry::getAccountId() const {
    return m_account_id;
}
void OAILiasettingsCustomBatchRequestEntry::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAILiasettingsCustomBatchRequestEntry::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAILiasettingsCustomBatchRequestEntry::is_account_id_Valid() const{
    return m_account_id_isValid;
}

qint32 OAILiasettingsCustomBatchRequestEntry::getBatchId() const {
    return m_batch_id;
}
void OAILiasettingsCustomBatchRequestEntry::setBatchId(const qint32 &batch_id) {
    m_batch_id = batch_id;
    m_batch_id_isSet = true;
}

bool OAILiasettingsCustomBatchRequestEntry::is_batch_id_Set() const{
    return m_batch_id_isSet;
}

bool OAILiasettingsCustomBatchRequestEntry::is_batch_id_Valid() const{
    return m_batch_id_isValid;
}

QString OAILiasettingsCustomBatchRequestEntry::getContactEmail() const {
    return m_contact_email;
}
void OAILiasettingsCustomBatchRequestEntry::setContactEmail(const QString &contact_email) {
    m_contact_email = contact_email;
    m_contact_email_isSet = true;
}

bool OAILiasettingsCustomBatchRequestEntry::is_contact_email_Set() const{
    return m_contact_email_isSet;
}

bool OAILiasettingsCustomBatchRequestEntry::is_contact_email_Valid() const{
    return m_contact_email_isValid;
}

QString OAILiasettingsCustomBatchRequestEntry::getContactName() const {
    return m_contact_name;
}
void OAILiasettingsCustomBatchRequestEntry::setContactName(const QString &contact_name) {
    m_contact_name = contact_name;
    m_contact_name_isSet = true;
}

bool OAILiasettingsCustomBatchRequestEntry::is_contact_name_Set() const{
    return m_contact_name_isSet;
}

bool OAILiasettingsCustomBatchRequestEntry::is_contact_name_Valid() const{
    return m_contact_name_isValid;
}

QString OAILiasettingsCustomBatchRequestEntry::getCountry() const {
    return m_country;
}
void OAILiasettingsCustomBatchRequestEntry::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAILiasettingsCustomBatchRequestEntry::is_country_Set() const{
    return m_country_isSet;
}

bool OAILiasettingsCustomBatchRequestEntry::is_country_Valid() const{
    return m_country_isValid;
}

QString OAILiasettingsCustomBatchRequestEntry::getGmbEmail() const {
    return m_gmb_email;
}
void OAILiasettingsCustomBatchRequestEntry::setGmbEmail(const QString &gmb_email) {
    m_gmb_email = gmb_email;
    m_gmb_email_isSet = true;
}

bool OAILiasettingsCustomBatchRequestEntry::is_gmb_email_Set() const{
    return m_gmb_email_isSet;
}

bool OAILiasettingsCustomBatchRequestEntry::is_gmb_email_Valid() const{
    return m_gmb_email_isValid;
}

OAILiaSettings OAILiasettingsCustomBatchRequestEntry::getLiaSettings() const {
    return m_lia_settings;
}
void OAILiasettingsCustomBatchRequestEntry::setLiaSettings(const OAILiaSettings &lia_settings) {
    m_lia_settings = lia_settings;
    m_lia_settings_isSet = true;
}

bool OAILiasettingsCustomBatchRequestEntry::is_lia_settings_Set() const{
    return m_lia_settings_isSet;
}

bool OAILiasettingsCustomBatchRequestEntry::is_lia_settings_Valid() const{
    return m_lia_settings_isValid;
}

QString OAILiasettingsCustomBatchRequestEntry::getMerchantId() const {
    return m_merchant_id;
}
void OAILiasettingsCustomBatchRequestEntry::setMerchantId(const QString &merchant_id) {
    m_merchant_id = merchant_id;
    m_merchant_id_isSet = true;
}

bool OAILiasettingsCustomBatchRequestEntry::is_merchant_id_Set() const{
    return m_merchant_id_isSet;
}

bool OAILiasettingsCustomBatchRequestEntry::is_merchant_id_Valid() const{
    return m_merchant_id_isValid;
}

QString OAILiasettingsCustomBatchRequestEntry::getMethod() const {
    return m_method;
}
void OAILiasettingsCustomBatchRequestEntry::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAILiasettingsCustomBatchRequestEntry::is_method_Set() const{
    return m_method_isSet;
}

bool OAILiasettingsCustomBatchRequestEntry::is_method_Valid() const{
    return m_method_isValid;
}

OAILiaOmnichannelExperience OAILiasettingsCustomBatchRequestEntry::getOmnichannelExperience() const {
    return m_omnichannel_experience;
}
void OAILiasettingsCustomBatchRequestEntry::setOmnichannelExperience(const OAILiaOmnichannelExperience &omnichannel_experience) {
    m_omnichannel_experience = omnichannel_experience;
    m_omnichannel_experience_isSet = true;
}

bool OAILiasettingsCustomBatchRequestEntry::is_omnichannel_experience_Set() const{
    return m_omnichannel_experience_isSet;
}

bool OAILiasettingsCustomBatchRequestEntry::is_omnichannel_experience_Valid() const{
    return m_omnichannel_experience_isValid;
}

QString OAILiasettingsCustomBatchRequestEntry::getPosDataProviderId() const {
    return m_pos_data_provider_id;
}
void OAILiasettingsCustomBatchRequestEntry::setPosDataProviderId(const QString &pos_data_provider_id) {
    m_pos_data_provider_id = pos_data_provider_id;
    m_pos_data_provider_id_isSet = true;
}

bool OAILiasettingsCustomBatchRequestEntry::is_pos_data_provider_id_Set() const{
    return m_pos_data_provider_id_isSet;
}

bool OAILiasettingsCustomBatchRequestEntry::is_pos_data_provider_id_Valid() const{
    return m_pos_data_provider_id_isValid;
}

QString OAILiasettingsCustomBatchRequestEntry::getPosExternalAccountId() const {
    return m_pos_external_account_id;
}
void OAILiasettingsCustomBatchRequestEntry::setPosExternalAccountId(const QString &pos_external_account_id) {
    m_pos_external_account_id = pos_external_account_id;
    m_pos_external_account_id_isSet = true;
}

bool OAILiasettingsCustomBatchRequestEntry::is_pos_external_account_id_Set() const{
    return m_pos_external_account_id_isSet;
}

bool OAILiasettingsCustomBatchRequestEntry::is_pos_external_account_id_Valid() const{
    return m_pos_external_account_id_isValid;
}

bool OAILiasettingsCustomBatchRequestEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_batch_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gmb_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lia_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_omnichannel_experience.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pos_data_provider_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pos_external_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILiasettingsCustomBatchRequestEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
