/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPromotionPromotionStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPromotionPromotionStatus::OAIPromotionPromotionStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPromotionPromotionStatus::OAIPromotionPromotionStatus() {
    this->initializeModel();
}

OAIPromotionPromotionStatus::~OAIPromotionPromotionStatus() {}

void OAIPromotionPromotionStatus::initializeModel() {

    m_creation_date_isSet = false;
    m_creation_date_isValid = false;

    m_destination_statuses_isSet = false;
    m_destination_statuses_isValid = false;

    m_last_update_date_isSet = false;
    m_last_update_date_isValid = false;

    m_promotion_issue_isSet = false;
    m_promotion_issue_isValid = false;
}

void OAIPromotionPromotionStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPromotionPromotionStatus::fromJsonObject(QJsonObject json) {

    m_creation_date_isValid = ::OpenAPI::fromJsonValue(m_creation_date, json[QString("creationDate")]);
    m_creation_date_isSet = !json[QString("creationDate")].isNull() && m_creation_date_isValid;

    m_destination_statuses_isValid = ::OpenAPI::fromJsonValue(m_destination_statuses, json[QString("destinationStatuses")]);
    m_destination_statuses_isSet = !json[QString("destinationStatuses")].isNull() && m_destination_statuses_isValid;

    m_last_update_date_isValid = ::OpenAPI::fromJsonValue(m_last_update_date, json[QString("lastUpdateDate")]);
    m_last_update_date_isSet = !json[QString("lastUpdateDate")].isNull() && m_last_update_date_isValid;

    m_promotion_issue_isValid = ::OpenAPI::fromJsonValue(m_promotion_issue, json[QString("promotionIssue")]);
    m_promotion_issue_isSet = !json[QString("promotionIssue")].isNull() && m_promotion_issue_isValid;
}

QString OAIPromotionPromotionStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPromotionPromotionStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_date_isSet) {
        obj.insert(QString("creationDate"), ::OpenAPI::toJsonValue(m_creation_date));
    }
    if (m_destination_statuses.size() > 0) {
        obj.insert(QString("destinationStatuses"), ::OpenAPI::toJsonValue(m_destination_statuses));
    }
    if (m_last_update_date_isSet) {
        obj.insert(QString("lastUpdateDate"), ::OpenAPI::toJsonValue(m_last_update_date));
    }
    if (m_promotion_issue.size() > 0) {
        obj.insert(QString("promotionIssue"), ::OpenAPI::toJsonValue(m_promotion_issue));
    }
    return obj;
}

QString OAIPromotionPromotionStatus::getCreationDate() const {
    return m_creation_date;
}
void OAIPromotionPromotionStatus::setCreationDate(const QString &creation_date) {
    m_creation_date = creation_date;
    m_creation_date_isSet = true;
}

bool OAIPromotionPromotionStatus::is_creation_date_Set() const{
    return m_creation_date_isSet;
}

bool OAIPromotionPromotionStatus::is_creation_date_Valid() const{
    return m_creation_date_isValid;
}

QList<OAIPromotionPromotionStatusDestinationStatus> OAIPromotionPromotionStatus::getDestinationStatuses() const {
    return m_destination_statuses;
}
void OAIPromotionPromotionStatus::setDestinationStatuses(const QList<OAIPromotionPromotionStatusDestinationStatus> &destination_statuses) {
    m_destination_statuses = destination_statuses;
    m_destination_statuses_isSet = true;
}

bool OAIPromotionPromotionStatus::is_destination_statuses_Set() const{
    return m_destination_statuses_isSet;
}

bool OAIPromotionPromotionStatus::is_destination_statuses_Valid() const{
    return m_destination_statuses_isValid;
}

QString OAIPromotionPromotionStatus::getLastUpdateDate() const {
    return m_last_update_date;
}
void OAIPromotionPromotionStatus::setLastUpdateDate(const QString &last_update_date) {
    m_last_update_date = last_update_date;
    m_last_update_date_isSet = true;
}

bool OAIPromotionPromotionStatus::is_last_update_date_Set() const{
    return m_last_update_date_isSet;
}

bool OAIPromotionPromotionStatus::is_last_update_date_Valid() const{
    return m_last_update_date_isValid;
}

QList<OAIPromotionPromotionStatusPromotionIssue> OAIPromotionPromotionStatus::getPromotionIssue() const {
    return m_promotion_issue;
}
void OAIPromotionPromotionStatus::setPromotionIssue(const QList<OAIPromotionPromotionStatusPromotionIssue> &promotion_issue) {
    m_promotion_issue = promotion_issue;
    m_promotion_issue_isSet = true;
}

bool OAIPromotionPromotionStatus::is_promotion_issue_Set() const{
    return m_promotion_issue_isSet;
}

bool OAIPromotionPromotionStatus::is_promotion_issue_Valid() const{
    return m_promotion_issue_isValid;
}

bool OAIPromotionPromotionStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_statuses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_issue.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPromotionPromotionStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
