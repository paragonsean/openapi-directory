/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderTrackingSignal.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderTrackingSignal::OAIOrderTrackingSignal(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderTrackingSignal::OAIOrderTrackingSignal() {
    this->initializeModel();
}

OAIOrderTrackingSignal::~OAIOrderTrackingSignal() {}

void OAIOrderTrackingSignal::initializeModel() {

    m_customer_shipping_fee_isSet = false;
    m_customer_shipping_fee_isValid = false;

    m_delivery_postal_code_isSet = false;
    m_delivery_postal_code_isValid = false;

    m_delivery_region_code_isSet = false;
    m_delivery_region_code_isValid = false;

    m_line_items_isSet = false;
    m_line_items_isValid = false;

    m_merchant_id_isSet = false;
    m_merchant_id_isValid = false;

    m_order_created_time_isSet = false;
    m_order_created_time_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_order_tracking_signal_id_isSet = false;
    m_order_tracking_signal_id_isValid = false;

    m_shipment_line_item_mapping_isSet = false;
    m_shipment_line_item_mapping_isValid = false;

    m_shipping_info_isSet = false;
    m_shipping_info_isValid = false;
}

void OAIOrderTrackingSignal::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderTrackingSignal::fromJsonObject(QJsonObject json) {

    m_customer_shipping_fee_isValid = ::OpenAPI::fromJsonValue(m_customer_shipping_fee, json[QString("customerShippingFee")]);
    m_customer_shipping_fee_isSet = !json[QString("customerShippingFee")].isNull() && m_customer_shipping_fee_isValid;

    m_delivery_postal_code_isValid = ::OpenAPI::fromJsonValue(m_delivery_postal_code, json[QString("deliveryPostalCode")]);
    m_delivery_postal_code_isSet = !json[QString("deliveryPostalCode")].isNull() && m_delivery_postal_code_isValid;

    m_delivery_region_code_isValid = ::OpenAPI::fromJsonValue(m_delivery_region_code, json[QString("deliveryRegionCode")]);
    m_delivery_region_code_isSet = !json[QString("deliveryRegionCode")].isNull() && m_delivery_region_code_isValid;

    m_line_items_isValid = ::OpenAPI::fromJsonValue(m_line_items, json[QString("lineItems")]);
    m_line_items_isSet = !json[QString("lineItems")].isNull() && m_line_items_isValid;

    m_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_id, json[QString("merchantId")]);
    m_merchant_id_isSet = !json[QString("merchantId")].isNull() && m_merchant_id_isValid;

    m_order_created_time_isValid = ::OpenAPI::fromJsonValue(m_order_created_time, json[QString("orderCreatedTime")]);
    m_order_created_time_isSet = !json[QString("orderCreatedTime")].isNull() && m_order_created_time_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("orderId")]);
    m_order_id_isSet = !json[QString("orderId")].isNull() && m_order_id_isValid;

    m_order_tracking_signal_id_isValid = ::OpenAPI::fromJsonValue(m_order_tracking_signal_id, json[QString("orderTrackingSignalId")]);
    m_order_tracking_signal_id_isSet = !json[QString("orderTrackingSignalId")].isNull() && m_order_tracking_signal_id_isValid;

    m_shipment_line_item_mapping_isValid = ::OpenAPI::fromJsonValue(m_shipment_line_item_mapping, json[QString("shipmentLineItemMapping")]);
    m_shipment_line_item_mapping_isSet = !json[QString("shipmentLineItemMapping")].isNull() && m_shipment_line_item_mapping_isValid;

    m_shipping_info_isValid = ::OpenAPI::fromJsonValue(m_shipping_info, json[QString("shippingInfo")]);
    m_shipping_info_isSet = !json[QString("shippingInfo")].isNull() && m_shipping_info_isValid;
}

QString OAIOrderTrackingSignal::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderTrackingSignal::asJsonObject() const {
    QJsonObject obj;
    if (m_customer_shipping_fee.isSet()) {
        obj.insert(QString("customerShippingFee"), ::OpenAPI::toJsonValue(m_customer_shipping_fee));
    }
    if (m_delivery_postal_code_isSet) {
        obj.insert(QString("deliveryPostalCode"), ::OpenAPI::toJsonValue(m_delivery_postal_code));
    }
    if (m_delivery_region_code_isSet) {
        obj.insert(QString("deliveryRegionCode"), ::OpenAPI::toJsonValue(m_delivery_region_code));
    }
    if (m_line_items.size() > 0) {
        obj.insert(QString("lineItems"), ::OpenAPI::toJsonValue(m_line_items));
    }
    if (m_merchant_id_isSet) {
        obj.insert(QString("merchantId"), ::OpenAPI::toJsonValue(m_merchant_id));
    }
    if (m_order_created_time_isSet) {
        obj.insert(QString("orderCreatedTime"), ::OpenAPI::toJsonValue(m_order_created_time));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("orderId"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_order_tracking_signal_id_isSet) {
        obj.insert(QString("orderTrackingSignalId"), ::OpenAPI::toJsonValue(m_order_tracking_signal_id));
    }
    if (m_shipment_line_item_mapping.size() > 0) {
        obj.insert(QString("shipmentLineItemMapping"), ::OpenAPI::toJsonValue(m_shipment_line_item_mapping));
    }
    if (m_shipping_info.size() > 0) {
        obj.insert(QString("shippingInfo"), ::OpenAPI::toJsonValue(m_shipping_info));
    }
    return obj;
}

OAIPriceAmount OAIOrderTrackingSignal::getCustomerShippingFee() const {
    return m_customer_shipping_fee;
}
void OAIOrderTrackingSignal::setCustomerShippingFee(const OAIPriceAmount &customer_shipping_fee) {
    m_customer_shipping_fee = customer_shipping_fee;
    m_customer_shipping_fee_isSet = true;
}

bool OAIOrderTrackingSignal::is_customer_shipping_fee_Set() const{
    return m_customer_shipping_fee_isSet;
}

bool OAIOrderTrackingSignal::is_customer_shipping_fee_Valid() const{
    return m_customer_shipping_fee_isValid;
}

QString OAIOrderTrackingSignal::getDeliveryPostalCode() const {
    return m_delivery_postal_code;
}
void OAIOrderTrackingSignal::setDeliveryPostalCode(const QString &delivery_postal_code) {
    m_delivery_postal_code = delivery_postal_code;
    m_delivery_postal_code_isSet = true;
}

bool OAIOrderTrackingSignal::is_delivery_postal_code_Set() const{
    return m_delivery_postal_code_isSet;
}

bool OAIOrderTrackingSignal::is_delivery_postal_code_Valid() const{
    return m_delivery_postal_code_isValid;
}

QString OAIOrderTrackingSignal::getDeliveryRegionCode() const {
    return m_delivery_region_code;
}
void OAIOrderTrackingSignal::setDeliveryRegionCode(const QString &delivery_region_code) {
    m_delivery_region_code = delivery_region_code;
    m_delivery_region_code_isSet = true;
}

bool OAIOrderTrackingSignal::is_delivery_region_code_Set() const{
    return m_delivery_region_code_isSet;
}

bool OAIOrderTrackingSignal::is_delivery_region_code_Valid() const{
    return m_delivery_region_code_isValid;
}

QList<OAIOrderTrackingSignalLineItemDetails> OAIOrderTrackingSignal::getLineItems() const {
    return m_line_items;
}
void OAIOrderTrackingSignal::setLineItems(const QList<OAIOrderTrackingSignalLineItemDetails> &line_items) {
    m_line_items = line_items;
    m_line_items_isSet = true;
}

bool OAIOrderTrackingSignal::is_line_items_Set() const{
    return m_line_items_isSet;
}

bool OAIOrderTrackingSignal::is_line_items_Valid() const{
    return m_line_items_isValid;
}

QString OAIOrderTrackingSignal::getMerchantId() const {
    return m_merchant_id;
}
void OAIOrderTrackingSignal::setMerchantId(const QString &merchant_id) {
    m_merchant_id = merchant_id;
    m_merchant_id_isSet = true;
}

bool OAIOrderTrackingSignal::is_merchant_id_Set() const{
    return m_merchant_id_isSet;
}

bool OAIOrderTrackingSignal::is_merchant_id_Valid() const{
    return m_merchant_id_isValid;
}

QDateTime OAIOrderTrackingSignal::getOrderCreatedTime() const {
    return m_order_created_time;
}
void OAIOrderTrackingSignal::setOrderCreatedTime(const QDateTime &order_created_time) {
    m_order_created_time = order_created_time;
    m_order_created_time_isSet = true;
}

bool OAIOrderTrackingSignal::is_order_created_time_Set() const{
    return m_order_created_time_isSet;
}

bool OAIOrderTrackingSignal::is_order_created_time_Valid() const{
    return m_order_created_time_isValid;
}

QString OAIOrderTrackingSignal::getOrderId() const {
    return m_order_id;
}
void OAIOrderTrackingSignal::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrderTrackingSignal::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrderTrackingSignal::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAIOrderTrackingSignal::getOrderTrackingSignalId() const {
    return m_order_tracking_signal_id;
}
void OAIOrderTrackingSignal::setOrderTrackingSignalId(const QString &order_tracking_signal_id) {
    m_order_tracking_signal_id = order_tracking_signal_id;
    m_order_tracking_signal_id_isSet = true;
}

bool OAIOrderTrackingSignal::is_order_tracking_signal_id_Set() const{
    return m_order_tracking_signal_id_isSet;
}

bool OAIOrderTrackingSignal::is_order_tracking_signal_id_Valid() const{
    return m_order_tracking_signal_id_isValid;
}

QList<OAIOrderTrackingSignalShipmentLineItemMapping> OAIOrderTrackingSignal::getShipmentLineItemMapping() const {
    return m_shipment_line_item_mapping;
}
void OAIOrderTrackingSignal::setShipmentLineItemMapping(const QList<OAIOrderTrackingSignalShipmentLineItemMapping> &shipment_line_item_mapping) {
    m_shipment_line_item_mapping = shipment_line_item_mapping;
    m_shipment_line_item_mapping_isSet = true;
}

bool OAIOrderTrackingSignal::is_shipment_line_item_mapping_Set() const{
    return m_shipment_line_item_mapping_isSet;
}

bool OAIOrderTrackingSignal::is_shipment_line_item_mapping_Valid() const{
    return m_shipment_line_item_mapping_isValid;
}

QList<OAIOrderTrackingSignalShippingInfo> OAIOrderTrackingSignal::getShippingInfo() const {
    return m_shipping_info;
}
void OAIOrderTrackingSignal::setShippingInfo(const QList<OAIOrderTrackingSignalShippingInfo> &shipping_info) {
    m_shipping_info = shipping_info;
    m_shipping_info_isSet = true;
}

bool OAIOrderTrackingSignal::is_shipping_info_Set() const{
    return m_shipping_info_isSet;
}

bool OAIOrderTrackingSignal::is_shipping_info_Valid() const{
    return m_shipping_info_isValid;
}

bool OAIOrderTrackingSignal::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customer_shipping_fee.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_region_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_tracking_signal_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_line_item_mapping.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_info.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderTrackingSignal::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
