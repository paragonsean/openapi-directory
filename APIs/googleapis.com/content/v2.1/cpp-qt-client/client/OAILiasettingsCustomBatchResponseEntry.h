/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILiasettingsCustomBatchResponseEntry.h
 *
 * 
 */

#ifndef OAILiasettingsCustomBatchResponseEntry_H
#define OAILiasettingsCustomBatchResponseEntry_H

#include <QJsonObject>

#include "OAIErrors.h"
#include "OAIGmbAccounts.h"
#include "OAILiaOmnichannelExperience.h"
#include "OAILiaSettings.h"
#include "OAIPosDataProviders.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIErrors;
class OAIGmbAccounts;
class OAILiaSettings;
class OAILiaOmnichannelExperience;
class OAIPosDataProviders;

class OAILiasettingsCustomBatchResponseEntry : public OAIObject {
public:
    OAILiasettingsCustomBatchResponseEntry();
    OAILiasettingsCustomBatchResponseEntry(QString json);
    ~OAILiasettingsCustomBatchResponseEntry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBatchId() const;
    void setBatchId(const qint32 &batch_id);
    bool is_batch_id_Set() const;
    bool is_batch_id_Valid() const;

    OAIErrors getErrors() const;
    void setErrors(const OAIErrors &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    OAIGmbAccounts getGmbAccounts() const;
    void setGmbAccounts(const OAIGmbAccounts &gmb_accounts);
    bool is_gmb_accounts_Set() const;
    bool is_gmb_accounts_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAILiaSettings getLiaSettings() const;
    void setLiaSettings(const OAILiaSettings &lia_settings);
    bool is_lia_settings_Set() const;
    bool is_lia_settings_Valid() const;

    OAILiaOmnichannelExperience getOmnichannelExperience() const;
    void setOmnichannelExperience(const OAILiaOmnichannelExperience &omnichannel_experience);
    bool is_omnichannel_experience_Set() const;
    bool is_omnichannel_experience_Valid() const;

    QList<OAIPosDataProviders> getPosDataProviders() const;
    void setPosDataProviders(const QList<OAIPosDataProviders> &pos_data_providers);
    bool is_pos_data_providers_Set() const;
    bool is_pos_data_providers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_batch_id;
    bool m_batch_id_isSet;
    bool m_batch_id_isValid;

    OAIErrors m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    OAIGmbAccounts m_gmb_accounts;
    bool m_gmb_accounts_isSet;
    bool m_gmb_accounts_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAILiaSettings m_lia_settings;
    bool m_lia_settings_isSet;
    bool m_lia_settings_isValid;

    OAILiaOmnichannelExperience m_omnichannel_experience;
    bool m_omnichannel_experience_isSet;
    bool m_omnichannel_experience_isValid;

    QList<OAIPosDataProviders> m_pos_data_providers;
    bool m_pos_data_providers_isSet;
    bool m_pos_data_providers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILiasettingsCustomBatchResponseEntry)

#endif // OAILiasettingsCustomBatchResponseEntry_H
