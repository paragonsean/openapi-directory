/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActionReason.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActionReason::OAIActionReason(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActionReason::OAIActionReason() {
    this->initializeModel();
}

OAIActionReason::~OAIActionReason() {}

void OAIActionReason::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_detail_isSet = false;
    m_detail_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;
}

void OAIActionReason::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActionReason::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_detail_isValid = ::OpenAPI::fromJsonValue(m_detail, json[QString("detail")]);
    m_detail_isSet = !json[QString("detail")].isNull() && m_detail_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;
}

QString OAIActionReason::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActionReason::asJsonObject() const {
    QJsonObject obj;
    if (m_action.isSet()) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_detail_isSet) {
        obj.insert(QString("detail"), ::OpenAPI::toJsonValue(m_detail));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    return obj;
}

OAIAction OAIActionReason::getAction() const {
    return m_action;
}
void OAIActionReason::setAction(const OAIAction &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIActionReason::is_action_Set() const{
    return m_action_isSet;
}

bool OAIActionReason::is_action_Valid() const{
    return m_action_isValid;
}

QString OAIActionReason::getDetail() const {
    return m_detail;
}
void OAIActionReason::setDetail(const QString &detail) {
    m_detail = detail;
    m_detail_isSet = true;
}

bool OAIActionReason::is_detail_Set() const{
    return m_detail_isSet;
}

bool OAIActionReason::is_detail_Valid() const{
    return m_detail_isValid;
}

QString OAIActionReason::getMessage() const {
    return m_message;
}
void OAIActionReason::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIActionReason::is_message_Set() const{
    return m_message_isSet;
}

bool OAIActionReason::is_message_Valid() const{
    return m_message_isValid;
}

bool OAIActionReason::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_detail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActionReason::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
