/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICompetitiveVisibility.h
 *
 * Fields related to [competitive visibility reports] (https://support.google.com/merchants/answer/11366442).
 */

#ifndef OAICompetitiveVisibility_H
#define OAICompetitiveVisibility_H

#include <QJsonObject>

#include "OAIDate.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDate;

class OAICompetitiveVisibility : public OAIObject {
public:
    OAICompetitiveVisibility();
    OAICompetitiveVisibility(QString json);
    ~OAICompetitiveVisibility() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAdsOrganicRatio() const;
    void setAdsOrganicRatio(const double &ads_organic_ratio);
    bool is_ads_organic_ratio_Set() const;
    bool is_ads_organic_ratio_Valid() const;

    double getCategoryBenchmarkVisibilityTrend() const;
    void setCategoryBenchmarkVisibilityTrend(const double &category_benchmark_visibility_trend);
    bool is_category_benchmark_visibility_trend_Set() const;
    bool is_category_benchmark_visibility_trend_Valid() const;

    QString getCategoryId() const;
    void setCategoryId(const QString &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    OAIDate getDate() const;
    void setDate(const OAIDate &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    double getHigherPositionRate() const;
    void setHigherPositionRate(const double &higher_position_rate);
    bool is_higher_position_rate_Set() const;
    bool is_higher_position_rate_Valid() const;

    bool isIsYourDomain() const;
    void setIsYourDomain(const bool &is_your_domain);
    bool is_is_your_domain_Set() const;
    bool is_is_your_domain_Valid() const;

    double getPageOverlapRate() const;
    void setPageOverlapRate(const double &page_overlap_rate);
    bool is_page_overlap_rate_Set() const;
    bool is_page_overlap_rate_Valid() const;

    QString getRank() const;
    void setRank(const QString &rank);
    bool is_rank_Set() const;
    bool is_rank_Valid() const;

    double getRelativeVisibility() const;
    void setRelativeVisibility(const double &relative_visibility);
    bool is_relative_visibility_Set() const;
    bool is_relative_visibility_Valid() const;

    QString getTrafficSource() const;
    void setTrafficSource(const QString &traffic_source);
    bool is_traffic_source_Set() const;
    bool is_traffic_source_Valid() const;

    double getYourDomainVisibilityTrend() const;
    void setYourDomainVisibilityTrend(const double &your_domain_visibility_trend);
    bool is_your_domain_visibility_trend_Set() const;
    bool is_your_domain_visibility_trend_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_ads_organic_ratio;
    bool m_ads_organic_ratio_isSet;
    bool m_ads_organic_ratio_isValid;

    double m_category_benchmark_visibility_trend;
    bool m_category_benchmark_visibility_trend_isSet;
    bool m_category_benchmark_visibility_trend_isValid;

    QString m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    OAIDate m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    double m_higher_position_rate;
    bool m_higher_position_rate_isSet;
    bool m_higher_position_rate_isValid;

    bool m_is_your_domain;
    bool m_is_your_domain_isSet;
    bool m_is_your_domain_isValid;

    double m_page_overlap_rate;
    bool m_page_overlap_rate_isSet;
    bool m_page_overlap_rate_isValid;

    QString m_rank;
    bool m_rank_isSet;
    bool m_rank_isValid;

    double m_relative_visibility;
    bool m_relative_visibility_isSet;
    bool m_relative_visibility_isValid;

    QString m_traffic_source;
    bool m_traffic_source_isSet;
    bool m_traffic_source_isValid;

    double m_your_domain_visibility_trend;
    bool m_your_domain_visibility_trend_isSet;
    bool m_your_domain_visibility_trend_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICompetitiveVisibility)

#endif // OAICompetitiveVisibility_H
