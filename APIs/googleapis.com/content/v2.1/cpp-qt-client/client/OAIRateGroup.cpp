/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRateGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRateGroup::OAIRateGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRateGroup::OAIRateGroup() {
    this->initializeModel();
}

OAIRateGroup::~OAIRateGroup() {}

void OAIRateGroup::initializeModel() {

    m_applicable_shipping_labels_isSet = false;
    m_applicable_shipping_labels_isValid = false;

    m_carrier_rates_isSet = false;
    m_carrier_rates_isValid = false;

    m_main_table_isSet = false;
    m_main_table_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_single_value_isSet = false;
    m_single_value_isValid = false;

    m_subtables_isSet = false;
    m_subtables_isValid = false;
}

void OAIRateGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRateGroup::fromJsonObject(QJsonObject json) {

    m_applicable_shipping_labels_isValid = ::OpenAPI::fromJsonValue(m_applicable_shipping_labels, json[QString("applicableShippingLabels")]);
    m_applicable_shipping_labels_isSet = !json[QString("applicableShippingLabels")].isNull() && m_applicable_shipping_labels_isValid;

    m_carrier_rates_isValid = ::OpenAPI::fromJsonValue(m_carrier_rates, json[QString("carrierRates")]);
    m_carrier_rates_isSet = !json[QString("carrierRates")].isNull() && m_carrier_rates_isValid;

    m_main_table_isValid = ::OpenAPI::fromJsonValue(m_main_table, json[QString("mainTable")]);
    m_main_table_isSet = !json[QString("mainTable")].isNull() && m_main_table_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_single_value_isValid = ::OpenAPI::fromJsonValue(m_single_value, json[QString("singleValue")]);
    m_single_value_isSet = !json[QString("singleValue")].isNull() && m_single_value_isValid;

    m_subtables_isValid = ::OpenAPI::fromJsonValue(m_subtables, json[QString("subtables")]);
    m_subtables_isSet = !json[QString("subtables")].isNull() && m_subtables_isValid;
}

QString OAIRateGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRateGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_applicable_shipping_labels.size() > 0) {
        obj.insert(QString("applicableShippingLabels"), ::OpenAPI::toJsonValue(m_applicable_shipping_labels));
    }
    if (m_carrier_rates.size() > 0) {
        obj.insert(QString("carrierRates"), ::OpenAPI::toJsonValue(m_carrier_rates));
    }
    if (m_main_table.isSet()) {
        obj.insert(QString("mainTable"), ::OpenAPI::toJsonValue(m_main_table));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_single_value.isSet()) {
        obj.insert(QString("singleValue"), ::OpenAPI::toJsonValue(m_single_value));
    }
    if (m_subtables.size() > 0) {
        obj.insert(QString("subtables"), ::OpenAPI::toJsonValue(m_subtables));
    }
    return obj;
}

QList<QString> OAIRateGroup::getApplicableShippingLabels() const {
    return m_applicable_shipping_labels;
}
void OAIRateGroup::setApplicableShippingLabels(const QList<QString> &applicable_shipping_labels) {
    m_applicable_shipping_labels = applicable_shipping_labels;
    m_applicable_shipping_labels_isSet = true;
}

bool OAIRateGroup::is_applicable_shipping_labels_Set() const{
    return m_applicable_shipping_labels_isSet;
}

bool OAIRateGroup::is_applicable_shipping_labels_Valid() const{
    return m_applicable_shipping_labels_isValid;
}

QList<OAICarrierRate> OAIRateGroup::getCarrierRates() const {
    return m_carrier_rates;
}
void OAIRateGroup::setCarrierRates(const QList<OAICarrierRate> &carrier_rates) {
    m_carrier_rates = carrier_rates;
    m_carrier_rates_isSet = true;
}

bool OAIRateGroup::is_carrier_rates_Set() const{
    return m_carrier_rates_isSet;
}

bool OAIRateGroup::is_carrier_rates_Valid() const{
    return m_carrier_rates_isValid;
}

OAITable OAIRateGroup::getMainTable() const {
    return m_main_table;
}
void OAIRateGroup::setMainTable(const OAITable &main_table) {
    m_main_table = main_table;
    m_main_table_isSet = true;
}

bool OAIRateGroup::is_main_table_Set() const{
    return m_main_table_isSet;
}

bool OAIRateGroup::is_main_table_Valid() const{
    return m_main_table_isValid;
}

QString OAIRateGroup::getName() const {
    return m_name;
}
void OAIRateGroup::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRateGroup::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRateGroup::is_name_Valid() const{
    return m_name_isValid;
}

OAIValue OAIRateGroup::getSingleValue() const {
    return m_single_value;
}
void OAIRateGroup::setSingleValue(const OAIValue &single_value) {
    m_single_value = single_value;
    m_single_value_isSet = true;
}

bool OAIRateGroup::is_single_value_Set() const{
    return m_single_value_isSet;
}

bool OAIRateGroup::is_single_value_Valid() const{
    return m_single_value_isValid;
}

QList<OAITable> OAIRateGroup::getSubtables() const {
    return m_subtables;
}
void OAIRateGroup::setSubtables(const QList<OAITable> &subtables) {
    m_subtables = subtables;
    m_subtables_isSet = true;
}

bool OAIRateGroup::is_subtables_Set() const{
    return m_subtables_isSet;
}

bool OAIRateGroup::is_subtables_Valid() const{
    return m_subtables_isValid;
}

bool OAIRateGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_applicable_shipping_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_carrier_rates.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_main_table.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_single_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtables.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRateGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
