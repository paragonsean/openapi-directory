/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICarriersCarrier.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICarriersCarrier::OAICarriersCarrier(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICarriersCarrier::OAICarriersCarrier() {
    this->initializeModel();
}

OAICarriersCarrier::~OAICarriersCarrier() {}

void OAICarriersCarrier::initializeModel() {

    m_country_isSet = false;
    m_country_isValid = false;

    m_edd_services_isSet = false;
    m_edd_services_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_services_isSet = false;
    m_services_isValid = false;
}

void OAICarriersCarrier::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICarriersCarrier::fromJsonObject(QJsonObject json) {

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_edd_services_isValid = ::OpenAPI::fromJsonValue(m_edd_services, json[QString("eddServices")]);
    m_edd_services_isSet = !json[QString("eddServices")].isNull() && m_edd_services_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_services_isValid = ::OpenAPI::fromJsonValue(m_services, json[QString("services")]);
    m_services_isSet = !json[QString("services")].isNull() && m_services_isValid;
}

QString OAICarriersCarrier::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICarriersCarrier::asJsonObject() const {
    QJsonObject obj;
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_edd_services.size() > 0) {
        obj.insert(QString("eddServices"), ::OpenAPI::toJsonValue(m_edd_services));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_services.size() > 0) {
        obj.insert(QString("services"), ::OpenAPI::toJsonValue(m_services));
    }
    return obj;
}

QString OAICarriersCarrier::getCountry() const {
    return m_country;
}
void OAICarriersCarrier::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAICarriersCarrier::is_country_Set() const{
    return m_country_isSet;
}

bool OAICarriersCarrier::is_country_Valid() const{
    return m_country_isValid;
}

QList<QString> OAICarriersCarrier::getEddServices() const {
    return m_edd_services;
}
void OAICarriersCarrier::setEddServices(const QList<QString> &edd_services) {
    m_edd_services = edd_services;
    m_edd_services_isSet = true;
}

bool OAICarriersCarrier::is_edd_services_Set() const{
    return m_edd_services_isSet;
}

bool OAICarriersCarrier::is_edd_services_Valid() const{
    return m_edd_services_isValid;
}

QString OAICarriersCarrier::getName() const {
    return m_name;
}
void OAICarriersCarrier::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICarriersCarrier::is_name_Set() const{
    return m_name_isSet;
}

bool OAICarriersCarrier::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAICarriersCarrier::getServices() const {
    return m_services;
}
void OAICarriersCarrier::setServices(const QList<QString> &services) {
    m_services = services;
    m_services_isSet = true;
}

bool OAICarriersCarrier::is_services_Set() const{
    return m_services_isSet;
}

bool OAICarriersCarrier::is_services_Valid() const{
    return m_services_isValid;
}

bool OAICarriersCarrier::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_edd_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICarriersCarrier::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
