/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPubsubNotificationSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPubsubNotificationSettings::OAIPubsubNotificationSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPubsubNotificationSettings::OAIPubsubNotificationSettings() {
    this->initializeModel();
}

OAIPubsubNotificationSettings::~OAIPubsubNotificationSettings() {}

void OAIPubsubNotificationSettings::initializeModel() {

    m_cloud_topic_name_isSet = false;
    m_cloud_topic_name_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_registered_events_isSet = false;
    m_registered_events_isValid = false;
}

void OAIPubsubNotificationSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPubsubNotificationSettings::fromJsonObject(QJsonObject json) {

    m_cloud_topic_name_isValid = ::OpenAPI::fromJsonValue(m_cloud_topic_name, json[QString("cloudTopicName")]);
    m_cloud_topic_name_isSet = !json[QString("cloudTopicName")].isNull() && m_cloud_topic_name_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_registered_events_isValid = ::OpenAPI::fromJsonValue(m_registered_events, json[QString("registeredEvents")]);
    m_registered_events_isSet = !json[QString("registeredEvents")].isNull() && m_registered_events_isValid;
}

QString OAIPubsubNotificationSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPubsubNotificationSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_topic_name_isSet) {
        obj.insert(QString("cloudTopicName"), ::OpenAPI::toJsonValue(m_cloud_topic_name));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_registered_events.size() > 0) {
        obj.insert(QString("registeredEvents"), ::OpenAPI::toJsonValue(m_registered_events));
    }
    return obj;
}

QString OAIPubsubNotificationSettings::getCloudTopicName() const {
    return m_cloud_topic_name;
}
void OAIPubsubNotificationSettings::setCloudTopicName(const QString &cloud_topic_name) {
    m_cloud_topic_name = cloud_topic_name;
    m_cloud_topic_name_isSet = true;
}

bool OAIPubsubNotificationSettings::is_cloud_topic_name_Set() const{
    return m_cloud_topic_name_isSet;
}

bool OAIPubsubNotificationSettings::is_cloud_topic_name_Valid() const{
    return m_cloud_topic_name_isValid;
}

QString OAIPubsubNotificationSettings::getKind() const {
    return m_kind;
}
void OAIPubsubNotificationSettings::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIPubsubNotificationSettings::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIPubsubNotificationSettings::is_kind_Valid() const{
    return m_kind_isValid;
}

QList<QString> OAIPubsubNotificationSettings::getRegisteredEvents() const {
    return m_registered_events;
}
void OAIPubsubNotificationSettings::setRegisteredEvents(const QList<QString> &registered_events) {
    m_registered_events = registered_events;
    m_registered_events_isSet = true;
}

bool OAIPubsubNotificationSettings::is_registered_events_Set() const{
    return m_registered_events_isSet;
}

bool OAIPubsubNotificationSettings::is_registered_events_Valid() const{
    return m_registered_events_isValid;
}

bool OAIPubsubNotificationSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_topic_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registered_events.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPubsubNotificationSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
