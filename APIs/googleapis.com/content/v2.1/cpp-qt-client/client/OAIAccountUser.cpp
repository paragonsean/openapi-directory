/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountUser::OAIAccountUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountUser::OAIAccountUser() {
    this->initializeModel();
}

OAIAccountUser::~OAIAccountUser() {}

void OAIAccountUser::initializeModel() {

    m_admin_isSet = false;
    m_admin_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_order_manager_isSet = false;
    m_order_manager_isValid = false;

    m_payments_analyst_isSet = false;
    m_payments_analyst_isValid = false;

    m_payments_manager_isSet = false;
    m_payments_manager_isValid = false;

    m_reporting_manager_isSet = false;
    m_reporting_manager_isValid = false;
}

void OAIAccountUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountUser::fromJsonObject(QJsonObject json) {

    m_admin_isValid = ::OpenAPI::fromJsonValue(m_admin, json[QString("admin")]);
    m_admin_isSet = !json[QString("admin")].isNull() && m_admin_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("emailAddress")]);
    m_email_address_isSet = !json[QString("emailAddress")].isNull() && m_email_address_isValid;

    m_order_manager_isValid = ::OpenAPI::fromJsonValue(m_order_manager, json[QString("orderManager")]);
    m_order_manager_isSet = !json[QString("orderManager")].isNull() && m_order_manager_isValid;

    m_payments_analyst_isValid = ::OpenAPI::fromJsonValue(m_payments_analyst, json[QString("paymentsAnalyst")]);
    m_payments_analyst_isSet = !json[QString("paymentsAnalyst")].isNull() && m_payments_analyst_isValid;

    m_payments_manager_isValid = ::OpenAPI::fromJsonValue(m_payments_manager, json[QString("paymentsManager")]);
    m_payments_manager_isSet = !json[QString("paymentsManager")].isNull() && m_payments_manager_isValid;

    m_reporting_manager_isValid = ::OpenAPI::fromJsonValue(m_reporting_manager, json[QString("reportingManager")]);
    m_reporting_manager_isSet = !json[QString("reportingManager")].isNull() && m_reporting_manager_isValid;
}

QString OAIAccountUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountUser::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_isSet) {
        obj.insert(QString("admin"), ::OpenAPI::toJsonValue(m_admin));
    }
    if (m_email_address_isSet) {
        obj.insert(QString("emailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_order_manager_isSet) {
        obj.insert(QString("orderManager"), ::OpenAPI::toJsonValue(m_order_manager));
    }
    if (m_payments_analyst_isSet) {
        obj.insert(QString("paymentsAnalyst"), ::OpenAPI::toJsonValue(m_payments_analyst));
    }
    if (m_payments_manager_isSet) {
        obj.insert(QString("paymentsManager"), ::OpenAPI::toJsonValue(m_payments_manager));
    }
    if (m_reporting_manager_isSet) {
        obj.insert(QString("reportingManager"), ::OpenAPI::toJsonValue(m_reporting_manager));
    }
    return obj;
}

bool OAIAccountUser::isAdmin() const {
    return m_admin;
}
void OAIAccountUser::setAdmin(const bool &admin) {
    m_admin = admin;
    m_admin_isSet = true;
}

bool OAIAccountUser::is_admin_Set() const{
    return m_admin_isSet;
}

bool OAIAccountUser::is_admin_Valid() const{
    return m_admin_isValid;
}

QString OAIAccountUser::getEmailAddress() const {
    return m_email_address;
}
void OAIAccountUser::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIAccountUser::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIAccountUser::is_email_address_Valid() const{
    return m_email_address_isValid;
}

bool OAIAccountUser::isOrderManager() const {
    return m_order_manager;
}
void OAIAccountUser::setOrderManager(const bool &order_manager) {
    m_order_manager = order_manager;
    m_order_manager_isSet = true;
}

bool OAIAccountUser::is_order_manager_Set() const{
    return m_order_manager_isSet;
}

bool OAIAccountUser::is_order_manager_Valid() const{
    return m_order_manager_isValid;
}

bool OAIAccountUser::isPaymentsAnalyst() const {
    return m_payments_analyst;
}
void OAIAccountUser::setPaymentsAnalyst(const bool &payments_analyst) {
    m_payments_analyst = payments_analyst;
    m_payments_analyst_isSet = true;
}

bool OAIAccountUser::is_payments_analyst_Set() const{
    return m_payments_analyst_isSet;
}

bool OAIAccountUser::is_payments_analyst_Valid() const{
    return m_payments_analyst_isValid;
}

bool OAIAccountUser::isPaymentsManager() const {
    return m_payments_manager;
}
void OAIAccountUser::setPaymentsManager(const bool &payments_manager) {
    m_payments_manager = payments_manager;
    m_payments_manager_isSet = true;
}

bool OAIAccountUser::is_payments_manager_Set() const{
    return m_payments_manager_isSet;
}

bool OAIAccountUser::is_payments_manager_Valid() const{
    return m_payments_manager_isValid;
}

bool OAIAccountUser::isReportingManager() const {
    return m_reporting_manager;
}
void OAIAccountUser::setReportingManager(const bool &reporting_manager) {
    m_reporting_manager = reporting_manager;
    m_reporting_manager_isSet = true;
}

bool OAIAccountUser::is_reporting_manager_Set() const{
    return m_reporting_manager_isSet;
}

bool OAIAccountUser::is_reporting_manager_Valid() const{
    return m_reporting_manager_isValid;
}

bool OAIAccountUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_manager_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payments_analyst_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payments_manager_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reporting_manager_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
