/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMerchantCenterDestination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMerchantCenterDestination::OAIMerchantCenterDestination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMerchantCenterDestination::OAIMerchantCenterDestination() {
    this->initializeModel();
}

OAIMerchantCenterDestination::~OAIMerchantCenterDestination() {}

void OAIMerchantCenterDestination::initializeModel() {

    m_attribution_settings_isSet = false;
    m_attribution_settings_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_destination_id_isSet = false;
    m_destination_id_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;
}

void OAIMerchantCenterDestination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMerchantCenterDestination::fromJsonObject(QJsonObject json) {

    m_attribution_settings_isValid = ::OpenAPI::fromJsonValue(m_attribution_settings, json[QString("attributionSettings")]);
    m_attribution_settings_isSet = !json[QString("attributionSettings")].isNull() && m_attribution_settings_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_destination_id_isValid = ::OpenAPI::fromJsonValue(m_destination_id, json[QString("destinationId")]);
    m_destination_id_isSet = !json[QString("destinationId")].isNull() && m_destination_id_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;
}

QString OAIMerchantCenterDestination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMerchantCenterDestination::asJsonObject() const {
    QJsonObject obj;
    if (m_attribution_settings.isSet()) {
        obj.insert(QString("attributionSettings"), ::OpenAPI::toJsonValue(m_attribution_settings));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_destination_id_isSet) {
        obj.insert(QString("destinationId"), ::OpenAPI::toJsonValue(m_destination_id));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    return obj;
}

OAIAttributionSettings OAIMerchantCenterDestination::getAttributionSettings() const {
    return m_attribution_settings;
}
void OAIMerchantCenterDestination::setAttributionSettings(const OAIAttributionSettings &attribution_settings) {
    m_attribution_settings = attribution_settings;
    m_attribution_settings_isSet = true;
}

bool OAIMerchantCenterDestination::is_attribution_settings_Set() const{
    return m_attribution_settings_isSet;
}

bool OAIMerchantCenterDestination::is_attribution_settings_Valid() const{
    return m_attribution_settings_isValid;
}

QString OAIMerchantCenterDestination::getCurrencyCode() const {
    return m_currency_code;
}
void OAIMerchantCenterDestination::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIMerchantCenterDestination::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIMerchantCenterDestination::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QString OAIMerchantCenterDestination::getDestinationId() const {
    return m_destination_id;
}
void OAIMerchantCenterDestination::setDestinationId(const QString &destination_id) {
    m_destination_id = destination_id;
    m_destination_id_isSet = true;
}

bool OAIMerchantCenterDestination::is_destination_id_Set() const{
    return m_destination_id_isSet;
}

bool OAIMerchantCenterDestination::is_destination_id_Valid() const{
    return m_destination_id_isValid;
}

QString OAIMerchantCenterDestination::getDisplayName() const {
    return m_display_name;
}
void OAIMerchantCenterDestination::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIMerchantCenterDestination::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIMerchantCenterDestination::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIMerchantCenterDestination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribution_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMerchantCenterDestination::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
