/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILiaPosDataProvider.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILiaPosDataProvider::OAILiaPosDataProvider(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILiaPosDataProvider::OAILiaPosDataProvider() {
    this->initializeModel();
}

OAILiaPosDataProvider::~OAILiaPosDataProvider() {}

void OAILiaPosDataProvider::initializeModel() {

    m_pos_data_provider_id_isSet = false;
    m_pos_data_provider_id_isValid = false;

    m_pos_external_account_id_isSet = false;
    m_pos_external_account_id_isValid = false;
}

void OAILiaPosDataProvider::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILiaPosDataProvider::fromJsonObject(QJsonObject json) {

    m_pos_data_provider_id_isValid = ::OpenAPI::fromJsonValue(m_pos_data_provider_id, json[QString("posDataProviderId")]);
    m_pos_data_provider_id_isSet = !json[QString("posDataProviderId")].isNull() && m_pos_data_provider_id_isValid;

    m_pos_external_account_id_isValid = ::OpenAPI::fromJsonValue(m_pos_external_account_id, json[QString("posExternalAccountId")]);
    m_pos_external_account_id_isSet = !json[QString("posExternalAccountId")].isNull() && m_pos_external_account_id_isValid;
}

QString OAILiaPosDataProvider::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILiaPosDataProvider::asJsonObject() const {
    QJsonObject obj;
    if (m_pos_data_provider_id_isSet) {
        obj.insert(QString("posDataProviderId"), ::OpenAPI::toJsonValue(m_pos_data_provider_id));
    }
    if (m_pos_external_account_id_isSet) {
        obj.insert(QString("posExternalAccountId"), ::OpenAPI::toJsonValue(m_pos_external_account_id));
    }
    return obj;
}

QString OAILiaPosDataProvider::getPosDataProviderId() const {
    return m_pos_data_provider_id;
}
void OAILiaPosDataProvider::setPosDataProviderId(const QString &pos_data_provider_id) {
    m_pos_data_provider_id = pos_data_provider_id;
    m_pos_data_provider_id_isSet = true;
}

bool OAILiaPosDataProvider::is_pos_data_provider_id_Set() const{
    return m_pos_data_provider_id_isSet;
}

bool OAILiaPosDataProvider::is_pos_data_provider_id_Valid() const{
    return m_pos_data_provider_id_isValid;
}

QString OAILiaPosDataProvider::getPosExternalAccountId() const {
    return m_pos_external_account_id;
}
void OAILiaPosDataProvider::setPosExternalAccountId(const QString &pos_external_account_id) {
    m_pos_external_account_id = pos_external_account_id;
    m_pos_external_account_id_isSet = true;
}

bool OAILiaPosDataProvider::is_pos_external_account_id_Set() const{
    return m_pos_external_account_id_isSet;
}

bool OAILiaPosDataProvider::is_pos_external_account_id_Valid() const{
    return m_pos_external_account_id_isValid;
}

bool OAILiaPosDataProvider::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pos_data_provider_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pos_external_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILiaPosDataProvider::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
