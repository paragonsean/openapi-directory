/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountLabel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountLabel::OAIAccountLabel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountLabel::OAIAccountLabel() {
    this->initializeModel();
}

OAIAccountLabel::~OAIAccountLabel() {}

void OAIAccountLabel::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_label_id_isSet = false;
    m_label_id_isValid = false;

    m_label_type_isSet = false;
    m_label_type_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIAccountLabel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountLabel::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_label_id_isValid = ::OpenAPI::fromJsonValue(m_label_id, json[QString("labelId")]);
    m_label_id_isSet = !json[QString("labelId")].isNull() && m_label_id_isValid;

    m_label_type_isValid = ::OpenAPI::fromJsonValue(m_label_type, json[QString("labelType")]);
    m_label_type_isSet = !json[QString("labelType")].isNull() && m_label_type_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIAccountLabel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountLabel::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_label_id_isSet) {
        obj.insert(QString("labelId"), ::OpenAPI::toJsonValue(m_label_id));
    }
    if (m_label_type_isSet) {
        obj.insert(QString("labelType"), ::OpenAPI::toJsonValue(m_label_type));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIAccountLabel::getAccountId() const {
    return m_account_id;
}
void OAIAccountLabel::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIAccountLabel::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIAccountLabel::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIAccountLabel::getDescription() const {
    return m_description;
}
void OAIAccountLabel::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAccountLabel::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAccountLabel::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIAccountLabel::getLabelId() const {
    return m_label_id;
}
void OAIAccountLabel::setLabelId(const QString &label_id) {
    m_label_id = label_id;
    m_label_id_isSet = true;
}

bool OAIAccountLabel::is_label_id_Set() const{
    return m_label_id_isSet;
}

bool OAIAccountLabel::is_label_id_Valid() const{
    return m_label_id_isValid;
}

QString OAIAccountLabel::getLabelType() const {
    return m_label_type;
}
void OAIAccountLabel::setLabelType(const QString &label_type) {
    m_label_type = label_type;
    m_label_type_isSet = true;
}

bool OAIAccountLabel::is_label_type_Set() const{
    return m_label_type_isSet;
}

bool OAIAccountLabel::is_label_type_Valid() const{
    return m_label_type_isValid;
}

QString OAIAccountLabel::getName() const {
    return m_name;
}
void OAIAccountLabel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAccountLabel::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAccountLabel::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIAccountLabel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountLabel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
