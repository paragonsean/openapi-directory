/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPriceInsights.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPriceInsights::OAIPriceInsights(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPriceInsights::OAIPriceInsights() {
    this->initializeModel();
}

OAIPriceInsights::~OAIPriceInsights() {}

void OAIPriceInsights::initializeModel() {

    m_predicted_clicks_change_fraction_isSet = false;
    m_predicted_clicks_change_fraction_isValid = false;

    m_predicted_conversions_change_fraction_isSet = false;
    m_predicted_conversions_change_fraction_isValid = false;

    m_predicted_gross_profit_change_fraction_isSet = false;
    m_predicted_gross_profit_change_fraction_isValid = false;

    m_predicted_impressions_change_fraction_isSet = false;
    m_predicted_impressions_change_fraction_isValid = false;

    m_predicted_monthly_gross_profit_change_currency_code_isSet = false;
    m_predicted_monthly_gross_profit_change_currency_code_isValid = false;

    m_predicted_monthly_gross_profit_change_micros_isSet = false;
    m_predicted_monthly_gross_profit_change_micros_isValid = false;

    m_suggested_price_currency_code_isSet = false;
    m_suggested_price_currency_code_isValid = false;

    m_suggested_price_micros_isSet = false;
    m_suggested_price_micros_isValid = false;
}

void OAIPriceInsights::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPriceInsights::fromJsonObject(QJsonObject json) {

    m_predicted_clicks_change_fraction_isValid = ::OpenAPI::fromJsonValue(m_predicted_clicks_change_fraction, json[QString("predictedClicksChangeFraction")]);
    m_predicted_clicks_change_fraction_isSet = !json[QString("predictedClicksChangeFraction")].isNull() && m_predicted_clicks_change_fraction_isValid;

    m_predicted_conversions_change_fraction_isValid = ::OpenAPI::fromJsonValue(m_predicted_conversions_change_fraction, json[QString("predictedConversionsChangeFraction")]);
    m_predicted_conversions_change_fraction_isSet = !json[QString("predictedConversionsChangeFraction")].isNull() && m_predicted_conversions_change_fraction_isValid;

    m_predicted_gross_profit_change_fraction_isValid = ::OpenAPI::fromJsonValue(m_predicted_gross_profit_change_fraction, json[QString("predictedGrossProfitChangeFraction")]);
    m_predicted_gross_profit_change_fraction_isSet = !json[QString("predictedGrossProfitChangeFraction")].isNull() && m_predicted_gross_profit_change_fraction_isValid;

    m_predicted_impressions_change_fraction_isValid = ::OpenAPI::fromJsonValue(m_predicted_impressions_change_fraction, json[QString("predictedImpressionsChangeFraction")]);
    m_predicted_impressions_change_fraction_isSet = !json[QString("predictedImpressionsChangeFraction")].isNull() && m_predicted_impressions_change_fraction_isValid;

    m_predicted_monthly_gross_profit_change_currency_code_isValid = ::OpenAPI::fromJsonValue(m_predicted_monthly_gross_profit_change_currency_code, json[QString("predictedMonthlyGrossProfitChangeCurrencyCode")]);
    m_predicted_monthly_gross_profit_change_currency_code_isSet = !json[QString("predictedMonthlyGrossProfitChangeCurrencyCode")].isNull() && m_predicted_monthly_gross_profit_change_currency_code_isValid;

    m_predicted_monthly_gross_profit_change_micros_isValid = ::OpenAPI::fromJsonValue(m_predicted_monthly_gross_profit_change_micros, json[QString("predictedMonthlyGrossProfitChangeMicros")]);
    m_predicted_monthly_gross_profit_change_micros_isSet = !json[QString("predictedMonthlyGrossProfitChangeMicros")].isNull() && m_predicted_monthly_gross_profit_change_micros_isValid;

    m_suggested_price_currency_code_isValid = ::OpenAPI::fromJsonValue(m_suggested_price_currency_code, json[QString("suggestedPriceCurrencyCode")]);
    m_suggested_price_currency_code_isSet = !json[QString("suggestedPriceCurrencyCode")].isNull() && m_suggested_price_currency_code_isValid;

    m_suggested_price_micros_isValid = ::OpenAPI::fromJsonValue(m_suggested_price_micros, json[QString("suggestedPriceMicros")]);
    m_suggested_price_micros_isSet = !json[QString("suggestedPriceMicros")].isNull() && m_suggested_price_micros_isValid;
}

QString OAIPriceInsights::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPriceInsights::asJsonObject() const {
    QJsonObject obj;
    if (m_predicted_clicks_change_fraction_isSet) {
        obj.insert(QString("predictedClicksChangeFraction"), ::OpenAPI::toJsonValue(m_predicted_clicks_change_fraction));
    }
    if (m_predicted_conversions_change_fraction_isSet) {
        obj.insert(QString("predictedConversionsChangeFraction"), ::OpenAPI::toJsonValue(m_predicted_conversions_change_fraction));
    }
    if (m_predicted_gross_profit_change_fraction_isSet) {
        obj.insert(QString("predictedGrossProfitChangeFraction"), ::OpenAPI::toJsonValue(m_predicted_gross_profit_change_fraction));
    }
    if (m_predicted_impressions_change_fraction_isSet) {
        obj.insert(QString("predictedImpressionsChangeFraction"), ::OpenAPI::toJsonValue(m_predicted_impressions_change_fraction));
    }
    if (m_predicted_monthly_gross_profit_change_currency_code_isSet) {
        obj.insert(QString("predictedMonthlyGrossProfitChangeCurrencyCode"), ::OpenAPI::toJsonValue(m_predicted_monthly_gross_profit_change_currency_code));
    }
    if (m_predicted_monthly_gross_profit_change_micros_isSet) {
        obj.insert(QString("predictedMonthlyGrossProfitChangeMicros"), ::OpenAPI::toJsonValue(m_predicted_monthly_gross_profit_change_micros));
    }
    if (m_suggested_price_currency_code_isSet) {
        obj.insert(QString("suggestedPriceCurrencyCode"), ::OpenAPI::toJsonValue(m_suggested_price_currency_code));
    }
    if (m_suggested_price_micros_isSet) {
        obj.insert(QString("suggestedPriceMicros"), ::OpenAPI::toJsonValue(m_suggested_price_micros));
    }
    return obj;
}

double OAIPriceInsights::getPredictedClicksChangeFraction() const {
    return m_predicted_clicks_change_fraction;
}
void OAIPriceInsights::setPredictedClicksChangeFraction(const double &predicted_clicks_change_fraction) {
    m_predicted_clicks_change_fraction = predicted_clicks_change_fraction;
    m_predicted_clicks_change_fraction_isSet = true;
}

bool OAIPriceInsights::is_predicted_clicks_change_fraction_Set() const{
    return m_predicted_clicks_change_fraction_isSet;
}

bool OAIPriceInsights::is_predicted_clicks_change_fraction_Valid() const{
    return m_predicted_clicks_change_fraction_isValid;
}

double OAIPriceInsights::getPredictedConversionsChangeFraction() const {
    return m_predicted_conversions_change_fraction;
}
void OAIPriceInsights::setPredictedConversionsChangeFraction(const double &predicted_conversions_change_fraction) {
    m_predicted_conversions_change_fraction = predicted_conversions_change_fraction;
    m_predicted_conversions_change_fraction_isSet = true;
}

bool OAIPriceInsights::is_predicted_conversions_change_fraction_Set() const{
    return m_predicted_conversions_change_fraction_isSet;
}

bool OAIPriceInsights::is_predicted_conversions_change_fraction_Valid() const{
    return m_predicted_conversions_change_fraction_isValid;
}

double OAIPriceInsights::getPredictedGrossProfitChangeFraction() const {
    return m_predicted_gross_profit_change_fraction;
}
void OAIPriceInsights::setPredictedGrossProfitChangeFraction(const double &predicted_gross_profit_change_fraction) {
    m_predicted_gross_profit_change_fraction = predicted_gross_profit_change_fraction;
    m_predicted_gross_profit_change_fraction_isSet = true;
}

bool OAIPriceInsights::is_predicted_gross_profit_change_fraction_Set() const{
    return m_predicted_gross_profit_change_fraction_isSet;
}

bool OAIPriceInsights::is_predicted_gross_profit_change_fraction_Valid() const{
    return m_predicted_gross_profit_change_fraction_isValid;
}

double OAIPriceInsights::getPredictedImpressionsChangeFraction() const {
    return m_predicted_impressions_change_fraction;
}
void OAIPriceInsights::setPredictedImpressionsChangeFraction(const double &predicted_impressions_change_fraction) {
    m_predicted_impressions_change_fraction = predicted_impressions_change_fraction;
    m_predicted_impressions_change_fraction_isSet = true;
}

bool OAIPriceInsights::is_predicted_impressions_change_fraction_Set() const{
    return m_predicted_impressions_change_fraction_isSet;
}

bool OAIPriceInsights::is_predicted_impressions_change_fraction_Valid() const{
    return m_predicted_impressions_change_fraction_isValid;
}

QString OAIPriceInsights::getPredictedMonthlyGrossProfitChangeCurrencyCode() const {
    return m_predicted_monthly_gross_profit_change_currency_code;
}
void OAIPriceInsights::setPredictedMonthlyGrossProfitChangeCurrencyCode(const QString &predicted_monthly_gross_profit_change_currency_code) {
    m_predicted_monthly_gross_profit_change_currency_code = predicted_monthly_gross_profit_change_currency_code;
    m_predicted_monthly_gross_profit_change_currency_code_isSet = true;
}

bool OAIPriceInsights::is_predicted_monthly_gross_profit_change_currency_code_Set() const{
    return m_predicted_monthly_gross_profit_change_currency_code_isSet;
}

bool OAIPriceInsights::is_predicted_monthly_gross_profit_change_currency_code_Valid() const{
    return m_predicted_monthly_gross_profit_change_currency_code_isValid;
}

QString OAIPriceInsights::getPredictedMonthlyGrossProfitChangeMicros() const {
    return m_predicted_monthly_gross_profit_change_micros;
}
void OAIPriceInsights::setPredictedMonthlyGrossProfitChangeMicros(const QString &predicted_monthly_gross_profit_change_micros) {
    m_predicted_monthly_gross_profit_change_micros = predicted_monthly_gross_profit_change_micros;
    m_predicted_monthly_gross_profit_change_micros_isSet = true;
}

bool OAIPriceInsights::is_predicted_monthly_gross_profit_change_micros_Set() const{
    return m_predicted_monthly_gross_profit_change_micros_isSet;
}

bool OAIPriceInsights::is_predicted_monthly_gross_profit_change_micros_Valid() const{
    return m_predicted_monthly_gross_profit_change_micros_isValid;
}

QString OAIPriceInsights::getSuggestedPriceCurrencyCode() const {
    return m_suggested_price_currency_code;
}
void OAIPriceInsights::setSuggestedPriceCurrencyCode(const QString &suggested_price_currency_code) {
    m_suggested_price_currency_code = suggested_price_currency_code;
    m_suggested_price_currency_code_isSet = true;
}

bool OAIPriceInsights::is_suggested_price_currency_code_Set() const{
    return m_suggested_price_currency_code_isSet;
}

bool OAIPriceInsights::is_suggested_price_currency_code_Valid() const{
    return m_suggested_price_currency_code_isValid;
}

QString OAIPriceInsights::getSuggestedPriceMicros() const {
    return m_suggested_price_micros;
}
void OAIPriceInsights::setSuggestedPriceMicros(const QString &suggested_price_micros) {
    m_suggested_price_micros = suggested_price_micros;
    m_suggested_price_micros_isSet = true;
}

bool OAIPriceInsights::is_suggested_price_micros_Set() const{
    return m_suggested_price_micros_isSet;
}

bool OAIPriceInsights::is_suggested_price_micros_Valid() const{
    return m_suggested_price_micros_isValid;
}

bool OAIPriceInsights::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_predicted_clicks_change_fraction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_predicted_conversions_change_fraction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_predicted_gross_profit_change_fraction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_predicted_impressions_change_fraction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_predicted_monthly_gross_profit_change_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_predicted_monthly_gross_profit_change_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suggested_price_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suggested_price_micros_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPriceInsights::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
