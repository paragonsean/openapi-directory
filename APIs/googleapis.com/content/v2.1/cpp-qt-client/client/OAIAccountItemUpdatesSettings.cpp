/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountItemUpdatesSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountItemUpdatesSettings::OAIAccountItemUpdatesSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountItemUpdatesSettings::OAIAccountItemUpdatesSettings() {
    this->initializeModel();
}

OAIAccountItemUpdatesSettings::~OAIAccountItemUpdatesSettings() {}

void OAIAccountItemUpdatesSettings::initializeModel() {

    m_allow_availability_updates_isSet = false;
    m_allow_availability_updates_isValid = false;

    m_allow_condition_updates_isSet = false;
    m_allow_condition_updates_isValid = false;

    m_allow_price_updates_isSet = false;
    m_allow_price_updates_isValid = false;

    m_allow_strict_availability_updates_isSet = false;
    m_allow_strict_availability_updates_isValid = false;
}

void OAIAccountItemUpdatesSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountItemUpdatesSettings::fromJsonObject(QJsonObject json) {

    m_allow_availability_updates_isValid = ::OpenAPI::fromJsonValue(m_allow_availability_updates, json[QString("allowAvailabilityUpdates")]);
    m_allow_availability_updates_isSet = !json[QString("allowAvailabilityUpdates")].isNull() && m_allow_availability_updates_isValid;

    m_allow_condition_updates_isValid = ::OpenAPI::fromJsonValue(m_allow_condition_updates, json[QString("allowConditionUpdates")]);
    m_allow_condition_updates_isSet = !json[QString("allowConditionUpdates")].isNull() && m_allow_condition_updates_isValid;

    m_allow_price_updates_isValid = ::OpenAPI::fromJsonValue(m_allow_price_updates, json[QString("allowPriceUpdates")]);
    m_allow_price_updates_isSet = !json[QString("allowPriceUpdates")].isNull() && m_allow_price_updates_isValid;

    m_allow_strict_availability_updates_isValid = ::OpenAPI::fromJsonValue(m_allow_strict_availability_updates, json[QString("allowStrictAvailabilityUpdates")]);
    m_allow_strict_availability_updates_isSet = !json[QString("allowStrictAvailabilityUpdates")].isNull() && m_allow_strict_availability_updates_isValid;
}

QString OAIAccountItemUpdatesSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountItemUpdatesSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_availability_updates_isSet) {
        obj.insert(QString("allowAvailabilityUpdates"), ::OpenAPI::toJsonValue(m_allow_availability_updates));
    }
    if (m_allow_condition_updates_isSet) {
        obj.insert(QString("allowConditionUpdates"), ::OpenAPI::toJsonValue(m_allow_condition_updates));
    }
    if (m_allow_price_updates_isSet) {
        obj.insert(QString("allowPriceUpdates"), ::OpenAPI::toJsonValue(m_allow_price_updates));
    }
    if (m_allow_strict_availability_updates_isSet) {
        obj.insert(QString("allowStrictAvailabilityUpdates"), ::OpenAPI::toJsonValue(m_allow_strict_availability_updates));
    }
    return obj;
}

bool OAIAccountItemUpdatesSettings::isAllowAvailabilityUpdates() const {
    return m_allow_availability_updates;
}
void OAIAccountItemUpdatesSettings::setAllowAvailabilityUpdates(const bool &allow_availability_updates) {
    m_allow_availability_updates = allow_availability_updates;
    m_allow_availability_updates_isSet = true;
}

bool OAIAccountItemUpdatesSettings::is_allow_availability_updates_Set() const{
    return m_allow_availability_updates_isSet;
}

bool OAIAccountItemUpdatesSettings::is_allow_availability_updates_Valid() const{
    return m_allow_availability_updates_isValid;
}

bool OAIAccountItemUpdatesSettings::isAllowConditionUpdates() const {
    return m_allow_condition_updates;
}
void OAIAccountItemUpdatesSettings::setAllowConditionUpdates(const bool &allow_condition_updates) {
    m_allow_condition_updates = allow_condition_updates;
    m_allow_condition_updates_isSet = true;
}

bool OAIAccountItemUpdatesSettings::is_allow_condition_updates_Set() const{
    return m_allow_condition_updates_isSet;
}

bool OAIAccountItemUpdatesSettings::is_allow_condition_updates_Valid() const{
    return m_allow_condition_updates_isValid;
}

bool OAIAccountItemUpdatesSettings::isAllowPriceUpdates() const {
    return m_allow_price_updates;
}
void OAIAccountItemUpdatesSettings::setAllowPriceUpdates(const bool &allow_price_updates) {
    m_allow_price_updates = allow_price_updates;
    m_allow_price_updates_isSet = true;
}

bool OAIAccountItemUpdatesSettings::is_allow_price_updates_Set() const{
    return m_allow_price_updates_isSet;
}

bool OAIAccountItemUpdatesSettings::is_allow_price_updates_Valid() const{
    return m_allow_price_updates_isValid;
}

bool OAIAccountItemUpdatesSettings::isAllowStrictAvailabilityUpdates() const {
    return m_allow_strict_availability_updates;
}
void OAIAccountItemUpdatesSettings::setAllowStrictAvailabilityUpdates(const bool &allow_strict_availability_updates) {
    m_allow_strict_availability_updates = allow_strict_availability_updates;
    m_allow_strict_availability_updates_isSet = true;
}

bool OAIAccountItemUpdatesSettings::is_allow_strict_availability_updates_Set() const{
    return m_allow_strict_availability_updates_isSet;
}

bool OAIAccountItemUpdatesSettings::is_allow_strict_availability_updates_Valid() const{
    return m_allow_strict_availability_updates_isValid;
}

bool OAIAccountItemUpdatesSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_availability_updates_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_condition_updates_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_price_updates_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_strict_availability_updates_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountItemUpdatesSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
