/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMerchantOrderReturnItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMerchantOrderReturnItem::OAIMerchantOrderReturnItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMerchantOrderReturnItem::OAIMerchantOrderReturnItem() {
    this->initializeModel();
}

OAIMerchantOrderReturnItem::~OAIMerchantOrderReturnItem() {}

void OAIMerchantOrderReturnItem::initializeModel() {

    m_customer_return_reason_isSet = false;
    m_customer_return_reason_isValid = false;

    m_item_id_isSet = false;
    m_item_id_isValid = false;

    m_merchant_rejection_reason_isSet = false;
    m_merchant_rejection_reason_isValid = false;

    m_merchant_return_reason_isSet = false;
    m_merchant_return_reason_isValid = false;

    m_product_isSet = false;
    m_product_isValid = false;

    m_refundable_amount_isSet = false;
    m_refundable_amount_isValid = false;

    m_return_item_id_isSet = false;
    m_return_item_id_isValid = false;

    m_return_shipment_ids_isSet = false;
    m_return_shipment_ids_isValid = false;

    m_shipment_group_id_isSet = false;
    m_shipment_group_id_isValid = false;

    m_shipment_unit_id_isSet = false;
    m_shipment_unit_id_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIMerchantOrderReturnItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMerchantOrderReturnItem::fromJsonObject(QJsonObject json) {

    m_customer_return_reason_isValid = ::OpenAPI::fromJsonValue(m_customer_return_reason, json[QString("customerReturnReason")]);
    m_customer_return_reason_isSet = !json[QString("customerReturnReason")].isNull() && m_customer_return_reason_isValid;

    m_item_id_isValid = ::OpenAPI::fromJsonValue(m_item_id, json[QString("itemId")]);
    m_item_id_isSet = !json[QString("itemId")].isNull() && m_item_id_isValid;

    m_merchant_rejection_reason_isValid = ::OpenAPI::fromJsonValue(m_merchant_rejection_reason, json[QString("merchantRejectionReason")]);
    m_merchant_rejection_reason_isSet = !json[QString("merchantRejectionReason")].isNull() && m_merchant_rejection_reason_isValid;

    m_merchant_return_reason_isValid = ::OpenAPI::fromJsonValue(m_merchant_return_reason, json[QString("merchantReturnReason")]);
    m_merchant_return_reason_isSet = !json[QString("merchantReturnReason")].isNull() && m_merchant_return_reason_isValid;

    m_product_isValid = ::OpenAPI::fromJsonValue(m_product, json[QString("product")]);
    m_product_isSet = !json[QString("product")].isNull() && m_product_isValid;

    m_refundable_amount_isValid = ::OpenAPI::fromJsonValue(m_refundable_amount, json[QString("refundableAmount")]);
    m_refundable_amount_isSet = !json[QString("refundableAmount")].isNull() && m_refundable_amount_isValid;

    m_return_item_id_isValid = ::OpenAPI::fromJsonValue(m_return_item_id, json[QString("returnItemId")]);
    m_return_item_id_isSet = !json[QString("returnItemId")].isNull() && m_return_item_id_isValid;

    m_return_shipment_ids_isValid = ::OpenAPI::fromJsonValue(m_return_shipment_ids, json[QString("returnShipmentIds")]);
    m_return_shipment_ids_isSet = !json[QString("returnShipmentIds")].isNull() && m_return_shipment_ids_isValid;

    m_shipment_group_id_isValid = ::OpenAPI::fromJsonValue(m_shipment_group_id, json[QString("shipmentGroupId")]);
    m_shipment_group_id_isSet = !json[QString("shipmentGroupId")].isNull() && m_shipment_group_id_isValid;

    m_shipment_unit_id_isValid = ::OpenAPI::fromJsonValue(m_shipment_unit_id, json[QString("shipmentUnitId")]);
    m_shipment_unit_id_isSet = !json[QString("shipmentUnitId")].isNull() && m_shipment_unit_id_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIMerchantOrderReturnItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMerchantOrderReturnItem::asJsonObject() const {
    QJsonObject obj;
    if (m_customer_return_reason.isSet()) {
        obj.insert(QString("customerReturnReason"), ::OpenAPI::toJsonValue(m_customer_return_reason));
    }
    if (m_item_id_isSet) {
        obj.insert(QString("itemId"), ::OpenAPI::toJsonValue(m_item_id));
    }
    if (m_merchant_rejection_reason.isSet()) {
        obj.insert(QString("merchantRejectionReason"), ::OpenAPI::toJsonValue(m_merchant_rejection_reason));
    }
    if (m_merchant_return_reason.isSet()) {
        obj.insert(QString("merchantReturnReason"), ::OpenAPI::toJsonValue(m_merchant_return_reason));
    }
    if (m_product.isSet()) {
        obj.insert(QString("product"), ::OpenAPI::toJsonValue(m_product));
    }
    if (m_refundable_amount.isSet()) {
        obj.insert(QString("refundableAmount"), ::OpenAPI::toJsonValue(m_refundable_amount));
    }
    if (m_return_item_id_isSet) {
        obj.insert(QString("returnItemId"), ::OpenAPI::toJsonValue(m_return_item_id));
    }
    if (m_return_shipment_ids.size() > 0) {
        obj.insert(QString("returnShipmentIds"), ::OpenAPI::toJsonValue(m_return_shipment_ids));
    }
    if (m_shipment_group_id_isSet) {
        obj.insert(QString("shipmentGroupId"), ::OpenAPI::toJsonValue(m_shipment_group_id));
    }
    if (m_shipment_unit_id_isSet) {
        obj.insert(QString("shipmentUnitId"), ::OpenAPI::toJsonValue(m_shipment_unit_id));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

OAICustomerReturnReason OAIMerchantOrderReturnItem::getCustomerReturnReason() const {
    return m_customer_return_reason;
}
void OAIMerchantOrderReturnItem::setCustomerReturnReason(const OAICustomerReturnReason &customer_return_reason) {
    m_customer_return_reason = customer_return_reason;
    m_customer_return_reason_isSet = true;
}

bool OAIMerchantOrderReturnItem::is_customer_return_reason_Set() const{
    return m_customer_return_reason_isSet;
}

bool OAIMerchantOrderReturnItem::is_customer_return_reason_Valid() const{
    return m_customer_return_reason_isValid;
}

QString OAIMerchantOrderReturnItem::getItemId() const {
    return m_item_id;
}
void OAIMerchantOrderReturnItem::setItemId(const QString &item_id) {
    m_item_id = item_id;
    m_item_id_isSet = true;
}

bool OAIMerchantOrderReturnItem::is_item_id_Set() const{
    return m_item_id_isSet;
}

bool OAIMerchantOrderReturnItem::is_item_id_Valid() const{
    return m_item_id_isValid;
}

OAIMerchantRejectionReason OAIMerchantOrderReturnItem::getMerchantRejectionReason() const {
    return m_merchant_rejection_reason;
}
void OAIMerchantOrderReturnItem::setMerchantRejectionReason(const OAIMerchantRejectionReason &merchant_rejection_reason) {
    m_merchant_rejection_reason = merchant_rejection_reason;
    m_merchant_rejection_reason_isSet = true;
}

bool OAIMerchantOrderReturnItem::is_merchant_rejection_reason_Set() const{
    return m_merchant_rejection_reason_isSet;
}

bool OAIMerchantOrderReturnItem::is_merchant_rejection_reason_Valid() const{
    return m_merchant_rejection_reason_isValid;
}

OAIRefundReason OAIMerchantOrderReturnItem::getMerchantReturnReason() const {
    return m_merchant_return_reason;
}
void OAIMerchantOrderReturnItem::setMerchantReturnReason(const OAIRefundReason &merchant_return_reason) {
    m_merchant_return_reason = merchant_return_reason;
    m_merchant_return_reason_isSet = true;
}

bool OAIMerchantOrderReturnItem::is_merchant_return_reason_Set() const{
    return m_merchant_return_reason_isSet;
}

bool OAIMerchantOrderReturnItem::is_merchant_return_reason_Valid() const{
    return m_merchant_return_reason_isValid;
}

OAIOrderLineItemProduct OAIMerchantOrderReturnItem::getProduct() const {
    return m_product;
}
void OAIMerchantOrderReturnItem::setProduct(const OAIOrderLineItemProduct &product) {
    m_product = product;
    m_product_isSet = true;
}

bool OAIMerchantOrderReturnItem::is_product_Set() const{
    return m_product_isSet;
}

bool OAIMerchantOrderReturnItem::is_product_Valid() const{
    return m_product_isValid;
}

OAIMonetaryAmount OAIMerchantOrderReturnItem::getRefundableAmount() const {
    return m_refundable_amount;
}
void OAIMerchantOrderReturnItem::setRefundableAmount(const OAIMonetaryAmount &refundable_amount) {
    m_refundable_amount = refundable_amount;
    m_refundable_amount_isSet = true;
}

bool OAIMerchantOrderReturnItem::is_refundable_amount_Set() const{
    return m_refundable_amount_isSet;
}

bool OAIMerchantOrderReturnItem::is_refundable_amount_Valid() const{
    return m_refundable_amount_isValid;
}

QString OAIMerchantOrderReturnItem::getReturnItemId() const {
    return m_return_item_id;
}
void OAIMerchantOrderReturnItem::setReturnItemId(const QString &return_item_id) {
    m_return_item_id = return_item_id;
    m_return_item_id_isSet = true;
}

bool OAIMerchantOrderReturnItem::is_return_item_id_Set() const{
    return m_return_item_id_isSet;
}

bool OAIMerchantOrderReturnItem::is_return_item_id_Valid() const{
    return m_return_item_id_isValid;
}

QList<QString> OAIMerchantOrderReturnItem::getReturnShipmentIds() const {
    return m_return_shipment_ids;
}
void OAIMerchantOrderReturnItem::setReturnShipmentIds(const QList<QString> &return_shipment_ids) {
    m_return_shipment_ids = return_shipment_ids;
    m_return_shipment_ids_isSet = true;
}

bool OAIMerchantOrderReturnItem::is_return_shipment_ids_Set() const{
    return m_return_shipment_ids_isSet;
}

bool OAIMerchantOrderReturnItem::is_return_shipment_ids_Valid() const{
    return m_return_shipment_ids_isValid;
}

QString OAIMerchantOrderReturnItem::getShipmentGroupId() const {
    return m_shipment_group_id;
}
void OAIMerchantOrderReturnItem::setShipmentGroupId(const QString &shipment_group_id) {
    m_shipment_group_id = shipment_group_id;
    m_shipment_group_id_isSet = true;
}

bool OAIMerchantOrderReturnItem::is_shipment_group_id_Set() const{
    return m_shipment_group_id_isSet;
}

bool OAIMerchantOrderReturnItem::is_shipment_group_id_Valid() const{
    return m_shipment_group_id_isValid;
}

QString OAIMerchantOrderReturnItem::getShipmentUnitId() const {
    return m_shipment_unit_id;
}
void OAIMerchantOrderReturnItem::setShipmentUnitId(const QString &shipment_unit_id) {
    m_shipment_unit_id = shipment_unit_id;
    m_shipment_unit_id_isSet = true;
}

bool OAIMerchantOrderReturnItem::is_shipment_unit_id_Set() const{
    return m_shipment_unit_id_isSet;
}

bool OAIMerchantOrderReturnItem::is_shipment_unit_id_Valid() const{
    return m_shipment_unit_id_isValid;
}

QString OAIMerchantOrderReturnItem::getState() const {
    return m_state;
}
void OAIMerchantOrderReturnItem::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIMerchantOrderReturnItem::is_state_Set() const{
    return m_state_isSet;
}

bool OAIMerchantOrderReturnItem::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIMerchantOrderReturnItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customer_return_reason.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_rejection_reason.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_return_reason.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_product.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_refundable_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_shipment_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_unit_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMerchantOrderReturnItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
