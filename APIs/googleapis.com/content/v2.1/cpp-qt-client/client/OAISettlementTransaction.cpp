/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISettlementTransaction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISettlementTransaction::OAISettlementTransaction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISettlementTransaction::OAISettlementTransaction() {
    this->initializeModel();
}

OAISettlementTransaction::~OAISettlementTransaction() {}

void OAISettlementTransaction::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_identifiers_isSet = false;
    m_identifiers_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_transaction_isSet = false;
    m_transaction_isValid = false;
}

void OAISettlementTransaction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISettlementTransaction::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_identifiers_isValid = ::OpenAPI::fromJsonValue(m_identifiers, json[QString("identifiers")]);
    m_identifiers_isSet = !json[QString("identifiers")].isNull() && m_identifiers_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_transaction_isValid = ::OpenAPI::fromJsonValue(m_transaction, json[QString("transaction")]);
    m_transaction_isSet = !json[QString("transaction")].isNull() && m_transaction_isValid;
}

QString OAISettlementTransaction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISettlementTransaction::asJsonObject() const {
    QJsonObject obj;
    if (m_amount.isSet()) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_identifiers.isSet()) {
        obj.insert(QString("identifiers"), ::OpenAPI::toJsonValue(m_identifiers));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_transaction.isSet()) {
        obj.insert(QString("transaction"), ::OpenAPI::toJsonValue(m_transaction));
    }
    return obj;
}

OAISettlementTransactionAmount OAISettlementTransaction::getAmount() const {
    return m_amount;
}
void OAISettlementTransaction::setAmount(const OAISettlementTransactionAmount &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAISettlementTransaction::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAISettlementTransaction::is_amount_Valid() const{
    return m_amount_isValid;
}

OAISettlementTransactionIdentifiers OAISettlementTransaction::getIdentifiers() const {
    return m_identifiers;
}
void OAISettlementTransaction::setIdentifiers(const OAISettlementTransactionIdentifiers &identifiers) {
    m_identifiers = identifiers;
    m_identifiers_isSet = true;
}

bool OAISettlementTransaction::is_identifiers_Set() const{
    return m_identifiers_isSet;
}

bool OAISettlementTransaction::is_identifiers_Valid() const{
    return m_identifiers_isValid;
}

QString OAISettlementTransaction::getKind() const {
    return m_kind;
}
void OAISettlementTransaction::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAISettlementTransaction::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAISettlementTransaction::is_kind_Valid() const{
    return m_kind_isValid;
}

OAISettlementTransactionTransaction OAISettlementTransaction::getTransaction() const {
    return m_transaction;
}
void OAISettlementTransaction::setTransaction(const OAISettlementTransactionTransaction &transaction) {
    m_transaction = transaction;
    m_transaction_isSet = true;
}

bool OAISettlementTransaction::is_transaction_Set() const{
    return m_transaction_isSet;
}

bool OAISettlementTransaction::is_transaction_Valid() const{
    return m_transaction_isValid;
}

bool OAISettlementTransaction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_identifiers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISettlementTransaction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
