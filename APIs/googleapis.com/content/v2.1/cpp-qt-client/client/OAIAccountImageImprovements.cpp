/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountImageImprovements.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountImageImprovements::OAIAccountImageImprovements(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountImageImprovements::OAIAccountImageImprovements() {
    this->initializeModel();
}

OAIAccountImageImprovements::~OAIAccountImageImprovements() {}

void OAIAccountImageImprovements::initializeModel() {

    m_account_image_improvements_settings_isSet = false;
    m_account_image_improvements_settings_isValid = false;

    m_effective_allow_automatic_image_improvements_isSet = false;
    m_effective_allow_automatic_image_improvements_isValid = false;
}

void OAIAccountImageImprovements::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountImageImprovements::fromJsonObject(QJsonObject json) {

    m_account_image_improvements_settings_isValid = ::OpenAPI::fromJsonValue(m_account_image_improvements_settings, json[QString("accountImageImprovementsSettings")]);
    m_account_image_improvements_settings_isSet = !json[QString("accountImageImprovementsSettings")].isNull() && m_account_image_improvements_settings_isValid;

    m_effective_allow_automatic_image_improvements_isValid = ::OpenAPI::fromJsonValue(m_effective_allow_automatic_image_improvements, json[QString("effectiveAllowAutomaticImageImprovements")]);
    m_effective_allow_automatic_image_improvements_isSet = !json[QString("effectiveAllowAutomaticImageImprovements")].isNull() && m_effective_allow_automatic_image_improvements_isValid;
}

QString OAIAccountImageImprovements::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountImageImprovements::asJsonObject() const {
    QJsonObject obj;
    if (m_account_image_improvements_settings.isSet()) {
        obj.insert(QString("accountImageImprovementsSettings"), ::OpenAPI::toJsonValue(m_account_image_improvements_settings));
    }
    if (m_effective_allow_automatic_image_improvements_isSet) {
        obj.insert(QString("effectiveAllowAutomaticImageImprovements"), ::OpenAPI::toJsonValue(m_effective_allow_automatic_image_improvements));
    }
    return obj;
}

OAIAccountImageImprovementsSettings OAIAccountImageImprovements::getAccountImageImprovementsSettings() const {
    return m_account_image_improvements_settings;
}
void OAIAccountImageImprovements::setAccountImageImprovementsSettings(const OAIAccountImageImprovementsSettings &account_image_improvements_settings) {
    m_account_image_improvements_settings = account_image_improvements_settings;
    m_account_image_improvements_settings_isSet = true;
}

bool OAIAccountImageImprovements::is_account_image_improvements_settings_Set() const{
    return m_account_image_improvements_settings_isSet;
}

bool OAIAccountImageImprovements::is_account_image_improvements_settings_Valid() const{
    return m_account_image_improvements_settings_isValid;
}

bool OAIAccountImageImprovements::isEffectiveAllowAutomaticImageImprovements() const {
    return m_effective_allow_automatic_image_improvements;
}
void OAIAccountImageImprovements::setEffectiveAllowAutomaticImageImprovements(const bool &effective_allow_automatic_image_improvements) {
    m_effective_allow_automatic_image_improvements = effective_allow_automatic_image_improvements;
    m_effective_allow_automatic_image_improvements_isSet = true;
}

bool OAIAccountImageImprovements::is_effective_allow_automatic_image_improvements_Set() const{
    return m_effective_allow_automatic_image_improvements_isSet;
}

bool OAIAccountImageImprovements::is_effective_allow_automatic_image_improvements_Valid() const{
    return m_effective_allow_automatic_image_improvements_isValid;
}

bool OAIAccountImageImprovements::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_image_improvements_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_allow_automatic_image_improvements_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountImageImprovements::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
