/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPromotion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPromotion::OAIPromotion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPromotion::OAIPromotion() {
    this->initializeModel();
}

OAIPromotion::~OAIPromotion() {}

void OAIPromotion::initializeModel() {

    m_brand_isSet = false;
    m_brand_isValid = false;

    m_brand_exclusion_isSet = false;
    m_brand_exclusion_isValid = false;

    m_content_language_isSet = false;
    m_content_language_isValid = false;

    m_coupon_value_type_isSet = false;
    m_coupon_value_type_isValid = false;

    m_free_gift_description_isSet = false;
    m_free_gift_description_isValid = false;

    m_free_gift_item_id_isSet = false;
    m_free_gift_item_id_isValid = false;

    m_free_gift_value_isSet = false;
    m_free_gift_value_isValid = false;

    m_generic_redemption_code_isSet = false;
    m_generic_redemption_code_isValid = false;

    m_get_this_quantity_discounted_isSet = false;
    m_get_this_quantity_discounted_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_item_group_id_isSet = false;
    m_item_group_id_isValid = false;

    m_item_group_id_exclusion_isSet = false;
    m_item_group_id_exclusion_isValid = false;

    m_item_id_isSet = false;
    m_item_id_isValid = false;

    m_item_id_exclusion_isSet = false;
    m_item_id_exclusion_isValid = false;

    m_limit_quantity_isSet = false;
    m_limit_quantity_isValid = false;

    m_limit_value_isSet = false;
    m_limit_value_isValid = false;

    m_long_title_isSet = false;
    m_long_title_isValid = false;

    m_minimum_purchase_amount_isSet = false;
    m_minimum_purchase_amount_isValid = false;

    m_minimum_purchase_quantity_isSet = false;
    m_minimum_purchase_quantity_isValid = false;

    m_money_budget_isSet = false;
    m_money_budget_isValid = false;

    m_money_off_amount_isSet = false;
    m_money_off_amount_isValid = false;

    m_offer_type_isSet = false;
    m_offer_type_isValid = false;

    m_order_limit_isSet = false;
    m_order_limit_isValid = false;

    m_percent_off_isSet = false;
    m_percent_off_isValid = false;

    m_product_applicability_isSet = false;
    m_product_applicability_isValid = false;

    m_product_type_isSet = false;
    m_product_type_isValid = false;

    m_product_type_exclusion_isSet = false;
    m_product_type_exclusion_isValid = false;

    m_promotion_destination_ids_isSet = false;
    m_promotion_destination_ids_isValid = false;

    m_promotion_display_dates_isSet = false;
    m_promotion_display_dates_isValid = false;

    m_promotion_display_time_period_isSet = false;
    m_promotion_display_time_period_isValid = false;

    m_promotion_effective_dates_isSet = false;
    m_promotion_effective_dates_isValid = false;

    m_promotion_effective_time_period_isSet = false;
    m_promotion_effective_time_period_isValid = false;

    m_promotion_id_isSet = false;
    m_promotion_id_isValid = false;

    m_promotion_status_isSet = false;
    m_promotion_status_isValid = false;

    m_promotion_url_isSet = false;
    m_promotion_url_isValid = false;

    m_redemption_channel_isSet = false;
    m_redemption_channel_isValid = false;

    m_shipping_service_names_isSet = false;
    m_shipping_service_names_isValid = false;

    m_store_applicability_isSet = false;
    m_store_applicability_isValid = false;

    m_store_code_isSet = false;
    m_store_code_isValid = false;

    m_store_code_exclusion_isSet = false;
    m_store_code_exclusion_isValid = false;

    m_target_country_isSet = false;
    m_target_country_isValid = false;
}

void OAIPromotion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPromotion::fromJsonObject(QJsonObject json) {

    m_brand_isValid = ::OpenAPI::fromJsonValue(m_brand, json[QString("brand")]);
    m_brand_isSet = !json[QString("brand")].isNull() && m_brand_isValid;

    m_brand_exclusion_isValid = ::OpenAPI::fromJsonValue(m_brand_exclusion, json[QString("brandExclusion")]);
    m_brand_exclusion_isSet = !json[QString("brandExclusion")].isNull() && m_brand_exclusion_isValid;

    m_content_language_isValid = ::OpenAPI::fromJsonValue(m_content_language, json[QString("contentLanguage")]);
    m_content_language_isSet = !json[QString("contentLanguage")].isNull() && m_content_language_isValid;

    m_coupon_value_type_isValid = ::OpenAPI::fromJsonValue(m_coupon_value_type, json[QString("couponValueType")]);
    m_coupon_value_type_isSet = !json[QString("couponValueType")].isNull() && m_coupon_value_type_isValid;

    m_free_gift_description_isValid = ::OpenAPI::fromJsonValue(m_free_gift_description, json[QString("freeGiftDescription")]);
    m_free_gift_description_isSet = !json[QString("freeGiftDescription")].isNull() && m_free_gift_description_isValid;

    m_free_gift_item_id_isValid = ::OpenAPI::fromJsonValue(m_free_gift_item_id, json[QString("freeGiftItemId")]);
    m_free_gift_item_id_isSet = !json[QString("freeGiftItemId")].isNull() && m_free_gift_item_id_isValid;

    m_free_gift_value_isValid = ::OpenAPI::fromJsonValue(m_free_gift_value, json[QString("freeGiftValue")]);
    m_free_gift_value_isSet = !json[QString("freeGiftValue")].isNull() && m_free_gift_value_isValid;

    m_generic_redemption_code_isValid = ::OpenAPI::fromJsonValue(m_generic_redemption_code, json[QString("genericRedemptionCode")]);
    m_generic_redemption_code_isSet = !json[QString("genericRedemptionCode")].isNull() && m_generic_redemption_code_isValid;

    m_get_this_quantity_discounted_isValid = ::OpenAPI::fromJsonValue(m_get_this_quantity_discounted, json[QString("getThisQuantityDiscounted")]);
    m_get_this_quantity_discounted_isSet = !json[QString("getThisQuantityDiscounted")].isNull() && m_get_this_quantity_discounted_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_item_group_id_isValid = ::OpenAPI::fromJsonValue(m_item_group_id, json[QString("itemGroupId")]);
    m_item_group_id_isSet = !json[QString("itemGroupId")].isNull() && m_item_group_id_isValid;

    m_item_group_id_exclusion_isValid = ::OpenAPI::fromJsonValue(m_item_group_id_exclusion, json[QString("itemGroupIdExclusion")]);
    m_item_group_id_exclusion_isSet = !json[QString("itemGroupIdExclusion")].isNull() && m_item_group_id_exclusion_isValid;

    m_item_id_isValid = ::OpenAPI::fromJsonValue(m_item_id, json[QString("itemId")]);
    m_item_id_isSet = !json[QString("itemId")].isNull() && m_item_id_isValid;

    m_item_id_exclusion_isValid = ::OpenAPI::fromJsonValue(m_item_id_exclusion, json[QString("itemIdExclusion")]);
    m_item_id_exclusion_isSet = !json[QString("itemIdExclusion")].isNull() && m_item_id_exclusion_isValid;

    m_limit_quantity_isValid = ::OpenAPI::fromJsonValue(m_limit_quantity, json[QString("limitQuantity")]);
    m_limit_quantity_isSet = !json[QString("limitQuantity")].isNull() && m_limit_quantity_isValid;

    m_limit_value_isValid = ::OpenAPI::fromJsonValue(m_limit_value, json[QString("limitValue")]);
    m_limit_value_isSet = !json[QString("limitValue")].isNull() && m_limit_value_isValid;

    m_long_title_isValid = ::OpenAPI::fromJsonValue(m_long_title, json[QString("longTitle")]);
    m_long_title_isSet = !json[QString("longTitle")].isNull() && m_long_title_isValid;

    m_minimum_purchase_amount_isValid = ::OpenAPI::fromJsonValue(m_minimum_purchase_amount, json[QString("minimumPurchaseAmount")]);
    m_minimum_purchase_amount_isSet = !json[QString("minimumPurchaseAmount")].isNull() && m_minimum_purchase_amount_isValid;

    m_minimum_purchase_quantity_isValid = ::OpenAPI::fromJsonValue(m_minimum_purchase_quantity, json[QString("minimumPurchaseQuantity")]);
    m_minimum_purchase_quantity_isSet = !json[QString("minimumPurchaseQuantity")].isNull() && m_minimum_purchase_quantity_isValid;

    m_money_budget_isValid = ::OpenAPI::fromJsonValue(m_money_budget, json[QString("moneyBudget")]);
    m_money_budget_isSet = !json[QString("moneyBudget")].isNull() && m_money_budget_isValid;

    m_money_off_amount_isValid = ::OpenAPI::fromJsonValue(m_money_off_amount, json[QString("moneyOffAmount")]);
    m_money_off_amount_isSet = !json[QString("moneyOffAmount")].isNull() && m_money_off_amount_isValid;

    m_offer_type_isValid = ::OpenAPI::fromJsonValue(m_offer_type, json[QString("offerType")]);
    m_offer_type_isSet = !json[QString("offerType")].isNull() && m_offer_type_isValid;

    m_order_limit_isValid = ::OpenAPI::fromJsonValue(m_order_limit, json[QString("orderLimit")]);
    m_order_limit_isSet = !json[QString("orderLimit")].isNull() && m_order_limit_isValid;

    m_percent_off_isValid = ::OpenAPI::fromJsonValue(m_percent_off, json[QString("percentOff")]);
    m_percent_off_isSet = !json[QString("percentOff")].isNull() && m_percent_off_isValid;

    m_product_applicability_isValid = ::OpenAPI::fromJsonValue(m_product_applicability, json[QString("productApplicability")]);
    m_product_applicability_isSet = !json[QString("productApplicability")].isNull() && m_product_applicability_isValid;

    m_product_type_isValid = ::OpenAPI::fromJsonValue(m_product_type, json[QString("productType")]);
    m_product_type_isSet = !json[QString("productType")].isNull() && m_product_type_isValid;

    m_product_type_exclusion_isValid = ::OpenAPI::fromJsonValue(m_product_type_exclusion, json[QString("productTypeExclusion")]);
    m_product_type_exclusion_isSet = !json[QString("productTypeExclusion")].isNull() && m_product_type_exclusion_isValid;

    m_promotion_destination_ids_isValid = ::OpenAPI::fromJsonValue(m_promotion_destination_ids, json[QString("promotionDestinationIds")]);
    m_promotion_destination_ids_isSet = !json[QString("promotionDestinationIds")].isNull() && m_promotion_destination_ids_isValid;

    m_promotion_display_dates_isValid = ::OpenAPI::fromJsonValue(m_promotion_display_dates, json[QString("promotionDisplayDates")]);
    m_promotion_display_dates_isSet = !json[QString("promotionDisplayDates")].isNull() && m_promotion_display_dates_isValid;

    m_promotion_display_time_period_isValid = ::OpenAPI::fromJsonValue(m_promotion_display_time_period, json[QString("promotionDisplayTimePeriod")]);
    m_promotion_display_time_period_isSet = !json[QString("promotionDisplayTimePeriod")].isNull() && m_promotion_display_time_period_isValid;

    m_promotion_effective_dates_isValid = ::OpenAPI::fromJsonValue(m_promotion_effective_dates, json[QString("promotionEffectiveDates")]);
    m_promotion_effective_dates_isSet = !json[QString("promotionEffectiveDates")].isNull() && m_promotion_effective_dates_isValid;

    m_promotion_effective_time_period_isValid = ::OpenAPI::fromJsonValue(m_promotion_effective_time_period, json[QString("promotionEffectiveTimePeriod")]);
    m_promotion_effective_time_period_isSet = !json[QString("promotionEffectiveTimePeriod")].isNull() && m_promotion_effective_time_period_isValid;

    m_promotion_id_isValid = ::OpenAPI::fromJsonValue(m_promotion_id, json[QString("promotionId")]);
    m_promotion_id_isSet = !json[QString("promotionId")].isNull() && m_promotion_id_isValid;

    m_promotion_status_isValid = ::OpenAPI::fromJsonValue(m_promotion_status, json[QString("promotionStatus")]);
    m_promotion_status_isSet = !json[QString("promotionStatus")].isNull() && m_promotion_status_isValid;

    m_promotion_url_isValid = ::OpenAPI::fromJsonValue(m_promotion_url, json[QString("promotionUrl")]);
    m_promotion_url_isSet = !json[QString("promotionUrl")].isNull() && m_promotion_url_isValid;

    m_redemption_channel_isValid = ::OpenAPI::fromJsonValue(m_redemption_channel, json[QString("redemptionChannel")]);
    m_redemption_channel_isSet = !json[QString("redemptionChannel")].isNull() && m_redemption_channel_isValid;

    m_shipping_service_names_isValid = ::OpenAPI::fromJsonValue(m_shipping_service_names, json[QString("shippingServiceNames")]);
    m_shipping_service_names_isSet = !json[QString("shippingServiceNames")].isNull() && m_shipping_service_names_isValid;

    m_store_applicability_isValid = ::OpenAPI::fromJsonValue(m_store_applicability, json[QString("storeApplicability")]);
    m_store_applicability_isSet = !json[QString("storeApplicability")].isNull() && m_store_applicability_isValid;

    m_store_code_isValid = ::OpenAPI::fromJsonValue(m_store_code, json[QString("storeCode")]);
    m_store_code_isSet = !json[QString("storeCode")].isNull() && m_store_code_isValid;

    m_store_code_exclusion_isValid = ::OpenAPI::fromJsonValue(m_store_code_exclusion, json[QString("storeCodeExclusion")]);
    m_store_code_exclusion_isSet = !json[QString("storeCodeExclusion")].isNull() && m_store_code_exclusion_isValid;

    m_target_country_isValid = ::OpenAPI::fromJsonValue(m_target_country, json[QString("targetCountry")]);
    m_target_country_isSet = !json[QString("targetCountry")].isNull() && m_target_country_isValid;
}

QString OAIPromotion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPromotion::asJsonObject() const {
    QJsonObject obj;
    if (m_brand.size() > 0) {
        obj.insert(QString("brand"), ::OpenAPI::toJsonValue(m_brand));
    }
    if (m_brand_exclusion.size() > 0) {
        obj.insert(QString("brandExclusion"), ::OpenAPI::toJsonValue(m_brand_exclusion));
    }
    if (m_content_language_isSet) {
        obj.insert(QString("contentLanguage"), ::OpenAPI::toJsonValue(m_content_language));
    }
    if (m_coupon_value_type_isSet) {
        obj.insert(QString("couponValueType"), ::OpenAPI::toJsonValue(m_coupon_value_type));
    }
    if (m_free_gift_description_isSet) {
        obj.insert(QString("freeGiftDescription"), ::OpenAPI::toJsonValue(m_free_gift_description));
    }
    if (m_free_gift_item_id_isSet) {
        obj.insert(QString("freeGiftItemId"), ::OpenAPI::toJsonValue(m_free_gift_item_id));
    }
    if (m_free_gift_value.isSet()) {
        obj.insert(QString("freeGiftValue"), ::OpenAPI::toJsonValue(m_free_gift_value));
    }
    if (m_generic_redemption_code_isSet) {
        obj.insert(QString("genericRedemptionCode"), ::OpenAPI::toJsonValue(m_generic_redemption_code));
    }
    if (m_get_this_quantity_discounted_isSet) {
        obj.insert(QString("getThisQuantityDiscounted"), ::OpenAPI::toJsonValue(m_get_this_quantity_discounted));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_item_group_id.size() > 0) {
        obj.insert(QString("itemGroupId"), ::OpenAPI::toJsonValue(m_item_group_id));
    }
    if (m_item_group_id_exclusion.size() > 0) {
        obj.insert(QString("itemGroupIdExclusion"), ::OpenAPI::toJsonValue(m_item_group_id_exclusion));
    }
    if (m_item_id.size() > 0) {
        obj.insert(QString("itemId"), ::OpenAPI::toJsonValue(m_item_id));
    }
    if (m_item_id_exclusion.size() > 0) {
        obj.insert(QString("itemIdExclusion"), ::OpenAPI::toJsonValue(m_item_id_exclusion));
    }
    if (m_limit_quantity_isSet) {
        obj.insert(QString("limitQuantity"), ::OpenAPI::toJsonValue(m_limit_quantity));
    }
    if (m_limit_value.isSet()) {
        obj.insert(QString("limitValue"), ::OpenAPI::toJsonValue(m_limit_value));
    }
    if (m_long_title_isSet) {
        obj.insert(QString("longTitle"), ::OpenAPI::toJsonValue(m_long_title));
    }
    if (m_minimum_purchase_amount.isSet()) {
        obj.insert(QString("minimumPurchaseAmount"), ::OpenAPI::toJsonValue(m_minimum_purchase_amount));
    }
    if (m_minimum_purchase_quantity_isSet) {
        obj.insert(QString("minimumPurchaseQuantity"), ::OpenAPI::toJsonValue(m_minimum_purchase_quantity));
    }
    if (m_money_budget.isSet()) {
        obj.insert(QString("moneyBudget"), ::OpenAPI::toJsonValue(m_money_budget));
    }
    if (m_money_off_amount.isSet()) {
        obj.insert(QString("moneyOffAmount"), ::OpenAPI::toJsonValue(m_money_off_amount));
    }
    if (m_offer_type_isSet) {
        obj.insert(QString("offerType"), ::OpenAPI::toJsonValue(m_offer_type));
    }
    if (m_order_limit_isSet) {
        obj.insert(QString("orderLimit"), ::OpenAPI::toJsonValue(m_order_limit));
    }
    if (m_percent_off_isSet) {
        obj.insert(QString("percentOff"), ::OpenAPI::toJsonValue(m_percent_off));
    }
    if (m_product_applicability_isSet) {
        obj.insert(QString("productApplicability"), ::OpenAPI::toJsonValue(m_product_applicability));
    }
    if (m_product_type.size() > 0) {
        obj.insert(QString("productType"), ::OpenAPI::toJsonValue(m_product_type));
    }
    if (m_product_type_exclusion.size() > 0) {
        obj.insert(QString("productTypeExclusion"), ::OpenAPI::toJsonValue(m_product_type_exclusion));
    }
    if (m_promotion_destination_ids.size() > 0) {
        obj.insert(QString("promotionDestinationIds"), ::OpenAPI::toJsonValue(m_promotion_destination_ids));
    }
    if (m_promotion_display_dates_isSet) {
        obj.insert(QString("promotionDisplayDates"), ::OpenAPI::toJsonValue(m_promotion_display_dates));
    }
    if (m_promotion_display_time_period.isSet()) {
        obj.insert(QString("promotionDisplayTimePeriod"), ::OpenAPI::toJsonValue(m_promotion_display_time_period));
    }
    if (m_promotion_effective_dates_isSet) {
        obj.insert(QString("promotionEffectiveDates"), ::OpenAPI::toJsonValue(m_promotion_effective_dates));
    }
    if (m_promotion_effective_time_period.isSet()) {
        obj.insert(QString("promotionEffectiveTimePeriod"), ::OpenAPI::toJsonValue(m_promotion_effective_time_period));
    }
    if (m_promotion_id_isSet) {
        obj.insert(QString("promotionId"), ::OpenAPI::toJsonValue(m_promotion_id));
    }
    if (m_promotion_status.isSet()) {
        obj.insert(QString("promotionStatus"), ::OpenAPI::toJsonValue(m_promotion_status));
    }
    if (m_promotion_url_isSet) {
        obj.insert(QString("promotionUrl"), ::OpenAPI::toJsonValue(m_promotion_url));
    }
    if (m_redemption_channel.size() > 0) {
        obj.insert(QString("redemptionChannel"), ::OpenAPI::toJsonValue(m_redemption_channel));
    }
    if (m_shipping_service_names.size() > 0) {
        obj.insert(QString("shippingServiceNames"), ::OpenAPI::toJsonValue(m_shipping_service_names));
    }
    if (m_store_applicability_isSet) {
        obj.insert(QString("storeApplicability"), ::OpenAPI::toJsonValue(m_store_applicability));
    }
    if (m_store_code.size() > 0) {
        obj.insert(QString("storeCode"), ::OpenAPI::toJsonValue(m_store_code));
    }
    if (m_store_code_exclusion.size() > 0) {
        obj.insert(QString("storeCodeExclusion"), ::OpenAPI::toJsonValue(m_store_code_exclusion));
    }
    if (m_target_country_isSet) {
        obj.insert(QString("targetCountry"), ::OpenAPI::toJsonValue(m_target_country));
    }
    return obj;
}

QList<QString> OAIPromotion::getBrand() const {
    return m_brand;
}
void OAIPromotion::setBrand(const QList<QString> &brand) {
    m_brand = brand;
    m_brand_isSet = true;
}

bool OAIPromotion::is_brand_Set() const{
    return m_brand_isSet;
}

bool OAIPromotion::is_brand_Valid() const{
    return m_brand_isValid;
}

QList<QString> OAIPromotion::getBrandExclusion() const {
    return m_brand_exclusion;
}
void OAIPromotion::setBrandExclusion(const QList<QString> &brand_exclusion) {
    m_brand_exclusion = brand_exclusion;
    m_brand_exclusion_isSet = true;
}

bool OAIPromotion::is_brand_exclusion_Set() const{
    return m_brand_exclusion_isSet;
}

bool OAIPromotion::is_brand_exclusion_Valid() const{
    return m_brand_exclusion_isValid;
}

QString OAIPromotion::getContentLanguage() const {
    return m_content_language;
}
void OAIPromotion::setContentLanguage(const QString &content_language) {
    m_content_language = content_language;
    m_content_language_isSet = true;
}

bool OAIPromotion::is_content_language_Set() const{
    return m_content_language_isSet;
}

bool OAIPromotion::is_content_language_Valid() const{
    return m_content_language_isValid;
}

QString OAIPromotion::getCouponValueType() const {
    return m_coupon_value_type;
}
void OAIPromotion::setCouponValueType(const QString &coupon_value_type) {
    m_coupon_value_type = coupon_value_type;
    m_coupon_value_type_isSet = true;
}

bool OAIPromotion::is_coupon_value_type_Set() const{
    return m_coupon_value_type_isSet;
}

bool OAIPromotion::is_coupon_value_type_Valid() const{
    return m_coupon_value_type_isValid;
}

QString OAIPromotion::getFreeGiftDescription() const {
    return m_free_gift_description;
}
void OAIPromotion::setFreeGiftDescription(const QString &free_gift_description) {
    m_free_gift_description = free_gift_description;
    m_free_gift_description_isSet = true;
}

bool OAIPromotion::is_free_gift_description_Set() const{
    return m_free_gift_description_isSet;
}

bool OAIPromotion::is_free_gift_description_Valid() const{
    return m_free_gift_description_isValid;
}

QString OAIPromotion::getFreeGiftItemId() const {
    return m_free_gift_item_id;
}
void OAIPromotion::setFreeGiftItemId(const QString &free_gift_item_id) {
    m_free_gift_item_id = free_gift_item_id;
    m_free_gift_item_id_isSet = true;
}

bool OAIPromotion::is_free_gift_item_id_Set() const{
    return m_free_gift_item_id_isSet;
}

bool OAIPromotion::is_free_gift_item_id_Valid() const{
    return m_free_gift_item_id_isValid;
}

OAIPriceAmount OAIPromotion::getFreeGiftValue() const {
    return m_free_gift_value;
}
void OAIPromotion::setFreeGiftValue(const OAIPriceAmount &free_gift_value) {
    m_free_gift_value = free_gift_value;
    m_free_gift_value_isSet = true;
}

bool OAIPromotion::is_free_gift_value_Set() const{
    return m_free_gift_value_isSet;
}

bool OAIPromotion::is_free_gift_value_Valid() const{
    return m_free_gift_value_isValid;
}

QString OAIPromotion::getGenericRedemptionCode() const {
    return m_generic_redemption_code;
}
void OAIPromotion::setGenericRedemptionCode(const QString &generic_redemption_code) {
    m_generic_redemption_code = generic_redemption_code;
    m_generic_redemption_code_isSet = true;
}

bool OAIPromotion::is_generic_redemption_code_Set() const{
    return m_generic_redemption_code_isSet;
}

bool OAIPromotion::is_generic_redemption_code_Valid() const{
    return m_generic_redemption_code_isValid;
}

qint32 OAIPromotion::getGetThisQuantityDiscounted() const {
    return m_get_this_quantity_discounted;
}
void OAIPromotion::setGetThisQuantityDiscounted(const qint32 &get_this_quantity_discounted) {
    m_get_this_quantity_discounted = get_this_quantity_discounted;
    m_get_this_quantity_discounted_isSet = true;
}

bool OAIPromotion::is_get_this_quantity_discounted_Set() const{
    return m_get_this_quantity_discounted_isSet;
}

bool OAIPromotion::is_get_this_quantity_discounted_Valid() const{
    return m_get_this_quantity_discounted_isValid;
}

QString OAIPromotion::getId() const {
    return m_id;
}
void OAIPromotion::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPromotion::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPromotion::is_id_Valid() const{
    return m_id_isValid;
}

QList<QString> OAIPromotion::getItemGroupId() const {
    return m_item_group_id;
}
void OAIPromotion::setItemGroupId(const QList<QString> &item_group_id) {
    m_item_group_id = item_group_id;
    m_item_group_id_isSet = true;
}

bool OAIPromotion::is_item_group_id_Set() const{
    return m_item_group_id_isSet;
}

bool OAIPromotion::is_item_group_id_Valid() const{
    return m_item_group_id_isValid;
}

QList<QString> OAIPromotion::getItemGroupIdExclusion() const {
    return m_item_group_id_exclusion;
}
void OAIPromotion::setItemGroupIdExclusion(const QList<QString> &item_group_id_exclusion) {
    m_item_group_id_exclusion = item_group_id_exclusion;
    m_item_group_id_exclusion_isSet = true;
}

bool OAIPromotion::is_item_group_id_exclusion_Set() const{
    return m_item_group_id_exclusion_isSet;
}

bool OAIPromotion::is_item_group_id_exclusion_Valid() const{
    return m_item_group_id_exclusion_isValid;
}

QList<QString> OAIPromotion::getItemId() const {
    return m_item_id;
}
void OAIPromotion::setItemId(const QList<QString> &item_id) {
    m_item_id = item_id;
    m_item_id_isSet = true;
}

bool OAIPromotion::is_item_id_Set() const{
    return m_item_id_isSet;
}

bool OAIPromotion::is_item_id_Valid() const{
    return m_item_id_isValid;
}

QList<QString> OAIPromotion::getItemIdExclusion() const {
    return m_item_id_exclusion;
}
void OAIPromotion::setItemIdExclusion(const QList<QString> &item_id_exclusion) {
    m_item_id_exclusion = item_id_exclusion;
    m_item_id_exclusion_isSet = true;
}

bool OAIPromotion::is_item_id_exclusion_Set() const{
    return m_item_id_exclusion_isSet;
}

bool OAIPromotion::is_item_id_exclusion_Valid() const{
    return m_item_id_exclusion_isValid;
}

qint32 OAIPromotion::getLimitQuantity() const {
    return m_limit_quantity;
}
void OAIPromotion::setLimitQuantity(const qint32 &limit_quantity) {
    m_limit_quantity = limit_quantity;
    m_limit_quantity_isSet = true;
}

bool OAIPromotion::is_limit_quantity_Set() const{
    return m_limit_quantity_isSet;
}

bool OAIPromotion::is_limit_quantity_Valid() const{
    return m_limit_quantity_isValid;
}

OAIPriceAmount OAIPromotion::getLimitValue() const {
    return m_limit_value;
}
void OAIPromotion::setLimitValue(const OAIPriceAmount &limit_value) {
    m_limit_value = limit_value;
    m_limit_value_isSet = true;
}

bool OAIPromotion::is_limit_value_Set() const{
    return m_limit_value_isSet;
}

bool OAIPromotion::is_limit_value_Valid() const{
    return m_limit_value_isValid;
}

QString OAIPromotion::getLongTitle() const {
    return m_long_title;
}
void OAIPromotion::setLongTitle(const QString &long_title) {
    m_long_title = long_title;
    m_long_title_isSet = true;
}

bool OAIPromotion::is_long_title_Set() const{
    return m_long_title_isSet;
}

bool OAIPromotion::is_long_title_Valid() const{
    return m_long_title_isValid;
}

OAIPriceAmount OAIPromotion::getMinimumPurchaseAmount() const {
    return m_minimum_purchase_amount;
}
void OAIPromotion::setMinimumPurchaseAmount(const OAIPriceAmount &minimum_purchase_amount) {
    m_minimum_purchase_amount = minimum_purchase_amount;
    m_minimum_purchase_amount_isSet = true;
}

bool OAIPromotion::is_minimum_purchase_amount_Set() const{
    return m_minimum_purchase_amount_isSet;
}

bool OAIPromotion::is_minimum_purchase_amount_Valid() const{
    return m_minimum_purchase_amount_isValid;
}

qint32 OAIPromotion::getMinimumPurchaseQuantity() const {
    return m_minimum_purchase_quantity;
}
void OAIPromotion::setMinimumPurchaseQuantity(const qint32 &minimum_purchase_quantity) {
    m_minimum_purchase_quantity = minimum_purchase_quantity;
    m_minimum_purchase_quantity_isSet = true;
}

bool OAIPromotion::is_minimum_purchase_quantity_Set() const{
    return m_minimum_purchase_quantity_isSet;
}

bool OAIPromotion::is_minimum_purchase_quantity_Valid() const{
    return m_minimum_purchase_quantity_isValid;
}

OAIPriceAmount OAIPromotion::getMoneyBudget() const {
    return m_money_budget;
}
void OAIPromotion::setMoneyBudget(const OAIPriceAmount &money_budget) {
    m_money_budget = money_budget;
    m_money_budget_isSet = true;
}

bool OAIPromotion::is_money_budget_Set() const{
    return m_money_budget_isSet;
}

bool OAIPromotion::is_money_budget_Valid() const{
    return m_money_budget_isValid;
}

OAIPriceAmount OAIPromotion::getMoneyOffAmount() const {
    return m_money_off_amount;
}
void OAIPromotion::setMoneyOffAmount(const OAIPriceAmount &money_off_amount) {
    m_money_off_amount = money_off_amount;
    m_money_off_amount_isSet = true;
}

bool OAIPromotion::is_money_off_amount_Set() const{
    return m_money_off_amount_isSet;
}

bool OAIPromotion::is_money_off_amount_Valid() const{
    return m_money_off_amount_isValid;
}

QString OAIPromotion::getOfferType() const {
    return m_offer_type;
}
void OAIPromotion::setOfferType(const QString &offer_type) {
    m_offer_type = offer_type;
    m_offer_type_isSet = true;
}

bool OAIPromotion::is_offer_type_Set() const{
    return m_offer_type_isSet;
}

bool OAIPromotion::is_offer_type_Valid() const{
    return m_offer_type_isValid;
}

qint32 OAIPromotion::getOrderLimit() const {
    return m_order_limit;
}
void OAIPromotion::setOrderLimit(const qint32 &order_limit) {
    m_order_limit = order_limit;
    m_order_limit_isSet = true;
}

bool OAIPromotion::is_order_limit_Set() const{
    return m_order_limit_isSet;
}

bool OAIPromotion::is_order_limit_Valid() const{
    return m_order_limit_isValid;
}

qint32 OAIPromotion::getPercentOff() const {
    return m_percent_off;
}
void OAIPromotion::setPercentOff(const qint32 &percent_off) {
    m_percent_off = percent_off;
    m_percent_off_isSet = true;
}

bool OAIPromotion::is_percent_off_Set() const{
    return m_percent_off_isSet;
}

bool OAIPromotion::is_percent_off_Valid() const{
    return m_percent_off_isValid;
}

QString OAIPromotion::getProductApplicability() const {
    return m_product_applicability;
}
void OAIPromotion::setProductApplicability(const QString &product_applicability) {
    m_product_applicability = product_applicability;
    m_product_applicability_isSet = true;
}

bool OAIPromotion::is_product_applicability_Set() const{
    return m_product_applicability_isSet;
}

bool OAIPromotion::is_product_applicability_Valid() const{
    return m_product_applicability_isValid;
}

QList<QString> OAIPromotion::getProductType() const {
    return m_product_type;
}
void OAIPromotion::setProductType(const QList<QString> &product_type) {
    m_product_type = product_type;
    m_product_type_isSet = true;
}

bool OAIPromotion::is_product_type_Set() const{
    return m_product_type_isSet;
}

bool OAIPromotion::is_product_type_Valid() const{
    return m_product_type_isValid;
}

QList<QString> OAIPromotion::getProductTypeExclusion() const {
    return m_product_type_exclusion;
}
void OAIPromotion::setProductTypeExclusion(const QList<QString> &product_type_exclusion) {
    m_product_type_exclusion = product_type_exclusion;
    m_product_type_exclusion_isSet = true;
}

bool OAIPromotion::is_product_type_exclusion_Set() const{
    return m_product_type_exclusion_isSet;
}

bool OAIPromotion::is_product_type_exclusion_Valid() const{
    return m_product_type_exclusion_isValid;
}

QList<QString> OAIPromotion::getPromotionDestinationIds() const {
    return m_promotion_destination_ids;
}
void OAIPromotion::setPromotionDestinationIds(const QList<QString> &promotion_destination_ids) {
    m_promotion_destination_ids = promotion_destination_ids;
    m_promotion_destination_ids_isSet = true;
}

bool OAIPromotion::is_promotion_destination_ids_Set() const{
    return m_promotion_destination_ids_isSet;
}

bool OAIPromotion::is_promotion_destination_ids_Valid() const{
    return m_promotion_destination_ids_isValid;
}

QString OAIPromotion::getPromotionDisplayDates() const {
    return m_promotion_display_dates;
}
void OAIPromotion::setPromotionDisplayDates(const QString &promotion_display_dates) {
    m_promotion_display_dates = promotion_display_dates;
    m_promotion_display_dates_isSet = true;
}

bool OAIPromotion::is_promotion_display_dates_Set() const{
    return m_promotion_display_dates_isSet;
}

bool OAIPromotion::is_promotion_display_dates_Valid() const{
    return m_promotion_display_dates_isValid;
}

OAITimePeriod OAIPromotion::getPromotionDisplayTimePeriod() const {
    return m_promotion_display_time_period;
}
void OAIPromotion::setPromotionDisplayTimePeriod(const OAITimePeriod &promotion_display_time_period) {
    m_promotion_display_time_period = promotion_display_time_period;
    m_promotion_display_time_period_isSet = true;
}

bool OAIPromotion::is_promotion_display_time_period_Set() const{
    return m_promotion_display_time_period_isSet;
}

bool OAIPromotion::is_promotion_display_time_period_Valid() const{
    return m_promotion_display_time_period_isValid;
}

QString OAIPromotion::getPromotionEffectiveDates() const {
    return m_promotion_effective_dates;
}
void OAIPromotion::setPromotionEffectiveDates(const QString &promotion_effective_dates) {
    m_promotion_effective_dates = promotion_effective_dates;
    m_promotion_effective_dates_isSet = true;
}

bool OAIPromotion::is_promotion_effective_dates_Set() const{
    return m_promotion_effective_dates_isSet;
}

bool OAIPromotion::is_promotion_effective_dates_Valid() const{
    return m_promotion_effective_dates_isValid;
}

OAITimePeriod OAIPromotion::getPromotionEffectiveTimePeriod() const {
    return m_promotion_effective_time_period;
}
void OAIPromotion::setPromotionEffectiveTimePeriod(const OAITimePeriod &promotion_effective_time_period) {
    m_promotion_effective_time_period = promotion_effective_time_period;
    m_promotion_effective_time_period_isSet = true;
}

bool OAIPromotion::is_promotion_effective_time_period_Set() const{
    return m_promotion_effective_time_period_isSet;
}

bool OAIPromotion::is_promotion_effective_time_period_Valid() const{
    return m_promotion_effective_time_period_isValid;
}

QString OAIPromotion::getPromotionId() const {
    return m_promotion_id;
}
void OAIPromotion::setPromotionId(const QString &promotion_id) {
    m_promotion_id = promotion_id;
    m_promotion_id_isSet = true;
}

bool OAIPromotion::is_promotion_id_Set() const{
    return m_promotion_id_isSet;
}

bool OAIPromotion::is_promotion_id_Valid() const{
    return m_promotion_id_isValid;
}

OAIPromotionPromotionStatus OAIPromotion::getPromotionStatus() const {
    return m_promotion_status;
}
void OAIPromotion::setPromotionStatus(const OAIPromotionPromotionStatus &promotion_status) {
    m_promotion_status = promotion_status;
    m_promotion_status_isSet = true;
}

bool OAIPromotion::is_promotion_status_Set() const{
    return m_promotion_status_isSet;
}

bool OAIPromotion::is_promotion_status_Valid() const{
    return m_promotion_status_isValid;
}

QString OAIPromotion::getPromotionUrl() const {
    return m_promotion_url;
}
void OAIPromotion::setPromotionUrl(const QString &promotion_url) {
    m_promotion_url = promotion_url;
    m_promotion_url_isSet = true;
}

bool OAIPromotion::is_promotion_url_Set() const{
    return m_promotion_url_isSet;
}

bool OAIPromotion::is_promotion_url_Valid() const{
    return m_promotion_url_isValid;
}

QList<QString> OAIPromotion::getRedemptionChannel() const {
    return m_redemption_channel;
}
void OAIPromotion::setRedemptionChannel(const QList<QString> &redemption_channel) {
    m_redemption_channel = redemption_channel;
    m_redemption_channel_isSet = true;
}

bool OAIPromotion::is_redemption_channel_Set() const{
    return m_redemption_channel_isSet;
}

bool OAIPromotion::is_redemption_channel_Valid() const{
    return m_redemption_channel_isValid;
}

QList<QString> OAIPromotion::getShippingServiceNames() const {
    return m_shipping_service_names;
}
void OAIPromotion::setShippingServiceNames(const QList<QString> &shipping_service_names) {
    m_shipping_service_names = shipping_service_names;
    m_shipping_service_names_isSet = true;
}

bool OAIPromotion::is_shipping_service_names_Set() const{
    return m_shipping_service_names_isSet;
}

bool OAIPromotion::is_shipping_service_names_Valid() const{
    return m_shipping_service_names_isValid;
}

QString OAIPromotion::getStoreApplicability() const {
    return m_store_applicability;
}
void OAIPromotion::setStoreApplicability(const QString &store_applicability) {
    m_store_applicability = store_applicability;
    m_store_applicability_isSet = true;
}

bool OAIPromotion::is_store_applicability_Set() const{
    return m_store_applicability_isSet;
}

bool OAIPromotion::is_store_applicability_Valid() const{
    return m_store_applicability_isValid;
}

QList<QString> OAIPromotion::getStoreCode() const {
    return m_store_code;
}
void OAIPromotion::setStoreCode(const QList<QString> &store_code) {
    m_store_code = store_code;
    m_store_code_isSet = true;
}

bool OAIPromotion::is_store_code_Set() const{
    return m_store_code_isSet;
}

bool OAIPromotion::is_store_code_Valid() const{
    return m_store_code_isValid;
}

QList<QString> OAIPromotion::getStoreCodeExclusion() const {
    return m_store_code_exclusion;
}
void OAIPromotion::setStoreCodeExclusion(const QList<QString> &store_code_exclusion) {
    m_store_code_exclusion = store_code_exclusion;
    m_store_code_exclusion_isSet = true;
}

bool OAIPromotion::is_store_code_exclusion_Set() const{
    return m_store_code_exclusion_isSet;
}

bool OAIPromotion::is_store_code_exclusion_Valid() const{
    return m_store_code_exclusion_isValid;
}

QString OAIPromotion::getTargetCountry() const {
    return m_target_country;
}
void OAIPromotion::setTargetCountry(const QString &target_country) {
    m_target_country = target_country;
    m_target_country_isSet = true;
}

bool OAIPromotion::is_target_country_Set() const{
    return m_target_country_isSet;
}

bool OAIPromotion::is_target_country_Valid() const{
    return m_target_country_isValid;
}

bool OAIPromotion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_brand.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_brand_exclusion.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coupon_value_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_gift_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_gift_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_gift_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_generic_redemption_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_get_this_quantity_discounted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_group_id.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_group_id_exclusion.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_id.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_id_exclusion.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_limit_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_limit_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_long_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_minimum_purchase_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_minimum_purchase_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_money_budget.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_money_off_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_offer_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_off_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_applicability_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type_exclusion.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_destination_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_display_dates_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_display_time_period.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_effective_dates_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_effective_time_period.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redemption_channel.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_service_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_applicability_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_code.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_code_exclusion.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_country_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPromotion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
