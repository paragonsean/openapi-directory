/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderLineItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderLineItem::OAIOrderLineItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderLineItem::OAIOrderLineItem() {
    this->initializeModel();
}

OAIOrderLineItem::~OAIOrderLineItem() {}

void OAIOrderLineItem::initializeModel() {

    m_adjustments_isSet = false;
    m_adjustments_isValid = false;

    m_annotations_isSet = false;
    m_annotations_isValid = false;

    m_cancellations_isSet = false;
    m_cancellations_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_product_isSet = false;
    m_product_isValid = false;

    m_quantity_canceled_isSet = false;
    m_quantity_canceled_isValid = false;

    m_quantity_delivered_isSet = false;
    m_quantity_delivered_isValid = false;

    m_quantity_ordered_isSet = false;
    m_quantity_ordered_isValid = false;

    m_quantity_pending_isSet = false;
    m_quantity_pending_isValid = false;

    m_quantity_ready_for_pickup_isSet = false;
    m_quantity_ready_for_pickup_isValid = false;

    m_quantity_returned_isSet = false;
    m_quantity_returned_isValid = false;

    m_quantity_shipped_isSet = false;
    m_quantity_shipped_isValid = false;

    m_quantity_undeliverable_isSet = false;
    m_quantity_undeliverable_isValid = false;

    m_return_info_isSet = false;
    m_return_info_isValid = false;

    m_returns_isSet = false;
    m_returns_isValid = false;

    m_shipping_details_isSet = false;
    m_shipping_details_isValid = false;

    m_tax_isSet = false;
    m_tax_isValid = false;
}

void OAIOrderLineItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderLineItem::fromJsonObject(QJsonObject json) {

    m_adjustments_isValid = ::OpenAPI::fromJsonValue(m_adjustments, json[QString("adjustments")]);
    m_adjustments_isSet = !json[QString("adjustments")].isNull() && m_adjustments_isValid;

    m_annotations_isValid = ::OpenAPI::fromJsonValue(m_annotations, json[QString("annotations")]);
    m_annotations_isSet = !json[QString("annotations")].isNull() && m_annotations_isValid;

    m_cancellations_isValid = ::OpenAPI::fromJsonValue(m_cancellations, json[QString("cancellations")]);
    m_cancellations_isSet = !json[QString("cancellations")].isNull() && m_cancellations_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_product_isValid = ::OpenAPI::fromJsonValue(m_product, json[QString("product")]);
    m_product_isSet = !json[QString("product")].isNull() && m_product_isValid;

    m_quantity_canceled_isValid = ::OpenAPI::fromJsonValue(m_quantity_canceled, json[QString("quantityCanceled")]);
    m_quantity_canceled_isSet = !json[QString("quantityCanceled")].isNull() && m_quantity_canceled_isValid;

    m_quantity_delivered_isValid = ::OpenAPI::fromJsonValue(m_quantity_delivered, json[QString("quantityDelivered")]);
    m_quantity_delivered_isSet = !json[QString("quantityDelivered")].isNull() && m_quantity_delivered_isValid;

    m_quantity_ordered_isValid = ::OpenAPI::fromJsonValue(m_quantity_ordered, json[QString("quantityOrdered")]);
    m_quantity_ordered_isSet = !json[QString("quantityOrdered")].isNull() && m_quantity_ordered_isValid;

    m_quantity_pending_isValid = ::OpenAPI::fromJsonValue(m_quantity_pending, json[QString("quantityPending")]);
    m_quantity_pending_isSet = !json[QString("quantityPending")].isNull() && m_quantity_pending_isValid;

    m_quantity_ready_for_pickup_isValid = ::OpenAPI::fromJsonValue(m_quantity_ready_for_pickup, json[QString("quantityReadyForPickup")]);
    m_quantity_ready_for_pickup_isSet = !json[QString("quantityReadyForPickup")].isNull() && m_quantity_ready_for_pickup_isValid;

    m_quantity_returned_isValid = ::OpenAPI::fromJsonValue(m_quantity_returned, json[QString("quantityReturned")]);
    m_quantity_returned_isSet = !json[QString("quantityReturned")].isNull() && m_quantity_returned_isValid;

    m_quantity_shipped_isValid = ::OpenAPI::fromJsonValue(m_quantity_shipped, json[QString("quantityShipped")]);
    m_quantity_shipped_isSet = !json[QString("quantityShipped")].isNull() && m_quantity_shipped_isValid;

    m_quantity_undeliverable_isValid = ::OpenAPI::fromJsonValue(m_quantity_undeliverable, json[QString("quantityUndeliverable")]);
    m_quantity_undeliverable_isSet = !json[QString("quantityUndeliverable")].isNull() && m_quantity_undeliverable_isValid;

    m_return_info_isValid = ::OpenAPI::fromJsonValue(m_return_info, json[QString("returnInfo")]);
    m_return_info_isSet = !json[QString("returnInfo")].isNull() && m_return_info_isValid;

    m_returns_isValid = ::OpenAPI::fromJsonValue(m_returns, json[QString("returns")]);
    m_returns_isSet = !json[QString("returns")].isNull() && m_returns_isValid;

    m_shipping_details_isValid = ::OpenAPI::fromJsonValue(m_shipping_details, json[QString("shippingDetails")]);
    m_shipping_details_isSet = !json[QString("shippingDetails")].isNull() && m_shipping_details_isValid;

    m_tax_isValid = ::OpenAPI::fromJsonValue(m_tax, json[QString("tax")]);
    m_tax_isSet = !json[QString("tax")].isNull() && m_tax_isValid;
}

QString OAIOrderLineItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderLineItem::asJsonObject() const {
    QJsonObject obj;
    if (m_adjustments.size() > 0) {
        obj.insert(QString("adjustments"), ::OpenAPI::toJsonValue(m_adjustments));
    }
    if (m_annotations.size() > 0) {
        obj.insert(QString("annotations"), ::OpenAPI::toJsonValue(m_annotations));
    }
    if (m_cancellations.size() > 0) {
        obj.insert(QString("cancellations"), ::OpenAPI::toJsonValue(m_cancellations));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_price.isSet()) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_product.isSet()) {
        obj.insert(QString("product"), ::OpenAPI::toJsonValue(m_product));
    }
    if (m_quantity_canceled_isSet) {
        obj.insert(QString("quantityCanceled"), ::OpenAPI::toJsonValue(m_quantity_canceled));
    }
    if (m_quantity_delivered_isSet) {
        obj.insert(QString("quantityDelivered"), ::OpenAPI::toJsonValue(m_quantity_delivered));
    }
    if (m_quantity_ordered_isSet) {
        obj.insert(QString("quantityOrdered"), ::OpenAPI::toJsonValue(m_quantity_ordered));
    }
    if (m_quantity_pending_isSet) {
        obj.insert(QString("quantityPending"), ::OpenAPI::toJsonValue(m_quantity_pending));
    }
    if (m_quantity_ready_for_pickup_isSet) {
        obj.insert(QString("quantityReadyForPickup"), ::OpenAPI::toJsonValue(m_quantity_ready_for_pickup));
    }
    if (m_quantity_returned_isSet) {
        obj.insert(QString("quantityReturned"), ::OpenAPI::toJsonValue(m_quantity_returned));
    }
    if (m_quantity_shipped_isSet) {
        obj.insert(QString("quantityShipped"), ::OpenAPI::toJsonValue(m_quantity_shipped));
    }
    if (m_quantity_undeliverable_isSet) {
        obj.insert(QString("quantityUndeliverable"), ::OpenAPI::toJsonValue(m_quantity_undeliverable));
    }
    if (m_return_info.isSet()) {
        obj.insert(QString("returnInfo"), ::OpenAPI::toJsonValue(m_return_info));
    }
    if (m_returns.size() > 0) {
        obj.insert(QString("returns"), ::OpenAPI::toJsonValue(m_returns));
    }
    if (m_shipping_details.isSet()) {
        obj.insert(QString("shippingDetails"), ::OpenAPI::toJsonValue(m_shipping_details));
    }
    if (m_tax.isSet()) {
        obj.insert(QString("tax"), ::OpenAPI::toJsonValue(m_tax));
    }
    return obj;
}

QList<OAIOrderLineItemAdjustment> OAIOrderLineItem::getAdjustments() const {
    return m_adjustments;
}
void OAIOrderLineItem::setAdjustments(const QList<OAIOrderLineItemAdjustment> &adjustments) {
    m_adjustments = adjustments;
    m_adjustments_isSet = true;
}

bool OAIOrderLineItem::is_adjustments_Set() const{
    return m_adjustments_isSet;
}

bool OAIOrderLineItem::is_adjustments_Valid() const{
    return m_adjustments_isValid;
}

QList<OAIOrderMerchantProvidedAnnotation> OAIOrderLineItem::getAnnotations() const {
    return m_annotations;
}
void OAIOrderLineItem::setAnnotations(const QList<OAIOrderMerchantProvidedAnnotation> &annotations) {
    m_annotations = annotations;
    m_annotations_isSet = true;
}

bool OAIOrderLineItem::is_annotations_Set() const{
    return m_annotations_isSet;
}

bool OAIOrderLineItem::is_annotations_Valid() const{
    return m_annotations_isValid;
}

QList<OAIOrderCancellation> OAIOrderLineItem::getCancellations() const {
    return m_cancellations;
}
void OAIOrderLineItem::setCancellations(const QList<OAIOrderCancellation> &cancellations) {
    m_cancellations = cancellations;
    m_cancellations_isSet = true;
}

bool OAIOrderLineItem::is_cancellations_Set() const{
    return m_cancellations_isSet;
}

bool OAIOrderLineItem::is_cancellations_Valid() const{
    return m_cancellations_isValid;
}

QString OAIOrderLineItem::getId() const {
    return m_id;
}
void OAIOrderLineItem::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIOrderLineItem::is_id_Set() const{
    return m_id_isSet;
}

bool OAIOrderLineItem::is_id_Valid() const{
    return m_id_isValid;
}

OAIPrice OAIOrderLineItem::getPrice() const {
    return m_price;
}
void OAIOrderLineItem::setPrice(const OAIPrice &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIOrderLineItem::is_price_Set() const{
    return m_price_isSet;
}

bool OAIOrderLineItem::is_price_Valid() const{
    return m_price_isValid;
}

OAIOrderLineItemProduct OAIOrderLineItem::getProduct() const {
    return m_product;
}
void OAIOrderLineItem::setProduct(const OAIOrderLineItemProduct &product) {
    m_product = product;
    m_product_isSet = true;
}

bool OAIOrderLineItem::is_product_Set() const{
    return m_product_isSet;
}

bool OAIOrderLineItem::is_product_Valid() const{
    return m_product_isValid;
}

qint32 OAIOrderLineItem::getQuantityCanceled() const {
    return m_quantity_canceled;
}
void OAIOrderLineItem::setQuantityCanceled(const qint32 &quantity_canceled) {
    m_quantity_canceled = quantity_canceled;
    m_quantity_canceled_isSet = true;
}

bool OAIOrderLineItem::is_quantity_canceled_Set() const{
    return m_quantity_canceled_isSet;
}

bool OAIOrderLineItem::is_quantity_canceled_Valid() const{
    return m_quantity_canceled_isValid;
}

qint32 OAIOrderLineItem::getQuantityDelivered() const {
    return m_quantity_delivered;
}
void OAIOrderLineItem::setQuantityDelivered(const qint32 &quantity_delivered) {
    m_quantity_delivered = quantity_delivered;
    m_quantity_delivered_isSet = true;
}

bool OAIOrderLineItem::is_quantity_delivered_Set() const{
    return m_quantity_delivered_isSet;
}

bool OAIOrderLineItem::is_quantity_delivered_Valid() const{
    return m_quantity_delivered_isValid;
}

qint32 OAIOrderLineItem::getQuantityOrdered() const {
    return m_quantity_ordered;
}
void OAIOrderLineItem::setQuantityOrdered(const qint32 &quantity_ordered) {
    m_quantity_ordered = quantity_ordered;
    m_quantity_ordered_isSet = true;
}

bool OAIOrderLineItem::is_quantity_ordered_Set() const{
    return m_quantity_ordered_isSet;
}

bool OAIOrderLineItem::is_quantity_ordered_Valid() const{
    return m_quantity_ordered_isValid;
}

qint32 OAIOrderLineItem::getQuantityPending() const {
    return m_quantity_pending;
}
void OAIOrderLineItem::setQuantityPending(const qint32 &quantity_pending) {
    m_quantity_pending = quantity_pending;
    m_quantity_pending_isSet = true;
}

bool OAIOrderLineItem::is_quantity_pending_Set() const{
    return m_quantity_pending_isSet;
}

bool OAIOrderLineItem::is_quantity_pending_Valid() const{
    return m_quantity_pending_isValid;
}

qint32 OAIOrderLineItem::getQuantityReadyForPickup() const {
    return m_quantity_ready_for_pickup;
}
void OAIOrderLineItem::setQuantityReadyForPickup(const qint32 &quantity_ready_for_pickup) {
    m_quantity_ready_for_pickup = quantity_ready_for_pickup;
    m_quantity_ready_for_pickup_isSet = true;
}

bool OAIOrderLineItem::is_quantity_ready_for_pickup_Set() const{
    return m_quantity_ready_for_pickup_isSet;
}

bool OAIOrderLineItem::is_quantity_ready_for_pickup_Valid() const{
    return m_quantity_ready_for_pickup_isValid;
}

qint32 OAIOrderLineItem::getQuantityReturned() const {
    return m_quantity_returned;
}
void OAIOrderLineItem::setQuantityReturned(const qint32 &quantity_returned) {
    m_quantity_returned = quantity_returned;
    m_quantity_returned_isSet = true;
}

bool OAIOrderLineItem::is_quantity_returned_Set() const{
    return m_quantity_returned_isSet;
}

bool OAIOrderLineItem::is_quantity_returned_Valid() const{
    return m_quantity_returned_isValid;
}

qint32 OAIOrderLineItem::getQuantityShipped() const {
    return m_quantity_shipped;
}
void OAIOrderLineItem::setQuantityShipped(const qint32 &quantity_shipped) {
    m_quantity_shipped = quantity_shipped;
    m_quantity_shipped_isSet = true;
}

bool OAIOrderLineItem::is_quantity_shipped_Set() const{
    return m_quantity_shipped_isSet;
}

bool OAIOrderLineItem::is_quantity_shipped_Valid() const{
    return m_quantity_shipped_isValid;
}

qint32 OAIOrderLineItem::getQuantityUndeliverable() const {
    return m_quantity_undeliverable;
}
void OAIOrderLineItem::setQuantityUndeliverable(const qint32 &quantity_undeliverable) {
    m_quantity_undeliverable = quantity_undeliverable;
    m_quantity_undeliverable_isSet = true;
}

bool OAIOrderLineItem::is_quantity_undeliverable_Set() const{
    return m_quantity_undeliverable_isSet;
}

bool OAIOrderLineItem::is_quantity_undeliverable_Valid() const{
    return m_quantity_undeliverable_isValid;
}

OAIOrderLineItemReturnInfo OAIOrderLineItem::getReturnInfo() const {
    return m_return_info;
}
void OAIOrderLineItem::setReturnInfo(const OAIOrderLineItemReturnInfo &return_info) {
    m_return_info = return_info;
    m_return_info_isSet = true;
}

bool OAIOrderLineItem::is_return_info_Set() const{
    return m_return_info_isSet;
}

bool OAIOrderLineItem::is_return_info_Valid() const{
    return m_return_info_isValid;
}

QList<OAIOrderReturn> OAIOrderLineItem::getReturns() const {
    return m_returns;
}
void OAIOrderLineItem::setReturns(const QList<OAIOrderReturn> &returns) {
    m_returns = returns;
    m_returns_isSet = true;
}

bool OAIOrderLineItem::is_returns_Set() const{
    return m_returns_isSet;
}

bool OAIOrderLineItem::is_returns_Valid() const{
    return m_returns_isValid;
}

OAIOrderLineItemShippingDetails OAIOrderLineItem::getShippingDetails() const {
    return m_shipping_details;
}
void OAIOrderLineItem::setShippingDetails(const OAIOrderLineItemShippingDetails &shipping_details) {
    m_shipping_details = shipping_details;
    m_shipping_details_isSet = true;
}

bool OAIOrderLineItem::is_shipping_details_Set() const{
    return m_shipping_details_isSet;
}

bool OAIOrderLineItem::is_shipping_details_Valid() const{
    return m_shipping_details_isValid;
}

OAIPrice OAIOrderLineItem::getTax() const {
    return m_tax;
}
void OAIOrderLineItem::setTax(const OAIPrice &tax) {
    m_tax = tax;
    m_tax_isSet = true;
}

bool OAIOrderLineItem::is_tax_Set() const{
    return m_tax_isSet;
}

bool OAIOrderLineItem::is_tax_Valid() const{
    return m_tax_isValid;
}

bool OAIOrderLineItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_adjustments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancellations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_product.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_canceled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_delivered_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_ordered_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_pending_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_ready_for_pickup_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_returned_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_shipped_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_undeliverable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_returns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderLineItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
