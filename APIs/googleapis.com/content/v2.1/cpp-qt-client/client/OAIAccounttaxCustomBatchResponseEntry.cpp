/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccounttaxCustomBatchResponseEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccounttaxCustomBatchResponseEntry::OAIAccounttaxCustomBatchResponseEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccounttaxCustomBatchResponseEntry::OAIAccounttaxCustomBatchResponseEntry() {
    this->initializeModel();
}

OAIAccounttaxCustomBatchResponseEntry::~OAIAccounttaxCustomBatchResponseEntry() {}

void OAIAccounttaxCustomBatchResponseEntry::initializeModel() {

    m_account_tax_isSet = false;
    m_account_tax_isValid = false;

    m_batch_id_isSet = false;
    m_batch_id_isValid = false;

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;
}

void OAIAccounttaxCustomBatchResponseEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccounttaxCustomBatchResponseEntry::fromJsonObject(QJsonObject json) {

    m_account_tax_isValid = ::OpenAPI::fromJsonValue(m_account_tax, json[QString("accountTax")]);
    m_account_tax_isSet = !json[QString("accountTax")].isNull() && m_account_tax_isValid;

    m_batch_id_isValid = ::OpenAPI::fromJsonValue(m_batch_id, json[QString("batchId")]);
    m_batch_id_isSet = !json[QString("batchId")].isNull() && m_batch_id_isValid;

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;
}

QString OAIAccounttaxCustomBatchResponseEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccounttaxCustomBatchResponseEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_account_tax.isSet()) {
        obj.insert(QString("accountTax"), ::OpenAPI::toJsonValue(m_account_tax));
    }
    if (m_batch_id_isSet) {
        obj.insert(QString("batchId"), ::OpenAPI::toJsonValue(m_batch_id));
    }
    if (m_errors.isSet()) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    return obj;
}

OAIAccountTax OAIAccounttaxCustomBatchResponseEntry::getAccountTax() const {
    return m_account_tax;
}
void OAIAccounttaxCustomBatchResponseEntry::setAccountTax(const OAIAccountTax &account_tax) {
    m_account_tax = account_tax;
    m_account_tax_isSet = true;
}

bool OAIAccounttaxCustomBatchResponseEntry::is_account_tax_Set() const{
    return m_account_tax_isSet;
}

bool OAIAccounttaxCustomBatchResponseEntry::is_account_tax_Valid() const{
    return m_account_tax_isValid;
}

qint32 OAIAccounttaxCustomBatchResponseEntry::getBatchId() const {
    return m_batch_id;
}
void OAIAccounttaxCustomBatchResponseEntry::setBatchId(const qint32 &batch_id) {
    m_batch_id = batch_id;
    m_batch_id_isSet = true;
}

bool OAIAccounttaxCustomBatchResponseEntry::is_batch_id_Set() const{
    return m_batch_id_isSet;
}

bool OAIAccounttaxCustomBatchResponseEntry::is_batch_id_Valid() const{
    return m_batch_id_isValid;
}

OAIErrors OAIAccounttaxCustomBatchResponseEntry::getErrors() const {
    return m_errors;
}
void OAIAccounttaxCustomBatchResponseEntry::setErrors(const OAIErrors &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIAccounttaxCustomBatchResponseEntry::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIAccounttaxCustomBatchResponseEntry::is_errors_Valid() const{
    return m_errors_isValid;
}

QString OAIAccounttaxCustomBatchResponseEntry::getKind() const {
    return m_kind;
}
void OAIAccounttaxCustomBatchResponseEntry::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIAccounttaxCustomBatchResponseEntry::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIAccounttaxCustomBatchResponseEntry::is_kind_Valid() const{
    return m_kind_isValid;
}

bool OAIAccounttaxCustomBatchResponseEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_tax.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_batch_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccounttaxCustomBatchResponseEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
