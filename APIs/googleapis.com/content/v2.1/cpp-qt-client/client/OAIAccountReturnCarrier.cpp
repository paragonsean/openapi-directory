/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountReturnCarrier.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountReturnCarrier::OAIAccountReturnCarrier(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountReturnCarrier::OAIAccountReturnCarrier() {
    this->initializeModel();
}

OAIAccountReturnCarrier::~OAIAccountReturnCarrier() {}

void OAIAccountReturnCarrier::initializeModel() {

    m_carrier_account_id_isSet = false;
    m_carrier_account_id_isValid = false;

    m_carrier_account_name_isSet = false;
    m_carrier_account_name_isValid = false;

    m_carrier_account_number_isSet = false;
    m_carrier_account_number_isValid = false;

    m_carrier_code_isSet = false;
    m_carrier_code_isValid = false;
}

void OAIAccountReturnCarrier::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountReturnCarrier::fromJsonObject(QJsonObject json) {

    m_carrier_account_id_isValid = ::OpenAPI::fromJsonValue(m_carrier_account_id, json[QString("carrierAccountId")]);
    m_carrier_account_id_isSet = !json[QString("carrierAccountId")].isNull() && m_carrier_account_id_isValid;

    m_carrier_account_name_isValid = ::OpenAPI::fromJsonValue(m_carrier_account_name, json[QString("carrierAccountName")]);
    m_carrier_account_name_isSet = !json[QString("carrierAccountName")].isNull() && m_carrier_account_name_isValid;

    m_carrier_account_number_isValid = ::OpenAPI::fromJsonValue(m_carrier_account_number, json[QString("carrierAccountNumber")]);
    m_carrier_account_number_isSet = !json[QString("carrierAccountNumber")].isNull() && m_carrier_account_number_isValid;

    m_carrier_code_isValid = ::OpenAPI::fromJsonValue(m_carrier_code, json[QString("carrierCode")]);
    m_carrier_code_isSet = !json[QString("carrierCode")].isNull() && m_carrier_code_isValid;
}

QString OAIAccountReturnCarrier::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountReturnCarrier::asJsonObject() const {
    QJsonObject obj;
    if (m_carrier_account_id_isSet) {
        obj.insert(QString("carrierAccountId"), ::OpenAPI::toJsonValue(m_carrier_account_id));
    }
    if (m_carrier_account_name_isSet) {
        obj.insert(QString("carrierAccountName"), ::OpenAPI::toJsonValue(m_carrier_account_name));
    }
    if (m_carrier_account_number_isSet) {
        obj.insert(QString("carrierAccountNumber"), ::OpenAPI::toJsonValue(m_carrier_account_number));
    }
    if (m_carrier_code_isSet) {
        obj.insert(QString("carrierCode"), ::OpenAPI::toJsonValue(m_carrier_code));
    }
    return obj;
}

QString OAIAccountReturnCarrier::getCarrierAccountId() const {
    return m_carrier_account_id;
}
void OAIAccountReturnCarrier::setCarrierAccountId(const QString &carrier_account_id) {
    m_carrier_account_id = carrier_account_id;
    m_carrier_account_id_isSet = true;
}

bool OAIAccountReturnCarrier::is_carrier_account_id_Set() const{
    return m_carrier_account_id_isSet;
}

bool OAIAccountReturnCarrier::is_carrier_account_id_Valid() const{
    return m_carrier_account_id_isValid;
}

QString OAIAccountReturnCarrier::getCarrierAccountName() const {
    return m_carrier_account_name;
}
void OAIAccountReturnCarrier::setCarrierAccountName(const QString &carrier_account_name) {
    m_carrier_account_name = carrier_account_name;
    m_carrier_account_name_isSet = true;
}

bool OAIAccountReturnCarrier::is_carrier_account_name_Set() const{
    return m_carrier_account_name_isSet;
}

bool OAIAccountReturnCarrier::is_carrier_account_name_Valid() const{
    return m_carrier_account_name_isValid;
}

QString OAIAccountReturnCarrier::getCarrierAccountNumber() const {
    return m_carrier_account_number;
}
void OAIAccountReturnCarrier::setCarrierAccountNumber(const QString &carrier_account_number) {
    m_carrier_account_number = carrier_account_number;
    m_carrier_account_number_isSet = true;
}

bool OAIAccountReturnCarrier::is_carrier_account_number_Set() const{
    return m_carrier_account_number_isSet;
}

bool OAIAccountReturnCarrier::is_carrier_account_number_Valid() const{
    return m_carrier_account_number_isValid;
}

QString OAIAccountReturnCarrier::getCarrierCode() const {
    return m_carrier_code;
}
void OAIAccountReturnCarrier::setCarrierCode(const QString &carrier_code) {
    m_carrier_code = carrier_code;
    m_carrier_code_isSet = true;
}

bool OAIAccountReturnCarrier::is_carrier_code_Set() const{
    return m_carrier_code_isSet;
}

bool OAIAccountReturnCarrier::is_carrier_code_Valid() const{
    return m_carrier_code_isValid;
}

bool OAIAccountReturnCarrier::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_carrier_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_carrier_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_carrier_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_carrier_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountReturnCarrier::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
