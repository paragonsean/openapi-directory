/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductIssue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductIssue::OAIProductIssue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductIssue::OAIProductIssue() {
    this->initializeModel();
}

OAIProductIssue::~OAIProductIssue() {}

void OAIProductIssue::initializeModel() {

    m_actions_isSet = false;
    m_actions_isValid = false;

    m_impact_isSet = false;
    m_impact_isValid = false;

    m_prerendered_content_isSet = false;
    m_prerendered_content_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIProductIssue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductIssue::fromJsonObject(QJsonObject json) {

    m_actions_isValid = ::OpenAPI::fromJsonValue(m_actions, json[QString("actions")]);
    m_actions_isSet = !json[QString("actions")].isNull() && m_actions_isValid;

    m_impact_isValid = ::OpenAPI::fromJsonValue(m_impact, json[QString("impact")]);
    m_impact_isSet = !json[QString("impact")].isNull() && m_impact_isValid;

    m_prerendered_content_isValid = ::OpenAPI::fromJsonValue(m_prerendered_content, json[QString("prerenderedContent")]);
    m_prerendered_content_isSet = !json[QString("prerenderedContent")].isNull() && m_prerendered_content_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIProductIssue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductIssue::asJsonObject() const {
    QJsonObject obj;
    if (m_actions.size() > 0) {
        obj.insert(QString("actions"), ::OpenAPI::toJsonValue(m_actions));
    }
    if (m_impact.isSet()) {
        obj.insert(QString("impact"), ::OpenAPI::toJsonValue(m_impact));
    }
    if (m_prerendered_content_isSet) {
        obj.insert(QString("prerenderedContent"), ::OpenAPI::toJsonValue(m_prerendered_content));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QList<OAIAction> OAIProductIssue::getActions() const {
    return m_actions;
}
void OAIProductIssue::setActions(const QList<OAIAction> &actions) {
    m_actions = actions;
    m_actions_isSet = true;
}

bool OAIProductIssue::is_actions_Set() const{
    return m_actions_isSet;
}

bool OAIProductIssue::is_actions_Valid() const{
    return m_actions_isValid;
}

OAIProductIssueImpact OAIProductIssue::getImpact() const {
    return m_impact;
}
void OAIProductIssue::setImpact(const OAIProductIssueImpact &impact) {
    m_impact = impact;
    m_impact_isSet = true;
}

bool OAIProductIssue::is_impact_Set() const{
    return m_impact_isSet;
}

bool OAIProductIssue::is_impact_Valid() const{
    return m_impact_isValid;
}

QString OAIProductIssue::getPrerenderedContent() const {
    return m_prerendered_content;
}
void OAIProductIssue::setPrerenderedContent(const QString &prerendered_content) {
    m_prerendered_content = prerendered_content;
    m_prerendered_content_isSet = true;
}

bool OAIProductIssue::is_prerendered_content_Set() const{
    return m_prerendered_content_isSet;
}

bool OAIProductIssue::is_prerendered_content_Valid() const{
    return m_prerendered_content_isValid;
}

QString OAIProductIssue::getTitle() const {
    return m_title;
}
void OAIProductIssue::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIProductIssue::is_title_Set() const{
    return m_title_isSet;
}

bool OAIProductIssue::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIProductIssue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_actions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_impact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_prerendered_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductIssue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
