/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderPromotion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderPromotion::OAIOrderPromotion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderPromotion::OAIOrderPromotion() {
    this->initializeModel();
}

OAIOrderPromotion::~OAIOrderPromotion() {}

void OAIOrderPromotion::initializeModel() {

    m_applicable_items_isSet = false;
    m_applicable_items_isValid = false;

    m_applied_items_isSet = false;
    m_applied_items_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_funder_isSet = false;
    m_funder_isValid = false;

    m_merchant_promotion_id_isSet = false;
    m_merchant_promotion_id_isValid = false;

    m_price_value_isSet = false;
    m_price_value_isValid = false;

    m_short_title_isSet = false;
    m_short_title_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_subtype_isSet = false;
    m_subtype_isValid = false;

    m_tax_value_isSet = false;
    m_tax_value_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIOrderPromotion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderPromotion::fromJsonObject(QJsonObject json) {

    m_applicable_items_isValid = ::OpenAPI::fromJsonValue(m_applicable_items, json[QString("applicableItems")]);
    m_applicable_items_isSet = !json[QString("applicableItems")].isNull() && m_applicable_items_isValid;

    m_applied_items_isValid = ::OpenAPI::fromJsonValue(m_applied_items, json[QString("appliedItems")]);
    m_applied_items_isSet = !json[QString("appliedItems")].isNull() && m_applied_items_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_funder_isValid = ::OpenAPI::fromJsonValue(m_funder, json[QString("funder")]);
    m_funder_isSet = !json[QString("funder")].isNull() && m_funder_isValid;

    m_merchant_promotion_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_promotion_id, json[QString("merchantPromotionId")]);
    m_merchant_promotion_id_isSet = !json[QString("merchantPromotionId")].isNull() && m_merchant_promotion_id_isValid;

    m_price_value_isValid = ::OpenAPI::fromJsonValue(m_price_value, json[QString("priceValue")]);
    m_price_value_isSet = !json[QString("priceValue")].isNull() && m_price_value_isValid;

    m_short_title_isValid = ::OpenAPI::fromJsonValue(m_short_title, json[QString("shortTitle")]);
    m_short_title_isSet = !json[QString("shortTitle")].isNull() && m_short_title_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_subtype_isValid = ::OpenAPI::fromJsonValue(m_subtype, json[QString("subtype")]);
    m_subtype_isSet = !json[QString("subtype")].isNull() && m_subtype_isValid;

    m_tax_value_isValid = ::OpenAPI::fromJsonValue(m_tax_value, json[QString("taxValue")]);
    m_tax_value_isSet = !json[QString("taxValue")].isNull() && m_tax_value_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIOrderPromotion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderPromotion::asJsonObject() const {
    QJsonObject obj;
    if (m_applicable_items.size() > 0) {
        obj.insert(QString("applicableItems"), ::OpenAPI::toJsonValue(m_applicable_items));
    }
    if (m_applied_items.size() > 0) {
        obj.insert(QString("appliedItems"), ::OpenAPI::toJsonValue(m_applied_items));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_funder_isSet) {
        obj.insert(QString("funder"), ::OpenAPI::toJsonValue(m_funder));
    }
    if (m_merchant_promotion_id_isSet) {
        obj.insert(QString("merchantPromotionId"), ::OpenAPI::toJsonValue(m_merchant_promotion_id));
    }
    if (m_price_value.isSet()) {
        obj.insert(QString("priceValue"), ::OpenAPI::toJsonValue(m_price_value));
    }
    if (m_short_title_isSet) {
        obj.insert(QString("shortTitle"), ::OpenAPI::toJsonValue(m_short_title));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_subtype_isSet) {
        obj.insert(QString("subtype"), ::OpenAPI::toJsonValue(m_subtype));
    }
    if (m_tax_value.isSet()) {
        obj.insert(QString("taxValue"), ::OpenAPI::toJsonValue(m_tax_value));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QList<OAIOrderPromotionItem> OAIOrderPromotion::getApplicableItems() const {
    return m_applicable_items;
}
void OAIOrderPromotion::setApplicableItems(const QList<OAIOrderPromotionItem> &applicable_items) {
    m_applicable_items = applicable_items;
    m_applicable_items_isSet = true;
}

bool OAIOrderPromotion::is_applicable_items_Set() const{
    return m_applicable_items_isSet;
}

bool OAIOrderPromotion::is_applicable_items_Valid() const{
    return m_applicable_items_isValid;
}

QList<OAIOrderPromotionItem> OAIOrderPromotion::getAppliedItems() const {
    return m_applied_items;
}
void OAIOrderPromotion::setAppliedItems(const QList<OAIOrderPromotionItem> &applied_items) {
    m_applied_items = applied_items;
    m_applied_items_isSet = true;
}

bool OAIOrderPromotion::is_applied_items_Set() const{
    return m_applied_items_isSet;
}

bool OAIOrderPromotion::is_applied_items_Valid() const{
    return m_applied_items_isValid;
}

QString OAIOrderPromotion::getEndTime() const {
    return m_end_time;
}
void OAIOrderPromotion::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIOrderPromotion::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIOrderPromotion::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIOrderPromotion::getFunder() const {
    return m_funder;
}
void OAIOrderPromotion::setFunder(const QString &funder) {
    m_funder = funder;
    m_funder_isSet = true;
}

bool OAIOrderPromotion::is_funder_Set() const{
    return m_funder_isSet;
}

bool OAIOrderPromotion::is_funder_Valid() const{
    return m_funder_isValid;
}

QString OAIOrderPromotion::getMerchantPromotionId() const {
    return m_merchant_promotion_id;
}
void OAIOrderPromotion::setMerchantPromotionId(const QString &merchant_promotion_id) {
    m_merchant_promotion_id = merchant_promotion_id;
    m_merchant_promotion_id_isSet = true;
}

bool OAIOrderPromotion::is_merchant_promotion_id_Set() const{
    return m_merchant_promotion_id_isSet;
}

bool OAIOrderPromotion::is_merchant_promotion_id_Valid() const{
    return m_merchant_promotion_id_isValid;
}

OAIPrice OAIOrderPromotion::getPriceValue() const {
    return m_price_value;
}
void OAIOrderPromotion::setPriceValue(const OAIPrice &price_value) {
    m_price_value = price_value;
    m_price_value_isSet = true;
}

bool OAIOrderPromotion::is_price_value_Set() const{
    return m_price_value_isSet;
}

bool OAIOrderPromotion::is_price_value_Valid() const{
    return m_price_value_isValid;
}

QString OAIOrderPromotion::getShortTitle() const {
    return m_short_title;
}
void OAIOrderPromotion::setShortTitle(const QString &short_title) {
    m_short_title = short_title;
    m_short_title_isSet = true;
}

bool OAIOrderPromotion::is_short_title_Set() const{
    return m_short_title_isSet;
}

bool OAIOrderPromotion::is_short_title_Valid() const{
    return m_short_title_isValid;
}

QString OAIOrderPromotion::getStartTime() const {
    return m_start_time;
}
void OAIOrderPromotion::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIOrderPromotion::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIOrderPromotion::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIOrderPromotion::getSubtype() const {
    return m_subtype;
}
void OAIOrderPromotion::setSubtype(const QString &subtype) {
    m_subtype = subtype;
    m_subtype_isSet = true;
}

bool OAIOrderPromotion::is_subtype_Set() const{
    return m_subtype_isSet;
}

bool OAIOrderPromotion::is_subtype_Valid() const{
    return m_subtype_isValid;
}

OAIPrice OAIOrderPromotion::getTaxValue() const {
    return m_tax_value;
}
void OAIOrderPromotion::setTaxValue(const OAIPrice &tax_value) {
    m_tax_value = tax_value;
    m_tax_value_isSet = true;
}

bool OAIOrderPromotion::is_tax_value_Set() const{
    return m_tax_value_isSet;
}

bool OAIOrderPromotion::is_tax_value_Valid() const{
    return m_tax_value_isValid;
}

QString OAIOrderPromotion::getTitle() const {
    return m_title;
}
void OAIOrderPromotion::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIOrderPromotion::is_title_Set() const{
    return m_title_isSet;
}

bool OAIOrderPromotion::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIOrderPromotion::getType() const {
    return m_type;
}
void OAIOrderPromotion::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIOrderPromotion::is_type_Set() const{
    return m_type_isSet;
}

bool OAIOrderPromotion::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIOrderPromotion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_applicable_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_applied_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_funder_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_promotion_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtype_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderPromotion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
