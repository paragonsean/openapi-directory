/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReturnPolicyOnlineRestockingFee.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReturnPolicyOnlineRestockingFee::OAIReturnPolicyOnlineRestockingFee(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReturnPolicyOnlineRestockingFee::OAIReturnPolicyOnlineRestockingFee() {
    this->initializeModel();
}

OAIReturnPolicyOnlineRestockingFee::~OAIReturnPolicyOnlineRestockingFee() {}

void OAIReturnPolicyOnlineRestockingFee::initializeModel() {

    m_fixed_fee_isSet = false;
    m_fixed_fee_isValid = false;

    m_micro_percent_isSet = false;
    m_micro_percent_isValid = false;
}

void OAIReturnPolicyOnlineRestockingFee::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReturnPolicyOnlineRestockingFee::fromJsonObject(QJsonObject json) {

    m_fixed_fee_isValid = ::OpenAPI::fromJsonValue(m_fixed_fee, json[QString("fixedFee")]);
    m_fixed_fee_isSet = !json[QString("fixedFee")].isNull() && m_fixed_fee_isValid;

    m_micro_percent_isValid = ::OpenAPI::fromJsonValue(m_micro_percent, json[QString("microPercent")]);
    m_micro_percent_isSet = !json[QString("microPercent")].isNull() && m_micro_percent_isValid;
}

QString OAIReturnPolicyOnlineRestockingFee::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReturnPolicyOnlineRestockingFee::asJsonObject() const {
    QJsonObject obj;
    if (m_fixed_fee.isSet()) {
        obj.insert(QString("fixedFee"), ::OpenAPI::toJsonValue(m_fixed_fee));
    }
    if (m_micro_percent_isSet) {
        obj.insert(QString("microPercent"), ::OpenAPI::toJsonValue(m_micro_percent));
    }
    return obj;
}

OAIPriceAmount OAIReturnPolicyOnlineRestockingFee::getFixedFee() const {
    return m_fixed_fee;
}
void OAIReturnPolicyOnlineRestockingFee::setFixedFee(const OAIPriceAmount &fixed_fee) {
    m_fixed_fee = fixed_fee;
    m_fixed_fee_isSet = true;
}

bool OAIReturnPolicyOnlineRestockingFee::is_fixed_fee_Set() const{
    return m_fixed_fee_isSet;
}

bool OAIReturnPolicyOnlineRestockingFee::is_fixed_fee_Valid() const{
    return m_fixed_fee_isValid;
}

qint32 OAIReturnPolicyOnlineRestockingFee::getMicroPercent() const {
    return m_micro_percent;
}
void OAIReturnPolicyOnlineRestockingFee::setMicroPercent(const qint32 &micro_percent) {
    m_micro_percent = micro_percent;
    m_micro_percent_isSet = true;
}

bool OAIReturnPolicyOnlineRestockingFee::is_micro_percent_Set() const{
    return m_micro_percent_isSet;
}

bool OAIReturnPolicyOnlineRestockingFee::is_micro_percent_Valid() const{
    return m_micro_percent_isValid;
}

bool OAIReturnPolicyOnlineRestockingFee::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fixed_fee.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_micro_percent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReturnPolicyOnlineRestockingFee::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
