/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReturnPricingInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReturnPricingInfo::OAIReturnPricingInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReturnPricingInfo::OAIReturnPricingInfo() {
    this->initializeModel();
}

OAIReturnPricingInfo::~OAIReturnPricingInfo() {}

void OAIReturnPricingInfo::initializeModel() {

    m_charge_return_shipping_fee_isSet = false;
    m_charge_return_shipping_fee_isValid = false;

    m_max_return_shipping_fee_isSet = false;
    m_max_return_shipping_fee_isValid = false;

    m_refundable_items_total_amount_isSet = false;
    m_refundable_items_total_amount_isValid = false;

    m_refundable_shipping_amount_isSet = false;
    m_refundable_shipping_amount_isValid = false;

    m_total_refunded_amount_isSet = false;
    m_total_refunded_amount_isValid = false;
}

void OAIReturnPricingInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReturnPricingInfo::fromJsonObject(QJsonObject json) {

    m_charge_return_shipping_fee_isValid = ::OpenAPI::fromJsonValue(m_charge_return_shipping_fee, json[QString("chargeReturnShippingFee")]);
    m_charge_return_shipping_fee_isSet = !json[QString("chargeReturnShippingFee")].isNull() && m_charge_return_shipping_fee_isValid;

    m_max_return_shipping_fee_isValid = ::OpenAPI::fromJsonValue(m_max_return_shipping_fee, json[QString("maxReturnShippingFee")]);
    m_max_return_shipping_fee_isSet = !json[QString("maxReturnShippingFee")].isNull() && m_max_return_shipping_fee_isValid;

    m_refundable_items_total_amount_isValid = ::OpenAPI::fromJsonValue(m_refundable_items_total_amount, json[QString("refundableItemsTotalAmount")]);
    m_refundable_items_total_amount_isSet = !json[QString("refundableItemsTotalAmount")].isNull() && m_refundable_items_total_amount_isValid;

    m_refundable_shipping_amount_isValid = ::OpenAPI::fromJsonValue(m_refundable_shipping_amount, json[QString("refundableShippingAmount")]);
    m_refundable_shipping_amount_isSet = !json[QString("refundableShippingAmount")].isNull() && m_refundable_shipping_amount_isValid;

    m_total_refunded_amount_isValid = ::OpenAPI::fromJsonValue(m_total_refunded_amount, json[QString("totalRefundedAmount")]);
    m_total_refunded_amount_isSet = !json[QString("totalRefundedAmount")].isNull() && m_total_refunded_amount_isValid;
}

QString OAIReturnPricingInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReturnPricingInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_charge_return_shipping_fee_isSet) {
        obj.insert(QString("chargeReturnShippingFee"), ::OpenAPI::toJsonValue(m_charge_return_shipping_fee));
    }
    if (m_max_return_shipping_fee.isSet()) {
        obj.insert(QString("maxReturnShippingFee"), ::OpenAPI::toJsonValue(m_max_return_shipping_fee));
    }
    if (m_refundable_items_total_amount.isSet()) {
        obj.insert(QString("refundableItemsTotalAmount"), ::OpenAPI::toJsonValue(m_refundable_items_total_amount));
    }
    if (m_refundable_shipping_amount.isSet()) {
        obj.insert(QString("refundableShippingAmount"), ::OpenAPI::toJsonValue(m_refundable_shipping_amount));
    }
    if (m_total_refunded_amount.isSet()) {
        obj.insert(QString("totalRefundedAmount"), ::OpenAPI::toJsonValue(m_total_refunded_amount));
    }
    return obj;
}

bool OAIReturnPricingInfo::isChargeReturnShippingFee() const {
    return m_charge_return_shipping_fee;
}
void OAIReturnPricingInfo::setChargeReturnShippingFee(const bool &charge_return_shipping_fee) {
    m_charge_return_shipping_fee = charge_return_shipping_fee;
    m_charge_return_shipping_fee_isSet = true;
}

bool OAIReturnPricingInfo::is_charge_return_shipping_fee_Set() const{
    return m_charge_return_shipping_fee_isSet;
}

bool OAIReturnPricingInfo::is_charge_return_shipping_fee_Valid() const{
    return m_charge_return_shipping_fee_isValid;
}

OAIMonetaryAmount OAIReturnPricingInfo::getMaxReturnShippingFee() const {
    return m_max_return_shipping_fee;
}
void OAIReturnPricingInfo::setMaxReturnShippingFee(const OAIMonetaryAmount &max_return_shipping_fee) {
    m_max_return_shipping_fee = max_return_shipping_fee;
    m_max_return_shipping_fee_isSet = true;
}

bool OAIReturnPricingInfo::is_max_return_shipping_fee_Set() const{
    return m_max_return_shipping_fee_isSet;
}

bool OAIReturnPricingInfo::is_max_return_shipping_fee_Valid() const{
    return m_max_return_shipping_fee_isValid;
}

OAIMonetaryAmount OAIReturnPricingInfo::getRefundableItemsTotalAmount() const {
    return m_refundable_items_total_amount;
}
void OAIReturnPricingInfo::setRefundableItemsTotalAmount(const OAIMonetaryAmount &refundable_items_total_amount) {
    m_refundable_items_total_amount = refundable_items_total_amount;
    m_refundable_items_total_amount_isSet = true;
}

bool OAIReturnPricingInfo::is_refundable_items_total_amount_Set() const{
    return m_refundable_items_total_amount_isSet;
}

bool OAIReturnPricingInfo::is_refundable_items_total_amount_Valid() const{
    return m_refundable_items_total_amount_isValid;
}

OAIMonetaryAmount OAIReturnPricingInfo::getRefundableShippingAmount() const {
    return m_refundable_shipping_amount;
}
void OAIReturnPricingInfo::setRefundableShippingAmount(const OAIMonetaryAmount &refundable_shipping_amount) {
    m_refundable_shipping_amount = refundable_shipping_amount;
    m_refundable_shipping_amount_isSet = true;
}

bool OAIReturnPricingInfo::is_refundable_shipping_amount_Set() const{
    return m_refundable_shipping_amount_isSet;
}

bool OAIReturnPricingInfo::is_refundable_shipping_amount_Valid() const{
    return m_refundable_shipping_amount_isValid;
}

OAIMonetaryAmount OAIReturnPricingInfo::getTotalRefundedAmount() const {
    return m_total_refunded_amount;
}
void OAIReturnPricingInfo::setTotalRefundedAmount(const OAIMonetaryAmount &total_refunded_amount) {
    m_total_refunded_amount = total_refunded_amount;
    m_total_refunded_amount_isSet = true;
}

bool OAIReturnPricingInfo::is_total_refunded_amount_Set() const{
    return m_total_refunded_amount_isSet;
}

bool OAIReturnPricingInfo::is_total_refunded_amount_Valid() const{
    return m_total_refunded_amount_isValid;
}

bool OAIReturnPricingInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_charge_return_shipping_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_return_shipping_fee.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_refundable_items_total_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_refundable_shipping_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_refunded_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReturnPricingInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
