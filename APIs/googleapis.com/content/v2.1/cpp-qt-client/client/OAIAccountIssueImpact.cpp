/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountIssueImpact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountIssueImpact::OAIAccountIssueImpact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountIssueImpact::OAIAccountIssueImpact() {
    this->initializeModel();
}

OAIAccountIssueImpact::~OAIAccountIssueImpact() {}

void OAIAccountIssueImpact::initializeModel() {

    m_breakdowns_isSet = false;
    m_breakdowns_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_severity_isSet = false;
    m_severity_isValid = false;
}

void OAIAccountIssueImpact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountIssueImpact::fromJsonObject(QJsonObject json) {

    m_breakdowns_isValid = ::OpenAPI::fromJsonValue(m_breakdowns, json[QString("breakdowns")]);
    m_breakdowns_isSet = !json[QString("breakdowns")].isNull() && m_breakdowns_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_severity_isValid = ::OpenAPI::fromJsonValue(m_severity, json[QString("severity")]);
    m_severity_isSet = !json[QString("severity")].isNull() && m_severity_isValid;
}

QString OAIAccountIssueImpact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountIssueImpact::asJsonObject() const {
    QJsonObject obj;
    if (m_breakdowns.size() > 0) {
        obj.insert(QString("breakdowns"), ::OpenAPI::toJsonValue(m_breakdowns));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_severity_isSet) {
        obj.insert(QString("severity"), ::OpenAPI::toJsonValue(m_severity));
    }
    return obj;
}

QList<OAIBreakdown> OAIAccountIssueImpact::getBreakdowns() const {
    return m_breakdowns;
}
void OAIAccountIssueImpact::setBreakdowns(const QList<OAIBreakdown> &breakdowns) {
    m_breakdowns = breakdowns;
    m_breakdowns_isSet = true;
}

bool OAIAccountIssueImpact::is_breakdowns_Set() const{
    return m_breakdowns_isSet;
}

bool OAIAccountIssueImpact::is_breakdowns_Valid() const{
    return m_breakdowns_isValid;
}

QString OAIAccountIssueImpact::getMessage() const {
    return m_message;
}
void OAIAccountIssueImpact::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIAccountIssueImpact::is_message_Set() const{
    return m_message_isSet;
}

bool OAIAccountIssueImpact::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIAccountIssueImpact::getSeverity() const {
    return m_severity;
}
void OAIAccountIssueImpact::setSeverity(const QString &severity) {
    m_severity = severity;
    m_severity_isSet = true;
}

bool OAIAccountIssueImpact::is_severity_Set() const{
    return m_severity_isSet;
}

bool OAIAccountIssueImpact::is_severity_Valid() const{
    return m_severity_isValid;
}

bool OAIAccountIssueImpact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_breakdowns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_severity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountIssueImpact::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
