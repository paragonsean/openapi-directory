/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderCustomerMarketingRightsInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderCustomerMarketingRightsInfo::OAIOrderCustomerMarketingRightsInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderCustomerMarketingRightsInfo::OAIOrderCustomerMarketingRightsInfo() {
    this->initializeModel();
}

OAIOrderCustomerMarketingRightsInfo::~OAIOrderCustomerMarketingRightsInfo() {}

void OAIOrderCustomerMarketingRightsInfo::initializeModel() {

    m_explicit_marketing_preference_isSet = false;
    m_explicit_marketing_preference_isValid = false;

    m_last_updated_timestamp_isSet = false;
    m_last_updated_timestamp_isValid = false;

    m_marketing_email_address_isSet = false;
    m_marketing_email_address_isValid = false;
}

void OAIOrderCustomerMarketingRightsInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderCustomerMarketingRightsInfo::fromJsonObject(QJsonObject json) {

    m_explicit_marketing_preference_isValid = ::OpenAPI::fromJsonValue(m_explicit_marketing_preference, json[QString("explicitMarketingPreference")]);
    m_explicit_marketing_preference_isSet = !json[QString("explicitMarketingPreference")].isNull() && m_explicit_marketing_preference_isValid;

    m_last_updated_timestamp_isValid = ::OpenAPI::fromJsonValue(m_last_updated_timestamp, json[QString("lastUpdatedTimestamp")]);
    m_last_updated_timestamp_isSet = !json[QString("lastUpdatedTimestamp")].isNull() && m_last_updated_timestamp_isValid;

    m_marketing_email_address_isValid = ::OpenAPI::fromJsonValue(m_marketing_email_address, json[QString("marketingEmailAddress")]);
    m_marketing_email_address_isSet = !json[QString("marketingEmailAddress")].isNull() && m_marketing_email_address_isValid;
}

QString OAIOrderCustomerMarketingRightsInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderCustomerMarketingRightsInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_explicit_marketing_preference_isSet) {
        obj.insert(QString("explicitMarketingPreference"), ::OpenAPI::toJsonValue(m_explicit_marketing_preference));
    }
    if (m_last_updated_timestamp_isSet) {
        obj.insert(QString("lastUpdatedTimestamp"), ::OpenAPI::toJsonValue(m_last_updated_timestamp));
    }
    if (m_marketing_email_address_isSet) {
        obj.insert(QString("marketingEmailAddress"), ::OpenAPI::toJsonValue(m_marketing_email_address));
    }
    return obj;
}

QString OAIOrderCustomerMarketingRightsInfo::getExplicitMarketingPreference() const {
    return m_explicit_marketing_preference;
}
void OAIOrderCustomerMarketingRightsInfo::setExplicitMarketingPreference(const QString &explicit_marketing_preference) {
    m_explicit_marketing_preference = explicit_marketing_preference;
    m_explicit_marketing_preference_isSet = true;
}

bool OAIOrderCustomerMarketingRightsInfo::is_explicit_marketing_preference_Set() const{
    return m_explicit_marketing_preference_isSet;
}

bool OAIOrderCustomerMarketingRightsInfo::is_explicit_marketing_preference_Valid() const{
    return m_explicit_marketing_preference_isValid;
}

QString OAIOrderCustomerMarketingRightsInfo::getLastUpdatedTimestamp() const {
    return m_last_updated_timestamp;
}
void OAIOrderCustomerMarketingRightsInfo::setLastUpdatedTimestamp(const QString &last_updated_timestamp) {
    m_last_updated_timestamp = last_updated_timestamp;
    m_last_updated_timestamp_isSet = true;
}

bool OAIOrderCustomerMarketingRightsInfo::is_last_updated_timestamp_Set() const{
    return m_last_updated_timestamp_isSet;
}

bool OAIOrderCustomerMarketingRightsInfo::is_last_updated_timestamp_Valid() const{
    return m_last_updated_timestamp_isValid;
}

QString OAIOrderCustomerMarketingRightsInfo::getMarketingEmailAddress() const {
    return m_marketing_email_address;
}
void OAIOrderCustomerMarketingRightsInfo::setMarketingEmailAddress(const QString &marketing_email_address) {
    m_marketing_email_address = marketing_email_address;
    m_marketing_email_address_isSet = true;
}

bool OAIOrderCustomerMarketingRightsInfo::is_marketing_email_address_Set() const{
    return m_marketing_email_address_isSet;
}

bool OAIOrderCustomerMarketingRightsInfo::is_marketing_email_address_Valid() const{
    return m_marketing_email_address_isValid;
}

bool OAIOrderCustomerMarketingRightsInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_explicit_marketing_preference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketing_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderCustomerMarketingRightsInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
