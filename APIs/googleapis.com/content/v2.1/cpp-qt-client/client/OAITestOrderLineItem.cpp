/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITestOrderLineItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITestOrderLineItem::OAITestOrderLineItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITestOrderLineItem::OAITestOrderLineItem() {
    this->initializeModel();
}

OAITestOrderLineItem::~OAITestOrderLineItem() {}

void OAITestOrderLineItem::initializeModel() {

    m_product_isSet = false;
    m_product_isValid = false;

    m_quantity_ordered_isSet = false;
    m_quantity_ordered_isValid = false;

    m_return_info_isSet = false;
    m_return_info_isValid = false;

    m_shipping_details_isSet = false;
    m_shipping_details_isValid = false;
}

void OAITestOrderLineItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITestOrderLineItem::fromJsonObject(QJsonObject json) {

    m_product_isValid = ::OpenAPI::fromJsonValue(m_product, json[QString("product")]);
    m_product_isSet = !json[QString("product")].isNull() && m_product_isValid;

    m_quantity_ordered_isValid = ::OpenAPI::fromJsonValue(m_quantity_ordered, json[QString("quantityOrdered")]);
    m_quantity_ordered_isSet = !json[QString("quantityOrdered")].isNull() && m_quantity_ordered_isValid;

    m_return_info_isValid = ::OpenAPI::fromJsonValue(m_return_info, json[QString("returnInfo")]);
    m_return_info_isSet = !json[QString("returnInfo")].isNull() && m_return_info_isValid;

    m_shipping_details_isValid = ::OpenAPI::fromJsonValue(m_shipping_details, json[QString("shippingDetails")]);
    m_shipping_details_isSet = !json[QString("shippingDetails")].isNull() && m_shipping_details_isValid;
}

QString OAITestOrderLineItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITestOrderLineItem::asJsonObject() const {
    QJsonObject obj;
    if (m_product.isSet()) {
        obj.insert(QString("product"), ::OpenAPI::toJsonValue(m_product));
    }
    if (m_quantity_ordered_isSet) {
        obj.insert(QString("quantityOrdered"), ::OpenAPI::toJsonValue(m_quantity_ordered));
    }
    if (m_return_info.isSet()) {
        obj.insert(QString("returnInfo"), ::OpenAPI::toJsonValue(m_return_info));
    }
    if (m_shipping_details.isSet()) {
        obj.insert(QString("shippingDetails"), ::OpenAPI::toJsonValue(m_shipping_details));
    }
    return obj;
}

OAITestOrderLineItemProduct OAITestOrderLineItem::getProduct() const {
    return m_product;
}
void OAITestOrderLineItem::setProduct(const OAITestOrderLineItemProduct &product) {
    m_product = product;
    m_product_isSet = true;
}

bool OAITestOrderLineItem::is_product_Set() const{
    return m_product_isSet;
}

bool OAITestOrderLineItem::is_product_Valid() const{
    return m_product_isValid;
}

qint32 OAITestOrderLineItem::getQuantityOrdered() const {
    return m_quantity_ordered;
}
void OAITestOrderLineItem::setQuantityOrdered(const qint32 &quantity_ordered) {
    m_quantity_ordered = quantity_ordered;
    m_quantity_ordered_isSet = true;
}

bool OAITestOrderLineItem::is_quantity_ordered_Set() const{
    return m_quantity_ordered_isSet;
}

bool OAITestOrderLineItem::is_quantity_ordered_Valid() const{
    return m_quantity_ordered_isValid;
}

OAIOrderLineItemReturnInfo OAITestOrderLineItem::getReturnInfo() const {
    return m_return_info;
}
void OAITestOrderLineItem::setReturnInfo(const OAIOrderLineItemReturnInfo &return_info) {
    m_return_info = return_info;
    m_return_info_isSet = true;
}

bool OAITestOrderLineItem::is_return_info_Set() const{
    return m_return_info_isSet;
}

bool OAITestOrderLineItem::is_return_info_Valid() const{
    return m_return_info_isValid;
}

OAIOrderLineItemShippingDetails OAITestOrderLineItem::getShippingDetails() const {
    return m_shipping_details;
}
void OAITestOrderLineItem::setShippingDetails(const OAIOrderLineItemShippingDetails &shipping_details) {
    m_shipping_details = shipping_details;
    m_shipping_details_isSet = true;
}

bool OAITestOrderLineItem::is_shipping_details_Set() const{
    return m_shipping_details_isSet;
}

bool OAITestOrderLineItem::is_shipping_details_Valid() const{
    return m_shipping_details_isValid;
}

bool OAITestOrderLineItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_product.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_ordered_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITestOrderLineItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
