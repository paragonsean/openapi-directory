/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderreturnsCreateOrderReturnRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderreturnsCreateOrderReturnRequest::OAIOrderreturnsCreateOrderReturnRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderreturnsCreateOrderReturnRequest::OAIOrderreturnsCreateOrderReturnRequest() {
    this->initializeModel();
}

OAIOrderreturnsCreateOrderReturnRequest::~OAIOrderreturnsCreateOrderReturnRequest() {}

void OAIOrderreturnsCreateOrderReturnRequest::initializeModel() {

    m_line_items_isSet = false;
    m_line_items_isValid = false;

    m_operation_id_isSet = false;
    m_operation_id_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_return_method_type_isSet = false;
    m_return_method_type_isValid = false;
}

void OAIOrderreturnsCreateOrderReturnRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderreturnsCreateOrderReturnRequest::fromJsonObject(QJsonObject json) {

    m_line_items_isValid = ::OpenAPI::fromJsonValue(m_line_items, json[QString("lineItems")]);
    m_line_items_isSet = !json[QString("lineItems")].isNull() && m_line_items_isValid;

    m_operation_id_isValid = ::OpenAPI::fromJsonValue(m_operation_id, json[QString("operationId")]);
    m_operation_id_isSet = !json[QString("operationId")].isNull() && m_operation_id_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("orderId")]);
    m_order_id_isSet = !json[QString("orderId")].isNull() && m_order_id_isValid;

    m_return_method_type_isValid = ::OpenAPI::fromJsonValue(m_return_method_type, json[QString("returnMethodType")]);
    m_return_method_type_isSet = !json[QString("returnMethodType")].isNull() && m_return_method_type_isValid;
}

QString OAIOrderreturnsCreateOrderReturnRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderreturnsCreateOrderReturnRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_line_items.size() > 0) {
        obj.insert(QString("lineItems"), ::OpenAPI::toJsonValue(m_line_items));
    }
    if (m_operation_id_isSet) {
        obj.insert(QString("operationId"), ::OpenAPI::toJsonValue(m_operation_id));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("orderId"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_return_method_type_isSet) {
        obj.insert(QString("returnMethodType"), ::OpenAPI::toJsonValue(m_return_method_type));
    }
    return obj;
}

QList<OAIOrderreturnsLineItem> OAIOrderreturnsCreateOrderReturnRequest::getLineItems() const {
    return m_line_items;
}
void OAIOrderreturnsCreateOrderReturnRequest::setLineItems(const QList<OAIOrderreturnsLineItem> &line_items) {
    m_line_items = line_items;
    m_line_items_isSet = true;
}

bool OAIOrderreturnsCreateOrderReturnRequest::is_line_items_Set() const{
    return m_line_items_isSet;
}

bool OAIOrderreturnsCreateOrderReturnRequest::is_line_items_Valid() const{
    return m_line_items_isValid;
}

QString OAIOrderreturnsCreateOrderReturnRequest::getOperationId() const {
    return m_operation_id;
}
void OAIOrderreturnsCreateOrderReturnRequest::setOperationId(const QString &operation_id) {
    m_operation_id = operation_id;
    m_operation_id_isSet = true;
}

bool OAIOrderreturnsCreateOrderReturnRequest::is_operation_id_Set() const{
    return m_operation_id_isSet;
}

bool OAIOrderreturnsCreateOrderReturnRequest::is_operation_id_Valid() const{
    return m_operation_id_isValid;
}

QString OAIOrderreturnsCreateOrderReturnRequest::getOrderId() const {
    return m_order_id;
}
void OAIOrderreturnsCreateOrderReturnRequest::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrderreturnsCreateOrderReturnRequest::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrderreturnsCreateOrderReturnRequest::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAIOrderreturnsCreateOrderReturnRequest::getReturnMethodType() const {
    return m_return_method_type;
}
void OAIOrderreturnsCreateOrderReturnRequest::setReturnMethodType(const QString &return_method_type) {
    m_return_method_type = return_method_type;
    m_return_method_type_isSet = true;
}

bool OAIOrderreturnsCreateOrderReturnRequest::is_return_method_type_Set() const{
    return m_return_method_type_isSet;
}

bool OAIOrderreturnsCreateOrderReturnRequest::is_return_method_type_Valid() const{
    return m_return_method_type_isValid;
}

bool OAIOrderreturnsCreateOrderReturnRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_line_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_method_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderreturnsCreateOrderReturnRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
