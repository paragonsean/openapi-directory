/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFreeListingsProgramStatusRegionStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFreeListingsProgramStatusRegionStatus::OAIFreeListingsProgramStatusRegionStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFreeListingsProgramStatusRegionStatus::OAIFreeListingsProgramStatusRegionStatus() {
    this->initializeModel();
}

OAIFreeListingsProgramStatusRegionStatus::~OAIFreeListingsProgramStatusRegionStatus() {}

void OAIFreeListingsProgramStatusRegionStatus::initializeModel() {

    m_disapproval_date_isSet = false;
    m_disapproval_date_isValid = false;

    m_eligibility_status_isSet = false;
    m_eligibility_status_isValid = false;

    m_onboarding_issues_isSet = false;
    m_onboarding_issues_isValid = false;

    m_region_codes_isSet = false;
    m_region_codes_isValid = false;

    m_review_eligibility_status_isSet = false;
    m_review_eligibility_status_isValid = false;

    m_review_ineligibility_reason_isSet = false;
    m_review_ineligibility_reason_isValid = false;

    m_review_ineligibility_reason_description_isSet = false;
    m_review_ineligibility_reason_description_isValid = false;

    m_review_ineligibility_reason_details_isSet = false;
    m_review_ineligibility_reason_details_isValid = false;

    m_review_issues_isSet = false;
    m_review_issues_isValid = false;
}

void OAIFreeListingsProgramStatusRegionStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFreeListingsProgramStatusRegionStatus::fromJsonObject(QJsonObject json) {

    m_disapproval_date_isValid = ::OpenAPI::fromJsonValue(m_disapproval_date, json[QString("disapprovalDate")]);
    m_disapproval_date_isSet = !json[QString("disapprovalDate")].isNull() && m_disapproval_date_isValid;

    m_eligibility_status_isValid = ::OpenAPI::fromJsonValue(m_eligibility_status, json[QString("eligibilityStatus")]);
    m_eligibility_status_isSet = !json[QString("eligibilityStatus")].isNull() && m_eligibility_status_isValid;

    m_onboarding_issues_isValid = ::OpenAPI::fromJsonValue(m_onboarding_issues, json[QString("onboardingIssues")]);
    m_onboarding_issues_isSet = !json[QString("onboardingIssues")].isNull() && m_onboarding_issues_isValid;

    m_region_codes_isValid = ::OpenAPI::fromJsonValue(m_region_codes, json[QString("regionCodes")]);
    m_region_codes_isSet = !json[QString("regionCodes")].isNull() && m_region_codes_isValid;

    m_review_eligibility_status_isValid = ::OpenAPI::fromJsonValue(m_review_eligibility_status, json[QString("reviewEligibilityStatus")]);
    m_review_eligibility_status_isSet = !json[QString("reviewEligibilityStatus")].isNull() && m_review_eligibility_status_isValid;

    m_review_ineligibility_reason_isValid = ::OpenAPI::fromJsonValue(m_review_ineligibility_reason, json[QString("reviewIneligibilityReason")]);
    m_review_ineligibility_reason_isSet = !json[QString("reviewIneligibilityReason")].isNull() && m_review_ineligibility_reason_isValid;

    m_review_ineligibility_reason_description_isValid = ::OpenAPI::fromJsonValue(m_review_ineligibility_reason_description, json[QString("reviewIneligibilityReasonDescription")]);
    m_review_ineligibility_reason_description_isSet = !json[QString("reviewIneligibilityReasonDescription")].isNull() && m_review_ineligibility_reason_description_isValid;

    m_review_ineligibility_reason_details_isValid = ::OpenAPI::fromJsonValue(m_review_ineligibility_reason_details, json[QString("reviewIneligibilityReasonDetails")]);
    m_review_ineligibility_reason_details_isSet = !json[QString("reviewIneligibilityReasonDetails")].isNull() && m_review_ineligibility_reason_details_isValid;

    m_review_issues_isValid = ::OpenAPI::fromJsonValue(m_review_issues, json[QString("reviewIssues")]);
    m_review_issues_isSet = !json[QString("reviewIssues")].isNull() && m_review_issues_isValid;
}

QString OAIFreeListingsProgramStatusRegionStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFreeListingsProgramStatusRegionStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_disapproval_date_isSet) {
        obj.insert(QString("disapprovalDate"), ::OpenAPI::toJsonValue(m_disapproval_date));
    }
    if (m_eligibility_status_isSet) {
        obj.insert(QString("eligibilityStatus"), ::OpenAPI::toJsonValue(m_eligibility_status));
    }
    if (m_onboarding_issues.size() > 0) {
        obj.insert(QString("onboardingIssues"), ::OpenAPI::toJsonValue(m_onboarding_issues));
    }
    if (m_region_codes.size() > 0) {
        obj.insert(QString("regionCodes"), ::OpenAPI::toJsonValue(m_region_codes));
    }
    if (m_review_eligibility_status_isSet) {
        obj.insert(QString("reviewEligibilityStatus"), ::OpenAPI::toJsonValue(m_review_eligibility_status));
    }
    if (m_review_ineligibility_reason_isSet) {
        obj.insert(QString("reviewIneligibilityReason"), ::OpenAPI::toJsonValue(m_review_ineligibility_reason));
    }
    if (m_review_ineligibility_reason_description_isSet) {
        obj.insert(QString("reviewIneligibilityReasonDescription"), ::OpenAPI::toJsonValue(m_review_ineligibility_reason_description));
    }
    if (m_review_ineligibility_reason_details.isSet()) {
        obj.insert(QString("reviewIneligibilityReasonDetails"), ::OpenAPI::toJsonValue(m_review_ineligibility_reason_details));
    }
    if (m_review_issues.size() > 0) {
        obj.insert(QString("reviewIssues"), ::OpenAPI::toJsonValue(m_review_issues));
    }
    return obj;
}

QString OAIFreeListingsProgramStatusRegionStatus::getDisapprovalDate() const {
    return m_disapproval_date;
}
void OAIFreeListingsProgramStatusRegionStatus::setDisapprovalDate(const QString &disapproval_date) {
    m_disapproval_date = disapproval_date;
    m_disapproval_date_isSet = true;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_disapproval_date_Set() const{
    return m_disapproval_date_isSet;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_disapproval_date_Valid() const{
    return m_disapproval_date_isValid;
}

QString OAIFreeListingsProgramStatusRegionStatus::getEligibilityStatus() const {
    return m_eligibility_status;
}
void OAIFreeListingsProgramStatusRegionStatus::setEligibilityStatus(const QString &eligibility_status) {
    m_eligibility_status = eligibility_status;
    m_eligibility_status_isSet = true;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_eligibility_status_Set() const{
    return m_eligibility_status_isSet;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_eligibility_status_Valid() const{
    return m_eligibility_status_isValid;
}

QList<QString> OAIFreeListingsProgramStatusRegionStatus::getOnboardingIssues() const {
    return m_onboarding_issues;
}
void OAIFreeListingsProgramStatusRegionStatus::setOnboardingIssues(const QList<QString> &onboarding_issues) {
    m_onboarding_issues = onboarding_issues;
    m_onboarding_issues_isSet = true;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_onboarding_issues_Set() const{
    return m_onboarding_issues_isSet;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_onboarding_issues_Valid() const{
    return m_onboarding_issues_isValid;
}

QList<QString> OAIFreeListingsProgramStatusRegionStatus::getRegionCodes() const {
    return m_region_codes;
}
void OAIFreeListingsProgramStatusRegionStatus::setRegionCodes(const QList<QString> &region_codes) {
    m_region_codes = region_codes;
    m_region_codes_isSet = true;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_region_codes_Set() const{
    return m_region_codes_isSet;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_region_codes_Valid() const{
    return m_region_codes_isValid;
}

QString OAIFreeListingsProgramStatusRegionStatus::getReviewEligibilityStatus() const {
    return m_review_eligibility_status;
}
void OAIFreeListingsProgramStatusRegionStatus::setReviewEligibilityStatus(const QString &review_eligibility_status) {
    m_review_eligibility_status = review_eligibility_status;
    m_review_eligibility_status_isSet = true;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_review_eligibility_status_Set() const{
    return m_review_eligibility_status_isSet;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_review_eligibility_status_Valid() const{
    return m_review_eligibility_status_isValid;
}

QString OAIFreeListingsProgramStatusRegionStatus::getReviewIneligibilityReason() const {
    return m_review_ineligibility_reason;
}
void OAIFreeListingsProgramStatusRegionStatus::setReviewIneligibilityReason(const QString &review_ineligibility_reason) {
    m_review_ineligibility_reason = review_ineligibility_reason;
    m_review_ineligibility_reason_isSet = true;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_review_ineligibility_reason_Set() const{
    return m_review_ineligibility_reason_isSet;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_review_ineligibility_reason_Valid() const{
    return m_review_ineligibility_reason_isValid;
}

QString OAIFreeListingsProgramStatusRegionStatus::getReviewIneligibilityReasonDescription() const {
    return m_review_ineligibility_reason_description;
}
void OAIFreeListingsProgramStatusRegionStatus::setReviewIneligibilityReasonDescription(const QString &review_ineligibility_reason_description) {
    m_review_ineligibility_reason_description = review_ineligibility_reason_description;
    m_review_ineligibility_reason_description_isSet = true;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_review_ineligibility_reason_description_Set() const{
    return m_review_ineligibility_reason_description_isSet;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_review_ineligibility_reason_description_Valid() const{
    return m_review_ineligibility_reason_description_isValid;
}

OAIFreeListingsProgramStatusReviewIneligibilityReasonDetails OAIFreeListingsProgramStatusRegionStatus::getReviewIneligibilityReasonDetails() const {
    return m_review_ineligibility_reason_details;
}
void OAIFreeListingsProgramStatusRegionStatus::setReviewIneligibilityReasonDetails(const OAIFreeListingsProgramStatusReviewIneligibilityReasonDetails &review_ineligibility_reason_details) {
    m_review_ineligibility_reason_details = review_ineligibility_reason_details;
    m_review_ineligibility_reason_details_isSet = true;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_review_ineligibility_reason_details_Set() const{
    return m_review_ineligibility_reason_details_isSet;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_review_ineligibility_reason_details_Valid() const{
    return m_review_ineligibility_reason_details_isValid;
}

QList<QString> OAIFreeListingsProgramStatusRegionStatus::getReviewIssues() const {
    return m_review_issues;
}
void OAIFreeListingsProgramStatusRegionStatus::setReviewIssues(const QList<QString> &review_issues) {
    m_review_issues = review_issues;
    m_review_issues_isSet = true;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_review_issues_Set() const{
    return m_review_issues_isSet;
}

bool OAIFreeListingsProgramStatusRegionStatus::is_review_issues_Valid() const{
    return m_review_issues_isValid;
}

bool OAIFreeListingsProgramStatusRegionStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disapproval_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_eligibility_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_onboarding_issues.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_review_eligibility_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_review_ineligibility_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_review_ineligibility_reason_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_review_ineligibility_reason_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_review_issues.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFreeListingsProgramStatusRegionStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
