/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReturnAddressAddress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReturnAddressAddress::OAIReturnAddressAddress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReturnAddressAddress::OAIReturnAddressAddress() {
    this->initializeModel();
}

OAIReturnAddressAddress::~OAIReturnAddressAddress() {}

void OAIReturnAddressAddress::initializeModel() {

    m_country_isSet = false;
    m_country_isValid = false;

    m_locality_isSet = false;
    m_locality_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;

    m_recipient_name_isSet = false;
    m_recipient_name_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;

    m_street_address_isSet = false;
    m_street_address_isValid = false;
}

void OAIReturnAddressAddress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReturnAddressAddress::fromJsonObject(QJsonObject json) {

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_locality_isValid = ::OpenAPI::fromJsonValue(m_locality, json[QString("locality")]);
    m_locality_isSet = !json[QString("locality")].isNull() && m_locality_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("postalCode")]);
    m_postal_code_isSet = !json[QString("postalCode")].isNull() && m_postal_code_isValid;

    m_recipient_name_isValid = ::OpenAPI::fromJsonValue(m_recipient_name, json[QString("recipientName")]);
    m_recipient_name_isSet = !json[QString("recipientName")].isNull() && m_recipient_name_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;

    m_street_address_isValid = ::OpenAPI::fromJsonValue(m_street_address, json[QString("streetAddress")]);
    m_street_address_isSet = !json[QString("streetAddress")].isNull() && m_street_address_isValid;
}

QString OAIReturnAddressAddress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReturnAddressAddress::asJsonObject() const {
    QJsonObject obj;
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_locality_isSet) {
        obj.insert(QString("locality"), ::OpenAPI::toJsonValue(m_locality));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("postalCode"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    if (m_recipient_name_isSet) {
        obj.insert(QString("recipientName"), ::OpenAPI::toJsonValue(m_recipient_name));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    if (m_street_address.size() > 0) {
        obj.insert(QString("streetAddress"), ::OpenAPI::toJsonValue(m_street_address));
    }
    return obj;
}

QString OAIReturnAddressAddress::getCountry() const {
    return m_country;
}
void OAIReturnAddressAddress::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIReturnAddressAddress::is_country_Set() const{
    return m_country_isSet;
}

bool OAIReturnAddressAddress::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIReturnAddressAddress::getLocality() const {
    return m_locality;
}
void OAIReturnAddressAddress::setLocality(const QString &locality) {
    m_locality = locality;
    m_locality_isSet = true;
}

bool OAIReturnAddressAddress::is_locality_Set() const{
    return m_locality_isSet;
}

bool OAIReturnAddressAddress::is_locality_Valid() const{
    return m_locality_isValid;
}

QString OAIReturnAddressAddress::getPostalCode() const {
    return m_postal_code;
}
void OAIReturnAddressAddress::setPostalCode(const QString &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIReturnAddressAddress::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIReturnAddressAddress::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

QString OAIReturnAddressAddress::getRecipientName() const {
    return m_recipient_name;
}
void OAIReturnAddressAddress::setRecipientName(const QString &recipient_name) {
    m_recipient_name = recipient_name;
    m_recipient_name_isSet = true;
}

bool OAIReturnAddressAddress::is_recipient_name_Set() const{
    return m_recipient_name_isSet;
}

bool OAIReturnAddressAddress::is_recipient_name_Valid() const{
    return m_recipient_name_isValid;
}

QString OAIReturnAddressAddress::getRegion() const {
    return m_region;
}
void OAIReturnAddressAddress::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIReturnAddressAddress::is_region_Set() const{
    return m_region_isSet;
}

bool OAIReturnAddressAddress::is_region_Valid() const{
    return m_region_isValid;
}

QList<QString> OAIReturnAddressAddress::getStreetAddress() const {
    return m_street_address;
}
void OAIReturnAddressAddress::setStreetAddress(const QList<QString> &street_address) {
    m_street_address = street_address;
    m_street_address_isSet = true;
}

bool OAIReturnAddressAddress::is_street_address_Set() const{
    return m_street_address_isSet;
}

bool OAIReturnAddressAddress::is_street_address_Valid() const{
    return m_street_address_isValid;
}

bool OAIReturnAddressAddress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locality_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_street_address.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReturnAddressAddress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
