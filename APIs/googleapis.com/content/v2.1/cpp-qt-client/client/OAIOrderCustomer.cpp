/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderCustomer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderCustomer::OAIOrderCustomer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderCustomer::OAIOrderCustomer() {
    this->initializeModel();
}

OAIOrderCustomer::~OAIOrderCustomer() {}

void OAIOrderCustomer::initializeModel() {

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_invoice_receiving_email_isSet = false;
    m_invoice_receiving_email_isValid = false;

    m_loyalty_info_isSet = false;
    m_loyalty_info_isValid = false;

    m_marketing_rights_info_isSet = false;
    m_marketing_rights_info_isValid = false;
}

void OAIOrderCustomer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderCustomer::fromJsonObject(QJsonObject json) {

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("fullName")]);
    m_full_name_isSet = !json[QString("fullName")].isNull() && m_full_name_isValid;

    m_invoice_receiving_email_isValid = ::OpenAPI::fromJsonValue(m_invoice_receiving_email, json[QString("invoiceReceivingEmail")]);
    m_invoice_receiving_email_isSet = !json[QString("invoiceReceivingEmail")].isNull() && m_invoice_receiving_email_isValid;

    m_loyalty_info_isValid = ::OpenAPI::fromJsonValue(m_loyalty_info, json[QString("loyaltyInfo")]);
    m_loyalty_info_isSet = !json[QString("loyaltyInfo")].isNull() && m_loyalty_info_isValid;

    m_marketing_rights_info_isValid = ::OpenAPI::fromJsonValue(m_marketing_rights_info, json[QString("marketingRightsInfo")]);
    m_marketing_rights_info_isSet = !json[QString("marketingRightsInfo")].isNull() && m_marketing_rights_info_isValid;
}

QString OAIOrderCustomer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderCustomer::asJsonObject() const {
    QJsonObject obj;
    if (m_full_name_isSet) {
        obj.insert(QString("fullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_invoice_receiving_email_isSet) {
        obj.insert(QString("invoiceReceivingEmail"), ::OpenAPI::toJsonValue(m_invoice_receiving_email));
    }
    if (m_loyalty_info.isSet()) {
        obj.insert(QString("loyaltyInfo"), ::OpenAPI::toJsonValue(m_loyalty_info));
    }
    if (m_marketing_rights_info.isSet()) {
        obj.insert(QString("marketingRightsInfo"), ::OpenAPI::toJsonValue(m_marketing_rights_info));
    }
    return obj;
}

QString OAIOrderCustomer::getFullName() const {
    return m_full_name;
}
void OAIOrderCustomer::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAIOrderCustomer::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAIOrderCustomer::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAIOrderCustomer::getInvoiceReceivingEmail() const {
    return m_invoice_receiving_email;
}
void OAIOrderCustomer::setInvoiceReceivingEmail(const QString &invoice_receiving_email) {
    m_invoice_receiving_email = invoice_receiving_email;
    m_invoice_receiving_email_isSet = true;
}

bool OAIOrderCustomer::is_invoice_receiving_email_Set() const{
    return m_invoice_receiving_email_isSet;
}

bool OAIOrderCustomer::is_invoice_receiving_email_Valid() const{
    return m_invoice_receiving_email_isValid;
}

OAIOrderCustomerLoyaltyInfo OAIOrderCustomer::getLoyaltyInfo() const {
    return m_loyalty_info;
}
void OAIOrderCustomer::setLoyaltyInfo(const OAIOrderCustomerLoyaltyInfo &loyalty_info) {
    m_loyalty_info = loyalty_info;
    m_loyalty_info_isSet = true;
}

bool OAIOrderCustomer::is_loyalty_info_Set() const{
    return m_loyalty_info_isSet;
}

bool OAIOrderCustomer::is_loyalty_info_Valid() const{
    return m_loyalty_info_isValid;
}

OAIOrderCustomerMarketingRightsInfo OAIOrderCustomer::getMarketingRightsInfo() const {
    return m_marketing_rights_info;
}
void OAIOrderCustomer::setMarketingRightsInfo(const OAIOrderCustomerMarketingRightsInfo &marketing_rights_info) {
    m_marketing_rights_info = marketing_rights_info;
    m_marketing_rights_info_isSet = true;
}

bool OAIOrderCustomer::is_marketing_rights_info_Set() const{
    return m_marketing_rights_info_isSet;
}

bool OAIOrderCustomer::is_marketing_rights_info_Valid() const{
    return m_marketing_rights_info_isValid;
}

bool OAIOrderCustomer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_receiving_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loyalty_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketing_rights_info.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderCustomer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
