/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ReturnPolicy;
import org.openapitools.client.model.ReturnpolicyCustomBatchRequest;
import org.openapitools.client.model.ReturnpolicyCustomBatchResponse;
import org.openapitools.client.model.ReturnpolicyListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReturnpolicyApi
 */
@Disabled
public class ReturnpolicyApiTest {

    private final ReturnpolicyApi api = new ReturnpolicyApi();

    /**
     * Batches multiple return policy related calls in a single request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentReturnpolicyCustombatchTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ReturnpolicyCustomBatchRequest returnpolicyCustomBatchRequest = null;
        ReturnpolicyCustomBatchResponse response = api.contentReturnpolicyCustombatch($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, returnpolicyCustomBatchRequest);
        // TODO: test validations
    }

    /**
     * Deletes a return policy for the given Merchant Center account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentReturnpolicyDeleteTest() throws ApiException {
        String merchantId = null;
        String returnPolicyId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        api.contentReturnpolicyDelete(merchantId, returnPolicyId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Gets a return policy of the Merchant Center account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentReturnpolicyGetTest() throws ApiException {
        String merchantId = null;
        String returnPolicyId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ReturnPolicy response = api.contentReturnpolicyGet(merchantId, returnPolicyId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Inserts a return policy for the Merchant Center account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentReturnpolicyInsertTest() throws ApiException {
        String merchantId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ReturnPolicy returnPolicy = null;
        ReturnPolicy response = api.contentReturnpolicyInsert(merchantId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, returnPolicy);
        // TODO: test validations
    }

    /**
     * Lists the return policies of the Merchant Center account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentReturnpolicyListTest() throws ApiException {
        String merchantId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ReturnpolicyListResponse response = api.contentReturnpolicyList(merchantId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

}
