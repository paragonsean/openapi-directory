/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MerchantOrderReturn;
import org.openapitools.client.model.OrderreturnsAcknowledgeRequest;
import org.openapitools.client.model.OrderreturnsAcknowledgeResponse;
import org.openapitools.client.model.OrderreturnsCreateOrderReturnRequest;
import org.openapitools.client.model.OrderreturnsCreateOrderReturnResponse;
import org.openapitools.client.model.OrderreturnsListResponse;
import org.openapitools.client.model.OrderreturnsProcessRequest;
import org.openapitools.client.model.OrderreturnsProcessResponse;
import org.openapitools.client.model.ReturnShippingLabel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrderreturnsApi
 */
@Disabled
public class OrderreturnsApiTest {

    private final OrderreturnsApi api = new OrderreturnsApi();

    /**
     * Acks an order return in your Merchant Center account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentOrderreturnsAcknowledgeTest() throws ApiException {
        String merchantId = null;
        String returnId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        OrderreturnsAcknowledgeRequest orderreturnsAcknowledgeRequest = null;
        OrderreturnsAcknowledgeResponse response = api.contentOrderreturnsAcknowledge(merchantId, returnId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, orderreturnsAcknowledgeRequest);
        // TODO: test validations
    }

    /**
     * Create return in your Merchant Center account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentOrderreturnsCreateorderreturnTest() throws ApiException {
        String merchantId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        OrderreturnsCreateOrderReturnRequest orderreturnsCreateOrderReturnRequest = null;
        OrderreturnsCreateOrderReturnResponse response = api.contentOrderreturnsCreateorderreturn(merchantId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, orderreturnsCreateOrderReturnRequest);
        // TODO: test validations
    }

    /**
     * Retrieves an order return from your Merchant Center account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentOrderreturnsGetTest() throws ApiException {
        String merchantId = null;
        String returnId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        MerchantOrderReturn response = api.contentOrderreturnsGet(merchantId, returnId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Links a return shipping label to a return id. You can only create one return label per return id. Since the label is sent to the buyer, the linked return label cannot be updated or deleted. If you try to create multiple return shipping labels for a single return id, every create request except the first will fail.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentOrderreturnsLabelsCreateTest() throws ApiException {
        String merchantId = null;
        String returnId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ReturnShippingLabel returnShippingLabel = null;
        ReturnShippingLabel response = api.contentOrderreturnsLabelsCreate(merchantId, returnId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, returnShippingLabel);
        // TODO: test validations
    }

    /**
     * Lists order returns in your Merchant Center account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentOrderreturnsListTest() throws ApiException {
        String merchantId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean acknowledged = null;
        String createdEndDate = null;
        String createdStartDate = null;
        List<String> googleOrderIds = null;
        Integer maxResults = null;
        String orderBy = null;
        String pageToken = null;
        List<String> shipmentStates = null;
        List<String> shipmentStatus = null;
        List<String> shipmentTrackingNumbers = null;
        List<String> shipmentTypes = null;
        OrderreturnsListResponse response = api.contentOrderreturnsList(merchantId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, acknowledged, createdEndDate, createdStartDate, googleOrderIds, maxResults, orderBy, pageToken, shipmentStates, shipmentStatus, shipmentTrackingNumbers, shipmentTypes);
        // TODO: test validations
    }

    /**
     * Processes return in your Merchant Center account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentOrderreturnsProcessTest() throws ApiException {
        String merchantId = null;
        String returnId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        OrderreturnsProcessRequest orderreturnsProcessRequest = null;
        OrderreturnsProcessResponse response = api.contentOrderreturnsProcess(merchantId, returnId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, orderreturnsProcessRequest);
        // TODO: test validations
    }

}
