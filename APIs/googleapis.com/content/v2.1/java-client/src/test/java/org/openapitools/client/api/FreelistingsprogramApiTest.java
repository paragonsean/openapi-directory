/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CheckoutSettings;
import org.openapitools.client.model.FreeListingsProgramStatus;
import org.openapitools.client.model.InsertCheckoutSettingsRequest;
import org.openapitools.client.model.RequestReviewFreeListingsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FreelistingsprogramApi
 */
@Disabled
public class FreelistingsprogramApiTest {

    private final FreelistingsprogramApi api = new FreelistingsprogramApi();

    /**
     * Deletes &#x60;Checkout&#x60; settings and unenrolls merchant from &#x60;Checkout&#x60; program.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentFreelistingsprogramCheckoutsettingsDeleteTest() throws ApiException {
        String merchantId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        api.contentFreelistingsprogramCheckoutsettingsDelete(merchantId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Gets Checkout settings for the given merchant. This includes information about review state, enrollment state and URL settings.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentFreelistingsprogramCheckoutsettingsGetTest() throws ApiException {
        String merchantId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        CheckoutSettings response = api.contentFreelistingsprogramCheckoutsettingsGet(merchantId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Enrolls merchant in &#x60;Checkout&#x60; program.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentFreelistingsprogramCheckoutsettingsInsertTest() throws ApiException {
        String merchantId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        InsertCheckoutSettingsRequest insertCheckoutSettingsRequest = null;
        CheckoutSettings response = api.contentFreelistingsprogramCheckoutsettingsInsert(merchantId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, insertCheckoutSettingsRequest);
        // TODO: test validations
    }

    /**
     * Retrieves the status and review eligibility for the free listing program. Returns errors and warnings if they require action to resolve, will become disapprovals, or impact impressions. Use &#x60;accountstatuses&#x60; to view all issues for an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentFreelistingsprogramGetTest() throws ApiException {
        String merchantId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        FreeListingsProgramStatus response = api.contentFreelistingsprogramGet(merchantId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Requests a review of free listings in a specific region. This method deprecated. Use the &#x60;MerchantSupportService&#x60; to view product and account issues and request a review.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentFreelistingsprogramRequestreviewTest() throws ApiException {
        String merchantId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        RequestReviewFreeListingsRequest requestReviewFreeListingsRequest = null;
        api.contentFreelistingsprogramRequestreview(merchantId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, requestReviewFreeListingsRequest);
        // TODO: test validations
    }

}
