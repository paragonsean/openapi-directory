/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Date;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Dimensions according to which metrics are segmented in the response. Values of product dimensions, such as &#x60;offer_id&#x60;, reflect the state of a product at the time of the corresponding event, for example, impression or order. Segment fields cannot be selected in queries without also selecting at least one metric field. Values are only set for dimensions requested explicitly in the request&#39;s search query.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:00.560037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Segments {
  public static final String SERIALIZED_NAME_BRAND = "brand";
  @SerializedName(SERIALIZED_NAME_BRAND)
  private String brand;

  public static final String SERIALIZED_NAME_CATEGORY_L1 = "categoryL1";
  @SerializedName(SERIALIZED_NAME_CATEGORY_L1)
  private String categoryL1;

  public static final String SERIALIZED_NAME_CATEGORY_L2 = "categoryL2";
  @SerializedName(SERIALIZED_NAME_CATEGORY_L2)
  private String categoryL2;

  public static final String SERIALIZED_NAME_CATEGORY_L3 = "categoryL3";
  @SerializedName(SERIALIZED_NAME_CATEGORY_L3)
  private String categoryL3;

  public static final String SERIALIZED_NAME_CATEGORY_L4 = "categoryL4";
  @SerializedName(SERIALIZED_NAME_CATEGORY_L4)
  private String categoryL4;

  public static final String SERIALIZED_NAME_CATEGORY_L5 = "categoryL5";
  @SerializedName(SERIALIZED_NAME_CATEGORY_L5)
  private String categoryL5;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL0 = "customLabel0";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL0)
  private String customLabel0;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL1 = "customLabel1";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL1)
  private String customLabel1;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL2 = "customLabel2";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL2)
  private String customLabel2;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL3 = "customLabel3";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL3)
  private String customLabel3;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL4 = "customLabel4";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL4)
  private String customLabel4;

  public static final String SERIALIZED_NAME_CUSTOMER_COUNTRY_CODE = "customerCountryCode";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_COUNTRY_CODE)
  private String customerCountryCode;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private Date date;

  public static final String SERIALIZED_NAME_OFFER_ID = "offerId";
  @SerializedName(SERIALIZED_NAME_OFFER_ID)
  private String offerId;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE_L1 = "productTypeL1";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE_L1)
  private String productTypeL1;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE_L2 = "productTypeL2";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE_L2)
  private String productTypeL2;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE_L3 = "productTypeL3";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE_L3)
  private String productTypeL3;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE_L4 = "productTypeL4";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE_L4)
  private String productTypeL4;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE_L5 = "productTypeL5";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE_L5)
  private String productTypeL5;

  /**
   * Program to which metrics apply, for example, Free Product Listing.
   */
  @JsonAdapter(ProgramEnum.Adapter.class)
  public enum ProgramEnum {
    PROGRAM_UNSPECIFIED("PROGRAM_UNSPECIFIED"),
    
    SHOPPING_ADS("SHOPPING_ADS"),
    
    FREE_PRODUCT_LISTING("FREE_PRODUCT_LISTING"),
    
    FREE_LOCAL_PRODUCT_LISTING("FREE_LOCAL_PRODUCT_LISTING"),
    
    BUY_ON_GOOGLE_LISTING("BUY_ON_GOOGLE_LISTING");

    private String value;

    ProgramEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProgramEnum fromValue(String value) {
      for (ProgramEnum b : ProgramEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProgramEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProgramEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProgramEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProgramEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProgramEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROGRAM = "program";
  @SerializedName(SERIALIZED_NAME_PROGRAM)
  private ProgramEnum program;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_WEEK = "week";
  @SerializedName(SERIALIZED_NAME_WEEK)
  private Date week;

  public Segments() {
  }

  public Segments brand(String brand) {
    this.brand = brand;
    return this;
  }

  /**
   * Brand of the product.
   * @return brand
   */
  @javax.annotation.Nullable
  public String getBrand() {
    return brand;
  }

  public void setBrand(String brand) {
    this.brand = brand;
  }


  public Segments categoryL1(String categoryL1) {
    this.categoryL1 = categoryL1;
    return this;
  }

  /**
   * [Product category (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google&#39;s product taxonomy.
   * @return categoryL1
   */
  @javax.annotation.Nullable
  public String getCategoryL1() {
    return categoryL1;
  }

  public void setCategoryL1(String categoryL1) {
    this.categoryL1 = categoryL1;
  }


  public Segments categoryL2(String categoryL2) {
    this.categoryL2 = categoryL2;
    return this;
  }

  /**
   * [Product category (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google&#39;s product taxonomy.
   * @return categoryL2
   */
  @javax.annotation.Nullable
  public String getCategoryL2() {
    return categoryL2;
  }

  public void setCategoryL2(String categoryL2) {
    this.categoryL2 = categoryL2;
  }


  public Segments categoryL3(String categoryL3) {
    this.categoryL3 = categoryL3;
    return this;
  }

  /**
   * [Product category (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google&#39;s product taxonomy.
   * @return categoryL3
   */
  @javax.annotation.Nullable
  public String getCategoryL3() {
    return categoryL3;
  }

  public void setCategoryL3(String categoryL3) {
    this.categoryL3 = categoryL3;
  }


  public Segments categoryL4(String categoryL4) {
    this.categoryL4 = categoryL4;
    return this;
  }

  /**
   * [Product category (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google&#39;s product taxonomy.
   * @return categoryL4
   */
  @javax.annotation.Nullable
  public String getCategoryL4() {
    return categoryL4;
  }

  public void setCategoryL4(String categoryL4) {
    this.categoryL4 = categoryL4;
  }


  public Segments categoryL5(String categoryL5) {
    this.categoryL5 = categoryL5;
    return this;
  }

  /**
   * [Product category (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google&#39;s product taxonomy.
   * @return categoryL5
   */
  @javax.annotation.Nullable
  public String getCategoryL5() {
    return categoryL5;
  }

  public void setCategoryL5(String categoryL5) {
    this.categoryL5 = categoryL5;
  }


  public Segments currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Currency in which price metrics are represented, for example, if you select &#x60;ordered_item_sales_micros&#x60;, the returned value will be represented by this currency.
   * @return currencyCode
   */
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public Segments customLabel0(String customLabel0) {
    this.customLabel0 = customLabel0;
    return this;
  }

  /**
   * Custom label 0 for custom grouping of products.
   * @return customLabel0
   */
  @javax.annotation.Nullable
  public String getCustomLabel0() {
    return customLabel0;
  }

  public void setCustomLabel0(String customLabel0) {
    this.customLabel0 = customLabel0;
  }


  public Segments customLabel1(String customLabel1) {
    this.customLabel1 = customLabel1;
    return this;
  }

  /**
   * Custom label 1 for custom grouping of products.
   * @return customLabel1
   */
  @javax.annotation.Nullable
  public String getCustomLabel1() {
    return customLabel1;
  }

  public void setCustomLabel1(String customLabel1) {
    this.customLabel1 = customLabel1;
  }


  public Segments customLabel2(String customLabel2) {
    this.customLabel2 = customLabel2;
    return this;
  }

  /**
   * Custom label 2 for custom grouping of products.
   * @return customLabel2
   */
  @javax.annotation.Nullable
  public String getCustomLabel2() {
    return customLabel2;
  }

  public void setCustomLabel2(String customLabel2) {
    this.customLabel2 = customLabel2;
  }


  public Segments customLabel3(String customLabel3) {
    this.customLabel3 = customLabel3;
    return this;
  }

  /**
   * Custom label 3 for custom grouping of products.
   * @return customLabel3
   */
  @javax.annotation.Nullable
  public String getCustomLabel3() {
    return customLabel3;
  }

  public void setCustomLabel3(String customLabel3) {
    this.customLabel3 = customLabel3;
  }


  public Segments customLabel4(String customLabel4) {
    this.customLabel4 = customLabel4;
    return this;
  }

  /**
   * Custom label 4 for custom grouping of products.
   * @return customLabel4
   */
  @javax.annotation.Nullable
  public String getCustomLabel4() {
    return customLabel4;
  }

  public void setCustomLabel4(String customLabel4) {
    this.customLabel4 = customLabel4;
  }


  public Segments customerCountryCode(String customerCountryCode) {
    this.customerCountryCode = customerCountryCode;
    return this;
  }

  /**
   * Code of the country where the customer is located at the time of the event. Represented in the ISO 3166 format. If the customer country cannot be determined, a special &#39;ZZ&#39; code is returned.
   * @return customerCountryCode
   */
  @javax.annotation.Nullable
  public String getCustomerCountryCode() {
    return customerCountryCode;
  }

  public void setCustomerCountryCode(String customerCountryCode) {
    this.customerCountryCode = customerCountryCode;
  }


  public Segments date(Date date) {
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   */
  @javax.annotation.Nullable
  public Date getDate() {
    return date;
  }

  public void setDate(Date date) {
    this.date = date;
  }


  public Segments offerId(String offerId) {
    this.offerId = offerId;
    return this;
  }

  /**
   * Merchant-provided id of the product.
   * @return offerId
   */
  @javax.annotation.Nullable
  public String getOfferId() {
    return offerId;
  }

  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }


  public Segments productTypeL1(String productTypeL1) {
    this.productTypeL1 = productTypeL1;
    return this;
  }

  /**
   * [Product type (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant&#39;s own product taxonomy.
   * @return productTypeL1
   */
  @javax.annotation.Nullable
  public String getProductTypeL1() {
    return productTypeL1;
  }

  public void setProductTypeL1(String productTypeL1) {
    this.productTypeL1 = productTypeL1;
  }


  public Segments productTypeL2(String productTypeL2) {
    this.productTypeL2 = productTypeL2;
    return this;
  }

  /**
   * [Product type (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant&#39;s own product taxonomy.
   * @return productTypeL2
   */
  @javax.annotation.Nullable
  public String getProductTypeL2() {
    return productTypeL2;
  }

  public void setProductTypeL2(String productTypeL2) {
    this.productTypeL2 = productTypeL2;
  }


  public Segments productTypeL3(String productTypeL3) {
    this.productTypeL3 = productTypeL3;
    return this;
  }

  /**
   * [Product type (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant&#39;s own product taxonomy.
   * @return productTypeL3
   */
  @javax.annotation.Nullable
  public String getProductTypeL3() {
    return productTypeL3;
  }

  public void setProductTypeL3(String productTypeL3) {
    this.productTypeL3 = productTypeL3;
  }


  public Segments productTypeL4(String productTypeL4) {
    this.productTypeL4 = productTypeL4;
    return this;
  }

  /**
   * [Product type (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant&#39;s own product taxonomy.
   * @return productTypeL4
   */
  @javax.annotation.Nullable
  public String getProductTypeL4() {
    return productTypeL4;
  }

  public void setProductTypeL4(String productTypeL4) {
    this.productTypeL4 = productTypeL4;
  }


  public Segments productTypeL5(String productTypeL5) {
    this.productTypeL5 = productTypeL5;
    return this;
  }

  /**
   * [Product type (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant&#39;s own product taxonomy.
   * @return productTypeL5
   */
  @javax.annotation.Nullable
  public String getProductTypeL5() {
    return productTypeL5;
  }

  public void setProductTypeL5(String productTypeL5) {
    this.productTypeL5 = productTypeL5;
  }


  public Segments program(ProgramEnum program) {
    this.program = program;
    return this;
  }

  /**
   * Program to which metrics apply, for example, Free Product Listing.
   * @return program
   */
  @javax.annotation.Nullable
  public ProgramEnum getProgram() {
    return program;
  }

  public void setProgram(ProgramEnum program) {
    this.program = program;
  }


  public Segments title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Title of the product.
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public Segments week(Date week) {
    this.week = week;
    return this;
  }

  /**
   * Get week
   * @return week
   */
  @javax.annotation.Nullable
  public Date getWeek() {
    return week;
  }

  public void setWeek(Date week) {
    this.week = week;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Segments segments = (Segments) o;
    return Objects.equals(this.brand, segments.brand) &&
        Objects.equals(this.categoryL1, segments.categoryL1) &&
        Objects.equals(this.categoryL2, segments.categoryL2) &&
        Objects.equals(this.categoryL3, segments.categoryL3) &&
        Objects.equals(this.categoryL4, segments.categoryL4) &&
        Objects.equals(this.categoryL5, segments.categoryL5) &&
        Objects.equals(this.currencyCode, segments.currencyCode) &&
        Objects.equals(this.customLabel0, segments.customLabel0) &&
        Objects.equals(this.customLabel1, segments.customLabel1) &&
        Objects.equals(this.customLabel2, segments.customLabel2) &&
        Objects.equals(this.customLabel3, segments.customLabel3) &&
        Objects.equals(this.customLabel4, segments.customLabel4) &&
        Objects.equals(this.customerCountryCode, segments.customerCountryCode) &&
        Objects.equals(this.date, segments.date) &&
        Objects.equals(this.offerId, segments.offerId) &&
        Objects.equals(this.productTypeL1, segments.productTypeL1) &&
        Objects.equals(this.productTypeL2, segments.productTypeL2) &&
        Objects.equals(this.productTypeL3, segments.productTypeL3) &&
        Objects.equals(this.productTypeL4, segments.productTypeL4) &&
        Objects.equals(this.productTypeL5, segments.productTypeL5) &&
        Objects.equals(this.program, segments.program) &&
        Objects.equals(this.title, segments.title) &&
        Objects.equals(this.week, segments.week);
  }

  @Override
  public int hashCode() {
    return Objects.hash(brand, categoryL1, categoryL2, categoryL3, categoryL4, categoryL5, currencyCode, customLabel0, customLabel1, customLabel2, customLabel3, customLabel4, customerCountryCode, date, offerId, productTypeL1, productTypeL2, productTypeL3, productTypeL4, productTypeL5, program, title, week);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Segments {\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    categoryL1: ").append(toIndentedString(categoryL1)).append("\n");
    sb.append("    categoryL2: ").append(toIndentedString(categoryL2)).append("\n");
    sb.append("    categoryL3: ").append(toIndentedString(categoryL3)).append("\n");
    sb.append("    categoryL4: ").append(toIndentedString(categoryL4)).append("\n");
    sb.append("    categoryL5: ").append(toIndentedString(categoryL5)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    customLabel0: ").append(toIndentedString(customLabel0)).append("\n");
    sb.append("    customLabel1: ").append(toIndentedString(customLabel1)).append("\n");
    sb.append("    customLabel2: ").append(toIndentedString(customLabel2)).append("\n");
    sb.append("    customLabel3: ").append(toIndentedString(customLabel3)).append("\n");
    sb.append("    customLabel4: ").append(toIndentedString(customLabel4)).append("\n");
    sb.append("    customerCountryCode: ").append(toIndentedString(customerCountryCode)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    offerId: ").append(toIndentedString(offerId)).append("\n");
    sb.append("    productTypeL1: ").append(toIndentedString(productTypeL1)).append("\n");
    sb.append("    productTypeL2: ").append(toIndentedString(productTypeL2)).append("\n");
    sb.append("    productTypeL3: ").append(toIndentedString(productTypeL3)).append("\n");
    sb.append("    productTypeL4: ").append(toIndentedString(productTypeL4)).append("\n");
    sb.append("    productTypeL5: ").append(toIndentedString(productTypeL5)).append("\n");
    sb.append("    program: ").append(toIndentedString(program)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    week: ").append(toIndentedString(week)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("brand");
    openapiFields.add("categoryL1");
    openapiFields.add("categoryL2");
    openapiFields.add("categoryL3");
    openapiFields.add("categoryL4");
    openapiFields.add("categoryL5");
    openapiFields.add("currencyCode");
    openapiFields.add("customLabel0");
    openapiFields.add("customLabel1");
    openapiFields.add("customLabel2");
    openapiFields.add("customLabel3");
    openapiFields.add("customLabel4");
    openapiFields.add("customerCountryCode");
    openapiFields.add("date");
    openapiFields.add("offerId");
    openapiFields.add("productTypeL1");
    openapiFields.add("productTypeL2");
    openapiFields.add("productTypeL3");
    openapiFields.add("productTypeL4");
    openapiFields.add("productTypeL5");
    openapiFields.add("program");
    openapiFields.add("title");
    openapiFields.add("week");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Segments
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Segments.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Segments is not found in the empty JSON string", Segments.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Segments.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Segments` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("brand") != null && !jsonObj.get("brand").isJsonNull()) && !jsonObj.get("brand").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand").toString()));
      }
      if ((jsonObj.get("categoryL1") != null && !jsonObj.get("categoryL1").isJsonNull()) && !jsonObj.get("categoryL1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categoryL1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categoryL1").toString()));
      }
      if ((jsonObj.get("categoryL2") != null && !jsonObj.get("categoryL2").isJsonNull()) && !jsonObj.get("categoryL2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categoryL2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categoryL2").toString()));
      }
      if ((jsonObj.get("categoryL3") != null && !jsonObj.get("categoryL3").isJsonNull()) && !jsonObj.get("categoryL3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categoryL3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categoryL3").toString()));
      }
      if ((jsonObj.get("categoryL4") != null && !jsonObj.get("categoryL4").isJsonNull()) && !jsonObj.get("categoryL4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categoryL4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categoryL4").toString()));
      }
      if ((jsonObj.get("categoryL5") != null && !jsonObj.get("categoryL5").isJsonNull()) && !jsonObj.get("categoryL5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categoryL5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categoryL5").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("customLabel0") != null && !jsonObj.get("customLabel0").isJsonNull()) && !jsonObj.get("customLabel0").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel0` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel0").toString()));
      }
      if ((jsonObj.get("customLabel1") != null && !jsonObj.get("customLabel1").isJsonNull()) && !jsonObj.get("customLabel1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel1").toString()));
      }
      if ((jsonObj.get("customLabel2") != null && !jsonObj.get("customLabel2").isJsonNull()) && !jsonObj.get("customLabel2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel2").toString()));
      }
      if ((jsonObj.get("customLabel3") != null && !jsonObj.get("customLabel3").isJsonNull()) && !jsonObj.get("customLabel3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel3").toString()));
      }
      if ((jsonObj.get("customLabel4") != null && !jsonObj.get("customLabel4").isJsonNull()) && !jsonObj.get("customLabel4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel4").toString()));
      }
      if ((jsonObj.get("customerCountryCode") != null && !jsonObj.get("customerCountryCode").isJsonNull()) && !jsonObj.get("customerCountryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerCountryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerCountryCode").toString()));
      }
      // validate the optional field `date`
      if (jsonObj.get("date") != null && !jsonObj.get("date").isJsonNull()) {
        Date.validateJsonElement(jsonObj.get("date"));
      }
      if ((jsonObj.get("offerId") != null && !jsonObj.get("offerId").isJsonNull()) && !jsonObj.get("offerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offerId").toString()));
      }
      if ((jsonObj.get("productTypeL1") != null && !jsonObj.get("productTypeL1").isJsonNull()) && !jsonObj.get("productTypeL1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productTypeL1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productTypeL1").toString()));
      }
      if ((jsonObj.get("productTypeL2") != null && !jsonObj.get("productTypeL2").isJsonNull()) && !jsonObj.get("productTypeL2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productTypeL2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productTypeL2").toString()));
      }
      if ((jsonObj.get("productTypeL3") != null && !jsonObj.get("productTypeL3").isJsonNull()) && !jsonObj.get("productTypeL3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productTypeL3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productTypeL3").toString()));
      }
      if ((jsonObj.get("productTypeL4") != null && !jsonObj.get("productTypeL4").isJsonNull()) && !jsonObj.get("productTypeL4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productTypeL4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productTypeL4").toString()));
      }
      if ((jsonObj.get("productTypeL5") != null && !jsonObj.get("productTypeL5").isJsonNull()) && !jsonObj.get("productTypeL5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productTypeL5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productTypeL5").toString()));
      }
      if ((jsonObj.get("program") != null && !jsonObj.get("program").isJsonNull()) && !jsonObj.get("program").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `program` to be a primitive type in the JSON string but got `%s`", jsonObj.get("program").toString()));
      }
      // validate the optional field `program`
      if (jsonObj.get("program") != null && !jsonObj.get("program").isJsonNull()) {
        ProgramEnum.validateJsonElement(jsonObj.get("program"));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      // validate the optional field `week`
      if (jsonObj.get("week") != null && !jsonObj.get("week").isJsonNull()) {
        Date.validateJsonElement(jsonObj.get("week"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Segments.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Segments' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Segments> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Segments.class));

       return (TypeAdapter<T>) new TypeAdapter<Segments>() {
           @Override
           public void write(JsonWriter out, Segments value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Segments read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Segments given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Segments
   * @throws IOException if the JSON string is invalid with respect to Segments
   */
  public static Segments fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Segments.class);
  }

  /**
   * Convert an instance of Segments to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

