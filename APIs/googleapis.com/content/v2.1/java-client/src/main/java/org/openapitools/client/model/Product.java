/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CloudExportAdditionalProperties;
import org.openapitools.client.model.CustomAttribute;
import org.openapitools.client.model.Installment;
import org.openapitools.client.model.LoyaltyPoints;
import org.openapitools.client.model.Price;
import org.openapitools.client.model.ProductCertification;
import org.openapitools.client.model.ProductDimension;
import org.openapitools.client.model.ProductProductDetail;
import org.openapitools.client.model.ProductShipping;
import org.openapitools.client.model.ProductShippingDimension;
import org.openapitools.client.model.ProductShippingWeight;
import org.openapitools.client.model.ProductSubscriptionCost;
import org.openapitools.client.model.ProductTax;
import org.openapitools.client.model.ProductUnitPricingBaseMeasure;
import org.openapitools.client.model.ProductUnitPricingMeasure;
import org.openapitools.client.model.ProductWeight;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *  Required product attributes are primarily defined by the product data specification. See the Product Data Specification Help Center article for information. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:00.560037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Product {
  public static final String SERIALIZED_NAME_ADDITIONAL_IMAGE_LINKS = "additionalImageLinks";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_IMAGE_LINKS)
  private List<String> additionalImageLinks = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADDITIONAL_SIZE_TYPE = "additionalSizeType";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_SIZE_TYPE)
  private String additionalSizeType;

  public static final String SERIALIZED_NAME_ADS_GROUPING = "adsGrouping";
  @SerializedName(SERIALIZED_NAME_ADS_GROUPING)
  private String adsGrouping;

  public static final String SERIALIZED_NAME_ADS_LABELS = "adsLabels";
  @SerializedName(SERIALIZED_NAME_ADS_LABELS)
  private List<String> adsLabels = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADS_REDIRECT = "adsRedirect";
  @SerializedName(SERIALIZED_NAME_ADS_REDIRECT)
  private String adsRedirect;

  public static final String SERIALIZED_NAME_ADULT = "adult";
  @SerializedName(SERIALIZED_NAME_ADULT)
  private Boolean adult;

  public static final String SERIALIZED_NAME_AGE_GROUP = "ageGroup";
  @SerializedName(SERIALIZED_NAME_AGE_GROUP)
  private String ageGroup;

  public static final String SERIALIZED_NAME_AVAILABILITY = "availability";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY)
  private String availability;

  public static final String SERIALIZED_NAME_AVAILABILITY_DATE = "availabilityDate";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_DATE)
  private String availabilityDate;

  public static final String SERIALIZED_NAME_BRAND = "brand";
  @SerializedName(SERIALIZED_NAME_BRAND)
  private String brand;

  public static final String SERIALIZED_NAME_CANONICAL_LINK = "canonicalLink";
  @SerializedName(SERIALIZED_NAME_CANONICAL_LINK)
  private String canonicalLink;

  public static final String SERIALIZED_NAME_CERTIFICATIONS = "certifications";
  @SerializedName(SERIALIZED_NAME_CERTIFICATIONS)
  private List<ProductCertification> certifications = new ArrayList<>();

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private String channel;

  public static final String SERIALIZED_NAME_CLOUD_EXPORT_ADDITIONAL_PROPERTIES = "cloudExportAdditionalProperties";
  @SerializedName(SERIALIZED_NAME_CLOUD_EXPORT_ADDITIONAL_PROPERTIES)
  private List<CloudExportAdditionalProperties> cloudExportAdditionalProperties = new ArrayList<>();

  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private String color;

  public static final String SERIALIZED_NAME_CONDITION = "condition";
  @SerializedName(SERIALIZED_NAME_CONDITION)
  private String condition;

  public static final String SERIALIZED_NAME_CONTENT_LANGUAGE = "contentLanguage";
  @SerializedName(SERIALIZED_NAME_CONTENT_LANGUAGE)
  private String contentLanguage;

  public static final String SERIALIZED_NAME_COST_OF_GOODS_SOLD = "costOfGoodsSold";
  @SerializedName(SERIALIZED_NAME_COST_OF_GOODS_SOLD)
  private Price costOfGoodsSold;

  public static final String SERIALIZED_NAME_CUSTOM_ATTRIBUTES = "customAttributes";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ATTRIBUTES)
  private List<CustomAttribute> customAttributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_CUSTOM_LABEL0 = "customLabel0";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL0)
  private String customLabel0;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL1 = "customLabel1";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL1)
  private String customLabel1;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL2 = "customLabel2";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL2)
  private String customLabel2;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL3 = "customLabel3";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL3)
  private String customLabel3;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL4 = "customLabel4";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL4)
  private String customLabel4;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISCLOSURE_DATE = "disclosureDate";
  @SerializedName(SERIALIZED_NAME_DISCLOSURE_DATE)
  private String disclosureDate;

  public static final String SERIALIZED_NAME_DISPLAY_ADS_ID = "displayAdsId";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ADS_ID)
  private String displayAdsId;

  public static final String SERIALIZED_NAME_DISPLAY_ADS_LINK = "displayAdsLink";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ADS_LINK)
  private String displayAdsLink;

  public static final String SERIALIZED_NAME_DISPLAY_ADS_SIMILAR_IDS = "displayAdsSimilarIds";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ADS_SIMILAR_IDS)
  private List<String> displayAdsSimilarIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAY_ADS_TITLE = "displayAdsTitle";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ADS_TITLE)
  private String displayAdsTitle;

  public static final String SERIALIZED_NAME_DISPLAY_ADS_VALUE = "displayAdsValue";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ADS_VALUE)
  private Double displayAdsValue;

  public static final String SERIALIZED_NAME_ENERGY_EFFICIENCY_CLASS = "energyEfficiencyClass";
  @SerializedName(SERIALIZED_NAME_ENERGY_EFFICIENCY_CLASS)
  private String energyEfficiencyClass;

  public static final String SERIALIZED_NAME_EXCLUDED_DESTINATIONS = "excludedDestinations";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_DESTINATIONS)
  private List<String> excludedDestinations = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expirationDate";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private String expirationDate;

  public static final String SERIALIZED_NAME_EXTERNAL_SELLER_ID = "externalSellerId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_SELLER_ID)
  private String externalSellerId;

  public static final String SERIALIZED_NAME_FEED_LABEL = "feedLabel";
  @SerializedName(SERIALIZED_NAME_FEED_LABEL)
  private String feedLabel;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_GOOGLE_PRODUCT_CATEGORY = "googleProductCategory";
  @SerializedName(SERIALIZED_NAME_GOOGLE_PRODUCT_CATEGORY)
  private String googleProductCategory;

  public static final String SERIALIZED_NAME_GTIN = "gtin";
  @SerializedName(SERIALIZED_NAME_GTIN)
  private String gtin;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IDENTIFIER_EXISTS = "identifierExists";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER_EXISTS)
  private Boolean identifierExists;

  public static final String SERIALIZED_NAME_IMAGE_LINK = "imageLink";
  @SerializedName(SERIALIZED_NAME_IMAGE_LINK)
  private String imageLink;

  public static final String SERIALIZED_NAME_INCLUDED_DESTINATIONS = "includedDestinations";
  @SerializedName(SERIALIZED_NAME_INCLUDED_DESTINATIONS)
  private List<String> includedDestinations = new ArrayList<>();

  public static final String SERIALIZED_NAME_INSTALLMENT = "installment";
  @SerializedName(SERIALIZED_NAME_INSTALLMENT)
  private Installment installment;

  public static final String SERIALIZED_NAME_IS_BUNDLE = "isBundle";
  @SerializedName(SERIALIZED_NAME_IS_BUNDLE)
  private Boolean isBundle;

  public static final String SERIALIZED_NAME_ITEM_GROUP_ID = "itemGroupId";
  @SerializedName(SERIALIZED_NAME_ITEM_GROUP_ID)
  private String itemGroupId;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_LIFESTYLE_IMAGE_LINKS = "lifestyleImageLinks";
  @SerializedName(SERIALIZED_NAME_LIFESTYLE_IMAGE_LINKS)
  private List<String> lifestyleImageLinks = new ArrayList<>();

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_LINK_TEMPLATE = "linkTemplate";
  @SerializedName(SERIALIZED_NAME_LINK_TEMPLATE)
  private String linkTemplate;

  public static final String SERIALIZED_NAME_LOYALTY_POINTS = "loyaltyPoints";
  @SerializedName(SERIALIZED_NAME_LOYALTY_POINTS)
  private LoyaltyPoints loyaltyPoints;

  public static final String SERIALIZED_NAME_MATERIAL = "material";
  @SerializedName(SERIALIZED_NAME_MATERIAL)
  private String material;

  public static final String SERIALIZED_NAME_MAX_ENERGY_EFFICIENCY_CLASS = "maxEnergyEfficiencyClass";
  @SerializedName(SERIALIZED_NAME_MAX_ENERGY_EFFICIENCY_CLASS)
  private String maxEnergyEfficiencyClass;

  public static final String SERIALIZED_NAME_MAX_HANDLING_TIME = "maxHandlingTime";
  @SerializedName(SERIALIZED_NAME_MAX_HANDLING_TIME)
  private String maxHandlingTime;

  public static final String SERIALIZED_NAME_MIN_ENERGY_EFFICIENCY_CLASS = "minEnergyEfficiencyClass";
  @SerializedName(SERIALIZED_NAME_MIN_ENERGY_EFFICIENCY_CLASS)
  private String minEnergyEfficiencyClass;

  public static final String SERIALIZED_NAME_MIN_HANDLING_TIME = "minHandlingTime";
  @SerializedName(SERIALIZED_NAME_MIN_HANDLING_TIME)
  private String minHandlingTime;

  public static final String SERIALIZED_NAME_MOBILE_LINK = "mobileLink";
  @SerializedName(SERIALIZED_NAME_MOBILE_LINK)
  private String mobileLink;

  public static final String SERIALIZED_NAME_MOBILE_LINK_TEMPLATE = "mobileLinkTemplate";
  @SerializedName(SERIALIZED_NAME_MOBILE_LINK_TEMPLATE)
  private String mobileLinkTemplate;

  public static final String SERIALIZED_NAME_MPN = "mpn";
  @SerializedName(SERIALIZED_NAME_MPN)
  private String mpn;

  public static final String SERIALIZED_NAME_MULTIPACK = "multipack";
  @SerializedName(SERIALIZED_NAME_MULTIPACK)
  private String multipack;

  public static final String SERIALIZED_NAME_OFFER_ID = "offerId";
  @SerializedName(SERIALIZED_NAME_OFFER_ID)
  private String offerId;

  public static final String SERIALIZED_NAME_PATTERN = "pattern";
  @SerializedName(SERIALIZED_NAME_PATTERN)
  private String pattern;

  public static final String SERIALIZED_NAME_PAUSE = "pause";
  @SerializedName(SERIALIZED_NAME_PAUSE)
  private String pause;

  public static final String SERIALIZED_NAME_PICKUP_METHOD = "pickupMethod";
  @SerializedName(SERIALIZED_NAME_PICKUP_METHOD)
  private String pickupMethod;

  public static final String SERIALIZED_NAME_PICKUP_SLA = "pickupSla";
  @SerializedName(SERIALIZED_NAME_PICKUP_SLA)
  private String pickupSla;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Price price;

  public static final String SERIALIZED_NAME_PRODUCT_DETAILS = "productDetails";
  @SerializedName(SERIALIZED_NAME_PRODUCT_DETAILS)
  private List<ProductProductDetail> productDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRODUCT_HEIGHT = "productHeight";
  @SerializedName(SERIALIZED_NAME_PRODUCT_HEIGHT)
  private ProductDimension productHeight;

  public static final String SERIALIZED_NAME_PRODUCT_HIGHLIGHTS = "productHighlights";
  @SerializedName(SERIALIZED_NAME_PRODUCT_HIGHLIGHTS)
  private List<String> productHighlights = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRODUCT_LENGTH = "productLength";
  @SerializedName(SERIALIZED_NAME_PRODUCT_LENGTH)
  private ProductDimension productLength;

  public static final String SERIALIZED_NAME_PRODUCT_TYPES = "productTypes";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPES)
  private List<String> productTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRODUCT_WEIGHT = "productWeight";
  @SerializedName(SERIALIZED_NAME_PRODUCT_WEIGHT)
  private ProductWeight productWeight;

  public static final String SERIALIZED_NAME_PRODUCT_WIDTH = "productWidth";
  @SerializedName(SERIALIZED_NAME_PRODUCT_WIDTH)
  private ProductDimension productWidth;

  public static final String SERIALIZED_NAME_PROMOTION_IDS = "promotionIds";
  @SerializedName(SERIALIZED_NAME_PROMOTION_IDS)
  private List<String> promotionIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_SALE_PRICE = "salePrice";
  @SerializedName(SERIALIZED_NAME_SALE_PRICE)
  private Price salePrice;

  public static final String SERIALIZED_NAME_SALE_PRICE_EFFECTIVE_DATE = "salePriceEffectiveDate";
  @SerializedName(SERIALIZED_NAME_SALE_PRICE_EFFECTIVE_DATE)
  private String salePriceEffectiveDate;

  public static final String SERIALIZED_NAME_SELL_ON_GOOGLE_QUANTITY = "sellOnGoogleQuantity";
  @SerializedName(SERIALIZED_NAME_SELL_ON_GOOGLE_QUANTITY)
  private String sellOnGoogleQuantity;

  public static final String SERIALIZED_NAME_SHIPPING = "shipping";
  @SerializedName(SERIALIZED_NAME_SHIPPING)
  private List<ProductShipping> shipping = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHIPPING_HEIGHT = "shippingHeight";
  @SerializedName(SERIALIZED_NAME_SHIPPING_HEIGHT)
  private ProductShippingDimension shippingHeight;

  public static final String SERIALIZED_NAME_SHIPPING_LABEL = "shippingLabel";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LABEL)
  private String shippingLabel;

  public static final String SERIALIZED_NAME_SHIPPING_LENGTH = "shippingLength";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LENGTH)
  private ProductShippingDimension shippingLength;

  public static final String SERIALIZED_NAME_SHIPPING_WEIGHT = "shippingWeight";
  @SerializedName(SERIALIZED_NAME_SHIPPING_WEIGHT)
  private ProductShippingWeight shippingWeight;

  public static final String SERIALIZED_NAME_SHIPPING_WIDTH = "shippingWidth";
  @SerializedName(SERIALIZED_NAME_SHIPPING_WIDTH)
  private ProductShippingDimension shippingWidth;

  public static final String SERIALIZED_NAME_SHOPPING_ADS_EXCLUDED_COUNTRIES = "shoppingAdsExcludedCountries";
  @SerializedName(SERIALIZED_NAME_SHOPPING_ADS_EXCLUDED_COUNTRIES)
  private List<String> shoppingAdsExcludedCountries = new ArrayList<>();

  public static final String SERIALIZED_NAME_SIZE_SYSTEM = "sizeSystem";
  @SerializedName(SERIALIZED_NAME_SIZE_SYSTEM)
  private String sizeSystem;

  public static final String SERIALIZED_NAME_SIZE_TYPE = "sizeType";
  @SerializedName(SERIALIZED_NAME_SIZE_TYPE)
  private String sizeType;

  public static final String SERIALIZED_NAME_SIZES = "sizes";
  @SerializedName(SERIALIZED_NAME_SIZES)
  private List<String> sizes = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_COST = "subscriptionCost";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_COST)
  private ProductSubscriptionCost subscriptionCost;

  public static final String SERIALIZED_NAME_TARGET_COUNTRY = "targetCountry";
  @SerializedName(SERIALIZED_NAME_TARGET_COUNTRY)
  private String targetCountry;

  public static final String SERIALIZED_NAME_TAX_CATEGORY = "taxCategory";
  @SerializedName(SERIALIZED_NAME_TAX_CATEGORY)
  private String taxCategory;

  public static final String SERIALIZED_NAME_TAXES = "taxes";
  @SerializedName(SERIALIZED_NAME_TAXES)
  private List<ProductTax> taxes = new ArrayList<>();

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TRANSIT_TIME_LABEL = "transitTimeLabel";
  @SerializedName(SERIALIZED_NAME_TRANSIT_TIME_LABEL)
  private String transitTimeLabel;

  public static final String SERIALIZED_NAME_UNIT_PRICING_BASE_MEASURE = "unitPricingBaseMeasure";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICING_BASE_MEASURE)
  private ProductUnitPricingBaseMeasure unitPricingBaseMeasure;

  public static final String SERIALIZED_NAME_UNIT_PRICING_MEASURE = "unitPricingMeasure";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICING_MEASURE)
  private ProductUnitPricingMeasure unitPricingMeasure;

  public static final String SERIALIZED_NAME_VIRTUAL_MODEL_LINK = "virtualModelLink";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_MODEL_LINK)
  private String virtualModelLink;

  public Product() {
  }

  public Product additionalImageLinks(List<String> additionalImageLinks) {
    this.additionalImageLinks = additionalImageLinks;
    return this;
  }

  public Product addAdditionalImageLinksItem(String additionalImageLinksItem) {
    if (this.additionalImageLinks == null) {
      this.additionalImageLinks = new ArrayList<>();
    }
    this.additionalImageLinks.add(additionalImageLinksItem);
    return this;
  }

  /**
   * Additional URLs of images of the item.
   * @return additionalImageLinks
   */
  @javax.annotation.Nullable
  public List<String> getAdditionalImageLinks() {
    return additionalImageLinks;
  }

  public void setAdditionalImageLinks(List<String> additionalImageLinks) {
    this.additionalImageLinks = additionalImageLinks;
  }


  public Product additionalSizeType(String additionalSizeType) {
    this.additionalSizeType = additionalSizeType;
    return this;
  }

  /**
   * Additional cut of the item. Used together with size_type to represent combined size types for apparel items.
   * @return additionalSizeType
   */
  @javax.annotation.Nullable
  public String getAdditionalSizeType() {
    return additionalSizeType;
  }

  public void setAdditionalSizeType(String additionalSizeType) {
    this.additionalSizeType = additionalSizeType;
  }


  public Product adsGrouping(String adsGrouping) {
    this.adsGrouping = adsGrouping;
    return this;
  }

  /**
   * Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.
   * @return adsGrouping
   */
  @javax.annotation.Nullable
  public String getAdsGrouping() {
    return adsGrouping;
  }

  public void setAdsGrouping(String adsGrouping) {
    this.adsGrouping = adsGrouping;
  }


  public Product adsLabels(List<String> adsLabels) {
    this.adsLabels = adsLabels;
    return this;
  }

  public Product addAdsLabelsItem(String adsLabelsItem) {
    if (this.adsLabels == null) {
      this.adsLabels = new ArrayList<>();
    }
    this.adsLabels.add(adsLabelsItem);
    return this;
  }

  /**
   * Similar to ads_grouping, but only works on CPC.
   * @return adsLabels
   */
  @javax.annotation.Nullable
  public List<String> getAdsLabels() {
    return adsLabels;
  }

  public void setAdsLabels(List<String> adsLabels) {
    this.adsLabels = adsLabels;
  }


  public Product adsRedirect(String adsRedirect) {
    this.adsRedirect = adsRedirect;
    return this;
  }

  /**
   * Allows advertisers to override the item URL when the product is shown within the context of Product Ads.
   * @return adsRedirect
   */
  @javax.annotation.Nullable
  public String getAdsRedirect() {
    return adsRedirect;
  }

  public void setAdsRedirect(String adsRedirect) {
    this.adsRedirect = adsRedirect;
  }


  public Product adult(Boolean adult) {
    this.adult = adult;
    return this;
  }

  /**
   * Should be set to true if the item is targeted towards adults.
   * @return adult
   */
  @javax.annotation.Nullable
  public Boolean getAdult() {
    return adult;
  }

  public void setAdult(Boolean adult) {
    this.adult = adult;
  }


  public Product ageGroup(String ageGroup) {
    this.ageGroup = ageGroup;
    return this;
  }

  /**
   * Target age group of the item.
   * @return ageGroup
   */
  @javax.annotation.Nullable
  public String getAgeGroup() {
    return ageGroup;
  }

  public void setAgeGroup(String ageGroup) {
    this.ageGroup = ageGroup;
  }


  public Product availability(String availability) {
    this.availability = availability;
    return this;
  }

  /**
   * Availability status of the item.
   * @return availability
   */
  @javax.annotation.Nullable
  public String getAvailability() {
    return availability;
  }

  public void setAvailability(String availability) {
    this.availability = availability;
  }


  public Product availabilityDate(String availabilityDate) {
    this.availabilityDate = availabilityDate;
    return this;
  }

  /**
   * The day a pre-ordered product becomes available for delivery, in ISO 8601 format.
   * @return availabilityDate
   */
  @javax.annotation.Nullable
  public String getAvailabilityDate() {
    return availabilityDate;
  }

  public void setAvailabilityDate(String availabilityDate) {
    this.availabilityDate = availabilityDate;
  }


  public Product brand(String brand) {
    this.brand = brand;
    return this;
  }

  /**
   * Brand of the item.
   * @return brand
   */
  @javax.annotation.Nullable
  public String getBrand() {
    return brand;
  }

  public void setBrand(String brand) {
    this.brand = brand;
  }


  public Product canonicalLink(String canonicalLink) {
    this.canonicalLink = canonicalLink;
    return this;
  }

  /**
   * URL for the canonical version of your item&#39;s landing page.
   * @return canonicalLink
   */
  @javax.annotation.Nullable
  public String getCanonicalLink() {
    return canonicalLink;
  }

  public void setCanonicalLink(String canonicalLink) {
    this.canonicalLink = canonicalLink;
  }


  public Product certifications(List<ProductCertification> certifications) {
    this.certifications = certifications;
    return this;
  }

  public Product addCertificationsItem(ProductCertification certificationsItem) {
    if (this.certifications == null) {
      this.certifications = new ArrayList<>();
    }
    this.certifications.add(certificationsItem);
    return this;
  }

  /**
   * Product [certification](https://support.google.com/merchants/answer/13528839), introduced for EU energy efficiency labeling compliance using the [EU EPREL](https://eprel.ec.europa.eu/screen/home) database.
   * @return certifications
   */
  @javax.annotation.Nullable
  public List<ProductCertification> getCertifications() {
    return certifications;
  }

  public void setCertifications(List<ProductCertification> certifications) {
    this.certifications = certifications;
  }


  public Product channel(String channel) {
    this.channel = channel;
    return this;
  }

  /**
   * Required. The item&#39;s channel (online or local). Acceptable values are: - \&quot;&#x60;local&#x60;\&quot; - \&quot;&#x60;online&#x60;\&quot; 
   * @return channel
   */
  @javax.annotation.Nullable
  public String getChannel() {
    return channel;
  }

  public void setChannel(String channel) {
    this.channel = channel;
  }


  public Product cloudExportAdditionalProperties(List<CloudExportAdditionalProperties> cloudExportAdditionalProperties) {
    this.cloudExportAdditionalProperties = cloudExportAdditionalProperties;
    return this;
  }

  public Product addCloudExportAdditionalPropertiesItem(CloudExportAdditionalProperties cloudExportAdditionalPropertiesItem) {
    if (this.cloudExportAdditionalProperties == null) {
      this.cloudExportAdditionalProperties = new ArrayList<>();
    }
    this.cloudExportAdditionalProperties.add(cloudExportAdditionalPropertiesItem);
    return this;
  }

  /**
   * Extra fields to export to the Cloud Retail program.
   * @return cloudExportAdditionalProperties
   */
  @javax.annotation.Nullable
  public List<CloudExportAdditionalProperties> getCloudExportAdditionalProperties() {
    return cloudExportAdditionalProperties;
  }

  public void setCloudExportAdditionalProperties(List<CloudExportAdditionalProperties> cloudExportAdditionalProperties) {
    this.cloudExportAdditionalProperties = cloudExportAdditionalProperties;
  }


  public Product color(String color) {
    this.color = color;
    return this;
  }

  /**
   * Color of the item.
   * @return color
   */
  @javax.annotation.Nullable
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }


  public Product condition(String condition) {
    this.condition = condition;
    return this;
  }

  /**
   * Condition or state of the item.
   * @return condition
   */
  @javax.annotation.Nullable
  public String getCondition() {
    return condition;
  }

  public void setCondition(String condition) {
    this.condition = condition;
  }


  public Product contentLanguage(String contentLanguage) {
    this.contentLanguage = contentLanguage;
    return this;
  }

  /**
   * Required. The two-letter ISO 639-1 language code for the item.
   * @return contentLanguage
   */
  @javax.annotation.Nullable
  public String getContentLanguage() {
    return contentLanguage;
  }

  public void setContentLanguage(String contentLanguage) {
    this.contentLanguage = contentLanguage;
  }


  public Product costOfGoodsSold(Price costOfGoodsSold) {
    this.costOfGoodsSold = costOfGoodsSold;
    return this;
  }

  /**
   * Get costOfGoodsSold
   * @return costOfGoodsSold
   */
  @javax.annotation.Nullable
  public Price getCostOfGoodsSold() {
    return costOfGoodsSold;
  }

  public void setCostOfGoodsSold(Price costOfGoodsSold) {
    this.costOfGoodsSold = costOfGoodsSold;
  }


  public Product customAttributes(List<CustomAttribute> customAttributes) {
    this.customAttributes = customAttributes;
    return this;
  }

  public Product addCustomAttributesItem(CustomAttribute customAttributesItem) {
    if (this.customAttributes == null) {
      this.customAttributes = new ArrayList<>();
    }
    this.customAttributes.add(customAttributesItem);
    return this;
  }

  /**
   * A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (for example, &#x60;{ \&quot;name\&quot;: \&quot;size type\&quot;, \&quot;value\&quot;: \&quot;regular\&quot; }&#x60;). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Buy on Google (formerly known as Shopping Actions).
   * @return customAttributes
   */
  @javax.annotation.Nullable
  public List<CustomAttribute> getCustomAttributes() {
    return customAttributes;
  }

  public void setCustomAttributes(List<CustomAttribute> customAttributes) {
    this.customAttributes = customAttributes;
  }


  public Product customLabel0(String customLabel0) {
    this.customLabel0 = customLabel0;
    return this;
  }

  /**
   * Custom label 0 for custom grouping of items in a Shopping campaign.
   * @return customLabel0
   */
  @javax.annotation.Nullable
  public String getCustomLabel0() {
    return customLabel0;
  }

  public void setCustomLabel0(String customLabel0) {
    this.customLabel0 = customLabel0;
  }


  public Product customLabel1(String customLabel1) {
    this.customLabel1 = customLabel1;
    return this;
  }

  /**
   * Custom label 1 for custom grouping of items in a Shopping campaign.
   * @return customLabel1
   */
  @javax.annotation.Nullable
  public String getCustomLabel1() {
    return customLabel1;
  }

  public void setCustomLabel1(String customLabel1) {
    this.customLabel1 = customLabel1;
  }


  public Product customLabel2(String customLabel2) {
    this.customLabel2 = customLabel2;
    return this;
  }

  /**
   * Custom label 2 for custom grouping of items in a Shopping campaign.
   * @return customLabel2
   */
  @javax.annotation.Nullable
  public String getCustomLabel2() {
    return customLabel2;
  }

  public void setCustomLabel2(String customLabel2) {
    this.customLabel2 = customLabel2;
  }


  public Product customLabel3(String customLabel3) {
    this.customLabel3 = customLabel3;
    return this;
  }

  /**
   * Custom label 3 for custom grouping of items in a Shopping campaign.
   * @return customLabel3
   */
  @javax.annotation.Nullable
  public String getCustomLabel3() {
    return customLabel3;
  }

  public void setCustomLabel3(String customLabel3) {
    this.customLabel3 = customLabel3;
  }


  public Product customLabel4(String customLabel4) {
    this.customLabel4 = customLabel4;
    return this;
  }

  /**
   * Custom label 4 for custom grouping of items in a Shopping campaign.
   * @return customLabel4
   */
  @javax.annotation.Nullable
  public String getCustomLabel4() {
    return customLabel4;
  }

  public void setCustomLabel4(String customLabel4) {
    this.customLabel4 = customLabel4;
  }


  public Product description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the item.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Product disclosureDate(String disclosureDate) {
    this.disclosureDate = disclosureDate;
    return this;
  }

  /**
   * The date time when an offer becomes visible in search results across Google’s YouTube surfaces, in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format. See [Disclosure date](https://support.google.com/merchants/answer/13034208) for more information.
   * @return disclosureDate
   */
  @javax.annotation.Nullable
  public String getDisclosureDate() {
    return disclosureDate;
  }

  public void setDisclosureDate(String disclosureDate) {
    this.disclosureDate = disclosureDate;
  }


  public Product displayAdsId(String displayAdsId) {
    this.displayAdsId = displayAdsId;
    return this;
  }

  /**
   * An identifier for an item for dynamic remarketing campaigns.
   * @return displayAdsId
   */
  @javax.annotation.Nullable
  public String getDisplayAdsId() {
    return displayAdsId;
  }

  public void setDisplayAdsId(String displayAdsId) {
    this.displayAdsId = displayAdsId;
  }


  public Product displayAdsLink(String displayAdsLink) {
    this.displayAdsLink = displayAdsLink;
    return this;
  }

  /**
   * URL directly to your item&#39;s landing page for dynamic remarketing campaigns.
   * @return displayAdsLink
   */
  @javax.annotation.Nullable
  public String getDisplayAdsLink() {
    return displayAdsLink;
  }

  public void setDisplayAdsLink(String displayAdsLink) {
    this.displayAdsLink = displayAdsLink;
  }


  public Product displayAdsSimilarIds(List<String> displayAdsSimilarIds) {
    this.displayAdsSimilarIds = displayAdsSimilarIds;
    return this;
  }

  public Product addDisplayAdsSimilarIdsItem(String displayAdsSimilarIdsItem) {
    if (this.displayAdsSimilarIds == null) {
      this.displayAdsSimilarIds = new ArrayList<>();
    }
    this.displayAdsSimilarIds.add(displayAdsSimilarIdsItem);
    return this;
  }

  /**
   * Advertiser-specified recommendations.
   * @return displayAdsSimilarIds
   */
  @javax.annotation.Nullable
  public List<String> getDisplayAdsSimilarIds() {
    return displayAdsSimilarIds;
  }

  public void setDisplayAdsSimilarIds(List<String> displayAdsSimilarIds) {
    this.displayAdsSimilarIds = displayAdsSimilarIds;
  }


  public Product displayAdsTitle(String displayAdsTitle) {
    this.displayAdsTitle = displayAdsTitle;
    return this;
  }

  /**
   * Title of an item for dynamic remarketing campaigns.
   * @return displayAdsTitle
   */
  @javax.annotation.Nullable
  public String getDisplayAdsTitle() {
    return displayAdsTitle;
  }

  public void setDisplayAdsTitle(String displayAdsTitle) {
    this.displayAdsTitle = displayAdsTitle;
  }


  public Product displayAdsValue(Double displayAdsValue) {
    this.displayAdsValue = displayAdsValue;
    return this;
  }

  /**
   * Offer margin for dynamic remarketing campaigns.
   * @return displayAdsValue
   */
  @javax.annotation.Nullable
  public Double getDisplayAdsValue() {
    return displayAdsValue;
  }

  public void setDisplayAdsValue(Double displayAdsValue) {
    this.displayAdsValue = displayAdsValue;
  }


  public Product energyEfficiencyClass(String energyEfficiencyClass) {
    this.energyEfficiencyClass = energyEfficiencyClass;
    return this;
  }

  /**
   * The energy efficiency class as defined in EU directive 2010/30/EU.
   * @return energyEfficiencyClass
   */
  @javax.annotation.Nullable
  public String getEnergyEfficiencyClass() {
    return energyEfficiencyClass;
  }

  public void setEnergyEfficiencyClass(String energyEfficiencyClass) {
    this.energyEfficiencyClass = energyEfficiencyClass;
  }


  public Product excludedDestinations(List<String> excludedDestinations) {
    this.excludedDestinations = excludedDestinations;
    return this;
  }

  public Product addExcludedDestinationsItem(String excludedDestinationsItem) {
    if (this.excludedDestinations == null) {
      this.excludedDestinations = new ArrayList<>();
    }
    this.excludedDestinations.add(excludedDestinationsItem);
    return this;
  }

  /**
   * The list of destinations to exclude for this target (corresponds to cleared check boxes in Merchant Center). Products that are excluded from all destinations for more than 7 days are automatically deleted.
   * @return excludedDestinations
   */
  @javax.annotation.Nullable
  public List<String> getExcludedDestinations() {
    return excludedDestinations;
  }

  public void setExcludedDestinations(List<String> excludedDestinations) {
    this.excludedDestinations = excludedDestinations;
  }


  public Product expirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

  /**
   * Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in &#x60;productstatuses&#x60; as &#x60;googleExpirationDate&#x60; and might be earlier if &#x60;expirationDate&#x60; is too far in the future.
   * @return expirationDate
   */
  @javax.annotation.Nullable
  public String getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
  }


  public Product externalSellerId(String externalSellerId) {
    this.externalSellerId = externalSellerId;
    return this;
  }

  /**
   * Required for multi-seller accounts. Use this attribute if you&#39;re a marketplace uploading products for various sellers to your multi-seller account.
   * @return externalSellerId
   */
  @javax.annotation.Nullable
  public String getExternalSellerId() {
    return externalSellerId;
  }

  public void setExternalSellerId(String externalSellerId) {
    this.externalSellerId = externalSellerId;
  }


  public Product feedLabel(String feedLabel) {
    this.feedLabel = feedLabel;
    return this;
  }

  /**
   * Feed label for the item. Either &#x60;targetCountry&#x60; or &#x60;feedLabel&#x60; is required. Must be less than or equal to 20 uppercase letters (A-Z), numbers (0-9), and dashes (-).
   * @return feedLabel
   */
  @javax.annotation.Nullable
  public String getFeedLabel() {
    return feedLabel;
  }

  public void setFeedLabel(String feedLabel) {
    this.feedLabel = feedLabel;
  }


  public Product gender(String gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Target gender of the item.
   * @return gender
   */
  @javax.annotation.Nullable
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }


  public Product googleProductCategory(String googleProductCategory) {
    this.googleProductCategory = googleProductCategory;
    return this;
  }

  /**
   * Google&#39;s category of the item (see [Google product taxonomy](https://support.google.com/merchants/answer/1705911)). When querying products, this field will contain the user provided value. There is currently no way to get back the auto assigned google product categories through the API.
   * @return googleProductCategory
   */
  @javax.annotation.Nullable
  public String getGoogleProductCategory() {
    return googleProductCategory;
  }

  public void setGoogleProductCategory(String googleProductCategory) {
    this.googleProductCategory = googleProductCategory;
  }


  public Product gtin(String gtin) {
    this.gtin = gtin;
    return this;
  }

  /**
   * Global Trade Item Number (GTIN) of the item.
   * @return gtin
   */
  @javax.annotation.Nullable
  public String getGtin() {
    return gtin;
  }

  public void setGtin(String gtin) {
    this.gtin = gtin;
  }


  public Product id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The REST ID of the product. Content API methods that operate on products take this as their &#x60;productId&#x60; parameter. The REST ID for a product has one of the 2 forms channel:contentLanguage: targetCountry: offerId or channel:contentLanguage:feedLabel: offerId.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Product identifierExists(Boolean identifierExists) {
    this.identifierExists = identifierExists;
    return this;
  }

  /**
   * False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.
   * @return identifierExists
   */
  @javax.annotation.Nullable
  public Boolean getIdentifierExists() {
    return identifierExists;
  }

  public void setIdentifierExists(Boolean identifierExists) {
    this.identifierExists = identifierExists;
  }


  public Product imageLink(String imageLink) {
    this.imageLink = imageLink;
    return this;
  }

  /**
   * URL of an image of the item.
   * @return imageLink
   */
  @javax.annotation.Nullable
  public String getImageLink() {
    return imageLink;
  }

  public void setImageLink(String imageLink) {
    this.imageLink = imageLink;
  }


  public Product includedDestinations(List<String> includedDestinations) {
    this.includedDestinations = includedDestinations;
    return this;
  }

  public Product addIncludedDestinationsItem(String includedDestinationsItem) {
    if (this.includedDestinations == null) {
      this.includedDestinations = new ArrayList<>();
    }
    this.includedDestinations.add(includedDestinationsItem);
    return this;
  }

  /**
   * The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in &#x60;excludedDestinations&#x60;.
   * @return includedDestinations
   */
  @javax.annotation.Nullable
  public List<String> getIncludedDestinations() {
    return includedDestinations;
  }

  public void setIncludedDestinations(List<String> includedDestinations) {
    this.includedDestinations = includedDestinations;
  }


  public Product installment(Installment installment) {
    this.installment = installment;
    return this;
  }

  /**
   * Get installment
   * @return installment
   */
  @javax.annotation.Nullable
  public Installment getInstallment() {
    return installment;
  }

  public void setInstallment(Installment installment) {
    this.installment = installment;
  }


  public Product isBundle(Boolean isBundle) {
    this.isBundle = isBundle;
    return this;
  }

  /**
   * Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.
   * @return isBundle
   */
  @javax.annotation.Nullable
  public Boolean getIsBundle() {
    return isBundle;
  }

  public void setIsBundle(Boolean isBundle) {
    this.isBundle = isBundle;
  }


  public Product itemGroupId(String itemGroupId) {
    this.itemGroupId = itemGroupId;
    return this;
  }

  /**
   * Shared identifier for all variants of the same product.
   * @return itemGroupId
   */
  @javax.annotation.Nullable
  public String getItemGroupId() {
    return itemGroupId;
  }

  public void setItemGroupId(String itemGroupId) {
    this.itemGroupId = itemGroupId;
  }


  public Product kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;&#x60;content#product&#x60;\&quot;
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public Product lifestyleImageLinks(List<String> lifestyleImageLinks) {
    this.lifestyleImageLinks = lifestyleImageLinks;
    return this;
  }

  public Product addLifestyleImageLinksItem(String lifestyleImageLinksItem) {
    if (this.lifestyleImageLinks == null) {
      this.lifestyleImageLinks = new ArrayList<>();
    }
    this.lifestyleImageLinks.add(lifestyleImageLinksItem);
    return this;
  }

  /**
   * Additional URLs of lifestyle images of the item. Used to explicitly identify images that showcase your item in a real-world context. See the Help Center article for more information.
   * @return lifestyleImageLinks
   */
  @javax.annotation.Nullable
  public List<String> getLifestyleImageLinks() {
    return lifestyleImageLinks;
  }

  public void setLifestyleImageLinks(List<String> lifestyleImageLinks) {
    this.lifestyleImageLinks = lifestyleImageLinks;
  }


  public Product link(String link) {
    this.link = link;
    return this;
  }

  /**
   * URL directly linking to your item&#39;s page on your website.
   * @return link
   */
  @javax.annotation.Nullable
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }


  public Product linkTemplate(String linkTemplate) {
    this.linkTemplate = linkTemplate;
    return this;
  }

  /**
   * URL template for merchant hosted local storefront.
   * @return linkTemplate
   */
  @javax.annotation.Nullable
  public String getLinkTemplate() {
    return linkTemplate;
  }

  public void setLinkTemplate(String linkTemplate) {
    this.linkTemplate = linkTemplate;
  }


  public Product loyaltyPoints(LoyaltyPoints loyaltyPoints) {
    this.loyaltyPoints = loyaltyPoints;
    return this;
  }

  /**
   * Get loyaltyPoints
   * @return loyaltyPoints
   */
  @javax.annotation.Nullable
  public LoyaltyPoints getLoyaltyPoints() {
    return loyaltyPoints;
  }

  public void setLoyaltyPoints(LoyaltyPoints loyaltyPoints) {
    this.loyaltyPoints = loyaltyPoints;
  }


  public Product material(String material) {
    this.material = material;
    return this;
  }

  /**
   * The material of which the item is made.
   * @return material
   */
  @javax.annotation.Nullable
  public String getMaterial() {
    return material;
  }

  public void setMaterial(String material) {
    this.material = material;
  }


  public Product maxEnergyEfficiencyClass(String maxEnergyEfficiencyClass) {
    this.maxEnergyEfficiencyClass = maxEnergyEfficiencyClass;
    return this;
  }

  /**
   * The energy efficiency class as defined in EU directive 2010/30/EU.
   * @return maxEnergyEfficiencyClass
   */
  @javax.annotation.Nullable
  public String getMaxEnergyEfficiencyClass() {
    return maxEnergyEfficiencyClass;
  }

  public void setMaxEnergyEfficiencyClass(String maxEnergyEfficiencyClass) {
    this.maxEnergyEfficiencyClass = maxEnergyEfficiencyClass;
  }


  public Product maxHandlingTime(String maxHandlingTime) {
    this.maxHandlingTime = maxHandlingTime;
    return this;
  }

  /**
   * Maximal product handling time (in business days).
   * @return maxHandlingTime
   */
  @javax.annotation.Nullable
  public String getMaxHandlingTime() {
    return maxHandlingTime;
  }

  public void setMaxHandlingTime(String maxHandlingTime) {
    this.maxHandlingTime = maxHandlingTime;
  }


  public Product minEnergyEfficiencyClass(String minEnergyEfficiencyClass) {
    this.minEnergyEfficiencyClass = minEnergyEfficiencyClass;
    return this;
  }

  /**
   * The energy efficiency class as defined in EU directive 2010/30/EU.
   * @return minEnergyEfficiencyClass
   */
  @javax.annotation.Nullable
  public String getMinEnergyEfficiencyClass() {
    return minEnergyEfficiencyClass;
  }

  public void setMinEnergyEfficiencyClass(String minEnergyEfficiencyClass) {
    this.minEnergyEfficiencyClass = minEnergyEfficiencyClass;
  }


  public Product minHandlingTime(String minHandlingTime) {
    this.minHandlingTime = minHandlingTime;
    return this;
  }

  /**
   * Minimal product handling time (in business days).
   * @return minHandlingTime
   */
  @javax.annotation.Nullable
  public String getMinHandlingTime() {
    return minHandlingTime;
  }

  public void setMinHandlingTime(String minHandlingTime) {
    this.minHandlingTime = minHandlingTime;
  }


  public Product mobileLink(String mobileLink) {
    this.mobileLink = mobileLink;
    return this;
  }

  /**
   * URL for the mobile-optimized version of your item&#39;s landing page.
   * @return mobileLink
   */
  @javax.annotation.Nullable
  public String getMobileLink() {
    return mobileLink;
  }

  public void setMobileLink(String mobileLink) {
    this.mobileLink = mobileLink;
  }


  public Product mobileLinkTemplate(String mobileLinkTemplate) {
    this.mobileLinkTemplate = mobileLinkTemplate;
    return this;
  }

  /**
   * URL template for merchant hosted local storefront optimized for mobile devices.
   * @return mobileLinkTemplate
   */
  @javax.annotation.Nullable
  public String getMobileLinkTemplate() {
    return mobileLinkTemplate;
  }

  public void setMobileLinkTemplate(String mobileLinkTemplate) {
    this.mobileLinkTemplate = mobileLinkTemplate;
  }


  public Product mpn(String mpn) {
    this.mpn = mpn;
    return this;
  }

  /**
   * Manufacturer Part Number (MPN) of the item.
   * @return mpn
   */
  @javax.annotation.Nullable
  public String getMpn() {
    return mpn;
  }

  public void setMpn(String mpn) {
    this.mpn = mpn;
  }


  public Product multipack(String multipack) {
    this.multipack = multipack;
    return this;
  }

  /**
   * The number of identical products in a merchant-defined multipack.
   * @return multipack
   */
  @javax.annotation.Nullable
  public String getMultipack() {
    return multipack;
  }

  public void setMultipack(String multipack) {
    this.multipack = multipack;
  }


  public Product offerId(String offerId) {
    this.offerId = offerId;
    return this;
  }

  /**
   * Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. *Note:* Content API methods that operate on products take the REST ID of the product, *not* this identifier.
   * @return offerId
   */
  @javax.annotation.Nullable
  public String getOfferId() {
    return offerId;
  }

  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }


  public Product pattern(String pattern) {
    this.pattern = pattern;
    return this;
  }

  /**
   * The item&#39;s pattern (for example, polka dots).
   * @return pattern
   */
  @javax.annotation.Nullable
  public String getPattern() {
    return pattern;
  }

  public void setPattern(String pattern) {
    this.pattern = pattern;
  }


  public Product pause(String pause) {
    this.pause = pause;
    return this;
  }

  /**
   * Publication of this item should be temporarily paused. Acceptable values are: - \&quot;&#x60;ads&#x60;\&quot; 
   * @return pause
   */
  @javax.annotation.Nullable
  public String getPause() {
    return pause;
  }

  public void setPause(String pause) {
    this.pause = pause;
  }


  public Product pickupMethod(String pickupMethod) {
    this.pickupMethod = pickupMethod;
    return this;
  }

  /**
   * The pick up option for the item. Acceptable values are: - \&quot;&#x60;buy&#x60;\&quot; - \&quot;&#x60;reserve&#x60;\&quot; - \&quot;&#x60;ship to store&#x60;\&quot; - \&quot;&#x60;not supported&#x60;\&quot; 
   * @return pickupMethod
   */
  @javax.annotation.Nullable
  public String getPickupMethod() {
    return pickupMethod;
  }

  public void setPickupMethod(String pickupMethod) {
    this.pickupMethod = pickupMethod;
  }


  public Product pickupSla(String pickupSla) {
    this.pickupSla = pickupSla;
    return this;
  }

  /**
   * Item store pickup timeline. Acceptable values are: - \&quot;&#x60;same day&#x60;\&quot; - \&quot;&#x60;next day&#x60;\&quot; - \&quot;&#x60;2-day&#x60;\&quot; - \&quot;&#x60;3-day&#x60;\&quot; - \&quot;&#x60;4-day&#x60;\&quot; - \&quot;&#x60;5-day&#x60;\&quot; - \&quot;&#x60;6-day&#x60;\&quot; - \&quot;&#x60;7-day&#x60;\&quot; - \&quot;&#x60;multi-week&#x60;\&quot; 
   * @return pickupSla
   */
  @javax.annotation.Nullable
  public String getPickupSla() {
    return pickupSla;
  }

  public void setPickupSla(String pickupSla) {
    this.pickupSla = pickupSla;
  }


  public Product price(Price price) {
    this.price = price;
    return this;
  }

  /**
   * Get price
   * @return price
   */
  @javax.annotation.Nullable
  public Price getPrice() {
    return price;
  }

  public void setPrice(Price price) {
    this.price = price;
  }


  public Product productDetails(List<ProductProductDetail> productDetails) {
    this.productDetails = productDetails;
    return this;
  }

  public Product addProductDetailsItem(ProductProductDetail productDetailsItem) {
    if (this.productDetails == null) {
      this.productDetails = new ArrayList<>();
    }
    this.productDetails.add(productDetailsItem);
    return this;
  }

  /**
   * Technical specification or additional product details.
   * @return productDetails
   */
  @javax.annotation.Nullable
  public List<ProductProductDetail> getProductDetails() {
    return productDetails;
  }

  public void setProductDetails(List<ProductProductDetail> productDetails) {
    this.productDetails = productDetails;
  }


  public Product productHeight(ProductDimension productHeight) {
    this.productHeight = productHeight;
    return this;
  }

  /**
   * Get productHeight
   * @return productHeight
   */
  @javax.annotation.Nullable
  public ProductDimension getProductHeight() {
    return productHeight;
  }

  public void setProductHeight(ProductDimension productHeight) {
    this.productHeight = productHeight;
  }


  public Product productHighlights(List<String> productHighlights) {
    this.productHighlights = productHighlights;
    return this;
  }

  public Product addProductHighlightsItem(String productHighlightsItem) {
    if (this.productHighlights == null) {
      this.productHighlights = new ArrayList<>();
    }
    this.productHighlights.add(productHighlightsItem);
    return this;
  }

  /**
   * Bullet points describing the most relevant highlights of a product.
   * @return productHighlights
   */
  @javax.annotation.Nullable
  public List<String> getProductHighlights() {
    return productHighlights;
  }

  public void setProductHighlights(List<String> productHighlights) {
    this.productHighlights = productHighlights;
  }


  public Product productLength(ProductDimension productLength) {
    this.productLength = productLength;
    return this;
  }

  /**
   * Get productLength
   * @return productLength
   */
  @javax.annotation.Nullable
  public ProductDimension getProductLength() {
    return productLength;
  }

  public void setProductLength(ProductDimension productLength) {
    this.productLength = productLength;
  }


  public Product productTypes(List<String> productTypes) {
    this.productTypes = productTypes;
    return this;
  }

  public Product addProductTypesItem(String productTypesItem) {
    if (this.productTypes == null) {
      this.productTypes = new ArrayList<>();
    }
    this.productTypes.add(productTypesItem);
    return this;
  }

  /**
   * Categories of the item (formatted as in product data specification).
   * @return productTypes
   */
  @javax.annotation.Nullable
  public List<String> getProductTypes() {
    return productTypes;
  }

  public void setProductTypes(List<String> productTypes) {
    this.productTypes = productTypes;
  }


  public Product productWeight(ProductWeight productWeight) {
    this.productWeight = productWeight;
    return this;
  }

  /**
   * Get productWeight
   * @return productWeight
   */
  @javax.annotation.Nullable
  public ProductWeight getProductWeight() {
    return productWeight;
  }

  public void setProductWeight(ProductWeight productWeight) {
    this.productWeight = productWeight;
  }


  public Product productWidth(ProductDimension productWidth) {
    this.productWidth = productWidth;
    return this;
  }

  /**
   * Get productWidth
   * @return productWidth
   */
  @javax.annotation.Nullable
  public ProductDimension getProductWidth() {
    return productWidth;
  }

  public void setProductWidth(ProductDimension productWidth) {
    this.productWidth = productWidth;
  }


  public Product promotionIds(List<String> promotionIds) {
    this.promotionIds = promotionIds;
    return this;
  }

  public Product addPromotionIdsItem(String promotionIdsItem) {
    if (this.promotionIds == null) {
      this.promotionIds = new ArrayList<>();
    }
    this.promotionIds.add(promotionIdsItem);
    return this;
  }

  /**
   * The unique ID of a promotion.
   * @return promotionIds
   */
  @javax.annotation.Nullable
  public List<String> getPromotionIds() {
    return promotionIds;
  }

  public void setPromotionIds(List<String> promotionIds) {
    this.promotionIds = promotionIds;
  }


  public Product salePrice(Price salePrice) {
    this.salePrice = salePrice;
    return this;
  }

  /**
   * Get salePrice
   * @return salePrice
   */
  @javax.annotation.Nullable
  public Price getSalePrice() {
    return salePrice;
  }

  public void setSalePrice(Price salePrice) {
    this.salePrice = salePrice;
  }


  public Product salePriceEffectiveDate(String salePriceEffectiveDate) {
    this.salePriceEffectiveDate = salePriceEffectiveDate;
    return this;
  }

  /**
   * Date range during which the item is on sale (see product data specification ).
   * @return salePriceEffectiveDate
   */
  @javax.annotation.Nullable
  public String getSalePriceEffectiveDate() {
    return salePriceEffectiveDate;
  }

  public void setSalePriceEffectiveDate(String salePriceEffectiveDate) {
    this.salePriceEffectiveDate = salePriceEffectiveDate;
  }


  public Product sellOnGoogleQuantity(String sellOnGoogleQuantity) {
    this.sellOnGoogleQuantity = sellOnGoogleQuantity;
    return this;
  }

  /**
   * The quantity of the product that is available for selling on Google. Supported only for online products.
   * @return sellOnGoogleQuantity
   */
  @javax.annotation.Nullable
  public String getSellOnGoogleQuantity() {
    return sellOnGoogleQuantity;
  }

  public void setSellOnGoogleQuantity(String sellOnGoogleQuantity) {
    this.sellOnGoogleQuantity = sellOnGoogleQuantity;
  }


  public Product shipping(List<ProductShipping> shipping) {
    this.shipping = shipping;
    return this;
  }

  public Product addShippingItem(ProductShipping shippingItem) {
    if (this.shipping == null) {
      this.shipping = new ArrayList<>();
    }
    this.shipping.add(shippingItem);
    return this;
  }

  /**
   * Shipping rules.
   * @return shipping
   */
  @javax.annotation.Nullable
  public List<ProductShipping> getShipping() {
    return shipping;
  }

  public void setShipping(List<ProductShipping> shipping) {
    this.shipping = shipping;
  }


  public Product shippingHeight(ProductShippingDimension shippingHeight) {
    this.shippingHeight = shippingHeight;
    return this;
  }

  /**
   * Get shippingHeight
   * @return shippingHeight
   */
  @javax.annotation.Nullable
  public ProductShippingDimension getShippingHeight() {
    return shippingHeight;
  }

  public void setShippingHeight(ProductShippingDimension shippingHeight) {
    this.shippingHeight = shippingHeight;
  }


  public Product shippingLabel(String shippingLabel) {
    this.shippingLabel = shippingLabel;
    return this;
  }

  /**
   * The shipping label of the product, used to group product in account-level shipping rules.
   * @return shippingLabel
   */
  @javax.annotation.Nullable
  public String getShippingLabel() {
    return shippingLabel;
  }

  public void setShippingLabel(String shippingLabel) {
    this.shippingLabel = shippingLabel;
  }


  public Product shippingLength(ProductShippingDimension shippingLength) {
    this.shippingLength = shippingLength;
    return this;
  }

  /**
   * Get shippingLength
   * @return shippingLength
   */
  @javax.annotation.Nullable
  public ProductShippingDimension getShippingLength() {
    return shippingLength;
  }

  public void setShippingLength(ProductShippingDimension shippingLength) {
    this.shippingLength = shippingLength;
  }


  public Product shippingWeight(ProductShippingWeight shippingWeight) {
    this.shippingWeight = shippingWeight;
    return this;
  }

  /**
   * Get shippingWeight
   * @return shippingWeight
   */
  @javax.annotation.Nullable
  public ProductShippingWeight getShippingWeight() {
    return shippingWeight;
  }

  public void setShippingWeight(ProductShippingWeight shippingWeight) {
    this.shippingWeight = shippingWeight;
  }


  public Product shippingWidth(ProductShippingDimension shippingWidth) {
    this.shippingWidth = shippingWidth;
    return this;
  }

  /**
   * Get shippingWidth
   * @return shippingWidth
   */
  @javax.annotation.Nullable
  public ProductShippingDimension getShippingWidth() {
    return shippingWidth;
  }

  public void setShippingWidth(ProductShippingDimension shippingWidth) {
    this.shippingWidth = shippingWidth;
  }


  public Product shoppingAdsExcludedCountries(List<String> shoppingAdsExcludedCountries) {
    this.shoppingAdsExcludedCountries = shoppingAdsExcludedCountries;
    return this;
  }

  public Product addShoppingAdsExcludedCountriesItem(String shoppingAdsExcludedCountriesItem) {
    if (this.shoppingAdsExcludedCountries == null) {
      this.shoppingAdsExcludedCountries = new ArrayList<>();
    }
    this.shoppingAdsExcludedCountries.add(shoppingAdsExcludedCountriesItem);
    return this;
  }

  /**
   * List of country codes (ISO 3166-1 alpha-2) to exclude the offer from Shopping Ads destination. Countries from this list are removed from countries configured in MC feed settings.
   * @return shoppingAdsExcludedCountries
   */
  @javax.annotation.Nullable
  public List<String> getShoppingAdsExcludedCountries() {
    return shoppingAdsExcludedCountries;
  }

  public void setShoppingAdsExcludedCountries(List<String> shoppingAdsExcludedCountries) {
    this.shoppingAdsExcludedCountries = shoppingAdsExcludedCountries;
  }


  public Product sizeSystem(String sizeSystem) {
    this.sizeSystem = sizeSystem;
    return this;
  }

  /**
   * System in which the size is specified. Recommended for apparel items.
   * @return sizeSystem
   */
  @javax.annotation.Nullable
  public String getSizeSystem() {
    return sizeSystem;
  }

  public void setSizeSystem(String sizeSystem) {
    this.sizeSystem = sizeSystem;
  }


  public Product sizeType(String sizeType) {
    this.sizeType = sizeType;
    return this;
  }

  /**
   * The cut of the item. Recommended for apparel items.
   * @return sizeType
   */
  @javax.annotation.Nullable
  public String getSizeType() {
    return sizeType;
  }

  public void setSizeType(String sizeType) {
    this.sizeType = sizeType;
  }


  public Product sizes(List<String> sizes) {
    this.sizes = sizes;
    return this;
  }

  public Product addSizesItem(String sizesItem) {
    if (this.sizes == null) {
      this.sizes = new ArrayList<>();
    }
    this.sizes.add(sizesItem);
    return this;
  }

  /**
   * Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same &#x60;itemGroupId&#x60; value (see size definition).
   * @return sizes
   */
  @javax.annotation.Nullable
  public List<String> getSizes() {
    return sizes;
  }

  public void setSizes(List<String> sizes) {
    this.sizes = sizes;
  }


  public Product source(String source) {
    this.source = source;
    return this;
  }

  /**
   * The source of the offer, that is, how the offer was created. Acceptable values are: - \&quot;&#x60;api&#x60;\&quot; - \&quot;&#x60;crawl&#x60;\&quot; - \&quot;&#x60;feed&#x60;\&quot; 
   * @return source
   */
  @javax.annotation.Nullable
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }


  public Product subscriptionCost(ProductSubscriptionCost subscriptionCost) {
    this.subscriptionCost = subscriptionCost;
    return this;
  }

  /**
   * Get subscriptionCost
   * @return subscriptionCost
   */
  @javax.annotation.Nullable
  public ProductSubscriptionCost getSubscriptionCost() {
    return subscriptionCost;
  }

  public void setSubscriptionCost(ProductSubscriptionCost subscriptionCost) {
    this.subscriptionCost = subscriptionCost;
  }


  public Product targetCountry(String targetCountry) {
    this.targetCountry = targetCountry;
    return this;
  }

  /**
   * Required. The CLDR territory code for the item&#39;s country of sale.
   * @return targetCountry
   */
  @javax.annotation.Nullable
  public String getTargetCountry() {
    return targetCountry;
  }

  public void setTargetCountry(String targetCountry) {
    this.targetCountry = targetCountry;
  }


  public Product taxCategory(String taxCategory) {
    this.taxCategory = taxCategory;
    return this;
  }

  /**
   * The tax category of the product, used to configure detailed tax nexus in account-level tax settings.
   * @return taxCategory
   */
  @javax.annotation.Nullable
  public String getTaxCategory() {
    return taxCategory;
  }

  public void setTaxCategory(String taxCategory) {
    this.taxCategory = taxCategory;
  }


  public Product taxes(List<ProductTax> taxes) {
    this.taxes = taxes;
    return this;
  }

  public Product addTaxesItem(ProductTax taxesItem) {
    if (this.taxes == null) {
      this.taxes = new ArrayList<>();
    }
    this.taxes.add(taxesItem);
    return this;
  }

  /**
   * Tax information.
   * @return taxes
   */
  @javax.annotation.Nullable
  public List<ProductTax> getTaxes() {
    return taxes;
  }

  public void setTaxes(List<ProductTax> taxes) {
    this.taxes = taxes;
  }


  public Product title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Title of the item.
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public Product transitTimeLabel(String transitTimeLabel) {
    this.transitTimeLabel = transitTimeLabel;
    return this;
  }

  /**
   * The transit time label of the product, used to group product in account-level transit time tables.
   * @return transitTimeLabel
   */
  @javax.annotation.Nullable
  public String getTransitTimeLabel() {
    return transitTimeLabel;
  }

  public void setTransitTimeLabel(String transitTimeLabel) {
    this.transitTimeLabel = transitTimeLabel;
  }


  public Product unitPricingBaseMeasure(ProductUnitPricingBaseMeasure unitPricingBaseMeasure) {
    this.unitPricingBaseMeasure = unitPricingBaseMeasure;
    return this;
  }

  /**
   * Get unitPricingBaseMeasure
   * @return unitPricingBaseMeasure
   */
  @javax.annotation.Nullable
  public ProductUnitPricingBaseMeasure getUnitPricingBaseMeasure() {
    return unitPricingBaseMeasure;
  }

  public void setUnitPricingBaseMeasure(ProductUnitPricingBaseMeasure unitPricingBaseMeasure) {
    this.unitPricingBaseMeasure = unitPricingBaseMeasure;
  }


  public Product unitPricingMeasure(ProductUnitPricingMeasure unitPricingMeasure) {
    this.unitPricingMeasure = unitPricingMeasure;
    return this;
  }

  /**
   * Get unitPricingMeasure
   * @return unitPricingMeasure
   */
  @javax.annotation.Nullable
  public ProductUnitPricingMeasure getUnitPricingMeasure() {
    return unitPricingMeasure;
  }

  public void setUnitPricingMeasure(ProductUnitPricingMeasure unitPricingMeasure) {
    this.unitPricingMeasure = unitPricingMeasure;
  }


  public Product virtualModelLink(String virtualModelLink) {
    this.virtualModelLink = virtualModelLink;
    return this;
  }

  /**
   * URL of the 3D model of the item to provide more visuals.
   * @return virtualModelLink
   */
  @javax.annotation.Nullable
  public String getVirtualModelLink() {
    return virtualModelLink;
  }

  public void setVirtualModelLink(String virtualModelLink) {
    this.virtualModelLink = virtualModelLink;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.additionalImageLinks, product.additionalImageLinks) &&
        Objects.equals(this.additionalSizeType, product.additionalSizeType) &&
        Objects.equals(this.adsGrouping, product.adsGrouping) &&
        Objects.equals(this.adsLabels, product.adsLabels) &&
        Objects.equals(this.adsRedirect, product.adsRedirect) &&
        Objects.equals(this.adult, product.adult) &&
        Objects.equals(this.ageGroup, product.ageGroup) &&
        Objects.equals(this.availability, product.availability) &&
        Objects.equals(this.availabilityDate, product.availabilityDate) &&
        Objects.equals(this.brand, product.brand) &&
        Objects.equals(this.canonicalLink, product.canonicalLink) &&
        Objects.equals(this.certifications, product.certifications) &&
        Objects.equals(this.channel, product.channel) &&
        Objects.equals(this.cloudExportAdditionalProperties, product.cloudExportAdditionalProperties) &&
        Objects.equals(this.color, product.color) &&
        Objects.equals(this.condition, product.condition) &&
        Objects.equals(this.contentLanguage, product.contentLanguage) &&
        Objects.equals(this.costOfGoodsSold, product.costOfGoodsSold) &&
        Objects.equals(this.customAttributes, product.customAttributes) &&
        Objects.equals(this.customLabel0, product.customLabel0) &&
        Objects.equals(this.customLabel1, product.customLabel1) &&
        Objects.equals(this.customLabel2, product.customLabel2) &&
        Objects.equals(this.customLabel3, product.customLabel3) &&
        Objects.equals(this.customLabel4, product.customLabel4) &&
        Objects.equals(this.description, product.description) &&
        Objects.equals(this.disclosureDate, product.disclosureDate) &&
        Objects.equals(this.displayAdsId, product.displayAdsId) &&
        Objects.equals(this.displayAdsLink, product.displayAdsLink) &&
        Objects.equals(this.displayAdsSimilarIds, product.displayAdsSimilarIds) &&
        Objects.equals(this.displayAdsTitle, product.displayAdsTitle) &&
        Objects.equals(this.displayAdsValue, product.displayAdsValue) &&
        Objects.equals(this.energyEfficiencyClass, product.energyEfficiencyClass) &&
        Objects.equals(this.excludedDestinations, product.excludedDestinations) &&
        Objects.equals(this.expirationDate, product.expirationDate) &&
        Objects.equals(this.externalSellerId, product.externalSellerId) &&
        Objects.equals(this.feedLabel, product.feedLabel) &&
        Objects.equals(this.gender, product.gender) &&
        Objects.equals(this.googleProductCategory, product.googleProductCategory) &&
        Objects.equals(this.gtin, product.gtin) &&
        Objects.equals(this.id, product.id) &&
        Objects.equals(this.identifierExists, product.identifierExists) &&
        Objects.equals(this.imageLink, product.imageLink) &&
        Objects.equals(this.includedDestinations, product.includedDestinations) &&
        Objects.equals(this.installment, product.installment) &&
        Objects.equals(this.isBundle, product.isBundle) &&
        Objects.equals(this.itemGroupId, product.itemGroupId) &&
        Objects.equals(this.kind, product.kind) &&
        Objects.equals(this.lifestyleImageLinks, product.lifestyleImageLinks) &&
        Objects.equals(this.link, product.link) &&
        Objects.equals(this.linkTemplate, product.linkTemplate) &&
        Objects.equals(this.loyaltyPoints, product.loyaltyPoints) &&
        Objects.equals(this.material, product.material) &&
        Objects.equals(this.maxEnergyEfficiencyClass, product.maxEnergyEfficiencyClass) &&
        Objects.equals(this.maxHandlingTime, product.maxHandlingTime) &&
        Objects.equals(this.minEnergyEfficiencyClass, product.minEnergyEfficiencyClass) &&
        Objects.equals(this.minHandlingTime, product.minHandlingTime) &&
        Objects.equals(this.mobileLink, product.mobileLink) &&
        Objects.equals(this.mobileLinkTemplate, product.mobileLinkTemplate) &&
        Objects.equals(this.mpn, product.mpn) &&
        Objects.equals(this.multipack, product.multipack) &&
        Objects.equals(this.offerId, product.offerId) &&
        Objects.equals(this.pattern, product.pattern) &&
        Objects.equals(this.pause, product.pause) &&
        Objects.equals(this.pickupMethod, product.pickupMethod) &&
        Objects.equals(this.pickupSla, product.pickupSla) &&
        Objects.equals(this.price, product.price) &&
        Objects.equals(this.productDetails, product.productDetails) &&
        Objects.equals(this.productHeight, product.productHeight) &&
        Objects.equals(this.productHighlights, product.productHighlights) &&
        Objects.equals(this.productLength, product.productLength) &&
        Objects.equals(this.productTypes, product.productTypes) &&
        Objects.equals(this.productWeight, product.productWeight) &&
        Objects.equals(this.productWidth, product.productWidth) &&
        Objects.equals(this.promotionIds, product.promotionIds) &&
        Objects.equals(this.salePrice, product.salePrice) &&
        Objects.equals(this.salePriceEffectiveDate, product.salePriceEffectiveDate) &&
        Objects.equals(this.sellOnGoogleQuantity, product.sellOnGoogleQuantity) &&
        Objects.equals(this.shipping, product.shipping) &&
        Objects.equals(this.shippingHeight, product.shippingHeight) &&
        Objects.equals(this.shippingLabel, product.shippingLabel) &&
        Objects.equals(this.shippingLength, product.shippingLength) &&
        Objects.equals(this.shippingWeight, product.shippingWeight) &&
        Objects.equals(this.shippingWidth, product.shippingWidth) &&
        Objects.equals(this.shoppingAdsExcludedCountries, product.shoppingAdsExcludedCountries) &&
        Objects.equals(this.sizeSystem, product.sizeSystem) &&
        Objects.equals(this.sizeType, product.sizeType) &&
        Objects.equals(this.sizes, product.sizes) &&
        Objects.equals(this.source, product.source) &&
        Objects.equals(this.subscriptionCost, product.subscriptionCost) &&
        Objects.equals(this.targetCountry, product.targetCountry) &&
        Objects.equals(this.taxCategory, product.taxCategory) &&
        Objects.equals(this.taxes, product.taxes) &&
        Objects.equals(this.title, product.title) &&
        Objects.equals(this.transitTimeLabel, product.transitTimeLabel) &&
        Objects.equals(this.unitPricingBaseMeasure, product.unitPricingBaseMeasure) &&
        Objects.equals(this.unitPricingMeasure, product.unitPricingMeasure) &&
        Objects.equals(this.virtualModelLink, product.virtualModelLink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalImageLinks, additionalSizeType, adsGrouping, adsLabels, adsRedirect, adult, ageGroup, availability, availabilityDate, brand, canonicalLink, certifications, channel, cloudExportAdditionalProperties, color, condition, contentLanguage, costOfGoodsSold, customAttributes, customLabel0, customLabel1, customLabel2, customLabel3, customLabel4, description, disclosureDate, displayAdsId, displayAdsLink, displayAdsSimilarIds, displayAdsTitle, displayAdsValue, energyEfficiencyClass, excludedDestinations, expirationDate, externalSellerId, feedLabel, gender, googleProductCategory, gtin, id, identifierExists, imageLink, includedDestinations, installment, isBundle, itemGroupId, kind, lifestyleImageLinks, link, linkTemplate, loyaltyPoints, material, maxEnergyEfficiencyClass, maxHandlingTime, minEnergyEfficiencyClass, minHandlingTime, mobileLink, mobileLinkTemplate, mpn, multipack, offerId, pattern, pause, pickupMethod, pickupSla, price, productDetails, productHeight, productHighlights, productLength, productTypes, productWeight, productWidth, promotionIds, salePrice, salePriceEffectiveDate, sellOnGoogleQuantity, shipping, shippingHeight, shippingLabel, shippingLength, shippingWeight, shippingWidth, shoppingAdsExcludedCountries, sizeSystem, sizeType, sizes, source, subscriptionCost, targetCountry, taxCategory, taxes, title, transitTimeLabel, unitPricingBaseMeasure, unitPricingMeasure, virtualModelLink);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    sb.append("    additionalImageLinks: ").append(toIndentedString(additionalImageLinks)).append("\n");
    sb.append("    additionalSizeType: ").append(toIndentedString(additionalSizeType)).append("\n");
    sb.append("    adsGrouping: ").append(toIndentedString(adsGrouping)).append("\n");
    sb.append("    adsLabels: ").append(toIndentedString(adsLabels)).append("\n");
    sb.append("    adsRedirect: ").append(toIndentedString(adsRedirect)).append("\n");
    sb.append("    adult: ").append(toIndentedString(adult)).append("\n");
    sb.append("    ageGroup: ").append(toIndentedString(ageGroup)).append("\n");
    sb.append("    availability: ").append(toIndentedString(availability)).append("\n");
    sb.append("    availabilityDate: ").append(toIndentedString(availabilityDate)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    canonicalLink: ").append(toIndentedString(canonicalLink)).append("\n");
    sb.append("    certifications: ").append(toIndentedString(certifications)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    cloudExportAdditionalProperties: ").append(toIndentedString(cloudExportAdditionalProperties)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    contentLanguage: ").append(toIndentedString(contentLanguage)).append("\n");
    sb.append("    costOfGoodsSold: ").append(toIndentedString(costOfGoodsSold)).append("\n");
    sb.append("    customAttributes: ").append(toIndentedString(customAttributes)).append("\n");
    sb.append("    customLabel0: ").append(toIndentedString(customLabel0)).append("\n");
    sb.append("    customLabel1: ").append(toIndentedString(customLabel1)).append("\n");
    sb.append("    customLabel2: ").append(toIndentedString(customLabel2)).append("\n");
    sb.append("    customLabel3: ").append(toIndentedString(customLabel3)).append("\n");
    sb.append("    customLabel4: ").append(toIndentedString(customLabel4)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disclosureDate: ").append(toIndentedString(disclosureDate)).append("\n");
    sb.append("    displayAdsId: ").append(toIndentedString(displayAdsId)).append("\n");
    sb.append("    displayAdsLink: ").append(toIndentedString(displayAdsLink)).append("\n");
    sb.append("    displayAdsSimilarIds: ").append(toIndentedString(displayAdsSimilarIds)).append("\n");
    sb.append("    displayAdsTitle: ").append(toIndentedString(displayAdsTitle)).append("\n");
    sb.append("    displayAdsValue: ").append(toIndentedString(displayAdsValue)).append("\n");
    sb.append("    energyEfficiencyClass: ").append(toIndentedString(energyEfficiencyClass)).append("\n");
    sb.append("    excludedDestinations: ").append(toIndentedString(excludedDestinations)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    externalSellerId: ").append(toIndentedString(externalSellerId)).append("\n");
    sb.append("    feedLabel: ").append(toIndentedString(feedLabel)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    googleProductCategory: ").append(toIndentedString(googleProductCategory)).append("\n");
    sb.append("    gtin: ").append(toIndentedString(gtin)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identifierExists: ").append(toIndentedString(identifierExists)).append("\n");
    sb.append("    imageLink: ").append(toIndentedString(imageLink)).append("\n");
    sb.append("    includedDestinations: ").append(toIndentedString(includedDestinations)).append("\n");
    sb.append("    installment: ").append(toIndentedString(installment)).append("\n");
    sb.append("    isBundle: ").append(toIndentedString(isBundle)).append("\n");
    sb.append("    itemGroupId: ").append(toIndentedString(itemGroupId)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    lifestyleImageLinks: ").append(toIndentedString(lifestyleImageLinks)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    linkTemplate: ").append(toIndentedString(linkTemplate)).append("\n");
    sb.append("    loyaltyPoints: ").append(toIndentedString(loyaltyPoints)).append("\n");
    sb.append("    material: ").append(toIndentedString(material)).append("\n");
    sb.append("    maxEnergyEfficiencyClass: ").append(toIndentedString(maxEnergyEfficiencyClass)).append("\n");
    sb.append("    maxHandlingTime: ").append(toIndentedString(maxHandlingTime)).append("\n");
    sb.append("    minEnergyEfficiencyClass: ").append(toIndentedString(minEnergyEfficiencyClass)).append("\n");
    sb.append("    minHandlingTime: ").append(toIndentedString(minHandlingTime)).append("\n");
    sb.append("    mobileLink: ").append(toIndentedString(mobileLink)).append("\n");
    sb.append("    mobileLinkTemplate: ").append(toIndentedString(mobileLinkTemplate)).append("\n");
    sb.append("    mpn: ").append(toIndentedString(mpn)).append("\n");
    sb.append("    multipack: ").append(toIndentedString(multipack)).append("\n");
    sb.append("    offerId: ").append(toIndentedString(offerId)).append("\n");
    sb.append("    pattern: ").append(toIndentedString(pattern)).append("\n");
    sb.append("    pause: ").append(toIndentedString(pause)).append("\n");
    sb.append("    pickupMethod: ").append(toIndentedString(pickupMethod)).append("\n");
    sb.append("    pickupSla: ").append(toIndentedString(pickupSla)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    productDetails: ").append(toIndentedString(productDetails)).append("\n");
    sb.append("    productHeight: ").append(toIndentedString(productHeight)).append("\n");
    sb.append("    productHighlights: ").append(toIndentedString(productHighlights)).append("\n");
    sb.append("    productLength: ").append(toIndentedString(productLength)).append("\n");
    sb.append("    productTypes: ").append(toIndentedString(productTypes)).append("\n");
    sb.append("    productWeight: ").append(toIndentedString(productWeight)).append("\n");
    sb.append("    productWidth: ").append(toIndentedString(productWidth)).append("\n");
    sb.append("    promotionIds: ").append(toIndentedString(promotionIds)).append("\n");
    sb.append("    salePrice: ").append(toIndentedString(salePrice)).append("\n");
    sb.append("    salePriceEffectiveDate: ").append(toIndentedString(salePriceEffectiveDate)).append("\n");
    sb.append("    sellOnGoogleQuantity: ").append(toIndentedString(sellOnGoogleQuantity)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    shippingHeight: ").append(toIndentedString(shippingHeight)).append("\n");
    sb.append("    shippingLabel: ").append(toIndentedString(shippingLabel)).append("\n");
    sb.append("    shippingLength: ").append(toIndentedString(shippingLength)).append("\n");
    sb.append("    shippingWeight: ").append(toIndentedString(shippingWeight)).append("\n");
    sb.append("    shippingWidth: ").append(toIndentedString(shippingWidth)).append("\n");
    sb.append("    shoppingAdsExcludedCountries: ").append(toIndentedString(shoppingAdsExcludedCountries)).append("\n");
    sb.append("    sizeSystem: ").append(toIndentedString(sizeSystem)).append("\n");
    sb.append("    sizeType: ").append(toIndentedString(sizeType)).append("\n");
    sb.append("    sizes: ").append(toIndentedString(sizes)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    subscriptionCost: ").append(toIndentedString(subscriptionCost)).append("\n");
    sb.append("    targetCountry: ").append(toIndentedString(targetCountry)).append("\n");
    sb.append("    taxCategory: ").append(toIndentedString(taxCategory)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    transitTimeLabel: ").append(toIndentedString(transitTimeLabel)).append("\n");
    sb.append("    unitPricingBaseMeasure: ").append(toIndentedString(unitPricingBaseMeasure)).append("\n");
    sb.append("    unitPricingMeasure: ").append(toIndentedString(unitPricingMeasure)).append("\n");
    sb.append("    virtualModelLink: ").append(toIndentedString(virtualModelLink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additionalImageLinks");
    openapiFields.add("additionalSizeType");
    openapiFields.add("adsGrouping");
    openapiFields.add("adsLabels");
    openapiFields.add("adsRedirect");
    openapiFields.add("adult");
    openapiFields.add("ageGroup");
    openapiFields.add("availability");
    openapiFields.add("availabilityDate");
    openapiFields.add("brand");
    openapiFields.add("canonicalLink");
    openapiFields.add("certifications");
    openapiFields.add("channel");
    openapiFields.add("cloudExportAdditionalProperties");
    openapiFields.add("color");
    openapiFields.add("condition");
    openapiFields.add("contentLanguage");
    openapiFields.add("costOfGoodsSold");
    openapiFields.add("customAttributes");
    openapiFields.add("customLabel0");
    openapiFields.add("customLabel1");
    openapiFields.add("customLabel2");
    openapiFields.add("customLabel3");
    openapiFields.add("customLabel4");
    openapiFields.add("description");
    openapiFields.add("disclosureDate");
    openapiFields.add("displayAdsId");
    openapiFields.add("displayAdsLink");
    openapiFields.add("displayAdsSimilarIds");
    openapiFields.add("displayAdsTitle");
    openapiFields.add("displayAdsValue");
    openapiFields.add("energyEfficiencyClass");
    openapiFields.add("excludedDestinations");
    openapiFields.add("expirationDate");
    openapiFields.add("externalSellerId");
    openapiFields.add("feedLabel");
    openapiFields.add("gender");
    openapiFields.add("googleProductCategory");
    openapiFields.add("gtin");
    openapiFields.add("id");
    openapiFields.add("identifierExists");
    openapiFields.add("imageLink");
    openapiFields.add("includedDestinations");
    openapiFields.add("installment");
    openapiFields.add("isBundle");
    openapiFields.add("itemGroupId");
    openapiFields.add("kind");
    openapiFields.add("lifestyleImageLinks");
    openapiFields.add("link");
    openapiFields.add("linkTemplate");
    openapiFields.add("loyaltyPoints");
    openapiFields.add("material");
    openapiFields.add("maxEnergyEfficiencyClass");
    openapiFields.add("maxHandlingTime");
    openapiFields.add("minEnergyEfficiencyClass");
    openapiFields.add("minHandlingTime");
    openapiFields.add("mobileLink");
    openapiFields.add("mobileLinkTemplate");
    openapiFields.add("mpn");
    openapiFields.add("multipack");
    openapiFields.add("offerId");
    openapiFields.add("pattern");
    openapiFields.add("pause");
    openapiFields.add("pickupMethod");
    openapiFields.add("pickupSla");
    openapiFields.add("price");
    openapiFields.add("productDetails");
    openapiFields.add("productHeight");
    openapiFields.add("productHighlights");
    openapiFields.add("productLength");
    openapiFields.add("productTypes");
    openapiFields.add("productWeight");
    openapiFields.add("productWidth");
    openapiFields.add("promotionIds");
    openapiFields.add("salePrice");
    openapiFields.add("salePriceEffectiveDate");
    openapiFields.add("sellOnGoogleQuantity");
    openapiFields.add("shipping");
    openapiFields.add("shippingHeight");
    openapiFields.add("shippingLabel");
    openapiFields.add("shippingLength");
    openapiFields.add("shippingWeight");
    openapiFields.add("shippingWidth");
    openapiFields.add("shoppingAdsExcludedCountries");
    openapiFields.add("sizeSystem");
    openapiFields.add("sizeType");
    openapiFields.add("sizes");
    openapiFields.add("source");
    openapiFields.add("subscriptionCost");
    openapiFields.add("targetCountry");
    openapiFields.add("taxCategory");
    openapiFields.add("taxes");
    openapiFields.add("title");
    openapiFields.add("transitTimeLabel");
    openapiFields.add("unitPricingBaseMeasure");
    openapiFields.add("unitPricingMeasure");
    openapiFields.add("virtualModelLink");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Product
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Product.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Product is not found in the empty JSON string", Product.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Product.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Product` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("additionalImageLinks") != null && !jsonObj.get("additionalImageLinks").isJsonNull() && !jsonObj.get("additionalImageLinks").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalImageLinks` to be an array in the JSON string but got `%s`", jsonObj.get("additionalImageLinks").toString()));
      }
      if ((jsonObj.get("additionalSizeType") != null && !jsonObj.get("additionalSizeType").isJsonNull()) && !jsonObj.get("additionalSizeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalSizeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additionalSizeType").toString()));
      }
      if ((jsonObj.get("adsGrouping") != null && !jsonObj.get("adsGrouping").isJsonNull()) && !jsonObj.get("adsGrouping").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adsGrouping` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adsGrouping").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("adsLabels") != null && !jsonObj.get("adsLabels").isJsonNull() && !jsonObj.get("adsLabels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `adsLabels` to be an array in the JSON string but got `%s`", jsonObj.get("adsLabels").toString()));
      }
      if ((jsonObj.get("adsRedirect") != null && !jsonObj.get("adsRedirect").isJsonNull()) && !jsonObj.get("adsRedirect").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adsRedirect` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adsRedirect").toString()));
      }
      if ((jsonObj.get("ageGroup") != null && !jsonObj.get("ageGroup").isJsonNull()) && !jsonObj.get("ageGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ageGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ageGroup").toString()));
      }
      if ((jsonObj.get("availability") != null && !jsonObj.get("availability").isJsonNull()) && !jsonObj.get("availability").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `availability` to be a primitive type in the JSON string but got `%s`", jsonObj.get("availability").toString()));
      }
      if ((jsonObj.get("availabilityDate") != null && !jsonObj.get("availabilityDate").isJsonNull()) && !jsonObj.get("availabilityDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `availabilityDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("availabilityDate").toString()));
      }
      if ((jsonObj.get("brand") != null && !jsonObj.get("brand").isJsonNull()) && !jsonObj.get("brand").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand").toString()));
      }
      if ((jsonObj.get("canonicalLink") != null && !jsonObj.get("canonicalLink").isJsonNull()) && !jsonObj.get("canonicalLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `canonicalLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("canonicalLink").toString()));
      }
      if (jsonObj.get("certifications") != null && !jsonObj.get("certifications").isJsonNull()) {
        JsonArray jsonArraycertifications = jsonObj.getAsJsonArray("certifications");
        if (jsonArraycertifications != null) {
          // ensure the json data is an array
          if (!jsonObj.get("certifications").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `certifications` to be an array in the JSON string but got `%s`", jsonObj.get("certifications").toString()));
          }

          // validate the optional field `certifications` (array)
          for (int i = 0; i < jsonArraycertifications.size(); i++) {
            ProductCertification.validateJsonElement(jsonArraycertifications.get(i));
          };
        }
      }
      if ((jsonObj.get("channel") != null && !jsonObj.get("channel").isJsonNull()) && !jsonObj.get("channel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channel").toString()));
      }
      if (jsonObj.get("cloudExportAdditionalProperties") != null && !jsonObj.get("cloudExportAdditionalProperties").isJsonNull()) {
        JsonArray jsonArraycloudExportAdditionalProperties = jsonObj.getAsJsonArray("cloudExportAdditionalProperties");
        if (jsonArraycloudExportAdditionalProperties != null) {
          // ensure the json data is an array
          if (!jsonObj.get("cloudExportAdditionalProperties").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `cloudExportAdditionalProperties` to be an array in the JSON string but got `%s`", jsonObj.get("cloudExportAdditionalProperties").toString()));
          }

          // validate the optional field `cloudExportAdditionalProperties` (array)
          for (int i = 0; i < jsonArraycloudExportAdditionalProperties.size(); i++) {
            CloudExportAdditionalProperties.validateJsonElement(jsonArraycloudExportAdditionalProperties.get(i));
          };
        }
      }
      if ((jsonObj.get("color") != null && !jsonObj.get("color").isJsonNull()) && !jsonObj.get("color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("color").toString()));
      }
      if ((jsonObj.get("condition") != null && !jsonObj.get("condition").isJsonNull()) && !jsonObj.get("condition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `condition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("condition").toString()));
      }
      if ((jsonObj.get("contentLanguage") != null && !jsonObj.get("contentLanguage").isJsonNull()) && !jsonObj.get("contentLanguage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contentLanguage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contentLanguage").toString()));
      }
      // validate the optional field `costOfGoodsSold`
      if (jsonObj.get("costOfGoodsSold") != null && !jsonObj.get("costOfGoodsSold").isJsonNull()) {
        Price.validateJsonElement(jsonObj.get("costOfGoodsSold"));
      }
      if (jsonObj.get("customAttributes") != null && !jsonObj.get("customAttributes").isJsonNull()) {
        JsonArray jsonArraycustomAttributes = jsonObj.getAsJsonArray("customAttributes");
        if (jsonArraycustomAttributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customAttributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customAttributes` to be an array in the JSON string but got `%s`", jsonObj.get("customAttributes").toString()));
          }

          // validate the optional field `customAttributes` (array)
          for (int i = 0; i < jsonArraycustomAttributes.size(); i++) {
            CustomAttribute.validateJsonElement(jsonArraycustomAttributes.get(i));
          };
        }
      }
      if ((jsonObj.get("customLabel0") != null && !jsonObj.get("customLabel0").isJsonNull()) && !jsonObj.get("customLabel0").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel0` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel0").toString()));
      }
      if ((jsonObj.get("customLabel1") != null && !jsonObj.get("customLabel1").isJsonNull()) && !jsonObj.get("customLabel1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel1").toString()));
      }
      if ((jsonObj.get("customLabel2") != null && !jsonObj.get("customLabel2").isJsonNull()) && !jsonObj.get("customLabel2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel2").toString()));
      }
      if ((jsonObj.get("customLabel3") != null && !jsonObj.get("customLabel3").isJsonNull()) && !jsonObj.get("customLabel3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel3").toString()));
      }
      if ((jsonObj.get("customLabel4") != null && !jsonObj.get("customLabel4").isJsonNull()) && !jsonObj.get("customLabel4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel4").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("disclosureDate") != null && !jsonObj.get("disclosureDate").isJsonNull()) && !jsonObj.get("disclosureDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disclosureDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disclosureDate").toString()));
      }
      if ((jsonObj.get("displayAdsId") != null && !jsonObj.get("displayAdsId").isJsonNull()) && !jsonObj.get("displayAdsId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayAdsId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayAdsId").toString()));
      }
      if ((jsonObj.get("displayAdsLink") != null && !jsonObj.get("displayAdsLink").isJsonNull()) && !jsonObj.get("displayAdsLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayAdsLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayAdsLink").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("displayAdsSimilarIds") != null && !jsonObj.get("displayAdsSimilarIds").isJsonNull() && !jsonObj.get("displayAdsSimilarIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayAdsSimilarIds` to be an array in the JSON string but got `%s`", jsonObj.get("displayAdsSimilarIds").toString()));
      }
      if ((jsonObj.get("displayAdsTitle") != null && !jsonObj.get("displayAdsTitle").isJsonNull()) && !jsonObj.get("displayAdsTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayAdsTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayAdsTitle").toString()));
      }
      if ((jsonObj.get("energyEfficiencyClass") != null && !jsonObj.get("energyEfficiencyClass").isJsonNull()) && !jsonObj.get("energyEfficiencyClass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `energyEfficiencyClass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("energyEfficiencyClass").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("excludedDestinations") != null && !jsonObj.get("excludedDestinations").isJsonNull() && !jsonObj.get("excludedDestinations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludedDestinations` to be an array in the JSON string but got `%s`", jsonObj.get("excludedDestinations").toString()));
      }
      if ((jsonObj.get("expirationDate") != null && !jsonObj.get("expirationDate").isJsonNull()) && !jsonObj.get("expirationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expirationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expirationDate").toString()));
      }
      if ((jsonObj.get("externalSellerId") != null && !jsonObj.get("externalSellerId").isJsonNull()) && !jsonObj.get("externalSellerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalSellerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalSellerId").toString()));
      }
      if ((jsonObj.get("feedLabel") != null && !jsonObj.get("feedLabel").isJsonNull()) && !jsonObj.get("feedLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feedLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feedLabel").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("googleProductCategory") != null && !jsonObj.get("googleProductCategory").isJsonNull()) && !jsonObj.get("googleProductCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `googleProductCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("googleProductCategory").toString()));
      }
      if ((jsonObj.get("gtin") != null && !jsonObj.get("gtin").isJsonNull()) && !jsonObj.get("gtin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gtin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gtin").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("imageLink") != null && !jsonObj.get("imageLink").isJsonNull()) && !jsonObj.get("imageLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageLink").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("includedDestinations") != null && !jsonObj.get("includedDestinations").isJsonNull() && !jsonObj.get("includedDestinations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `includedDestinations` to be an array in the JSON string but got `%s`", jsonObj.get("includedDestinations").toString()));
      }
      // validate the optional field `installment`
      if (jsonObj.get("installment") != null && !jsonObj.get("installment").isJsonNull()) {
        Installment.validateJsonElement(jsonObj.get("installment"));
      }
      if ((jsonObj.get("itemGroupId") != null && !jsonObj.get("itemGroupId").isJsonNull()) && !jsonObj.get("itemGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemGroupId").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("lifestyleImageLinks") != null && !jsonObj.get("lifestyleImageLinks").isJsonNull() && !jsonObj.get("lifestyleImageLinks").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `lifestyleImageLinks` to be an array in the JSON string but got `%s`", jsonObj.get("lifestyleImageLinks").toString()));
      }
      if ((jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) && !jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      if ((jsonObj.get("linkTemplate") != null && !jsonObj.get("linkTemplate").isJsonNull()) && !jsonObj.get("linkTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkTemplate").toString()));
      }
      // validate the optional field `loyaltyPoints`
      if (jsonObj.get("loyaltyPoints") != null && !jsonObj.get("loyaltyPoints").isJsonNull()) {
        LoyaltyPoints.validateJsonElement(jsonObj.get("loyaltyPoints"));
      }
      if ((jsonObj.get("material") != null && !jsonObj.get("material").isJsonNull()) && !jsonObj.get("material").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `material` to be a primitive type in the JSON string but got `%s`", jsonObj.get("material").toString()));
      }
      if ((jsonObj.get("maxEnergyEfficiencyClass") != null && !jsonObj.get("maxEnergyEfficiencyClass").isJsonNull()) && !jsonObj.get("maxEnergyEfficiencyClass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxEnergyEfficiencyClass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxEnergyEfficiencyClass").toString()));
      }
      if ((jsonObj.get("maxHandlingTime") != null && !jsonObj.get("maxHandlingTime").isJsonNull()) && !jsonObj.get("maxHandlingTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxHandlingTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxHandlingTime").toString()));
      }
      if ((jsonObj.get("minEnergyEfficiencyClass") != null && !jsonObj.get("minEnergyEfficiencyClass").isJsonNull()) && !jsonObj.get("minEnergyEfficiencyClass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `minEnergyEfficiencyClass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("minEnergyEfficiencyClass").toString()));
      }
      if ((jsonObj.get("minHandlingTime") != null && !jsonObj.get("minHandlingTime").isJsonNull()) && !jsonObj.get("minHandlingTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `minHandlingTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("minHandlingTime").toString()));
      }
      if ((jsonObj.get("mobileLink") != null && !jsonObj.get("mobileLink").isJsonNull()) && !jsonObj.get("mobileLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobileLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobileLink").toString()));
      }
      if ((jsonObj.get("mobileLinkTemplate") != null && !jsonObj.get("mobileLinkTemplate").isJsonNull()) && !jsonObj.get("mobileLinkTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobileLinkTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobileLinkTemplate").toString()));
      }
      if ((jsonObj.get("mpn") != null && !jsonObj.get("mpn").isJsonNull()) && !jsonObj.get("mpn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mpn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mpn").toString()));
      }
      if ((jsonObj.get("multipack") != null && !jsonObj.get("multipack").isJsonNull()) && !jsonObj.get("multipack").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `multipack` to be a primitive type in the JSON string but got `%s`", jsonObj.get("multipack").toString()));
      }
      if ((jsonObj.get("offerId") != null && !jsonObj.get("offerId").isJsonNull()) && !jsonObj.get("offerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offerId").toString()));
      }
      if ((jsonObj.get("pattern") != null && !jsonObj.get("pattern").isJsonNull()) && !jsonObj.get("pattern").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pattern` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pattern").toString()));
      }
      if ((jsonObj.get("pause") != null && !jsonObj.get("pause").isJsonNull()) && !jsonObj.get("pause").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pause` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pause").toString()));
      }
      if ((jsonObj.get("pickupMethod") != null && !jsonObj.get("pickupMethod").isJsonNull()) && !jsonObj.get("pickupMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pickupMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pickupMethod").toString()));
      }
      if ((jsonObj.get("pickupSla") != null && !jsonObj.get("pickupSla").isJsonNull()) && !jsonObj.get("pickupSla").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pickupSla` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pickupSla").toString()));
      }
      // validate the optional field `price`
      if (jsonObj.get("price") != null && !jsonObj.get("price").isJsonNull()) {
        Price.validateJsonElement(jsonObj.get("price"));
      }
      if (jsonObj.get("productDetails") != null && !jsonObj.get("productDetails").isJsonNull()) {
        JsonArray jsonArrayproductDetails = jsonObj.getAsJsonArray("productDetails");
        if (jsonArrayproductDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("productDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `productDetails` to be an array in the JSON string but got `%s`", jsonObj.get("productDetails").toString()));
          }

          // validate the optional field `productDetails` (array)
          for (int i = 0; i < jsonArrayproductDetails.size(); i++) {
            ProductProductDetail.validateJsonElement(jsonArrayproductDetails.get(i));
          };
        }
      }
      // validate the optional field `productHeight`
      if (jsonObj.get("productHeight") != null && !jsonObj.get("productHeight").isJsonNull()) {
        ProductDimension.validateJsonElement(jsonObj.get("productHeight"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("productHighlights") != null && !jsonObj.get("productHighlights").isJsonNull() && !jsonObj.get("productHighlights").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `productHighlights` to be an array in the JSON string but got `%s`", jsonObj.get("productHighlights").toString()));
      }
      // validate the optional field `productLength`
      if (jsonObj.get("productLength") != null && !jsonObj.get("productLength").isJsonNull()) {
        ProductDimension.validateJsonElement(jsonObj.get("productLength"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("productTypes") != null && !jsonObj.get("productTypes").isJsonNull() && !jsonObj.get("productTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `productTypes` to be an array in the JSON string but got `%s`", jsonObj.get("productTypes").toString()));
      }
      // validate the optional field `productWeight`
      if (jsonObj.get("productWeight") != null && !jsonObj.get("productWeight").isJsonNull()) {
        ProductWeight.validateJsonElement(jsonObj.get("productWeight"));
      }
      // validate the optional field `productWidth`
      if (jsonObj.get("productWidth") != null && !jsonObj.get("productWidth").isJsonNull()) {
        ProductDimension.validateJsonElement(jsonObj.get("productWidth"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("promotionIds") != null && !jsonObj.get("promotionIds").isJsonNull() && !jsonObj.get("promotionIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `promotionIds` to be an array in the JSON string but got `%s`", jsonObj.get("promotionIds").toString()));
      }
      // validate the optional field `salePrice`
      if (jsonObj.get("salePrice") != null && !jsonObj.get("salePrice").isJsonNull()) {
        Price.validateJsonElement(jsonObj.get("salePrice"));
      }
      if ((jsonObj.get("salePriceEffectiveDate") != null && !jsonObj.get("salePriceEffectiveDate").isJsonNull()) && !jsonObj.get("salePriceEffectiveDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salePriceEffectiveDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salePriceEffectiveDate").toString()));
      }
      if ((jsonObj.get("sellOnGoogleQuantity") != null && !jsonObj.get("sellOnGoogleQuantity").isJsonNull()) && !jsonObj.get("sellOnGoogleQuantity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sellOnGoogleQuantity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sellOnGoogleQuantity").toString()));
      }
      if (jsonObj.get("shipping") != null && !jsonObj.get("shipping").isJsonNull()) {
        JsonArray jsonArrayshipping = jsonObj.getAsJsonArray("shipping");
        if (jsonArrayshipping != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shipping").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shipping` to be an array in the JSON string but got `%s`", jsonObj.get("shipping").toString()));
          }

          // validate the optional field `shipping` (array)
          for (int i = 0; i < jsonArrayshipping.size(); i++) {
            ProductShipping.validateJsonElement(jsonArrayshipping.get(i));
          };
        }
      }
      // validate the optional field `shippingHeight`
      if (jsonObj.get("shippingHeight") != null && !jsonObj.get("shippingHeight").isJsonNull()) {
        ProductShippingDimension.validateJsonElement(jsonObj.get("shippingHeight"));
      }
      if ((jsonObj.get("shippingLabel") != null && !jsonObj.get("shippingLabel").isJsonNull()) && !jsonObj.get("shippingLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingLabel").toString()));
      }
      // validate the optional field `shippingLength`
      if (jsonObj.get("shippingLength") != null && !jsonObj.get("shippingLength").isJsonNull()) {
        ProductShippingDimension.validateJsonElement(jsonObj.get("shippingLength"));
      }
      // validate the optional field `shippingWeight`
      if (jsonObj.get("shippingWeight") != null && !jsonObj.get("shippingWeight").isJsonNull()) {
        ProductShippingWeight.validateJsonElement(jsonObj.get("shippingWeight"));
      }
      // validate the optional field `shippingWidth`
      if (jsonObj.get("shippingWidth") != null && !jsonObj.get("shippingWidth").isJsonNull()) {
        ProductShippingDimension.validateJsonElement(jsonObj.get("shippingWidth"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("shoppingAdsExcludedCountries") != null && !jsonObj.get("shoppingAdsExcludedCountries").isJsonNull() && !jsonObj.get("shoppingAdsExcludedCountries").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `shoppingAdsExcludedCountries` to be an array in the JSON string but got `%s`", jsonObj.get("shoppingAdsExcludedCountries").toString()));
      }
      if ((jsonObj.get("sizeSystem") != null && !jsonObj.get("sizeSystem").isJsonNull()) && !jsonObj.get("sizeSystem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sizeSystem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sizeSystem").toString()));
      }
      if ((jsonObj.get("sizeType") != null && !jsonObj.get("sizeType").isJsonNull()) && !jsonObj.get("sizeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sizeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sizeType").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sizes") != null && !jsonObj.get("sizes").isJsonNull() && !jsonObj.get("sizes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sizes` to be an array in the JSON string but got `%s`", jsonObj.get("sizes").toString()));
      }
      if ((jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) && !jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
      // validate the optional field `subscriptionCost`
      if (jsonObj.get("subscriptionCost") != null && !jsonObj.get("subscriptionCost").isJsonNull()) {
        ProductSubscriptionCost.validateJsonElement(jsonObj.get("subscriptionCost"));
      }
      if ((jsonObj.get("targetCountry") != null && !jsonObj.get("targetCountry").isJsonNull()) && !jsonObj.get("targetCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetCountry").toString()));
      }
      if ((jsonObj.get("taxCategory") != null && !jsonObj.get("taxCategory").isJsonNull()) && !jsonObj.get("taxCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCategory").toString()));
      }
      if (jsonObj.get("taxes") != null && !jsonObj.get("taxes").isJsonNull()) {
        JsonArray jsonArraytaxes = jsonObj.getAsJsonArray("taxes");
        if (jsonArraytaxes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("taxes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `taxes` to be an array in the JSON string but got `%s`", jsonObj.get("taxes").toString()));
          }

          // validate the optional field `taxes` (array)
          for (int i = 0; i < jsonArraytaxes.size(); i++) {
            ProductTax.validateJsonElement(jsonArraytaxes.get(i));
          };
        }
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("transitTimeLabel") != null && !jsonObj.get("transitTimeLabel").isJsonNull()) && !jsonObj.get("transitTimeLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transitTimeLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transitTimeLabel").toString()));
      }
      // validate the optional field `unitPricingBaseMeasure`
      if (jsonObj.get("unitPricingBaseMeasure") != null && !jsonObj.get("unitPricingBaseMeasure").isJsonNull()) {
        ProductUnitPricingBaseMeasure.validateJsonElement(jsonObj.get("unitPricingBaseMeasure"));
      }
      // validate the optional field `unitPricingMeasure`
      if (jsonObj.get("unitPricingMeasure") != null && !jsonObj.get("unitPricingMeasure").isJsonNull()) {
        ProductUnitPricingMeasure.validateJsonElement(jsonObj.get("unitPricingMeasure"));
      }
      if ((jsonObj.get("virtualModelLink") != null && !jsonObj.get("virtualModelLink").isJsonNull()) && !jsonObj.get("virtualModelLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `virtualModelLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("virtualModelLink").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Product.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Product' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Product> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Product.class));

       return (TypeAdapter<T>) new TypeAdapter<Product>() {
           @Override
           public void write(JsonWriter out, Product value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Product read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Product given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Product
   * @throws IOException if the JSON string is invalid with respect to Product
   */
  public static Product fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Product.class);
  }

  /**
   * Convert an instance of Product to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

