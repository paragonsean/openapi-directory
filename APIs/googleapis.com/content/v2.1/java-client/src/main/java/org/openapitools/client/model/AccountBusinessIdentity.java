/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AccountIdentityType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The [business identity attributes](https://support.google.com/merchants/answer/10342414) can be used to self-declare attributes that let customers know more about your business.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:00.560037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccountBusinessIdentity {
  public static final String SERIALIZED_NAME_BLACK_OWNED = "blackOwned";
  @SerializedName(SERIALIZED_NAME_BLACK_OWNED)
  private AccountIdentityType blackOwned;

  public static final String SERIALIZED_NAME_INCLUDE_FOR_PROMOTIONS = "includeForPromotions";
  @SerializedName(SERIALIZED_NAME_INCLUDE_FOR_PROMOTIONS)
  private Boolean includeForPromotions;

  public static final String SERIALIZED_NAME_LATINO_OWNED = "latinoOwned";
  @SerializedName(SERIALIZED_NAME_LATINO_OWNED)
  private AccountIdentityType latinoOwned;

  public static final String SERIALIZED_NAME_SMALL_BUSINESS = "smallBusiness";
  @SerializedName(SERIALIZED_NAME_SMALL_BUSINESS)
  private AccountIdentityType smallBusiness;

  public static final String SERIALIZED_NAME_VETERAN_OWNED = "veteranOwned";
  @SerializedName(SERIALIZED_NAME_VETERAN_OWNED)
  private AccountIdentityType veteranOwned;

  public static final String SERIALIZED_NAME_WOMEN_OWNED = "womenOwned";
  @SerializedName(SERIALIZED_NAME_WOMEN_OWNED)
  private AccountIdentityType womenOwned;

  public AccountBusinessIdentity() {
  }

  public AccountBusinessIdentity blackOwned(AccountIdentityType blackOwned) {
    this.blackOwned = blackOwned;
    return this;
  }

  /**
   * Get blackOwned
   * @return blackOwned
   */
  @javax.annotation.Nullable
  public AccountIdentityType getBlackOwned() {
    return blackOwned;
  }

  public void setBlackOwned(AccountIdentityType blackOwned) {
    this.blackOwned = blackOwned;
  }


  public AccountBusinessIdentity includeForPromotions(Boolean includeForPromotions) {
    this.includeForPromotions = includeForPromotions;
    return this;
  }

  /**
   * Required. By setting this field, your business may be included in promotions for all the selected attributes. If you clear this option, it won&#39;t affect your identification with any of the attributes. For this field to be set, the merchant must self identify with at least one of the &#x60;AccountIdentityType&#x60;. If none are included, the request will be considered invalid.
   * @return includeForPromotions
   */
  @javax.annotation.Nullable
  public Boolean getIncludeForPromotions() {
    return includeForPromotions;
  }

  public void setIncludeForPromotions(Boolean includeForPromotions) {
    this.includeForPromotions = includeForPromotions;
  }


  public AccountBusinessIdentity latinoOwned(AccountIdentityType latinoOwned) {
    this.latinoOwned = latinoOwned;
    return this;
  }

  /**
   * Get latinoOwned
   * @return latinoOwned
   */
  @javax.annotation.Nullable
  public AccountIdentityType getLatinoOwned() {
    return latinoOwned;
  }

  public void setLatinoOwned(AccountIdentityType latinoOwned) {
    this.latinoOwned = latinoOwned;
  }


  public AccountBusinessIdentity smallBusiness(AccountIdentityType smallBusiness) {
    this.smallBusiness = smallBusiness;
    return this;
  }

  /**
   * Get smallBusiness
   * @return smallBusiness
   */
  @javax.annotation.Nullable
  public AccountIdentityType getSmallBusiness() {
    return smallBusiness;
  }

  public void setSmallBusiness(AccountIdentityType smallBusiness) {
    this.smallBusiness = smallBusiness;
  }


  public AccountBusinessIdentity veteranOwned(AccountIdentityType veteranOwned) {
    this.veteranOwned = veteranOwned;
    return this;
  }

  /**
   * Get veteranOwned
   * @return veteranOwned
   */
  @javax.annotation.Nullable
  public AccountIdentityType getVeteranOwned() {
    return veteranOwned;
  }

  public void setVeteranOwned(AccountIdentityType veteranOwned) {
    this.veteranOwned = veteranOwned;
  }


  public AccountBusinessIdentity womenOwned(AccountIdentityType womenOwned) {
    this.womenOwned = womenOwned;
    return this;
  }

  /**
   * Get womenOwned
   * @return womenOwned
   */
  @javax.annotation.Nullable
  public AccountIdentityType getWomenOwned() {
    return womenOwned;
  }

  public void setWomenOwned(AccountIdentityType womenOwned) {
    this.womenOwned = womenOwned;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountBusinessIdentity accountBusinessIdentity = (AccountBusinessIdentity) o;
    return Objects.equals(this.blackOwned, accountBusinessIdentity.blackOwned) &&
        Objects.equals(this.includeForPromotions, accountBusinessIdentity.includeForPromotions) &&
        Objects.equals(this.latinoOwned, accountBusinessIdentity.latinoOwned) &&
        Objects.equals(this.smallBusiness, accountBusinessIdentity.smallBusiness) &&
        Objects.equals(this.veteranOwned, accountBusinessIdentity.veteranOwned) &&
        Objects.equals(this.womenOwned, accountBusinessIdentity.womenOwned);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blackOwned, includeForPromotions, latinoOwned, smallBusiness, veteranOwned, womenOwned);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountBusinessIdentity {\n");
    sb.append("    blackOwned: ").append(toIndentedString(blackOwned)).append("\n");
    sb.append("    includeForPromotions: ").append(toIndentedString(includeForPromotions)).append("\n");
    sb.append("    latinoOwned: ").append(toIndentedString(latinoOwned)).append("\n");
    sb.append("    smallBusiness: ").append(toIndentedString(smallBusiness)).append("\n");
    sb.append("    veteranOwned: ").append(toIndentedString(veteranOwned)).append("\n");
    sb.append("    womenOwned: ").append(toIndentedString(womenOwned)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("blackOwned");
    openapiFields.add("includeForPromotions");
    openapiFields.add("latinoOwned");
    openapiFields.add("smallBusiness");
    openapiFields.add("veteranOwned");
    openapiFields.add("womenOwned");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountBusinessIdentity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountBusinessIdentity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountBusinessIdentity is not found in the empty JSON string", AccountBusinessIdentity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountBusinessIdentity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountBusinessIdentity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `blackOwned`
      if (jsonObj.get("blackOwned") != null && !jsonObj.get("blackOwned").isJsonNull()) {
        AccountIdentityType.validateJsonElement(jsonObj.get("blackOwned"));
      }
      // validate the optional field `latinoOwned`
      if (jsonObj.get("latinoOwned") != null && !jsonObj.get("latinoOwned").isJsonNull()) {
        AccountIdentityType.validateJsonElement(jsonObj.get("latinoOwned"));
      }
      // validate the optional field `smallBusiness`
      if (jsonObj.get("smallBusiness") != null && !jsonObj.get("smallBusiness").isJsonNull()) {
        AccountIdentityType.validateJsonElement(jsonObj.get("smallBusiness"));
      }
      // validate the optional field `veteranOwned`
      if (jsonObj.get("veteranOwned") != null && !jsonObj.get("veteranOwned").isJsonNull()) {
        AccountIdentityType.validateJsonElement(jsonObj.get("veteranOwned"));
      }
      // validate the optional field `womenOwned`
      if (jsonObj.get("womenOwned") != null && !jsonObj.get("womenOwned").isJsonNull()) {
        AccountIdentityType.validateJsonElement(jsonObj.get("womenOwned"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountBusinessIdentity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountBusinessIdentity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountBusinessIdentity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountBusinessIdentity.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountBusinessIdentity>() {
           @Override
           public void write(JsonWriter out, AccountBusinessIdentity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountBusinessIdentity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountBusinessIdentity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountBusinessIdentity
   * @throws IOException if the JSON string is invalid with respect to AccountBusinessIdentity
   */
  public static AccountBusinessIdentity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountBusinessIdentity.class);
  }

  /**
   * Convert an instance of AccountBusinessIdentity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

