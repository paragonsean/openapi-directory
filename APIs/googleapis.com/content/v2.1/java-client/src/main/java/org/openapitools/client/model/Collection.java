/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CollectionFeaturedProduct;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The collection message.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:00.560037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Collection {
  public static final String SERIALIZED_NAME_CUSTOM_LABEL0 = "customLabel0";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL0)
  private String customLabel0;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL1 = "customLabel1";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL1)
  private String customLabel1;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL2 = "customLabel2";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL2)
  private String customLabel2;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL3 = "customLabel3";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL3)
  private String customLabel3;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL4 = "customLabel4";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL4)
  private String customLabel4;

  public static final String SERIALIZED_NAME_FEATURED_PRODUCT = "featuredProduct";
  @SerializedName(SERIALIZED_NAME_FEATURED_PRODUCT)
  private List<CollectionFeaturedProduct> featuredProduct = new ArrayList<>();

  public static final String SERIALIZED_NAME_HEADLINE = "headline";
  @SerializedName(SERIALIZED_NAME_HEADLINE)
  private List<String> headline = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IMAGE_LINK = "imageLink";
  @SerializedName(SERIALIZED_NAME_IMAGE_LINK)
  private List<String> imageLink = new ArrayList<>();

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_MOBILE_LINK = "mobileLink";
  @SerializedName(SERIALIZED_NAME_MOBILE_LINK)
  private String mobileLink;

  public static final String SERIALIZED_NAME_PRODUCT_COUNTRY = "productCountry";
  @SerializedName(SERIALIZED_NAME_PRODUCT_COUNTRY)
  private String productCountry;

  public Collection() {
  }

  public Collection customLabel0(String customLabel0) {
    this.customLabel0 = customLabel0;
    return this;
  }

  /**
   * Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns. [Custom label](https://support.google.com/merchants/answer/9674217)
   * @return customLabel0
   */
  @javax.annotation.Nullable
  public String getCustomLabel0() {
    return customLabel0;
  }

  public void setCustomLabel0(String customLabel0) {
    this.customLabel0 = customLabel0;
  }


  public Collection customLabel1(String customLabel1) {
    this.customLabel1 = customLabel1;
    return this;
  }

  /**
   * Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
   * @return customLabel1
   */
  @javax.annotation.Nullable
  public String getCustomLabel1() {
    return customLabel1;
  }

  public void setCustomLabel1(String customLabel1) {
    this.customLabel1 = customLabel1;
  }


  public Collection customLabel2(String customLabel2) {
    this.customLabel2 = customLabel2;
    return this;
  }

  /**
   * Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
   * @return customLabel2
   */
  @javax.annotation.Nullable
  public String getCustomLabel2() {
    return customLabel2;
  }

  public void setCustomLabel2(String customLabel2) {
    this.customLabel2 = customLabel2;
  }


  public Collection customLabel3(String customLabel3) {
    this.customLabel3 = customLabel3;
    return this;
  }

  /**
   * Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
   * @return customLabel3
   */
  @javax.annotation.Nullable
  public String getCustomLabel3() {
    return customLabel3;
  }

  public void setCustomLabel3(String customLabel3) {
    this.customLabel3 = customLabel3;
  }


  public Collection customLabel4(String customLabel4) {
    this.customLabel4 = customLabel4;
    return this;
  }

  /**
   * Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
   * @return customLabel4
   */
  @javax.annotation.Nullable
  public String getCustomLabel4() {
    return customLabel4;
  }

  public void setCustomLabel4(String customLabel4) {
    this.customLabel4 = customLabel4;
  }


  public Collection featuredProduct(List<CollectionFeaturedProduct> featuredProduct) {
    this.featuredProduct = featuredProduct;
    return this;
  }

  public Collection addFeaturedProductItem(CollectionFeaturedProduct featuredProductItem) {
    if (this.featuredProduct == null) {
      this.featuredProduct = new ArrayList<>();
    }
    this.featuredProduct.add(featuredProductItem);
    return this;
  }

  /**
   * This identifies one or more products associated with the collection. Used as a lookup to the corresponding product ID in your product feeds. Provide a maximum of 100 featuredProduct (for collections). Provide up to 10 featuredProduct (for Shoppable Images only) with ID and X and Y coordinates. [featured_product attribute](https://support.google.com/merchants/answer/9703736)
   * @return featuredProduct
   */
  @javax.annotation.Nullable
  public List<CollectionFeaturedProduct> getFeaturedProduct() {
    return featuredProduct;
  }

  public void setFeaturedProduct(List<CollectionFeaturedProduct> featuredProduct) {
    this.featuredProduct = featuredProduct;
  }


  public Collection headline(List<String> headline) {
    this.headline = headline;
    return this;
  }

  public Collection addHeadlineItem(String headlineItem) {
    if (this.headline == null) {
      this.headline = new ArrayList<>();
    }
    this.headline.add(headlineItem);
    return this;
  }

  /**
   * Your collection&#39;s name. [headline attribute](https://support.google.com/merchants/answer/9673580)
   * @return headline
   */
  @javax.annotation.Nullable
  public List<String> getHeadline() {
    return headline;
  }

  public void setHeadline(List<String> headline) {
    this.headline = headline;
  }


  public Collection id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Required. The REST ID of the collection. Content API methods that operate on collections take this as their collectionId parameter. The REST ID for a collection is of the form collectionId. [id attribute](https://support.google.com/merchants/answer/9649290)
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Collection imageLink(List<String> imageLink) {
    this.imageLink = imageLink;
    return this;
  }

  public Collection addImageLinkItem(String imageLinkItem) {
    if (this.imageLink == null) {
      this.imageLink = new ArrayList<>();
    }
    this.imageLink.add(imageLinkItem);
    return this;
  }

  /**
   * The URL of a collection’s image. [image_link attribute](https://support.google.com/merchants/answer/9703236)
   * @return imageLink
   */
  @javax.annotation.Nullable
  public List<String> getImageLink() {
    return imageLink;
  }

  public void setImageLink(List<String> imageLink) {
    this.imageLink = imageLink;
  }


  public Collection language(String language) {
    this.language = language;
    return this;
  }

  /**
   * The language of a collection and the language of any featured products linked to the collection. [language attribute](https://support.google.com/merchants/answer/9673781)
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  public Collection link(String link) {
    this.link = link;
    return this;
  }

  /**
   * A collection’s landing page. URL directly linking to your collection&#39;s page on your website. [link attribute](https://support.google.com/merchants/answer/9673983)
   * @return link
   */
  @javax.annotation.Nullable
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }


  public Collection mobileLink(String mobileLink) {
    this.mobileLink = mobileLink;
    return this;
  }

  /**
   * A collection’s mobile-optimized landing page when you have a different URL for mobile and desktop traffic. [mobile_link attribute](https://support.google.com/merchants/answer/9646123)
   * @return mobileLink
   */
  @javax.annotation.Nullable
  public String getMobileLink() {
    return mobileLink;
  }

  public void setMobileLink(String mobileLink) {
    this.mobileLink = mobileLink;
  }


  public Collection productCountry(String productCountry) {
    this.productCountry = productCountry;
    return this;
  }

  /**
   * [product_country attribute](https://support.google.com/merchants/answer/9674155)
   * @return productCountry
   */
  @javax.annotation.Nullable
  public String getProductCountry() {
    return productCountry;
  }

  public void setProductCountry(String productCountry) {
    this.productCountry = productCountry;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Collection collection = (Collection) o;
    return Objects.equals(this.customLabel0, collection.customLabel0) &&
        Objects.equals(this.customLabel1, collection.customLabel1) &&
        Objects.equals(this.customLabel2, collection.customLabel2) &&
        Objects.equals(this.customLabel3, collection.customLabel3) &&
        Objects.equals(this.customLabel4, collection.customLabel4) &&
        Objects.equals(this.featuredProduct, collection.featuredProduct) &&
        Objects.equals(this.headline, collection.headline) &&
        Objects.equals(this.id, collection.id) &&
        Objects.equals(this.imageLink, collection.imageLink) &&
        Objects.equals(this.language, collection.language) &&
        Objects.equals(this.link, collection.link) &&
        Objects.equals(this.mobileLink, collection.mobileLink) &&
        Objects.equals(this.productCountry, collection.productCountry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customLabel0, customLabel1, customLabel2, customLabel3, customLabel4, featuredProduct, headline, id, imageLink, language, link, mobileLink, productCountry);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Collection {\n");
    sb.append("    customLabel0: ").append(toIndentedString(customLabel0)).append("\n");
    sb.append("    customLabel1: ").append(toIndentedString(customLabel1)).append("\n");
    sb.append("    customLabel2: ").append(toIndentedString(customLabel2)).append("\n");
    sb.append("    customLabel3: ").append(toIndentedString(customLabel3)).append("\n");
    sb.append("    customLabel4: ").append(toIndentedString(customLabel4)).append("\n");
    sb.append("    featuredProduct: ").append(toIndentedString(featuredProduct)).append("\n");
    sb.append("    headline: ").append(toIndentedString(headline)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageLink: ").append(toIndentedString(imageLink)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    mobileLink: ").append(toIndentedString(mobileLink)).append("\n");
    sb.append("    productCountry: ").append(toIndentedString(productCountry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customLabel0");
    openapiFields.add("customLabel1");
    openapiFields.add("customLabel2");
    openapiFields.add("customLabel3");
    openapiFields.add("customLabel4");
    openapiFields.add("featuredProduct");
    openapiFields.add("headline");
    openapiFields.add("id");
    openapiFields.add("imageLink");
    openapiFields.add("language");
    openapiFields.add("link");
    openapiFields.add("mobileLink");
    openapiFields.add("productCountry");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Collection
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Collection.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Collection is not found in the empty JSON string", Collection.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Collection.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Collection` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("customLabel0") != null && !jsonObj.get("customLabel0").isJsonNull()) && !jsonObj.get("customLabel0").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel0` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel0").toString()));
      }
      if ((jsonObj.get("customLabel1") != null && !jsonObj.get("customLabel1").isJsonNull()) && !jsonObj.get("customLabel1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel1").toString()));
      }
      if ((jsonObj.get("customLabel2") != null && !jsonObj.get("customLabel2").isJsonNull()) && !jsonObj.get("customLabel2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel2").toString()));
      }
      if ((jsonObj.get("customLabel3") != null && !jsonObj.get("customLabel3").isJsonNull()) && !jsonObj.get("customLabel3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel3").toString()));
      }
      if ((jsonObj.get("customLabel4") != null && !jsonObj.get("customLabel4").isJsonNull()) && !jsonObj.get("customLabel4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLabel4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLabel4").toString()));
      }
      if (jsonObj.get("featuredProduct") != null && !jsonObj.get("featuredProduct").isJsonNull()) {
        JsonArray jsonArrayfeaturedProduct = jsonObj.getAsJsonArray("featuredProduct");
        if (jsonArrayfeaturedProduct != null) {
          // ensure the json data is an array
          if (!jsonObj.get("featuredProduct").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `featuredProduct` to be an array in the JSON string but got `%s`", jsonObj.get("featuredProduct").toString()));
          }

          // validate the optional field `featuredProduct` (array)
          for (int i = 0; i < jsonArrayfeaturedProduct.size(); i++) {
            CollectionFeaturedProduct.validateJsonElement(jsonArrayfeaturedProduct.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("headline") != null && !jsonObj.get("headline").isJsonNull() && !jsonObj.get("headline").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `headline` to be an array in the JSON string but got `%s`", jsonObj.get("headline").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("imageLink") != null && !jsonObj.get("imageLink").isJsonNull() && !jsonObj.get("imageLink").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageLink` to be an array in the JSON string but got `%s`", jsonObj.get("imageLink").toString()));
      }
      if ((jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) && !jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      if ((jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) && !jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      if ((jsonObj.get("mobileLink") != null && !jsonObj.get("mobileLink").isJsonNull()) && !jsonObj.get("mobileLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobileLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobileLink").toString()));
      }
      if ((jsonObj.get("productCountry") != null && !jsonObj.get("productCountry").isJsonNull()) && !jsonObj.get("productCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productCountry").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Collection.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Collection' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Collection> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Collection.class));

       return (TypeAdapter<T>) new TypeAdapter<Collection>() {
           @Override
           public void write(JsonWriter out, Collection value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Collection read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Collection given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Collection
   * @throws IOException if the JSON string is invalid with respect to Collection
   */
  public static Collection fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Collection.class);
  }

  /**
   * Convert an instance of Collection to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

