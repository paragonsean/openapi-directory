/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProductStatusDestinationStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:00.560037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProductStatusDestinationStatus {
  public static final String SERIALIZED_NAME_APPROVED_COUNTRIES = "approvedCountries";
  @SerializedName(SERIALIZED_NAME_APPROVED_COUNTRIES)
  private List<String> approvedCountries = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESTINATION = "destination";
  @SerializedName(SERIALIZED_NAME_DESTINATION)
  private String destination;

  public static final String SERIALIZED_NAME_DISAPPROVED_COUNTRIES = "disapprovedCountries";
  @SerializedName(SERIALIZED_NAME_DISAPPROVED_COUNTRIES)
  private List<String> disapprovedCountries = new ArrayList<>();

  public static final String SERIALIZED_NAME_PENDING_COUNTRIES = "pendingCountries";
  @SerializedName(SERIALIZED_NAME_PENDING_COUNTRIES)
  private List<String> pendingCountries = new ArrayList<>();

  public static final String SERIALIZED_NAME_STATUS = "status";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public ProductStatusDestinationStatus() {
  }

  public ProductStatusDestinationStatus approvedCountries(List<String> approvedCountries) {
    this.approvedCountries = approvedCountries;
    return this;
  }

  public ProductStatusDestinationStatus addApprovedCountriesItem(String approvedCountriesItem) {
    if (this.approvedCountries == null) {
      this.approvedCountries = new ArrayList<>();
    }
    this.approvedCountries.add(approvedCountriesItem);
    return this;
  }

  /**
   * List of country codes (ISO 3166-1 alpha-2) where the offer is approved.
   * @return approvedCountries
   */
  @javax.annotation.Nullable
  public List<String> getApprovedCountries() {
    return approvedCountries;
  }

  public void setApprovedCountries(List<String> approvedCountries) {
    this.approvedCountries = approvedCountries;
  }


  public ProductStatusDestinationStatus destination(String destination) {
    this.destination = destination;
    return this;
  }

  /**
   * The name of the destination
   * @return destination
   */
  @javax.annotation.Nullable
  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }


  public ProductStatusDestinationStatus disapprovedCountries(List<String> disapprovedCountries) {
    this.disapprovedCountries = disapprovedCountries;
    return this;
  }

  public ProductStatusDestinationStatus addDisapprovedCountriesItem(String disapprovedCountriesItem) {
    if (this.disapprovedCountries == null) {
      this.disapprovedCountries = new ArrayList<>();
    }
    this.disapprovedCountries.add(disapprovedCountriesItem);
    return this;
  }

  /**
   * List of country codes (ISO 3166-1 alpha-2) where the offer is disapproved.
   * @return disapprovedCountries
   */
  @javax.annotation.Nullable
  public List<String> getDisapprovedCountries() {
    return disapprovedCountries;
  }

  public void setDisapprovedCountries(List<String> disapprovedCountries) {
    this.disapprovedCountries = disapprovedCountries;
  }


  public ProductStatusDestinationStatus pendingCountries(List<String> pendingCountries) {
    this.pendingCountries = pendingCountries;
    return this;
  }

  public ProductStatusDestinationStatus addPendingCountriesItem(String pendingCountriesItem) {
    if (this.pendingCountries == null) {
      this.pendingCountries = new ArrayList<>();
    }
    this.pendingCountries.add(pendingCountriesItem);
    return this;
  }

  /**
   * List of country codes (ISO 3166-1 alpha-2) where the offer is pending approval.
   * @return pendingCountries
   */
  @javax.annotation.Nullable
  public List<String> getPendingCountries() {
    return pendingCountries;
  }

  public void setPendingCountries(List<String> pendingCountries) {
    this.pendingCountries = pendingCountries;
  }


  @Deprecated
  public ProductStatusDestinationStatus status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Deprecated. Destination approval status in &#x60;targetCountry&#x60; of the offer.
   * @return status
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  @Deprecated
  public void setStatus(String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductStatusDestinationStatus productStatusDestinationStatus = (ProductStatusDestinationStatus) o;
    return Objects.equals(this.approvedCountries, productStatusDestinationStatus.approvedCountries) &&
        Objects.equals(this.destination, productStatusDestinationStatus.destination) &&
        Objects.equals(this.disapprovedCountries, productStatusDestinationStatus.disapprovedCountries) &&
        Objects.equals(this.pendingCountries, productStatusDestinationStatus.pendingCountries) &&
        Objects.equals(this.status, productStatusDestinationStatus.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approvedCountries, destination, disapprovedCountries, pendingCountries, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductStatusDestinationStatus {\n");
    sb.append("    approvedCountries: ").append(toIndentedString(approvedCountries)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    disapprovedCountries: ").append(toIndentedString(disapprovedCountries)).append("\n");
    sb.append("    pendingCountries: ").append(toIndentedString(pendingCountries)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("approvedCountries");
    openapiFields.add("destination");
    openapiFields.add("disapprovedCountries");
    openapiFields.add("pendingCountries");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductStatusDestinationStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductStatusDestinationStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductStatusDestinationStatus is not found in the empty JSON string", ProductStatusDestinationStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductStatusDestinationStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductStatusDestinationStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("approvedCountries") != null && !jsonObj.get("approvedCountries").isJsonNull() && !jsonObj.get("approvedCountries").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `approvedCountries` to be an array in the JSON string but got `%s`", jsonObj.get("approvedCountries").toString()));
      }
      if ((jsonObj.get("destination") != null && !jsonObj.get("destination").isJsonNull()) && !jsonObj.get("destination").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("disapprovedCountries") != null && !jsonObj.get("disapprovedCountries").isJsonNull() && !jsonObj.get("disapprovedCountries").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `disapprovedCountries` to be an array in the JSON string but got `%s`", jsonObj.get("disapprovedCountries").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("pendingCountries") != null && !jsonObj.get("pendingCountries").isJsonNull() && !jsonObj.get("pendingCountries").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `pendingCountries` to be an array in the JSON string but got `%s`", jsonObj.get("pendingCountries").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductStatusDestinationStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductStatusDestinationStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductStatusDestinationStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductStatusDestinationStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductStatusDestinationStatus>() {
           @Override
           public void write(JsonWriter out, ProductStatusDestinationStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductStatusDestinationStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductStatusDestinationStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductStatusDestinationStatus
   * @throws IOException if the JSON string is invalid with respect to ProductStatusDestinationStatus
   */
  public static ProductStatusDestinationStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductStatusDestinationStatus.class);
  }

  /**
   * Convert an instance of ProductStatusDestinationStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

