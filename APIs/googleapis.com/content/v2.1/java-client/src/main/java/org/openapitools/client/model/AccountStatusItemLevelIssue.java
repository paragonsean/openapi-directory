/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AccountStatusItemLevelIssue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:00.560037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccountStatusItemLevelIssue {
  public static final String SERIALIZED_NAME_ATTRIBUTE_NAME = "attributeName";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_NAME)
  private String attributeName;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DETAIL = "detail";
  @SerializedName(SERIALIZED_NAME_DETAIL)
  private String detail;

  public static final String SERIALIZED_NAME_DOCUMENTATION = "documentation";
  @SerializedName(SERIALIZED_NAME_DOCUMENTATION)
  private String documentation;

  public static final String SERIALIZED_NAME_NUM_ITEMS = "numItems";
  @SerializedName(SERIALIZED_NAME_NUM_ITEMS)
  private String numItems;

  public static final String SERIALIZED_NAME_RESOLUTION = "resolution";
  @SerializedName(SERIALIZED_NAME_RESOLUTION)
  private String resolution;

  public static final String SERIALIZED_NAME_SERVABILITY = "servability";
  @SerializedName(SERIALIZED_NAME_SERVABILITY)
  private String servability;

  public AccountStatusItemLevelIssue() {
  }

  public AccountStatusItemLevelIssue attributeName(String attributeName) {
    this.attributeName = attributeName;
    return this;
  }

  /**
   * The attribute&#39;s name, if the issue is caused by a single attribute.
   * @return attributeName
   */
  @javax.annotation.Nullable
  public String getAttributeName() {
    return attributeName;
  }

  public void setAttributeName(String attributeName) {
    this.attributeName = attributeName;
  }


  public AccountStatusItemLevelIssue code(String code) {
    this.code = code;
    return this;
  }

  /**
   * The error code of the issue.
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public AccountStatusItemLevelIssue description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A short issue description in English.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public AccountStatusItemLevelIssue detail(String detail) {
    this.detail = detail;
    return this;
  }

  /**
   * A detailed issue description in English.
   * @return detail
   */
  @javax.annotation.Nullable
  public String getDetail() {
    return detail;
  }

  public void setDetail(String detail) {
    this.detail = detail;
  }


  public AccountStatusItemLevelIssue documentation(String documentation) {
    this.documentation = documentation;
    return this;
  }

  /**
   * The URL of a web page to help with resolving this issue.
   * @return documentation
   */
  @javax.annotation.Nullable
  public String getDocumentation() {
    return documentation;
  }

  public void setDocumentation(String documentation) {
    this.documentation = documentation;
  }


  public AccountStatusItemLevelIssue numItems(String numItems) {
    this.numItems = numItems;
    return this;
  }

  /**
   * Number of items with this issue.
   * @return numItems
   */
  @javax.annotation.Nullable
  public String getNumItems() {
    return numItems;
  }

  public void setNumItems(String numItems) {
    this.numItems = numItems;
  }


  public AccountStatusItemLevelIssue resolution(String resolution) {
    this.resolution = resolution;
    return this;
  }

  /**
   * Whether the issue can be resolved by the merchant.
   * @return resolution
   */
  @javax.annotation.Nullable
  public String getResolution() {
    return resolution;
  }

  public void setResolution(String resolution) {
    this.resolution = resolution;
  }


  public AccountStatusItemLevelIssue servability(String servability) {
    this.servability = servability;
    return this;
  }

  /**
   * How this issue affects serving of the offer.
   * @return servability
   */
  @javax.annotation.Nullable
  public String getServability() {
    return servability;
  }

  public void setServability(String servability) {
    this.servability = servability;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountStatusItemLevelIssue accountStatusItemLevelIssue = (AccountStatusItemLevelIssue) o;
    return Objects.equals(this.attributeName, accountStatusItemLevelIssue.attributeName) &&
        Objects.equals(this.code, accountStatusItemLevelIssue.code) &&
        Objects.equals(this.description, accountStatusItemLevelIssue.description) &&
        Objects.equals(this.detail, accountStatusItemLevelIssue.detail) &&
        Objects.equals(this.documentation, accountStatusItemLevelIssue.documentation) &&
        Objects.equals(this.numItems, accountStatusItemLevelIssue.numItems) &&
        Objects.equals(this.resolution, accountStatusItemLevelIssue.resolution) &&
        Objects.equals(this.servability, accountStatusItemLevelIssue.servability);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeName, code, description, detail, documentation, numItems, resolution, servability);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountStatusItemLevelIssue {\n");
    sb.append("    attributeName: ").append(toIndentedString(attributeName)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    detail: ").append(toIndentedString(detail)).append("\n");
    sb.append("    documentation: ").append(toIndentedString(documentation)).append("\n");
    sb.append("    numItems: ").append(toIndentedString(numItems)).append("\n");
    sb.append("    resolution: ").append(toIndentedString(resolution)).append("\n");
    sb.append("    servability: ").append(toIndentedString(servability)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributeName");
    openapiFields.add("code");
    openapiFields.add("description");
    openapiFields.add("detail");
    openapiFields.add("documentation");
    openapiFields.add("numItems");
    openapiFields.add("resolution");
    openapiFields.add("servability");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountStatusItemLevelIssue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountStatusItemLevelIssue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountStatusItemLevelIssue is not found in the empty JSON string", AccountStatusItemLevelIssue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountStatusItemLevelIssue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountStatusItemLevelIssue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("attributeName") != null && !jsonObj.get("attributeName").isJsonNull()) && !jsonObj.get("attributeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributeName").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("detail") != null && !jsonObj.get("detail").isJsonNull()) && !jsonObj.get("detail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `detail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("detail").toString()));
      }
      if ((jsonObj.get("documentation") != null && !jsonObj.get("documentation").isJsonNull()) && !jsonObj.get("documentation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `documentation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("documentation").toString()));
      }
      if ((jsonObj.get("numItems") != null && !jsonObj.get("numItems").isJsonNull()) && !jsonObj.get("numItems").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numItems` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numItems").toString()));
      }
      if ((jsonObj.get("resolution") != null && !jsonObj.get("resolution").isJsonNull()) && !jsonObj.get("resolution").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resolution` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resolution").toString()));
      }
      if ((jsonObj.get("servability") != null && !jsonObj.get("servability").isJsonNull()) && !jsonObj.get("servability").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `servability` to be a primitive type in the JSON string but got `%s`", jsonObj.get("servability").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountStatusItemLevelIssue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountStatusItemLevelIssue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountStatusItemLevelIssue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountStatusItemLevelIssue.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountStatusItemLevelIssue>() {
           @Override
           public void write(JsonWriter out, AccountStatusItemLevelIssue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountStatusItemLevelIssue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountStatusItemLevelIssue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountStatusItemLevelIssue
   * @throws IOException if the JSON string is invalid with respect to AccountStatusItemLevelIssue
   */
  public static AccountStatusItemLevelIssue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountStatusItemLevelIssue.class);
  }

  /**
   * Convert an instance of AccountStatusItemLevelIssue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

