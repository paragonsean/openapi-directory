/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption;
import org.openapitools.client.model.OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption;
import org.openapitools.client.model.ShipmentInvoice;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderinvoicesCreateRefundInvoiceRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:00.560037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderinvoicesCreateRefundInvoiceRequest {
  public static final String SERIALIZED_NAME_INVOICE_ID = "invoiceId";
  @SerializedName(SERIALIZED_NAME_INVOICE_ID)
  private String invoiceId;

  public static final String SERIALIZED_NAME_OPERATION_ID = "operationId";
  @SerializedName(SERIALIZED_NAME_OPERATION_ID)
  private String operationId;

  public static final String SERIALIZED_NAME_REFUND_ONLY_OPTION = "refundOnlyOption";
  @SerializedName(SERIALIZED_NAME_REFUND_ONLY_OPTION)
  private OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption refundOnlyOption;

  public static final String SERIALIZED_NAME_RETURN_OPTION = "returnOption";
  @SerializedName(SERIALIZED_NAME_RETURN_OPTION)
  private OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption returnOption;

  public static final String SERIALIZED_NAME_SHIPMENT_INVOICES = "shipmentInvoices";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_INVOICES)
  private List<ShipmentInvoice> shipmentInvoices = new ArrayList<>();

  public OrderinvoicesCreateRefundInvoiceRequest() {
  }

  public OrderinvoicesCreateRefundInvoiceRequest invoiceId(String invoiceId) {
    this.invoiceId = invoiceId;
    return this;
  }

  /**
   * [required] The ID of the invoice.
   * @return invoiceId
   */
  @javax.annotation.Nullable
  public String getInvoiceId() {
    return invoiceId;
  }

  public void setInvoiceId(String invoiceId) {
    this.invoiceId = invoiceId;
  }


  public OrderinvoicesCreateRefundInvoiceRequest operationId(String operationId) {
    this.operationId = operationId;
    return this;
  }

  /**
   * [required] The ID of the operation, unique across all operations for a given order.
   * @return operationId
   */
  @javax.annotation.Nullable
  public String getOperationId() {
    return operationId;
  }

  public void setOperationId(String operationId) {
    this.operationId = operationId;
  }


  public OrderinvoicesCreateRefundInvoiceRequest refundOnlyOption(OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption refundOnlyOption) {
    this.refundOnlyOption = refundOnlyOption;
    return this;
  }

  /**
   * Get refundOnlyOption
   * @return refundOnlyOption
   */
  @javax.annotation.Nullable
  public OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption getRefundOnlyOption() {
    return refundOnlyOption;
  }

  public void setRefundOnlyOption(OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption refundOnlyOption) {
    this.refundOnlyOption = refundOnlyOption;
  }


  public OrderinvoicesCreateRefundInvoiceRequest returnOption(OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption returnOption) {
    this.returnOption = returnOption;
    return this;
  }

  /**
   * Get returnOption
   * @return returnOption
   */
  @javax.annotation.Nullable
  public OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption getReturnOption() {
    return returnOption;
  }

  public void setReturnOption(OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption returnOption) {
    this.returnOption = returnOption;
  }


  public OrderinvoicesCreateRefundInvoiceRequest shipmentInvoices(List<ShipmentInvoice> shipmentInvoices) {
    this.shipmentInvoices = shipmentInvoices;
    return this;
  }

  public OrderinvoicesCreateRefundInvoiceRequest addShipmentInvoicesItem(ShipmentInvoice shipmentInvoicesItem) {
    if (this.shipmentInvoices == null) {
      this.shipmentInvoices = new ArrayList<>();
    }
    this.shipmentInvoices.add(shipmentInvoicesItem);
    return this;
  }

  /**
   * Invoice details for different shipment groups.
   * @return shipmentInvoices
   */
  @javax.annotation.Nullable
  public List<ShipmentInvoice> getShipmentInvoices() {
    return shipmentInvoices;
  }

  public void setShipmentInvoices(List<ShipmentInvoice> shipmentInvoices) {
    this.shipmentInvoices = shipmentInvoices;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderinvoicesCreateRefundInvoiceRequest orderinvoicesCreateRefundInvoiceRequest = (OrderinvoicesCreateRefundInvoiceRequest) o;
    return Objects.equals(this.invoiceId, orderinvoicesCreateRefundInvoiceRequest.invoiceId) &&
        Objects.equals(this.operationId, orderinvoicesCreateRefundInvoiceRequest.operationId) &&
        Objects.equals(this.refundOnlyOption, orderinvoicesCreateRefundInvoiceRequest.refundOnlyOption) &&
        Objects.equals(this.returnOption, orderinvoicesCreateRefundInvoiceRequest.returnOption) &&
        Objects.equals(this.shipmentInvoices, orderinvoicesCreateRefundInvoiceRequest.shipmentInvoices);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceId, operationId, refundOnlyOption, returnOption, shipmentInvoices);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderinvoicesCreateRefundInvoiceRequest {\n");
    sb.append("    invoiceId: ").append(toIndentedString(invoiceId)).append("\n");
    sb.append("    operationId: ").append(toIndentedString(operationId)).append("\n");
    sb.append("    refundOnlyOption: ").append(toIndentedString(refundOnlyOption)).append("\n");
    sb.append("    returnOption: ").append(toIndentedString(returnOption)).append("\n");
    sb.append("    shipmentInvoices: ").append(toIndentedString(shipmentInvoices)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("invoiceId");
    openapiFields.add("operationId");
    openapiFields.add("refundOnlyOption");
    openapiFields.add("returnOption");
    openapiFields.add("shipmentInvoices");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderinvoicesCreateRefundInvoiceRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderinvoicesCreateRefundInvoiceRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderinvoicesCreateRefundInvoiceRequest is not found in the empty JSON string", OrderinvoicesCreateRefundInvoiceRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderinvoicesCreateRefundInvoiceRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderinvoicesCreateRefundInvoiceRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("invoiceId") != null && !jsonObj.get("invoiceId").isJsonNull()) && !jsonObj.get("invoiceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoiceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoiceId").toString()));
      }
      if ((jsonObj.get("operationId") != null && !jsonObj.get("operationId").isJsonNull()) && !jsonObj.get("operationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operationId").toString()));
      }
      // validate the optional field `refundOnlyOption`
      if (jsonObj.get("refundOnlyOption") != null && !jsonObj.get("refundOnlyOption").isJsonNull()) {
        OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption.validateJsonElement(jsonObj.get("refundOnlyOption"));
      }
      // validate the optional field `returnOption`
      if (jsonObj.get("returnOption") != null && !jsonObj.get("returnOption").isJsonNull()) {
        OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption.validateJsonElement(jsonObj.get("returnOption"));
      }
      if (jsonObj.get("shipmentInvoices") != null && !jsonObj.get("shipmentInvoices").isJsonNull()) {
        JsonArray jsonArrayshipmentInvoices = jsonObj.getAsJsonArray("shipmentInvoices");
        if (jsonArrayshipmentInvoices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shipmentInvoices").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shipmentInvoices` to be an array in the JSON string but got `%s`", jsonObj.get("shipmentInvoices").toString()));
          }

          // validate the optional field `shipmentInvoices` (array)
          for (int i = 0; i < jsonArrayshipmentInvoices.size(); i++) {
            ShipmentInvoice.validateJsonElement(jsonArrayshipmentInvoices.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderinvoicesCreateRefundInvoiceRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderinvoicesCreateRefundInvoiceRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderinvoicesCreateRefundInvoiceRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderinvoicesCreateRefundInvoiceRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderinvoicesCreateRefundInvoiceRequest>() {
           @Override
           public void write(JsonWriter out, OrderinvoicesCreateRefundInvoiceRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderinvoicesCreateRefundInvoiceRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderinvoicesCreateRefundInvoiceRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderinvoicesCreateRefundInvoiceRequest
   * @throws IOException if the JSON string is invalid with respect to OrderinvoicesCreateRefundInvoiceRequest
   */
  public static OrderinvoicesCreateRefundInvoiceRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderinvoicesCreateRefundInvoiceRequest.class);
  }

  /**
   * Convert an instance of OrderinvoicesCreateRefundInvoiceRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

