/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ProductStatusDestinationStatus;
import org.openapitools.client.model.ProductStatusItemLevelIssue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The status of a product, that is, information about a product computed asynchronously.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:00.560037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProductStatus {
  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private String creationDate;

  public static final String SERIALIZED_NAME_DESTINATION_STATUSES = "destinationStatuses";
  @SerializedName(SERIALIZED_NAME_DESTINATION_STATUSES)
  private List<ProductStatusDestinationStatus> destinationStatuses = new ArrayList<>();

  public static final String SERIALIZED_NAME_GOOGLE_EXPIRATION_DATE = "googleExpirationDate";
  @SerializedName(SERIALIZED_NAME_GOOGLE_EXPIRATION_DATE)
  private String googleExpirationDate;

  public static final String SERIALIZED_NAME_ITEM_LEVEL_ISSUES = "itemLevelIssues";
  @SerializedName(SERIALIZED_NAME_ITEM_LEVEL_ISSUES)
  private List<ProductStatusItemLevelIssue> itemLevelIssues = new ArrayList<>();

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_LAST_UPDATE_DATE = "lastUpdateDate";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_DATE)
  private String lastUpdateDate;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "productId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public ProductStatus() {
  }

  public ProductStatus creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Date on which the item has been created, in ISO 8601 format.
   * @return creationDate
   */
  @javax.annotation.Nullable
  public String getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public ProductStatus destinationStatuses(List<ProductStatusDestinationStatus> destinationStatuses) {
    this.destinationStatuses = destinationStatuses;
    return this;
  }

  public ProductStatus addDestinationStatusesItem(ProductStatusDestinationStatus destinationStatusesItem) {
    if (this.destinationStatuses == null) {
      this.destinationStatuses = new ArrayList<>();
    }
    this.destinationStatuses.add(destinationStatusesItem);
    return this;
  }

  /**
   * The intended destinations for the product.
   * @return destinationStatuses
   */
  @javax.annotation.Nullable
  public List<ProductStatusDestinationStatus> getDestinationStatuses() {
    return destinationStatuses;
  }

  public void setDestinationStatuses(List<ProductStatusDestinationStatus> destinationStatuses) {
    this.destinationStatuses = destinationStatuses;
  }


  public ProductStatus googleExpirationDate(String googleExpirationDate) {
    this.googleExpirationDate = googleExpirationDate;
    return this;
  }

  /**
   * Date on which the item expires in Google Shopping, in ISO 8601 format.
   * @return googleExpirationDate
   */
  @javax.annotation.Nullable
  public String getGoogleExpirationDate() {
    return googleExpirationDate;
  }

  public void setGoogleExpirationDate(String googleExpirationDate) {
    this.googleExpirationDate = googleExpirationDate;
  }


  public ProductStatus itemLevelIssues(List<ProductStatusItemLevelIssue> itemLevelIssues) {
    this.itemLevelIssues = itemLevelIssues;
    return this;
  }

  public ProductStatus addItemLevelIssuesItem(ProductStatusItemLevelIssue itemLevelIssuesItem) {
    if (this.itemLevelIssues == null) {
      this.itemLevelIssues = new ArrayList<>();
    }
    this.itemLevelIssues.add(itemLevelIssuesItem);
    return this;
  }

  /**
   * A list of all issues associated with the product.
   * @return itemLevelIssues
   */
  @javax.annotation.Nullable
  public List<ProductStatusItemLevelIssue> getItemLevelIssues() {
    return itemLevelIssues;
  }

  public void setItemLevelIssues(List<ProductStatusItemLevelIssue> itemLevelIssues) {
    this.itemLevelIssues = itemLevelIssues;
  }


  public ProductStatus kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;&#x60;content#productStatus&#x60;\&quot;
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public ProductStatus lastUpdateDate(String lastUpdateDate) {
    this.lastUpdateDate = lastUpdateDate;
    return this;
  }

  /**
   * Date on which the item has been last updated, in ISO 8601 format.
   * @return lastUpdateDate
   */
  @javax.annotation.Nullable
  public String getLastUpdateDate() {
    return lastUpdateDate;
  }

  public void setLastUpdateDate(String lastUpdateDate) {
    this.lastUpdateDate = lastUpdateDate;
  }


  public ProductStatus link(String link) {
    this.link = link;
    return this;
  }

  /**
   * The link to the product.
   * @return link
   */
  @javax.annotation.Nullable
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }


  public ProductStatus productId(String productId) {
    this.productId = productId;
    return this;
  }

  /**
   * The ID of the product for which status is reported.
   * @return productId
   */
  @javax.annotation.Nullable
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }


  public ProductStatus title(String title) {
    this.title = title;
    return this;
  }

  /**
   * The title of the product.
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductStatus productStatus = (ProductStatus) o;
    return Objects.equals(this.creationDate, productStatus.creationDate) &&
        Objects.equals(this.destinationStatuses, productStatus.destinationStatuses) &&
        Objects.equals(this.googleExpirationDate, productStatus.googleExpirationDate) &&
        Objects.equals(this.itemLevelIssues, productStatus.itemLevelIssues) &&
        Objects.equals(this.kind, productStatus.kind) &&
        Objects.equals(this.lastUpdateDate, productStatus.lastUpdateDate) &&
        Objects.equals(this.link, productStatus.link) &&
        Objects.equals(this.productId, productStatus.productId) &&
        Objects.equals(this.title, productStatus.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, destinationStatuses, googleExpirationDate, itemLevelIssues, kind, lastUpdateDate, link, productId, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductStatus {\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    destinationStatuses: ").append(toIndentedString(destinationStatuses)).append("\n");
    sb.append("    googleExpirationDate: ").append(toIndentedString(googleExpirationDate)).append("\n");
    sb.append("    itemLevelIssues: ").append(toIndentedString(itemLevelIssues)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    lastUpdateDate: ").append(toIndentedString(lastUpdateDate)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("creationDate");
    openapiFields.add("destinationStatuses");
    openapiFields.add("googleExpirationDate");
    openapiFields.add("itemLevelIssues");
    openapiFields.add("kind");
    openapiFields.add("lastUpdateDate");
    openapiFields.add("link");
    openapiFields.add("productId");
    openapiFields.add("title");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductStatus is not found in the empty JSON string", ProductStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("creationDate") != null && !jsonObj.get("creationDate").isJsonNull()) && !jsonObj.get("creationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creationDate").toString()));
      }
      if (jsonObj.get("destinationStatuses") != null && !jsonObj.get("destinationStatuses").isJsonNull()) {
        JsonArray jsonArraydestinationStatuses = jsonObj.getAsJsonArray("destinationStatuses");
        if (jsonArraydestinationStatuses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("destinationStatuses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `destinationStatuses` to be an array in the JSON string but got `%s`", jsonObj.get("destinationStatuses").toString()));
          }

          // validate the optional field `destinationStatuses` (array)
          for (int i = 0; i < jsonArraydestinationStatuses.size(); i++) {
            ProductStatusDestinationStatus.validateJsonElement(jsonArraydestinationStatuses.get(i));
          };
        }
      }
      if ((jsonObj.get("googleExpirationDate") != null && !jsonObj.get("googleExpirationDate").isJsonNull()) && !jsonObj.get("googleExpirationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `googleExpirationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("googleExpirationDate").toString()));
      }
      if (jsonObj.get("itemLevelIssues") != null && !jsonObj.get("itemLevelIssues").isJsonNull()) {
        JsonArray jsonArrayitemLevelIssues = jsonObj.getAsJsonArray("itemLevelIssues");
        if (jsonArrayitemLevelIssues != null) {
          // ensure the json data is an array
          if (!jsonObj.get("itemLevelIssues").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `itemLevelIssues` to be an array in the JSON string but got `%s`", jsonObj.get("itemLevelIssues").toString()));
          }

          // validate the optional field `itemLevelIssues` (array)
          for (int i = 0; i < jsonArrayitemLevelIssues.size(); i++) {
            ProductStatusItemLevelIssue.validateJsonElement(jsonArrayitemLevelIssues.get(i));
          };
        }
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      if ((jsonObj.get("lastUpdateDate") != null && !jsonObj.get("lastUpdateDate").isJsonNull()) && !jsonObj.get("lastUpdateDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUpdateDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUpdateDate").toString()));
      }
      if ((jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) && !jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      if ((jsonObj.get("productId") != null && !jsonObj.get("productId").isJsonNull()) && !jsonObj.get("productId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productId").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductStatus>() {
           @Override
           public void write(JsonWriter out, ProductStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductStatus
   * @throws IOException if the JSON string is invalid with respect to ProductStatus
   */
  public static ProductStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductStatus.class);
  }

  /**
   * Convert an instance of ProductStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

