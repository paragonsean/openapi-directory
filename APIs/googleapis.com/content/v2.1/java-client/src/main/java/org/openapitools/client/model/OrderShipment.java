/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OrderShipmentLineItemShipment;
import org.openapitools.client.model.OrderShipmentScheduledDeliveryDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderShipment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:00.560037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderShipment {
  public static final String SERIALIZED_NAME_CARRIER = "carrier";
  @SerializedName(SERIALIZED_NAME_CARRIER)
  private String carrier;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private String creationDate;

  public static final String SERIALIZED_NAME_DELIVERY_DATE = "deliveryDate";
  @SerializedName(SERIALIZED_NAME_DELIVERY_DATE)
  private String deliveryDate;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LINE_ITEMS = "lineItems";
  @SerializedName(SERIALIZED_NAME_LINE_ITEMS)
  private List<OrderShipmentLineItemShipment> lineItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_SCHEDULED_DELIVERY_DETAILS = "scheduledDeliveryDetails";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_DELIVERY_DETAILS)
  private OrderShipmentScheduledDeliveryDetails scheduledDeliveryDetails;

  public static final String SERIALIZED_NAME_SHIPMENT_GROUP_ID = "shipmentGroupId";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_GROUP_ID)
  private String shipmentGroupId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TRACKING_ID = "trackingId";
  @SerializedName(SERIALIZED_NAME_TRACKING_ID)
  private String trackingId;

  public OrderShipment() {
  }

  public OrderShipment carrier(String carrier) {
    this.carrier = carrier;
    return this;
  }

  /**
   * The carrier handling the shipment. For supported carriers, Google includes the carrier name and tracking URL in emails to customers. For select supported carriers, Google also automatically updates the shipment status based on the provided shipment ID. *Note:* You can also use unsupported carriers, but emails to customers won&#39;t include the carrier name or tracking URL, and there will be no automatic order status updates. Supported carriers for \&quot;US\&quot; are: - \&quot;&#x60;ups&#x60;\&quot; (United Parcel Service) *automatic status updates* - \&quot;&#x60;usps&#x60;\&quot; (United States Postal Service) *automatic status updates* - \&quot;&#x60;fedex&#x60;\&quot; (FedEx) *automatic status updates * - \&quot;&#x60;dhl&#x60;\&quot; (DHL eCommerce) *automatic status updates* (US only) - \&quot;&#x60;ontrac&#x60;\&quot; (OnTrac) *automatic status updates * - \&quot;&#x60;dhl express&#x60;\&quot; (DHL Express) - \&quot;&#x60;deliv&#x60;\&quot; (Deliv) - \&quot;&#x60;dynamex&#x60;\&quot; (TForce) - \&quot;&#x60;lasership&#x60;\&quot; (LaserShip) - \&quot;&#x60;mpx&#x60;\&quot; (Military Parcel Xpress) - \&quot;&#x60;uds&#x60;\&quot; (United Delivery Service) - \&quot;&#x60;efw&#x60;\&quot; (Estes Forwarding Worldwide) - \&quot;&#x60;jd logistics&#x60;\&quot; (JD Logistics) - \&quot;&#x60;yunexpress&#x60;\&quot; (YunExpress) - \&quot;&#x60;china post&#x60;\&quot; (China Post) - \&quot;&#x60;china ems&#x60;\&quot; (China Post Express Mail Service) - \&quot;&#x60;singapore post&#x60;\&quot; (Singapore Post) - \&quot;&#x60;pos malaysia&#x60;\&quot; (Pos Malaysia) - \&quot;&#x60;postnl&#x60;\&quot; (PostNL) - \&quot;&#x60;ptt&#x60;\&quot; (PTT Turkish Post) - \&quot;&#x60;eub&#x60;\&quot; (ePacket) - \&quot;&#x60;chukou1&#x60;\&quot; (Chukou1 Logistics) - \&quot;&#x60;bestex&#x60;\&quot; (Best Express) - \&quot;&#x60;canada post&#x60;\&quot; (Canada Post) - \&quot;&#x60;purolator&#x60;\&quot; (Purolator) - \&quot;&#x60;canpar&#x60;\&quot; (Canpar) - \&quot;&#x60;india post&#x60;\&quot; (India Post) - \&quot;&#x60;blue dart&#x60;\&quot; (Blue Dart) - \&quot;&#x60;delhivery&#x60;\&quot; (Delhivery) - \&quot;&#x60;dtdc&#x60;\&quot; (DTDC) - \&quot;&#x60;tpc india&#x60;\&quot; (TPC India) - \&quot;&#x60;lso&#x60;\&quot; (Lone Star Overnight) - \&quot;&#x60;tww&#x60;\&quot; (Team Worldwide) - \&quot;&#x60;deliver-it&#x60;\&quot; (Deliver-IT) - \&quot;&#x60;cdl last mile&#x60;\&quot; (CDL Last Mile) Supported carriers for FR are: - \&quot;&#x60;la poste&#x60;\&quot; (La Poste) *automatic status updates * - \&quot;&#x60;colissimo&#x60;\&quot; (Colissimo by La Poste) *automatic status updates* - \&quot;&#x60;ups&#x60;\&quot; (United Parcel Service) *automatic status updates * - \&quot;&#x60;chronopost&#x60;\&quot; (Chronopost by La Poste) - \&quot;&#x60;gls&#x60;\&quot; (General Logistics Systems France) - \&quot;&#x60;dpd&#x60;\&quot; (DPD Group by GeoPost) - \&quot;&#x60;bpost&#x60;\&quot; (Belgian Post Group) - \&quot;&#x60;colis prive&#x60;\&quot; (Colis Priv√©) - \&quot;&#x60;boxtal&#x60;\&quot; (Boxtal) - \&quot;&#x60;geodis&#x60;\&quot; (GEODIS) - \&quot;&#x60;tnt&#x60;\&quot; (TNT) - \&quot;&#x60;db schenker&#x60;\&quot; (DB Schenker) - \&quot;&#x60;aramex&#x60;\&quot; (Aramex) 
   * @return carrier
   */
  @javax.annotation.Nullable
  public String getCarrier() {
    return carrier;
  }

  public void setCarrier(String carrier) {
    this.carrier = carrier;
  }


  public OrderShipment creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Date on which the shipment has been created, in ISO 8601 format.
   * @return creationDate
   */
  @javax.annotation.Nullable
  public String getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public OrderShipment deliveryDate(String deliveryDate) {
    this.deliveryDate = deliveryDate;
    return this;
  }

  /**
   * Date on which the shipment has been delivered, in ISO 8601 format. Present only if &#x60;status&#x60; is &#x60;delivered&#x60;
   * @return deliveryDate
   */
  @javax.annotation.Nullable
  public String getDeliveryDate() {
    return deliveryDate;
  }

  public void setDeliveryDate(String deliveryDate) {
    this.deliveryDate = deliveryDate;
  }


  public OrderShipment id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The ID of the shipment.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public OrderShipment lineItems(List<OrderShipmentLineItemShipment> lineItems) {
    this.lineItems = lineItems;
    return this;
  }

  public OrderShipment addLineItemsItem(OrderShipmentLineItemShipment lineItemsItem) {
    if (this.lineItems == null) {
      this.lineItems = new ArrayList<>();
    }
    this.lineItems.add(lineItemsItem);
    return this;
  }

  /**
   * The line items that are shipped.
   * @return lineItems
   */
  @javax.annotation.Nullable
  public List<OrderShipmentLineItemShipment> getLineItems() {
    return lineItems;
  }

  public void setLineItems(List<OrderShipmentLineItemShipment> lineItems) {
    this.lineItems = lineItems;
  }


  public OrderShipment scheduledDeliveryDetails(OrderShipmentScheduledDeliveryDetails scheduledDeliveryDetails) {
    this.scheduledDeliveryDetails = scheduledDeliveryDetails;
    return this;
  }

  /**
   * Get scheduledDeliveryDetails
   * @return scheduledDeliveryDetails
   */
  @javax.annotation.Nullable
  public OrderShipmentScheduledDeliveryDetails getScheduledDeliveryDetails() {
    return scheduledDeliveryDetails;
  }

  public void setScheduledDeliveryDetails(OrderShipmentScheduledDeliveryDetails scheduledDeliveryDetails) {
    this.scheduledDeliveryDetails = scheduledDeliveryDetails;
  }


  public OrderShipment shipmentGroupId(String shipmentGroupId) {
    this.shipmentGroupId = shipmentGroupId;
    return this;
  }

  /**
   * The shipment group ID of the shipment. This is set in shiplineitems request.
   * @return shipmentGroupId
   */
  @javax.annotation.Nullable
  public String getShipmentGroupId() {
    return shipmentGroupId;
  }

  public void setShipmentGroupId(String shipmentGroupId) {
    this.shipmentGroupId = shipmentGroupId;
  }


  public OrderShipment status(String status) {
    this.status = status;
    return this;
  }

  /**
   * The status of the shipment. Acceptable values are: - \&quot;&#x60;delivered&#x60;\&quot; - \&quot;&#x60;readyForPickup&#x60;\&quot; - \&quot;&#x60;shipped&#x60;\&quot; - \&quot;&#x60;undeliverable&#x60;\&quot; 
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public OrderShipment trackingId(String trackingId) {
    this.trackingId = trackingId;
    return this;
  }

  /**
   * The tracking ID for the shipment.
   * @return trackingId
   */
  @javax.annotation.Nullable
  public String getTrackingId() {
    return trackingId;
  }

  public void setTrackingId(String trackingId) {
    this.trackingId = trackingId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderShipment orderShipment = (OrderShipment) o;
    return Objects.equals(this.carrier, orderShipment.carrier) &&
        Objects.equals(this.creationDate, orderShipment.creationDate) &&
        Objects.equals(this.deliveryDate, orderShipment.deliveryDate) &&
        Objects.equals(this.id, orderShipment.id) &&
        Objects.equals(this.lineItems, orderShipment.lineItems) &&
        Objects.equals(this.scheduledDeliveryDetails, orderShipment.scheduledDeliveryDetails) &&
        Objects.equals(this.shipmentGroupId, orderShipment.shipmentGroupId) &&
        Objects.equals(this.status, orderShipment.status) &&
        Objects.equals(this.trackingId, orderShipment.trackingId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(carrier, creationDate, deliveryDate, id, lineItems, scheduledDeliveryDetails, shipmentGroupId, status, trackingId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderShipment {\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    deliveryDate: ").append(toIndentedString(deliveryDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lineItems: ").append(toIndentedString(lineItems)).append("\n");
    sb.append("    scheduledDeliveryDetails: ").append(toIndentedString(scheduledDeliveryDetails)).append("\n");
    sb.append("    shipmentGroupId: ").append(toIndentedString(shipmentGroupId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    trackingId: ").append(toIndentedString(trackingId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("carrier");
    openapiFields.add("creationDate");
    openapiFields.add("deliveryDate");
    openapiFields.add("id");
    openapiFields.add("lineItems");
    openapiFields.add("scheduledDeliveryDetails");
    openapiFields.add("shipmentGroupId");
    openapiFields.add("status");
    openapiFields.add("trackingId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderShipment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderShipment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderShipment is not found in the empty JSON string", OrderShipment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderShipment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderShipment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("carrier") != null && !jsonObj.get("carrier").isJsonNull()) && !jsonObj.get("carrier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier").toString()));
      }
      if ((jsonObj.get("creationDate") != null && !jsonObj.get("creationDate").isJsonNull()) && !jsonObj.get("creationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creationDate").toString()));
      }
      if ((jsonObj.get("deliveryDate") != null && !jsonObj.get("deliveryDate").isJsonNull()) && !jsonObj.get("deliveryDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryDate").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("lineItems") != null && !jsonObj.get("lineItems").isJsonNull()) {
        JsonArray jsonArraylineItems = jsonObj.getAsJsonArray("lineItems");
        if (jsonArraylineItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lineItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lineItems` to be an array in the JSON string but got `%s`", jsonObj.get("lineItems").toString()));
          }

          // validate the optional field `lineItems` (array)
          for (int i = 0; i < jsonArraylineItems.size(); i++) {
            OrderShipmentLineItemShipment.validateJsonElement(jsonArraylineItems.get(i));
          };
        }
      }
      // validate the optional field `scheduledDeliveryDetails`
      if (jsonObj.get("scheduledDeliveryDetails") != null && !jsonObj.get("scheduledDeliveryDetails").isJsonNull()) {
        OrderShipmentScheduledDeliveryDetails.validateJsonElement(jsonObj.get("scheduledDeliveryDetails"));
      }
      if ((jsonObj.get("shipmentGroupId") != null && !jsonObj.get("shipmentGroupId").isJsonNull()) && !jsonObj.get("shipmentGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipmentGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipmentGroupId").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("trackingId") != null && !jsonObj.get("trackingId").isJsonNull()) && !jsonObj.get("trackingId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackingId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trackingId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderShipment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderShipment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderShipment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderShipment.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderShipment>() {
           @Override
           public void write(JsonWriter out, OrderShipment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderShipment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderShipment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderShipment
   * @throws IOException if the JSON string is invalid with respect to OrderShipment
   */
  public static OrderShipment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderShipment.class);
  }

  /**
   * Convert an instance of OrderShipment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

