/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountAdsLink;
import org.openapitools.client.model.AccountAutomaticImprovements;
import org.openapitools.client.model.AccountBusinessIdentity;
import org.openapitools.client.model.AccountBusinessInformation;
import org.openapitools.client.model.AccountConversionSettings;
import org.openapitools.client.model.AccountGoogleMyBusinessLink;
import org.openapitools.client.model.AccountUser;
import org.openapitools.client.model.AccountYouTubeChannelLink;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Account data. After the creation of a new account it may take a few minutes before it&#39;s fully operational. The methods delete, insert, and update require the admin role.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:00.560037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Account {
  public static final String SERIALIZED_NAME_ACCOUNT_MANAGEMENT = "accountManagement";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_MANAGEMENT)
  private String accountManagement;

  public static final String SERIALIZED_NAME_ADS_LINKS = "adsLinks";
  @SerializedName(SERIALIZED_NAME_ADS_LINKS)
  private List<AccountAdsLink> adsLinks = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADULT_CONTENT = "adultContent";
  @SerializedName(SERIALIZED_NAME_ADULT_CONTENT)
  private Boolean adultContent;

  public static final String SERIALIZED_NAME_AUTOMATIC_IMPROVEMENTS = "automaticImprovements";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC_IMPROVEMENTS)
  private AccountAutomaticImprovements automaticImprovements;

  public static final String SERIALIZED_NAME_AUTOMATIC_LABEL_IDS = "automaticLabelIds";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC_LABEL_IDS)
  private List<String> automaticLabelIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_BUSINESS_IDENTITY = "businessIdentity";
  @SerializedName(SERIALIZED_NAME_BUSINESS_IDENTITY)
  private AccountBusinessIdentity businessIdentity;

  public static final String SERIALIZED_NAME_BUSINESS_INFORMATION = "businessInformation";
  @SerializedName(SERIALIZED_NAME_BUSINESS_INFORMATION)
  private AccountBusinessInformation businessInformation;

  public static final String SERIALIZED_NAME_CONVERSION_SETTINGS = "conversionSettings";
  @SerializedName(SERIALIZED_NAME_CONVERSION_SETTINGS)
  private AccountConversionSettings conversionSettings;

  public static final String SERIALIZED_NAME_CSS_ID = "cssId";
  @SerializedName(SERIALIZED_NAME_CSS_ID)
  private String cssId;

  public static final String SERIALIZED_NAME_GOOGLE_MY_BUSINESS_LINK = "googleMyBusinessLink";
  @SerializedName(SERIALIZED_NAME_GOOGLE_MY_BUSINESS_LINK)
  private AccountGoogleMyBusinessLink googleMyBusinessLink;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_LABEL_IDS = "labelIds";
  @SerializedName(SERIALIZED_NAME_LABEL_IDS)
  private List<String> labelIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SELLER_ID = "sellerId";
  @SerializedName(SERIALIZED_NAME_SELLER_ID)
  private String sellerId;

  public static final String SERIALIZED_NAME_USERS = "users";
  @SerializedName(SERIALIZED_NAME_USERS)
  private List<AccountUser> users = new ArrayList<>();

  public static final String SERIALIZED_NAME_WEBSITE_URL = "websiteUrl";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL)
  private String websiteUrl;

  public static final String SERIALIZED_NAME_YOUTUBE_CHANNEL_LINKS = "youtubeChannelLinks";
  @SerializedName(SERIALIZED_NAME_YOUTUBE_CHANNEL_LINKS)
  private List<AccountYouTubeChannelLink> youtubeChannelLinks = new ArrayList<>();

  public Account() {
  }

  public Account(
     String accountManagement
  ) {
    this();
    this.accountManagement = accountManagement;
  }

  /**
   * Output only. How the account is managed. Acceptable values are: - \&quot;&#x60;manual&#x60;\&quot; - \&quot;&#x60;automatic&#x60;\&quot; 
   * @return accountManagement
   */
  @javax.annotation.Nullable
  public String getAccountManagement() {
    return accountManagement;
  }



  public Account adsLinks(List<AccountAdsLink> adsLinks) {
    this.adsLinks = adsLinks;
    return this;
  }

  public Account addAdsLinksItem(AccountAdsLink adsLinksItem) {
    if (this.adsLinks == null) {
      this.adsLinks = new ArrayList<>();
    }
    this.adsLinks.add(adsLinksItem);
    return this;
  }

  /**
   * Linked Ads accounts that are active or pending approval. To create a new link request, add a new link with status &#x60;active&#x60; to the list. It will remain in a &#x60;pending&#x60; state until approved or rejected either in the Ads interface or through the Google Ads API. To delete an active link, or to cancel a link request, remove it from the list.
   * @return adsLinks
   */
  @javax.annotation.Nullable
  public List<AccountAdsLink> getAdsLinks() {
    return adsLinks;
  }

  public void setAdsLinks(List<AccountAdsLink> adsLinks) {
    this.adsLinks = adsLinks;
  }


  public Account adultContent(Boolean adultContent) {
    this.adultContent = adultContent;
    return this;
  }

  /**
   * Indicates whether the merchant sells adult content.
   * @return adultContent
   */
  @javax.annotation.Nullable
  public Boolean getAdultContent() {
    return adultContent;
  }

  public void setAdultContent(Boolean adultContent) {
    this.adultContent = adultContent;
  }


  public Account automaticImprovements(AccountAutomaticImprovements automaticImprovements) {
    this.automaticImprovements = automaticImprovements;
    return this;
  }

  /**
   * Get automaticImprovements
   * @return automaticImprovements
   */
  @javax.annotation.Nullable
  public AccountAutomaticImprovements getAutomaticImprovements() {
    return automaticImprovements;
  }

  public void setAutomaticImprovements(AccountAutomaticImprovements automaticImprovements) {
    this.automaticImprovements = automaticImprovements;
  }


  public Account automaticLabelIds(List<String> automaticLabelIds) {
    this.automaticLabelIds = automaticLabelIds;
    return this;
  }

  public Account addAutomaticLabelIdsItem(String automaticLabelIdsItem) {
    if (this.automaticLabelIds == null) {
      this.automaticLabelIds = new ArrayList<>();
    }
    this.automaticLabelIds.add(automaticLabelIdsItem);
    return this;
  }

  /**
   * Automatically created label IDs that are assigned to the account by CSS Center.
   * @return automaticLabelIds
   */
  @javax.annotation.Nullable
  public List<String> getAutomaticLabelIds() {
    return automaticLabelIds;
  }

  public void setAutomaticLabelIds(List<String> automaticLabelIds) {
    this.automaticLabelIds = automaticLabelIds;
  }


  public Account businessIdentity(AccountBusinessIdentity businessIdentity) {
    this.businessIdentity = businessIdentity;
    return this;
  }

  /**
   * Get businessIdentity
   * @return businessIdentity
   */
  @javax.annotation.Nullable
  public AccountBusinessIdentity getBusinessIdentity() {
    return businessIdentity;
  }

  public void setBusinessIdentity(AccountBusinessIdentity businessIdentity) {
    this.businessIdentity = businessIdentity;
  }


  public Account businessInformation(AccountBusinessInformation businessInformation) {
    this.businessInformation = businessInformation;
    return this;
  }

  /**
   * Get businessInformation
   * @return businessInformation
   */
  @javax.annotation.Nullable
  public AccountBusinessInformation getBusinessInformation() {
    return businessInformation;
  }

  public void setBusinessInformation(AccountBusinessInformation businessInformation) {
    this.businessInformation = businessInformation;
  }


  public Account conversionSettings(AccountConversionSettings conversionSettings) {
    this.conversionSettings = conversionSettings;
    return this;
  }

  /**
   * Get conversionSettings
   * @return conversionSettings
   */
  @javax.annotation.Nullable
  public AccountConversionSettings getConversionSettings() {
    return conversionSettings;
  }

  public void setConversionSettings(AccountConversionSettings conversionSettings) {
    this.conversionSettings = conversionSettings;
  }


  public Account cssId(String cssId) {
    this.cssId = cssId;
    return this;
  }

  /**
   * ID of CSS the account belongs to.
   * @return cssId
   */
  @javax.annotation.Nullable
  public String getCssId() {
    return cssId;
  }

  public void setCssId(String cssId) {
    this.cssId = cssId;
  }


  public Account googleMyBusinessLink(AccountGoogleMyBusinessLink googleMyBusinessLink) {
    this.googleMyBusinessLink = googleMyBusinessLink;
    return this;
  }

  /**
   * Get googleMyBusinessLink
   * @return googleMyBusinessLink
   */
  @javax.annotation.Nullable
  public AccountGoogleMyBusinessLink getGoogleMyBusinessLink() {
    return googleMyBusinessLink;
  }

  public void setGoogleMyBusinessLink(AccountGoogleMyBusinessLink googleMyBusinessLink) {
    this.googleMyBusinessLink = googleMyBusinessLink;
  }


  public Account id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Required. 64-bit Merchant Center account ID.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Account kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;&#x60;content#account&#x60;\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public Account labelIds(List<String> labelIds) {
    this.labelIds = labelIds;
    return this;
  }

  public Account addLabelIdsItem(String labelIdsItem) {
    if (this.labelIds == null) {
      this.labelIds = new ArrayList<>();
    }
    this.labelIds.add(labelIdsItem);
    return this;
  }

  /**
   * Manually created label IDs that are assigned to the account by CSS.
   * @return labelIds
   */
  @javax.annotation.Nullable
  public List<String> getLabelIds() {
    return labelIds;
  }

  public void setLabelIds(List<String> labelIds) {
    this.labelIds = labelIds;
  }


  public Account name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Display name for the account.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Account sellerId(String sellerId) {
    this.sellerId = sellerId;
    return this;
  }

  /**
   * Client-specific, locally-unique, internal ID for the child account.
   * @return sellerId
   */
  @javax.annotation.Nullable
  public String getSellerId() {
    return sellerId;
  }

  public void setSellerId(String sellerId) {
    this.sellerId = sellerId;
  }


  public Account users(List<AccountUser> users) {
    this.users = users;
    return this;
  }

  public Account addUsersItem(AccountUser usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

  /**
   * Users with access to the account. Every account (except for subaccounts) must have at least one admin user.
   * @return users
   */
  @javax.annotation.Nullable
  public List<AccountUser> getUsers() {
    return users;
  }

  public void setUsers(List<AccountUser> users) {
    this.users = users;
  }


  public Account websiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

  /**
   * The merchant&#39;s website.
   * @return websiteUrl
   */
  @javax.annotation.Nullable
  public String getWebsiteUrl() {
    return websiteUrl;
  }

  public void setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }


  public Account youtubeChannelLinks(List<AccountYouTubeChannelLink> youtubeChannelLinks) {
    this.youtubeChannelLinks = youtubeChannelLinks;
    return this;
  }

  public Account addYoutubeChannelLinksItem(AccountYouTubeChannelLink youtubeChannelLinksItem) {
    if (this.youtubeChannelLinks == null) {
      this.youtubeChannelLinks = new ArrayList<>();
    }
    this.youtubeChannelLinks.add(youtubeChannelLinksItem);
    return this;
  }

  /**
   * Linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status &#x60;active&#x60; to the list. It will remain in a &#x60;pending&#x60; state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request, remove it from the list.
   * @return youtubeChannelLinks
   */
  @javax.annotation.Nullable
  public List<AccountYouTubeChannelLink> getYoutubeChannelLinks() {
    return youtubeChannelLinks;
  }

  public void setYoutubeChannelLinks(List<AccountYouTubeChannelLink> youtubeChannelLinks) {
    this.youtubeChannelLinks = youtubeChannelLinks;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return Objects.equals(this.accountManagement, account.accountManagement) &&
        Objects.equals(this.adsLinks, account.adsLinks) &&
        Objects.equals(this.adultContent, account.adultContent) &&
        Objects.equals(this.automaticImprovements, account.automaticImprovements) &&
        Objects.equals(this.automaticLabelIds, account.automaticLabelIds) &&
        Objects.equals(this.businessIdentity, account.businessIdentity) &&
        Objects.equals(this.businessInformation, account.businessInformation) &&
        Objects.equals(this.conversionSettings, account.conversionSettings) &&
        Objects.equals(this.cssId, account.cssId) &&
        Objects.equals(this.googleMyBusinessLink, account.googleMyBusinessLink) &&
        Objects.equals(this.id, account.id) &&
        Objects.equals(this.kind, account.kind) &&
        Objects.equals(this.labelIds, account.labelIds) &&
        Objects.equals(this.name, account.name) &&
        Objects.equals(this.sellerId, account.sellerId) &&
        Objects.equals(this.users, account.users) &&
        Objects.equals(this.websiteUrl, account.websiteUrl) &&
        Objects.equals(this.youtubeChannelLinks, account.youtubeChannelLinks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountManagement, adsLinks, adultContent, automaticImprovements, automaticLabelIds, businessIdentity, businessInformation, conversionSettings, cssId, googleMyBusinessLink, id, kind, labelIds, name, sellerId, users, websiteUrl, youtubeChannelLinks);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    sb.append("    accountManagement: ").append(toIndentedString(accountManagement)).append("\n");
    sb.append("    adsLinks: ").append(toIndentedString(adsLinks)).append("\n");
    sb.append("    adultContent: ").append(toIndentedString(adultContent)).append("\n");
    sb.append("    automaticImprovements: ").append(toIndentedString(automaticImprovements)).append("\n");
    sb.append("    automaticLabelIds: ").append(toIndentedString(automaticLabelIds)).append("\n");
    sb.append("    businessIdentity: ").append(toIndentedString(businessIdentity)).append("\n");
    sb.append("    businessInformation: ").append(toIndentedString(businessInformation)).append("\n");
    sb.append("    conversionSettings: ").append(toIndentedString(conversionSettings)).append("\n");
    sb.append("    cssId: ").append(toIndentedString(cssId)).append("\n");
    sb.append("    googleMyBusinessLink: ").append(toIndentedString(googleMyBusinessLink)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    labelIds: ").append(toIndentedString(labelIds)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sellerId: ").append(toIndentedString(sellerId)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    youtubeChannelLinks: ").append(toIndentedString(youtubeChannelLinks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountManagement");
    openapiFields.add("adsLinks");
    openapiFields.add("adultContent");
    openapiFields.add("automaticImprovements");
    openapiFields.add("automaticLabelIds");
    openapiFields.add("businessIdentity");
    openapiFields.add("businessInformation");
    openapiFields.add("conversionSettings");
    openapiFields.add("cssId");
    openapiFields.add("googleMyBusinessLink");
    openapiFields.add("id");
    openapiFields.add("kind");
    openapiFields.add("labelIds");
    openapiFields.add("name");
    openapiFields.add("sellerId");
    openapiFields.add("users");
    openapiFields.add("websiteUrl");
    openapiFields.add("youtubeChannelLinks");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Account
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Account.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Account is not found in the empty JSON string", Account.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Account.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Account` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accountManagement") != null && !jsonObj.get("accountManagement").isJsonNull()) && !jsonObj.get("accountManagement").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountManagement` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountManagement").toString()));
      }
      if (jsonObj.get("adsLinks") != null && !jsonObj.get("adsLinks").isJsonNull()) {
        JsonArray jsonArrayadsLinks = jsonObj.getAsJsonArray("adsLinks");
        if (jsonArrayadsLinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("adsLinks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `adsLinks` to be an array in the JSON string but got `%s`", jsonObj.get("adsLinks").toString()));
          }

          // validate the optional field `adsLinks` (array)
          for (int i = 0; i < jsonArrayadsLinks.size(); i++) {
            AccountAdsLink.validateJsonElement(jsonArrayadsLinks.get(i));
          };
        }
      }
      // validate the optional field `automaticImprovements`
      if (jsonObj.get("automaticImprovements") != null && !jsonObj.get("automaticImprovements").isJsonNull()) {
        AccountAutomaticImprovements.validateJsonElement(jsonObj.get("automaticImprovements"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("automaticLabelIds") != null && !jsonObj.get("automaticLabelIds").isJsonNull() && !jsonObj.get("automaticLabelIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `automaticLabelIds` to be an array in the JSON string but got `%s`", jsonObj.get("automaticLabelIds").toString()));
      }
      // validate the optional field `businessIdentity`
      if (jsonObj.get("businessIdentity") != null && !jsonObj.get("businessIdentity").isJsonNull()) {
        AccountBusinessIdentity.validateJsonElement(jsonObj.get("businessIdentity"));
      }
      // validate the optional field `businessInformation`
      if (jsonObj.get("businessInformation") != null && !jsonObj.get("businessInformation").isJsonNull()) {
        AccountBusinessInformation.validateJsonElement(jsonObj.get("businessInformation"));
      }
      // validate the optional field `conversionSettings`
      if (jsonObj.get("conversionSettings") != null && !jsonObj.get("conversionSettings").isJsonNull()) {
        AccountConversionSettings.validateJsonElement(jsonObj.get("conversionSettings"));
      }
      if ((jsonObj.get("cssId") != null && !jsonObj.get("cssId").isJsonNull()) && !jsonObj.get("cssId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cssId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cssId").toString()));
      }
      // validate the optional field `googleMyBusinessLink`
      if (jsonObj.get("googleMyBusinessLink") != null && !jsonObj.get("googleMyBusinessLink").isJsonNull()) {
        AccountGoogleMyBusinessLink.validateJsonElement(jsonObj.get("googleMyBusinessLink"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("labelIds") != null && !jsonObj.get("labelIds").isJsonNull() && !jsonObj.get("labelIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `labelIds` to be an array in the JSON string but got `%s`", jsonObj.get("labelIds").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("sellerId") != null && !jsonObj.get("sellerId").isJsonNull()) && !jsonObj.get("sellerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sellerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sellerId").toString()));
      }
      if (jsonObj.get("users") != null && !jsonObj.get("users").isJsonNull()) {
        JsonArray jsonArrayusers = jsonObj.getAsJsonArray("users");
        if (jsonArrayusers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("users").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `users` to be an array in the JSON string but got `%s`", jsonObj.get("users").toString()));
          }

          // validate the optional field `users` (array)
          for (int i = 0; i < jsonArrayusers.size(); i++) {
            AccountUser.validateJsonElement(jsonArrayusers.get(i));
          };
        }
      }
      if ((jsonObj.get("websiteUrl") != null && !jsonObj.get("websiteUrl").isJsonNull()) && !jsonObj.get("websiteUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `websiteUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("websiteUrl").toString()));
      }
      if (jsonObj.get("youtubeChannelLinks") != null && !jsonObj.get("youtubeChannelLinks").isJsonNull()) {
        JsonArray jsonArrayyoutubeChannelLinks = jsonObj.getAsJsonArray("youtubeChannelLinks");
        if (jsonArrayyoutubeChannelLinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("youtubeChannelLinks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `youtubeChannelLinks` to be an array in the JSON string but got `%s`", jsonObj.get("youtubeChannelLinks").toString()));
          }

          // validate the optional field `youtubeChannelLinks` (array)
          for (int i = 0; i < jsonArrayyoutubeChannelLinks.size(); i++) {
            AccountYouTubeChannelLink.validateJsonElement(jsonArrayyoutubeChannelLinks.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Account.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Account' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Account> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Account.class));

       return (TypeAdapter<T>) new TypeAdapter<Account>() {
           @Override
           public void write(JsonWriter out, Account value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Account read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Account given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Account
   * @throws IOException if the JSON string is invalid with respect to Account
   */
  public static Account fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Account.class);
  }

  /**
   * Convert an instance of Account to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

