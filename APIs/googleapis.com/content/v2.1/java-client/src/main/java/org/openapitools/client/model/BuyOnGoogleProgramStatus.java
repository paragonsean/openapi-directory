/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response message for the GetProgramStatus method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:00.560037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BuyOnGoogleProgramStatus {
  /**
   * Gets or Sets businessModel
   */
  @JsonAdapter(BusinessModelEnum.Adapter.class)
  public enum BusinessModelEnum {
    BUSINESS_MODEL_UNSPECIFIED("BUSINESS_MODEL_UNSPECIFIED"),
    
    MANUFACTURER("MANUFACTURER"),
    
    IMPORTER("IMPORTER"),
    
    RESELLER("RESELLER"),
    
    OTHER("OTHER");

    private String value;

    BusinessModelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BusinessModelEnum fromValue(String value) {
      for (BusinessModelEnum b : BusinessModelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<BusinessModelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BusinessModelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BusinessModelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BusinessModelEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      BusinessModelEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_BUSINESS_MODEL = "businessModel";
  @SerializedName(SERIALIZED_NAME_BUSINESS_MODEL)
  private List<BusinessModelEnum> businessModel = new ArrayList<>();

  public static final String SERIALIZED_NAME_CUSTOMER_SERVICE_PENDING_EMAIL = "customerServicePendingEmail";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SERVICE_PENDING_EMAIL)
  private String customerServicePendingEmail;

  public static final String SERIALIZED_NAME_CUSTOMER_SERVICE_PENDING_PHONE_NUMBER = "customerServicePendingPhoneNumber";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SERVICE_PENDING_PHONE_NUMBER)
  private String customerServicePendingPhoneNumber;

  public static final String SERIALIZED_NAME_CUSTOMER_SERVICE_PENDING_PHONE_REGION_CODE = "customerServicePendingPhoneRegionCode";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SERVICE_PENDING_PHONE_REGION_CODE)
  private String customerServicePendingPhoneRegionCode;

  public static final String SERIALIZED_NAME_CUSTOMER_SERVICE_VERIFIED_EMAIL = "customerServiceVerifiedEmail";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SERVICE_VERIFIED_EMAIL)
  private String customerServiceVerifiedEmail;

  public static final String SERIALIZED_NAME_CUSTOMER_SERVICE_VERIFIED_PHONE_NUMBER = "customerServiceVerifiedPhoneNumber";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SERVICE_VERIFIED_PHONE_NUMBER)
  private String customerServiceVerifiedPhoneNumber;

  public static final String SERIALIZED_NAME_CUSTOMER_SERVICE_VERIFIED_PHONE_REGION_CODE = "customerServiceVerifiedPhoneRegionCode";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SERVICE_VERIFIED_PHONE_REGION_CODE)
  private String customerServiceVerifiedPhoneRegionCode;

  /**
   * The channels through which the merchant is selling.
   */
  @JsonAdapter(OnlineSalesChannelEnum.Adapter.class)
  public enum OnlineSalesChannelEnum {
    ONLINE_SALES_CHANNEL_UNSPECIFIED("ONLINE_SALES_CHANNEL_UNSPECIFIED"),
    
    GOOGLE_EXCLUSIVE("GOOGLE_EXCLUSIVE"),
    
    GOOGLE_AND_OTHER_WEBSITES("GOOGLE_AND_OTHER_WEBSITES");

    private String value;

    OnlineSalesChannelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OnlineSalesChannelEnum fromValue(String value) {
      for (OnlineSalesChannelEnum b : OnlineSalesChannelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OnlineSalesChannelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OnlineSalesChannelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OnlineSalesChannelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OnlineSalesChannelEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OnlineSalesChannelEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ONLINE_SALES_CHANNEL = "onlineSalesChannel";
  @SerializedName(SERIALIZED_NAME_ONLINE_SALES_CHANNEL)
  private OnlineSalesChannelEnum onlineSalesChannel;

  /**
   * Output only. The current participation stage for the program.
   */
  @JsonAdapter(ParticipationStageEnum.Adapter.class)
  public enum ParticipationStageEnum {
    PROGRAM_PARTICIPATION_STAGE_UNSPECIFIED("PROGRAM_PARTICIPATION_STAGE_UNSPECIFIED"),
    
    NOT_ELIGIBLE("NOT_ELIGIBLE"),
    
    ELIGIBLE("ELIGIBLE"),
    
    ONBOARDING("ONBOARDING"),
    
    ELIGIBLE_FOR_REVIEW("ELIGIBLE_FOR_REVIEW"),
    
    PENDING_REVIEW("PENDING_REVIEW"),
    
    REVIEW_DISAPPROVED("REVIEW_DISAPPROVED"),
    
    ACTIVE("ACTIVE"),
    
    PAUSED("PAUSED"),
    
    DEPRECATED("DEPRECATED");

    private String value;

    ParticipationStageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ParticipationStageEnum fromValue(String value) {
      for (ParticipationStageEnum b : ParticipationStageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ParticipationStageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ParticipationStageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ParticipationStageEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ParticipationStageEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ParticipationStageEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PARTICIPATION_STAGE = "participationStage";
  @SerializedName(SERIALIZED_NAME_PARTICIPATION_STAGE)
  private ParticipationStageEnum participationStage;

  public BuyOnGoogleProgramStatus() {
  }

  public BuyOnGoogleProgramStatus(
     String customerServiceVerifiedEmail, 
     String customerServiceVerifiedPhoneNumber, 
     String customerServiceVerifiedPhoneRegionCode, 
     ParticipationStageEnum participationStage
  ) {
    this();
    this.customerServiceVerifiedEmail = customerServiceVerifiedEmail;
    this.customerServiceVerifiedPhoneNumber = customerServiceVerifiedPhoneNumber;
    this.customerServiceVerifiedPhoneRegionCode = customerServiceVerifiedPhoneRegionCode;
    this.participationStage = participationStage;
  }

  public BuyOnGoogleProgramStatus businessModel(List<BusinessModelEnum> businessModel) {
    this.businessModel = businessModel;
    return this;
  }

  public BuyOnGoogleProgramStatus addBusinessModelItem(BusinessModelEnum businessModelItem) {
    if (this.businessModel == null) {
      this.businessModel = new ArrayList<>();
    }
    this.businessModel.add(businessModelItem);
    return this;
  }

  /**
   * The business models in which merchant participates.
   * @return businessModel
   */
  @javax.annotation.Nullable
  public List<BusinessModelEnum> getBusinessModel() {
    return businessModel;
  }

  public void setBusinessModel(List<BusinessModelEnum> businessModel) {
    this.businessModel = businessModel;
  }


  public BuyOnGoogleProgramStatus customerServicePendingEmail(String customerServicePendingEmail) {
    this.customerServicePendingEmail = customerServicePendingEmail;
    return this;
  }

  /**
   * The customer service pending email. After verification this field becomes empty.
   * @return customerServicePendingEmail
   */
  @javax.annotation.Nullable
  public String getCustomerServicePendingEmail() {
    return customerServicePendingEmail;
  }

  public void setCustomerServicePendingEmail(String customerServicePendingEmail) {
    this.customerServicePendingEmail = customerServicePendingEmail;
  }


  public BuyOnGoogleProgramStatus customerServicePendingPhoneNumber(String customerServicePendingPhoneNumber) {
    this.customerServicePendingPhoneNumber = customerServicePendingPhoneNumber;
    return this;
  }

  /**
   * The pending phone number specified for BuyOnGoogle program. It might be different than account level phone number. In order to update this field the customer_service_pending_phone_region_code must also be set. After verification this field becomes empty.
   * @return customerServicePendingPhoneNumber
   */
  @javax.annotation.Nullable
  public String getCustomerServicePendingPhoneNumber() {
    return customerServicePendingPhoneNumber;
  }

  public void setCustomerServicePendingPhoneNumber(String customerServicePendingPhoneNumber) {
    this.customerServicePendingPhoneNumber = customerServicePendingPhoneNumber;
  }


  public BuyOnGoogleProgramStatus customerServicePendingPhoneRegionCode(String customerServicePendingPhoneRegionCode) {
    this.customerServicePendingPhoneRegionCode = customerServicePendingPhoneRegionCode;
    return this;
  }

  /**
   * Two letter country code for the pending phone number, for example &#x60;CA&#x60; for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes. In order to update this field the customer_service_pending_phone_number must also be set. After verification this field becomes empty.
   * @return customerServicePendingPhoneRegionCode
   */
  @javax.annotation.Nullable
  public String getCustomerServicePendingPhoneRegionCode() {
    return customerServicePendingPhoneRegionCode;
  }

  public void setCustomerServicePendingPhoneRegionCode(String customerServicePendingPhoneRegionCode) {
    this.customerServicePendingPhoneRegionCode = customerServicePendingPhoneRegionCode;
  }


  /**
   * Output only. The customer service verified email.
   * @return customerServiceVerifiedEmail
   */
  @javax.annotation.Nullable
  public String getCustomerServiceVerifiedEmail() {
    return customerServiceVerifiedEmail;
  }



  /**
   * Output only. The verified phone number specified for BuyOnGoogle program. It might be different than account level phone number.
   * @return customerServiceVerifiedPhoneNumber
   */
  @javax.annotation.Nullable
  public String getCustomerServiceVerifiedPhoneNumber() {
    return customerServiceVerifiedPhoneNumber;
  }



  /**
   * Output only. Two letter country code for the verified phone number, for example &#x60;CA&#x60; for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes.
   * @return customerServiceVerifiedPhoneRegionCode
   */
  @javax.annotation.Nullable
  public String getCustomerServiceVerifiedPhoneRegionCode() {
    return customerServiceVerifiedPhoneRegionCode;
  }



  public BuyOnGoogleProgramStatus onlineSalesChannel(OnlineSalesChannelEnum onlineSalesChannel) {
    this.onlineSalesChannel = onlineSalesChannel;
    return this;
  }

  /**
   * The channels through which the merchant is selling.
   * @return onlineSalesChannel
   */
  @javax.annotation.Nullable
  public OnlineSalesChannelEnum getOnlineSalesChannel() {
    return onlineSalesChannel;
  }

  public void setOnlineSalesChannel(OnlineSalesChannelEnum onlineSalesChannel) {
    this.onlineSalesChannel = onlineSalesChannel;
  }


  /**
   * Output only. The current participation stage for the program.
   * @return participationStage
   */
  @javax.annotation.Nullable
  public ParticipationStageEnum getParticipationStage() {
    return participationStage;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuyOnGoogleProgramStatus buyOnGoogleProgramStatus = (BuyOnGoogleProgramStatus) o;
    return Objects.equals(this.businessModel, buyOnGoogleProgramStatus.businessModel) &&
        Objects.equals(this.customerServicePendingEmail, buyOnGoogleProgramStatus.customerServicePendingEmail) &&
        Objects.equals(this.customerServicePendingPhoneNumber, buyOnGoogleProgramStatus.customerServicePendingPhoneNumber) &&
        Objects.equals(this.customerServicePendingPhoneRegionCode, buyOnGoogleProgramStatus.customerServicePendingPhoneRegionCode) &&
        Objects.equals(this.customerServiceVerifiedEmail, buyOnGoogleProgramStatus.customerServiceVerifiedEmail) &&
        Objects.equals(this.customerServiceVerifiedPhoneNumber, buyOnGoogleProgramStatus.customerServiceVerifiedPhoneNumber) &&
        Objects.equals(this.customerServiceVerifiedPhoneRegionCode, buyOnGoogleProgramStatus.customerServiceVerifiedPhoneRegionCode) &&
        Objects.equals(this.onlineSalesChannel, buyOnGoogleProgramStatus.onlineSalesChannel) &&
        Objects.equals(this.participationStage, buyOnGoogleProgramStatus.participationStage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(businessModel, customerServicePendingEmail, customerServicePendingPhoneNumber, customerServicePendingPhoneRegionCode, customerServiceVerifiedEmail, customerServiceVerifiedPhoneNumber, customerServiceVerifiedPhoneRegionCode, onlineSalesChannel, participationStage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuyOnGoogleProgramStatus {\n");
    sb.append("    businessModel: ").append(toIndentedString(businessModel)).append("\n");
    sb.append("    customerServicePendingEmail: ").append(toIndentedString(customerServicePendingEmail)).append("\n");
    sb.append("    customerServicePendingPhoneNumber: ").append(toIndentedString(customerServicePendingPhoneNumber)).append("\n");
    sb.append("    customerServicePendingPhoneRegionCode: ").append(toIndentedString(customerServicePendingPhoneRegionCode)).append("\n");
    sb.append("    customerServiceVerifiedEmail: ").append(toIndentedString(customerServiceVerifiedEmail)).append("\n");
    sb.append("    customerServiceVerifiedPhoneNumber: ").append(toIndentedString(customerServiceVerifiedPhoneNumber)).append("\n");
    sb.append("    customerServiceVerifiedPhoneRegionCode: ").append(toIndentedString(customerServiceVerifiedPhoneRegionCode)).append("\n");
    sb.append("    onlineSalesChannel: ").append(toIndentedString(onlineSalesChannel)).append("\n");
    sb.append("    participationStage: ").append(toIndentedString(participationStage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("businessModel");
    openapiFields.add("customerServicePendingEmail");
    openapiFields.add("customerServicePendingPhoneNumber");
    openapiFields.add("customerServicePendingPhoneRegionCode");
    openapiFields.add("customerServiceVerifiedEmail");
    openapiFields.add("customerServiceVerifiedPhoneNumber");
    openapiFields.add("customerServiceVerifiedPhoneRegionCode");
    openapiFields.add("onlineSalesChannel");
    openapiFields.add("participationStage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BuyOnGoogleProgramStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BuyOnGoogleProgramStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BuyOnGoogleProgramStatus is not found in the empty JSON string", BuyOnGoogleProgramStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BuyOnGoogleProgramStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BuyOnGoogleProgramStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("businessModel") != null && !jsonObj.get("businessModel").isJsonNull() && !jsonObj.get("businessModel").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessModel` to be an array in the JSON string but got `%s`", jsonObj.get("businessModel").toString()));
      }
      if ((jsonObj.get("customerServicePendingEmail") != null && !jsonObj.get("customerServicePendingEmail").isJsonNull()) && !jsonObj.get("customerServicePendingEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerServicePendingEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerServicePendingEmail").toString()));
      }
      if ((jsonObj.get("customerServicePendingPhoneNumber") != null && !jsonObj.get("customerServicePendingPhoneNumber").isJsonNull()) && !jsonObj.get("customerServicePendingPhoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerServicePendingPhoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerServicePendingPhoneNumber").toString()));
      }
      if ((jsonObj.get("customerServicePendingPhoneRegionCode") != null && !jsonObj.get("customerServicePendingPhoneRegionCode").isJsonNull()) && !jsonObj.get("customerServicePendingPhoneRegionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerServicePendingPhoneRegionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerServicePendingPhoneRegionCode").toString()));
      }
      if ((jsonObj.get("customerServiceVerifiedEmail") != null && !jsonObj.get("customerServiceVerifiedEmail").isJsonNull()) && !jsonObj.get("customerServiceVerifiedEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerServiceVerifiedEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerServiceVerifiedEmail").toString()));
      }
      if ((jsonObj.get("customerServiceVerifiedPhoneNumber") != null && !jsonObj.get("customerServiceVerifiedPhoneNumber").isJsonNull()) && !jsonObj.get("customerServiceVerifiedPhoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerServiceVerifiedPhoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerServiceVerifiedPhoneNumber").toString()));
      }
      if ((jsonObj.get("customerServiceVerifiedPhoneRegionCode") != null && !jsonObj.get("customerServiceVerifiedPhoneRegionCode").isJsonNull()) && !jsonObj.get("customerServiceVerifiedPhoneRegionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerServiceVerifiedPhoneRegionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerServiceVerifiedPhoneRegionCode").toString()));
      }
      if ((jsonObj.get("onlineSalesChannel") != null && !jsonObj.get("onlineSalesChannel").isJsonNull()) && !jsonObj.get("onlineSalesChannel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `onlineSalesChannel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("onlineSalesChannel").toString()));
      }
      // validate the optional field `onlineSalesChannel`
      if (jsonObj.get("onlineSalesChannel") != null && !jsonObj.get("onlineSalesChannel").isJsonNull()) {
        OnlineSalesChannelEnum.validateJsonElement(jsonObj.get("onlineSalesChannel"));
      }
      if ((jsonObj.get("participationStage") != null && !jsonObj.get("participationStage").isJsonNull()) && !jsonObj.get("participationStage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `participationStage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("participationStage").toString()));
      }
      // validate the optional field `participationStage`
      if (jsonObj.get("participationStage") != null && !jsonObj.get("participationStage").isJsonNull()) {
        ParticipationStageEnum.validateJsonElement(jsonObj.get("participationStage"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BuyOnGoogleProgramStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BuyOnGoogleProgramStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BuyOnGoogleProgramStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BuyOnGoogleProgramStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<BuyOnGoogleProgramStatus>() {
           @Override
           public void write(JsonWriter out, BuyOnGoogleProgramStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BuyOnGoogleProgramStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BuyOnGoogleProgramStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BuyOnGoogleProgramStatus
   * @throws IOException if the JSON string is invalid with respect to BuyOnGoogleProgramStatus
   */
  public static BuyOnGoogleProgramStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BuyOnGoogleProgramStatus.class);
  }

  /**
   * Convert an instance of BuyOnGoogleProgramStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

