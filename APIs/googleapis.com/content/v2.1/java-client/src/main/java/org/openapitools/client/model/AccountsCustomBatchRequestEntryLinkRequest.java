/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AccountsCustomBatchRequestEntryLinkRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:00.560037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccountsCustomBatchRequestEntryLinkRequest {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_LINK_TYPE = "linkType";
  @SerializedName(SERIALIZED_NAME_LINK_TYPE)
  private String linkType;

  public static final String SERIALIZED_NAME_LINKED_ACCOUNT_ID = "linkedAccountId";
  @SerializedName(SERIALIZED_NAME_LINKED_ACCOUNT_ID)
  private String linkedAccountId;

  public static final String SERIALIZED_NAME_SERVICES = "services";
  @SerializedName(SERIALIZED_NAME_SERVICES)
  private List<String> services = new ArrayList<>();

  public AccountsCustomBatchRequestEntryLinkRequest() {
  }

  public AccountsCustomBatchRequestEntryLinkRequest action(String action) {
    this.action = action;
    return this;
  }

  /**
   * Action to perform for this link. The &#x60;\&quot;request\&quot;&#x60; action is only available to select merchants. Acceptable values are: - \&quot;&#x60;approve&#x60;\&quot; - \&quot;&#x60;remove&#x60;\&quot; - \&quot;&#x60;request&#x60;\&quot; 
   * @return action
   */
  @javax.annotation.Nullable
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  public AccountsCustomBatchRequestEntryLinkRequest linkType(String linkType) {
    this.linkType = linkType;
    return this;
  }

  /**
   * Type of the link between the two accounts. Acceptable values are: - \&quot;&#x60;channelPartner&#x60;\&quot; - \&quot;&#x60;eCommercePlatform&#x60;\&quot; - \&quot;&#x60;paymentServiceProvider&#x60;\&quot; - \&quot;&#x60;localProductManager&#x60;\&quot; 
   * @return linkType
   */
  @javax.annotation.Nullable
  public String getLinkType() {
    return linkType;
  }

  public void setLinkType(String linkType) {
    this.linkType = linkType;
  }


  public AccountsCustomBatchRequestEntryLinkRequest linkedAccountId(String linkedAccountId) {
    this.linkedAccountId = linkedAccountId;
    return this;
  }

  /**
   * The ID of the linked account.
   * @return linkedAccountId
   */
  @javax.annotation.Nullable
  public String getLinkedAccountId() {
    return linkedAccountId;
  }

  public void setLinkedAccountId(String linkedAccountId) {
    this.linkedAccountId = linkedAccountId;
  }


  public AccountsCustomBatchRequestEntryLinkRequest services(List<String> services) {
    this.services = services;
    return this;
  }

  public AccountsCustomBatchRequestEntryLinkRequest addServicesItem(String servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<>();
    }
    this.services.add(servicesItem);
    return this;
  }

  /**
   * Provided services. Acceptable values are: - \&quot;&#x60;shoppingAdsProductManagement&#x60;\&quot; - \&quot;&#x60;shoppingActionsProductManagement&#x60;\&quot; - \&quot;&#x60;shoppingActionsOrderManagement&#x60;\&quot; - \&quot;&#x60;paymentProcessing&#x60;\&quot; - \&quot;&#x60;localProductManagement&#x60;\&quot; 
   * @return services
   */
  @javax.annotation.Nullable
  public List<String> getServices() {
    return services;
  }

  public void setServices(List<String> services) {
    this.services = services;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountsCustomBatchRequestEntryLinkRequest accountsCustomBatchRequestEntryLinkRequest = (AccountsCustomBatchRequestEntryLinkRequest) o;
    return Objects.equals(this.action, accountsCustomBatchRequestEntryLinkRequest.action) &&
        Objects.equals(this.linkType, accountsCustomBatchRequestEntryLinkRequest.linkType) &&
        Objects.equals(this.linkedAccountId, accountsCustomBatchRequestEntryLinkRequest.linkedAccountId) &&
        Objects.equals(this.services, accountsCustomBatchRequestEntryLinkRequest.services);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, linkType, linkedAccountId, services);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountsCustomBatchRequestEntryLinkRequest {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    linkType: ").append(toIndentedString(linkType)).append("\n");
    sb.append("    linkedAccountId: ").append(toIndentedString(linkedAccountId)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("linkType");
    openapiFields.add("linkedAccountId");
    openapiFields.add("services");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountsCustomBatchRequestEntryLinkRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountsCustomBatchRequestEntryLinkRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountsCustomBatchRequestEntryLinkRequest is not found in the empty JSON string", AccountsCustomBatchRequestEntryLinkRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountsCustomBatchRequestEntryLinkRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountsCustomBatchRequestEntryLinkRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if ((jsonObj.get("linkType") != null && !jsonObj.get("linkType").isJsonNull()) && !jsonObj.get("linkType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkType").toString()));
      }
      if ((jsonObj.get("linkedAccountId") != null && !jsonObj.get("linkedAccountId").isJsonNull()) && !jsonObj.get("linkedAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedAccountId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("services") != null && !jsonObj.get("services").isJsonNull() && !jsonObj.get("services").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `services` to be an array in the JSON string but got `%s`", jsonObj.get("services").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountsCustomBatchRequestEntryLinkRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountsCustomBatchRequestEntryLinkRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountsCustomBatchRequestEntryLinkRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountsCustomBatchRequestEntryLinkRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountsCustomBatchRequestEntryLinkRequest>() {
           @Override
           public void write(JsonWriter out, AccountsCustomBatchRequestEntryLinkRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountsCustomBatchRequestEntryLinkRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountsCustomBatchRequestEntryLinkRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountsCustomBatchRequestEntryLinkRequest
   * @throws IOException if the JSON string is invalid with respect to AccountsCustomBatchRequestEntryLinkRequest
   */
  public static AccountsCustomBatchRequestEntryLinkRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountsCustomBatchRequestEntryLinkRequest.class);
  }

  /**
   * Convert an instance of AccountsCustomBatchRequestEntryLinkRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

