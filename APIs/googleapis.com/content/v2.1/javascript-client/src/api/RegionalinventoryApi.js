/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RegionalInventory from '../model/RegionalInventory';
import RegionalinventoryCustomBatchRequest from '../model/RegionalinventoryCustomBatchRequest';
import RegionalinventoryCustomBatchResponse from '../model/RegionalinventoryCustomBatchResponse';

/**
* Regionalinventory service.
* @module api/RegionalinventoryApi
* @version v2.1
*/
export default class RegionalinventoryApi {

    /**
    * Constructs a new RegionalinventoryApi. 
    * @alias module:api/RegionalinventoryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the contentRegionalinventoryCustombatch operation.
     * @callback module:api/RegionalinventoryApi~contentRegionalinventoryCustombatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegionalinventoryCustomBatchResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates regional inventory for multiple products or regions in a single request.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/RegionalinventoryCustomBatchRequest} [regionalinventoryCustomBatchRequest] 
     * @param {module:api/RegionalinventoryApi~contentRegionalinventoryCustombatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegionalinventoryCustomBatchResponse}
     */
    contentRegionalinventoryCustombatch(opts, callback) {
      opts = opts || {};
      let postBody = opts['regionalinventoryCustomBatchRequest'];

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RegionalinventoryCustomBatchResponse;
      return this.apiClient.callApi(
        '/regionalinventory/batch', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the contentRegionalinventoryInsert operation.
     * @callback module:api/RegionalinventoryApi~contentRegionalinventoryInsertCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegionalInventory} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the regional inventory of a product in your Merchant Center account. If a regional inventory with the same region ID already exists, this method updates that entry.
     * @param {String} merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
     * @param {String} productId The REST ID of the product for which to update the regional inventory.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/RegionalInventory} [regionalInventory] 
     * @param {module:api/RegionalinventoryApi~contentRegionalinventoryInsertCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegionalInventory}
     */
    contentRegionalinventoryInsert(merchantId, productId, opts, callback) {
      opts = opts || {};
      let postBody = opts['regionalInventory'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling contentRegionalinventoryInsert");
      }
      // verify the required parameter 'productId' is set
      if (productId === undefined || productId === null) {
        throw new Error("Missing the required parameter 'productId' when calling contentRegionalinventoryInsert");
      }

      let pathParams = {
        'merchantId': merchantId,
        'productId': productId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RegionalInventory;
      return this.apiClient.callApi(
        '/{merchantId}/products/{productId}/regionalinventory', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
