/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReturnPolicyPolicy model module.
 * @module model/ReturnPolicyPolicy
 * @version v2.1
 */
class ReturnPolicyPolicy {
    /**
     * Constructs a new <code>ReturnPolicyPolicy</code>.
     * @alias module:model/ReturnPolicyPolicy
     */
    constructor() { 
        
        ReturnPolicyPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReturnPolicyPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReturnPolicyPolicy} obj Optional instance to populate.
     * @return {module:model/ReturnPolicyPolicy} The populated <code>ReturnPolicyPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReturnPolicyPolicy();

            if (data.hasOwnProperty('lastReturnDate')) {
                obj['lastReturnDate'] = ApiClient.convertToType(data['lastReturnDate'], 'String');
            }
            if (data.hasOwnProperty('numberOfDays')) {
                obj['numberOfDays'] = ApiClient.convertToType(data['numberOfDays'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReturnPolicyPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReturnPolicyPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['lastReturnDate'] && !(typeof data['lastReturnDate'] === 'string' || data['lastReturnDate'] instanceof String)) {
            throw new Error("Expected the field `lastReturnDate` to be a primitive type in the JSON string but got " + data['lastReturnDate']);
        }
        // ensure the json data is a string
        if (data['numberOfDays'] && !(typeof data['numberOfDays'] === 'string' || data['numberOfDays'] instanceof String)) {
            throw new Error("Expected the field `numberOfDays` to be a primitive type in the JSON string but got " + data['numberOfDays']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Required. Last day for returning the items. In ISO 8601 format. When specifying the return window like this, set the policy type to \"lastReturnDate\". Use this for seasonal overrides only.
 * @member {String} lastReturnDate
 */
ReturnPolicyPolicy.prototype['lastReturnDate'] = undefined;

/**
 * The number of days items can be returned after delivery, where one day is defined to be 24 hours after the delivery timestamp. When specifying the return window like this, set the policy type to \"numberOfDaysAfterDelivery\". Acceptable values are 30, 45, 60, 90, 100, 180, 270 and 365 for the default policy. Additional policies further allow 14, 15, 21 and 28 days, but note that for most items a minimum of 30 days is required for returns. Exceptions may be made for electronics. A policy of less than 30 days can only be applied to those items.
 * @member {String} numberOfDays
 */
ReturnPolicyPolicy.prototype['numberOfDays'] = undefined;

/**
 * Policy type. Use \"lastReturnDate\" for seasonal overrides only. Note that for most items a minimum of 30 days is required for returns. Exceptions may be made for electronics or non-returnable items such as food, perishables, and living things. A policy of less than 30 days can only be applied to those items. Acceptable values are: - \"`lastReturnDate`\" - \"`lifetimeReturns`\" - \"`noReturns`\" - \"`numberOfDaysAfterDelivery`\" 
 * @member {String} type
 */
ReturnPolicyPolicy.prototype['type'] = undefined;






export default ReturnPolicyPolicy;

