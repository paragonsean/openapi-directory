/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvoiceSummary from './InvoiceSummary';
import ShipmentInvoiceLineItemInvoice from './ShipmentInvoiceLineItemInvoice';

/**
 * The ShipmentInvoice model module.
 * @module model/ShipmentInvoice
 * @version v2.1
 */
class ShipmentInvoice {
    /**
     * Constructs a new <code>ShipmentInvoice</code>.
     * @alias module:model/ShipmentInvoice
     */
    constructor() { 
        
        ShipmentInvoice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShipmentInvoice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShipmentInvoice} obj Optional instance to populate.
     * @return {module:model/ShipmentInvoice} The populated <code>ShipmentInvoice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShipmentInvoice();

            if (data.hasOwnProperty('invoiceSummary')) {
                obj['invoiceSummary'] = InvoiceSummary.constructFromObject(data['invoiceSummary']);
            }
            if (data.hasOwnProperty('lineItemInvoices')) {
                obj['lineItemInvoices'] = ApiClient.convertToType(data['lineItemInvoices'], [ShipmentInvoiceLineItemInvoice]);
            }
            if (data.hasOwnProperty('shipmentGroupId')) {
                obj['shipmentGroupId'] = ApiClient.convertToType(data['shipmentGroupId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShipmentInvoice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShipmentInvoice</code>.
     */
    static validateJSON(data) {
        // validate the optional field `invoiceSummary`
        if (data['invoiceSummary']) { // data not null
          InvoiceSummary.validateJSON(data['invoiceSummary']);
        }
        if (data['lineItemInvoices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['lineItemInvoices'])) {
                throw new Error("Expected the field `lineItemInvoices` to be an array in the JSON data but got " + data['lineItemInvoices']);
            }
            // validate the optional field `lineItemInvoices` (array)
            for (const item of data['lineItemInvoices']) {
                ShipmentInvoiceLineItemInvoice.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['shipmentGroupId'] && !(typeof data['shipmentGroupId'] === 'string' || data['shipmentGroupId'] instanceof String)) {
            throw new Error("Expected the field `shipmentGroupId` to be a primitive type in the JSON string but got " + data['shipmentGroupId']);
        }

        return true;
    }


}



/**
 * @member {module:model/InvoiceSummary} invoiceSummary
 */
ShipmentInvoice.prototype['invoiceSummary'] = undefined;

/**
 * [required] Invoice details per line item.
 * @member {Array.<module:model/ShipmentInvoiceLineItemInvoice>} lineItemInvoices
 */
ShipmentInvoice.prototype['lineItemInvoices'] = undefined;

/**
 * [required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges.
 * @member {String} shipmentGroupId
 */
ShipmentInvoice.prototype['shipmentGroupId'] = undefined;






export default ShipmentInvoice;

