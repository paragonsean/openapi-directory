/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LiaInventorySettings model module.
 * @module model/LiaInventorySettings
 * @version v2.1
 */
class LiaInventorySettings {
    /**
     * Constructs a new <code>LiaInventorySettings</code>.
     * @alias module:model/LiaInventorySettings
     */
    constructor() { 
        
        LiaInventorySettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LiaInventorySettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiaInventorySettings} obj Optional instance to populate.
     * @return {module:model/LiaInventorySettings} The populated <code>LiaInventorySettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiaInventorySettings();

            if (data.hasOwnProperty('inventoryVerificationContactEmail')) {
                obj['inventoryVerificationContactEmail'] = ApiClient.convertToType(data['inventoryVerificationContactEmail'], 'String');
            }
            if (data.hasOwnProperty('inventoryVerificationContactName')) {
                obj['inventoryVerificationContactName'] = ApiClient.convertToType(data['inventoryVerificationContactName'], 'String');
            }
            if (data.hasOwnProperty('inventoryVerificationContactStatus')) {
                obj['inventoryVerificationContactStatus'] = ApiClient.convertToType(data['inventoryVerificationContactStatus'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiaInventorySettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiaInventorySettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['inventoryVerificationContactEmail'] && !(typeof data['inventoryVerificationContactEmail'] === 'string' || data['inventoryVerificationContactEmail'] instanceof String)) {
            throw new Error("Expected the field `inventoryVerificationContactEmail` to be a primitive type in the JSON string but got " + data['inventoryVerificationContactEmail']);
        }
        // ensure the json data is a string
        if (data['inventoryVerificationContactName'] && !(typeof data['inventoryVerificationContactName'] === 'string' || data['inventoryVerificationContactName'] instanceof String)) {
            throw new Error("Expected the field `inventoryVerificationContactName` to be a primitive type in the JSON string but got " + data['inventoryVerificationContactName']);
        }
        // ensure the json data is a string
        if (data['inventoryVerificationContactStatus'] && !(typeof data['inventoryVerificationContactStatus'] === 'string' || data['inventoryVerificationContactStatus'] instanceof String)) {
            throw new Error("Expected the field `inventoryVerificationContactStatus` to be a primitive type in the JSON string but got " + data['inventoryVerificationContactStatus']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The email of the contact for the inventory verification process.
 * @member {String} inventoryVerificationContactEmail
 */
LiaInventorySettings.prototype['inventoryVerificationContactEmail'] = undefined;

/**
 * The name of the contact for the inventory verification process.
 * @member {String} inventoryVerificationContactName
 */
LiaInventorySettings.prototype['inventoryVerificationContactName'] = undefined;

/**
 * The status of the verification contact. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" 
 * @member {String} inventoryVerificationContactStatus
 */
LiaInventorySettings.prototype['inventoryVerificationContactStatus'] = undefined;

/**
 * The status of the inventory verification process. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" 
 * @member {String} status
 */
LiaInventorySettings.prototype['status'] = undefined;






export default LiaInventorySettings;

