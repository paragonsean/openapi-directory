/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MonetaryAmount from './MonetaryAmount';

/**
 * The ReturnPricingInfo model module.
 * @module model/ReturnPricingInfo
 * @version v2.1
 */
class ReturnPricingInfo {
    /**
     * Constructs a new <code>ReturnPricingInfo</code>.
     * @alias module:model/ReturnPricingInfo
     */
    constructor() { 
        
        ReturnPricingInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReturnPricingInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReturnPricingInfo} obj Optional instance to populate.
     * @return {module:model/ReturnPricingInfo} The populated <code>ReturnPricingInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReturnPricingInfo();

            if (data.hasOwnProperty('chargeReturnShippingFee')) {
                obj['chargeReturnShippingFee'] = ApiClient.convertToType(data['chargeReturnShippingFee'], 'Boolean');
            }
            if (data.hasOwnProperty('maxReturnShippingFee')) {
                obj['maxReturnShippingFee'] = MonetaryAmount.constructFromObject(data['maxReturnShippingFee']);
            }
            if (data.hasOwnProperty('refundableItemsTotalAmount')) {
                obj['refundableItemsTotalAmount'] = MonetaryAmount.constructFromObject(data['refundableItemsTotalAmount']);
            }
            if (data.hasOwnProperty('refundableShippingAmount')) {
                obj['refundableShippingAmount'] = MonetaryAmount.constructFromObject(data['refundableShippingAmount']);
            }
            if (data.hasOwnProperty('totalRefundedAmount')) {
                obj['totalRefundedAmount'] = MonetaryAmount.constructFromObject(data['totalRefundedAmount']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReturnPricingInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReturnPricingInfo</code>.
     */
    static validateJSON(data) {
        // validate the optional field `maxReturnShippingFee`
        if (data['maxReturnShippingFee']) { // data not null
          MonetaryAmount.validateJSON(data['maxReturnShippingFee']);
        }
        // validate the optional field `refundableItemsTotalAmount`
        if (data['refundableItemsTotalAmount']) { // data not null
          MonetaryAmount.validateJSON(data['refundableItemsTotalAmount']);
        }
        // validate the optional field `refundableShippingAmount`
        if (data['refundableShippingAmount']) { // data not null
          MonetaryAmount.validateJSON(data['refundableShippingAmount']);
        }
        // validate the optional field `totalRefundedAmount`
        if (data['totalRefundedAmount']) { // data not null
          MonetaryAmount.validateJSON(data['totalRefundedAmount']);
        }

        return true;
    }


}



/**
 * Default option for whether merchant should charge the customer for return shipping costs, based on customer selected return reason and merchant's return policy for the items being returned.
 * @member {Boolean} chargeReturnShippingFee
 */
ReturnPricingInfo.prototype['chargeReturnShippingFee'] = undefined;

/**
 * @member {module:model/MonetaryAmount} maxReturnShippingFee
 */
ReturnPricingInfo.prototype['maxReturnShippingFee'] = undefined;

/**
 * @member {module:model/MonetaryAmount} refundableItemsTotalAmount
 */
ReturnPricingInfo.prototype['refundableItemsTotalAmount'] = undefined;

/**
 * @member {module:model/MonetaryAmount} refundableShippingAmount
 */
ReturnPricingInfo.prototype['refundableShippingAmount'] = undefined;

/**
 * @member {module:model/MonetaryAmount} totalRefundedAmount
 */
ReturnPricingInfo.prototype['totalRefundedAmount'] = undefined;






export default ReturnPricingInfo;

