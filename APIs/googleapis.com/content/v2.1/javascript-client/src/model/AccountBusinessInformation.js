/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountAddress from './AccountAddress';
import AccountCustomerService from './AccountCustomerService';

/**
 * The AccountBusinessInformation model module.
 * @module model/AccountBusinessInformation
 * @version v2.1
 */
class AccountBusinessInformation {
    /**
     * Constructs a new <code>AccountBusinessInformation</code>.
     * @alias module:model/AccountBusinessInformation
     */
    constructor() { 
        
        AccountBusinessInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountBusinessInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountBusinessInformation} obj Optional instance to populate.
     * @return {module:model/AccountBusinessInformation} The populated <code>AccountBusinessInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountBusinessInformation();

            if (data.hasOwnProperty('address')) {
                obj['address'] = AccountAddress.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('customerService')) {
                obj['customerService'] = AccountCustomerService.constructFromObject(data['customerService']);
            }
            if (data.hasOwnProperty('koreanBusinessRegistrationNumber')) {
                obj['koreanBusinessRegistrationNumber'] = ApiClient.convertToType(data['koreanBusinessRegistrationNumber'], 'String');
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
            if (data.hasOwnProperty('phoneVerificationStatus')) {
                obj['phoneVerificationStatus'] = ApiClient.convertToType(data['phoneVerificationStatus'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountBusinessInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountBusinessInformation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `address`
        if (data['address']) { // data not null
          AccountAddress.validateJSON(data['address']);
        }
        // validate the optional field `customerService`
        if (data['customerService']) { // data not null
          AccountCustomerService.validateJSON(data['customerService']);
        }
        // ensure the json data is a string
        if (data['koreanBusinessRegistrationNumber'] && !(typeof data['koreanBusinessRegistrationNumber'] === 'string' || data['koreanBusinessRegistrationNumber'] instanceof String)) {
            throw new Error("Expected the field `koreanBusinessRegistrationNumber` to be a primitive type in the JSON string but got " + data['koreanBusinessRegistrationNumber']);
        }
        // ensure the json data is a string
        if (data['phoneNumber'] && !(typeof data['phoneNumber'] === 'string' || data['phoneNumber'] instanceof String)) {
            throw new Error("Expected the field `phoneNumber` to be a primitive type in the JSON string but got " + data['phoneNumber']);
        }
        // ensure the json data is a string
        if (data['phoneVerificationStatus'] && !(typeof data['phoneVerificationStatus'] === 'string' || data['phoneVerificationStatus'] instanceof String)) {
            throw new Error("Expected the field `phoneVerificationStatus` to be a primitive type in the JSON string but got " + data['phoneVerificationStatus']);
        }

        return true;
    }


}



/**
 * @member {module:model/AccountAddress} address
 */
AccountBusinessInformation.prototype['address'] = undefined;

/**
 * @member {module:model/AccountCustomerService} customerService
 */
AccountBusinessInformation.prototype['customerService'] = undefined;

/**
 * The 10-digit [Korean business registration number](https://support.google.com/merchants/answer/9037766) separated with dashes in the format: XXX-XX-XXXXX. This field will only be updated if explicitly set.
 * @member {String} koreanBusinessRegistrationNumber
 */
AccountBusinessInformation.prototype['koreanBusinessRegistrationNumber'] = undefined;

/**
 * The phone number of the business in [E.164](https://en.wikipedia.org/wiki/E.164) format. This can only be updated if a verified phone number is not already set. To replace a verified phone number use the `Accounts.requestphoneverification` and `Accounts.verifyphonenumber`.
 * @member {String} phoneNumber
 */
AccountBusinessInformation.prototype['phoneNumber'] = undefined;

/**
 * Verification status of the phone number of the business. This status is read only and can be updated only by successful phone verification. Acceptable values are: - \"`verified`\" - \"`unverified`\" 
 * @member {String} phoneVerificationStatus
 */
AccountBusinessInformation.prototype['phoneVerificationStatus'] = undefined;






export default AccountBusinessInformation;

