/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RecommendationCallToAction from './RecommendationCallToAction';
import RecommendationCreative from './RecommendationCreative';
import RecommendationDescription from './RecommendationDescription';

/**
 * The Recommendation model module.
 * @module model/Recommendation
 * @version v2.1
 */
class Recommendation {
    /**
     * Constructs a new <code>Recommendation</code>.
     * Recommendations are suggested ways to improve your merchant account&#39;s performance. For example, to engage with a feature, or start using a new Google product.
     * @alias module:model/Recommendation
     */
    constructor() { 
        
        Recommendation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Recommendation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Recommendation} obj Optional instance to populate.
     * @return {module:model/Recommendation} The populated <code>Recommendation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Recommendation();

            if (data.hasOwnProperty('additionalCallToAction')) {
                obj['additionalCallToAction'] = ApiClient.convertToType(data['additionalCallToAction'], [RecommendationCallToAction]);
            }
            if (data.hasOwnProperty('additionalDescriptions')) {
                obj['additionalDescriptions'] = ApiClient.convertToType(data['additionalDescriptions'], [RecommendationDescription]);
            }
            if (data.hasOwnProperty('creative')) {
                obj['creative'] = ApiClient.convertToType(data['creative'], [RecommendationCreative]);
            }
            if (data.hasOwnProperty('defaultCallToAction')) {
                obj['defaultCallToAction'] = RecommendationCallToAction.constructFromObject(data['defaultCallToAction']);
            }
            if (data.hasOwnProperty('defaultDescription')) {
                obj['defaultDescription'] = ApiClient.convertToType(data['defaultDescription'], 'String');
            }
            if (data.hasOwnProperty('numericalImpact')) {
                obj['numericalImpact'] = ApiClient.convertToType(data['numericalImpact'], 'Number');
            }
            if (data.hasOwnProperty('paid')) {
                obj['paid'] = ApiClient.convertToType(data['paid'], 'Boolean');
            }
            if (data.hasOwnProperty('recommendationName')) {
                obj['recommendationName'] = ApiClient.convertToType(data['recommendationName'], 'String');
            }
            if (data.hasOwnProperty('subType')) {
                obj['subType'] = ApiClient.convertToType(data['subType'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Recommendation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Recommendation</code>.
     */
    static validateJSON(data) {
        if (data['additionalCallToAction']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['additionalCallToAction'])) {
                throw new Error("Expected the field `additionalCallToAction` to be an array in the JSON data but got " + data['additionalCallToAction']);
            }
            // validate the optional field `additionalCallToAction` (array)
            for (const item of data['additionalCallToAction']) {
                RecommendationCallToAction.validateJSON(item);
            };
        }
        if (data['additionalDescriptions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['additionalDescriptions'])) {
                throw new Error("Expected the field `additionalDescriptions` to be an array in the JSON data but got " + data['additionalDescriptions']);
            }
            // validate the optional field `additionalDescriptions` (array)
            for (const item of data['additionalDescriptions']) {
                RecommendationDescription.validateJSON(item);
            };
        }
        if (data['creative']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['creative'])) {
                throw new Error("Expected the field `creative` to be an array in the JSON data but got " + data['creative']);
            }
            // validate the optional field `creative` (array)
            for (const item of data['creative']) {
                RecommendationCreative.validateJSON(item);
            };
        }
        // validate the optional field `defaultCallToAction`
        if (data['defaultCallToAction']) { // data not null
          RecommendationCallToAction.validateJSON(data['defaultCallToAction']);
        }
        // ensure the json data is a string
        if (data['defaultDescription'] && !(typeof data['defaultDescription'] === 'string' || data['defaultDescription'] instanceof String)) {
            throw new Error("Expected the field `defaultDescription` to be a primitive type in the JSON string but got " + data['defaultDescription']);
        }
        // ensure the json data is a string
        if (data['recommendationName'] && !(typeof data['recommendationName'] === 'string' || data['recommendationName'] instanceof String)) {
            throw new Error("Expected the field `recommendationName` to be a primitive type in the JSON string but got " + data['recommendationName']);
        }
        // ensure the json data is a string
        if (data['subType'] && !(typeof data['subType'] === 'string' || data['subType'] instanceof String)) {
            throw new Error("Expected the field `subType` to be a primitive type in the JSON string but got " + data['subType']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Output only. CTAs of this recommendation. Repeated.
 * @member {Array.<module:model/RecommendationCallToAction>} additionalCallToAction
 */
Recommendation.prototype['additionalCallToAction'] = undefined;

/**
 * Output only. List of additional localized descriptions for a recommendation. Localication uses the `languageCode` field in `GenerateRecommendations` requests. Not all description types are guaranteed to be present and we recommend to rely on default description.
 * @member {Array.<module:model/RecommendationDescription>} additionalDescriptions
 */
Recommendation.prototype['additionalDescriptions'] = undefined;

/**
 * Output only. Any creatives attached to the recommendation. Repeated.
 * @member {Array.<module:model/RecommendationCreative>} creative
 */
Recommendation.prototype['creative'] = undefined;

/**
 * @member {module:model/RecommendationCallToAction} defaultCallToAction
 */
Recommendation.prototype['defaultCallToAction'] = undefined;

/**
 * Optional. Localized recommendation description. The localization the {@link `GenerateRecommendationsRequest.language_code`} field in {@link `GenerateRecommendationsRequest`} requests.
 * @member {String} defaultDescription
 */
Recommendation.prototype['defaultDescription'] = undefined;

/**
 * Optional. A numerical score of the impact from the recommendation's description. For example, a recommendation might suggest an upward trend in sales for a certain product. Higher number means larger impact.
 * @member {Number} numericalImpact
 */
Recommendation.prototype['numericalImpact'] = undefined;

/**
 * Optional. Indicates whether a user needs to pay when they complete the user journey suggested by the recommendation.
 * @member {Boolean} paid
 */
Recommendation.prototype['paid'] = undefined;

/**
 * Optional. Localized recommendation name. The localization uses the {@link `GenerateRecommendationsRequest.language_code`} field in {@link `GenerateRecommendationsRequest`} requests.
 * @member {String} recommendationName
 */
Recommendation.prototype['recommendationName'] = undefined;

/**
 * Optional. Subtype of the recommendations. Only applicable when multiple recommendations can be generated per type, and is used as an identifier of recommendation under the same recommendation type.
 * @member {String} subType
 */
Recommendation.prototype['subType'] = undefined;

/**
 * Optional. Localized Recommendation Title. Localization uses the {@link `GenerateRecommendationsRequest.language_code`} field in {@link `GenerateRecommendationsRequest`} requests.
 * @member {String} title
 */
Recommendation.prototype['title'] = undefined;

/**
 * Output only. Type of the recommendation. List of currently available recommendation types: - OPPORTUNITY_CREATE_NEW_COLLECTION - OPPORTUNITY_CREATE_EMAIL_CAMPAIGN
 * @member {String} type
 */
Recommendation.prototype['type'] = undefined;






export default Recommendation;

