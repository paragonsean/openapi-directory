/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BusinessDayConfig from './BusinessDayConfig';
import CutoffTime from './CutoffTime';
import HolidayCutoff from './HolidayCutoff';
import TransitTable from './TransitTable';
import WarehouseBasedDeliveryTime from './WarehouseBasedDeliveryTime';

/**
 * The DeliveryTime model module.
 * @module model/DeliveryTime
 * @version v2.1
 */
class DeliveryTime {
    /**
     * Constructs a new <code>DeliveryTime</code>.
     * @alias module:model/DeliveryTime
     */
    constructor() { 
        
        DeliveryTime.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeliveryTime</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeliveryTime} obj Optional instance to populate.
     * @return {module:model/DeliveryTime} The populated <code>DeliveryTime</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeliveryTime();

            if (data.hasOwnProperty('cutoffTime')) {
                obj['cutoffTime'] = CutoffTime.constructFromObject(data['cutoffTime']);
            }
            if (data.hasOwnProperty('handlingBusinessDayConfig')) {
                obj['handlingBusinessDayConfig'] = BusinessDayConfig.constructFromObject(data['handlingBusinessDayConfig']);
            }
            if (data.hasOwnProperty('holidayCutoffs')) {
                obj['holidayCutoffs'] = ApiClient.convertToType(data['holidayCutoffs'], [HolidayCutoff]);
            }
            if (data.hasOwnProperty('maxHandlingTimeInDays')) {
                obj['maxHandlingTimeInDays'] = ApiClient.convertToType(data['maxHandlingTimeInDays'], 'Number');
            }
            if (data.hasOwnProperty('maxTransitTimeInDays')) {
                obj['maxTransitTimeInDays'] = ApiClient.convertToType(data['maxTransitTimeInDays'], 'Number');
            }
            if (data.hasOwnProperty('minHandlingTimeInDays')) {
                obj['minHandlingTimeInDays'] = ApiClient.convertToType(data['minHandlingTimeInDays'], 'Number');
            }
            if (data.hasOwnProperty('minTransitTimeInDays')) {
                obj['minTransitTimeInDays'] = ApiClient.convertToType(data['minTransitTimeInDays'], 'Number');
            }
            if (data.hasOwnProperty('transitBusinessDayConfig')) {
                obj['transitBusinessDayConfig'] = BusinessDayConfig.constructFromObject(data['transitBusinessDayConfig']);
            }
            if (data.hasOwnProperty('transitTimeTable')) {
                obj['transitTimeTable'] = TransitTable.constructFromObject(data['transitTimeTable']);
            }
            if (data.hasOwnProperty('warehouseBasedDeliveryTimes')) {
                obj['warehouseBasedDeliveryTimes'] = ApiClient.convertToType(data['warehouseBasedDeliveryTimes'], [WarehouseBasedDeliveryTime]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeliveryTime</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeliveryTime</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cutoffTime`
        if (data['cutoffTime']) { // data not null
          CutoffTime.validateJSON(data['cutoffTime']);
        }
        // validate the optional field `handlingBusinessDayConfig`
        if (data['handlingBusinessDayConfig']) { // data not null
          BusinessDayConfig.validateJSON(data['handlingBusinessDayConfig']);
        }
        if (data['holidayCutoffs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['holidayCutoffs'])) {
                throw new Error("Expected the field `holidayCutoffs` to be an array in the JSON data but got " + data['holidayCutoffs']);
            }
            // validate the optional field `holidayCutoffs` (array)
            for (const item of data['holidayCutoffs']) {
                HolidayCutoff.validateJSON(item);
            };
        }
        // validate the optional field `transitBusinessDayConfig`
        if (data['transitBusinessDayConfig']) { // data not null
          BusinessDayConfig.validateJSON(data['transitBusinessDayConfig']);
        }
        // validate the optional field `transitTimeTable`
        if (data['transitTimeTable']) { // data not null
          TransitTable.validateJSON(data['transitTimeTable']);
        }
        if (data['warehouseBasedDeliveryTimes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['warehouseBasedDeliveryTimes'])) {
                throw new Error("Expected the field `warehouseBasedDeliveryTimes` to be an array in the JSON data but got " + data['warehouseBasedDeliveryTimes']);
            }
            // validate the optional field `warehouseBasedDeliveryTimes` (array)
            for (const item of data['warehouseBasedDeliveryTimes']) {
                WarehouseBasedDeliveryTime.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/CutoffTime} cutoffTime
 */
DeliveryTime.prototype['cutoffTime'] = undefined;

/**
 * @member {module:model/BusinessDayConfig} handlingBusinessDayConfig
 */
DeliveryTime.prototype['handlingBusinessDayConfig'] = undefined;

/**
 * Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping.
 * @member {Array.<module:model/HolidayCutoff>} holidayCutoffs
 */
DeliveryTime.prototype['holidayCutoffs'] = undefined;

/**
 * Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to `minHandlingTimeInDays`.
 * @member {Number} maxHandlingTimeInDays
 */
DeliveryTime.prototype['maxHandlingTimeInDays'] = undefined;

/**
 * Maximum number of business days that are spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to `minTransitTimeInDays`.
 * @member {Number} maxTransitTimeInDays
 */
DeliveryTime.prototype['maxTransitTimeInDays'] = undefined;

/**
 * Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped.
 * @member {Number} minHandlingTimeInDays
 */
DeliveryTime.prototype['minHandlingTimeInDays'] = undefined;

/**
 * Minimum number of business days that are spent in transit. 0 means same day delivery, 1 means next day delivery. Either `{min,max}TransitTimeInDays` or `transitTimeTable` must be set, but not both.
 * @member {Number} minTransitTimeInDays
 */
DeliveryTime.prototype['minTransitTimeInDays'] = undefined;

/**
 * @member {module:model/BusinessDayConfig} transitBusinessDayConfig
 */
DeliveryTime.prototype['transitBusinessDayConfig'] = undefined;

/**
 * @member {module:model/TransitTable} transitTimeTable
 */
DeliveryTime.prototype['transitTimeTable'] = undefined;

/**
 * Indicates that the delivery time should be calculated per warehouse (shipping origin location) based on the settings of the selected carrier. When set, no other transit time related field in DeliveryTime should be set.
 * @member {Array.<module:model/WarehouseBasedDeliveryTime>} warehouseBasedDeliveryTimes
 */
DeliveryTime.prototype['warehouseBasedDeliveryTimes'] = undefined;






export default DeliveryTime;

