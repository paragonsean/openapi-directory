/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MerchantOrderReturnItem from './MerchantOrderReturnItem';
import ReturnPricingInfo from './ReturnPricingInfo';
import ReturnShipment from './ReturnShipment';

/**
 * The MerchantOrderReturn model module.
 * @module model/MerchantOrderReturn
 * @version v2.1
 */
class MerchantOrderReturn {
    /**
     * Constructs a new <code>MerchantOrderReturn</code>.
     * Order return. Production access (all methods) requires the order manager role. Sandbox access does not.
     * @alias module:model/MerchantOrderReturn
     */
    constructor() { 
        
        MerchantOrderReturn.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MerchantOrderReturn</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MerchantOrderReturn} obj Optional instance to populate.
     * @return {module:model/MerchantOrderReturn} The populated <code>MerchantOrderReturn</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MerchantOrderReturn();

            if (data.hasOwnProperty('creationDate')) {
                obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'String');
            }
            if (data.hasOwnProperty('merchantOrderId')) {
                obj['merchantOrderId'] = ApiClient.convertToType(data['merchantOrderId'], 'String');
            }
            if (data.hasOwnProperty('orderId')) {
                obj['orderId'] = ApiClient.convertToType(data['orderId'], 'String');
            }
            if (data.hasOwnProperty('orderReturnId')) {
                obj['orderReturnId'] = ApiClient.convertToType(data['orderReturnId'], 'String');
            }
            if (data.hasOwnProperty('returnItems')) {
                obj['returnItems'] = ApiClient.convertToType(data['returnItems'], [MerchantOrderReturnItem]);
            }
            if (data.hasOwnProperty('returnPricingInfo')) {
                obj['returnPricingInfo'] = ReturnPricingInfo.constructFromObject(data['returnPricingInfo']);
            }
            if (data.hasOwnProperty('returnShipments')) {
                obj['returnShipments'] = ApiClient.convertToType(data['returnShipments'], [ReturnShipment]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MerchantOrderReturn</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MerchantOrderReturn</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['creationDate'] && !(typeof data['creationDate'] === 'string' || data['creationDate'] instanceof String)) {
            throw new Error("Expected the field `creationDate` to be a primitive type in the JSON string but got " + data['creationDate']);
        }
        // ensure the json data is a string
        if (data['merchantOrderId'] && !(typeof data['merchantOrderId'] === 'string' || data['merchantOrderId'] instanceof String)) {
            throw new Error("Expected the field `merchantOrderId` to be a primitive type in the JSON string but got " + data['merchantOrderId']);
        }
        // ensure the json data is a string
        if (data['orderId'] && !(typeof data['orderId'] === 'string' || data['orderId'] instanceof String)) {
            throw new Error("Expected the field `orderId` to be a primitive type in the JSON string but got " + data['orderId']);
        }
        // ensure the json data is a string
        if (data['orderReturnId'] && !(typeof data['orderReturnId'] === 'string' || data['orderReturnId'] instanceof String)) {
            throw new Error("Expected the field `orderReturnId` to be a primitive type in the JSON string but got " + data['orderReturnId']);
        }
        if (data['returnItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['returnItems'])) {
                throw new Error("Expected the field `returnItems` to be an array in the JSON data but got " + data['returnItems']);
            }
            // validate the optional field `returnItems` (array)
            for (const item of data['returnItems']) {
                MerchantOrderReturnItem.validateJSON(item);
            };
        }
        // validate the optional field `returnPricingInfo`
        if (data['returnPricingInfo']) { // data not null
          ReturnPricingInfo.validateJSON(data['returnPricingInfo']);
        }
        if (data['returnShipments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['returnShipments'])) {
                throw new Error("Expected the field `returnShipments` to be an array in the JSON data but got " + data['returnShipments']);
            }
            // validate the optional field `returnShipments` (array)
            for (const item of data['returnShipments']) {
                ReturnShipment.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The date of creation of the return, in ISO 8601 format.
 * @member {String} creationDate
 */
MerchantOrderReturn.prototype['creationDate'] = undefined;

/**
 * Merchant defined order ID.
 * @member {String} merchantOrderId
 */
MerchantOrderReturn.prototype['merchantOrderId'] = undefined;

/**
 * Google order ID.
 * @member {String} orderId
 */
MerchantOrderReturn.prototype['orderId'] = undefined;

/**
 * Order return ID generated by Google.
 * @member {String} orderReturnId
 */
MerchantOrderReturn.prototype['orderReturnId'] = undefined;

/**
 * Items of the return.
 * @member {Array.<module:model/MerchantOrderReturnItem>} returnItems
 */
MerchantOrderReturn.prototype['returnItems'] = undefined;

/**
 * @member {module:model/ReturnPricingInfo} returnPricingInfo
 */
MerchantOrderReturn.prototype['returnPricingInfo'] = undefined;

/**
 * Shipments of the return.
 * @member {Array.<module:model/ReturnShipment>} returnShipments
 */
MerchantOrderReturn.prototype['returnShipments'] = undefined;






export default MerchantOrderReturn;

