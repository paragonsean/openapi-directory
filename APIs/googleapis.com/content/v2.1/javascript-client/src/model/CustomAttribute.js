/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomAttribute model module.
 * @module model/CustomAttribute
 * @version v2.1
 */
class CustomAttribute {
    /**
     * Constructs a new <code>CustomAttribute</code>.
     * A message that represents custom attributes. Exactly one of &#x60;value&#x60; or &#x60;groupValues&#x60; must be provided. Maximum allowed number of characters for each custom attribute is 10240 (represents sum of characters for name and value). Maximum 2500 custom attributes can be set per merchant, with total size of 102.4kB.
     * @alias module:model/CustomAttribute
     */
    constructor() { 
        
        CustomAttribute.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomAttribute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomAttribute} obj Optional instance to populate.
     * @return {module:model/CustomAttribute} The populated <code>CustomAttribute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomAttribute();

            if (data.hasOwnProperty('groupValues')) {
                obj['groupValues'] = ApiClient.convertToType(data['groupValues'], [CustomAttribute]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomAttribute</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomAttribute</code>.
     */
    static validateJSON(data) {
        if (data['groupValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['groupValues'])) {
                throw new Error("Expected the field `groupValues` to be an array in the JSON data but got " + data['groupValues']);
            }
            // validate the optional field `groupValues` (array)
            for (const item of data['groupValues']) {
                CustomAttribute.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * Subattributes within this attribute group. Exactly one of value or groupValues must be provided.
 * @member {Array.<module:model/CustomAttribute>} groupValues
 */
CustomAttribute.prototype['groupValues'] = undefined;

/**
 * The name of the attribute. Underscores will be replaced by spaces upon insertion.
 * @member {String} name
 */
CustomAttribute.prototype['name'] = undefined;

/**
 * The value of the attribute.
 * @member {String} value
 */
CustomAttribute.prototype['value'] = undefined;






export default CustomAttribute;

