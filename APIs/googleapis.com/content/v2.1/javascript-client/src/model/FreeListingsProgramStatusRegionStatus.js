/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FreeListingsProgramStatusReviewIneligibilityReasonDetails from './FreeListingsProgramStatusReviewIneligibilityReasonDetails';

/**
 * The FreeListingsProgramStatusRegionStatus model module.
 * @module model/FreeListingsProgramStatusRegionStatus
 * @version v2.1
 */
class FreeListingsProgramStatusRegionStatus {
    /**
     * Constructs a new <code>FreeListingsProgramStatusRegionStatus</code>.
     * Status of program and region.
     * @alias module:model/FreeListingsProgramStatusRegionStatus
     */
    constructor() { 
        
        FreeListingsProgramStatusRegionStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FreeListingsProgramStatusRegionStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FreeListingsProgramStatusRegionStatus} obj Optional instance to populate.
     * @return {module:model/FreeListingsProgramStatusRegionStatus} The populated <code>FreeListingsProgramStatusRegionStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FreeListingsProgramStatusRegionStatus();

            if (data.hasOwnProperty('disapprovalDate')) {
                obj['disapprovalDate'] = ApiClient.convertToType(data['disapprovalDate'], 'String');
            }
            if (data.hasOwnProperty('eligibilityStatus')) {
                obj['eligibilityStatus'] = ApiClient.convertToType(data['eligibilityStatus'], 'String');
            }
            if (data.hasOwnProperty('onboardingIssues')) {
                obj['onboardingIssues'] = ApiClient.convertToType(data['onboardingIssues'], ['String']);
            }
            if (data.hasOwnProperty('regionCodes')) {
                obj['regionCodes'] = ApiClient.convertToType(data['regionCodes'], ['String']);
            }
            if (data.hasOwnProperty('reviewEligibilityStatus')) {
                obj['reviewEligibilityStatus'] = ApiClient.convertToType(data['reviewEligibilityStatus'], 'String');
            }
            if (data.hasOwnProperty('reviewIneligibilityReason')) {
                obj['reviewIneligibilityReason'] = ApiClient.convertToType(data['reviewIneligibilityReason'], 'String');
            }
            if (data.hasOwnProperty('reviewIneligibilityReasonDescription')) {
                obj['reviewIneligibilityReasonDescription'] = ApiClient.convertToType(data['reviewIneligibilityReasonDescription'], 'String');
            }
            if (data.hasOwnProperty('reviewIneligibilityReasonDetails')) {
                obj['reviewIneligibilityReasonDetails'] = FreeListingsProgramStatusReviewIneligibilityReasonDetails.constructFromObject(data['reviewIneligibilityReasonDetails']);
            }
            if (data.hasOwnProperty('reviewIssues')) {
                obj['reviewIssues'] = ApiClient.convertToType(data['reviewIssues'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FreeListingsProgramStatusRegionStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FreeListingsProgramStatusRegionStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['disapprovalDate'] && !(typeof data['disapprovalDate'] === 'string' || data['disapprovalDate'] instanceof String)) {
            throw new Error("Expected the field `disapprovalDate` to be a primitive type in the JSON string but got " + data['disapprovalDate']);
        }
        // ensure the json data is a string
        if (data['eligibilityStatus'] && !(typeof data['eligibilityStatus'] === 'string' || data['eligibilityStatus'] instanceof String)) {
            throw new Error("Expected the field `eligibilityStatus` to be a primitive type in the JSON string but got " + data['eligibilityStatus']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['onboardingIssues'])) {
            throw new Error("Expected the field `onboardingIssues` to be an array in the JSON data but got " + data['onboardingIssues']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['regionCodes'])) {
            throw new Error("Expected the field `regionCodes` to be an array in the JSON data but got " + data['regionCodes']);
        }
        // ensure the json data is a string
        if (data['reviewEligibilityStatus'] && !(typeof data['reviewEligibilityStatus'] === 'string' || data['reviewEligibilityStatus'] instanceof String)) {
            throw new Error("Expected the field `reviewEligibilityStatus` to be a primitive type in the JSON string but got " + data['reviewEligibilityStatus']);
        }
        // ensure the json data is a string
        if (data['reviewIneligibilityReason'] && !(typeof data['reviewIneligibilityReason'] === 'string' || data['reviewIneligibilityReason'] instanceof String)) {
            throw new Error("Expected the field `reviewIneligibilityReason` to be a primitive type in the JSON string but got " + data['reviewIneligibilityReason']);
        }
        // ensure the json data is a string
        if (data['reviewIneligibilityReasonDescription'] && !(typeof data['reviewIneligibilityReasonDescription'] === 'string' || data['reviewIneligibilityReasonDescription'] instanceof String)) {
            throw new Error("Expected the field `reviewIneligibilityReasonDescription` to be a primitive type in the JSON string but got " + data['reviewIneligibilityReasonDescription']);
        }
        // validate the optional field `reviewIneligibilityReasonDetails`
        if (data['reviewIneligibilityReasonDetails']) { // data not null
          FreeListingsProgramStatusReviewIneligibilityReasonDetails.validateJSON(data['reviewIneligibilityReasonDetails']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['reviewIssues'])) {
            throw new Error("Expected the field `reviewIssues` to be an array in the JSON data but got " + data['reviewIssues']);
        }

        return true;
    }


}



/**
 * Date by which eligibilityStatus will go from `WARNING` to `DISAPPROVED`. Only visible when your eligibilityStatus is WARNING. In [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DD`.
 * @member {String} disapprovalDate
 */
FreeListingsProgramStatusRegionStatus.prototype['disapprovalDate'] = undefined;

/**
 * Eligibility status of the standard free listing program.
 * @member {module:model/FreeListingsProgramStatusRegionStatus.EligibilityStatusEnum} eligibilityStatus
 */
FreeListingsProgramStatusRegionStatus.prototype['eligibilityStatus'] = undefined;

/**
 * Issues that must be fixed to be eligible for review.
 * @member {Array.<String>} onboardingIssues
 */
FreeListingsProgramStatusRegionStatus.prototype['onboardingIssues'] = undefined;

/**
 * The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for all the regions with the same `eligibilityStatus` and `reviewEligibility`.
 * @member {Array.<String>} regionCodes
 */
FreeListingsProgramStatusRegionStatus.prototype['regionCodes'] = undefined;

/**
 * If a program is eligible for review in a specific region. Only visible if `eligibilityStatus` is `DISAPPROVED`.
 * @member {module:model/FreeListingsProgramStatusRegionStatus.ReviewEligibilityStatusEnum} reviewEligibilityStatus
 */
FreeListingsProgramStatusRegionStatus.prototype['reviewEligibilityStatus'] = undefined;

/**
 * Review ineligibility reason if account is not eligible for review.
 * @member {module:model/FreeListingsProgramStatusRegionStatus.ReviewIneligibilityReasonEnum} reviewIneligibilityReason
 */
FreeListingsProgramStatusRegionStatus.prototype['reviewIneligibilityReason'] = undefined;

/**
 * Reason a program in a specific region isnâ€™t eligible for review. Only visible if `reviewEligibilityStatus` is `INELIGIBLE`.
 * @member {String} reviewIneligibilityReasonDescription
 */
FreeListingsProgramStatusRegionStatus.prototype['reviewIneligibilityReasonDescription'] = undefined;

/**
 * @member {module:model/FreeListingsProgramStatusReviewIneligibilityReasonDetails} reviewIneligibilityReasonDetails
 */
FreeListingsProgramStatusRegionStatus.prototype['reviewIneligibilityReasonDetails'] = undefined;

/**
 * Issues evaluated in the review process. Fix all issues before requesting a review.
 * @member {Array.<String>} reviewIssues
 */
FreeListingsProgramStatusRegionStatus.prototype['reviewIssues'] = undefined;





/**
 * Allowed values for the <code>eligibilityStatus</code> property.
 * @enum {String}
 * @readonly
 */
FreeListingsProgramStatusRegionStatus['EligibilityStatusEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "APPROVED"
     * @const
     */
    "APPROVED": "APPROVED",

    /**
     * value: "DISAPPROVED"
     * @const
     */
    "DISAPPROVED": "DISAPPROVED",

    /**
     * value: "WARNING"
     * @const
     */
    "WARNING": "WARNING",

    /**
     * value: "UNDER_REVIEW"
     * @const
     */
    "UNDER_REVIEW": "UNDER_REVIEW",

    /**
     * value: "PENDING_REVIEW"
     * @const
     */
    "PENDING_REVIEW": "PENDING_REVIEW",

    /**
     * value: "ONBOARDING"
     * @const
     */
    "ONBOARDING": "ONBOARDING"
};


/**
 * Allowed values for the <code>reviewEligibilityStatus</code> property.
 * @enum {String}
 * @readonly
 */
FreeListingsProgramStatusRegionStatus['ReviewEligibilityStatusEnum'] = {

    /**
     * value: "REVIEW_ELIGIBILITY_UNSPECIFIED"
     * @const
     */
    "REVIEW_ELIGIBILITY_UNSPECIFIED": "REVIEW_ELIGIBILITY_UNSPECIFIED",

    /**
     * value: "ELIGIBLE"
     * @const
     */
    "ELIGIBLE": "ELIGIBLE",

    /**
     * value: "INELIGIBLE"
     * @const
     */
    "INELIGIBLE": "INELIGIBLE"
};


/**
 * Allowed values for the <code>reviewIneligibilityReason</code> property.
 * @enum {String}
 * @readonly
 */
FreeListingsProgramStatusRegionStatus['ReviewIneligibilityReasonEnum'] = {

    /**
     * value: "REVIEW_INELIGIBILITY_REASON_UNSPECIFIED"
     * @const
     */
    "REVIEW_INELIGIBILITY_REASON_UNSPECIFIED": "REVIEW_INELIGIBILITY_REASON_UNSPECIFIED",

    /**
     * value: "ONBOARDING_ISSUES"
     * @const
     */
    "ONBOARDING_ISSUES": "ONBOARDING_ISSUES",

    /**
     * value: "NOT_ENOUGH_OFFERS"
     * @const
     */
    "NOT_ENOUGH_OFFERS": "NOT_ENOUGH_OFFERS",

    /**
     * value: "IN_COOLDOWN_PERIOD"
     * @const
     */
    "IN_COOLDOWN_PERIOD": "IN_COOLDOWN_PERIOD",

    /**
     * value: "ALREADY_UNDER_REVIEW"
     * @const
     */
    "ALREADY_UNDER_REVIEW": "ALREADY_UNDER_REVIEW",

    /**
     * value: "NO_REVIEW_REQUIRED"
     * @const
     */
    "NO_REVIEW_REQUIRED": "NO_REVIEW_REQUIRED",

    /**
     * value: "WILL_BE_REVIEWED_AUTOMATICALLY"
     * @const
     */
    "WILL_BE_REVIEWED_AUTOMATICALLY": "WILL_BE_REVIEWED_AUTOMATICALLY",

    /**
     * value: "IS_RETIRED"
     * @const
     */
    "IS_RETIRED": "IS_RETIRED",

    /**
     * value: "ALREADY_REVIEWED"
     * @const
     */
    "ALREADY_REVIEWED": "ALREADY_REVIEWED"
};



export default FreeListingsProgramStatusRegionStatus;

