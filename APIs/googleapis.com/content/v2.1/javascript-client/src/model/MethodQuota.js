/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MethodQuota model module.
 * @module model/MethodQuota
 * @version v2.1
 */
class MethodQuota {
    /**
     * Constructs a new <code>MethodQuota</code>.
     * The quota information per method in the Content API.
     * @alias module:model/MethodQuota
     */
    constructor() { 
        
        MethodQuota.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MethodQuota</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MethodQuota} obj Optional instance to populate.
     * @return {module:model/MethodQuota} The populated <code>MethodQuota</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MethodQuota();

            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('quotaLimit')) {
                obj['quotaLimit'] = ApiClient.convertToType(data['quotaLimit'], 'String');
            }
            if (data.hasOwnProperty('quotaUsage')) {
                obj['quotaUsage'] = ApiClient.convertToType(data['quotaUsage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MethodQuota</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MethodQuota</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['quotaLimit'] && !(typeof data['quotaLimit'] === 'string' || data['quotaLimit'] instanceof String)) {
            throw new Error("Expected the field `quotaLimit` to be a primitive type in the JSON string but got " + data['quotaLimit']);
        }
        // ensure the json data is a string
        if (data['quotaUsage'] && !(typeof data['quotaUsage'] === 'string' || data['quotaUsage'] instanceof String)) {
            throw new Error("Expected the field `quotaUsage` to be a primitive type in the JSON string but got " + data['quotaUsage']);
        }

        return true;
    }


}



/**
 * The method name, for example `products.list`. Method name does not contain version because quota can be shared between different API versions of the same method.
 * @member {String} method
 */
MethodQuota.prototype['method'] = undefined;

/**
 * The current quota limit per day, meaning the maximum number of calls for the method.
 * @member {String} quotaLimit
 */
MethodQuota.prototype['quotaLimit'] = undefined;

/**
 * The current quota usage, meaning the number of calls already made to the method.
 * @member {String} quotaUsage
 */
MethodQuota.prototype['quotaUsage'] = undefined;






export default MethodQuota;

