/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CollectionStatusDestinationStatus from './CollectionStatusDestinationStatus';
import CollectionStatusItemLevelIssue from './CollectionStatusItemLevelIssue';

/**
 * The CollectionStatus model module.
 * @module model/CollectionStatus
 * @version v2.1
 */
class CollectionStatus {
    /**
     * Constructs a new <code>CollectionStatus</code>.
     * The collectionstatus message.
     * @alias module:model/CollectionStatus
     */
    constructor() { 
        
        CollectionStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CollectionStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CollectionStatus} obj Optional instance to populate.
     * @return {module:model/CollectionStatus} The populated <code>CollectionStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CollectionStatus();

            if (data.hasOwnProperty('collectionLevelIssuses')) {
                obj['collectionLevelIssuses'] = ApiClient.convertToType(data['collectionLevelIssuses'], [CollectionStatusItemLevelIssue]);
            }
            if (data.hasOwnProperty('creationDate')) {
                obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'String');
            }
            if (data.hasOwnProperty('destinationStatuses')) {
                obj['destinationStatuses'] = ApiClient.convertToType(data['destinationStatuses'], [CollectionStatusDestinationStatus]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('lastUpdateDate')) {
                obj['lastUpdateDate'] = ApiClient.convertToType(data['lastUpdateDate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CollectionStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CollectionStatus</code>.
     */
    static validateJSON(data) {
        if (data['collectionLevelIssuses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['collectionLevelIssuses'])) {
                throw new Error("Expected the field `collectionLevelIssuses` to be an array in the JSON data but got " + data['collectionLevelIssuses']);
            }
            // validate the optional field `collectionLevelIssuses` (array)
            for (const item of data['collectionLevelIssuses']) {
                CollectionStatusItemLevelIssue.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['creationDate'] && !(typeof data['creationDate'] === 'string' || data['creationDate'] instanceof String)) {
            throw new Error("Expected the field `creationDate` to be a primitive type in the JSON string but got " + data['creationDate']);
        }
        if (data['destinationStatuses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['destinationStatuses'])) {
                throw new Error("Expected the field `destinationStatuses` to be an array in the JSON data but got " + data['destinationStatuses']);
            }
            // validate the optional field `destinationStatuses` (array)
            for (const item of data['destinationStatuses']) {
                CollectionStatusDestinationStatus.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['lastUpdateDate'] && !(typeof data['lastUpdateDate'] === 'string' || data['lastUpdateDate'] instanceof String)) {
            throw new Error("Expected the field `lastUpdateDate` to be a primitive type in the JSON string but got " + data['lastUpdateDate']);
        }

        return true;
    }


}



/**
 * A list of all issues associated with the collection.
 * @member {Array.<module:model/CollectionStatusItemLevelIssue>} collectionLevelIssuses
 */
CollectionStatus.prototype['collectionLevelIssuses'] = undefined;

/**
 * Date on which the collection has been created in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"
 * @member {String} creationDate
 */
CollectionStatus.prototype['creationDate'] = undefined;

/**
 * The intended destinations for the collection.
 * @member {Array.<module:model/CollectionStatusDestinationStatus>} destinationStatuses
 */
CollectionStatus.prototype['destinationStatuses'] = undefined;

/**
 * Required. The ID of the collection for which status is reported.
 * @member {String} id
 */
CollectionStatus.prototype['id'] = undefined;

/**
 * Date on which the collection has been last updated in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"
 * @member {String} lastUpdateDate
 */
CollectionStatus.prototype['lastUpdateDate'] = undefined;






export default CollectionStatus;

