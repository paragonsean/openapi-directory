/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TestOrderAddress from './TestOrderAddress';

/**
 * The TestOrderDeliveryDetails model module.
 * @module model/TestOrderDeliveryDetails
 * @version v2.1
 */
class TestOrderDeliveryDetails {
    /**
     * Constructs a new <code>TestOrderDeliveryDetails</code>.
     * @alias module:model/TestOrderDeliveryDetails
     */
    constructor() { 
        
        TestOrderDeliveryDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TestOrderDeliveryDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestOrderDeliveryDetails} obj Optional instance to populate.
     * @return {module:model/TestOrderDeliveryDetails} The populated <code>TestOrderDeliveryDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestOrderDeliveryDetails();

            if (data.hasOwnProperty('address')) {
                obj['address'] = TestOrderAddress.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('isScheduledDelivery')) {
                obj['isScheduledDelivery'] = ApiClient.convertToType(data['isScheduledDelivery'], 'Boolean');
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestOrderDeliveryDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestOrderDeliveryDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `address`
        if (data['address']) { // data not null
          TestOrderAddress.validateJSON(data['address']);
        }
        // ensure the json data is a string
        if (data['phoneNumber'] && !(typeof data['phoneNumber'] === 'string' || data['phoneNumber'] instanceof String)) {
            throw new Error("Expected the field `phoneNumber` to be a primitive type in the JSON string but got " + data['phoneNumber']);
        }

        return true;
    }


}



/**
 * @member {module:model/TestOrderAddress} address
 */
TestOrderDeliveryDetails.prototype['address'] = undefined;

/**
 * Whether the order is scheduled delivery order.
 * @member {Boolean} isScheduledDelivery
 */
TestOrderDeliveryDetails.prototype['isScheduledDelivery'] = undefined;

/**
 * The phone number of the person receiving the delivery.
 * @member {String} phoneNumber
 */
TestOrderDeliveryDetails.prototype['phoneNumber'] = undefined;






export default TestOrderDeliveryDetails;

