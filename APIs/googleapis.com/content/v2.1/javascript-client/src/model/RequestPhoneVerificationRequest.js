/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RequestPhoneVerificationRequest model module.
 * @module model/RequestPhoneVerificationRequest
 * @version v2.1
 */
class RequestPhoneVerificationRequest {
    /**
     * Constructs a new <code>RequestPhoneVerificationRequest</code>.
     * Request message for the RequestPhoneVerification method.
     * @alias module:model/RequestPhoneVerificationRequest
     */
    constructor() { 
        
        RequestPhoneVerificationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RequestPhoneVerificationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestPhoneVerificationRequest} obj Optional instance to populate.
     * @return {module:model/RequestPhoneVerificationRequest} The populated <code>RequestPhoneVerificationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequestPhoneVerificationRequest();

            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
            if (data.hasOwnProperty('phoneRegionCode')) {
                obj['phoneRegionCode'] = ApiClient.convertToType(data['phoneRegionCode'], 'String');
            }
            if (data.hasOwnProperty('phoneVerificationMethod')) {
                obj['phoneVerificationMethod'] = ApiClient.convertToType(data['phoneVerificationMethod'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RequestPhoneVerificationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RequestPhoneVerificationRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is a string
        if (data['phoneNumber'] && !(typeof data['phoneNumber'] === 'string' || data['phoneNumber'] instanceof String)) {
            throw new Error("Expected the field `phoneNumber` to be a primitive type in the JSON string but got " + data['phoneNumber']);
        }
        // ensure the json data is a string
        if (data['phoneRegionCode'] && !(typeof data['phoneRegionCode'] === 'string' || data['phoneRegionCode'] instanceof String)) {
            throw new Error("Expected the field `phoneRegionCode` to be a primitive type in the JSON string but got " + data['phoneRegionCode']);
        }
        // ensure the json data is a string
        if (data['phoneVerificationMethod'] && !(typeof data['phoneVerificationMethod'] === 'string' || data['phoneVerificationMethod'] instanceof String)) {
            throw new Error("Expected the field `phoneVerificationMethod` to be a primitive type in the JSON string but got " + data['phoneVerificationMethod']);
        }

        return true;
    }


}



/**
 * Language code [IETF BCP 47 syntax](https://tools.ietf.org/html/bcp47) (for example, en-US). Language code is used to provide localized `SMS` and `PHONE_CALL`. Default language used is en-US if not provided.
 * @member {String} languageCode
 */
RequestPhoneVerificationRequest.prototype['languageCode'] = undefined;

/**
 * Phone number to be verified.
 * @member {String} phoneNumber
 */
RequestPhoneVerificationRequest.prototype['phoneNumber'] = undefined;

/**
 * Required. Two letter country code for the phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes.
 * @member {String} phoneRegionCode
 */
RequestPhoneVerificationRequest.prototype['phoneRegionCode'] = undefined;

/**
 * Verification method to receive verification code.
 * @member {module:model/RequestPhoneVerificationRequest.PhoneVerificationMethodEnum} phoneVerificationMethod
 */
RequestPhoneVerificationRequest.prototype['phoneVerificationMethod'] = undefined;





/**
 * Allowed values for the <code>phoneVerificationMethod</code> property.
 * @enum {String}
 * @readonly
 */
RequestPhoneVerificationRequest['PhoneVerificationMethodEnum'] = {

    /**
     * value: "PHONE_VERIFICATION_METHOD_UNSPECIFIED"
     * @const
     */
    "PHONE_VERIFICATION_METHOD_UNSPECIFIED": "PHONE_VERIFICATION_METHOD_UNSPECIFIED",

    /**
     * value: "SMS"
     * @const
     */
    "SMS": "SMS",

    /**
     * value: "PHONE_CALL"
     * @const
     */
    "PHONE_CALL": "PHONE_CALL"
};



export default RequestPhoneVerificationRequest;

