/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductViewItemIssueItemIssueSeverity from './ProductViewItemIssueItemIssueSeverity';
import ProductViewItemIssueItemIssueType from './ProductViewItemIssueItemIssueType';

/**
 * The ProductViewItemIssue model module.
 * @module model/ProductViewItemIssue
 * @version v2.1
 */
class ProductViewItemIssue {
    /**
     * Constructs a new <code>ProductViewItemIssue</code>.
     * Item issue associated with the product.
     * @alias module:model/ProductViewItemIssue
     */
    constructor() { 
        
        ProductViewItemIssue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductViewItemIssue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductViewItemIssue} obj Optional instance to populate.
     * @return {module:model/ProductViewItemIssue} The populated <code>ProductViewItemIssue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductViewItemIssue();

            if (data.hasOwnProperty('issueType')) {
                obj['issueType'] = ProductViewItemIssueItemIssueType.constructFromObject(data['issueType']);
            }
            if (data.hasOwnProperty('resolution')) {
                obj['resolution'] = ApiClient.convertToType(data['resolution'], 'String');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ProductViewItemIssueItemIssueSeverity.constructFromObject(data['severity']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductViewItemIssue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductViewItemIssue</code>.
     */
    static validateJSON(data) {
        // validate the optional field `issueType`
        if (data['issueType']) { // data not null
          ProductViewItemIssueItemIssueType.validateJSON(data['issueType']);
        }
        // ensure the json data is a string
        if (data['resolution'] && !(typeof data['resolution'] === 'string' || data['resolution'] instanceof String)) {
            throw new Error("Expected the field `resolution` to be a primitive type in the JSON string but got " + data['resolution']);
        }
        // validate the optional field `severity`
        if (data['severity']) { // data not null
          ProductViewItemIssueItemIssueSeverity.validateJSON(data['severity']);
        }

        return true;
    }


}



/**
 * @member {module:model/ProductViewItemIssueItemIssueType} issueType
 */
ProductViewItemIssue.prototype['issueType'] = undefined;

/**
 * Item issue resolution.
 * @member {module:model/ProductViewItemIssue.ResolutionEnum} resolution
 */
ProductViewItemIssue.prototype['resolution'] = undefined;

/**
 * @member {module:model/ProductViewItemIssueItemIssueSeverity} severity
 */
ProductViewItemIssue.prototype['severity'] = undefined;





/**
 * Allowed values for the <code>resolution</code> property.
 * @enum {String}
 * @readonly
 */
ProductViewItemIssue['ResolutionEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "MERCHANT_ACTION"
     * @const
     */
    "MERCHANT_ACTION": "MERCHANT_ACTION",

    /**
     * value: "PENDING_PROCESSING"
     * @const
     */
    "PENDING_PROCESSING": "PENDING_PROCESSING"
};



export default ProductViewItemIssue;

