/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountStatusItemLevelIssue from './AccountStatusItemLevelIssue';
import AccountStatusStatistics from './AccountStatusStatistics';

/**
 * The AccountStatusProducts model module.
 * @module model/AccountStatusProducts
 * @version v2.1
 */
class AccountStatusProducts {
    /**
     * Constructs a new <code>AccountStatusProducts</code>.
     * @alias module:model/AccountStatusProducts
     */
    constructor() { 
        
        AccountStatusProducts.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountStatusProducts</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountStatusProducts} obj Optional instance to populate.
     * @return {module:model/AccountStatusProducts} The populated <code>AccountStatusProducts</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountStatusProducts();

            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('itemLevelIssues')) {
                obj['itemLevelIssues'] = ApiClient.convertToType(data['itemLevelIssues'], [AccountStatusItemLevelIssue]);
            }
            if (data.hasOwnProperty('statistics')) {
                obj['statistics'] = AccountStatusStatistics.constructFromObject(data['statistics']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountStatusProducts</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountStatusProducts</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['channel'] && !(typeof data['channel'] === 'string' || data['channel'] instanceof String)) {
            throw new Error("Expected the field `channel` to be a primitive type in the JSON string but got " + data['channel']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['destination'] && !(typeof data['destination'] === 'string' || data['destination'] instanceof String)) {
            throw new Error("Expected the field `destination` to be a primitive type in the JSON string but got " + data['destination']);
        }
        if (data['itemLevelIssues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['itemLevelIssues'])) {
                throw new Error("Expected the field `itemLevelIssues` to be an array in the JSON data but got " + data['itemLevelIssues']);
            }
            // validate the optional field `itemLevelIssues` (array)
            for (const item of data['itemLevelIssues']) {
                AccountStatusItemLevelIssue.validateJSON(item);
            };
        }
        // validate the optional field `statistics`
        if (data['statistics']) { // data not null
          AccountStatusStatistics.validateJSON(data['statistics']);
        }

        return true;
    }


}



/**
 * The channel the data applies to. Acceptable values are: - \"`local`\" - \"`online`\" 
 * @member {String} channel
 */
AccountStatusProducts.prototype['channel'] = undefined;

/**
 * The country the data applies to.
 * @member {String} country
 */
AccountStatusProducts.prototype['country'] = undefined;

/**
 * The destination the data applies to.
 * @member {String} destination
 */
AccountStatusProducts.prototype['destination'] = undefined;

/**
 * List of item-level issues.
 * @member {Array.<module:model/AccountStatusItemLevelIssue>} itemLevelIssues
 */
AccountStatusProducts.prototype['itemLevelIssues'] = undefined;

/**
 * @member {module:model/AccountStatusStatistics} statistics
 */
AccountStatusProducts.prototype['statistics'] = undefined;






export default AccountStatusProducts;

