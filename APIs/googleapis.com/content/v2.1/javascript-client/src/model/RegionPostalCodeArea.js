/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RegionPostalCodeAreaPostalCodeRange from './RegionPostalCodeAreaPostalCodeRange';

/**
 * The RegionPostalCodeArea model module.
 * @module model/RegionPostalCodeArea
 * @version v2.1
 */
class RegionPostalCodeArea {
    /**
     * Constructs a new <code>RegionPostalCodeArea</code>.
     * A list of postal codes that defines the region area. Note: All regions defined using postal codes are accessible via the account&#39;s &#x60;ShippingSettings.postalCodeGroups&#x60; resource.
     * @alias module:model/RegionPostalCodeArea
     */
    constructor() { 
        
        RegionPostalCodeArea.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RegionPostalCodeArea</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegionPostalCodeArea} obj Optional instance to populate.
     * @return {module:model/RegionPostalCodeArea} The populated <code>RegionPostalCodeArea</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegionPostalCodeArea();

            if (data.hasOwnProperty('postalCodes')) {
                obj['postalCodes'] = ApiClient.convertToType(data['postalCodes'], [RegionPostalCodeAreaPostalCodeRange]);
            }
            if (data.hasOwnProperty('regionCode')) {
                obj['regionCode'] = ApiClient.convertToType(data['regionCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RegionPostalCodeArea</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RegionPostalCodeArea</code>.
     */
    static validateJSON(data) {
        if (data['postalCodes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['postalCodes'])) {
                throw new Error("Expected the field `postalCodes` to be an array in the JSON data but got " + data['postalCodes']);
            }
            // validate the optional field `postalCodes` (array)
            for (const item of data['postalCodes']) {
                RegionPostalCodeAreaPostalCodeRange.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['regionCode'] && !(typeof data['regionCode'] === 'string' || data['regionCode'] instanceof String)) {
            throw new Error("Expected the field `regionCode` to be a primitive type in the JSON string but got " + data['regionCode']);
        }

        return true;
    }


}



/**
 * Required. A range of postal codes.
 * @member {Array.<module:model/RegionPostalCodeAreaPostalCodeRange>} postalCodes
 */
RegionPostalCodeArea.prototype['postalCodes'] = undefined;

/**
 * Required. CLDR territory code or the country the postal code group applies to.
 * @member {String} regionCode
 */
RegionPostalCodeArea.prototype['regionCode'] = undefined;






export default RegionPostalCodeArea;

