/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeliveryAreaPostalCodeRange from './DeliveryAreaPostalCodeRange';

/**
 * The DeliveryArea model module.
 * @module model/DeliveryArea
 * @version v2.1
 */
class DeliveryArea {
    /**
     * Constructs a new <code>DeliveryArea</code>.
     * A delivery area for the product. Only one of &#x60;countryCode&#x60; or &#x60;postalCodeRange&#x60; must be set.
     * @alias module:model/DeliveryArea
     */
    constructor() { 
        
        DeliveryArea.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeliveryArea</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeliveryArea} obj Optional instance to populate.
     * @return {module:model/DeliveryArea} The populated <code>DeliveryArea</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeliveryArea();

            if (data.hasOwnProperty('countryCode')) {
                obj['countryCode'] = ApiClient.convertToType(data['countryCode'], 'String');
            }
            if (data.hasOwnProperty('postalCodeRange')) {
                obj['postalCodeRange'] = DeliveryAreaPostalCodeRange.constructFromObject(data['postalCodeRange']);
            }
            if (data.hasOwnProperty('regionCode')) {
                obj['regionCode'] = ApiClient.convertToType(data['regionCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeliveryArea</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeliveryArea</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['countryCode'] && !(typeof data['countryCode'] === 'string' || data['countryCode'] instanceof String)) {
            throw new Error("Expected the field `countryCode` to be a primitive type in the JSON string but got " + data['countryCode']);
        }
        // validate the optional field `postalCodeRange`
        if (data['postalCodeRange']) { // data not null
          DeliveryAreaPostalCodeRange.validateJSON(data['postalCodeRange']);
        }
        // ensure the json data is a string
        if (data['regionCode'] && !(typeof data['regionCode'] === 'string' || data['regionCode'] instanceof String)) {
            throw new Error("Expected the field `regionCode` to be a primitive type in the JSON string but got " + data['regionCode']);
        }

        return true;
    }


}



/**
 * Required. The country that the product can be delivered to. Submit a [unicode CLDR region](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) such as `US` or `CH`.
 * @member {String} countryCode
 */
DeliveryArea.prototype['countryCode'] = undefined;

/**
 * @member {module:model/DeliveryAreaPostalCodeRange} postalCodeRange
 */
DeliveryArea.prototype['postalCodeRange'] = undefined;

/**
 * A state, territory, or prefecture. This is supported for the United States, Australia, and Japan. Provide a subdivision code from the ISO 3166-2 code tables ([US](https://en.wikipedia.org/wiki/ISO_3166-2:US), [AU](https://en.wikipedia.org/wiki/ISO_3166-2:AU), or [JP](https://en.wikipedia.org/wiki/ISO_3166-2:JP)) without country prefix (for example, `\"NY\"`, `\"NSW\"`, `\"03\"`).
 * @member {String} regionCode
 */
DeliveryArea.prototype['regionCode'] = undefined;






export default DeliveryArea;

