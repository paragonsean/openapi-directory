/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WarehouseBasedDeliveryTime model module.
 * @module model/WarehouseBasedDeliveryTime
 * @version v2.1
 */
class WarehouseBasedDeliveryTime {
    /**
     * Constructs a new <code>WarehouseBasedDeliveryTime</code>.
     * @alias module:model/WarehouseBasedDeliveryTime
     */
    constructor() { 
        
        WarehouseBasedDeliveryTime.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WarehouseBasedDeliveryTime</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WarehouseBasedDeliveryTime} obj Optional instance to populate.
     * @return {module:model/WarehouseBasedDeliveryTime} The populated <code>WarehouseBasedDeliveryTime</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WarehouseBasedDeliveryTime();

            if (data.hasOwnProperty('carrier')) {
                obj['carrier'] = ApiClient.convertToType(data['carrier'], 'String');
            }
            if (data.hasOwnProperty('carrierService')) {
                obj['carrierService'] = ApiClient.convertToType(data['carrierService'], 'String');
            }
            if (data.hasOwnProperty('originAdministrativeArea')) {
                obj['originAdministrativeArea'] = ApiClient.convertToType(data['originAdministrativeArea'], 'String');
            }
            if (data.hasOwnProperty('originCity')) {
                obj['originCity'] = ApiClient.convertToType(data['originCity'], 'String');
            }
            if (data.hasOwnProperty('originCountry')) {
                obj['originCountry'] = ApiClient.convertToType(data['originCountry'], 'String');
            }
            if (data.hasOwnProperty('originPostalCode')) {
                obj['originPostalCode'] = ApiClient.convertToType(data['originPostalCode'], 'String');
            }
            if (data.hasOwnProperty('originStreetAddress')) {
                obj['originStreetAddress'] = ApiClient.convertToType(data['originStreetAddress'], 'String');
            }
            if (data.hasOwnProperty('warehouseName')) {
                obj['warehouseName'] = ApiClient.convertToType(data['warehouseName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WarehouseBasedDeliveryTime</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WarehouseBasedDeliveryTime</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['carrier'] && !(typeof data['carrier'] === 'string' || data['carrier'] instanceof String)) {
            throw new Error("Expected the field `carrier` to be a primitive type in the JSON string but got " + data['carrier']);
        }
        // ensure the json data is a string
        if (data['carrierService'] && !(typeof data['carrierService'] === 'string' || data['carrierService'] instanceof String)) {
            throw new Error("Expected the field `carrierService` to be a primitive type in the JSON string but got " + data['carrierService']);
        }
        // ensure the json data is a string
        if (data['originAdministrativeArea'] && !(typeof data['originAdministrativeArea'] === 'string' || data['originAdministrativeArea'] instanceof String)) {
            throw new Error("Expected the field `originAdministrativeArea` to be a primitive type in the JSON string but got " + data['originAdministrativeArea']);
        }
        // ensure the json data is a string
        if (data['originCity'] && !(typeof data['originCity'] === 'string' || data['originCity'] instanceof String)) {
            throw new Error("Expected the field `originCity` to be a primitive type in the JSON string but got " + data['originCity']);
        }
        // ensure the json data is a string
        if (data['originCountry'] && !(typeof data['originCountry'] === 'string' || data['originCountry'] instanceof String)) {
            throw new Error("Expected the field `originCountry` to be a primitive type in the JSON string but got " + data['originCountry']);
        }
        // ensure the json data is a string
        if (data['originPostalCode'] && !(typeof data['originPostalCode'] === 'string' || data['originPostalCode'] instanceof String)) {
            throw new Error("Expected the field `originPostalCode` to be a primitive type in the JSON string but got " + data['originPostalCode']);
        }
        // ensure the json data is a string
        if (data['originStreetAddress'] && !(typeof data['originStreetAddress'] === 'string' || data['originStreetAddress'] instanceof String)) {
            throw new Error("Expected the field `originStreetAddress` to be a primitive type in the JSON string but got " + data['originStreetAddress']);
        }
        // ensure the json data is a string
        if (data['warehouseName'] && !(typeof data['warehouseName'] === 'string' || data['warehouseName'] instanceof String)) {
            throw new Error("Expected the field `warehouseName` to be a primitive type in the JSON string but got " + data['warehouseName']);
        }

        return true;
    }


}



/**
 * Required. Carrier, such as `\"UPS\"` or `\"Fedex\"`. The list of supported carriers can be retrieved through the `listSupportedCarriers` method.
 * @member {String} carrier
 */
WarehouseBasedDeliveryTime.prototype['carrier'] = undefined;

/**
 * Required. Carrier service, such as `\"ground\"` or `\"2 days\"`. The list of supported services for a carrier can be retrieved through the `listSupportedCarriers` method. The name of the service must be in the eddSupportedServices list.
 * @member {String} carrierService
 */
WarehouseBasedDeliveryTime.prototype['carrierService'] = undefined;

/**
 * Shipping origin's state.
 * @member {String} originAdministrativeArea
 */
WarehouseBasedDeliveryTime.prototype['originAdministrativeArea'] = undefined;

/**
 * Shipping origin's city.
 * @member {String} originCity
 */
WarehouseBasedDeliveryTime.prototype['originCity'] = undefined;

/**
 * Shipping origin's country represented as a [CLDR territory code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml).
 * @member {String} originCountry
 */
WarehouseBasedDeliveryTime.prototype['originCountry'] = undefined;

/**
 * Shipping origin.
 * @member {String} originPostalCode
 */
WarehouseBasedDeliveryTime.prototype['originPostalCode'] = undefined;

/**
 * Shipping origin's street address.
 * @member {String} originStreetAddress
 */
WarehouseBasedDeliveryTime.prototype['originStreetAddress'] = undefined;

/**
 * The name of the warehouse. Warehouse name need to be matched with name. If warehouseName is set, the below fields will be ignored. The warehouse info will be read from warehouse.
 * @member {String} warehouseName
 */
WarehouseBasedDeliveryTime.prototype['warehouseName'] = undefined;






export default WarehouseBasedDeliveryTime;

