/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PubsubNotificationSettings model module.
 * @module model/PubsubNotificationSettings
 * @version v2.1
 */
class PubsubNotificationSettings {
    /**
     * Constructs a new <code>PubsubNotificationSettings</code>.
     * Settings for Pub/Sub notifications, all methods require that the caller is a direct user of the merchant center account.
     * @alias module:model/PubsubNotificationSettings
     */
    constructor() { 
        
        PubsubNotificationSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PubsubNotificationSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PubsubNotificationSettings} obj Optional instance to populate.
     * @return {module:model/PubsubNotificationSettings} The populated <code>PubsubNotificationSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PubsubNotificationSettings();

            if (data.hasOwnProperty('cloudTopicName')) {
                obj['cloudTopicName'] = ApiClient.convertToType(data['cloudTopicName'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('registeredEvents')) {
                obj['registeredEvents'] = ApiClient.convertToType(data['registeredEvents'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PubsubNotificationSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PubsubNotificationSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cloudTopicName'] && !(typeof data['cloudTopicName'] === 'string' || data['cloudTopicName'] instanceof String)) {
            throw new Error("Expected the field `cloudTopicName` to be a primitive type in the JSON string but got " + data['cloudTopicName']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['registeredEvents'])) {
            throw new Error("Expected the field `registeredEvents` to be an array in the JSON data but got " + data['registeredEvents']);
        }

        return true;
    }


}



/**
 * Cloud pub/sub topic to which notifications are sent (read-only).
 * @member {String} cloudTopicName
 */
PubsubNotificationSettings.prototype['cloudTopicName'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"`content#pubsubNotificationSettings`\"
 * @member {String} kind
 */
PubsubNotificationSettings.prototype['kind'] = undefined;

/**
 * List of event types. Acceptable values are: - \"`orderPendingShipment`\" 
 * @member {Array.<String>} registeredEvents
 */
PubsubNotificationSettings.prototype['registeredEvents'] = undefined;






export default PubsubNotificationSettings;

