/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelDate from './ModelDate';

/**
 * The Segments model module.
 * @module model/Segments
 * @version v2.1
 */
class Segments {
    /**
     * Constructs a new <code>Segments</code>.
     * Dimensions according to which metrics are segmented in the response. Values of product dimensions, such as &#x60;offer_id&#x60;, reflect the state of a product at the time of the corresponding event, for example, impression or order. Segment fields cannot be selected in queries without also selecting at least one metric field. Values are only set for dimensions requested explicitly in the request&#39;s search query.
     * @alias module:model/Segments
     */
    constructor() { 
        
        Segments.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Segments</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Segments} obj Optional instance to populate.
     * @return {module:model/Segments} The populated <code>Segments</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Segments();

            if (data.hasOwnProperty('brand')) {
                obj['brand'] = ApiClient.convertToType(data['brand'], 'String');
            }
            if (data.hasOwnProperty('categoryL1')) {
                obj['categoryL1'] = ApiClient.convertToType(data['categoryL1'], 'String');
            }
            if (data.hasOwnProperty('categoryL2')) {
                obj['categoryL2'] = ApiClient.convertToType(data['categoryL2'], 'String');
            }
            if (data.hasOwnProperty('categoryL3')) {
                obj['categoryL3'] = ApiClient.convertToType(data['categoryL3'], 'String');
            }
            if (data.hasOwnProperty('categoryL4')) {
                obj['categoryL4'] = ApiClient.convertToType(data['categoryL4'], 'String');
            }
            if (data.hasOwnProperty('categoryL5')) {
                obj['categoryL5'] = ApiClient.convertToType(data['categoryL5'], 'String');
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('customLabel0')) {
                obj['customLabel0'] = ApiClient.convertToType(data['customLabel0'], 'String');
            }
            if (data.hasOwnProperty('customLabel1')) {
                obj['customLabel1'] = ApiClient.convertToType(data['customLabel1'], 'String');
            }
            if (data.hasOwnProperty('customLabel2')) {
                obj['customLabel2'] = ApiClient.convertToType(data['customLabel2'], 'String');
            }
            if (data.hasOwnProperty('customLabel3')) {
                obj['customLabel3'] = ApiClient.convertToType(data['customLabel3'], 'String');
            }
            if (data.hasOwnProperty('customLabel4')) {
                obj['customLabel4'] = ApiClient.convertToType(data['customLabel4'], 'String');
            }
            if (data.hasOwnProperty('customerCountryCode')) {
                obj['customerCountryCode'] = ApiClient.convertToType(data['customerCountryCode'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ModelDate.constructFromObject(data['date']);
            }
            if (data.hasOwnProperty('offerId')) {
                obj['offerId'] = ApiClient.convertToType(data['offerId'], 'String');
            }
            if (data.hasOwnProperty('productTypeL1')) {
                obj['productTypeL1'] = ApiClient.convertToType(data['productTypeL1'], 'String');
            }
            if (data.hasOwnProperty('productTypeL2')) {
                obj['productTypeL2'] = ApiClient.convertToType(data['productTypeL2'], 'String');
            }
            if (data.hasOwnProperty('productTypeL3')) {
                obj['productTypeL3'] = ApiClient.convertToType(data['productTypeL3'], 'String');
            }
            if (data.hasOwnProperty('productTypeL4')) {
                obj['productTypeL4'] = ApiClient.convertToType(data['productTypeL4'], 'String');
            }
            if (data.hasOwnProperty('productTypeL5')) {
                obj['productTypeL5'] = ApiClient.convertToType(data['productTypeL5'], 'String');
            }
            if (data.hasOwnProperty('program')) {
                obj['program'] = ApiClient.convertToType(data['program'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('week')) {
                obj['week'] = ModelDate.constructFromObject(data['week']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Segments</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Segments</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['brand'] && !(typeof data['brand'] === 'string' || data['brand'] instanceof String)) {
            throw new Error("Expected the field `brand` to be a primitive type in the JSON string but got " + data['brand']);
        }
        // ensure the json data is a string
        if (data['categoryL1'] && !(typeof data['categoryL1'] === 'string' || data['categoryL1'] instanceof String)) {
            throw new Error("Expected the field `categoryL1` to be a primitive type in the JSON string but got " + data['categoryL1']);
        }
        // ensure the json data is a string
        if (data['categoryL2'] && !(typeof data['categoryL2'] === 'string' || data['categoryL2'] instanceof String)) {
            throw new Error("Expected the field `categoryL2` to be a primitive type in the JSON string but got " + data['categoryL2']);
        }
        // ensure the json data is a string
        if (data['categoryL3'] && !(typeof data['categoryL3'] === 'string' || data['categoryL3'] instanceof String)) {
            throw new Error("Expected the field `categoryL3` to be a primitive type in the JSON string but got " + data['categoryL3']);
        }
        // ensure the json data is a string
        if (data['categoryL4'] && !(typeof data['categoryL4'] === 'string' || data['categoryL4'] instanceof String)) {
            throw new Error("Expected the field `categoryL4` to be a primitive type in the JSON string but got " + data['categoryL4']);
        }
        // ensure the json data is a string
        if (data['categoryL5'] && !(typeof data['categoryL5'] === 'string' || data['categoryL5'] instanceof String)) {
            throw new Error("Expected the field `categoryL5` to be a primitive type in the JSON string but got " + data['categoryL5']);
        }
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }
        // ensure the json data is a string
        if (data['customLabel0'] && !(typeof data['customLabel0'] === 'string' || data['customLabel0'] instanceof String)) {
            throw new Error("Expected the field `customLabel0` to be a primitive type in the JSON string but got " + data['customLabel0']);
        }
        // ensure the json data is a string
        if (data['customLabel1'] && !(typeof data['customLabel1'] === 'string' || data['customLabel1'] instanceof String)) {
            throw new Error("Expected the field `customLabel1` to be a primitive type in the JSON string but got " + data['customLabel1']);
        }
        // ensure the json data is a string
        if (data['customLabel2'] && !(typeof data['customLabel2'] === 'string' || data['customLabel2'] instanceof String)) {
            throw new Error("Expected the field `customLabel2` to be a primitive type in the JSON string but got " + data['customLabel2']);
        }
        // ensure the json data is a string
        if (data['customLabel3'] && !(typeof data['customLabel3'] === 'string' || data['customLabel3'] instanceof String)) {
            throw new Error("Expected the field `customLabel3` to be a primitive type in the JSON string but got " + data['customLabel3']);
        }
        // ensure the json data is a string
        if (data['customLabel4'] && !(typeof data['customLabel4'] === 'string' || data['customLabel4'] instanceof String)) {
            throw new Error("Expected the field `customLabel4` to be a primitive type in the JSON string but got " + data['customLabel4']);
        }
        // ensure the json data is a string
        if (data['customerCountryCode'] && !(typeof data['customerCountryCode'] === 'string' || data['customerCountryCode'] instanceof String)) {
            throw new Error("Expected the field `customerCountryCode` to be a primitive type in the JSON string but got " + data['customerCountryCode']);
        }
        // validate the optional field `date`
        if (data['date']) { // data not null
          ModelDate.validateJSON(data['date']);
        }
        // ensure the json data is a string
        if (data['offerId'] && !(typeof data['offerId'] === 'string' || data['offerId'] instanceof String)) {
            throw new Error("Expected the field `offerId` to be a primitive type in the JSON string but got " + data['offerId']);
        }
        // ensure the json data is a string
        if (data['productTypeL1'] && !(typeof data['productTypeL1'] === 'string' || data['productTypeL1'] instanceof String)) {
            throw new Error("Expected the field `productTypeL1` to be a primitive type in the JSON string but got " + data['productTypeL1']);
        }
        // ensure the json data is a string
        if (data['productTypeL2'] && !(typeof data['productTypeL2'] === 'string' || data['productTypeL2'] instanceof String)) {
            throw new Error("Expected the field `productTypeL2` to be a primitive type in the JSON string but got " + data['productTypeL2']);
        }
        // ensure the json data is a string
        if (data['productTypeL3'] && !(typeof data['productTypeL3'] === 'string' || data['productTypeL3'] instanceof String)) {
            throw new Error("Expected the field `productTypeL3` to be a primitive type in the JSON string but got " + data['productTypeL3']);
        }
        // ensure the json data is a string
        if (data['productTypeL4'] && !(typeof data['productTypeL4'] === 'string' || data['productTypeL4'] instanceof String)) {
            throw new Error("Expected the field `productTypeL4` to be a primitive type in the JSON string but got " + data['productTypeL4']);
        }
        // ensure the json data is a string
        if (data['productTypeL5'] && !(typeof data['productTypeL5'] === 'string' || data['productTypeL5'] instanceof String)) {
            throw new Error("Expected the field `productTypeL5` to be a primitive type in the JSON string but got " + data['productTypeL5']);
        }
        // ensure the json data is a string
        if (data['program'] && !(typeof data['program'] === 'string' || data['program'] instanceof String)) {
            throw new Error("Expected the field `program` to be a primitive type in the JSON string but got " + data['program']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // validate the optional field `week`
        if (data['week']) { // data not null
          ModelDate.validateJSON(data['week']);
        }

        return true;
    }


}



/**
 * Brand of the product.
 * @member {String} brand
 */
Segments.prototype['brand'] = undefined;

/**
 * [Product category (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.
 * @member {String} categoryL1
 */
Segments.prototype['categoryL1'] = undefined;

/**
 * [Product category (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.
 * @member {String} categoryL2
 */
Segments.prototype['categoryL2'] = undefined;

/**
 * [Product category (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.
 * @member {String} categoryL3
 */
Segments.prototype['categoryL3'] = undefined;

/**
 * [Product category (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.
 * @member {String} categoryL4
 */
Segments.prototype['categoryL4'] = undefined;

/**
 * [Product category (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.
 * @member {String} categoryL5
 */
Segments.prototype['categoryL5'] = undefined;

/**
 * Currency in which price metrics are represented, for example, if you select `ordered_item_sales_micros`, the returned value will be represented by this currency.
 * @member {String} currencyCode
 */
Segments.prototype['currencyCode'] = undefined;

/**
 * Custom label 0 for custom grouping of products.
 * @member {String} customLabel0
 */
Segments.prototype['customLabel0'] = undefined;

/**
 * Custom label 1 for custom grouping of products.
 * @member {String} customLabel1
 */
Segments.prototype['customLabel1'] = undefined;

/**
 * Custom label 2 for custom grouping of products.
 * @member {String} customLabel2
 */
Segments.prototype['customLabel2'] = undefined;

/**
 * Custom label 3 for custom grouping of products.
 * @member {String} customLabel3
 */
Segments.prototype['customLabel3'] = undefined;

/**
 * Custom label 4 for custom grouping of products.
 * @member {String} customLabel4
 */
Segments.prototype['customLabel4'] = undefined;

/**
 * Code of the country where the customer is located at the time of the event. Represented in the ISO 3166 format. If the customer country cannot be determined, a special 'ZZ' code is returned.
 * @member {String} customerCountryCode
 */
Segments.prototype['customerCountryCode'] = undefined;

/**
 * @member {module:model/ModelDate} date
 */
Segments.prototype['date'] = undefined;

/**
 * Merchant-provided id of the product.
 * @member {String} offerId
 */
Segments.prototype['offerId'] = undefined;

/**
 * [Product type (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.
 * @member {String} productTypeL1
 */
Segments.prototype['productTypeL1'] = undefined;

/**
 * [Product type (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.
 * @member {String} productTypeL2
 */
Segments.prototype['productTypeL2'] = undefined;

/**
 * [Product type (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.
 * @member {String} productTypeL3
 */
Segments.prototype['productTypeL3'] = undefined;

/**
 * [Product type (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.
 * @member {String} productTypeL4
 */
Segments.prototype['productTypeL4'] = undefined;

/**
 * [Product type (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.
 * @member {String} productTypeL5
 */
Segments.prototype['productTypeL5'] = undefined;

/**
 * Program to which metrics apply, for example, Free Product Listing.
 * @member {module:model/Segments.ProgramEnum} program
 */
Segments.prototype['program'] = undefined;

/**
 * Title of the product.
 * @member {String} title
 */
Segments.prototype['title'] = undefined;

/**
 * @member {module:model/ModelDate} week
 */
Segments.prototype['week'] = undefined;





/**
 * Allowed values for the <code>program</code> property.
 * @enum {String}
 * @readonly
 */
Segments['ProgramEnum'] = {

    /**
     * value: "PROGRAM_UNSPECIFIED"
     * @const
     */
    "PROGRAM_UNSPECIFIED": "PROGRAM_UNSPECIFIED",

    /**
     * value: "SHOPPING_ADS"
     * @const
     */
    "SHOPPING_ADS": "SHOPPING_ADS",

    /**
     * value: "FREE_PRODUCT_LISTING"
     * @const
     */
    "FREE_PRODUCT_LISTING": "FREE_PRODUCT_LISTING",

    /**
     * value: "FREE_LOCAL_PRODUCT_LISTING"
     * @const
     */
    "FREE_LOCAL_PRODUCT_LISTING": "FREE_LOCAL_PRODUCT_LISTING",

    /**
     * value: "BUY_ON_GOOGLE_LISTING"
     * @const
     */
    "BUY_ON_GOOGLE_LISTING": "BUY_ON_GOOGLE_LISTING"
};



export default Segments;

