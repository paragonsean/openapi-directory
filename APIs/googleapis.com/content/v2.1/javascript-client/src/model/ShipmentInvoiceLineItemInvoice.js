/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UnitInvoice from './UnitInvoice';

/**
 * The ShipmentInvoiceLineItemInvoice model module.
 * @module model/ShipmentInvoiceLineItemInvoice
 * @version v2.1
 */
class ShipmentInvoiceLineItemInvoice {
    /**
     * Constructs a new <code>ShipmentInvoiceLineItemInvoice</code>.
     * @alias module:model/ShipmentInvoiceLineItemInvoice
     */
    constructor() { 
        
        ShipmentInvoiceLineItemInvoice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShipmentInvoiceLineItemInvoice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShipmentInvoiceLineItemInvoice} obj Optional instance to populate.
     * @return {module:model/ShipmentInvoiceLineItemInvoice} The populated <code>ShipmentInvoiceLineItemInvoice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShipmentInvoiceLineItemInvoice();

            if (data.hasOwnProperty('lineItemId')) {
                obj['lineItemId'] = ApiClient.convertToType(data['lineItemId'], 'String');
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
            }
            if (data.hasOwnProperty('shipmentUnitIds')) {
                obj['shipmentUnitIds'] = ApiClient.convertToType(data['shipmentUnitIds'], ['String']);
            }
            if (data.hasOwnProperty('unitInvoice')) {
                obj['unitInvoice'] = UnitInvoice.constructFromObject(data['unitInvoice']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShipmentInvoiceLineItemInvoice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShipmentInvoiceLineItemInvoice</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['lineItemId'] && !(typeof data['lineItemId'] === 'string' || data['lineItemId'] instanceof String)) {
            throw new Error("Expected the field `lineItemId` to be a primitive type in the JSON string but got " + data['lineItemId']);
        }
        // ensure the json data is a string
        if (data['productId'] && !(typeof data['productId'] === 'string' || data['productId'] instanceof String)) {
            throw new Error("Expected the field `productId` to be a primitive type in the JSON string but got " + data['productId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['shipmentUnitIds'])) {
            throw new Error("Expected the field `shipmentUnitIds` to be an array in the JSON data but got " + data['shipmentUnitIds']);
        }
        // validate the optional field `unitInvoice`
        if (data['unitInvoice']) { // data not null
          UnitInvoice.validateJSON(data['unitInvoice']);
        }

        return true;
    }


}



/**
 * ID of the line item. Either lineItemId or productId must be set.
 * @member {String} lineItemId
 */
ShipmentInvoiceLineItemInvoice.prototype['lineItemId'] = undefined;

/**
 * ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set.
 * @member {String} productId
 */
ShipmentInvoiceLineItemInvoice.prototype['productId'] = undefined;

/**
 * [required] The shipment unit ID is assigned by the merchant and defines individual quantities within a line item. The same ID can be assigned to units that are the same while units that differ must be assigned a different ID (for example: free or promotional units).
 * @member {Array.<String>} shipmentUnitIds
 */
ShipmentInvoiceLineItemInvoice.prototype['shipmentUnitIds'] = undefined;

/**
 * @member {module:model/UnitInvoice} unitInvoice
 */
ShipmentInvoiceLineItemInvoice.prototype['unitInvoice'] = undefined;






export default ShipmentInvoiceLineItemInvoice;

