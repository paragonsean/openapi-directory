/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';
import InvoiceSummaryAdditionalChargeSummary from './InvoiceSummaryAdditionalChargeSummary';

/**
 * The InvoiceSummary model module.
 * @module model/InvoiceSummary
 * @version v2.1
 */
class InvoiceSummary {
    /**
     * Constructs a new <code>InvoiceSummary</code>.
     * @alias module:model/InvoiceSummary
     */
    constructor() { 
        
        InvoiceSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoiceSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceSummary} obj Optional instance to populate.
     * @return {module:model/InvoiceSummary} The populated <code>InvoiceSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceSummary();

            if (data.hasOwnProperty('additionalChargeSummaries')) {
                obj['additionalChargeSummaries'] = ApiClient.convertToType(data['additionalChargeSummaries'], [InvoiceSummaryAdditionalChargeSummary]);
            }
            if (data.hasOwnProperty('productTotal')) {
                obj['productTotal'] = Amount.constructFromObject(data['productTotal']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceSummary</code>.
     */
    static validateJSON(data) {
        if (data['additionalChargeSummaries']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['additionalChargeSummaries'])) {
                throw new Error("Expected the field `additionalChargeSummaries` to be an array in the JSON data but got " + data['additionalChargeSummaries']);
            }
            // validate the optional field `additionalChargeSummaries` (array)
            for (const item of data['additionalChargeSummaries']) {
                InvoiceSummaryAdditionalChargeSummary.validateJSON(item);
            };
        }
        // validate the optional field `productTotal`
        if (data['productTotal']) { // data not null
          Amount.validateJSON(data['productTotal']);
        }

        return true;
    }


}



/**
 * Summary of the total amounts of the additional charges.
 * @member {Array.<module:model/InvoiceSummaryAdditionalChargeSummary>} additionalChargeSummaries
 */
InvoiceSummary.prototype['additionalChargeSummaries'] = undefined;

/**
 * @member {module:model/Amount} productTotal
 */
InvoiceSummary.prototype['productTotal'] = undefined;






export default InvoiceSummary;

