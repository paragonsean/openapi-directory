/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Metrics model module.
 * @module model/Metrics
 * @version v2.1
 */
class Metrics {
    /**
     * Constructs a new <code>Metrics</code>.
     * Performance metrics. Values are only set for metrics requested explicitly in the request&#39;s search query.
     * @alias module:model/Metrics
     */
    constructor() { 
        
        Metrics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Metrics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Metrics} obj Optional instance to populate.
     * @return {module:model/Metrics} The populated <code>Metrics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Metrics();

            if (data.hasOwnProperty('aos')) {
                obj['aos'] = ApiClient.convertToType(data['aos'], 'Number');
            }
            if (data.hasOwnProperty('aovMicros')) {
                obj['aovMicros'] = ApiClient.convertToType(data['aovMicros'], 'Number');
            }
            if (data.hasOwnProperty('clicks')) {
                obj['clicks'] = ApiClient.convertToType(data['clicks'], 'String');
            }
            if (data.hasOwnProperty('conversionRate')) {
                obj['conversionRate'] = ApiClient.convertToType(data['conversionRate'], 'Number');
            }
            if (data.hasOwnProperty('conversionValueMicros')) {
                obj['conversionValueMicros'] = ApiClient.convertToType(data['conversionValueMicros'], 'String');
            }
            if (data.hasOwnProperty('conversions')) {
                obj['conversions'] = ApiClient.convertToType(data['conversions'], 'Number');
            }
            if (data.hasOwnProperty('ctr')) {
                obj['ctr'] = ApiClient.convertToType(data['ctr'], 'Number');
            }
            if (data.hasOwnProperty('daysToShip')) {
                obj['daysToShip'] = ApiClient.convertToType(data['daysToShip'], 'Number');
            }
            if (data.hasOwnProperty('impressions')) {
                obj['impressions'] = ApiClient.convertToType(data['impressions'], 'String');
            }
            if (data.hasOwnProperty('itemDaysToShip')) {
                obj['itemDaysToShip'] = ApiClient.convertToType(data['itemDaysToShip'], 'Number');
            }
            if (data.hasOwnProperty('itemFillRate')) {
                obj['itemFillRate'] = ApiClient.convertToType(data['itemFillRate'], 'Number');
            }
            if (data.hasOwnProperty('orderedItemSalesMicros')) {
                obj['orderedItemSalesMicros'] = ApiClient.convertToType(data['orderedItemSalesMicros'], 'String');
            }
            if (data.hasOwnProperty('orderedItems')) {
                obj['orderedItems'] = ApiClient.convertToType(data['orderedItems'], 'String');
            }
            if (data.hasOwnProperty('orders')) {
                obj['orders'] = ApiClient.convertToType(data['orders'], 'String');
            }
            if (data.hasOwnProperty('rejectedItems')) {
                obj['rejectedItems'] = ApiClient.convertToType(data['rejectedItems'], 'String');
            }
            if (data.hasOwnProperty('returnRate')) {
                obj['returnRate'] = ApiClient.convertToType(data['returnRate'], 'Number');
            }
            if (data.hasOwnProperty('returnedItems')) {
                obj['returnedItems'] = ApiClient.convertToType(data['returnedItems'], 'String');
            }
            if (data.hasOwnProperty('returnsMicros')) {
                obj['returnsMicros'] = ApiClient.convertToType(data['returnsMicros'], 'String');
            }
            if (data.hasOwnProperty('shippedItemSalesMicros')) {
                obj['shippedItemSalesMicros'] = ApiClient.convertToType(data['shippedItemSalesMicros'], 'String');
            }
            if (data.hasOwnProperty('shippedItems')) {
                obj['shippedItems'] = ApiClient.convertToType(data['shippedItems'], 'String');
            }
            if (data.hasOwnProperty('shippedOrders')) {
                obj['shippedOrders'] = ApiClient.convertToType(data['shippedOrders'], 'String');
            }
            if (data.hasOwnProperty('unshippedItems')) {
                obj['unshippedItems'] = ApiClient.convertToType(data['unshippedItems'], 'Number');
            }
            if (data.hasOwnProperty('unshippedOrders')) {
                obj['unshippedOrders'] = ApiClient.convertToType(data['unshippedOrders'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Metrics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Metrics</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clicks'] && !(typeof data['clicks'] === 'string' || data['clicks'] instanceof String)) {
            throw new Error("Expected the field `clicks` to be a primitive type in the JSON string but got " + data['clicks']);
        }
        // ensure the json data is a string
        if (data['conversionValueMicros'] && !(typeof data['conversionValueMicros'] === 'string' || data['conversionValueMicros'] instanceof String)) {
            throw new Error("Expected the field `conversionValueMicros` to be a primitive type in the JSON string but got " + data['conversionValueMicros']);
        }
        // ensure the json data is a string
        if (data['impressions'] && !(typeof data['impressions'] === 'string' || data['impressions'] instanceof String)) {
            throw new Error("Expected the field `impressions` to be a primitive type in the JSON string but got " + data['impressions']);
        }
        // ensure the json data is a string
        if (data['orderedItemSalesMicros'] && !(typeof data['orderedItemSalesMicros'] === 'string' || data['orderedItemSalesMicros'] instanceof String)) {
            throw new Error("Expected the field `orderedItemSalesMicros` to be a primitive type in the JSON string but got " + data['orderedItemSalesMicros']);
        }
        // ensure the json data is a string
        if (data['orderedItems'] && !(typeof data['orderedItems'] === 'string' || data['orderedItems'] instanceof String)) {
            throw new Error("Expected the field `orderedItems` to be a primitive type in the JSON string but got " + data['orderedItems']);
        }
        // ensure the json data is a string
        if (data['orders'] && !(typeof data['orders'] === 'string' || data['orders'] instanceof String)) {
            throw new Error("Expected the field `orders` to be a primitive type in the JSON string but got " + data['orders']);
        }
        // ensure the json data is a string
        if (data['rejectedItems'] && !(typeof data['rejectedItems'] === 'string' || data['rejectedItems'] instanceof String)) {
            throw new Error("Expected the field `rejectedItems` to be a primitive type in the JSON string but got " + data['rejectedItems']);
        }
        // ensure the json data is a string
        if (data['returnedItems'] && !(typeof data['returnedItems'] === 'string' || data['returnedItems'] instanceof String)) {
            throw new Error("Expected the field `returnedItems` to be a primitive type in the JSON string but got " + data['returnedItems']);
        }
        // ensure the json data is a string
        if (data['returnsMicros'] && !(typeof data['returnsMicros'] === 'string' || data['returnsMicros'] instanceof String)) {
            throw new Error("Expected the field `returnsMicros` to be a primitive type in the JSON string but got " + data['returnsMicros']);
        }
        // ensure the json data is a string
        if (data['shippedItemSalesMicros'] && !(typeof data['shippedItemSalesMicros'] === 'string' || data['shippedItemSalesMicros'] instanceof String)) {
            throw new Error("Expected the field `shippedItemSalesMicros` to be a primitive type in the JSON string but got " + data['shippedItemSalesMicros']);
        }
        // ensure the json data is a string
        if (data['shippedItems'] && !(typeof data['shippedItems'] === 'string' || data['shippedItems'] instanceof String)) {
            throw new Error("Expected the field `shippedItems` to be a primitive type in the JSON string but got " + data['shippedItems']);
        }
        // ensure the json data is a string
        if (data['shippedOrders'] && !(typeof data['shippedOrders'] === 'string' || data['shippedOrders'] instanceof String)) {
            throw new Error("Expected the field `shippedOrders` to be a primitive type in the JSON string but got " + data['shippedOrders']);
        }

        return true;
    }


}



/**
 * Average order size - the average number of items in an order. **This metric cannot be segmented by product dimensions and customer_country_code.**
 * @member {Number} aos
 */
Metrics.prototype['aos'] = undefined;

/**
 * Average order value in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) - the average value (total price of items) of all placed orders. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by product dimensions and customer_country_code.**
 * @member {Number} aovMicros
 */
Metrics.prototype['aovMicros'] = undefined;

/**
 * Number of clicks.
 * @member {String} clicks
 */
Metrics.prototype['clicks'] = undefined;

/**
 * Number of conversions divided by the number of clicks, reported on the impression date. The metric is currently available only for the FREE_PRODUCT_LISTING program.
 * @member {Number} conversionRate
 */
Metrics.prototype['conversionRate'] = undefined;

/**
 * Value of conversions in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) attributed to the product, reported on the conversion date. The metric is currently available only for the FREE_PRODUCT_LISTING program. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response.
 * @member {String} conversionValueMicros
 */
Metrics.prototype['conversionValueMicros'] = undefined;

/**
 * Number of conversions attributed to the product, reported on the conversion date. Depending on the attribution model, a conversion might be distributed across multiple clicks, where each click gets its own credit assigned. This metric is a sum of all such credits. The metric is currently available only for the FREE_PRODUCT_LISTING program.
 * @member {Number} conversions
 */
Metrics.prototype['conversions'] = undefined;

/**
 * Click-through rate - the number of clicks merchant's products receive (clicks) divided by the number of times the products are shown (impressions).
 * @member {Number} ctr
 */
Metrics.prototype['ctr'] = undefined;

/**
 * Average number of days between an order being placed and the order being fully shipped, reported on the last shipment date. **This metric cannot be segmented by product dimensions and customer_country_code.**
 * @member {Number} daysToShip
 */
Metrics.prototype['daysToShip'] = undefined;

/**
 * Number of times merchant's products are shown.
 * @member {String} impressions
 */
Metrics.prototype['impressions'] = undefined;

/**
 * Average number of days between an item being ordered and the item being **This metric cannot be segmented by customer_country_code.**
 * @member {Number} itemDaysToShip
 */
Metrics.prototype['itemDaysToShip'] = undefined;

/**
 * Percentage of shipped items in relation to all finalized items (shipped or rejected by the merchant; unshipped items are not taken into account), reported on the order date. Item fill rate is lowered by merchant rejections. **This metric cannot be segmented by customer_country_code.**
 * @member {Number} itemFillRate
 */
Metrics.prototype['itemFillRate'] = undefined;

/**
 * Total price of ordered items in micros (1 millionth of a standard unit, 1 USD = 1000000 micros). Excludes shipping, taxes (US only), and customer cancellations that happened within 30 minutes of placing the order. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**
 * @member {String} orderedItemSalesMicros
 */
Metrics.prototype['orderedItemSalesMicros'] = undefined;

/**
 * Number of ordered items. Excludes customer cancellations that happened within 30 minutes of placing the order. **This metric cannot be segmented by customer_country_code.**
 * @member {String} orderedItems
 */
Metrics.prototype['orderedItems'] = undefined;

/**
 * Number of placed orders. Excludes customer cancellations that happened within 30 minutes of placing the order. **This metric cannot be segmented by product dimensions and customer_country_code.**
 * @member {String} orders
 */
Metrics.prototype['orders'] = undefined;

/**
 * Number of ordered items canceled by the merchant, reported on the order date. **This metric cannot be segmented by customer_country_code.**
 * @member {String} rejectedItems
 */
Metrics.prototype['rejectedItems'] = undefined;

/**
 * Total price of returned items divided by the total price of shipped items, reported on the order date. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**
 * @member {Number} returnRate
 */
Metrics.prototype['returnRate'] = undefined;

/**
 * Number of ordered items sent back for return, reported on the date when the merchant accepted the return. **This metric cannot be segmented by customer_country_code.**
 * @member {String} returnedItems
 */
Metrics.prototype['returnedItems'] = undefined;

/**
 * Total price of ordered items sent back for return in micros (1 millionth of a standard unit, 1 USD = 1000000 micros), reported on the date when the merchant accepted the return. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**
 * @member {String} returnsMicros
 */
Metrics.prototype['returnsMicros'] = undefined;

/**
 * Total price of shipped items in micros (1 millionth of a standard unit, 1 USD = 1000000 micros), reported on the order date. Excludes shipping and taxes (US only). The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**
 * @member {String} shippedItemSalesMicros
 */
Metrics.prototype['shippedItemSalesMicros'] = undefined;

/**
 * Number of shipped items, reported on the shipment date. **This metric cannot be segmented by customer_country_code.**
 * @member {String} shippedItems
 */
Metrics.prototype['shippedItems'] = undefined;

/**
 * Number of fully shipped orders, reported on the last shipment date. **This metric cannot be segmented by product dimensions and customer_country_code.**
 * @member {String} shippedOrders
 */
Metrics.prototype['shippedOrders'] = undefined;

/**
 * Number of ordered items not shipped up until the end of the queried day. If a multi-day period is specified in the search query, the returned value is the average number of unshipped items over the days in the queried period. **This metric cannot be segmented by customer_country_code.**
 * @member {Number} unshippedItems
 */
Metrics.prototype['unshippedItems'] = undefined;

/**
 * Number of orders not shipped or partially shipped up until the end of the queried day. If a multi-day period is specified in the search query, the returned value is the average number of unshipped orders over the days in the queried period. **This metric cannot be segmented by product dimensions and customer_country_code.**
 * @member {Number} unshippedOrders
 */
Metrics.prototype['unshippedOrders'] = undefined;






export default Metrics;

