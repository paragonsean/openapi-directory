/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CollectionFeaturedProduct from './CollectionFeaturedProduct';

/**
 * The Collection model module.
 * @module model/Collection
 * @version v2.1
 */
class Collection {
    /**
     * Constructs a new <code>Collection</code>.
     * The collection message.
     * @alias module:model/Collection
     */
    constructor() { 
        
        Collection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Collection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Collection} obj Optional instance to populate.
     * @return {module:model/Collection} The populated <code>Collection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Collection();

            if (data.hasOwnProperty('customLabel0')) {
                obj['customLabel0'] = ApiClient.convertToType(data['customLabel0'], 'String');
            }
            if (data.hasOwnProperty('customLabel1')) {
                obj['customLabel1'] = ApiClient.convertToType(data['customLabel1'], 'String');
            }
            if (data.hasOwnProperty('customLabel2')) {
                obj['customLabel2'] = ApiClient.convertToType(data['customLabel2'], 'String');
            }
            if (data.hasOwnProperty('customLabel3')) {
                obj['customLabel3'] = ApiClient.convertToType(data['customLabel3'], 'String');
            }
            if (data.hasOwnProperty('customLabel4')) {
                obj['customLabel4'] = ApiClient.convertToType(data['customLabel4'], 'String');
            }
            if (data.hasOwnProperty('featuredProduct')) {
                obj['featuredProduct'] = ApiClient.convertToType(data['featuredProduct'], [CollectionFeaturedProduct]);
            }
            if (data.hasOwnProperty('headline')) {
                obj['headline'] = ApiClient.convertToType(data['headline'], ['String']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('imageLink')) {
                obj['imageLink'] = ApiClient.convertToType(data['imageLink'], ['String']);
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('mobileLink')) {
                obj['mobileLink'] = ApiClient.convertToType(data['mobileLink'], 'String');
            }
            if (data.hasOwnProperty('productCountry')) {
                obj['productCountry'] = ApiClient.convertToType(data['productCountry'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Collection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Collection</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customLabel0'] && !(typeof data['customLabel0'] === 'string' || data['customLabel0'] instanceof String)) {
            throw new Error("Expected the field `customLabel0` to be a primitive type in the JSON string but got " + data['customLabel0']);
        }
        // ensure the json data is a string
        if (data['customLabel1'] && !(typeof data['customLabel1'] === 'string' || data['customLabel1'] instanceof String)) {
            throw new Error("Expected the field `customLabel1` to be a primitive type in the JSON string but got " + data['customLabel1']);
        }
        // ensure the json data is a string
        if (data['customLabel2'] && !(typeof data['customLabel2'] === 'string' || data['customLabel2'] instanceof String)) {
            throw new Error("Expected the field `customLabel2` to be a primitive type in the JSON string but got " + data['customLabel2']);
        }
        // ensure the json data is a string
        if (data['customLabel3'] && !(typeof data['customLabel3'] === 'string' || data['customLabel3'] instanceof String)) {
            throw new Error("Expected the field `customLabel3` to be a primitive type in the JSON string but got " + data['customLabel3']);
        }
        // ensure the json data is a string
        if (data['customLabel4'] && !(typeof data['customLabel4'] === 'string' || data['customLabel4'] instanceof String)) {
            throw new Error("Expected the field `customLabel4` to be a primitive type in the JSON string but got " + data['customLabel4']);
        }
        if (data['featuredProduct']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['featuredProduct'])) {
                throw new Error("Expected the field `featuredProduct` to be an array in the JSON data but got " + data['featuredProduct']);
            }
            // validate the optional field `featuredProduct` (array)
            for (const item of data['featuredProduct']) {
                CollectionFeaturedProduct.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['headline'])) {
            throw new Error("Expected the field `headline` to be an array in the JSON data but got " + data['headline']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['imageLink'])) {
            throw new Error("Expected the field `imageLink` to be an array in the JSON data but got " + data['imageLink']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['mobileLink'] && !(typeof data['mobileLink'] === 'string' || data['mobileLink'] instanceof String)) {
            throw new Error("Expected the field `mobileLink` to be a primitive type in the JSON string but got " + data['mobileLink']);
        }
        // ensure the json data is a string
        if (data['productCountry'] && !(typeof data['productCountry'] === 'string' || data['productCountry'] instanceof String)) {
            throw new Error("Expected the field `productCountry` to be a primitive type in the JSON string but got " + data['productCountry']);
        }

        return true;
    }


}



/**
 * Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns. [Custom label](https://support.google.com/merchants/answer/9674217)
 * @member {String} customLabel0
 */
Collection.prototype['customLabel0'] = undefined;

/**
 * Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
 * @member {String} customLabel1
 */
Collection.prototype['customLabel1'] = undefined;

/**
 * Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
 * @member {String} customLabel2
 */
Collection.prototype['customLabel2'] = undefined;

/**
 * Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
 * @member {String} customLabel3
 */
Collection.prototype['customLabel3'] = undefined;

/**
 * Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
 * @member {String} customLabel4
 */
Collection.prototype['customLabel4'] = undefined;

/**
 * This identifies one or more products associated with the collection. Used as a lookup to the corresponding product ID in your product feeds. Provide a maximum of 100 featuredProduct (for collections). Provide up to 10 featuredProduct (for Shoppable Images only) with ID and X and Y coordinates. [featured_product attribute](https://support.google.com/merchants/answer/9703736)
 * @member {Array.<module:model/CollectionFeaturedProduct>} featuredProduct
 */
Collection.prototype['featuredProduct'] = undefined;

/**
 * Your collection's name. [headline attribute](https://support.google.com/merchants/answer/9673580)
 * @member {Array.<String>} headline
 */
Collection.prototype['headline'] = undefined;

/**
 * Required. The REST ID of the collection. Content API methods that operate on collections take this as their collectionId parameter. The REST ID for a collection is of the form collectionId. [id attribute](https://support.google.com/merchants/answer/9649290)
 * @member {String} id
 */
Collection.prototype['id'] = undefined;

/**
 * The URL of a collection’s image. [image_link attribute](https://support.google.com/merchants/answer/9703236)
 * @member {Array.<String>} imageLink
 */
Collection.prototype['imageLink'] = undefined;

/**
 * The language of a collection and the language of any featured products linked to the collection. [language attribute](https://support.google.com/merchants/answer/9673781)
 * @member {String} language
 */
Collection.prototype['language'] = undefined;

/**
 * A collection’s landing page. URL directly linking to your collection's page on your website. [link attribute](https://support.google.com/merchants/answer/9673983)
 * @member {String} link
 */
Collection.prototype['link'] = undefined;

/**
 * A collection’s mobile-optimized landing page when you have a different URL for mobile and desktop traffic. [mobile_link attribute](https://support.google.com/merchants/answer/9646123)
 * @member {String} mobileLink
 */
Collection.prototype['mobileLink'] = undefined;

/**
 * [product_country attribute](https://support.google.com/merchants/answer/9674155)
 * @member {String} productCountry
 */
Collection.prototype['productCountry'] = undefined;






export default Collection;

