/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PriceAmount from './PriceAmount';
import PromotionPromotionStatus from './PromotionPromotionStatus';
import TimePeriod from './TimePeriod';

/**
 * The Promotion model module.
 * @module model/Promotion
 * @version v2.1
 */
class Promotion {
    /**
     * Constructs a new <code>Promotion</code>.
     * Represents a promotion. See the following articles for more details. * [Promotions feed specification](https://support.google.com/merchants/answer/2906014) * [Local promotions feed specification](https://support.google.com/merchants/answer/10146130) * [Promotions on Buy on Google product data specification](https://support.google.com/merchants/answer/9173673)
     * @alias module:model/Promotion
     */
    constructor() { 
        
        Promotion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Promotion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Promotion} obj Optional instance to populate.
     * @return {module:model/Promotion} The populated <code>Promotion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Promotion();

            if (data.hasOwnProperty('brand')) {
                obj['brand'] = ApiClient.convertToType(data['brand'], ['String']);
            }
            if (data.hasOwnProperty('brandExclusion')) {
                obj['brandExclusion'] = ApiClient.convertToType(data['brandExclusion'], ['String']);
            }
            if (data.hasOwnProperty('contentLanguage')) {
                obj['contentLanguage'] = ApiClient.convertToType(data['contentLanguage'], 'String');
            }
            if (data.hasOwnProperty('couponValueType')) {
                obj['couponValueType'] = ApiClient.convertToType(data['couponValueType'], 'String');
            }
            if (data.hasOwnProperty('freeGiftDescription')) {
                obj['freeGiftDescription'] = ApiClient.convertToType(data['freeGiftDescription'], 'String');
            }
            if (data.hasOwnProperty('freeGiftItemId')) {
                obj['freeGiftItemId'] = ApiClient.convertToType(data['freeGiftItemId'], 'String');
            }
            if (data.hasOwnProperty('freeGiftValue')) {
                obj['freeGiftValue'] = PriceAmount.constructFromObject(data['freeGiftValue']);
            }
            if (data.hasOwnProperty('genericRedemptionCode')) {
                obj['genericRedemptionCode'] = ApiClient.convertToType(data['genericRedemptionCode'], 'String');
            }
            if (data.hasOwnProperty('getThisQuantityDiscounted')) {
                obj['getThisQuantityDiscounted'] = ApiClient.convertToType(data['getThisQuantityDiscounted'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('itemGroupId')) {
                obj['itemGroupId'] = ApiClient.convertToType(data['itemGroupId'], ['String']);
            }
            if (data.hasOwnProperty('itemGroupIdExclusion')) {
                obj['itemGroupIdExclusion'] = ApiClient.convertToType(data['itemGroupIdExclusion'], ['String']);
            }
            if (data.hasOwnProperty('itemId')) {
                obj['itemId'] = ApiClient.convertToType(data['itemId'], ['String']);
            }
            if (data.hasOwnProperty('itemIdExclusion')) {
                obj['itemIdExclusion'] = ApiClient.convertToType(data['itemIdExclusion'], ['String']);
            }
            if (data.hasOwnProperty('limitQuantity')) {
                obj['limitQuantity'] = ApiClient.convertToType(data['limitQuantity'], 'Number');
            }
            if (data.hasOwnProperty('limitValue')) {
                obj['limitValue'] = PriceAmount.constructFromObject(data['limitValue']);
            }
            if (data.hasOwnProperty('longTitle')) {
                obj['longTitle'] = ApiClient.convertToType(data['longTitle'], 'String');
            }
            if (data.hasOwnProperty('minimumPurchaseAmount')) {
                obj['minimumPurchaseAmount'] = PriceAmount.constructFromObject(data['minimumPurchaseAmount']);
            }
            if (data.hasOwnProperty('minimumPurchaseQuantity')) {
                obj['minimumPurchaseQuantity'] = ApiClient.convertToType(data['minimumPurchaseQuantity'], 'Number');
            }
            if (data.hasOwnProperty('moneyBudget')) {
                obj['moneyBudget'] = PriceAmount.constructFromObject(data['moneyBudget']);
            }
            if (data.hasOwnProperty('moneyOffAmount')) {
                obj['moneyOffAmount'] = PriceAmount.constructFromObject(data['moneyOffAmount']);
            }
            if (data.hasOwnProperty('offerType')) {
                obj['offerType'] = ApiClient.convertToType(data['offerType'], 'String');
            }
            if (data.hasOwnProperty('orderLimit')) {
                obj['orderLimit'] = ApiClient.convertToType(data['orderLimit'], 'Number');
            }
            if (data.hasOwnProperty('percentOff')) {
                obj['percentOff'] = ApiClient.convertToType(data['percentOff'], 'Number');
            }
            if (data.hasOwnProperty('productApplicability')) {
                obj['productApplicability'] = ApiClient.convertToType(data['productApplicability'], 'String');
            }
            if (data.hasOwnProperty('productType')) {
                obj['productType'] = ApiClient.convertToType(data['productType'], ['String']);
            }
            if (data.hasOwnProperty('productTypeExclusion')) {
                obj['productTypeExclusion'] = ApiClient.convertToType(data['productTypeExclusion'], ['String']);
            }
            if (data.hasOwnProperty('promotionDestinationIds')) {
                obj['promotionDestinationIds'] = ApiClient.convertToType(data['promotionDestinationIds'], ['String']);
            }
            if (data.hasOwnProperty('promotionDisplayDates')) {
                obj['promotionDisplayDates'] = ApiClient.convertToType(data['promotionDisplayDates'], 'String');
            }
            if (data.hasOwnProperty('promotionDisplayTimePeriod')) {
                obj['promotionDisplayTimePeriod'] = TimePeriod.constructFromObject(data['promotionDisplayTimePeriod']);
            }
            if (data.hasOwnProperty('promotionEffectiveDates')) {
                obj['promotionEffectiveDates'] = ApiClient.convertToType(data['promotionEffectiveDates'], 'String');
            }
            if (data.hasOwnProperty('promotionEffectiveTimePeriod')) {
                obj['promotionEffectiveTimePeriod'] = TimePeriod.constructFromObject(data['promotionEffectiveTimePeriod']);
            }
            if (data.hasOwnProperty('promotionId')) {
                obj['promotionId'] = ApiClient.convertToType(data['promotionId'], 'String');
            }
            if (data.hasOwnProperty('promotionStatus')) {
                obj['promotionStatus'] = PromotionPromotionStatus.constructFromObject(data['promotionStatus']);
            }
            if (data.hasOwnProperty('promotionUrl')) {
                obj['promotionUrl'] = ApiClient.convertToType(data['promotionUrl'], 'String');
            }
            if (data.hasOwnProperty('redemptionChannel')) {
                obj['redemptionChannel'] = ApiClient.convertToType(data['redemptionChannel'], ['String']);
            }
            if (data.hasOwnProperty('shippingServiceNames')) {
                obj['shippingServiceNames'] = ApiClient.convertToType(data['shippingServiceNames'], ['String']);
            }
            if (data.hasOwnProperty('storeApplicability')) {
                obj['storeApplicability'] = ApiClient.convertToType(data['storeApplicability'], 'String');
            }
            if (data.hasOwnProperty('storeCode')) {
                obj['storeCode'] = ApiClient.convertToType(data['storeCode'], ['String']);
            }
            if (data.hasOwnProperty('storeCodeExclusion')) {
                obj['storeCodeExclusion'] = ApiClient.convertToType(data['storeCodeExclusion'], ['String']);
            }
            if (data.hasOwnProperty('targetCountry')) {
                obj['targetCountry'] = ApiClient.convertToType(data['targetCountry'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Promotion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Promotion</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['brand'])) {
            throw new Error("Expected the field `brand` to be an array in the JSON data but got " + data['brand']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['brandExclusion'])) {
            throw new Error("Expected the field `brandExclusion` to be an array in the JSON data but got " + data['brandExclusion']);
        }
        // ensure the json data is a string
        if (data['contentLanguage'] && !(typeof data['contentLanguage'] === 'string' || data['contentLanguage'] instanceof String)) {
            throw new Error("Expected the field `contentLanguage` to be a primitive type in the JSON string but got " + data['contentLanguage']);
        }
        // ensure the json data is a string
        if (data['couponValueType'] && !(typeof data['couponValueType'] === 'string' || data['couponValueType'] instanceof String)) {
            throw new Error("Expected the field `couponValueType` to be a primitive type in the JSON string but got " + data['couponValueType']);
        }
        // ensure the json data is a string
        if (data['freeGiftDescription'] && !(typeof data['freeGiftDescription'] === 'string' || data['freeGiftDescription'] instanceof String)) {
            throw new Error("Expected the field `freeGiftDescription` to be a primitive type in the JSON string but got " + data['freeGiftDescription']);
        }
        // ensure the json data is a string
        if (data['freeGiftItemId'] && !(typeof data['freeGiftItemId'] === 'string' || data['freeGiftItemId'] instanceof String)) {
            throw new Error("Expected the field `freeGiftItemId` to be a primitive type in the JSON string but got " + data['freeGiftItemId']);
        }
        // validate the optional field `freeGiftValue`
        if (data['freeGiftValue']) { // data not null
          PriceAmount.validateJSON(data['freeGiftValue']);
        }
        // ensure the json data is a string
        if (data['genericRedemptionCode'] && !(typeof data['genericRedemptionCode'] === 'string' || data['genericRedemptionCode'] instanceof String)) {
            throw new Error("Expected the field `genericRedemptionCode` to be a primitive type in the JSON string but got " + data['genericRedemptionCode']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['itemGroupId'])) {
            throw new Error("Expected the field `itemGroupId` to be an array in the JSON data but got " + data['itemGroupId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['itemGroupIdExclusion'])) {
            throw new Error("Expected the field `itemGroupIdExclusion` to be an array in the JSON data but got " + data['itemGroupIdExclusion']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['itemId'])) {
            throw new Error("Expected the field `itemId` to be an array in the JSON data but got " + data['itemId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['itemIdExclusion'])) {
            throw new Error("Expected the field `itemIdExclusion` to be an array in the JSON data but got " + data['itemIdExclusion']);
        }
        // validate the optional field `limitValue`
        if (data['limitValue']) { // data not null
          PriceAmount.validateJSON(data['limitValue']);
        }
        // ensure the json data is a string
        if (data['longTitle'] && !(typeof data['longTitle'] === 'string' || data['longTitle'] instanceof String)) {
            throw new Error("Expected the field `longTitle` to be a primitive type in the JSON string but got " + data['longTitle']);
        }
        // validate the optional field `minimumPurchaseAmount`
        if (data['minimumPurchaseAmount']) { // data not null
          PriceAmount.validateJSON(data['minimumPurchaseAmount']);
        }
        // validate the optional field `moneyBudget`
        if (data['moneyBudget']) { // data not null
          PriceAmount.validateJSON(data['moneyBudget']);
        }
        // validate the optional field `moneyOffAmount`
        if (data['moneyOffAmount']) { // data not null
          PriceAmount.validateJSON(data['moneyOffAmount']);
        }
        // ensure the json data is a string
        if (data['offerType'] && !(typeof data['offerType'] === 'string' || data['offerType'] instanceof String)) {
            throw new Error("Expected the field `offerType` to be a primitive type in the JSON string but got " + data['offerType']);
        }
        // ensure the json data is a string
        if (data['productApplicability'] && !(typeof data['productApplicability'] === 'string' || data['productApplicability'] instanceof String)) {
            throw new Error("Expected the field `productApplicability` to be a primitive type in the JSON string but got " + data['productApplicability']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['productType'])) {
            throw new Error("Expected the field `productType` to be an array in the JSON data but got " + data['productType']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['productTypeExclusion'])) {
            throw new Error("Expected the field `productTypeExclusion` to be an array in the JSON data but got " + data['productTypeExclusion']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['promotionDestinationIds'])) {
            throw new Error("Expected the field `promotionDestinationIds` to be an array in the JSON data but got " + data['promotionDestinationIds']);
        }
        // ensure the json data is a string
        if (data['promotionDisplayDates'] && !(typeof data['promotionDisplayDates'] === 'string' || data['promotionDisplayDates'] instanceof String)) {
            throw new Error("Expected the field `promotionDisplayDates` to be a primitive type in the JSON string but got " + data['promotionDisplayDates']);
        }
        // validate the optional field `promotionDisplayTimePeriod`
        if (data['promotionDisplayTimePeriod']) { // data not null
          TimePeriod.validateJSON(data['promotionDisplayTimePeriod']);
        }
        // ensure the json data is a string
        if (data['promotionEffectiveDates'] && !(typeof data['promotionEffectiveDates'] === 'string' || data['promotionEffectiveDates'] instanceof String)) {
            throw new Error("Expected the field `promotionEffectiveDates` to be a primitive type in the JSON string but got " + data['promotionEffectiveDates']);
        }
        // validate the optional field `promotionEffectiveTimePeriod`
        if (data['promotionEffectiveTimePeriod']) { // data not null
          TimePeriod.validateJSON(data['promotionEffectiveTimePeriod']);
        }
        // ensure the json data is a string
        if (data['promotionId'] && !(typeof data['promotionId'] === 'string' || data['promotionId'] instanceof String)) {
            throw new Error("Expected the field `promotionId` to be a primitive type in the JSON string but got " + data['promotionId']);
        }
        // validate the optional field `promotionStatus`
        if (data['promotionStatus']) { // data not null
          PromotionPromotionStatus.validateJSON(data['promotionStatus']);
        }
        // ensure the json data is a string
        if (data['promotionUrl'] && !(typeof data['promotionUrl'] === 'string' || data['promotionUrl'] instanceof String)) {
            throw new Error("Expected the field `promotionUrl` to be a primitive type in the JSON string but got " + data['promotionUrl']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['redemptionChannel'])) {
            throw new Error("Expected the field `redemptionChannel` to be an array in the JSON data but got " + data['redemptionChannel']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['shippingServiceNames'])) {
            throw new Error("Expected the field `shippingServiceNames` to be an array in the JSON data but got " + data['shippingServiceNames']);
        }
        // ensure the json data is a string
        if (data['storeApplicability'] && !(typeof data['storeApplicability'] === 'string' || data['storeApplicability'] instanceof String)) {
            throw new Error("Expected the field `storeApplicability` to be a primitive type in the JSON string but got " + data['storeApplicability']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['storeCode'])) {
            throw new Error("Expected the field `storeCode` to be an array in the JSON data but got " + data['storeCode']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['storeCodeExclusion'])) {
            throw new Error("Expected the field `storeCodeExclusion` to be an array in the JSON data but got " + data['storeCodeExclusion']);
        }
        // ensure the json data is a string
        if (data['targetCountry'] && !(typeof data['targetCountry'] === 'string' || data['targetCountry'] instanceof String)) {
            throw new Error("Expected the field `targetCountry` to be a primitive type in the JSON string but got " + data['targetCountry']);
        }

        return true;
    }


}



/**
 * Product filter by brand for the promotion.
 * @member {Array.<String>} brand
 */
Promotion.prototype['brand'] = undefined;

/**
 * Product filter by brand exclusion for the promotion.
 * @member {Array.<String>} brandExclusion
 */
Promotion.prototype['brandExclusion'] = undefined;

/**
 * Required. The content language used as part of the unique identifier. `en` content language is available for all target countries. `fr` content language is available for `CA` and `FR` target countries. `de` content language is available for `DE` target country. `nl` content language is available for `NL` target country. `it` content language is available for `IT` target country. `pt` content language is available for `BR` target country. `ja` content language is available for `JP` target country. `ko` content language is available for `KR` target country.
 * @member {String} contentLanguage
 */
Promotion.prototype['contentLanguage'] = undefined;

/**
 * Required. Coupon value type for the promotion.
 * @member {module:model/Promotion.CouponValueTypeEnum} couponValueType
 */
Promotion.prototype['couponValueType'] = undefined;

/**
 * Free gift description for the promotion.
 * @member {String} freeGiftDescription
 */
Promotion.prototype['freeGiftDescription'] = undefined;

/**
 * Free gift item ID for the promotion.
 * @member {String} freeGiftItemId
 */
Promotion.prototype['freeGiftItemId'] = undefined;

/**
 * @member {module:model/PriceAmount} freeGiftValue
 */
Promotion.prototype['freeGiftValue'] = undefined;

/**
 * Generic redemption code for the promotion. To be used with the `offerType` field.
 * @member {String} genericRedemptionCode
 */
Promotion.prototype['genericRedemptionCode'] = undefined;

/**
 * The number of items discounted in the promotion.
 * @member {Number} getThisQuantityDiscounted
 */
Promotion.prototype['getThisQuantityDiscounted'] = undefined;

/**
 * Output only. The REST promotion ID to uniquely identify the promotion. Content API methods that operate on promotions take this as their `promotionId` parameter. The REST ID for a promotion is of the form channel:contentLanguage:targetCountry:promotionId The `channel` field has a value of `\"online\"`, `\"in_store\"`, or `\"online_in_store\"`.
 * @member {String} id
 */
Promotion.prototype['id'] = undefined;

/**
 * Product filter by item group ID for the promotion.
 * @member {Array.<String>} itemGroupId
 */
Promotion.prototype['itemGroupId'] = undefined;

/**
 * Product filter by item group ID exclusion for the promotion.
 * @member {Array.<String>} itemGroupIdExclusion
 */
Promotion.prototype['itemGroupIdExclusion'] = undefined;

/**
 * Product filter by item ID for the promotion.
 * @member {Array.<String>} itemId
 */
Promotion.prototype['itemId'] = undefined;

/**
 * Product filter by item ID exclusion for the promotion.
 * @member {Array.<String>} itemIdExclusion
 */
Promotion.prototype['itemIdExclusion'] = undefined;

/**
 * Maximum purchase quantity for the promotion.
 * @member {Number} limitQuantity
 */
Promotion.prototype['limitQuantity'] = undefined;

/**
 * @member {module:model/PriceAmount} limitValue
 */
Promotion.prototype['limitValue'] = undefined;

/**
 * Required. Long title for the promotion.
 * @member {String} longTitle
 */
Promotion.prototype['longTitle'] = undefined;

/**
 * @member {module:model/PriceAmount} minimumPurchaseAmount
 */
Promotion.prototype['minimumPurchaseAmount'] = undefined;

/**
 * Minimum purchase quantity for the promotion.
 * @member {Number} minimumPurchaseQuantity
 */
Promotion.prototype['minimumPurchaseQuantity'] = undefined;

/**
 * @member {module:model/PriceAmount} moneyBudget
 */
Promotion.prototype['moneyBudget'] = undefined;

/**
 * @member {module:model/PriceAmount} moneyOffAmount
 */
Promotion.prototype['moneyOffAmount'] = undefined;

/**
 * Required. Type of the promotion.
 * @member {module:model/Promotion.OfferTypeEnum} offerType
 */
Promotion.prototype['offerType'] = undefined;

/**
 * Order limit for the promotion.
 * @member {Number} orderLimit
 */
Promotion.prototype['orderLimit'] = undefined;

/**
 * The percentage discount offered in the promotion.
 * @member {Number} percentOff
 */
Promotion.prototype['percentOff'] = undefined;

/**
 * Required. Applicability of the promotion to either all products or only specific products.
 * @member {module:model/Promotion.ProductApplicabilityEnum} productApplicability
 */
Promotion.prototype['productApplicability'] = undefined;

/**
 * Product filter by product type for the promotion.
 * @member {Array.<String>} productType
 */
Promotion.prototype['productType'] = undefined;

/**
 * Product filter by product type exclusion for the promotion.
 * @member {Array.<String>} productTypeExclusion
 */
Promotion.prototype['productTypeExclusion'] = undefined;

/**
 * Destination ID for the promotion.
 * @member {Array.<String>} promotionDestinationIds
 */
Promotion.prototype['promotionDestinationIds'] = undefined;

/**
 * String representation of the promotion display dates. Deprecated. Use `promotion_display_time_period` instead.
 * @member {String} promotionDisplayDates
 */
Promotion.prototype['promotionDisplayDates'] = undefined;

/**
 * @member {module:model/TimePeriod} promotionDisplayTimePeriod
 */
Promotion.prototype['promotionDisplayTimePeriod'] = undefined;

/**
 * String representation of the promotion effective dates. Deprecated. Use `promotion_effective_time_period` instead.
 * @member {String} promotionEffectiveDates
 */
Promotion.prototype['promotionEffectiveDates'] = undefined;

/**
 * @member {module:model/TimePeriod} promotionEffectiveTimePeriod
 */
Promotion.prototype['promotionEffectiveTimePeriod'] = undefined;

/**
 * Required. The user provided promotion ID to uniquely identify the promotion.
 * @member {String} promotionId
 */
Promotion.prototype['promotionId'] = undefined;

/**
 * @member {module:model/PromotionPromotionStatus} promotionStatus
 */
Promotion.prototype['promotionStatus'] = undefined;

/**
 * URL to the page on the merchant's site where the promotion shows. Local Inventory ads promotions throw an error if no promo url is included. URL is used to confirm that the promotion is valid and can be redeemed.
 * @member {String} promotionUrl
 */
Promotion.prototype['promotionUrl'] = undefined;

/**
 * Required. Redemption channel for the promotion. At least one channel is required.
 * @member {Array.<module:model/Promotion.RedemptionChannelEnum>} redemptionChannel
 */
Promotion.prototype['redemptionChannel'] = undefined;

/**
 * Shipping service names for the promotion.
 * @member {Array.<String>} shippingServiceNames
 */
Promotion.prototype['shippingServiceNames'] = undefined;

/**
 * Whether the promotion applies to all stores, or only specified stores. Local Inventory ads promotions throw an error if no store applicability is included. An INVALID_ARGUMENT error is thrown if store_applicability is set to ALL_STORES and store_code or score_code_exclusion is set to a value.
 * @member {module:model/Promotion.StoreApplicabilityEnum} storeApplicability
 */
Promotion.prototype['storeApplicability'] = undefined;

/**
 * Store codes to include for the promotion.
 * @member {Array.<String>} storeCode
 */
Promotion.prototype['storeCode'] = undefined;

/**
 * Store codes to exclude for the promotion.
 * @member {Array.<String>} storeCodeExclusion
 */
Promotion.prototype['storeCodeExclusion'] = undefined;

/**
 * Required. The target country used as part of the unique identifier. Can be `AU`, `CA`, `DE`, `FR`, `GB`, `IN`, `US`, `BR`, `ES`, `NL`, `JP`, `IT` or `KR`.
 * @member {String} targetCountry
 */
Promotion.prototype['targetCountry'] = undefined;





/**
 * Allowed values for the <code>couponValueType</code> property.
 * @enum {String}
 * @readonly
 */
Promotion['CouponValueTypeEnum'] = {

    /**
     * value: "COUPON_VALUE_TYPE_UNSPECIFIED"
     * @const
     */
    "COUPON_VALUE_TYPE_UNSPECIFIED": "COUPON_VALUE_TYPE_UNSPECIFIED",

    /**
     * value: "MONEY_OFF"
     * @const
     */
    "MONEY_OFF": "MONEY_OFF",

    /**
     * value: "PERCENT_OFF"
     * @const
     */
    "PERCENT_OFF": "PERCENT_OFF",

    /**
     * value: "BUY_M_GET_N_MONEY_OFF"
     * @const
     */
    "BUY_M_GET_N_MONEY_OFF": "BUY_M_GET_N_MONEY_OFF",

    /**
     * value: "BUY_M_GET_N_PERCENT_OFF"
     * @const
     */
    "BUY_M_GET_N_PERCENT_OFF": "BUY_M_GET_N_PERCENT_OFF",

    /**
     * value: "BUY_M_GET_MONEY_OFF"
     * @const
     */
    "BUY_M_GET_MONEY_OFF": "BUY_M_GET_MONEY_OFF",

    /**
     * value: "BUY_M_GET_PERCENT_OFF"
     * @const
     */
    "BUY_M_GET_PERCENT_OFF": "BUY_M_GET_PERCENT_OFF",

    /**
     * value: "FREE_GIFT"
     * @const
     */
    "FREE_GIFT": "FREE_GIFT",

    /**
     * value: "FREE_GIFT_WITH_VALUE"
     * @const
     */
    "FREE_GIFT_WITH_VALUE": "FREE_GIFT_WITH_VALUE",

    /**
     * value: "FREE_GIFT_WITH_ITEM_ID"
     * @const
     */
    "FREE_GIFT_WITH_ITEM_ID": "FREE_GIFT_WITH_ITEM_ID",

    /**
     * value: "FREE_SHIPPING_STANDARD"
     * @const
     */
    "FREE_SHIPPING_STANDARD": "FREE_SHIPPING_STANDARD",

    /**
     * value: "FREE_SHIPPING_OVERNIGHT"
     * @const
     */
    "FREE_SHIPPING_OVERNIGHT": "FREE_SHIPPING_OVERNIGHT",

    /**
     * value: "FREE_SHIPPING_TWO_DAY"
     * @const
     */
    "FREE_SHIPPING_TWO_DAY": "FREE_SHIPPING_TWO_DAY"
};


/**
 * Allowed values for the <code>offerType</code> property.
 * @enum {String}
 * @readonly
 */
Promotion['OfferTypeEnum'] = {

    /**
     * value: "OFFER_TYPE_UNSPECIFIED"
     * @const
     */
    "OFFER_TYPE_UNSPECIFIED": "OFFER_TYPE_UNSPECIFIED",

    /**
     * value: "NO_CODE"
     * @const
     */
    "NO_CODE": "NO_CODE",

    /**
     * value: "GENERIC_CODE"
     * @const
     */
    "GENERIC_CODE": "GENERIC_CODE"
};


/**
 * Allowed values for the <code>productApplicability</code> property.
 * @enum {String}
 * @readonly
 */
Promotion['ProductApplicabilityEnum'] = {

    /**
     * value: "PRODUCT_APPLICABILITY_UNSPECIFIED"
     * @const
     */
    "PRODUCT_APPLICABILITY_UNSPECIFIED": "PRODUCT_APPLICABILITY_UNSPECIFIED",

    /**
     * value: "ALL_PRODUCTS"
     * @const
     */
    "ALL_PRODUCTS": "ALL_PRODUCTS",

    /**
     * value: "SPECIFIC_PRODUCTS"
     * @const
     */
    "SPECIFIC_PRODUCTS": "SPECIFIC_PRODUCTS"
};


/**
 * Allowed values for the <code>redemptionChannel</code> property.
 * @enum {String}
 * @readonly
 */
Promotion['RedemptionChannelEnum'] = {

    /**
     * value: "REDEMPTION_CHANNEL_UNSPECIFIED"
     * @const
     */
    "REDEMPTION_CHANNEL_UNSPECIFIED": "REDEMPTION_CHANNEL_UNSPECIFIED",

    /**
     * value: "IN_STORE"
     * @const
     */
    "IN_STORE": "IN_STORE",

    /**
     * value: "ONLINE"
     * @const
     */
    "ONLINE": "ONLINE"
};


/**
 * Allowed values for the <code>storeApplicability</code> property.
 * @enum {String}
 * @readonly
 */
Promotion['StoreApplicabilityEnum'] = {

    /**
     * value: "STORE_APPLICABILITY_UNSPECIFIED"
     * @const
     */
    "STORE_APPLICABILITY_UNSPECIFIED": "STORE_APPLICABILITY_UNSPECIFIED",

    /**
     * value: "ALL_STORES"
     * @const
     */
    "ALL_STORES": "ALL_STORES",

    /**
     * value: "SPECIFIC_STORES"
     * @const
     */
    "SPECIFIC_STORES": "SPECIFIC_STORES"
};



export default Promotion;

