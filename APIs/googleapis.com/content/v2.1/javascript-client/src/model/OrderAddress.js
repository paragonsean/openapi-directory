/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderAddress model module.
 * @module model/OrderAddress
 * @version v2.1
 */
class OrderAddress {
    /**
     * Constructs a new <code>OrderAddress</code>.
     * @alias module:model/OrderAddress
     */
    constructor() { 
        
        OrderAddress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderAddress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderAddress} obj Optional instance to populate.
     * @return {module:model/OrderAddress} The populated <code>OrderAddress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderAddress();

            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('fullAddress')) {
                obj['fullAddress'] = ApiClient.convertToType(data['fullAddress'], ['String']);
            }
            if (data.hasOwnProperty('isPostOfficeBox')) {
                obj['isPostOfficeBox'] = ApiClient.convertToType(data['isPostOfficeBox'], 'Boolean');
            }
            if (data.hasOwnProperty('locality')) {
                obj['locality'] = ApiClient.convertToType(data['locality'], 'String');
            }
            if (data.hasOwnProperty('postalCode')) {
                obj['postalCode'] = ApiClient.convertToType(data['postalCode'], 'String');
            }
            if (data.hasOwnProperty('recipientName')) {
                obj['recipientName'] = ApiClient.convertToType(data['recipientName'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('streetAddress')) {
                obj['streetAddress'] = ApiClient.convertToType(data['streetAddress'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderAddress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderAddress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['fullAddress'])) {
            throw new Error("Expected the field `fullAddress` to be an array in the JSON data but got " + data['fullAddress']);
        }
        // ensure the json data is a string
        if (data['locality'] && !(typeof data['locality'] === 'string' || data['locality'] instanceof String)) {
            throw new Error("Expected the field `locality` to be a primitive type in the JSON string but got " + data['locality']);
        }
        // ensure the json data is a string
        if (data['postalCode'] && !(typeof data['postalCode'] === 'string' || data['postalCode'] instanceof String)) {
            throw new Error("Expected the field `postalCode` to be a primitive type in the JSON string but got " + data['postalCode']);
        }
        // ensure the json data is a string
        if (data['recipientName'] && !(typeof data['recipientName'] === 'string' || data['recipientName'] instanceof String)) {
            throw new Error("Expected the field `recipientName` to be a primitive type in the JSON string but got " + data['recipientName']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['streetAddress'])) {
            throw new Error("Expected the field `streetAddress` to be an array in the JSON data but got " + data['streetAddress']);
        }

        return true;
    }


}



/**
 * CLDR country code (for example, \"US\").
 * @member {String} country
 */
OrderAddress.prototype['country'] = undefined;

/**
 * Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States 
 * @member {Array.<String>} fullAddress
 */
OrderAddress.prototype['fullAddress'] = undefined;

/**
 * Whether the address is a post office box.
 * @member {Boolean} isPostOfficeBox
 */
OrderAddress.prototype['isPostOfficeBox'] = undefined;

/**
 * City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).
 * @member {String} locality
 */
OrderAddress.prototype['locality'] = undefined;

/**
 * Postal Code or ZIP (for example, \"94043\").
 * @member {String} postalCode
 */
OrderAddress.prototype['postalCode'] = undefined;

/**
 * Name of the recipient.
 * @member {String} recipientName
 */
OrderAddress.prototype['recipientName'] = undefined;

/**
 * Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").
 * @member {String} region
 */
OrderAddress.prototype['region'] = undefined;

/**
 * Street-level part of the address. Use `\\n` to add a second line.
 * @member {Array.<String>} streetAddress
 */
OrderAddress.prototype['streetAddress'] = undefined;






export default OrderAddress;

