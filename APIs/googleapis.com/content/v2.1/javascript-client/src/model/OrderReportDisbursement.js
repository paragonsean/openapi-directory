/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Price from './Price';

/**
 * The OrderReportDisbursement model module.
 * @module model/OrderReportDisbursement
 * @version v2.1
 */
class OrderReportDisbursement {
    /**
     * Constructs a new <code>OrderReportDisbursement</code>.
     * Order disbursement. All methods require the payment analyst role.
     * @alias module:model/OrderReportDisbursement
     */
    constructor() { 
        
        OrderReportDisbursement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderReportDisbursement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderReportDisbursement} obj Optional instance to populate.
     * @return {module:model/OrderReportDisbursement} The populated <code>OrderReportDisbursement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderReportDisbursement();

            if (data.hasOwnProperty('disbursementAmount')) {
                obj['disbursementAmount'] = Price.constructFromObject(data['disbursementAmount']);
            }
            if (data.hasOwnProperty('disbursementCreationDate')) {
                obj['disbursementCreationDate'] = ApiClient.convertToType(data['disbursementCreationDate'], 'String');
            }
            if (data.hasOwnProperty('disbursementDate')) {
                obj['disbursementDate'] = ApiClient.convertToType(data['disbursementDate'], 'String');
            }
            if (data.hasOwnProperty('disbursementId')) {
                obj['disbursementId'] = ApiClient.convertToType(data['disbursementId'], 'String');
            }
            if (data.hasOwnProperty('merchantId')) {
                obj['merchantId'] = ApiClient.convertToType(data['merchantId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderReportDisbursement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderReportDisbursement</code>.
     */
    static validateJSON(data) {
        // validate the optional field `disbursementAmount`
        if (data['disbursementAmount']) { // data not null
          Price.validateJSON(data['disbursementAmount']);
        }
        // ensure the json data is a string
        if (data['disbursementCreationDate'] && !(typeof data['disbursementCreationDate'] === 'string' || data['disbursementCreationDate'] instanceof String)) {
            throw new Error("Expected the field `disbursementCreationDate` to be a primitive type in the JSON string but got " + data['disbursementCreationDate']);
        }
        // ensure the json data is a string
        if (data['disbursementDate'] && !(typeof data['disbursementDate'] === 'string' || data['disbursementDate'] instanceof String)) {
            throw new Error("Expected the field `disbursementDate` to be a primitive type in the JSON string but got " + data['disbursementDate']);
        }
        // ensure the json data is a string
        if (data['disbursementId'] && !(typeof data['disbursementId'] === 'string' || data['disbursementId'] instanceof String)) {
            throw new Error("Expected the field `disbursementId` to be a primitive type in the JSON string but got " + data['disbursementId']);
        }
        // ensure the json data is a string
        if (data['merchantId'] && !(typeof data['merchantId'] === 'string' || data['merchantId'] instanceof String)) {
            throw new Error("Expected the field `merchantId` to be a primitive type in the JSON string but got " + data['merchantId']);
        }

        return true;
    }


}



/**
 * @member {module:model/Price} disbursementAmount
 */
OrderReportDisbursement.prototype['disbursementAmount'] = undefined;

/**
 * The disbursement date, in ISO 8601 format.
 * @member {String} disbursementCreationDate
 */
OrderReportDisbursement.prototype['disbursementCreationDate'] = undefined;

/**
 * The date the disbursement was initiated, in ISO 8601 format.
 * @member {String} disbursementDate
 */
OrderReportDisbursement.prototype['disbursementDate'] = undefined;

/**
 * The ID of the disbursement.
 * @member {String} disbursementId
 */
OrderReportDisbursement.prototype['disbursementId'] = undefined;

/**
 * The ID of the managing account.
 * @member {String} merchantId
 */
OrderReportDisbursement.prototype['merchantId'] = undefined;






export default OrderReportDisbursement;

