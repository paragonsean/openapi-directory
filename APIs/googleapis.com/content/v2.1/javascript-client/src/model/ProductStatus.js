/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductStatusDestinationStatus from './ProductStatusDestinationStatus';
import ProductStatusItemLevelIssue from './ProductStatusItemLevelIssue';

/**
 * The ProductStatus model module.
 * @module model/ProductStatus
 * @version v2.1
 */
class ProductStatus {
    /**
     * Constructs a new <code>ProductStatus</code>.
     * The status of a product, that is, information about a product computed asynchronously.
     * @alias module:model/ProductStatus
     */
    constructor() { 
        
        ProductStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductStatus} obj Optional instance to populate.
     * @return {module:model/ProductStatus} The populated <code>ProductStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductStatus();

            if (data.hasOwnProperty('creationDate')) {
                obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'String');
            }
            if (data.hasOwnProperty('destinationStatuses')) {
                obj['destinationStatuses'] = ApiClient.convertToType(data['destinationStatuses'], [ProductStatusDestinationStatus]);
            }
            if (data.hasOwnProperty('googleExpirationDate')) {
                obj['googleExpirationDate'] = ApiClient.convertToType(data['googleExpirationDate'], 'String');
            }
            if (data.hasOwnProperty('itemLevelIssues')) {
                obj['itemLevelIssues'] = ApiClient.convertToType(data['itemLevelIssues'], [ProductStatusItemLevelIssue]);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('lastUpdateDate')) {
                obj['lastUpdateDate'] = ApiClient.convertToType(data['lastUpdateDate'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['creationDate'] && !(typeof data['creationDate'] === 'string' || data['creationDate'] instanceof String)) {
            throw new Error("Expected the field `creationDate` to be a primitive type in the JSON string but got " + data['creationDate']);
        }
        if (data['destinationStatuses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['destinationStatuses'])) {
                throw new Error("Expected the field `destinationStatuses` to be an array in the JSON data but got " + data['destinationStatuses']);
            }
            // validate the optional field `destinationStatuses` (array)
            for (const item of data['destinationStatuses']) {
                ProductStatusDestinationStatus.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['googleExpirationDate'] && !(typeof data['googleExpirationDate'] === 'string' || data['googleExpirationDate'] instanceof String)) {
            throw new Error("Expected the field `googleExpirationDate` to be a primitive type in the JSON string but got " + data['googleExpirationDate']);
        }
        if (data['itemLevelIssues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['itemLevelIssues'])) {
                throw new Error("Expected the field `itemLevelIssues` to be an array in the JSON data but got " + data['itemLevelIssues']);
            }
            // validate the optional field `itemLevelIssues` (array)
            for (const item of data['itemLevelIssues']) {
                ProductStatusItemLevelIssue.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['lastUpdateDate'] && !(typeof data['lastUpdateDate'] === 'string' || data['lastUpdateDate'] instanceof String)) {
            throw new Error("Expected the field `lastUpdateDate` to be a primitive type in the JSON string but got " + data['lastUpdateDate']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['productId'] && !(typeof data['productId'] === 'string' || data['productId'] instanceof String)) {
            throw new Error("Expected the field `productId` to be a primitive type in the JSON string but got " + data['productId']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * Date on which the item has been created, in ISO 8601 format.
 * @member {String} creationDate
 */
ProductStatus.prototype['creationDate'] = undefined;

/**
 * The intended destinations for the product.
 * @member {Array.<module:model/ProductStatusDestinationStatus>} destinationStatuses
 */
ProductStatus.prototype['destinationStatuses'] = undefined;

/**
 * Date on which the item expires in Google Shopping, in ISO 8601 format.
 * @member {String} googleExpirationDate
 */
ProductStatus.prototype['googleExpirationDate'] = undefined;

/**
 * A list of all issues associated with the product.
 * @member {Array.<module:model/ProductStatusItemLevelIssue>} itemLevelIssues
 */
ProductStatus.prototype['itemLevelIssues'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"`content#productStatus`\"
 * @member {String} kind
 */
ProductStatus.prototype['kind'] = undefined;

/**
 * Date on which the item has been last updated, in ISO 8601 format.
 * @member {String} lastUpdateDate
 */
ProductStatus.prototype['lastUpdateDate'] = undefined;

/**
 * The link to the product.
 * @member {String} link
 */
ProductStatus.prototype['link'] = undefined;

/**
 * The ID of the product for which status is reported.
 * @member {String} productId
 */
ProductStatus.prototype['productId'] = undefined;

/**
 * The title of the product.
 * @member {String} title
 */
ProductStatus.prototype['title'] = undefined;






export default ProductStatus;

