/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelDate from './ModelDate';

/**
 * The CompetitiveVisibility model module.
 * @module model/CompetitiveVisibility
 * @version v2.1
 */
class CompetitiveVisibility {
    /**
     * Constructs a new <code>CompetitiveVisibility</code>.
     * Fields related to [competitive visibility reports] (https://support.google.com/merchants/answer/11366442).
     * @alias module:model/CompetitiveVisibility
     */
    constructor() { 
        
        CompetitiveVisibility.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompetitiveVisibility</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompetitiveVisibility} obj Optional instance to populate.
     * @return {module:model/CompetitiveVisibility} The populated <code>CompetitiveVisibility</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompetitiveVisibility();

            if (data.hasOwnProperty('adsOrganicRatio')) {
                obj['adsOrganicRatio'] = ApiClient.convertToType(data['adsOrganicRatio'], 'Number');
            }
            if (data.hasOwnProperty('categoryBenchmarkVisibilityTrend')) {
                obj['categoryBenchmarkVisibilityTrend'] = ApiClient.convertToType(data['categoryBenchmarkVisibilityTrend'], 'Number');
            }
            if (data.hasOwnProperty('categoryId')) {
                obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'String');
            }
            if (data.hasOwnProperty('countryCode')) {
                obj['countryCode'] = ApiClient.convertToType(data['countryCode'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ModelDate.constructFromObject(data['date']);
            }
            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('higherPositionRate')) {
                obj['higherPositionRate'] = ApiClient.convertToType(data['higherPositionRate'], 'Number');
            }
            if (data.hasOwnProperty('isYourDomain')) {
                obj['isYourDomain'] = ApiClient.convertToType(data['isYourDomain'], 'Boolean');
            }
            if (data.hasOwnProperty('pageOverlapRate')) {
                obj['pageOverlapRate'] = ApiClient.convertToType(data['pageOverlapRate'], 'Number');
            }
            if (data.hasOwnProperty('rank')) {
                obj['rank'] = ApiClient.convertToType(data['rank'], 'String');
            }
            if (data.hasOwnProperty('relativeVisibility')) {
                obj['relativeVisibility'] = ApiClient.convertToType(data['relativeVisibility'], 'Number');
            }
            if (data.hasOwnProperty('trafficSource')) {
                obj['trafficSource'] = ApiClient.convertToType(data['trafficSource'], 'String');
            }
            if (data.hasOwnProperty('yourDomainVisibilityTrend')) {
                obj['yourDomainVisibilityTrend'] = ApiClient.convertToType(data['yourDomainVisibilityTrend'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompetitiveVisibility</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompetitiveVisibility</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['categoryId'] && !(typeof data['categoryId'] === 'string' || data['categoryId'] instanceof String)) {
            throw new Error("Expected the field `categoryId` to be a primitive type in the JSON string but got " + data['categoryId']);
        }
        // ensure the json data is a string
        if (data['countryCode'] && !(typeof data['countryCode'] === 'string' || data['countryCode'] instanceof String)) {
            throw new Error("Expected the field `countryCode` to be a primitive type in the JSON string but got " + data['countryCode']);
        }
        // validate the optional field `date`
        if (data['date']) { // data not null
          ModelDate.validateJSON(data['date']);
        }
        // ensure the json data is a string
        if (data['domain'] && !(typeof data['domain'] === 'string' || data['domain'] instanceof String)) {
            throw new Error("Expected the field `domain` to be a primitive type in the JSON string but got " + data['domain']);
        }
        // ensure the json data is a string
        if (data['rank'] && !(typeof data['rank'] === 'string' || data['rank'] instanceof String)) {
            throw new Error("Expected the field `rank` to be a primitive type in the JSON string but got " + data['rank']);
        }
        // ensure the json data is a string
        if (data['trafficSource'] && !(typeof data['trafficSource'] === 'string' || data['trafficSource'] instanceof String)) {
            throw new Error("Expected the field `trafficSource` to be a primitive type in the JSON string but got " + data['trafficSource']);
        }

        return true;
    }


}



/**
 * [Ads / organic ratio] (https://support.google.com/merchants/answer/11366442#zippy=%2Cadsfree-ratio) shows how often a merchant receives impressions from Shopping ads compared to organic traffic. The number is rounded and bucketed. Available only in `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause.
 * @member {Number} adsOrganicRatio
 */
CompetitiveVisibility.prototype['adsOrganicRatio'] = undefined;

/**
 * Change in visibility based on impressions with respect to the start of the selected time range (or first day with non-zero impressions) for a combined set of merchants with highest visibility approximating the market. Available only in `CompetitiveVisibilityBenchmarkView`. Cannot be filtered on in the 'WHERE' clause.
 * @member {Number} categoryBenchmarkVisibilityTrend
 */
CompetitiveVisibility.prototype['categoryBenchmarkVisibilityTrend'] = undefined;

/**
 * Google product category ID to calculate the report for, represented in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436). Required in the `SELECT` clause. A `WHERE` condition on `competitive_visibility.category_id` is required in the query.
 * @member {String} categoryId
 */
CompetitiveVisibility.prototype['categoryId'] = undefined;

/**
 * The country where impression appeared. Required in the `SELECT` clause. A `WHERE` condition on `competitive_visibility.country_code` is required in the query.
 * @member {String} countryCode
 */
CompetitiveVisibility.prototype['countryCode'] = undefined;

/**
 * @member {module:model/ModelDate} date
 */
CompetitiveVisibility.prototype['date'] = undefined;

/**
 * Domain of your competitor or your domain, if 'is_your_domain' is true. Available only in `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Required in the `SELECT` clause for `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause.
 * @member {String} domain
 */
CompetitiveVisibility.prototype['domain'] = undefined;

/**
 * Higher position rate shows how often a competitor’s offer got placed in a higher position on the page than your offer. Available only in `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause.
 * @member {Number} higherPositionRate
 */
CompetitiveVisibility.prototype['higherPositionRate'] = undefined;

/**
 * True if this row contains data for your domain. Available only in `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause.
 * @member {Boolean} isYourDomain
 */
CompetitiveVisibility.prototype['isYourDomain'] = undefined;

/**
 * Page overlap rate describes how frequently competing retailers’ offers are shown together with your offers on the same page. Available only in `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause.
 * @member {Number} pageOverlapRate
 */
CompetitiveVisibility.prototype['pageOverlapRate'] = undefined;

/**
 * Position of the domain in the top merchants ranking for the selected keys (`date`, `category_id`, `country_code`, `listing_type`) based on impressions. 1 is the highest. Available only in `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause.
 * @member {String} rank
 */
CompetitiveVisibility.prototype['rank'] = undefined;

/**
 * Relative visibility shows how often your competitors’ offers are shown compared to your offers. In other words, this is the number of displayed impressions of a competitor retailer divided by the number of your displayed impressions during a selected time range for a selected product category and country. Available only in `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause.
 * @member {Number} relativeVisibility
 */
CompetitiveVisibility.prototype['relativeVisibility'] = undefined;

/**
 * Type of impression listing. Required in the `SELECT` clause. Cannot be filtered on in the 'WHERE' clause.
 * @member {module:model/CompetitiveVisibility.TrafficSourceEnum} trafficSource
 */
CompetitiveVisibility.prototype['trafficSource'] = undefined;

/**
 * Change in visibility based on impressions for your domain with respect to the start of the selected time range (or first day with non-zero impressions). Available only in `CompetitiveVisibilityBenchmarkView`. Cannot be filtered on in the 'WHERE' clause.
 * @member {Number} yourDomainVisibilityTrend
 */
CompetitiveVisibility.prototype['yourDomainVisibilityTrend'] = undefined;





/**
 * Allowed values for the <code>trafficSource</code> property.
 * @enum {String}
 * @readonly
 */
CompetitiveVisibility['TrafficSourceEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "ORGANIC"
     * @const
     */
    "ORGANIC": "ORGANIC",

    /**
     * value: "ADS"
     * @const
     */
    "ADS": "ADS",

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL"
};



export default CompetitiveVisibility;

