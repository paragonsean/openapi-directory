/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BestSellers from './BestSellers';
import Brand from './Brand';
import CompetitiveVisibility from './CompetitiveVisibility';
import Metrics from './Metrics';
import PriceCompetitiveness from './PriceCompetitiveness';
import PriceInsights from './PriceInsights';
import ProductCluster from './ProductCluster';
import ProductView from './ProductView';
import Segments from './Segments';

/**
 * The ReportRow model module.
 * @module model/ReportRow
 * @version v2.1
 */
class ReportRow {
    /**
     * Constructs a new <code>ReportRow</code>.
     * Result row returned from the search query.
     * @alias module:model/ReportRow
     */
    constructor() { 
        
        ReportRow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportRow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportRow} obj Optional instance to populate.
     * @return {module:model/ReportRow} The populated <code>ReportRow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportRow();

            if (data.hasOwnProperty('bestSellers')) {
                obj['bestSellers'] = BestSellers.constructFromObject(data['bestSellers']);
            }
            if (data.hasOwnProperty('brand')) {
                obj['brand'] = Brand.constructFromObject(data['brand']);
            }
            if (data.hasOwnProperty('competitiveVisibility')) {
                obj['competitiveVisibility'] = CompetitiveVisibility.constructFromObject(data['competitiveVisibility']);
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = Metrics.constructFromObject(data['metrics']);
            }
            if (data.hasOwnProperty('priceCompetitiveness')) {
                obj['priceCompetitiveness'] = PriceCompetitiveness.constructFromObject(data['priceCompetitiveness']);
            }
            if (data.hasOwnProperty('priceInsights')) {
                obj['priceInsights'] = PriceInsights.constructFromObject(data['priceInsights']);
            }
            if (data.hasOwnProperty('productCluster')) {
                obj['productCluster'] = ProductCluster.constructFromObject(data['productCluster']);
            }
            if (data.hasOwnProperty('productView')) {
                obj['productView'] = ProductView.constructFromObject(data['productView']);
            }
            if (data.hasOwnProperty('segments')) {
                obj['segments'] = Segments.constructFromObject(data['segments']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportRow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportRow</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bestSellers`
        if (data['bestSellers']) { // data not null
          BestSellers.validateJSON(data['bestSellers']);
        }
        // validate the optional field `brand`
        if (data['brand']) { // data not null
          Brand.validateJSON(data['brand']);
        }
        // validate the optional field `competitiveVisibility`
        if (data['competitiveVisibility']) { // data not null
          CompetitiveVisibility.validateJSON(data['competitiveVisibility']);
        }
        // validate the optional field `metrics`
        if (data['metrics']) { // data not null
          Metrics.validateJSON(data['metrics']);
        }
        // validate the optional field `priceCompetitiveness`
        if (data['priceCompetitiveness']) { // data not null
          PriceCompetitiveness.validateJSON(data['priceCompetitiveness']);
        }
        // validate the optional field `priceInsights`
        if (data['priceInsights']) { // data not null
          PriceInsights.validateJSON(data['priceInsights']);
        }
        // validate the optional field `productCluster`
        if (data['productCluster']) { // data not null
          ProductCluster.validateJSON(data['productCluster']);
        }
        // validate the optional field `productView`
        if (data['productView']) { // data not null
          ProductView.validateJSON(data['productView']);
        }
        // validate the optional field `segments`
        if (data['segments']) { // data not null
          Segments.validateJSON(data['segments']);
        }

        return true;
    }


}



/**
 * @member {module:model/BestSellers} bestSellers
 */
ReportRow.prototype['bestSellers'] = undefined;

/**
 * @member {module:model/Brand} brand
 */
ReportRow.prototype['brand'] = undefined;

/**
 * @member {module:model/CompetitiveVisibility} competitiveVisibility
 */
ReportRow.prototype['competitiveVisibility'] = undefined;

/**
 * @member {module:model/Metrics} metrics
 */
ReportRow.prototype['metrics'] = undefined;

/**
 * @member {module:model/PriceCompetitiveness} priceCompetitiveness
 */
ReportRow.prototype['priceCompetitiveness'] = undefined;

/**
 * @member {module:model/PriceInsights} priceInsights
 */
ReportRow.prototype['priceInsights'] = undefined;

/**
 * @member {module:model/ProductCluster} productCluster
 */
ReportRow.prototype['productCluster'] = undefined;

/**
 * @member {module:model/ProductView} productView
 */
ReportRow.prototype['productView'] = undefined;

/**
 * @member {module:model/Segments} segments
 */
ReportRow.prototype['segments'] = undefined;






export default ReportRow;

