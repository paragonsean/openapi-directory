/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PosDataProvidersPosDataProvider from './PosDataProvidersPosDataProvider';

/**
 * The PosDataProviders model module.
 * @module model/PosDataProviders
 * @version v2.1
 */
class PosDataProviders {
    /**
     * Constructs a new <code>PosDataProviders</code>.
     * @alias module:model/PosDataProviders
     */
    constructor() { 
        
        PosDataProviders.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PosDataProviders</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PosDataProviders} obj Optional instance to populate.
     * @return {module:model/PosDataProviders} The populated <code>PosDataProviders</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PosDataProviders();

            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('posDataProviders')) {
                obj['posDataProviders'] = ApiClient.convertToType(data['posDataProviders'], [PosDataProvidersPosDataProvider]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PosDataProviders</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PosDataProviders</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        if (data['posDataProviders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['posDataProviders'])) {
                throw new Error("Expected the field `posDataProviders` to be an array in the JSON data but got " + data['posDataProviders']);
            }
            // validate the optional field `posDataProviders` (array)
            for (const item of data['posDataProviders']) {
                PosDataProvidersPosDataProvider.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Country code.
 * @member {String} country
 */
PosDataProviders.prototype['country'] = undefined;

/**
 * A list of POS data providers.
 * @member {Array.<module:model/PosDataProvidersPosDataProvider>} posDataProviders
 */
PosDataProviders.prototype['posDataProviders'] = undefined;






export default PosDataProviders;

