/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UrlSettings model module.
 * @module model/UrlSettings
 * @version v2.1
 */
class UrlSettings {
    /**
     * Constructs a new <code>UrlSettings</code>.
     * Specifications related to the &#x60;Checkout&#x60; URL. The &#x60;UriTemplate&#x60; is of the form &#x60;https://www.mystore.com/checkout?item_id&#x3D;{id}&#x60; where &#x60;{id}&#x60; will be automatically replaced with data from the merchant account with this attribute [offer_id](https://developers.google.com/shopping-content/reference/rest/v2.1/products#Product.FIELDS.offer_id)
     * @alias module:model/UrlSettings
     */
    constructor() { 
        
        UrlSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UrlSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UrlSettings} obj Optional instance to populate.
     * @return {module:model/UrlSettings} The populated <code>UrlSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UrlSettings();

            if (data.hasOwnProperty('cartUriTemplate')) {
                obj['cartUriTemplate'] = ApiClient.convertToType(data['cartUriTemplate'], 'String');
            }
            if (data.hasOwnProperty('checkoutUriTemplate')) {
                obj['checkoutUriTemplate'] = ApiClient.convertToType(data['checkoutUriTemplate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UrlSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UrlSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cartUriTemplate'] && !(typeof data['cartUriTemplate'] === 'string' || data['cartUriTemplate'] instanceof String)) {
            throw new Error("Expected the field `cartUriTemplate` to be a primitive type in the JSON string but got " + data['cartUriTemplate']);
        }
        // ensure the json data is a string
        if (data['checkoutUriTemplate'] && !(typeof data['checkoutUriTemplate'] === 'string' || data['checkoutUriTemplate'] instanceof String)) {
            throw new Error("Expected the field `checkoutUriTemplate` to be a primitive type in the JSON string but got " + data['checkoutUriTemplate']);
        }

        return true;
    }


}



/**
 * URL template when the placeholders are expanded will redirect the buyer to the cart page on the merchant website with the selected item in cart.
 * @member {String} cartUriTemplate
 */
UrlSettings.prototype['cartUriTemplate'] = undefined;

/**
 * URL template when the placeholders are expanded will redirect the buyer to the merchant checkout page with the item in the cart.
 * @member {String} checkoutUriTemplate
 */
UrlSettings.prototype['checkoutUriTemplate'] = undefined;






export default UrlSettings;

