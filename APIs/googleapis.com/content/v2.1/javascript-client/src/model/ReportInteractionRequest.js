/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReportInteractionRequest model module.
 * @module model/ReportInteractionRequest
 * @version v2.1
 */
class ReportInteractionRequest {
    /**
     * Constructs a new <code>ReportInteractionRequest</code>.
     * Request to report interactions on a recommendation.
     * @alias module:model/ReportInteractionRequest
     */
    constructor() { 
        
        ReportInteractionRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportInteractionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportInteractionRequest} obj Optional instance to populate.
     * @return {module:model/ReportInteractionRequest} The populated <code>ReportInteractionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportInteractionRequest();

            if (data.hasOwnProperty('interactionType')) {
                obj['interactionType'] = ApiClient.convertToType(data['interactionType'], 'String');
            }
            if (data.hasOwnProperty('responseToken')) {
                obj['responseToken'] = ApiClient.convertToType(data['responseToken'], 'String');
            }
            if (data.hasOwnProperty('subtype')) {
                obj['subtype'] = ApiClient.convertToType(data['subtype'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportInteractionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportInteractionRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['interactionType'] && !(typeof data['interactionType'] === 'string' || data['interactionType'] instanceof String)) {
            throw new Error("Expected the field `interactionType` to be a primitive type in the JSON string but got " + data['interactionType']);
        }
        // ensure the json data is a string
        if (data['responseToken'] && !(typeof data['responseToken'] === 'string' || data['responseToken'] instanceof String)) {
            throw new Error("Expected the field `responseToken` to be a primitive type in the JSON string but got " + data['responseToken']);
        }
        // ensure the json data is a string
        if (data['subtype'] && !(typeof data['subtype'] === 'string' || data['subtype'] instanceof String)) {
            throw new Error("Expected the field `subtype` to be a primitive type in the JSON string but got " + data['subtype']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Required. Type of the interaction that is reported, for example INTERACTION_CLICK.
 * @member {module:model/ReportInteractionRequest.InteractionTypeEnum} interactionType
 */
ReportInteractionRequest.prototype['interactionType'] = undefined;

/**
 * Required. Token of the response when recommendation was returned.
 * @member {String} responseToken
 */
ReportInteractionRequest.prototype['responseToken'] = undefined;

/**
 * Optional. Subtype of the recommendations this interaction happened on. This field must be set only to the value that is returned by {@link `RecommendationsService.GenerateRecommendations`} call.
 * @member {String} subtype
 */
ReportInteractionRequest.prototype['subtype'] = undefined;

/**
 * Required. Type of the recommendations on which this interaction happened. This field must be set only to the value that is returned by {@link `GenerateRecommendationsResponse`} call.
 * @member {String} type
 */
ReportInteractionRequest.prototype['type'] = undefined;





/**
 * Allowed values for the <code>interactionType</code> property.
 * @enum {String}
 * @readonly
 */
ReportInteractionRequest['InteractionTypeEnum'] = {

    /**
     * value: "INTERACTION_TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "INTERACTION_TYPE_UNSPECIFIED",

    /**
     * value: "INTERACTION_DISMISS"
     * @const
     */
    "DISMISS": "INTERACTION_DISMISS",

    /**
     * value: "INTERACTION_CLICK"
     * @const
     */
    "CLICK": "INTERACTION_CLICK"
};



export default ReportInteractionRequest;

