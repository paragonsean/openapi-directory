/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ContentApiForShopping);
  }
}(this, function(expect, ContentApiForShopping) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ContentApiForShopping.OrderLineItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderLineItem', function() {
    it('should create an instance of OrderLineItem', function() {
      // uncomment below and update the code to test OrderLineItem
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be.a(ContentApiForShopping.OrderLineItem);
    });

    it('should have the property adjustments (base name: "adjustments")', function() {
      // uncomment below and update the code to test the property adjustments
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property annotations (base name: "annotations")', function() {
      // uncomment below and update the code to test the property annotations
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property cancellations (base name: "cancellations")', function() {
      // uncomment below and update the code to test the property cancellations
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property product (base name: "product")', function() {
      // uncomment below and update the code to test the property product
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property quantityCanceled (base name: "quantityCanceled")', function() {
      // uncomment below and update the code to test the property quantityCanceled
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property quantityDelivered (base name: "quantityDelivered")', function() {
      // uncomment below and update the code to test the property quantityDelivered
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property quantityOrdered (base name: "quantityOrdered")', function() {
      // uncomment below and update the code to test the property quantityOrdered
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property quantityPending (base name: "quantityPending")', function() {
      // uncomment below and update the code to test the property quantityPending
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property quantityReadyForPickup (base name: "quantityReadyForPickup")', function() {
      // uncomment below and update the code to test the property quantityReadyForPickup
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property quantityReturned (base name: "quantityReturned")', function() {
      // uncomment below and update the code to test the property quantityReturned
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property quantityShipped (base name: "quantityShipped")', function() {
      // uncomment below and update the code to test the property quantityShipped
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property quantityUndeliverable (base name: "quantityUndeliverable")', function() {
      // uncomment below and update the code to test the property quantityUndeliverable
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property returnInfo (base name: "returnInfo")', function() {
      // uncomment below and update the code to test the property returnInfo
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property returns (base name: "returns")', function() {
      // uncomment below and update the code to test the property returns
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property shippingDetails (base name: "shippingDetails")', function() {
      // uncomment below and update the code to test the property shippingDetails
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

    it('should have the property tax (base name: "tax")', function() {
      // uncomment below and update the code to test the property tax
      //var instance = new ContentApiForShopping.OrderLineItem();
      //expect(instance).to.be();
    });

  });

}));
