# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BuiltInSimpleActionAdditionalContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, paragraphs: List[str]=None, title: str=None):
        """BuiltInSimpleActionAdditionalContent - a model defined in OpenAPI

        :param paragraphs: The paragraphs of this BuiltInSimpleActionAdditionalContent.
        :param title: The title of this BuiltInSimpleActionAdditionalContent.
        """
        self.openapi_types = {
            'paragraphs': List[str],
            'title': str
        }

        self.attribute_map = {
            'paragraphs': 'paragraphs',
            'title': 'title'
        }

        self._paragraphs = paragraphs
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuiltInSimpleActionAdditionalContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuiltInSimpleActionAdditionalContent of this BuiltInSimpleActionAdditionalContent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def paragraphs(self):
        """Gets the paragraphs of this BuiltInSimpleActionAdditionalContent.

        Long text organized into paragraphs.

        :return: The paragraphs of this BuiltInSimpleActionAdditionalContent.
        :rtype: List[str]
        """
        return self._paragraphs

    @paragraphs.setter
    def paragraphs(self, paragraphs):
        """Sets the paragraphs of this BuiltInSimpleActionAdditionalContent.

        Long text organized into paragraphs.

        :param paragraphs: The paragraphs of this BuiltInSimpleActionAdditionalContent.
        :type paragraphs: List[str]
        """

        self._paragraphs = paragraphs

    @property
    def title(self):
        """Gets the title of this BuiltInSimpleActionAdditionalContent.

        Title of the additional content;

        :return: The title of this BuiltInSimpleActionAdditionalContent.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this BuiltInSimpleActionAdditionalContent.

        Title of the additional content;

        :param title: The title of this BuiltInSimpleActionAdditionalContent.
        :type title: str
        """

        self._title = title
