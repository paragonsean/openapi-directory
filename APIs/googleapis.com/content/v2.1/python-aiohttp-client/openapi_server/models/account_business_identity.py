# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_identity_type import AccountIdentityType
from openapi_server import util


class AccountBusinessIdentity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, black_owned: AccountIdentityType=None, include_for_promotions: bool=None, latino_owned: AccountIdentityType=None, small_business: AccountIdentityType=None, veteran_owned: AccountIdentityType=None, women_owned: AccountIdentityType=None):
        """AccountBusinessIdentity - a model defined in OpenAPI

        :param black_owned: The black_owned of this AccountBusinessIdentity.
        :param include_for_promotions: The include_for_promotions of this AccountBusinessIdentity.
        :param latino_owned: The latino_owned of this AccountBusinessIdentity.
        :param small_business: The small_business of this AccountBusinessIdentity.
        :param veteran_owned: The veteran_owned of this AccountBusinessIdentity.
        :param women_owned: The women_owned of this AccountBusinessIdentity.
        """
        self.openapi_types = {
            'black_owned': AccountIdentityType,
            'include_for_promotions': bool,
            'latino_owned': AccountIdentityType,
            'small_business': AccountIdentityType,
            'veteran_owned': AccountIdentityType,
            'women_owned': AccountIdentityType
        }

        self.attribute_map = {
            'black_owned': 'blackOwned',
            'include_for_promotions': 'includeForPromotions',
            'latino_owned': 'latinoOwned',
            'small_business': 'smallBusiness',
            'veteran_owned': 'veteranOwned',
            'women_owned': 'womenOwned'
        }

        self._black_owned = black_owned
        self._include_for_promotions = include_for_promotions
        self._latino_owned = latino_owned
        self._small_business = small_business
        self._veteran_owned = veteran_owned
        self._women_owned = women_owned

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountBusinessIdentity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountBusinessIdentity of this AccountBusinessIdentity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def black_owned(self):
        """Gets the black_owned of this AccountBusinessIdentity.


        :return: The black_owned of this AccountBusinessIdentity.
        :rtype: AccountIdentityType
        """
        return self._black_owned

    @black_owned.setter
    def black_owned(self, black_owned):
        """Sets the black_owned of this AccountBusinessIdentity.


        :param black_owned: The black_owned of this AccountBusinessIdentity.
        :type black_owned: AccountIdentityType
        """

        self._black_owned = black_owned

    @property
    def include_for_promotions(self):
        """Gets the include_for_promotions of this AccountBusinessIdentity.

        Required. By setting this field, your business may be included in promotions for all the selected attributes. If you clear this option, it won't affect your identification with any of the attributes. For this field to be set, the merchant must self identify with at least one of the `AccountIdentityType`. If none are included, the request will be considered invalid.

        :return: The include_for_promotions of this AccountBusinessIdentity.
        :rtype: bool
        """
        return self._include_for_promotions

    @include_for_promotions.setter
    def include_for_promotions(self, include_for_promotions):
        """Sets the include_for_promotions of this AccountBusinessIdentity.

        Required. By setting this field, your business may be included in promotions for all the selected attributes. If you clear this option, it won't affect your identification with any of the attributes. For this field to be set, the merchant must self identify with at least one of the `AccountIdentityType`. If none are included, the request will be considered invalid.

        :param include_for_promotions: The include_for_promotions of this AccountBusinessIdentity.
        :type include_for_promotions: bool
        """

        self._include_for_promotions = include_for_promotions

    @property
    def latino_owned(self):
        """Gets the latino_owned of this AccountBusinessIdentity.


        :return: The latino_owned of this AccountBusinessIdentity.
        :rtype: AccountIdentityType
        """
        return self._latino_owned

    @latino_owned.setter
    def latino_owned(self, latino_owned):
        """Sets the latino_owned of this AccountBusinessIdentity.


        :param latino_owned: The latino_owned of this AccountBusinessIdentity.
        :type latino_owned: AccountIdentityType
        """

        self._latino_owned = latino_owned

    @property
    def small_business(self):
        """Gets the small_business of this AccountBusinessIdentity.


        :return: The small_business of this AccountBusinessIdentity.
        :rtype: AccountIdentityType
        """
        return self._small_business

    @small_business.setter
    def small_business(self, small_business):
        """Sets the small_business of this AccountBusinessIdentity.


        :param small_business: The small_business of this AccountBusinessIdentity.
        :type small_business: AccountIdentityType
        """

        self._small_business = small_business

    @property
    def veteran_owned(self):
        """Gets the veteran_owned of this AccountBusinessIdentity.


        :return: The veteran_owned of this AccountBusinessIdentity.
        :rtype: AccountIdentityType
        """
        return self._veteran_owned

    @veteran_owned.setter
    def veteran_owned(self, veteran_owned):
        """Sets the veteran_owned of this AccountBusinessIdentity.


        :param veteran_owned: The veteran_owned of this AccountBusinessIdentity.
        :type veteran_owned: AccountIdentityType
        """

        self._veteran_owned = veteran_owned

    @property
    def women_owned(self):
        """Gets the women_owned of this AccountBusinessIdentity.


        :return: The women_owned of this AccountBusinessIdentity.
        :rtype: AccountIdentityType
        """
        return self._women_owned

    @women_owned.setter
    def women_owned(self, women_owned):
        """Sets the women_owned of this AccountBusinessIdentity.


        :param women_owned: The women_owned of this AccountBusinessIdentity.
        :type women_owned: AccountIdentityType
        """

        self._women_owned = women_owned
