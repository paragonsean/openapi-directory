# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.return_policy_online_return_shipping_fee import ReturnPolicyOnlineReturnShippingFee
from openapi_server import util


class ReturnPolicyOnlineReturnReasonCategoryInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, return_label_source: str=None, return_reason_category: str=None, return_shipping_fee: ReturnPolicyOnlineReturnShippingFee=None):
        """ReturnPolicyOnlineReturnReasonCategoryInfo - a model defined in OpenAPI

        :param return_label_source: The return_label_source of this ReturnPolicyOnlineReturnReasonCategoryInfo.
        :param return_reason_category: The return_reason_category of this ReturnPolicyOnlineReturnReasonCategoryInfo.
        :param return_shipping_fee: The return_shipping_fee of this ReturnPolicyOnlineReturnReasonCategoryInfo.
        """
        self.openapi_types = {
            'return_label_source': str,
            'return_reason_category': str,
            'return_shipping_fee': ReturnPolicyOnlineReturnShippingFee
        }

        self.attribute_map = {
            'return_label_source': 'returnLabelSource',
            'return_reason_category': 'returnReasonCategory',
            'return_shipping_fee': 'returnShippingFee'
        }

        self._return_label_source = return_label_source
        self._return_reason_category = return_reason_category
        self._return_shipping_fee = return_shipping_fee

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReturnPolicyOnlineReturnReasonCategoryInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReturnPolicyOnlineReturnReasonCategoryInfo of this ReturnPolicyOnlineReturnReasonCategoryInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def return_label_source(self):
        """Gets the return_label_source of this ReturnPolicyOnlineReturnReasonCategoryInfo.

        The corresponding return label source.

        :return: The return_label_source of this ReturnPolicyOnlineReturnReasonCategoryInfo.
        :rtype: str
        """
        return self._return_label_source

    @return_label_source.setter
    def return_label_source(self, return_label_source):
        """Sets the return_label_source of this ReturnPolicyOnlineReturnReasonCategoryInfo.

        The corresponding return label source.

        :param return_label_source: The return_label_source of this ReturnPolicyOnlineReturnReasonCategoryInfo.
        :type return_label_source: str
        """
        allowed_values = ["RETURN_LABEL_SOURCE_UNSPECIFIED", "DOWNLOAD_AND_PRINT", "IN_THE_BOX", "CUSTOMER_RESPONSIBILITY"]  # noqa: E501
        if return_label_source not in allowed_values:
            raise ValueError(
                "Invalid value for `return_label_source` ({0}), must be one of {1}"
                .format(return_label_source, allowed_values)
            )

        self._return_label_source = return_label_source

    @property
    def return_reason_category(self):
        """Gets the return_reason_category of this ReturnPolicyOnlineReturnReasonCategoryInfo.

        The return reason category.

        :return: The return_reason_category of this ReturnPolicyOnlineReturnReasonCategoryInfo.
        :rtype: str
        """
        return self._return_reason_category

    @return_reason_category.setter
    def return_reason_category(self, return_reason_category):
        """Sets the return_reason_category of this ReturnPolicyOnlineReturnReasonCategoryInfo.

        The return reason category.

        :param return_reason_category: The return_reason_category of this ReturnPolicyOnlineReturnReasonCategoryInfo.
        :type return_reason_category: str
        """
        allowed_values = ["RETURN_REASON_CATEGORY_UNSPECIFIED", "BUYER_REMORSE", "ITEM_DEFECT"]  # noqa: E501
        if return_reason_category not in allowed_values:
            raise ValueError(
                "Invalid value for `return_reason_category` ({0}), must be one of {1}"
                .format(return_reason_category, allowed_values)
            )

        self._return_reason_category = return_reason_category

    @property
    def return_shipping_fee(self):
        """Gets the return_shipping_fee of this ReturnPolicyOnlineReturnReasonCategoryInfo.


        :return: The return_shipping_fee of this ReturnPolicyOnlineReturnReasonCategoryInfo.
        :rtype: ReturnPolicyOnlineReturnShippingFee
        """
        return self._return_shipping_fee

    @return_shipping_fee.setter
    def return_shipping_fee(self, return_shipping_fee):
        """Sets the return_shipping_fee of this ReturnPolicyOnlineReturnReasonCategoryInfo.


        :param return_shipping_fee: The return_shipping_fee of this ReturnPolicyOnlineReturnReasonCategoryInfo.
        :type return_shipping_fee: ReturnPolicyOnlineReturnShippingFee
        """

        self._return_shipping_fee = return_shipping_fee
