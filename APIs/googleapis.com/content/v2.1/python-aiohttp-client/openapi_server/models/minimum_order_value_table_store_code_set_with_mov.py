# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price import Price
from openapi_server import util


class MinimumOrderValueTableStoreCodeSetWithMov(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, store_codes: List[str]=None, value: Price=None):
        """MinimumOrderValueTableStoreCodeSetWithMov - a model defined in OpenAPI

        :param store_codes: The store_codes of this MinimumOrderValueTableStoreCodeSetWithMov.
        :param value: The value of this MinimumOrderValueTableStoreCodeSetWithMov.
        """
        self.openapi_types = {
            'store_codes': List[str],
            'value': Price
        }

        self.attribute_map = {
            'store_codes': 'storeCodes',
            'value': 'value'
        }

        self._store_codes = store_codes
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MinimumOrderValueTableStoreCodeSetWithMov':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MinimumOrderValueTableStoreCodeSetWithMov of this MinimumOrderValueTableStoreCodeSetWithMov.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def store_codes(self):
        """Gets the store_codes of this MinimumOrderValueTableStoreCodeSetWithMov.

        A list of unique store codes or empty for the catch all.

        :return: The store_codes of this MinimumOrderValueTableStoreCodeSetWithMov.
        :rtype: List[str]
        """
        return self._store_codes

    @store_codes.setter
    def store_codes(self, store_codes):
        """Sets the store_codes of this MinimumOrderValueTableStoreCodeSetWithMov.

        A list of unique store codes or empty for the catch all.

        :param store_codes: The store_codes of this MinimumOrderValueTableStoreCodeSetWithMov.
        :type store_codes: List[str]
        """

        self._store_codes = store_codes

    @property
    def value(self):
        """Gets the value of this MinimumOrderValueTableStoreCodeSetWithMov.


        :return: The value of this MinimumOrderValueTableStoreCodeSetWithMov.
        :rtype: Price
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this MinimumOrderValueTableStoreCodeSetWithMov.


        :param value: The value of this MinimumOrderValueTableStoreCodeSetWithMov.
        :type value: Price
        """

        self._value = value
