# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_status import AccountStatus
from openapi_server.models.errors import Errors
from openapi_server import util


class AccountstatusesCustomBatchResponseEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_status: AccountStatus=None, batch_id: int=None, errors: Errors=None):
        """AccountstatusesCustomBatchResponseEntry - a model defined in OpenAPI

        :param account_status: The account_status of this AccountstatusesCustomBatchResponseEntry.
        :param batch_id: The batch_id of this AccountstatusesCustomBatchResponseEntry.
        :param errors: The errors of this AccountstatusesCustomBatchResponseEntry.
        """
        self.openapi_types = {
            'account_status': AccountStatus,
            'batch_id': int,
            'errors': Errors
        }

        self.attribute_map = {
            'account_status': 'accountStatus',
            'batch_id': 'batchId',
            'errors': 'errors'
        }

        self._account_status = account_status
        self._batch_id = batch_id
        self._errors = errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountstatusesCustomBatchResponseEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountstatusesCustomBatchResponseEntry of this AccountstatusesCustomBatchResponseEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_status(self):
        """Gets the account_status of this AccountstatusesCustomBatchResponseEntry.


        :return: The account_status of this AccountstatusesCustomBatchResponseEntry.
        :rtype: AccountStatus
        """
        return self._account_status

    @account_status.setter
    def account_status(self, account_status):
        """Sets the account_status of this AccountstatusesCustomBatchResponseEntry.


        :param account_status: The account_status of this AccountstatusesCustomBatchResponseEntry.
        :type account_status: AccountStatus
        """

        self._account_status = account_status

    @property
    def batch_id(self):
        """Gets the batch_id of this AccountstatusesCustomBatchResponseEntry.

        The ID of the request entry this entry responds to.

        :return: The batch_id of this AccountstatusesCustomBatchResponseEntry.
        :rtype: int
        """
        return self._batch_id

    @batch_id.setter
    def batch_id(self, batch_id):
        """Sets the batch_id of this AccountstatusesCustomBatchResponseEntry.

        The ID of the request entry this entry responds to.

        :param batch_id: The batch_id of this AccountstatusesCustomBatchResponseEntry.
        :type batch_id: int
        """

        self._batch_id = batch_id

    @property
    def errors(self):
        """Gets the errors of this AccountstatusesCustomBatchResponseEntry.


        :return: The errors of this AccountstatusesCustomBatchResponseEntry.
        :rtype: Errors
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this AccountstatusesCustomBatchResponseEntry.


        :param errors: The errors of this AccountstatusesCustomBatchResponseEntry.
        :type errors: Errors
        """

        self._errors = errors
