# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price import Price
from openapi_server import util


class OrderLineItemAdjustment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, price_adjustment: Price=None, tax_adjustment: Price=None, type: str=None):
        """OrderLineItemAdjustment - a model defined in OpenAPI

        :param price_adjustment: The price_adjustment of this OrderLineItemAdjustment.
        :param tax_adjustment: The tax_adjustment of this OrderLineItemAdjustment.
        :param type: The type of this OrderLineItemAdjustment.
        """
        self.openapi_types = {
            'price_adjustment': Price,
            'tax_adjustment': Price,
            'type': str
        }

        self.attribute_map = {
            'price_adjustment': 'priceAdjustment',
            'tax_adjustment': 'taxAdjustment',
            'type': 'type'
        }

        self._price_adjustment = price_adjustment
        self._tax_adjustment = tax_adjustment
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderLineItemAdjustment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderLineItemAdjustment of this OrderLineItemAdjustment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def price_adjustment(self):
        """Gets the price_adjustment of this OrderLineItemAdjustment.


        :return: The price_adjustment of this OrderLineItemAdjustment.
        :rtype: Price
        """
        return self._price_adjustment

    @price_adjustment.setter
    def price_adjustment(self, price_adjustment):
        """Sets the price_adjustment of this OrderLineItemAdjustment.


        :param price_adjustment: The price_adjustment of this OrderLineItemAdjustment.
        :type price_adjustment: Price
        """

        self._price_adjustment = price_adjustment

    @property
    def tax_adjustment(self):
        """Gets the tax_adjustment of this OrderLineItemAdjustment.


        :return: The tax_adjustment of this OrderLineItemAdjustment.
        :rtype: Price
        """
        return self._tax_adjustment

    @tax_adjustment.setter
    def tax_adjustment(self, tax_adjustment):
        """Sets the tax_adjustment of this OrderLineItemAdjustment.


        :param tax_adjustment: The tax_adjustment of this OrderLineItemAdjustment.
        :type tax_adjustment: Price
        """

        self._tax_adjustment = tax_adjustment

    @property
    def type(self):
        """Gets the type of this OrderLineItemAdjustment.

        Type of this adjustment. Acceptable values are: - \"`promotion`\" 

        :return: The type of this OrderLineItemAdjustment.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OrderLineItemAdjustment.

        Type of this adjustment. Acceptable values are: - \"`promotion`\" 

        :param type: The type of this OrderLineItemAdjustment.
        :type type: str
        """

        self._type = type
