# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PubsubNotificationSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_topic_name: str=None, kind: str=None, registered_events: List[str]=None):
        """PubsubNotificationSettings - a model defined in OpenAPI

        :param cloud_topic_name: The cloud_topic_name of this PubsubNotificationSettings.
        :param kind: The kind of this PubsubNotificationSettings.
        :param registered_events: The registered_events of this PubsubNotificationSettings.
        """
        self.openapi_types = {
            'cloud_topic_name': str,
            'kind': str,
            'registered_events': List[str]
        }

        self.attribute_map = {
            'cloud_topic_name': 'cloudTopicName',
            'kind': 'kind',
            'registered_events': 'registeredEvents'
        }

        self._cloud_topic_name = cloud_topic_name
        self._kind = kind
        self._registered_events = registered_events

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PubsubNotificationSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PubsubNotificationSettings of this PubsubNotificationSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_topic_name(self):
        """Gets the cloud_topic_name of this PubsubNotificationSettings.

        Cloud pub/sub topic to which notifications are sent (read-only).

        :return: The cloud_topic_name of this PubsubNotificationSettings.
        :rtype: str
        """
        return self._cloud_topic_name

    @cloud_topic_name.setter
    def cloud_topic_name(self, cloud_topic_name):
        """Sets the cloud_topic_name of this PubsubNotificationSettings.

        Cloud pub/sub topic to which notifications are sent (read-only).

        :param cloud_topic_name: The cloud_topic_name of this PubsubNotificationSettings.
        :type cloud_topic_name: str
        """

        self._cloud_topic_name = cloud_topic_name

    @property
    def kind(self):
        """Gets the kind of this PubsubNotificationSettings.

        Identifies what kind of resource this is. Value: the fixed string \"`content#pubsubNotificationSettings`\"

        :return: The kind of this PubsubNotificationSettings.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PubsubNotificationSettings.

        Identifies what kind of resource this is. Value: the fixed string \"`content#pubsubNotificationSettings`\"

        :param kind: The kind of this PubsubNotificationSettings.
        :type kind: str
        """

        self._kind = kind

    @property
    def registered_events(self):
        """Gets the registered_events of this PubsubNotificationSettings.

        List of event types. Acceptable values are: - \"`orderPendingShipment`\" 

        :return: The registered_events of this PubsubNotificationSettings.
        :rtype: List[str]
        """
        return self._registered_events

    @registered_events.setter
    def registered_events(self, registered_events):
        """Sets the registered_events of this PubsubNotificationSettings.

        List of event types. Acceptable values are: - \"`orderPendingShipment`\" 

        :param registered_events: The registered_events of this PubsubNotificationSettings.
        :type registered_events: List[str]
        """

        self._registered_events = registered_events
