# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountReturnCarrier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, carrier_account_id: str=None, carrier_account_name: str=None, carrier_account_number: str=None, carrier_code: str=None):
        """AccountReturnCarrier - a model defined in OpenAPI

        :param carrier_account_id: The carrier_account_id of this AccountReturnCarrier.
        :param carrier_account_name: The carrier_account_name of this AccountReturnCarrier.
        :param carrier_account_number: The carrier_account_number of this AccountReturnCarrier.
        :param carrier_code: The carrier_code of this AccountReturnCarrier.
        """
        self.openapi_types = {
            'carrier_account_id': str,
            'carrier_account_name': str,
            'carrier_account_number': str,
            'carrier_code': str
        }

        self.attribute_map = {
            'carrier_account_id': 'carrierAccountId',
            'carrier_account_name': 'carrierAccountName',
            'carrier_account_number': 'carrierAccountNumber',
            'carrier_code': 'carrierCode'
        }

        self._carrier_account_id = carrier_account_id
        self._carrier_account_name = carrier_account_name
        self._carrier_account_number = carrier_account_number
        self._carrier_code = carrier_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountReturnCarrier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountReturnCarrier of this AccountReturnCarrier.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def carrier_account_id(self):
        """Gets the carrier_account_id of this AccountReturnCarrier.

        Output only. Immutable. The Google-provided unique carrier ID, used to update the resource.

        :return: The carrier_account_id of this AccountReturnCarrier.
        :rtype: str
        """
        return self._carrier_account_id

    @carrier_account_id.setter
    def carrier_account_id(self, carrier_account_id):
        """Sets the carrier_account_id of this AccountReturnCarrier.

        Output only. Immutable. The Google-provided unique carrier ID, used to update the resource.

        :param carrier_account_id: The carrier_account_id of this AccountReturnCarrier.
        :type carrier_account_id: str
        """

        self._carrier_account_id = carrier_account_id

    @property
    def carrier_account_name(self):
        """Gets the carrier_account_name of this AccountReturnCarrier.

        Name of the carrier account.

        :return: The carrier_account_name of this AccountReturnCarrier.
        :rtype: str
        """
        return self._carrier_account_name

    @carrier_account_name.setter
    def carrier_account_name(self, carrier_account_name):
        """Sets the carrier_account_name of this AccountReturnCarrier.

        Name of the carrier account.

        :param carrier_account_name: The carrier_account_name of this AccountReturnCarrier.
        :type carrier_account_name: str
        """

        self._carrier_account_name = carrier_account_name

    @property
    def carrier_account_number(self):
        """Gets the carrier_account_number of this AccountReturnCarrier.

        Number of the carrier account.

        :return: The carrier_account_number of this AccountReturnCarrier.
        :rtype: str
        """
        return self._carrier_account_number

    @carrier_account_number.setter
    def carrier_account_number(self, carrier_account_number):
        """Sets the carrier_account_number of this AccountReturnCarrier.

        Number of the carrier account.

        :param carrier_account_number: The carrier_account_number of this AccountReturnCarrier.
        :type carrier_account_number: str
        """

        self._carrier_account_number = carrier_account_number

    @property
    def carrier_code(self):
        """Gets the carrier_code of this AccountReturnCarrier.

        The carrier code enum. Accepts the values FEDEX or UPS.

        :return: The carrier_code of this AccountReturnCarrier.
        :rtype: str
        """
        return self._carrier_code

    @carrier_code.setter
    def carrier_code(self, carrier_code):
        """Sets the carrier_code of this AccountReturnCarrier.

        The carrier code enum. Accepts the values FEDEX or UPS.

        :param carrier_code: The carrier_code of this AccountReturnCarrier.
        :type carrier_code: str
        """
        allowed_values = ["CARRIER_CODE_UNSPECIFIED", "FEDEX", "UPS"]  # noqa: E501
        if carrier_code not in allowed_values:
            raise ValueError(
                "Invalid value for `carrier_code` ({0}), must be one of {1}"
                .format(carrier_code, allowed_values)
            )

        self._carrier_code = carrier_code
