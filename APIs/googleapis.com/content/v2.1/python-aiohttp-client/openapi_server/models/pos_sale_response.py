# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price import Price
from openapi_server import util


class PosSaleResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_language: str=None, gtin: str=None, item_id: str=None, kind: str=None, price: Price=None, quantity: str=None, sale_id: str=None, store_code: str=None, target_country: str=None, timestamp: str=None):
        """PosSaleResponse - a model defined in OpenAPI

        :param content_language: The content_language of this PosSaleResponse.
        :param gtin: The gtin of this PosSaleResponse.
        :param item_id: The item_id of this PosSaleResponse.
        :param kind: The kind of this PosSaleResponse.
        :param price: The price of this PosSaleResponse.
        :param quantity: The quantity of this PosSaleResponse.
        :param sale_id: The sale_id of this PosSaleResponse.
        :param store_code: The store_code of this PosSaleResponse.
        :param target_country: The target_country of this PosSaleResponse.
        :param timestamp: The timestamp of this PosSaleResponse.
        """
        self.openapi_types = {
            'content_language': str,
            'gtin': str,
            'item_id': str,
            'kind': str,
            'price': Price,
            'quantity': str,
            'sale_id': str,
            'store_code': str,
            'target_country': str,
            'timestamp': str
        }

        self.attribute_map = {
            'content_language': 'contentLanguage',
            'gtin': 'gtin',
            'item_id': 'itemId',
            'kind': 'kind',
            'price': 'price',
            'quantity': 'quantity',
            'sale_id': 'saleId',
            'store_code': 'storeCode',
            'target_country': 'targetCountry',
            'timestamp': 'timestamp'
        }

        self._content_language = content_language
        self._gtin = gtin
        self._item_id = item_id
        self._kind = kind
        self._price = price
        self._quantity = quantity
        self._sale_id = sale_id
        self._store_code = store_code
        self._target_country = target_country
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PosSaleResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PosSaleResponse of this PosSaleResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_language(self):
        """Gets the content_language of this PosSaleResponse.

        Required. The two-letter ISO 639-1 language code for the item.

        :return: The content_language of this PosSaleResponse.
        :rtype: str
        """
        return self._content_language

    @content_language.setter
    def content_language(self, content_language):
        """Sets the content_language of this PosSaleResponse.

        Required. The two-letter ISO 639-1 language code for the item.

        :param content_language: The content_language of this PosSaleResponse.
        :type content_language: str
        """

        self._content_language = content_language

    @property
    def gtin(self):
        """Gets the gtin of this PosSaleResponse.

        Global Trade Item Number.

        :return: The gtin of this PosSaleResponse.
        :rtype: str
        """
        return self._gtin

    @gtin.setter
    def gtin(self, gtin):
        """Sets the gtin of this PosSaleResponse.

        Global Trade Item Number.

        :param gtin: The gtin of this PosSaleResponse.
        :type gtin: str
        """

        self._gtin = gtin

    @property
    def item_id(self):
        """Gets the item_id of this PosSaleResponse.

        Required. A unique identifier for the item.

        :return: The item_id of this PosSaleResponse.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this PosSaleResponse.

        Required. A unique identifier for the item.

        :param item_id: The item_id of this PosSaleResponse.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def kind(self):
        """Gets the kind of this PosSaleResponse.

        Identifies what kind of resource this is. Value: the fixed string \"`content#posSaleResponse`\".

        :return: The kind of this PosSaleResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PosSaleResponse.

        Identifies what kind of resource this is. Value: the fixed string \"`content#posSaleResponse`\".

        :param kind: The kind of this PosSaleResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def price(self):
        """Gets the price of this PosSaleResponse.


        :return: The price of this PosSaleResponse.
        :rtype: Price
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this PosSaleResponse.


        :param price: The price of this PosSaleResponse.
        :type price: Price
        """

        self._price = price

    @property
    def quantity(self):
        """Gets the quantity of this PosSaleResponse.

        Required. The relative change of the available quantity. Negative for items returned.

        :return: The quantity of this PosSaleResponse.
        :rtype: str
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this PosSaleResponse.

        Required. The relative change of the available quantity. Negative for items returned.

        :param quantity: The quantity of this PosSaleResponse.
        :type quantity: str
        """

        self._quantity = quantity

    @property
    def sale_id(self):
        """Gets the sale_id of this PosSaleResponse.

        A unique ID to group items from the same sale event.

        :return: The sale_id of this PosSaleResponse.
        :rtype: str
        """
        return self._sale_id

    @sale_id.setter
    def sale_id(self, sale_id):
        """Sets the sale_id of this PosSaleResponse.

        A unique ID to group items from the same sale event.

        :param sale_id: The sale_id of this PosSaleResponse.
        :type sale_id: str
        """

        self._sale_id = sale_id

    @property
    def store_code(self):
        """Gets the store_code of this PosSaleResponse.

        Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.

        :return: The store_code of this PosSaleResponse.
        :rtype: str
        """
        return self._store_code

    @store_code.setter
    def store_code(self, store_code):
        """Sets the store_code of this PosSaleResponse.

        Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.

        :param store_code: The store_code of this PosSaleResponse.
        :type store_code: str
        """

        self._store_code = store_code

    @property
    def target_country(self):
        """Gets the target_country of this PosSaleResponse.

        Required. The CLDR territory code for the item.

        :return: The target_country of this PosSaleResponse.
        :rtype: str
        """
        return self._target_country

    @target_country.setter
    def target_country(self, target_country):
        """Sets the target_country of this PosSaleResponse.

        Required. The CLDR territory code for the item.

        :param target_country: The target_country of this PosSaleResponse.
        :type target_country: str
        """

        self._target_country = target_country

    @property
    def timestamp(self):
        """Gets the timestamp of this PosSaleResponse.

        Required. The inventory timestamp, in ISO 8601 format.

        :return: The timestamp of this PosSaleResponse.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this PosSaleResponse.

        Required. The inventory timestamp, in ISO 8601 format.

        :param timestamp: The timestamp of this PosSaleResponse.
        :type timestamp: str
        """

        self._timestamp = timestamp
