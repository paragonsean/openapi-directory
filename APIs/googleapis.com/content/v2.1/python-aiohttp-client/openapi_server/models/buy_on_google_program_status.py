# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BuyOnGoogleProgramStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business_model: List[str]=None, customer_service_pending_email: str=None, customer_service_pending_phone_number: str=None, customer_service_pending_phone_region_code: str=None, customer_service_verified_email: str=None, customer_service_verified_phone_number: str=None, customer_service_verified_phone_region_code: str=None, online_sales_channel: str=None, participation_stage: str=None):
        """BuyOnGoogleProgramStatus - a model defined in OpenAPI

        :param business_model: The business_model of this BuyOnGoogleProgramStatus.
        :param customer_service_pending_email: The customer_service_pending_email of this BuyOnGoogleProgramStatus.
        :param customer_service_pending_phone_number: The customer_service_pending_phone_number of this BuyOnGoogleProgramStatus.
        :param customer_service_pending_phone_region_code: The customer_service_pending_phone_region_code of this BuyOnGoogleProgramStatus.
        :param customer_service_verified_email: The customer_service_verified_email of this BuyOnGoogleProgramStatus.
        :param customer_service_verified_phone_number: The customer_service_verified_phone_number of this BuyOnGoogleProgramStatus.
        :param customer_service_verified_phone_region_code: The customer_service_verified_phone_region_code of this BuyOnGoogleProgramStatus.
        :param online_sales_channel: The online_sales_channel of this BuyOnGoogleProgramStatus.
        :param participation_stage: The participation_stage of this BuyOnGoogleProgramStatus.
        """
        self.openapi_types = {
            'business_model': List[str],
            'customer_service_pending_email': str,
            'customer_service_pending_phone_number': str,
            'customer_service_pending_phone_region_code': str,
            'customer_service_verified_email': str,
            'customer_service_verified_phone_number': str,
            'customer_service_verified_phone_region_code': str,
            'online_sales_channel': str,
            'participation_stage': str
        }

        self.attribute_map = {
            'business_model': 'businessModel',
            'customer_service_pending_email': 'customerServicePendingEmail',
            'customer_service_pending_phone_number': 'customerServicePendingPhoneNumber',
            'customer_service_pending_phone_region_code': 'customerServicePendingPhoneRegionCode',
            'customer_service_verified_email': 'customerServiceVerifiedEmail',
            'customer_service_verified_phone_number': 'customerServiceVerifiedPhoneNumber',
            'customer_service_verified_phone_region_code': 'customerServiceVerifiedPhoneRegionCode',
            'online_sales_channel': 'onlineSalesChannel',
            'participation_stage': 'participationStage'
        }

        self._business_model = business_model
        self._customer_service_pending_email = customer_service_pending_email
        self._customer_service_pending_phone_number = customer_service_pending_phone_number
        self._customer_service_pending_phone_region_code = customer_service_pending_phone_region_code
        self._customer_service_verified_email = customer_service_verified_email
        self._customer_service_verified_phone_number = customer_service_verified_phone_number
        self._customer_service_verified_phone_region_code = customer_service_verified_phone_region_code
        self._online_sales_channel = online_sales_channel
        self._participation_stage = participation_stage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuyOnGoogleProgramStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuyOnGoogleProgramStatus of this BuyOnGoogleProgramStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_model(self):
        """Gets the business_model of this BuyOnGoogleProgramStatus.

        The business models in which merchant participates.

        :return: The business_model of this BuyOnGoogleProgramStatus.
        :rtype: List[str]
        """
        return self._business_model

    @business_model.setter
    def business_model(self, business_model):
        """Sets the business_model of this BuyOnGoogleProgramStatus.

        The business models in which merchant participates.

        :param business_model: The business_model of this BuyOnGoogleProgramStatus.
        :type business_model: List[str]
        """
        allowed_values = ["BUSINESS_MODEL_UNSPECIFIED", "MANUFACTURER", "IMPORTER", "RESELLER", "OTHER"]  # noqa: E501
        if not set(business_model).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `business_model` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(business_model) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._business_model = business_model

    @property
    def customer_service_pending_email(self):
        """Gets the customer_service_pending_email of this BuyOnGoogleProgramStatus.

        The customer service pending email. After verification this field becomes empty.

        :return: The customer_service_pending_email of this BuyOnGoogleProgramStatus.
        :rtype: str
        """
        return self._customer_service_pending_email

    @customer_service_pending_email.setter
    def customer_service_pending_email(self, customer_service_pending_email):
        """Sets the customer_service_pending_email of this BuyOnGoogleProgramStatus.

        The customer service pending email. After verification this field becomes empty.

        :param customer_service_pending_email: The customer_service_pending_email of this BuyOnGoogleProgramStatus.
        :type customer_service_pending_email: str
        """

        self._customer_service_pending_email = customer_service_pending_email

    @property
    def customer_service_pending_phone_number(self):
        """Gets the customer_service_pending_phone_number of this BuyOnGoogleProgramStatus.

        The pending phone number specified for BuyOnGoogle program. It might be different than account level phone number. In order to update this field the customer_service_pending_phone_region_code must also be set. After verification this field becomes empty.

        :return: The customer_service_pending_phone_number of this BuyOnGoogleProgramStatus.
        :rtype: str
        """
        return self._customer_service_pending_phone_number

    @customer_service_pending_phone_number.setter
    def customer_service_pending_phone_number(self, customer_service_pending_phone_number):
        """Sets the customer_service_pending_phone_number of this BuyOnGoogleProgramStatus.

        The pending phone number specified for BuyOnGoogle program. It might be different than account level phone number. In order to update this field the customer_service_pending_phone_region_code must also be set. After verification this field becomes empty.

        :param customer_service_pending_phone_number: The customer_service_pending_phone_number of this BuyOnGoogleProgramStatus.
        :type customer_service_pending_phone_number: str
        """

        self._customer_service_pending_phone_number = customer_service_pending_phone_number

    @property
    def customer_service_pending_phone_region_code(self):
        """Gets the customer_service_pending_phone_region_code of this BuyOnGoogleProgramStatus.

        Two letter country code for the pending phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes. In order to update this field the customer_service_pending_phone_number must also be set. After verification this field becomes empty.

        :return: The customer_service_pending_phone_region_code of this BuyOnGoogleProgramStatus.
        :rtype: str
        """
        return self._customer_service_pending_phone_region_code

    @customer_service_pending_phone_region_code.setter
    def customer_service_pending_phone_region_code(self, customer_service_pending_phone_region_code):
        """Sets the customer_service_pending_phone_region_code of this BuyOnGoogleProgramStatus.

        Two letter country code for the pending phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes. In order to update this field the customer_service_pending_phone_number must also be set. After verification this field becomes empty.

        :param customer_service_pending_phone_region_code: The customer_service_pending_phone_region_code of this BuyOnGoogleProgramStatus.
        :type customer_service_pending_phone_region_code: str
        """

        self._customer_service_pending_phone_region_code = customer_service_pending_phone_region_code

    @property
    def customer_service_verified_email(self):
        """Gets the customer_service_verified_email of this BuyOnGoogleProgramStatus.

        Output only. The customer service verified email.

        :return: The customer_service_verified_email of this BuyOnGoogleProgramStatus.
        :rtype: str
        """
        return self._customer_service_verified_email

    @customer_service_verified_email.setter
    def customer_service_verified_email(self, customer_service_verified_email):
        """Sets the customer_service_verified_email of this BuyOnGoogleProgramStatus.

        Output only. The customer service verified email.

        :param customer_service_verified_email: The customer_service_verified_email of this BuyOnGoogleProgramStatus.
        :type customer_service_verified_email: str
        """

        self._customer_service_verified_email = customer_service_verified_email

    @property
    def customer_service_verified_phone_number(self):
        """Gets the customer_service_verified_phone_number of this BuyOnGoogleProgramStatus.

        Output only. The verified phone number specified for BuyOnGoogle program. It might be different than account level phone number.

        :return: The customer_service_verified_phone_number of this BuyOnGoogleProgramStatus.
        :rtype: str
        """
        return self._customer_service_verified_phone_number

    @customer_service_verified_phone_number.setter
    def customer_service_verified_phone_number(self, customer_service_verified_phone_number):
        """Sets the customer_service_verified_phone_number of this BuyOnGoogleProgramStatus.

        Output only. The verified phone number specified for BuyOnGoogle program. It might be different than account level phone number.

        :param customer_service_verified_phone_number: The customer_service_verified_phone_number of this BuyOnGoogleProgramStatus.
        :type customer_service_verified_phone_number: str
        """

        self._customer_service_verified_phone_number = customer_service_verified_phone_number

    @property
    def customer_service_verified_phone_region_code(self):
        """Gets the customer_service_verified_phone_region_code of this BuyOnGoogleProgramStatus.

        Output only. Two letter country code for the verified phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes.

        :return: The customer_service_verified_phone_region_code of this BuyOnGoogleProgramStatus.
        :rtype: str
        """
        return self._customer_service_verified_phone_region_code

    @customer_service_verified_phone_region_code.setter
    def customer_service_verified_phone_region_code(self, customer_service_verified_phone_region_code):
        """Sets the customer_service_verified_phone_region_code of this BuyOnGoogleProgramStatus.

        Output only. Two letter country code for the verified phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes.

        :param customer_service_verified_phone_region_code: The customer_service_verified_phone_region_code of this BuyOnGoogleProgramStatus.
        :type customer_service_verified_phone_region_code: str
        """

        self._customer_service_verified_phone_region_code = customer_service_verified_phone_region_code

    @property
    def online_sales_channel(self):
        """Gets the online_sales_channel of this BuyOnGoogleProgramStatus.

        The channels through which the merchant is selling.

        :return: The online_sales_channel of this BuyOnGoogleProgramStatus.
        :rtype: str
        """
        return self._online_sales_channel

    @online_sales_channel.setter
    def online_sales_channel(self, online_sales_channel):
        """Sets the online_sales_channel of this BuyOnGoogleProgramStatus.

        The channels through which the merchant is selling.

        :param online_sales_channel: The online_sales_channel of this BuyOnGoogleProgramStatus.
        :type online_sales_channel: str
        """
        allowed_values = ["ONLINE_SALES_CHANNEL_UNSPECIFIED", "GOOGLE_EXCLUSIVE", "GOOGLE_AND_OTHER_WEBSITES"]  # noqa: E501
        if online_sales_channel not in allowed_values:
            raise ValueError(
                "Invalid value for `online_sales_channel` ({0}), must be one of {1}"
                .format(online_sales_channel, allowed_values)
            )

        self._online_sales_channel = online_sales_channel

    @property
    def participation_stage(self):
        """Gets the participation_stage of this BuyOnGoogleProgramStatus.

        Output only. The current participation stage for the program.

        :return: The participation_stage of this BuyOnGoogleProgramStatus.
        :rtype: str
        """
        return self._participation_stage

    @participation_stage.setter
    def participation_stage(self, participation_stage):
        """Sets the participation_stage of this BuyOnGoogleProgramStatus.

        Output only. The current participation stage for the program.

        :param participation_stage: The participation_stage of this BuyOnGoogleProgramStatus.
        :type participation_stage: str
        """
        allowed_values = ["PROGRAM_PARTICIPATION_STAGE_UNSPECIFIED", "NOT_ELIGIBLE", "ELIGIBLE", "ONBOARDING", "ELIGIBLE_FOR_REVIEW", "PENDING_REVIEW", "REVIEW_DISAPPROVED", "ACTIVE", "PAUSED", "DEPRECATED"]  # noqa: E501
        if participation_stage not in allowed_values:
            raise ValueError(
                "Invalid value for `participation_stage` ({0}), must be one of {1}"
                .format(participation_stage, allowed_values)
            )

        self._participation_stage = participation_stage
