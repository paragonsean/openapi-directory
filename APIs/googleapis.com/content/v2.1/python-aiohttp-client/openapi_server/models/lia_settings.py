# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lia_country_settings import LiaCountrySettings
from openapi_server import util


class LiaSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, country_settings: List[LiaCountrySettings]=None, kind: str=None):
        """LiaSettings - a model defined in OpenAPI

        :param account_id: The account_id of this LiaSettings.
        :param country_settings: The country_settings of this LiaSettings.
        :param kind: The kind of this LiaSettings.
        """
        self.openapi_types = {
            'account_id': str,
            'country_settings': List[LiaCountrySettings],
            'kind': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'country_settings': 'countrySettings',
            'kind': 'kind'
        }

        self._account_id = account_id
        self._country_settings = country_settings
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiaSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiaSettings of this LiaSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this LiaSettings.

        The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses.

        :return: The account_id of this LiaSettings.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this LiaSettings.

        The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses.

        :param account_id: The account_id of this LiaSettings.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def country_settings(self):
        """Gets the country_settings of this LiaSettings.

        The LIA settings for each country.

        :return: The country_settings of this LiaSettings.
        :rtype: List[LiaCountrySettings]
        """
        return self._country_settings

    @country_settings.setter
    def country_settings(self, country_settings):
        """Sets the country_settings of this LiaSettings.

        The LIA settings for each country.

        :param country_settings: The country_settings of this LiaSettings.
        :type country_settings: List[LiaCountrySettings]
        """

        self._country_settings = country_settings

    @property
    def kind(self):
        """Gets the kind of this LiaSettings.

        Identifies what kind of resource this is. Value: the fixed string \"`content#liaSettings`\"

        :return: The kind of this LiaSettings.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this LiaSettings.

        Identifies what kind of resource this is. Value: the fixed string \"`content#liaSettings`\"

        :param kind: The kind of this LiaSettings.
        :type kind: str
        """

        self._kind = kind
