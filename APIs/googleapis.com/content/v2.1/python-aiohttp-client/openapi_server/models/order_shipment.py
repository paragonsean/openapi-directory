# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_shipment_line_item_shipment import OrderShipmentLineItemShipment
from openapi_server.models.order_shipment_scheduled_delivery_details import OrderShipmentScheduledDeliveryDetails
from openapi_server import util


class OrderShipment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, carrier: str=None, creation_date: str=None, delivery_date: str=None, id: str=None, line_items: List[OrderShipmentLineItemShipment]=None, scheduled_delivery_details: OrderShipmentScheduledDeliveryDetails=None, shipment_group_id: str=None, status: str=None, tracking_id: str=None):
        """OrderShipment - a model defined in OpenAPI

        :param carrier: The carrier of this OrderShipment.
        :param creation_date: The creation_date of this OrderShipment.
        :param delivery_date: The delivery_date of this OrderShipment.
        :param id: The id of this OrderShipment.
        :param line_items: The line_items of this OrderShipment.
        :param scheduled_delivery_details: The scheduled_delivery_details of this OrderShipment.
        :param shipment_group_id: The shipment_group_id of this OrderShipment.
        :param status: The status of this OrderShipment.
        :param tracking_id: The tracking_id of this OrderShipment.
        """
        self.openapi_types = {
            'carrier': str,
            'creation_date': str,
            'delivery_date': str,
            'id': str,
            'line_items': List[OrderShipmentLineItemShipment],
            'scheduled_delivery_details': OrderShipmentScheduledDeliveryDetails,
            'shipment_group_id': str,
            'status': str,
            'tracking_id': str
        }

        self.attribute_map = {
            'carrier': 'carrier',
            'creation_date': 'creationDate',
            'delivery_date': 'deliveryDate',
            'id': 'id',
            'line_items': 'lineItems',
            'scheduled_delivery_details': 'scheduledDeliveryDetails',
            'shipment_group_id': 'shipmentGroupId',
            'status': 'status',
            'tracking_id': 'trackingId'
        }

        self._carrier = carrier
        self._creation_date = creation_date
        self._delivery_date = delivery_date
        self._id = id
        self._line_items = line_items
        self._scheduled_delivery_details = scheduled_delivery_details
        self._shipment_group_id = shipment_group_id
        self._status = status
        self._tracking_id = tracking_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderShipment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderShipment of this OrderShipment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def carrier(self):
        """Gets the carrier of this OrderShipment.

        The carrier handling the shipment. For supported carriers, Google includes the carrier name and tracking URL in emails to customers. For select supported carriers, Google also automatically updates the shipment status based on the provided shipment ID. *Note:* You can also use unsupported carriers, but emails to customers won't include the carrier name or tracking URL, and there will be no automatic order status updates. Supported carriers for \"US\" are: - \"`ups`\" (United Parcel Service) *automatic status updates* - \"`usps`\" (United States Postal Service) *automatic status updates* - \"`fedex`\" (FedEx) *automatic status updates * - \"`dhl`\" (DHL eCommerce) *automatic status updates* (US only) - \"`ontrac`\" (OnTrac) *automatic status updates * - \"`dhl express`\" (DHL Express) - \"`deliv`\" (Deliv) - \"`dynamex`\" (TForce) - \"`lasership`\" (LaserShip) - \"`mpx`\" (Military Parcel Xpress) - \"`uds`\" (United Delivery Service) - \"`efw`\" (Estes Forwarding Worldwide) - \"`jd logistics`\" (JD Logistics) - \"`yunexpress`\" (YunExpress) - \"`china post`\" (China Post) - \"`china ems`\" (China Post Express Mail Service) - \"`singapore post`\" (Singapore Post) - \"`pos malaysia`\" (Pos Malaysia) - \"`postnl`\" (PostNL) - \"`ptt`\" (PTT Turkish Post) - \"`eub`\" (ePacket) - \"`chukou1`\" (Chukou1 Logistics) - \"`bestex`\" (Best Express) - \"`canada post`\" (Canada Post) - \"`purolator`\" (Purolator) - \"`canpar`\" (Canpar) - \"`india post`\" (India Post) - \"`blue dart`\" (Blue Dart) - \"`delhivery`\" (Delhivery) - \"`dtdc`\" (DTDC) - \"`tpc india`\" (TPC India) - \"`lso`\" (Lone Star Overnight) - \"`tww`\" (Team Worldwide) - \"`deliver-it`\" (Deliver-IT) - \"`cdl last mile`\" (CDL Last Mile) Supported carriers for FR are: - \"`la poste`\" (La Poste) *automatic status updates * - \"`colissimo`\" (Colissimo by La Poste) *automatic status updates* - \"`ups`\" (United Parcel Service) *automatic status updates * - \"`chronopost`\" (Chronopost by La Poste) - \"`gls`\" (General Logistics Systems France) - \"`dpd`\" (DPD Group by GeoPost) - \"`bpost`\" (Belgian Post Group) - \"`colis prive`\" (Colis Privé) - \"`boxtal`\" (Boxtal) - \"`geodis`\" (GEODIS) - \"`tnt`\" (TNT) - \"`db schenker`\" (DB Schenker) - \"`aramex`\" (Aramex) 

        :return: The carrier of this OrderShipment.
        :rtype: str
        """
        return self._carrier

    @carrier.setter
    def carrier(self, carrier):
        """Sets the carrier of this OrderShipment.

        The carrier handling the shipment. For supported carriers, Google includes the carrier name and tracking URL in emails to customers. For select supported carriers, Google also automatically updates the shipment status based on the provided shipment ID. *Note:* You can also use unsupported carriers, but emails to customers won't include the carrier name or tracking URL, and there will be no automatic order status updates. Supported carriers for \"US\" are: - \"`ups`\" (United Parcel Service) *automatic status updates* - \"`usps`\" (United States Postal Service) *automatic status updates* - \"`fedex`\" (FedEx) *automatic status updates * - \"`dhl`\" (DHL eCommerce) *automatic status updates* (US only) - \"`ontrac`\" (OnTrac) *automatic status updates * - \"`dhl express`\" (DHL Express) - \"`deliv`\" (Deliv) - \"`dynamex`\" (TForce) - \"`lasership`\" (LaserShip) - \"`mpx`\" (Military Parcel Xpress) - \"`uds`\" (United Delivery Service) - \"`efw`\" (Estes Forwarding Worldwide) - \"`jd logistics`\" (JD Logistics) - \"`yunexpress`\" (YunExpress) - \"`china post`\" (China Post) - \"`china ems`\" (China Post Express Mail Service) - \"`singapore post`\" (Singapore Post) - \"`pos malaysia`\" (Pos Malaysia) - \"`postnl`\" (PostNL) - \"`ptt`\" (PTT Turkish Post) - \"`eub`\" (ePacket) - \"`chukou1`\" (Chukou1 Logistics) - \"`bestex`\" (Best Express) - \"`canada post`\" (Canada Post) - \"`purolator`\" (Purolator) - \"`canpar`\" (Canpar) - \"`india post`\" (India Post) - \"`blue dart`\" (Blue Dart) - \"`delhivery`\" (Delhivery) - \"`dtdc`\" (DTDC) - \"`tpc india`\" (TPC India) - \"`lso`\" (Lone Star Overnight) - \"`tww`\" (Team Worldwide) - \"`deliver-it`\" (Deliver-IT) - \"`cdl last mile`\" (CDL Last Mile) Supported carriers for FR are: - \"`la poste`\" (La Poste) *automatic status updates * - \"`colissimo`\" (Colissimo by La Poste) *automatic status updates* - \"`ups`\" (United Parcel Service) *automatic status updates * - \"`chronopost`\" (Chronopost by La Poste) - \"`gls`\" (General Logistics Systems France) - \"`dpd`\" (DPD Group by GeoPost) - \"`bpost`\" (Belgian Post Group) - \"`colis prive`\" (Colis Privé) - \"`boxtal`\" (Boxtal) - \"`geodis`\" (GEODIS) - \"`tnt`\" (TNT) - \"`db schenker`\" (DB Schenker) - \"`aramex`\" (Aramex) 

        :param carrier: The carrier of this OrderShipment.
        :type carrier: str
        """

        self._carrier = carrier

    @property
    def creation_date(self):
        """Gets the creation_date of this OrderShipment.

        Date on which the shipment has been created, in ISO 8601 format.

        :return: The creation_date of this OrderShipment.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this OrderShipment.

        Date on which the shipment has been created, in ISO 8601 format.

        :param creation_date: The creation_date of this OrderShipment.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def delivery_date(self):
        """Gets the delivery_date of this OrderShipment.

        Date on which the shipment has been delivered, in ISO 8601 format. Present only if `status` is `delivered`

        :return: The delivery_date of this OrderShipment.
        :rtype: str
        """
        return self._delivery_date

    @delivery_date.setter
    def delivery_date(self, delivery_date):
        """Sets the delivery_date of this OrderShipment.

        Date on which the shipment has been delivered, in ISO 8601 format. Present only if `status` is `delivered`

        :param delivery_date: The delivery_date of this OrderShipment.
        :type delivery_date: str
        """

        self._delivery_date = delivery_date

    @property
    def id(self):
        """Gets the id of this OrderShipment.

        The ID of the shipment.

        :return: The id of this OrderShipment.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderShipment.

        The ID of the shipment.

        :param id: The id of this OrderShipment.
        :type id: str
        """

        self._id = id

    @property
    def line_items(self):
        """Gets the line_items of this OrderShipment.

        The line items that are shipped.

        :return: The line_items of this OrderShipment.
        :rtype: List[OrderShipmentLineItemShipment]
        """
        return self._line_items

    @line_items.setter
    def line_items(self, line_items):
        """Sets the line_items of this OrderShipment.

        The line items that are shipped.

        :param line_items: The line_items of this OrderShipment.
        :type line_items: List[OrderShipmentLineItemShipment]
        """

        self._line_items = line_items

    @property
    def scheduled_delivery_details(self):
        """Gets the scheduled_delivery_details of this OrderShipment.


        :return: The scheduled_delivery_details of this OrderShipment.
        :rtype: OrderShipmentScheduledDeliveryDetails
        """
        return self._scheduled_delivery_details

    @scheduled_delivery_details.setter
    def scheduled_delivery_details(self, scheduled_delivery_details):
        """Sets the scheduled_delivery_details of this OrderShipment.


        :param scheduled_delivery_details: The scheduled_delivery_details of this OrderShipment.
        :type scheduled_delivery_details: OrderShipmentScheduledDeliveryDetails
        """

        self._scheduled_delivery_details = scheduled_delivery_details

    @property
    def shipment_group_id(self):
        """Gets the shipment_group_id of this OrderShipment.

        The shipment group ID of the shipment. This is set in shiplineitems request.

        :return: The shipment_group_id of this OrderShipment.
        :rtype: str
        """
        return self._shipment_group_id

    @shipment_group_id.setter
    def shipment_group_id(self, shipment_group_id):
        """Sets the shipment_group_id of this OrderShipment.

        The shipment group ID of the shipment. This is set in shiplineitems request.

        :param shipment_group_id: The shipment_group_id of this OrderShipment.
        :type shipment_group_id: str
        """

        self._shipment_group_id = shipment_group_id

    @property
    def status(self):
        """Gets the status of this OrderShipment.

        The status of the shipment. Acceptable values are: - \"`delivered`\" - \"`readyForPickup`\" - \"`shipped`\" - \"`undeliverable`\" 

        :return: The status of this OrderShipment.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OrderShipment.

        The status of the shipment. Acceptable values are: - \"`delivered`\" - \"`readyForPickup`\" - \"`shipped`\" - \"`undeliverable`\" 

        :param status: The status of this OrderShipment.
        :type status: str
        """

        self._status = status

    @property
    def tracking_id(self):
        """Gets the tracking_id of this OrderShipment.

        The tracking ID for the shipment.

        :return: The tracking_id of this OrderShipment.
        :rtype: str
        """
        return self._tracking_id

    @tracking_id.setter
    def tracking_id(self, tracking_id):
        """Sets the tracking_id of this OrderShipment.

        The tracking ID for the shipment.

        :param tracking_id: The tracking_id of this OrderShipment.
        :type tracking_id: str
        """

        self._tracking_id = tracking_id
