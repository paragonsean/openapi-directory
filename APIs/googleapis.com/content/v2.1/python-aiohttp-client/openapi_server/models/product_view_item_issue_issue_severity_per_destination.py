# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductViewItemIssueIssueSeverityPerDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, demoted_countries: List[str]=None, destination: str=None, disapproved_countries: List[str]=None):
        """ProductViewItemIssueIssueSeverityPerDestination - a model defined in OpenAPI

        :param demoted_countries: The demoted_countries of this ProductViewItemIssueIssueSeverityPerDestination.
        :param destination: The destination of this ProductViewItemIssueIssueSeverityPerDestination.
        :param disapproved_countries: The disapproved_countries of this ProductViewItemIssueIssueSeverityPerDestination.
        """
        self.openapi_types = {
            'demoted_countries': List[str],
            'destination': str,
            'disapproved_countries': List[str]
        }

        self.attribute_map = {
            'demoted_countries': 'demotedCountries',
            'destination': 'destination',
            'disapproved_countries': 'disapprovedCountries'
        }

        self._demoted_countries = demoted_countries
        self._destination = destination
        self._disapproved_countries = disapproved_countries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductViewItemIssueIssueSeverityPerDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductViewItemIssueIssueSeverityPerDestination of this ProductViewItemIssueIssueSeverityPerDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def demoted_countries(self):
        """Gets the demoted_countries of this ProductViewItemIssueIssueSeverityPerDestination.

        List of demoted countries in the destination.

        :return: The demoted_countries of this ProductViewItemIssueIssueSeverityPerDestination.
        :rtype: List[str]
        """
        return self._demoted_countries

    @demoted_countries.setter
    def demoted_countries(self, demoted_countries):
        """Sets the demoted_countries of this ProductViewItemIssueIssueSeverityPerDestination.

        List of demoted countries in the destination.

        :param demoted_countries: The demoted_countries of this ProductViewItemIssueIssueSeverityPerDestination.
        :type demoted_countries: List[str]
        """

        self._demoted_countries = demoted_countries

    @property
    def destination(self):
        """Gets the destination of this ProductViewItemIssueIssueSeverityPerDestination.

        Issue destination.

        :return: The destination of this ProductViewItemIssueIssueSeverityPerDestination.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this ProductViewItemIssueIssueSeverityPerDestination.

        Issue destination.

        :param destination: The destination of this ProductViewItemIssueIssueSeverityPerDestination.
        :type destination: str
        """

        self._destination = destination

    @property
    def disapproved_countries(self):
        """Gets the disapproved_countries of this ProductViewItemIssueIssueSeverityPerDestination.

        List of disapproved countries in the destination.

        :return: The disapproved_countries of this ProductViewItemIssueIssueSeverityPerDestination.
        :rtype: List[str]
        """
        return self._disapproved_countries

    @disapproved_countries.setter
    def disapproved_countries(self, disapproved_countries):
        """Sets the disapproved_countries of this ProductViewItemIssueIssueSeverityPerDestination.

        List of disapproved countries in the destination.

        :param disapproved_countries: The disapproved_countries of this ProductViewItemIssueIssueSeverityPerDestination.
        :type disapproved_countries: List[str]
        """

        self._disapproved_countries = disapproved_countries
