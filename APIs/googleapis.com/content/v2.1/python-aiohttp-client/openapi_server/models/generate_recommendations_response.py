# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recommendation import Recommendation
from openapi_server import util


class GenerateRecommendationsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recommendations: List[Recommendation]=None, response_token: str=None):
        """GenerateRecommendationsResponse - a model defined in OpenAPI

        :param recommendations: The recommendations of this GenerateRecommendationsResponse.
        :param response_token: The response_token of this GenerateRecommendationsResponse.
        """
        self.openapi_types = {
            'recommendations': List[Recommendation],
            'response_token': str
        }

        self.attribute_map = {
            'recommendations': 'recommendations',
            'response_token': 'responseToken'
        }

        self._recommendations = recommendations
        self._response_token = response_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateRecommendationsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateRecommendationsResponse of this GenerateRecommendationsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recommendations(self):
        """Gets the recommendations of this GenerateRecommendationsResponse.

        Recommendations generated for a request.

        :return: The recommendations of this GenerateRecommendationsResponse.
        :rtype: List[Recommendation]
        """
        return self._recommendations

    @recommendations.setter
    def recommendations(self, recommendations):
        """Sets the recommendations of this GenerateRecommendationsResponse.

        Recommendations generated for a request.

        :param recommendations: The recommendations of this GenerateRecommendationsResponse.
        :type recommendations: List[Recommendation]
        """

        self._recommendations = recommendations

    @property
    def response_token(self):
        """Gets the response_token of this GenerateRecommendationsResponse.

        Output only. Response token is a string created for each `GenerateRecommendationsResponse`. This token doesn't expire, and is globally unique. This token must be used when reporting interactions for recommendations.

        :return: The response_token of this GenerateRecommendationsResponse.
        :rtype: str
        """
        return self._response_token

    @response_token.setter
    def response_token(self, response_token):
        """Sets the response_token of this GenerateRecommendationsResponse.

        Output only. Response token is a string created for each `GenerateRecommendationsResponse`. This token doesn't expire, and is globally unique. This token must be used when reporting interactions for recommendations.

        :param response_token: The response_token of this GenerateRecommendationsResponse.
        :type response_token: str
        """

        self._response_token = response_token
