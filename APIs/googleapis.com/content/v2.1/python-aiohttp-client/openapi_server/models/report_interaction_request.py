# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportInteractionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, interaction_type: str=None, response_token: str=None, subtype: str=None, type: str=None):
        """ReportInteractionRequest - a model defined in OpenAPI

        :param interaction_type: The interaction_type of this ReportInteractionRequest.
        :param response_token: The response_token of this ReportInteractionRequest.
        :param subtype: The subtype of this ReportInteractionRequest.
        :param type: The type of this ReportInteractionRequest.
        """
        self.openapi_types = {
            'interaction_type': str,
            'response_token': str,
            'subtype': str,
            'type': str
        }

        self.attribute_map = {
            'interaction_type': 'interactionType',
            'response_token': 'responseToken',
            'subtype': 'subtype',
            'type': 'type'
        }

        self._interaction_type = interaction_type
        self._response_token = response_token
        self._subtype = subtype
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportInteractionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportInteractionRequest of this ReportInteractionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interaction_type(self):
        """Gets the interaction_type of this ReportInteractionRequest.

        Required. Type of the interaction that is reported, for example INTERACTION_CLICK.

        :return: The interaction_type of this ReportInteractionRequest.
        :rtype: str
        """
        return self._interaction_type

    @interaction_type.setter
    def interaction_type(self, interaction_type):
        """Sets the interaction_type of this ReportInteractionRequest.

        Required. Type of the interaction that is reported, for example INTERACTION_CLICK.

        :param interaction_type: The interaction_type of this ReportInteractionRequest.
        :type interaction_type: str
        """
        allowed_values = ["INTERACTION_TYPE_UNSPECIFIED", "INTERACTION_DISMISS", "INTERACTION_CLICK"]  # noqa: E501
        if interaction_type not in allowed_values:
            raise ValueError(
                "Invalid value for `interaction_type` ({0}), must be one of {1}"
                .format(interaction_type, allowed_values)
            )

        self._interaction_type = interaction_type

    @property
    def response_token(self):
        """Gets the response_token of this ReportInteractionRequest.

        Required. Token of the response when recommendation was returned.

        :return: The response_token of this ReportInteractionRequest.
        :rtype: str
        """
        return self._response_token

    @response_token.setter
    def response_token(self, response_token):
        """Sets the response_token of this ReportInteractionRequest.

        Required. Token of the response when recommendation was returned.

        :param response_token: The response_token of this ReportInteractionRequest.
        :type response_token: str
        """

        self._response_token = response_token

    @property
    def subtype(self):
        """Gets the subtype of this ReportInteractionRequest.

        Optional. Subtype of the recommendations this interaction happened on. This field must be set only to the value that is returned by {@link `RecommendationsService.GenerateRecommendations`} call.

        :return: The subtype of this ReportInteractionRequest.
        :rtype: str
        """
        return self._subtype

    @subtype.setter
    def subtype(self, subtype):
        """Sets the subtype of this ReportInteractionRequest.

        Optional. Subtype of the recommendations this interaction happened on. This field must be set only to the value that is returned by {@link `RecommendationsService.GenerateRecommendations`} call.

        :param subtype: The subtype of this ReportInteractionRequest.
        :type subtype: str
        """

        self._subtype = subtype

    @property
    def type(self):
        """Gets the type of this ReportInteractionRequest.

        Required. Type of the recommendations on which this interaction happened. This field must be set only to the value that is returned by {@link `GenerateRecommendationsResponse`} call.

        :return: The type of this ReportInteractionRequest.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ReportInteractionRequest.

        Required. Type of the recommendations on which this interaction happened. This field must be set only to the value that is returned by {@link `GenerateRecommendationsResponse`} call.

        :param type: The type of this ReportInteractionRequest.
        :type type: str
        """

        self._type = type
