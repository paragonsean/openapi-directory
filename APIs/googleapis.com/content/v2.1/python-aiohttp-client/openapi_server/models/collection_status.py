# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.collection_status_destination_status import CollectionStatusDestinationStatus
from openapi_server.models.collection_status_item_level_issue import CollectionStatusItemLevelIssue
from openapi_server import util


class CollectionStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collection_level_issuses: List[CollectionStatusItemLevelIssue]=None, creation_date: str=None, destination_statuses: List[CollectionStatusDestinationStatus]=None, id: str=None, last_update_date: str=None):
        """CollectionStatus - a model defined in OpenAPI

        :param collection_level_issuses: The collection_level_issuses of this CollectionStatus.
        :param creation_date: The creation_date of this CollectionStatus.
        :param destination_statuses: The destination_statuses of this CollectionStatus.
        :param id: The id of this CollectionStatus.
        :param last_update_date: The last_update_date of this CollectionStatus.
        """
        self.openapi_types = {
            'collection_level_issuses': List[CollectionStatusItemLevelIssue],
            'creation_date': str,
            'destination_statuses': List[CollectionStatusDestinationStatus],
            'id': str,
            'last_update_date': str
        }

        self.attribute_map = {
            'collection_level_issuses': 'collectionLevelIssuses',
            'creation_date': 'creationDate',
            'destination_statuses': 'destinationStatuses',
            'id': 'id',
            'last_update_date': 'lastUpdateDate'
        }

        self._collection_level_issuses = collection_level_issuses
        self._creation_date = creation_date
        self._destination_statuses = destination_statuses
        self._id = id
        self._last_update_date = last_update_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CollectionStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CollectionStatus of this CollectionStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collection_level_issuses(self):
        """Gets the collection_level_issuses of this CollectionStatus.

        A list of all issues associated with the collection.

        :return: The collection_level_issuses of this CollectionStatus.
        :rtype: List[CollectionStatusItemLevelIssue]
        """
        return self._collection_level_issuses

    @collection_level_issuses.setter
    def collection_level_issuses(self, collection_level_issuses):
        """Sets the collection_level_issuses of this CollectionStatus.

        A list of all issues associated with the collection.

        :param collection_level_issuses: The collection_level_issuses of this CollectionStatus.
        :type collection_level_issuses: List[CollectionStatusItemLevelIssue]
        """

        self._collection_level_issuses = collection_level_issuses

    @property
    def creation_date(self):
        """Gets the creation_date of this CollectionStatus.

        Date on which the collection has been created in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"

        :return: The creation_date of this CollectionStatus.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this CollectionStatus.

        Date on which the collection has been created in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"

        :param creation_date: The creation_date of this CollectionStatus.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def destination_statuses(self):
        """Gets the destination_statuses of this CollectionStatus.

        The intended destinations for the collection.

        :return: The destination_statuses of this CollectionStatus.
        :rtype: List[CollectionStatusDestinationStatus]
        """
        return self._destination_statuses

    @destination_statuses.setter
    def destination_statuses(self, destination_statuses):
        """Sets the destination_statuses of this CollectionStatus.

        The intended destinations for the collection.

        :param destination_statuses: The destination_statuses of this CollectionStatus.
        :type destination_statuses: List[CollectionStatusDestinationStatus]
        """

        self._destination_statuses = destination_statuses

    @property
    def id(self):
        """Gets the id of this CollectionStatus.

        Required. The ID of the collection for which status is reported.

        :return: The id of this CollectionStatus.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CollectionStatus.

        Required. The ID of the collection for which status is reported.

        :param id: The id of this CollectionStatus.
        :type id: str
        """

        self._id = id

    @property
    def last_update_date(self):
        """Gets the last_update_date of this CollectionStatus.

        Date on which the collection has been last updated in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"

        :return: The last_update_date of this CollectionStatus.
        :rtype: str
        """
        return self._last_update_date

    @last_update_date.setter
    def last_update_date(self, last_update_date):
        """Sets the last_update_date of this CollectionStatus.

        Date on which the collection has been last updated in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"

        :param last_update_date: The last_update_date of this CollectionStatus.
        :type last_update_date: str
        """

        self._last_update_date = last_update_date
