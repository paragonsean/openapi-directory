# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price import Price
from openapi_server import util


class ProductSubscriptionCost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: Price=None, period: str=None, period_length: str=None):
        """ProductSubscriptionCost - a model defined in OpenAPI

        :param amount: The amount of this ProductSubscriptionCost.
        :param period: The period of this ProductSubscriptionCost.
        :param period_length: The period_length of this ProductSubscriptionCost.
        """
        self.openapi_types = {
            'amount': Price,
            'period': str,
            'period_length': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'period': 'period',
            'period_length': 'periodLength'
        }

        self._amount = amount
        self._period = period
        self._period_length = period_length

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductSubscriptionCost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductSubscriptionCost of this ProductSubscriptionCost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this ProductSubscriptionCost.


        :return: The amount of this ProductSubscriptionCost.
        :rtype: Price
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this ProductSubscriptionCost.


        :param amount: The amount of this ProductSubscriptionCost.
        :type amount: Price
        """

        self._amount = amount

    @property
    def period(self):
        """Gets the period of this ProductSubscriptionCost.

        The type of subscription period.

        :return: The period of this ProductSubscriptionCost.
        :rtype: str
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this ProductSubscriptionCost.

        The type of subscription period.

        :param period: The period of this ProductSubscriptionCost.
        :type period: str
        """

        self._period = period

    @property
    def period_length(self):
        """Gets the period_length of this ProductSubscriptionCost.

        The number of subscription periods the buyer has to pay.

        :return: The period_length of this ProductSubscriptionCost.
        :rtype: str
        """
        return self._period_length

    @period_length.setter
    def period_length(self, period_length):
        """Sets the period_length of this ProductSubscriptionCost.

        The number of subscription periods the buyer has to pay.

        :param period_length: The period_length of this ProductSubscriptionCost.
        :type period_length: str
        """

        self._period_length = period_length
