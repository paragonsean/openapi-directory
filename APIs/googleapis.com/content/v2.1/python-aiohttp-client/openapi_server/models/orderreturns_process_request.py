# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.orderreturns_refund_operation import OrderreturnsRefundOperation
from openapi_server.models.orderreturns_return_item import OrderreturnsReturnItem
from openapi_server import util


class OrderreturnsProcessRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, full_charge_return_shipping_cost: bool=None, operation_id: str=None, refund_shipping_fee: OrderreturnsRefundOperation=None, return_items: List[OrderreturnsReturnItem]=None):
        """OrderreturnsProcessRequest - a model defined in OpenAPI

        :param full_charge_return_shipping_cost: The full_charge_return_shipping_cost of this OrderreturnsProcessRequest.
        :param operation_id: The operation_id of this OrderreturnsProcessRequest.
        :param refund_shipping_fee: The refund_shipping_fee of this OrderreturnsProcessRequest.
        :param return_items: The return_items of this OrderreturnsProcessRequest.
        """
        self.openapi_types = {
            'full_charge_return_shipping_cost': bool,
            'operation_id': str,
            'refund_shipping_fee': OrderreturnsRefundOperation,
            'return_items': List[OrderreturnsReturnItem]
        }

        self.attribute_map = {
            'full_charge_return_shipping_cost': 'fullChargeReturnShippingCost',
            'operation_id': 'operationId',
            'refund_shipping_fee': 'refundShippingFee',
            'return_items': 'returnItems'
        }

        self._full_charge_return_shipping_cost = full_charge_return_shipping_cost
        self._operation_id = operation_id
        self._refund_shipping_fee = refund_shipping_fee
        self._return_items = return_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderreturnsProcessRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderreturnsProcessRequest of this OrderreturnsProcessRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def full_charge_return_shipping_cost(self):
        """Gets the full_charge_return_shipping_cost of this OrderreturnsProcessRequest.

        Option to charge the customer return shipping cost.

        :return: The full_charge_return_shipping_cost of this OrderreturnsProcessRequest.
        :rtype: bool
        """
        return self._full_charge_return_shipping_cost

    @full_charge_return_shipping_cost.setter
    def full_charge_return_shipping_cost(self, full_charge_return_shipping_cost):
        """Sets the full_charge_return_shipping_cost of this OrderreturnsProcessRequest.

        Option to charge the customer return shipping cost.

        :param full_charge_return_shipping_cost: The full_charge_return_shipping_cost of this OrderreturnsProcessRequest.
        :type full_charge_return_shipping_cost: bool
        """

        self._full_charge_return_shipping_cost = full_charge_return_shipping_cost

    @property
    def operation_id(self):
        """Gets the operation_id of this OrderreturnsProcessRequest.

        [required] The ID of the operation, unique across all operations for a given order return.

        :return: The operation_id of this OrderreturnsProcessRequest.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this OrderreturnsProcessRequest.

        [required] The ID of the operation, unique across all operations for a given order return.

        :param operation_id: The operation_id of this OrderreturnsProcessRequest.
        :type operation_id: str
        """

        self._operation_id = operation_id

    @property
    def refund_shipping_fee(self):
        """Gets the refund_shipping_fee of this OrderreturnsProcessRequest.


        :return: The refund_shipping_fee of this OrderreturnsProcessRequest.
        :rtype: OrderreturnsRefundOperation
        """
        return self._refund_shipping_fee

    @refund_shipping_fee.setter
    def refund_shipping_fee(self, refund_shipping_fee):
        """Sets the refund_shipping_fee of this OrderreturnsProcessRequest.


        :param refund_shipping_fee: The refund_shipping_fee of this OrderreturnsProcessRequest.
        :type refund_shipping_fee: OrderreturnsRefundOperation
        """

        self._refund_shipping_fee = refund_shipping_fee

    @property
    def return_items(self):
        """Gets the return_items of this OrderreturnsProcessRequest.

        The list of items to return.

        :return: The return_items of this OrderreturnsProcessRequest.
        :rtype: List[OrderreturnsReturnItem]
        """
        return self._return_items

    @return_items.setter
    def return_items(self, return_items):
        """Sets the return_items of this OrderreturnsProcessRequest.

        The list of items to return.

        :param return_items: The return_items of this OrderreturnsProcessRequest.
        :type return_items: List[OrderreturnsReturnItem]
        """

        self._return_items = return_items
