# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LiaOmnichannelExperience(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, lsf_type: str=None, pickup_types: List[str]=None):
        """LiaOmnichannelExperience - a model defined in OpenAPI

        :param country: The country of this LiaOmnichannelExperience.
        :param lsf_type: The lsf_type of this LiaOmnichannelExperience.
        :param pickup_types: The pickup_types of this LiaOmnichannelExperience.
        """
        self.openapi_types = {
            'country': str,
            'lsf_type': str,
            'pickup_types': List[str]
        }

        self.attribute_map = {
            'country': 'country',
            'lsf_type': 'lsfType',
            'pickup_types': 'pickupTypes'
        }

        self._country = country
        self._lsf_type = lsf_type
        self._pickup_types = pickup_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiaOmnichannelExperience':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiaOmnichannelExperience of this LiaOmnichannelExperience.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this LiaOmnichannelExperience.

        The CLDR country code (for example, \"US\").

        :return: The country of this LiaOmnichannelExperience.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this LiaOmnichannelExperience.

        The CLDR country code (for example, \"US\").

        :param country: The country of this LiaOmnichannelExperience.
        :type country: str
        """

        self._country = country

    @property
    def lsf_type(self):
        """Gets the lsf_type of this LiaOmnichannelExperience.

        The Local Store Front (LSF) type for this country. Acceptable values are: - \"`ghlsf`\" (Google-Hosted Local Store Front) - \"`mhlsfBasic`\" (Merchant-Hosted Local Store Front Basic) - \"`mhlsfFull`\" (Merchant-Hosted Local Store Front Full) More details about these types can be found here.

        :return: The lsf_type of this LiaOmnichannelExperience.
        :rtype: str
        """
        return self._lsf_type

    @lsf_type.setter
    def lsf_type(self, lsf_type):
        """Sets the lsf_type of this LiaOmnichannelExperience.

        The Local Store Front (LSF) type for this country. Acceptable values are: - \"`ghlsf`\" (Google-Hosted Local Store Front) - \"`mhlsfBasic`\" (Merchant-Hosted Local Store Front Basic) - \"`mhlsfFull`\" (Merchant-Hosted Local Store Front Full) More details about these types can be found here.

        :param lsf_type: The lsf_type of this LiaOmnichannelExperience.
        :type lsf_type: str
        """

        self._lsf_type = lsf_type

    @property
    def pickup_types(self):
        """Gets the pickup_types of this LiaOmnichannelExperience.

        The Pickup types for this country. Acceptable values are: - \"`pickupToday`\" - \"`pickupLater`\" 

        :return: The pickup_types of this LiaOmnichannelExperience.
        :rtype: List[str]
        """
        return self._pickup_types

    @pickup_types.setter
    def pickup_types(self, pickup_types):
        """Sets the pickup_types of this LiaOmnichannelExperience.

        The Pickup types for this country. Acceptable values are: - \"`pickupToday`\" - \"`pickupLater`\" 

        :param pickup_types: The pickup_types of this LiaOmnichannelExperience.
        :type pickup_types: List[str]
        """

        self._pickup_types = pickup_types
