# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.promotion_promotion_status_destination_status import PromotionPromotionStatusDestinationStatus
from openapi_server.models.promotion_promotion_status_promotion_issue import PromotionPromotionStatusPromotionIssue
from openapi_server import util


class PromotionPromotionStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_date: str=None, destination_statuses: List[PromotionPromotionStatusDestinationStatus]=None, last_update_date: str=None, promotion_issue: List[PromotionPromotionStatusPromotionIssue]=None):
        """PromotionPromotionStatus - a model defined in OpenAPI

        :param creation_date: The creation_date of this PromotionPromotionStatus.
        :param destination_statuses: The destination_statuses of this PromotionPromotionStatus.
        :param last_update_date: The last_update_date of this PromotionPromotionStatus.
        :param promotion_issue: The promotion_issue of this PromotionPromotionStatus.
        """
        self.openapi_types = {
            'creation_date': str,
            'destination_statuses': List[PromotionPromotionStatusDestinationStatus],
            'last_update_date': str,
            'promotion_issue': List[PromotionPromotionStatusPromotionIssue]
        }

        self.attribute_map = {
            'creation_date': 'creationDate',
            'destination_statuses': 'destinationStatuses',
            'last_update_date': 'lastUpdateDate',
            'promotion_issue': 'promotionIssue'
        }

        self._creation_date = creation_date
        self._destination_statuses = destination_statuses
        self._last_update_date = last_update_date
        self._promotion_issue = promotion_issue

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PromotionPromotionStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PromotionPromotionStatus of this PromotionPromotionStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_date(self):
        """Gets the creation_date of this PromotionPromotionStatus.

        Date on which the promotion has been created in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"

        :return: The creation_date of this PromotionPromotionStatus.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this PromotionPromotionStatus.

        Date on which the promotion has been created in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"

        :param creation_date: The creation_date of this PromotionPromotionStatus.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def destination_statuses(self):
        """Gets the destination_statuses of this PromotionPromotionStatus.

        The intended destinations for the promotion.

        :return: The destination_statuses of this PromotionPromotionStatus.
        :rtype: List[PromotionPromotionStatusDestinationStatus]
        """
        return self._destination_statuses

    @destination_statuses.setter
    def destination_statuses(self, destination_statuses):
        """Sets the destination_statuses of this PromotionPromotionStatus.

        The intended destinations for the promotion.

        :param destination_statuses: The destination_statuses of this PromotionPromotionStatus.
        :type destination_statuses: List[PromotionPromotionStatusDestinationStatus]
        """

        self._destination_statuses = destination_statuses

    @property
    def last_update_date(self):
        """Gets the last_update_date of this PromotionPromotionStatus.

        Date on which the promotion status has been last updated in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"

        :return: The last_update_date of this PromotionPromotionStatus.
        :rtype: str
        """
        return self._last_update_date

    @last_update_date.setter
    def last_update_date(self, last_update_date):
        """Sets the last_update_date of this PromotionPromotionStatus.

        Date on which the promotion status has been last updated in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"

        :param last_update_date: The last_update_date of this PromotionPromotionStatus.
        :type last_update_date: str
        """

        self._last_update_date = last_update_date

    @property
    def promotion_issue(self):
        """Gets the promotion_issue of this PromotionPromotionStatus.

        A list of issues associated with the promotion.

        :return: The promotion_issue of this PromotionPromotionStatus.
        :rtype: List[PromotionPromotionStatusPromotionIssue]
        """
        return self._promotion_issue

    @promotion_issue.setter
    def promotion_issue(self, promotion_issue):
        """Sets the promotion_issue of this PromotionPromotionStatus.

        A list of issues associated with the promotion.

        :param promotion_issue: The promotion_issue of this PromotionPromotionStatus.
        :type promotion_issue: List[PromotionPromotionStatusPromotionIssue]
        """

        self._promotion_issue = promotion_issue
