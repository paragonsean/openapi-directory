# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_date import ModelDate
from openapi_server import util


class Segments(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, brand: str=None, category_l1: str=None, category_l2: str=None, category_l3: str=None, category_l4: str=None, category_l5: str=None, currency_code: str=None, custom_label0: str=None, custom_label1: str=None, custom_label2: str=None, custom_label3: str=None, custom_label4: str=None, customer_country_code: str=None, _date: ModelDate=None, offer_id: str=None, product_type_l1: str=None, product_type_l2: str=None, product_type_l3: str=None, product_type_l4: str=None, product_type_l5: str=None, program: str=None, title: str=None, week: ModelDate=None):
        """Segments - a model defined in OpenAPI

        :param brand: The brand of this Segments.
        :param category_l1: The category_l1 of this Segments.
        :param category_l2: The category_l2 of this Segments.
        :param category_l3: The category_l3 of this Segments.
        :param category_l4: The category_l4 of this Segments.
        :param category_l5: The category_l5 of this Segments.
        :param currency_code: The currency_code of this Segments.
        :param custom_label0: The custom_label0 of this Segments.
        :param custom_label1: The custom_label1 of this Segments.
        :param custom_label2: The custom_label2 of this Segments.
        :param custom_label3: The custom_label3 of this Segments.
        :param custom_label4: The custom_label4 of this Segments.
        :param customer_country_code: The customer_country_code of this Segments.
        :param _date: The _date of this Segments.
        :param offer_id: The offer_id of this Segments.
        :param product_type_l1: The product_type_l1 of this Segments.
        :param product_type_l2: The product_type_l2 of this Segments.
        :param product_type_l3: The product_type_l3 of this Segments.
        :param product_type_l4: The product_type_l4 of this Segments.
        :param product_type_l5: The product_type_l5 of this Segments.
        :param program: The program of this Segments.
        :param title: The title of this Segments.
        :param week: The week of this Segments.
        """
        self.openapi_types = {
            'brand': str,
            'category_l1': str,
            'category_l2': str,
            'category_l3': str,
            'category_l4': str,
            'category_l5': str,
            'currency_code': str,
            'custom_label0': str,
            'custom_label1': str,
            'custom_label2': str,
            'custom_label3': str,
            'custom_label4': str,
            'customer_country_code': str,
            '_date': ModelDate,
            'offer_id': str,
            'product_type_l1': str,
            'product_type_l2': str,
            'product_type_l3': str,
            'product_type_l4': str,
            'product_type_l5': str,
            'program': str,
            'title': str,
            'week': ModelDate
        }

        self.attribute_map = {
            'brand': 'brand',
            'category_l1': 'categoryL1',
            'category_l2': 'categoryL2',
            'category_l3': 'categoryL3',
            'category_l4': 'categoryL4',
            'category_l5': 'categoryL5',
            'currency_code': 'currencyCode',
            'custom_label0': 'customLabel0',
            'custom_label1': 'customLabel1',
            'custom_label2': 'customLabel2',
            'custom_label3': 'customLabel3',
            'custom_label4': 'customLabel4',
            'customer_country_code': 'customerCountryCode',
            '_date': 'date',
            'offer_id': 'offerId',
            'product_type_l1': 'productTypeL1',
            'product_type_l2': 'productTypeL2',
            'product_type_l3': 'productTypeL3',
            'product_type_l4': 'productTypeL4',
            'product_type_l5': 'productTypeL5',
            'program': 'program',
            'title': 'title',
            'week': 'week'
        }

        self._brand = brand
        self._category_l1 = category_l1
        self._category_l2 = category_l2
        self._category_l3 = category_l3
        self._category_l4 = category_l4
        self._category_l5 = category_l5
        self._currency_code = currency_code
        self._custom_label0 = custom_label0
        self._custom_label1 = custom_label1
        self._custom_label2 = custom_label2
        self._custom_label3 = custom_label3
        self._custom_label4 = custom_label4
        self._customer_country_code = customer_country_code
        self.__date = _date
        self._offer_id = offer_id
        self._product_type_l1 = product_type_l1
        self._product_type_l2 = product_type_l2
        self._product_type_l3 = product_type_l3
        self._product_type_l4 = product_type_l4
        self._product_type_l5 = product_type_l5
        self._program = program
        self._title = title
        self._week = week

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Segments':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Segments of this Segments.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def brand(self):
        """Gets the brand of this Segments.

        Brand of the product.

        :return: The brand of this Segments.
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this Segments.

        Brand of the product.

        :param brand: The brand of this Segments.
        :type brand: str
        """

        self._brand = brand

    @property
    def category_l1(self):
        """Gets the category_l1 of this Segments.

        [Product category (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.

        :return: The category_l1 of this Segments.
        :rtype: str
        """
        return self._category_l1

    @category_l1.setter
    def category_l1(self, category_l1):
        """Sets the category_l1 of this Segments.

        [Product category (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.

        :param category_l1: The category_l1 of this Segments.
        :type category_l1: str
        """

        self._category_l1 = category_l1

    @property
    def category_l2(self):
        """Gets the category_l2 of this Segments.

        [Product category (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.

        :return: The category_l2 of this Segments.
        :rtype: str
        """
        return self._category_l2

    @category_l2.setter
    def category_l2(self, category_l2):
        """Sets the category_l2 of this Segments.

        [Product category (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.

        :param category_l2: The category_l2 of this Segments.
        :type category_l2: str
        """

        self._category_l2 = category_l2

    @property
    def category_l3(self):
        """Gets the category_l3 of this Segments.

        [Product category (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.

        :return: The category_l3 of this Segments.
        :rtype: str
        """
        return self._category_l3

    @category_l3.setter
    def category_l3(self, category_l3):
        """Sets the category_l3 of this Segments.

        [Product category (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.

        :param category_l3: The category_l3 of this Segments.
        :type category_l3: str
        """

        self._category_l3 = category_l3

    @property
    def category_l4(self):
        """Gets the category_l4 of this Segments.

        [Product category (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.

        :return: The category_l4 of this Segments.
        :rtype: str
        """
        return self._category_l4

    @category_l4.setter
    def category_l4(self, category_l4):
        """Sets the category_l4 of this Segments.

        [Product category (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.

        :param category_l4: The category_l4 of this Segments.
        :type category_l4: str
        """

        self._category_l4 = category_l4

    @property
    def category_l5(self):
        """Gets the category_l5 of this Segments.

        [Product category (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.

        :return: The category_l5 of this Segments.
        :rtype: str
        """
        return self._category_l5

    @category_l5.setter
    def category_l5(self, category_l5):
        """Sets the category_l5 of this Segments.

        [Product category (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.

        :param category_l5: The category_l5 of this Segments.
        :type category_l5: str
        """

        self._category_l5 = category_l5

    @property
    def currency_code(self):
        """Gets the currency_code of this Segments.

        Currency in which price metrics are represented, for example, if you select `ordered_item_sales_micros`, the returned value will be represented by this currency.

        :return: The currency_code of this Segments.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this Segments.

        Currency in which price metrics are represented, for example, if you select `ordered_item_sales_micros`, the returned value will be represented by this currency.

        :param currency_code: The currency_code of this Segments.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def custom_label0(self):
        """Gets the custom_label0 of this Segments.

        Custom label 0 for custom grouping of products.

        :return: The custom_label0 of this Segments.
        :rtype: str
        """
        return self._custom_label0

    @custom_label0.setter
    def custom_label0(self, custom_label0):
        """Sets the custom_label0 of this Segments.

        Custom label 0 for custom grouping of products.

        :param custom_label0: The custom_label0 of this Segments.
        :type custom_label0: str
        """

        self._custom_label0 = custom_label0

    @property
    def custom_label1(self):
        """Gets the custom_label1 of this Segments.

        Custom label 1 for custom grouping of products.

        :return: The custom_label1 of this Segments.
        :rtype: str
        """
        return self._custom_label1

    @custom_label1.setter
    def custom_label1(self, custom_label1):
        """Sets the custom_label1 of this Segments.

        Custom label 1 for custom grouping of products.

        :param custom_label1: The custom_label1 of this Segments.
        :type custom_label1: str
        """

        self._custom_label1 = custom_label1

    @property
    def custom_label2(self):
        """Gets the custom_label2 of this Segments.

        Custom label 2 for custom grouping of products.

        :return: The custom_label2 of this Segments.
        :rtype: str
        """
        return self._custom_label2

    @custom_label2.setter
    def custom_label2(self, custom_label2):
        """Sets the custom_label2 of this Segments.

        Custom label 2 for custom grouping of products.

        :param custom_label2: The custom_label2 of this Segments.
        :type custom_label2: str
        """

        self._custom_label2 = custom_label2

    @property
    def custom_label3(self):
        """Gets the custom_label3 of this Segments.

        Custom label 3 for custom grouping of products.

        :return: The custom_label3 of this Segments.
        :rtype: str
        """
        return self._custom_label3

    @custom_label3.setter
    def custom_label3(self, custom_label3):
        """Sets the custom_label3 of this Segments.

        Custom label 3 for custom grouping of products.

        :param custom_label3: The custom_label3 of this Segments.
        :type custom_label3: str
        """

        self._custom_label3 = custom_label3

    @property
    def custom_label4(self):
        """Gets the custom_label4 of this Segments.

        Custom label 4 for custom grouping of products.

        :return: The custom_label4 of this Segments.
        :rtype: str
        """
        return self._custom_label4

    @custom_label4.setter
    def custom_label4(self, custom_label4):
        """Sets the custom_label4 of this Segments.

        Custom label 4 for custom grouping of products.

        :param custom_label4: The custom_label4 of this Segments.
        :type custom_label4: str
        """

        self._custom_label4 = custom_label4

    @property
    def customer_country_code(self):
        """Gets the customer_country_code of this Segments.

        Code of the country where the customer is located at the time of the event. Represented in the ISO 3166 format. If the customer country cannot be determined, a special 'ZZ' code is returned.

        :return: The customer_country_code of this Segments.
        :rtype: str
        """
        return self._customer_country_code

    @customer_country_code.setter
    def customer_country_code(self, customer_country_code):
        """Sets the customer_country_code of this Segments.

        Code of the country where the customer is located at the time of the event. Represented in the ISO 3166 format. If the customer country cannot be determined, a special 'ZZ' code is returned.

        :param customer_country_code: The customer_country_code of this Segments.
        :type customer_country_code: str
        """

        self._customer_country_code = customer_country_code

    @property
    def _date(self):
        """Gets the _date of this Segments.


        :return: The _date of this Segments.
        :rtype: ModelDate
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this Segments.


        :param _date: The _date of this Segments.
        :type _date: ModelDate
        """

        self.__date = _date

    @property
    def offer_id(self):
        """Gets the offer_id of this Segments.

        Merchant-provided id of the product.

        :return: The offer_id of this Segments.
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this Segments.

        Merchant-provided id of the product.

        :param offer_id: The offer_id of this Segments.
        :type offer_id: str
        """

        self._offer_id = offer_id

    @property
    def product_type_l1(self):
        """Gets the product_type_l1 of this Segments.

        [Product type (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.

        :return: The product_type_l1 of this Segments.
        :rtype: str
        """
        return self._product_type_l1

    @product_type_l1.setter
    def product_type_l1(self, product_type_l1):
        """Sets the product_type_l1 of this Segments.

        [Product type (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.

        :param product_type_l1: The product_type_l1 of this Segments.
        :type product_type_l1: str
        """

        self._product_type_l1 = product_type_l1

    @property
    def product_type_l2(self):
        """Gets the product_type_l2 of this Segments.

        [Product type (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.

        :return: The product_type_l2 of this Segments.
        :rtype: str
        """
        return self._product_type_l2

    @product_type_l2.setter
    def product_type_l2(self, product_type_l2):
        """Sets the product_type_l2 of this Segments.

        [Product type (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.

        :param product_type_l2: The product_type_l2 of this Segments.
        :type product_type_l2: str
        """

        self._product_type_l2 = product_type_l2

    @property
    def product_type_l3(self):
        """Gets the product_type_l3 of this Segments.

        [Product type (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.

        :return: The product_type_l3 of this Segments.
        :rtype: str
        """
        return self._product_type_l3

    @product_type_l3.setter
    def product_type_l3(self, product_type_l3):
        """Sets the product_type_l3 of this Segments.

        [Product type (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.

        :param product_type_l3: The product_type_l3 of this Segments.
        :type product_type_l3: str
        """

        self._product_type_l3 = product_type_l3

    @property
    def product_type_l4(self):
        """Gets the product_type_l4 of this Segments.

        [Product type (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.

        :return: The product_type_l4 of this Segments.
        :rtype: str
        """
        return self._product_type_l4

    @product_type_l4.setter
    def product_type_l4(self, product_type_l4):
        """Sets the product_type_l4 of this Segments.

        [Product type (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.

        :param product_type_l4: The product_type_l4 of this Segments.
        :type product_type_l4: str
        """

        self._product_type_l4 = product_type_l4

    @property
    def product_type_l5(self):
        """Gets the product_type_l5 of this Segments.

        [Product type (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.

        :return: The product_type_l5 of this Segments.
        :rtype: str
        """
        return self._product_type_l5

    @product_type_l5.setter
    def product_type_l5(self, product_type_l5):
        """Sets the product_type_l5 of this Segments.

        [Product type (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.

        :param product_type_l5: The product_type_l5 of this Segments.
        :type product_type_l5: str
        """

        self._product_type_l5 = product_type_l5

    @property
    def program(self):
        """Gets the program of this Segments.

        Program to which metrics apply, for example, Free Product Listing.

        :return: The program of this Segments.
        :rtype: str
        """
        return self._program

    @program.setter
    def program(self, program):
        """Sets the program of this Segments.

        Program to which metrics apply, for example, Free Product Listing.

        :param program: The program of this Segments.
        :type program: str
        """
        allowed_values = ["PROGRAM_UNSPECIFIED", "SHOPPING_ADS", "FREE_PRODUCT_LISTING", "FREE_LOCAL_PRODUCT_LISTING", "BUY_ON_GOOGLE_LISTING"]  # noqa: E501
        if program not in allowed_values:
            raise ValueError(
                "Invalid value for `program` ({0}), must be one of {1}"
                .format(program, allowed_values)
            )

        self._program = program

    @property
    def title(self):
        """Gets the title of this Segments.

        Title of the product.

        :return: The title of this Segments.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Segments.

        Title of the product.

        :param title: The title of this Segments.
        :type title: str
        """

        self._title = title

    @property
    def week(self):
        """Gets the week of this Segments.


        :return: The week of this Segments.
        :rtype: ModelDate
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this Segments.


        :param week: The week of this Segments.
        :type week: ModelDate
        """

        self._week = week
