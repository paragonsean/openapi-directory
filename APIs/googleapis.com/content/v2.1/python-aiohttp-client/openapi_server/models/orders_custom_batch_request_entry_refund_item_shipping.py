# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price import Price
from openapi_server import util


class OrdersCustomBatchRequestEntryRefundItemShipping(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: Price=None, full_refund: bool=None):
        """OrdersCustomBatchRequestEntryRefundItemShipping - a model defined in OpenAPI

        :param amount: The amount of this OrdersCustomBatchRequestEntryRefundItemShipping.
        :param full_refund: The full_refund of this OrdersCustomBatchRequestEntryRefundItemShipping.
        """
        self.openapi_types = {
            'amount': Price,
            'full_refund': bool
        }

        self.attribute_map = {
            'amount': 'amount',
            'full_refund': 'fullRefund'
        }

        self._amount = amount
        self._full_refund = full_refund

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrdersCustomBatchRequestEntryRefundItemShipping':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrdersCustomBatchRequestEntryRefundItemShipping of this OrdersCustomBatchRequestEntryRefundItemShipping.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this OrdersCustomBatchRequestEntryRefundItemShipping.


        :return: The amount of this OrdersCustomBatchRequestEntryRefundItemShipping.
        :rtype: Price
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this OrdersCustomBatchRequestEntryRefundItemShipping.


        :param amount: The amount of this OrdersCustomBatchRequestEntryRefundItemShipping.
        :type amount: Price
        """

        self._amount = amount

    @property
    def full_refund(self):
        """Gets the full_refund of this OrdersCustomBatchRequestEntryRefundItemShipping.

        If set to true, all shipping costs for the order will be refunded. If this is true, amount shouldn't be provided and will be ignored. If set to false, submit the amount of the partial shipping refund, excluding the shipping tax. The shipping tax is calculated and handled on Google's side.

        :return: The full_refund of this OrdersCustomBatchRequestEntryRefundItemShipping.
        :rtype: bool
        """
        return self._full_refund

    @full_refund.setter
    def full_refund(self, full_refund):
        """Sets the full_refund of this OrdersCustomBatchRequestEntryRefundItemShipping.

        If set to true, all shipping costs for the order will be refunded. If this is true, amount shouldn't be provided and will be ignored. If set to false, submit the amount of the partial shipping refund, excluding the shipping tax. The shipping tax is calculated and handled on Google's side.

        :param full_refund: The full_refund of this OrdersCustomBatchRequestEntryRefundItemShipping.
        :type full_refund: bool
        """

        self._full_refund = full_refund
