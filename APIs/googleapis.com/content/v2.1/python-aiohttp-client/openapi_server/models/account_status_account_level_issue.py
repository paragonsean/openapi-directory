# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountStatusAccountLevelIssue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, destination: str=None, detail: str=None, documentation: str=None, id: str=None, severity: str=None, title: str=None):
        """AccountStatusAccountLevelIssue - a model defined in OpenAPI

        :param country: The country of this AccountStatusAccountLevelIssue.
        :param destination: The destination of this AccountStatusAccountLevelIssue.
        :param detail: The detail of this AccountStatusAccountLevelIssue.
        :param documentation: The documentation of this AccountStatusAccountLevelIssue.
        :param id: The id of this AccountStatusAccountLevelIssue.
        :param severity: The severity of this AccountStatusAccountLevelIssue.
        :param title: The title of this AccountStatusAccountLevelIssue.
        """
        self.openapi_types = {
            'country': str,
            'destination': str,
            'detail': str,
            'documentation': str,
            'id': str,
            'severity': str,
            'title': str
        }

        self.attribute_map = {
            'country': 'country',
            'destination': 'destination',
            'detail': 'detail',
            'documentation': 'documentation',
            'id': 'id',
            'severity': 'severity',
            'title': 'title'
        }

        self._country = country
        self._destination = destination
        self._detail = detail
        self._documentation = documentation
        self._id = id
        self._severity = severity
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountStatusAccountLevelIssue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountStatusAccountLevelIssue of this AccountStatusAccountLevelIssue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this AccountStatusAccountLevelIssue.

        Country for which this issue is reported.

        :return: The country of this AccountStatusAccountLevelIssue.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this AccountStatusAccountLevelIssue.

        Country for which this issue is reported.

        :param country: The country of this AccountStatusAccountLevelIssue.
        :type country: str
        """

        self._country = country

    @property
    def destination(self):
        """Gets the destination of this AccountStatusAccountLevelIssue.

        The destination the issue applies to. If this field is empty then the issue applies to all available destinations.

        :return: The destination of this AccountStatusAccountLevelIssue.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this AccountStatusAccountLevelIssue.

        The destination the issue applies to. If this field is empty then the issue applies to all available destinations.

        :param destination: The destination of this AccountStatusAccountLevelIssue.
        :type destination: str
        """

        self._destination = destination

    @property
    def detail(self):
        """Gets the detail of this AccountStatusAccountLevelIssue.

        Additional details about the issue.

        :return: The detail of this AccountStatusAccountLevelIssue.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this AccountStatusAccountLevelIssue.

        Additional details about the issue.

        :param detail: The detail of this AccountStatusAccountLevelIssue.
        :type detail: str
        """

        self._detail = detail

    @property
    def documentation(self):
        """Gets the documentation of this AccountStatusAccountLevelIssue.

        The URL of a web page to help resolving this issue.

        :return: The documentation of this AccountStatusAccountLevelIssue.
        :rtype: str
        """
        return self._documentation

    @documentation.setter
    def documentation(self, documentation):
        """Sets the documentation of this AccountStatusAccountLevelIssue.

        The URL of a web page to help resolving this issue.

        :param documentation: The documentation of this AccountStatusAccountLevelIssue.
        :type documentation: str
        """

        self._documentation = documentation

    @property
    def id(self):
        """Gets the id of this AccountStatusAccountLevelIssue.

        Issue identifier.

        :return: The id of this AccountStatusAccountLevelIssue.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AccountStatusAccountLevelIssue.

        Issue identifier.

        :param id: The id of this AccountStatusAccountLevelIssue.
        :type id: str
        """

        self._id = id

    @property
    def severity(self):
        """Gets the severity of this AccountStatusAccountLevelIssue.

        Severity of the issue. Acceptable values are: - \"`critical`\" - \"`error`\" - \"`suggestion`\" 

        :return: The severity of this AccountStatusAccountLevelIssue.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this AccountStatusAccountLevelIssue.

        Severity of the issue. Acceptable values are: - \"`critical`\" - \"`error`\" - \"`suggestion`\" 

        :param severity: The severity of this AccountStatusAccountLevelIssue.
        :type severity: str
        """

        self._severity = severity

    @property
    def title(self):
        """Gets the title of this AccountStatusAccountLevelIssue.

        Short description of the issue.

        :return: The title of this AccountStatusAccountLevelIssue.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this AccountStatusAccountLevelIssue.

        Short description of the issue.

        :param title: The title of this AccountStatusAccountLevelIssue.
        :type title: str
        """

        self._title = title
