# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.errors import Errors
from openapi_server.models.gmb_accounts import GmbAccounts
from openapi_server.models.lia_omnichannel_experience import LiaOmnichannelExperience
from openapi_server.models.lia_settings import LiaSettings
from openapi_server.models.pos_data_providers import PosDataProviders
from openapi_server import util


class LiasettingsCustomBatchResponseEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_id: int=None, errors: Errors=None, gmb_accounts: GmbAccounts=None, kind: str=None, lia_settings: LiaSettings=None, omnichannel_experience: LiaOmnichannelExperience=None, pos_data_providers: List[PosDataProviders]=None):
        """LiasettingsCustomBatchResponseEntry - a model defined in OpenAPI

        :param batch_id: The batch_id of this LiasettingsCustomBatchResponseEntry.
        :param errors: The errors of this LiasettingsCustomBatchResponseEntry.
        :param gmb_accounts: The gmb_accounts of this LiasettingsCustomBatchResponseEntry.
        :param kind: The kind of this LiasettingsCustomBatchResponseEntry.
        :param lia_settings: The lia_settings of this LiasettingsCustomBatchResponseEntry.
        :param omnichannel_experience: The omnichannel_experience of this LiasettingsCustomBatchResponseEntry.
        :param pos_data_providers: The pos_data_providers of this LiasettingsCustomBatchResponseEntry.
        """
        self.openapi_types = {
            'batch_id': int,
            'errors': Errors,
            'gmb_accounts': GmbAccounts,
            'kind': str,
            'lia_settings': LiaSettings,
            'omnichannel_experience': LiaOmnichannelExperience,
            'pos_data_providers': List[PosDataProviders]
        }

        self.attribute_map = {
            'batch_id': 'batchId',
            'errors': 'errors',
            'gmb_accounts': 'gmbAccounts',
            'kind': 'kind',
            'lia_settings': 'liaSettings',
            'omnichannel_experience': 'omnichannelExperience',
            'pos_data_providers': 'posDataProviders'
        }

        self._batch_id = batch_id
        self._errors = errors
        self._gmb_accounts = gmb_accounts
        self._kind = kind
        self._lia_settings = lia_settings
        self._omnichannel_experience = omnichannel_experience
        self._pos_data_providers = pos_data_providers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiasettingsCustomBatchResponseEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiasettingsCustomBatchResponseEntry of this LiasettingsCustomBatchResponseEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_id(self):
        """Gets the batch_id of this LiasettingsCustomBatchResponseEntry.

        The ID of the request entry to which this entry responds.

        :return: The batch_id of this LiasettingsCustomBatchResponseEntry.
        :rtype: int
        """
        return self._batch_id

    @batch_id.setter
    def batch_id(self, batch_id):
        """Sets the batch_id of this LiasettingsCustomBatchResponseEntry.

        The ID of the request entry to which this entry responds.

        :param batch_id: The batch_id of this LiasettingsCustomBatchResponseEntry.
        :type batch_id: int
        """

        self._batch_id = batch_id

    @property
    def errors(self):
        """Gets the errors of this LiasettingsCustomBatchResponseEntry.


        :return: The errors of this LiasettingsCustomBatchResponseEntry.
        :rtype: Errors
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this LiasettingsCustomBatchResponseEntry.


        :param errors: The errors of this LiasettingsCustomBatchResponseEntry.
        :type errors: Errors
        """

        self._errors = errors

    @property
    def gmb_accounts(self):
        """Gets the gmb_accounts of this LiasettingsCustomBatchResponseEntry.


        :return: The gmb_accounts of this LiasettingsCustomBatchResponseEntry.
        :rtype: GmbAccounts
        """
        return self._gmb_accounts

    @gmb_accounts.setter
    def gmb_accounts(self, gmb_accounts):
        """Sets the gmb_accounts of this LiasettingsCustomBatchResponseEntry.


        :param gmb_accounts: The gmb_accounts of this LiasettingsCustomBatchResponseEntry.
        :type gmb_accounts: GmbAccounts
        """

        self._gmb_accounts = gmb_accounts

    @property
    def kind(self):
        """Gets the kind of this LiasettingsCustomBatchResponseEntry.

        Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsCustomBatchResponseEntry`\"

        :return: The kind of this LiasettingsCustomBatchResponseEntry.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this LiasettingsCustomBatchResponseEntry.

        Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsCustomBatchResponseEntry`\"

        :param kind: The kind of this LiasettingsCustomBatchResponseEntry.
        :type kind: str
        """

        self._kind = kind

    @property
    def lia_settings(self):
        """Gets the lia_settings of this LiasettingsCustomBatchResponseEntry.


        :return: The lia_settings of this LiasettingsCustomBatchResponseEntry.
        :rtype: LiaSettings
        """
        return self._lia_settings

    @lia_settings.setter
    def lia_settings(self, lia_settings):
        """Sets the lia_settings of this LiasettingsCustomBatchResponseEntry.


        :param lia_settings: The lia_settings of this LiasettingsCustomBatchResponseEntry.
        :type lia_settings: LiaSettings
        """

        self._lia_settings = lia_settings

    @property
    def omnichannel_experience(self):
        """Gets the omnichannel_experience of this LiasettingsCustomBatchResponseEntry.


        :return: The omnichannel_experience of this LiasettingsCustomBatchResponseEntry.
        :rtype: LiaOmnichannelExperience
        """
        return self._omnichannel_experience

    @omnichannel_experience.setter
    def omnichannel_experience(self, omnichannel_experience):
        """Sets the omnichannel_experience of this LiasettingsCustomBatchResponseEntry.


        :param omnichannel_experience: The omnichannel_experience of this LiasettingsCustomBatchResponseEntry.
        :type omnichannel_experience: LiaOmnichannelExperience
        """

        self._omnichannel_experience = omnichannel_experience

    @property
    def pos_data_providers(self):
        """Gets the pos_data_providers of this LiasettingsCustomBatchResponseEntry.

        The list of POS data providers.

        :return: The pos_data_providers of this LiasettingsCustomBatchResponseEntry.
        :rtype: List[PosDataProviders]
        """
        return self._pos_data_providers

    @pos_data_providers.setter
    def pos_data_providers(self, pos_data_providers):
        """Sets the pos_data_providers of this LiasettingsCustomBatchResponseEntry.

        The list of POS data providers.

        :param pos_data_providers: The pos_data_providers of this LiasettingsCustomBatchResponseEntry.
        :type pos_data_providers: List[PosDataProviders]
        """

        self._pos_data_providers = pos_data_providers
