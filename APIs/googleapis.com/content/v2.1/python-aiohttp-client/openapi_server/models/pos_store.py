# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PosStore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gcid_category: List[str]=None, kind: str=None, matching_status: str=None, matching_status_hint: str=None, phone_number: str=None, place_id: str=None, store_address: str=None, store_code: str=None, store_name: str=None, website_url: str=None):
        """PosStore - a model defined in OpenAPI

        :param gcid_category: The gcid_category of this PosStore.
        :param kind: The kind of this PosStore.
        :param matching_status: The matching_status of this PosStore.
        :param matching_status_hint: The matching_status_hint of this PosStore.
        :param phone_number: The phone_number of this PosStore.
        :param place_id: The place_id of this PosStore.
        :param store_address: The store_address of this PosStore.
        :param store_code: The store_code of this PosStore.
        :param store_name: The store_name of this PosStore.
        :param website_url: The website_url of this PosStore.
        """
        self.openapi_types = {
            'gcid_category': List[str],
            'kind': str,
            'matching_status': str,
            'matching_status_hint': str,
            'phone_number': str,
            'place_id': str,
            'store_address': str,
            'store_code': str,
            'store_name': str,
            'website_url': str
        }

        self.attribute_map = {
            'gcid_category': 'gcidCategory',
            'kind': 'kind',
            'matching_status': 'matchingStatus',
            'matching_status_hint': 'matchingStatusHint',
            'phone_number': 'phoneNumber',
            'place_id': 'placeId',
            'store_address': 'storeAddress',
            'store_code': 'storeCode',
            'store_name': 'storeName',
            'website_url': 'websiteUrl'
        }

        self._gcid_category = gcid_category
        self._kind = kind
        self._matching_status = matching_status
        self._matching_status_hint = matching_status_hint
        self._phone_number = phone_number
        self._place_id = place_id
        self._store_address = store_address
        self._store_code = store_code
        self._store_name = store_name
        self._website_url = website_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PosStore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PosStore of this PosStore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gcid_category(self):
        """Gets the gcid_category of this PosStore.

        The business type of the store.

        :return: The gcid_category of this PosStore.
        :rtype: List[str]
        """
        return self._gcid_category

    @gcid_category.setter
    def gcid_category(self, gcid_category):
        """Sets the gcid_category of this PosStore.

        The business type of the store.

        :param gcid_category: The gcid_category of this PosStore.
        :type gcid_category: List[str]
        """

        self._gcid_category = gcid_category

    @property
    def kind(self):
        """Gets the kind of this PosStore.

        Identifies what kind of resource this is. Value: the fixed string \"`content#posStore`\"

        :return: The kind of this PosStore.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PosStore.

        Identifies what kind of resource this is. Value: the fixed string \"`content#posStore`\"

        :param kind: The kind of this PosStore.
        :type kind: str
        """

        self._kind = kind

    @property
    def matching_status(self):
        """Gets the matching_status of this PosStore.

        Output only. The matching status of POS store and Google Business Profile store. Possible values are: - \"`matched`\": The POS store is successfully matched with the Google Business Profile store. - \"`failed`\": The POS store is not matched with the Google Business Profile store. See matching_status_hint for further details. Note that there is up to 48 hours propagation delay for changes in Merchant Center (e.g. creation of new account, accounts linking) and Google Business Profile (e.g. store address update) which may affect the matching status. In such cases, after a delay call [pos.list](https://developers.google.com/shopping-content/reference/rest/v2.1/pos/list) to retrieve the updated matching status. 

        :return: The matching_status of this PosStore.
        :rtype: str
        """
        return self._matching_status

    @matching_status.setter
    def matching_status(self, matching_status):
        """Sets the matching_status of this PosStore.

        Output only. The matching status of POS store and Google Business Profile store. Possible values are: - \"`matched`\": The POS store is successfully matched with the Google Business Profile store. - \"`failed`\": The POS store is not matched with the Google Business Profile store. See matching_status_hint for further details. Note that there is up to 48 hours propagation delay for changes in Merchant Center (e.g. creation of new account, accounts linking) and Google Business Profile (e.g. store address update) which may affect the matching status. In such cases, after a delay call [pos.list](https://developers.google.com/shopping-content/reference/rest/v2.1/pos/list) to retrieve the updated matching status. 

        :param matching_status: The matching_status of this PosStore.
        :type matching_status: str
        """

        self._matching_status = matching_status

    @property
    def matching_status_hint(self):
        """Gets the matching_status_hint of this PosStore.

        Output only. The hint of why the matching has failed. This is only set when matching_status=failed. Possible values are: - \"`linked-store-not-found`\": There aren't any Google Business Profile stores available for matching. Connect your Merchant Center account with the Google Business Profile account. Or add a new Google Business Profile store corresponding to the POS store. - \"`store-match-not-found`\": The provided POS store couldn't be matched to any of the connected Google Business Profile stores. Merchant Center account is connected correctly and stores are available on Google Business Profile, but POS store location address does not match with Google Business Profile stores' addresses. Update POS store address or Google Business Profile store address to match correctly. - \"`store-match-unverified`\": The provided POS store couldn't be matched to any of the connected Google Business Profile stores, as the matched Google Business Profile store is unverified. Go through the Google Business Profile verification process to match correctly. 

        :return: The matching_status_hint of this PosStore.
        :rtype: str
        """
        return self._matching_status_hint

    @matching_status_hint.setter
    def matching_status_hint(self, matching_status_hint):
        """Sets the matching_status_hint of this PosStore.

        Output only. The hint of why the matching has failed. This is only set when matching_status=failed. Possible values are: - \"`linked-store-not-found`\": There aren't any Google Business Profile stores available for matching. Connect your Merchant Center account with the Google Business Profile account. Or add a new Google Business Profile store corresponding to the POS store. - \"`store-match-not-found`\": The provided POS store couldn't be matched to any of the connected Google Business Profile stores. Merchant Center account is connected correctly and stores are available on Google Business Profile, but POS store location address does not match with Google Business Profile stores' addresses. Update POS store address or Google Business Profile store address to match correctly. - \"`store-match-unverified`\": The provided POS store couldn't be matched to any of the connected Google Business Profile stores, as the matched Google Business Profile store is unverified. Go through the Google Business Profile verification process to match correctly. 

        :param matching_status_hint: The matching_status_hint of this PosStore.
        :type matching_status_hint: str
        """

        self._matching_status_hint = matching_status_hint

    @property
    def phone_number(self):
        """Gets the phone_number of this PosStore.

        The store phone number.

        :return: The phone_number of this PosStore.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this PosStore.

        The store phone number.

        :param phone_number: The phone_number of this PosStore.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def place_id(self):
        """Gets the place_id of this PosStore.

        The Google Place Id of the store location.

        :return: The place_id of this PosStore.
        :rtype: str
        """
        return self._place_id

    @place_id.setter
    def place_id(self, place_id):
        """Sets the place_id of this PosStore.

        The Google Place Id of the store location.

        :param place_id: The place_id of this PosStore.
        :type place_id: str
        """

        self._place_id = place_id

    @property
    def store_address(self):
        """Gets the store_address of this PosStore.

        Required. The street address of the store.

        :return: The store_address of this PosStore.
        :rtype: str
        """
        return self._store_address

    @store_address.setter
    def store_address(self, store_address):
        """Sets the store_address of this PosStore.

        Required. The street address of the store.

        :param store_address: The store_address of this PosStore.
        :type store_address: str
        """

        self._store_address = store_address

    @property
    def store_code(self):
        """Gets the store_code of this PosStore.

        Required. A store identifier that is unique for the given merchant.

        :return: The store_code of this PosStore.
        :rtype: str
        """
        return self._store_code

    @store_code.setter
    def store_code(self, store_code):
        """Sets the store_code of this PosStore.

        Required. A store identifier that is unique for the given merchant.

        :param store_code: The store_code of this PosStore.
        :type store_code: str
        """

        self._store_code = store_code

    @property
    def store_name(self):
        """Gets the store_name of this PosStore.

        The merchant or store name.

        :return: The store_name of this PosStore.
        :rtype: str
        """
        return self._store_name

    @store_name.setter
    def store_name(self, store_name):
        """Sets the store_name of this PosStore.

        The merchant or store name.

        :param store_name: The store_name of this PosStore.
        :type store_name: str
        """

        self._store_name = store_name

    @property
    def website_url(self):
        """Gets the website_url of this PosStore.

        The website url for the store or merchant.

        :return: The website_url of this PosStore.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """Sets the website_url of this PosStore.

        The website url for the store or merchant.

        :param website_url: The website_url of this PosStore.
        :type website_url: str
        """

        self._website_url = website_url
