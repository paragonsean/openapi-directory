# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action import Action
from openapi_server import util


class ActionReason(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: Action=None, detail: str=None, message: str=None):
        """ActionReason - a model defined in OpenAPI

        :param action: The action of this ActionReason.
        :param detail: The detail of this ActionReason.
        :param message: The message of this ActionReason.
        """
        self.openapi_types = {
            'action': Action,
            'detail': str,
            'message': str
        }

        self.attribute_map = {
            'action': 'action',
            'detail': 'detail',
            'message': 'message'
        }

        self._action = action
        self._detail = detail
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionReason':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionReason of this ActionReason.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this ActionReason.


        :return: The action of this ActionReason.
        :rtype: Action
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this ActionReason.


        :param action: The action of this ActionReason.
        :type action: Action
        """

        self._action = action

    @property
    def detail(self):
        """Gets the detail of this ActionReason.

        Detailed explanation of the reason. Should be displayed as a hint if present.

        :return: The detail of this ActionReason.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this ActionReason.

        Detailed explanation of the reason. Should be displayed as a hint if present.

        :param detail: The detail of this ActionReason.
        :type detail: str
        """

        self._detail = detail

    @property
    def message(self):
        """Gets the message of this ActionReason.

        Messages summarizing the reason, why the action is not available. For example: \"Review requested on Jan 03. Review requests can take a few days to complete.\"

        :return: The message of this ActionReason.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ActionReason.

        Messages summarizing the reason, why the action is not available. For example: \"Review requested on Jan 03. Review requests can take a few days to complete.\"

        :param message: The message of this ActionReason.
        :type message: str
        """

        self._message = message
