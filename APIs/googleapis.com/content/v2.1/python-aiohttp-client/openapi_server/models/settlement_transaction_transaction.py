# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SettlementTransactionTransaction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, post_date: str=None, type: str=None):
        """SettlementTransactionTransaction - a model defined in OpenAPI

        :param post_date: The post_date of this SettlementTransactionTransaction.
        :param type: The type of this SettlementTransactionTransaction.
        """
        self.openapi_types = {
            'post_date': str,
            'type': str
        }

        self.attribute_map = {
            'post_date': 'postDate',
            'type': 'type'
        }

        self._post_date = post_date
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SettlementTransactionTransaction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SettlementTransactionTransaction of this SettlementTransactionTransaction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def post_date(self):
        """Gets the post_date of this SettlementTransactionTransaction.

        The time on which the event occurred in ISO 8601 format.

        :return: The post_date of this SettlementTransactionTransaction.
        :rtype: str
        """
        return self._post_date

    @post_date.setter
    def post_date(self, post_date):
        """Sets the post_date of this SettlementTransactionTransaction.

        The time on which the event occurred in ISO 8601 format.

        :param post_date: The post_date of this SettlementTransactionTransaction.
        :type post_date: str
        """

        self._post_date = post_date

    @property
    def type(self):
        """Gets the type of this SettlementTransactionTransaction.

        The type of the transaction that occurred. Acceptable values are: - \"`order`\" - \"`reversal`\" - \"`orderRefund`\" - \"`reversalRefund`\" - \"`issueRelatedRefundAndReplacement`\" - \"`returnLabelShippingFeeTransaction`\" - \"`reversalIssueRelatedRefundAndReplacement`\" - \"`reversalReturnLabelShippingFeeTransaction`\" - \"`lumpSumCorrectionTransaction`\" 

        :return: The type of this SettlementTransactionTransaction.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SettlementTransactionTransaction.

        The type of the transaction that occurred. Acceptable values are: - \"`order`\" - \"`reversal`\" - \"`orderRefund`\" - \"`reversalRefund`\" - \"`issueRelatedRefundAndReplacement`\" - \"`returnLabelShippingFeeTransaction`\" - \"`reversalIssueRelatedRefundAndReplacement`\" - \"`reversalReturnLabelShippingFeeTransaction`\" - \"`lumpSumCorrectionTransaction`\" 

        :param type: The type of this SettlementTransactionTransaction.
        :type type: str
        """

        self._type = type
