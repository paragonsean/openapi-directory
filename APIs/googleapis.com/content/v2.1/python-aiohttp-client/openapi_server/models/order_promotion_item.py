# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderPromotionItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, line_item_id: str=None, offer_id: str=None, product_id: str=None, quantity: int=None):
        """OrderPromotionItem - a model defined in OpenAPI

        :param line_item_id: The line_item_id of this OrderPromotionItem.
        :param offer_id: The offer_id of this OrderPromotionItem.
        :param product_id: The product_id of this OrderPromotionItem.
        :param quantity: The quantity of this OrderPromotionItem.
        """
        self.openapi_types = {
            'line_item_id': str,
            'offer_id': str,
            'product_id': str,
            'quantity': int
        }

        self.attribute_map = {
            'line_item_id': 'lineItemId',
            'offer_id': 'offerId',
            'product_id': 'productId',
            'quantity': 'quantity'
        }

        self._line_item_id = line_item_id
        self._offer_id = offer_id
        self._product_id = product_id
        self._quantity = quantity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderPromotionItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderPromotionItem of this OrderPromotionItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def line_item_id(self):
        """Gets the line_item_id of this OrderPromotionItem.

        The line item ID of a product. Do not provide for `orders.createtestorder`.

        :return: The line_item_id of this OrderPromotionItem.
        :rtype: str
        """
        return self._line_item_id

    @line_item_id.setter
    def line_item_id(self, line_item_id):
        """Sets the line_item_id of this OrderPromotionItem.

        The line item ID of a product. Do not provide for `orders.createtestorder`.

        :param line_item_id: The line_item_id of this OrderPromotionItem.
        :type line_item_id: str
        """

        self._line_item_id = line_item_id

    @property
    def offer_id(self):
        """Gets the offer_id of this OrderPromotionItem.

        Required. Offer ID of a product. Only for `orders.createtestorder`.

        :return: The offer_id of this OrderPromotionItem.
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this OrderPromotionItem.

        Required. Offer ID of a product. Only for `orders.createtestorder`.

        :param offer_id: The offer_id of this OrderPromotionItem.
        :type offer_id: str
        """

        self._offer_id = offer_id

    @property
    def product_id(self):
        """Gets the product_id of this OrderPromotionItem.

        `orders.createtestorder`.

        :return: The product_id of this OrderPromotionItem.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this OrderPromotionItem.

        `orders.createtestorder`.

        :param product_id: The product_id of this OrderPromotionItem.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def quantity(self):
        """Gets the quantity of this OrderPromotionItem.

        The quantity of the associated product. Do not provide for `orders.createtestorder`.

        :return: The quantity of this OrderPromotionItem.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this OrderPromotionItem.

        The quantity of the associated product. Do not provide for `orders.createtestorder`.

        :param quantity: The quantity of this OrderPromotionItem.
        :type quantity: int
        """

        self._quantity = quantity
