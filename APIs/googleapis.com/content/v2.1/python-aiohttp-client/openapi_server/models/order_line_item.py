# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_cancellation import OrderCancellation
from openapi_server.models.order_line_item_adjustment import OrderLineItemAdjustment
from openapi_server.models.order_line_item_product import OrderLineItemProduct
from openapi_server.models.order_line_item_return_info import OrderLineItemReturnInfo
from openapi_server.models.order_line_item_shipping_details import OrderLineItemShippingDetails
from openapi_server.models.order_merchant_provided_annotation import OrderMerchantProvidedAnnotation
from openapi_server.models.order_return import OrderReturn
from openapi_server.models.price import Price
from openapi_server import util


class OrderLineItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adjustments: List[OrderLineItemAdjustment]=None, annotations: List[OrderMerchantProvidedAnnotation]=None, cancellations: List[OrderCancellation]=None, id: str=None, price: Price=None, product: OrderLineItemProduct=None, quantity_canceled: int=None, quantity_delivered: int=None, quantity_ordered: int=None, quantity_pending: int=None, quantity_ready_for_pickup: int=None, quantity_returned: int=None, quantity_shipped: int=None, quantity_undeliverable: int=None, return_info: OrderLineItemReturnInfo=None, returns: List[OrderReturn]=None, shipping_details: OrderLineItemShippingDetails=None, tax: Price=None):
        """OrderLineItem - a model defined in OpenAPI

        :param adjustments: The adjustments of this OrderLineItem.
        :param annotations: The annotations of this OrderLineItem.
        :param cancellations: The cancellations of this OrderLineItem.
        :param id: The id of this OrderLineItem.
        :param price: The price of this OrderLineItem.
        :param product: The product of this OrderLineItem.
        :param quantity_canceled: The quantity_canceled of this OrderLineItem.
        :param quantity_delivered: The quantity_delivered of this OrderLineItem.
        :param quantity_ordered: The quantity_ordered of this OrderLineItem.
        :param quantity_pending: The quantity_pending of this OrderLineItem.
        :param quantity_ready_for_pickup: The quantity_ready_for_pickup of this OrderLineItem.
        :param quantity_returned: The quantity_returned of this OrderLineItem.
        :param quantity_shipped: The quantity_shipped of this OrderLineItem.
        :param quantity_undeliverable: The quantity_undeliverable of this OrderLineItem.
        :param return_info: The return_info of this OrderLineItem.
        :param returns: The returns of this OrderLineItem.
        :param shipping_details: The shipping_details of this OrderLineItem.
        :param tax: The tax of this OrderLineItem.
        """
        self.openapi_types = {
            'adjustments': List[OrderLineItemAdjustment],
            'annotations': List[OrderMerchantProvidedAnnotation],
            'cancellations': List[OrderCancellation],
            'id': str,
            'price': Price,
            'product': OrderLineItemProduct,
            'quantity_canceled': int,
            'quantity_delivered': int,
            'quantity_ordered': int,
            'quantity_pending': int,
            'quantity_ready_for_pickup': int,
            'quantity_returned': int,
            'quantity_shipped': int,
            'quantity_undeliverable': int,
            'return_info': OrderLineItemReturnInfo,
            'returns': List[OrderReturn],
            'shipping_details': OrderLineItemShippingDetails,
            'tax': Price
        }

        self.attribute_map = {
            'adjustments': 'adjustments',
            'annotations': 'annotations',
            'cancellations': 'cancellations',
            'id': 'id',
            'price': 'price',
            'product': 'product',
            'quantity_canceled': 'quantityCanceled',
            'quantity_delivered': 'quantityDelivered',
            'quantity_ordered': 'quantityOrdered',
            'quantity_pending': 'quantityPending',
            'quantity_ready_for_pickup': 'quantityReadyForPickup',
            'quantity_returned': 'quantityReturned',
            'quantity_shipped': 'quantityShipped',
            'quantity_undeliverable': 'quantityUndeliverable',
            'return_info': 'returnInfo',
            'returns': 'returns',
            'shipping_details': 'shippingDetails',
            'tax': 'tax'
        }

        self._adjustments = adjustments
        self._annotations = annotations
        self._cancellations = cancellations
        self._id = id
        self._price = price
        self._product = product
        self._quantity_canceled = quantity_canceled
        self._quantity_delivered = quantity_delivered
        self._quantity_ordered = quantity_ordered
        self._quantity_pending = quantity_pending
        self._quantity_ready_for_pickup = quantity_ready_for_pickup
        self._quantity_returned = quantity_returned
        self._quantity_shipped = quantity_shipped
        self._quantity_undeliverable = quantity_undeliverable
        self._return_info = return_info
        self._returns = returns
        self._shipping_details = shipping_details
        self._tax = tax

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderLineItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderLineItem of this OrderLineItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adjustments(self):
        """Gets the adjustments of this OrderLineItem.

        Price and tax adjustments applied on the line item.

        :return: The adjustments of this OrderLineItem.
        :rtype: List[OrderLineItemAdjustment]
        """
        return self._adjustments

    @adjustments.setter
    def adjustments(self, adjustments):
        """Sets the adjustments of this OrderLineItem.

        Price and tax adjustments applied on the line item.

        :param adjustments: The adjustments of this OrderLineItem.
        :type adjustments: List[OrderLineItemAdjustment]
        """

        self._adjustments = adjustments

    @property
    def annotations(self):
        """Gets the annotations of this OrderLineItem.

        Annotations that are attached to the line item.

        :return: The annotations of this OrderLineItem.
        :rtype: List[OrderMerchantProvidedAnnotation]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this OrderLineItem.

        Annotations that are attached to the line item.

        :param annotations: The annotations of this OrderLineItem.
        :type annotations: List[OrderMerchantProvidedAnnotation]
        """

        self._annotations = annotations

    @property
    def cancellations(self):
        """Gets the cancellations of this OrderLineItem.

        Cancellations of the line item.

        :return: The cancellations of this OrderLineItem.
        :rtype: List[OrderCancellation]
        """
        return self._cancellations

    @cancellations.setter
    def cancellations(self, cancellations):
        """Sets the cancellations of this OrderLineItem.

        Cancellations of the line item.

        :param cancellations: The cancellations of this OrderLineItem.
        :type cancellations: List[OrderCancellation]
        """

        self._cancellations = cancellations

    @property
    def id(self):
        """Gets the id of this OrderLineItem.

        The ID of the line item.

        :return: The id of this OrderLineItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderLineItem.

        The ID of the line item.

        :param id: The id of this OrderLineItem.
        :type id: str
        """

        self._id = id

    @property
    def price(self):
        """Gets the price of this OrderLineItem.


        :return: The price of this OrderLineItem.
        :rtype: Price
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this OrderLineItem.


        :param price: The price of this OrderLineItem.
        :type price: Price
        """

        self._price = price

    @property
    def product(self):
        """Gets the product of this OrderLineItem.


        :return: The product of this OrderLineItem.
        :rtype: OrderLineItemProduct
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this OrderLineItem.


        :param product: The product of this OrderLineItem.
        :type product: OrderLineItemProduct
        """

        self._product = product

    @property
    def quantity_canceled(self):
        """Gets the quantity_canceled of this OrderLineItem.

        Number of items canceled.

        :return: The quantity_canceled of this OrderLineItem.
        :rtype: int
        """
        return self._quantity_canceled

    @quantity_canceled.setter
    def quantity_canceled(self, quantity_canceled):
        """Sets the quantity_canceled of this OrderLineItem.

        Number of items canceled.

        :param quantity_canceled: The quantity_canceled of this OrderLineItem.
        :type quantity_canceled: int
        """

        self._quantity_canceled = quantity_canceled

    @property
    def quantity_delivered(self):
        """Gets the quantity_delivered of this OrderLineItem.

        Number of items delivered.

        :return: The quantity_delivered of this OrderLineItem.
        :rtype: int
        """
        return self._quantity_delivered

    @quantity_delivered.setter
    def quantity_delivered(self, quantity_delivered):
        """Sets the quantity_delivered of this OrderLineItem.

        Number of items delivered.

        :param quantity_delivered: The quantity_delivered of this OrderLineItem.
        :type quantity_delivered: int
        """

        self._quantity_delivered = quantity_delivered

    @property
    def quantity_ordered(self):
        """Gets the quantity_ordered of this OrderLineItem.

        Number of items ordered.

        :return: The quantity_ordered of this OrderLineItem.
        :rtype: int
        """
        return self._quantity_ordered

    @quantity_ordered.setter
    def quantity_ordered(self, quantity_ordered):
        """Sets the quantity_ordered of this OrderLineItem.

        Number of items ordered.

        :param quantity_ordered: The quantity_ordered of this OrderLineItem.
        :type quantity_ordered: int
        """

        self._quantity_ordered = quantity_ordered

    @property
    def quantity_pending(self):
        """Gets the quantity_pending of this OrderLineItem.

        Number of items pending.

        :return: The quantity_pending of this OrderLineItem.
        :rtype: int
        """
        return self._quantity_pending

    @quantity_pending.setter
    def quantity_pending(self, quantity_pending):
        """Sets the quantity_pending of this OrderLineItem.

        Number of items pending.

        :param quantity_pending: The quantity_pending of this OrderLineItem.
        :type quantity_pending: int
        """

        self._quantity_pending = quantity_pending

    @property
    def quantity_ready_for_pickup(self):
        """Gets the quantity_ready_for_pickup of this OrderLineItem.

        Number of items ready for pickup.

        :return: The quantity_ready_for_pickup of this OrderLineItem.
        :rtype: int
        """
        return self._quantity_ready_for_pickup

    @quantity_ready_for_pickup.setter
    def quantity_ready_for_pickup(self, quantity_ready_for_pickup):
        """Sets the quantity_ready_for_pickup of this OrderLineItem.

        Number of items ready for pickup.

        :param quantity_ready_for_pickup: The quantity_ready_for_pickup of this OrderLineItem.
        :type quantity_ready_for_pickup: int
        """

        self._quantity_ready_for_pickup = quantity_ready_for_pickup

    @property
    def quantity_returned(self):
        """Gets the quantity_returned of this OrderLineItem.

        Number of items returned.

        :return: The quantity_returned of this OrderLineItem.
        :rtype: int
        """
        return self._quantity_returned

    @quantity_returned.setter
    def quantity_returned(self, quantity_returned):
        """Sets the quantity_returned of this OrderLineItem.

        Number of items returned.

        :param quantity_returned: The quantity_returned of this OrderLineItem.
        :type quantity_returned: int
        """

        self._quantity_returned = quantity_returned

    @property
    def quantity_shipped(self):
        """Gets the quantity_shipped of this OrderLineItem.

        Number of items shipped.

        :return: The quantity_shipped of this OrderLineItem.
        :rtype: int
        """
        return self._quantity_shipped

    @quantity_shipped.setter
    def quantity_shipped(self, quantity_shipped):
        """Sets the quantity_shipped of this OrderLineItem.

        Number of items shipped.

        :param quantity_shipped: The quantity_shipped of this OrderLineItem.
        :type quantity_shipped: int
        """

        self._quantity_shipped = quantity_shipped

    @property
    def quantity_undeliverable(self):
        """Gets the quantity_undeliverable of this OrderLineItem.

        Number of items undeliverable.

        :return: The quantity_undeliverable of this OrderLineItem.
        :rtype: int
        """
        return self._quantity_undeliverable

    @quantity_undeliverable.setter
    def quantity_undeliverable(self, quantity_undeliverable):
        """Sets the quantity_undeliverable of this OrderLineItem.

        Number of items undeliverable.

        :param quantity_undeliverable: The quantity_undeliverable of this OrderLineItem.
        :type quantity_undeliverable: int
        """

        self._quantity_undeliverable = quantity_undeliverable

    @property
    def return_info(self):
        """Gets the return_info of this OrderLineItem.


        :return: The return_info of this OrderLineItem.
        :rtype: OrderLineItemReturnInfo
        """
        return self._return_info

    @return_info.setter
    def return_info(self, return_info):
        """Sets the return_info of this OrderLineItem.


        :param return_info: The return_info of this OrderLineItem.
        :type return_info: OrderLineItemReturnInfo
        """

        self._return_info = return_info

    @property
    def returns(self):
        """Gets the returns of this OrderLineItem.

        Returns of the line item.

        :return: The returns of this OrderLineItem.
        :rtype: List[OrderReturn]
        """
        return self._returns

    @returns.setter
    def returns(self, returns):
        """Sets the returns of this OrderLineItem.

        Returns of the line item.

        :param returns: The returns of this OrderLineItem.
        :type returns: List[OrderReturn]
        """

        self._returns = returns

    @property
    def shipping_details(self):
        """Gets the shipping_details of this OrderLineItem.


        :return: The shipping_details of this OrderLineItem.
        :rtype: OrderLineItemShippingDetails
        """
        return self._shipping_details

    @shipping_details.setter
    def shipping_details(self, shipping_details):
        """Sets the shipping_details of this OrderLineItem.


        :param shipping_details: The shipping_details of this OrderLineItem.
        :type shipping_details: OrderLineItemShippingDetails
        """

        self._shipping_details = shipping_details

    @property
    def tax(self):
        """Gets the tax of this OrderLineItem.


        :return: The tax of this OrderLineItem.
        :rtype: Price
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this OrderLineItem.


        :param tax: The tax of this OrderLineItem.
        :type tax: Price
        """

        self._tax = tax
