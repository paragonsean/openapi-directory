# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_shipment_line_item_shipment import OrderShipmentLineItemShipment
from openapi_server.models.orders_custom_batch_request_entry_ship_line_items_shipment_info import OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo
from openapi_server import util


class OrdersShipLineItemsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, line_items: List[OrderShipmentLineItemShipment]=None, operation_id: str=None, shipment_group_id: str=None, shipment_infos: List[OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo]=None):
        """OrdersShipLineItemsRequest - a model defined in OpenAPI

        :param line_items: The line_items of this OrdersShipLineItemsRequest.
        :param operation_id: The operation_id of this OrdersShipLineItemsRequest.
        :param shipment_group_id: The shipment_group_id of this OrdersShipLineItemsRequest.
        :param shipment_infos: The shipment_infos of this OrdersShipLineItemsRequest.
        """
        self.openapi_types = {
            'line_items': List[OrderShipmentLineItemShipment],
            'operation_id': str,
            'shipment_group_id': str,
            'shipment_infos': List[OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo]
        }

        self.attribute_map = {
            'line_items': 'lineItems',
            'operation_id': 'operationId',
            'shipment_group_id': 'shipmentGroupId',
            'shipment_infos': 'shipmentInfos'
        }

        self._line_items = line_items
        self._operation_id = operation_id
        self._shipment_group_id = shipment_group_id
        self._shipment_infos = shipment_infos

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrdersShipLineItemsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrdersShipLineItemsRequest of this OrdersShipLineItemsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def line_items(self):
        """Gets the line_items of this OrdersShipLineItemsRequest.

        Line items to ship.

        :return: The line_items of this OrdersShipLineItemsRequest.
        :rtype: List[OrderShipmentLineItemShipment]
        """
        return self._line_items

    @line_items.setter
    def line_items(self, line_items):
        """Sets the line_items of this OrdersShipLineItemsRequest.

        Line items to ship.

        :param line_items: The line_items of this OrdersShipLineItemsRequest.
        :type line_items: List[OrderShipmentLineItemShipment]
        """

        self._line_items = line_items

    @property
    def operation_id(self):
        """Gets the operation_id of this OrdersShipLineItemsRequest.

        The ID of the operation. Unique across all operations for a given order.

        :return: The operation_id of this OrdersShipLineItemsRequest.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this OrdersShipLineItemsRequest.

        The ID of the operation. Unique across all operations for a given order.

        :param operation_id: The operation_id of this OrdersShipLineItemsRequest.
        :type operation_id: str
        """

        self._operation_id = operation_id

    @property
    def shipment_group_id(self):
        """Gets the shipment_group_id of this OrdersShipLineItemsRequest.

        ID of the shipment group. Required for orders that use the orderinvoices service.

        :return: The shipment_group_id of this OrdersShipLineItemsRequest.
        :rtype: str
        """
        return self._shipment_group_id

    @shipment_group_id.setter
    def shipment_group_id(self, shipment_group_id):
        """Sets the shipment_group_id of this OrdersShipLineItemsRequest.

        ID of the shipment group. Required for orders that use the orderinvoices service.

        :param shipment_group_id: The shipment_group_id of this OrdersShipLineItemsRequest.
        :type shipment_group_id: str
        """

        self._shipment_group_id = shipment_group_id

    @property
    def shipment_infos(self):
        """Gets the shipment_infos of this OrdersShipLineItemsRequest.

        Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs).

        :return: The shipment_infos of this OrdersShipLineItemsRequest.
        :rtype: List[OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo]
        """
        return self._shipment_infos

    @shipment_infos.setter
    def shipment_infos(self, shipment_infos):
        """Sets the shipment_infos of this OrdersShipLineItemsRequest.

        Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs).

        :param shipment_infos: The shipment_infos of this OrdersShipLineItemsRequest.
        :type shipment_infos: List[OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo]
        """

        self._shipment_infos = shipment_infos
