# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.test_order_address import TestOrderAddress
from openapi_server.models.test_order_pickup_details_pickup_person import TestOrderPickupDetailsPickupPerson
from openapi_server import util


class TestOrderPickupDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_code: str=None, pickup_location_address: TestOrderAddress=None, pickup_location_type: str=None, pickup_persons: List[TestOrderPickupDetailsPickupPerson]=None):
        """TestOrderPickupDetails - a model defined in OpenAPI

        :param location_code: The location_code of this TestOrderPickupDetails.
        :param pickup_location_address: The pickup_location_address of this TestOrderPickupDetails.
        :param pickup_location_type: The pickup_location_type of this TestOrderPickupDetails.
        :param pickup_persons: The pickup_persons of this TestOrderPickupDetails.
        """
        self.openapi_types = {
            'location_code': str,
            'pickup_location_address': TestOrderAddress,
            'pickup_location_type': str,
            'pickup_persons': List[TestOrderPickupDetailsPickupPerson]
        }

        self.attribute_map = {
            'location_code': 'locationCode',
            'pickup_location_address': 'pickupLocationAddress',
            'pickup_location_type': 'pickupLocationType',
            'pickup_persons': 'pickupPersons'
        }

        self._location_code = location_code
        self._pickup_location_address = pickup_location_address
        self._pickup_location_type = pickup_location_type
        self._pickup_persons = pickup_persons

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestOrderPickupDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestOrderPickupDetails of this TestOrderPickupDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_code(self):
        """Gets the location_code of this TestOrderPickupDetails.

        Required. Code of the location defined by provider or merchant.

        :return: The location_code of this TestOrderPickupDetails.
        :rtype: str
        """
        return self._location_code

    @location_code.setter
    def location_code(self, location_code):
        """Sets the location_code of this TestOrderPickupDetails.

        Required. Code of the location defined by provider or merchant.

        :param location_code: The location_code of this TestOrderPickupDetails.
        :type location_code: str
        """

        self._location_code = location_code

    @property
    def pickup_location_address(self):
        """Gets the pickup_location_address of this TestOrderPickupDetails.


        :return: The pickup_location_address of this TestOrderPickupDetails.
        :rtype: TestOrderAddress
        """
        return self._pickup_location_address

    @pickup_location_address.setter
    def pickup_location_address(self, pickup_location_address):
        """Sets the pickup_location_address of this TestOrderPickupDetails.


        :param pickup_location_address: The pickup_location_address of this TestOrderPickupDetails.
        :type pickup_location_address: TestOrderAddress
        """

        self._pickup_location_address = pickup_location_address

    @property
    def pickup_location_type(self):
        """Gets the pickup_location_type of this TestOrderPickupDetails.

        Pickup location type. Acceptable values are: - \"`locker`\" - \"`store`\" - \"`curbside`\" 

        :return: The pickup_location_type of this TestOrderPickupDetails.
        :rtype: str
        """
        return self._pickup_location_type

    @pickup_location_type.setter
    def pickup_location_type(self, pickup_location_type):
        """Sets the pickup_location_type of this TestOrderPickupDetails.

        Pickup location type. Acceptable values are: - \"`locker`\" - \"`store`\" - \"`curbside`\" 

        :param pickup_location_type: The pickup_location_type of this TestOrderPickupDetails.
        :type pickup_location_type: str
        """

        self._pickup_location_type = pickup_location_type

    @property
    def pickup_persons(self):
        """Gets the pickup_persons of this TestOrderPickupDetails.

        Required. all pickup persons set by users.

        :return: The pickup_persons of this TestOrderPickupDetails.
        :rtype: List[TestOrderPickupDetailsPickupPerson]
        """
        return self._pickup_persons

    @pickup_persons.setter
    def pickup_persons(self, pickup_persons):
        """Sets the pickup_persons of this TestOrderPickupDetails.

        Required. all pickup persons set by users.

        :param pickup_persons: The pickup_persons of this TestOrderPickupDetails.
        :type pickup_persons: List[TestOrderPickupDetailsPickupPerson]
        """

        self._pickup_persons = pickup_persons
