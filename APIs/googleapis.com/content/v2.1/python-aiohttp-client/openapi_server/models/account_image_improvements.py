# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_image_improvements_settings import AccountImageImprovementsSettings
from openapi_server import util


class AccountImageImprovements(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_image_improvements_settings: AccountImageImprovementsSettings=None, effective_allow_automatic_image_improvements: bool=None):
        """AccountImageImprovements - a model defined in OpenAPI

        :param account_image_improvements_settings: The account_image_improvements_settings of this AccountImageImprovements.
        :param effective_allow_automatic_image_improvements: The effective_allow_automatic_image_improvements of this AccountImageImprovements.
        """
        self.openapi_types = {
            'account_image_improvements_settings': AccountImageImprovementsSettings,
            'effective_allow_automatic_image_improvements': bool
        }

        self.attribute_map = {
            'account_image_improvements_settings': 'accountImageImprovementsSettings',
            'effective_allow_automatic_image_improvements': 'effectiveAllowAutomaticImageImprovements'
        }

        self._account_image_improvements_settings = account_image_improvements_settings
        self._effective_allow_automatic_image_improvements = effective_allow_automatic_image_improvements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountImageImprovements':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountImageImprovements of this AccountImageImprovements.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_image_improvements_settings(self):
        """Gets the account_image_improvements_settings of this AccountImageImprovements.


        :return: The account_image_improvements_settings of this AccountImageImprovements.
        :rtype: AccountImageImprovementsSettings
        """
        return self._account_image_improvements_settings

    @account_image_improvements_settings.setter
    def account_image_improvements_settings(self, account_image_improvements_settings):
        """Sets the account_image_improvements_settings of this AccountImageImprovements.


        :param account_image_improvements_settings: The account_image_improvements_settings of this AccountImageImprovements.
        :type account_image_improvements_settings: AccountImageImprovementsSettings
        """

        self._account_image_improvements_settings = account_image_improvements_settings

    @property
    def effective_allow_automatic_image_improvements(self):
        """Gets the effective_allow_automatic_image_improvements of this AccountImageImprovements.

        Output only. The effective value of allow_automatic_image_improvements. If account_image_improvements_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.

        :return: The effective_allow_automatic_image_improvements of this AccountImageImprovements.
        :rtype: bool
        """
        return self._effective_allow_automatic_image_improvements

    @effective_allow_automatic_image_improvements.setter
    def effective_allow_automatic_image_improvements(self, effective_allow_automatic_image_improvements):
        """Sets the effective_allow_automatic_image_improvements of this AccountImageImprovements.

        Output only. The effective value of allow_automatic_image_improvements. If account_image_improvements_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.

        :param effective_allow_automatic_image_improvements: The effective_allow_automatic_image_improvements of this AccountImageImprovements.
        :type effective_allow_automatic_image_improvements: bool
        """

        self._effective_allow_automatic_image_improvements = effective_allow_automatic_image_improvements
