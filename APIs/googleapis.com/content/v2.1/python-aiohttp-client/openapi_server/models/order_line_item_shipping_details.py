# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_line_item_shipping_details_method import OrderLineItemShippingDetailsMethod
from openapi_server import util


class OrderLineItemShippingDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deliver_by_date: str=None, method: OrderLineItemShippingDetailsMethod=None, pickup_promise_in_minutes: int=None, ship_by_date: str=None, type: str=None):
        """OrderLineItemShippingDetails - a model defined in OpenAPI

        :param deliver_by_date: The deliver_by_date of this OrderLineItemShippingDetails.
        :param method: The method of this OrderLineItemShippingDetails.
        :param pickup_promise_in_minutes: The pickup_promise_in_minutes of this OrderLineItemShippingDetails.
        :param ship_by_date: The ship_by_date of this OrderLineItemShippingDetails.
        :param type: The type of this OrderLineItemShippingDetails.
        """
        self.openapi_types = {
            'deliver_by_date': str,
            'method': OrderLineItemShippingDetailsMethod,
            'pickup_promise_in_minutes': int,
            'ship_by_date': str,
            'type': str
        }

        self.attribute_map = {
            'deliver_by_date': 'deliverByDate',
            'method': 'method',
            'pickup_promise_in_minutes': 'pickupPromiseInMinutes',
            'ship_by_date': 'shipByDate',
            'type': 'type'
        }

        self._deliver_by_date = deliver_by_date
        self._method = method
        self._pickup_promise_in_minutes = pickup_promise_in_minutes
        self._ship_by_date = ship_by_date
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderLineItemShippingDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderLineItemShippingDetails of this OrderLineItemShippingDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deliver_by_date(self):
        """Gets the deliver_by_date of this OrderLineItemShippingDetails.

        Required. The delivery by date, in ISO 8601 format.

        :return: The deliver_by_date of this OrderLineItemShippingDetails.
        :rtype: str
        """
        return self._deliver_by_date

    @deliver_by_date.setter
    def deliver_by_date(self, deliver_by_date):
        """Sets the deliver_by_date of this OrderLineItemShippingDetails.

        Required. The delivery by date, in ISO 8601 format.

        :param deliver_by_date: The deliver_by_date of this OrderLineItemShippingDetails.
        :type deliver_by_date: str
        """

        self._deliver_by_date = deliver_by_date

    @property
    def method(self):
        """Gets the method of this OrderLineItemShippingDetails.


        :return: The method of this OrderLineItemShippingDetails.
        :rtype: OrderLineItemShippingDetailsMethod
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this OrderLineItemShippingDetails.


        :param method: The method of this OrderLineItemShippingDetails.
        :type method: OrderLineItemShippingDetailsMethod
        """

        self._method = method

    @property
    def pickup_promise_in_minutes(self):
        """Gets the pickup_promise_in_minutes of this OrderLineItemShippingDetails.

        The promised time in minutes in which the order will be ready for pickup. This only applies to buy-online-pickup-in-store same-day order.

        :return: The pickup_promise_in_minutes of this OrderLineItemShippingDetails.
        :rtype: int
        """
        return self._pickup_promise_in_minutes

    @pickup_promise_in_minutes.setter
    def pickup_promise_in_minutes(self, pickup_promise_in_minutes):
        """Sets the pickup_promise_in_minutes of this OrderLineItemShippingDetails.

        The promised time in minutes in which the order will be ready for pickup. This only applies to buy-online-pickup-in-store same-day order.

        :param pickup_promise_in_minutes: The pickup_promise_in_minutes of this OrderLineItemShippingDetails.
        :type pickup_promise_in_minutes: int
        """

        self._pickup_promise_in_minutes = pickup_promise_in_minutes

    @property
    def ship_by_date(self):
        """Gets the ship_by_date of this OrderLineItemShippingDetails.

        Required. The ship by date, in ISO 8601 format.

        :return: The ship_by_date of this OrderLineItemShippingDetails.
        :rtype: str
        """
        return self._ship_by_date

    @ship_by_date.setter
    def ship_by_date(self, ship_by_date):
        """Sets the ship_by_date of this OrderLineItemShippingDetails.

        Required. The ship by date, in ISO 8601 format.

        :param ship_by_date: The ship_by_date of this OrderLineItemShippingDetails.
        :type ship_by_date: str
        """

        self._ship_by_date = ship_by_date

    @property
    def type(self):
        """Gets the type of this OrderLineItemShippingDetails.

        Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is applicable for this shipment. Acceptable values are: - \"`delivery`\" - \"`pickup`\" 

        :return: The type of this OrderLineItemShippingDetails.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OrderLineItemShippingDetails.

        Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is applicable for this shipment. Acceptable values are: - \"`delivery`\" - \"`pickup`\" 

        :param type: The type of this OrderLineItemShippingDetails.
        :type type: str
        """

        self._type = type
