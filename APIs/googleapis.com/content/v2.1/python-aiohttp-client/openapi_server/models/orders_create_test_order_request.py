# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.test_order import TestOrder
from openapi_server import util


class OrdersCreateTestOrderRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, template_name: str=None, test_order: TestOrder=None):
        """OrdersCreateTestOrderRequest - a model defined in OpenAPI

        :param country: The country of this OrdersCreateTestOrderRequest.
        :param template_name: The template_name of this OrdersCreateTestOrderRequest.
        :param test_order: The test_order of this OrdersCreateTestOrderRequest.
        """
        self.openapi_types = {
            'country': str,
            'template_name': str,
            'test_order': TestOrder
        }

        self.attribute_map = {
            'country': 'country',
            'template_name': 'templateName',
            'test_order': 'testOrder'
        }

        self._country = country
        self._template_name = template_name
        self._test_order = test_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrdersCreateTestOrderRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrdersCreateTestOrderRequest of this OrdersCreateTestOrderRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this OrdersCreateTestOrderRequest.

        The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created through `template_name`, or the addresses of orders created through `test_order`. Acceptable values are: - \"`US`\" - \"`FR`\" Defaults to \"`US`\".

        :return: The country of this OrdersCreateTestOrderRequest.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this OrdersCreateTestOrderRequest.

        The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created through `template_name`, or the addresses of orders created through `test_order`. Acceptable values are: - \"`US`\" - \"`FR`\" Defaults to \"`US`\".

        :param country: The country of this OrdersCreateTestOrderRequest.
        :type country: str
        """

        self._country = country

    @property
    def template_name(self):
        """Gets the template_name of this OrdersCreateTestOrderRequest.

        The test order template to use. Specify as an alternative to `testOrder` as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - \"`template1`\" - \"`template1a`\" - \"`template1b`\" - \"`template2`\" - \"`template3`\" 

        :return: The template_name of this OrdersCreateTestOrderRequest.
        :rtype: str
        """
        return self._template_name

    @template_name.setter
    def template_name(self, template_name):
        """Sets the template_name of this OrdersCreateTestOrderRequest.

        The test order template to use. Specify as an alternative to `testOrder` as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - \"`template1`\" - \"`template1a`\" - \"`template1b`\" - \"`template2`\" - \"`template3`\" 

        :param template_name: The template_name of this OrdersCreateTestOrderRequest.
        :type template_name: str
        """

        self._template_name = template_name

    @property
    def test_order(self):
        """Gets the test_order of this OrdersCreateTestOrderRequest.


        :return: The test_order of this OrdersCreateTestOrderRequest.
        :rtype: TestOrder
        """
        return self._test_order

    @test_order.setter
    def test_order(self, test_order):
        """Sets the test_order of this OrdersCreateTestOrderRequest.


        :param test_order: The test_order of this OrdersCreateTestOrderRequest.
        :type test_order: TestOrder
        """

        self._test_order = test_order
