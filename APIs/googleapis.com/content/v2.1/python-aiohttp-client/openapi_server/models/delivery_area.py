# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delivery_area_postal_code_range import DeliveryAreaPostalCodeRange
from openapi_server import util


class DeliveryArea(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country_code: str=None, postal_code_range: DeliveryAreaPostalCodeRange=None, region_code: str=None):
        """DeliveryArea - a model defined in OpenAPI

        :param country_code: The country_code of this DeliveryArea.
        :param postal_code_range: The postal_code_range of this DeliveryArea.
        :param region_code: The region_code of this DeliveryArea.
        """
        self.openapi_types = {
            'country_code': str,
            'postal_code_range': DeliveryAreaPostalCodeRange,
            'region_code': str
        }

        self.attribute_map = {
            'country_code': 'countryCode',
            'postal_code_range': 'postalCodeRange',
            'region_code': 'regionCode'
        }

        self._country_code = country_code
        self._postal_code_range = postal_code_range
        self._region_code = region_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeliveryArea':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeliveryArea of this DeliveryArea.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country_code(self):
        """Gets the country_code of this DeliveryArea.

        Required. The country that the product can be delivered to. Submit a [unicode CLDR region](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) such as `US` or `CH`.

        :return: The country_code of this DeliveryArea.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this DeliveryArea.

        Required. The country that the product can be delivered to. Submit a [unicode CLDR region](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) such as `US` or `CH`.

        :param country_code: The country_code of this DeliveryArea.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def postal_code_range(self):
        """Gets the postal_code_range of this DeliveryArea.


        :return: The postal_code_range of this DeliveryArea.
        :rtype: DeliveryAreaPostalCodeRange
        """
        return self._postal_code_range

    @postal_code_range.setter
    def postal_code_range(self, postal_code_range):
        """Sets the postal_code_range of this DeliveryArea.


        :param postal_code_range: The postal_code_range of this DeliveryArea.
        :type postal_code_range: DeliveryAreaPostalCodeRange
        """

        self._postal_code_range = postal_code_range

    @property
    def region_code(self):
        """Gets the region_code of this DeliveryArea.

        A state, territory, or prefecture. This is supported for the United States, Australia, and Japan. Provide a subdivision code from the ISO 3166-2 code tables ([US](https://en.wikipedia.org/wiki/ISO_3166-2:US), [AU](https://en.wikipedia.org/wiki/ISO_3166-2:AU), or [JP](https://en.wikipedia.org/wiki/ISO_3166-2:JP)) without country prefix (for example, `\"NY\"`, `\"NSW\"`, `\"03\"`).

        :return: The region_code of this DeliveryArea.
        :rtype: str
        """
        return self._region_code

    @region_code.setter
    def region_code(self, region_code):
        """Sets the region_code of this DeliveryArea.

        A state, territory, or prefecture. This is supported for the United States, Australia, and Japan. Provide a subdivision code from the ISO 3166-2 code tables ([US](https://en.wikipedia.org/wiki/ISO_3166-2:US), [AU](https://en.wikipedia.org/wiki/ISO_3166-2:AU), or [JP](https://en.wikipedia.org/wiki/ISO_3166-2:JP)) without country prefix (for example, `\"NY\"`, `\"NSW\"`, `\"03\"`).

        :param region_code: The region_code of this DeliveryArea.
        :type region_code: str
        """

        self._region_code = region_code
