# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price import Price
from openapi_server.models.settlement_transaction_amount_commission import SettlementTransactionAmountCommission
from openapi_server import util


class SettlementTransactionAmount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commission: SettlementTransactionAmountCommission=None, description: str=None, transaction_amount: Price=None, type: str=None):
        """SettlementTransactionAmount - a model defined in OpenAPI

        :param commission: The commission of this SettlementTransactionAmount.
        :param description: The description of this SettlementTransactionAmount.
        :param transaction_amount: The transaction_amount of this SettlementTransactionAmount.
        :param type: The type of this SettlementTransactionAmount.
        """
        self.openapi_types = {
            'commission': SettlementTransactionAmountCommission,
            'description': str,
            'transaction_amount': Price,
            'type': str
        }

        self.attribute_map = {
            'commission': 'commission',
            'description': 'description',
            'transaction_amount': 'transactionAmount',
            'type': 'type'
        }

        self._commission = commission
        self._description = description
        self._transaction_amount = transaction_amount
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SettlementTransactionAmount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SettlementTransactionAmount of this SettlementTransactionAmount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commission(self):
        """Gets the commission of this SettlementTransactionAmount.


        :return: The commission of this SettlementTransactionAmount.
        :rtype: SettlementTransactionAmountCommission
        """
        return self._commission

    @commission.setter
    def commission(self, commission):
        """Sets the commission of this SettlementTransactionAmount.


        :param commission: The commission of this SettlementTransactionAmount.
        :type commission: SettlementTransactionAmountCommission
        """

        self._commission = commission

    @property
    def description(self):
        """Gets the description of this SettlementTransactionAmount.

        The description of the event. Acceptable values are: - \"`taxWithhold`\" - \"`principal`\" - \"`principalAdjustment`\" - \"`shippingFee`\" - \"`merchantRemittedSalesTax`\" - \"`googleRemittedSalesTax`\" - \"`merchantCoupon`\" - \"`merchantCouponTax`\" - \"`merchantRemittedDisposalTax`\" - \"`googleRemittedDisposalTax`\" - \"`merchantRemittedRedemptionFee`\" - \"`googleRemittedRedemptionFee`\" - \"`eeeEcoFee`\" - \"`furnitureEcoFee`\" - \"`copyPrivateFee`\" - \"`eeeEcoFeeCommission`\" - \"`furnitureEcoFeeCommission`\" - \"`copyPrivateFeeCommission`\" - \"`principalRefund`\" - \"`principalRefundTax`\" - \"`itemCommission`\" - \"`adjustmentCommission`\" - \"`shippingFeeCommission`\" - \"`commissionRefund`\" - \"`damaged`\" - \"`damagedOrDefectiveItem`\" - \"`expiredItem`\" - \"`faultyItem`\" - \"`incorrectItemReceived`\" - \"`itemMissing`\" - \"`qualityNotExpected`\" - \"`receivedTooLate`\" - \"`storePackageMissing`\" - \"`transitPackageMissing`\" - \"`unsuccessfulDeliveryUndeliverable`\" - \"`wrongChargeInStore`\" - \"`wrongItem`\" - \"`returns`\" - \"`undeliverable`\" - \"`issueRelatedRefundAndReplacementAmountDescription`\" - \"`refundFromMerchant`\" - \"`returnLabelShippingFee`\" - \"`lumpSumCorrection`\" - \"`pspFee`\" - \"`principalRefundDoesNotFit`\" - \"`principalRefundOrderedWrongItem`\" - \"`principalRefundQualityNotExpected`\" - \"`principalRefundBetterPriceFound`\" - \"`principalRefundNoLongerNeeded`\" - \"`principalRefundChangedMind`\" - \"`principalRefundReceivedTooLate`\" - \"`principalRefundIncorrectItemReceived`\" - \"`principalRefundDamagedOrDefectiveItem`\" - \"`principalRefundDidNotMatchDescription`\" - \"`principalRefundExpiredItem`\" 

        :return: The description of this SettlementTransactionAmount.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SettlementTransactionAmount.

        The description of the event. Acceptable values are: - \"`taxWithhold`\" - \"`principal`\" - \"`principalAdjustment`\" - \"`shippingFee`\" - \"`merchantRemittedSalesTax`\" - \"`googleRemittedSalesTax`\" - \"`merchantCoupon`\" - \"`merchantCouponTax`\" - \"`merchantRemittedDisposalTax`\" - \"`googleRemittedDisposalTax`\" - \"`merchantRemittedRedemptionFee`\" - \"`googleRemittedRedemptionFee`\" - \"`eeeEcoFee`\" - \"`furnitureEcoFee`\" - \"`copyPrivateFee`\" - \"`eeeEcoFeeCommission`\" - \"`furnitureEcoFeeCommission`\" - \"`copyPrivateFeeCommission`\" - \"`principalRefund`\" - \"`principalRefundTax`\" - \"`itemCommission`\" - \"`adjustmentCommission`\" - \"`shippingFeeCommission`\" - \"`commissionRefund`\" - \"`damaged`\" - \"`damagedOrDefectiveItem`\" - \"`expiredItem`\" - \"`faultyItem`\" - \"`incorrectItemReceived`\" - \"`itemMissing`\" - \"`qualityNotExpected`\" - \"`receivedTooLate`\" - \"`storePackageMissing`\" - \"`transitPackageMissing`\" - \"`unsuccessfulDeliveryUndeliverable`\" - \"`wrongChargeInStore`\" - \"`wrongItem`\" - \"`returns`\" - \"`undeliverable`\" - \"`issueRelatedRefundAndReplacementAmountDescription`\" - \"`refundFromMerchant`\" - \"`returnLabelShippingFee`\" - \"`lumpSumCorrection`\" - \"`pspFee`\" - \"`principalRefundDoesNotFit`\" - \"`principalRefundOrderedWrongItem`\" - \"`principalRefundQualityNotExpected`\" - \"`principalRefundBetterPriceFound`\" - \"`principalRefundNoLongerNeeded`\" - \"`principalRefundChangedMind`\" - \"`principalRefundReceivedTooLate`\" - \"`principalRefundIncorrectItemReceived`\" - \"`principalRefundDamagedOrDefectiveItem`\" - \"`principalRefundDidNotMatchDescription`\" - \"`principalRefundExpiredItem`\" 

        :param description: The description of this SettlementTransactionAmount.
        :type description: str
        """

        self._description = description

    @property
    def transaction_amount(self):
        """Gets the transaction_amount of this SettlementTransactionAmount.


        :return: The transaction_amount of this SettlementTransactionAmount.
        :rtype: Price
        """
        return self._transaction_amount

    @transaction_amount.setter
    def transaction_amount(self, transaction_amount):
        """Sets the transaction_amount of this SettlementTransactionAmount.


        :param transaction_amount: The transaction_amount of this SettlementTransactionAmount.
        :type transaction_amount: Price
        """

        self._transaction_amount = transaction_amount

    @property
    def type(self):
        """Gets the type of this SettlementTransactionAmount.

        The type of the amount. Acceptable values are: - \"`itemPrice`\" - \"`orderPrice`\" - \"`refund`\" - \"`earlyRefund`\" - \"`courtesyRefund`\" - \"`returnRefund`\" - \"`returnLabelShippingFeeAmount`\" - \"`lumpSumCorrectionAmount`\" 

        :return: The type of this SettlementTransactionAmount.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SettlementTransactionAmount.

        The type of the amount. Acceptable values are: - \"`itemPrice`\" - \"`orderPrice`\" - \"`refund`\" - \"`earlyRefund`\" - \"`courtesyRefund`\" - \"`returnRefund`\" - \"`returnLabelShippingFeeAmount`\" - \"`lumpSumCorrectionAmount`\" 

        :param type: The type of this SettlementTransactionAmount.
        :type type: str
        """

        self._type = type
