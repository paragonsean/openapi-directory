# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_address import AccountAddress
from openapi_server.models.account_customer_service import AccountCustomerService
from openapi_server import util


class AccountBusinessInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: AccountAddress=None, customer_service: AccountCustomerService=None, korean_business_registration_number: str=None, phone_number: str=None, phone_verification_status: str=None):
        """AccountBusinessInformation - a model defined in OpenAPI

        :param address: The address of this AccountBusinessInformation.
        :param customer_service: The customer_service of this AccountBusinessInformation.
        :param korean_business_registration_number: The korean_business_registration_number of this AccountBusinessInformation.
        :param phone_number: The phone_number of this AccountBusinessInformation.
        :param phone_verification_status: The phone_verification_status of this AccountBusinessInformation.
        """
        self.openapi_types = {
            'address': AccountAddress,
            'customer_service': AccountCustomerService,
            'korean_business_registration_number': str,
            'phone_number': str,
            'phone_verification_status': str
        }

        self.attribute_map = {
            'address': 'address',
            'customer_service': 'customerService',
            'korean_business_registration_number': 'koreanBusinessRegistrationNumber',
            'phone_number': 'phoneNumber',
            'phone_verification_status': 'phoneVerificationStatus'
        }

        self._address = address
        self._customer_service = customer_service
        self._korean_business_registration_number = korean_business_registration_number
        self._phone_number = phone_number
        self._phone_verification_status = phone_verification_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountBusinessInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountBusinessInformation of this AccountBusinessInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this AccountBusinessInformation.


        :return: The address of this AccountBusinessInformation.
        :rtype: AccountAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this AccountBusinessInformation.


        :param address: The address of this AccountBusinessInformation.
        :type address: AccountAddress
        """

        self._address = address

    @property
    def customer_service(self):
        """Gets the customer_service of this AccountBusinessInformation.


        :return: The customer_service of this AccountBusinessInformation.
        :rtype: AccountCustomerService
        """
        return self._customer_service

    @customer_service.setter
    def customer_service(self, customer_service):
        """Sets the customer_service of this AccountBusinessInformation.


        :param customer_service: The customer_service of this AccountBusinessInformation.
        :type customer_service: AccountCustomerService
        """

        self._customer_service = customer_service

    @property
    def korean_business_registration_number(self):
        """Gets the korean_business_registration_number of this AccountBusinessInformation.

        The 10-digit [Korean business registration number](https://support.google.com/merchants/answer/9037766) separated with dashes in the format: XXX-XX-XXXXX. This field will only be updated if explicitly set.

        :return: The korean_business_registration_number of this AccountBusinessInformation.
        :rtype: str
        """
        return self._korean_business_registration_number

    @korean_business_registration_number.setter
    def korean_business_registration_number(self, korean_business_registration_number):
        """Sets the korean_business_registration_number of this AccountBusinessInformation.

        The 10-digit [Korean business registration number](https://support.google.com/merchants/answer/9037766) separated with dashes in the format: XXX-XX-XXXXX. This field will only be updated if explicitly set.

        :param korean_business_registration_number: The korean_business_registration_number of this AccountBusinessInformation.
        :type korean_business_registration_number: str
        """

        self._korean_business_registration_number = korean_business_registration_number

    @property
    def phone_number(self):
        """Gets the phone_number of this AccountBusinessInformation.

        The phone number of the business in [E.164](https://en.wikipedia.org/wiki/E.164) format. This can only be updated if a verified phone number is not already set. To replace a verified phone number use the `Accounts.requestphoneverification` and `Accounts.verifyphonenumber`.

        :return: The phone_number of this AccountBusinessInformation.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this AccountBusinessInformation.

        The phone number of the business in [E.164](https://en.wikipedia.org/wiki/E.164) format. This can only be updated if a verified phone number is not already set. To replace a verified phone number use the `Accounts.requestphoneverification` and `Accounts.verifyphonenumber`.

        :param phone_number: The phone_number of this AccountBusinessInformation.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def phone_verification_status(self):
        """Gets the phone_verification_status of this AccountBusinessInformation.

        Verification status of the phone number of the business. This status is read only and can be updated only by successful phone verification. Acceptable values are: - \"`verified`\" - \"`unverified`\" 

        :return: The phone_verification_status of this AccountBusinessInformation.
        :rtype: str
        """
        return self._phone_verification_status

    @phone_verification_status.setter
    def phone_verification_status(self, phone_verification_status):
        """Sets the phone_verification_status of this AccountBusinessInformation.

        Verification status of the phone number of the business. This status is read only and can be updated only by successful phone verification. Acceptable values are: - \"`verified`\" - \"`unverified`\" 

        :param phone_verification_status: The phone_verification_status of this AccountBusinessInformation.
        :type phone_verification_status: str
        """

        self._phone_verification_status = phone_verification_status
