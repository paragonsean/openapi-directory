# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductViewItemIssueItemIssueType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, canonical_attribute: str=None, code: str=None):
        """ProductViewItemIssueItemIssueType - a model defined in OpenAPI

        :param canonical_attribute: The canonical_attribute of this ProductViewItemIssueItemIssueType.
        :param code: The code of this ProductViewItemIssueItemIssueType.
        """
        self.openapi_types = {
            'canonical_attribute': str,
            'code': str
        }

        self.attribute_map = {
            'canonical_attribute': 'canonicalAttribute',
            'code': 'code'
        }

        self._canonical_attribute = canonical_attribute
        self._code = code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductViewItemIssueItemIssueType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductViewItemIssueItemIssueType of this ProductViewItemIssueItemIssueType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def canonical_attribute(self):
        """Gets the canonical_attribute of this ProductViewItemIssueItemIssueType.

        Canonical attribute name for attribute-specific issues.

        :return: The canonical_attribute of this ProductViewItemIssueItemIssueType.
        :rtype: str
        """
        return self._canonical_attribute

    @canonical_attribute.setter
    def canonical_attribute(self, canonical_attribute):
        """Sets the canonical_attribute of this ProductViewItemIssueItemIssueType.

        Canonical attribute name for attribute-specific issues.

        :param canonical_attribute: The canonical_attribute of this ProductViewItemIssueItemIssueType.
        :type canonical_attribute: str
        """

        self._canonical_attribute = canonical_attribute

    @property
    def code(self):
        """Gets the code of this ProductViewItemIssueItemIssueType.

        Error code of the issue.

        :return: The code of this ProductViewItemIssueItemIssueType.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this ProductViewItemIssueItemIssueType.

        Error code of the issue.

        :param code: The code of this ProductViewItemIssueItemIssueType.
        :type code: str
        """

        self._code = code
