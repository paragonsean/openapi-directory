# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountAdsLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ads_id: str=None, status: str=None):
        """AccountAdsLink - a model defined in OpenAPI

        :param ads_id: The ads_id of this AccountAdsLink.
        :param status: The status of this AccountAdsLink.
        """
        self.openapi_types = {
            'ads_id': str,
            'status': str
        }

        self.attribute_map = {
            'ads_id': 'adsId',
            'status': 'status'
        }

        self._ads_id = ads_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountAdsLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountAdsLink of this AccountAdsLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ads_id(self):
        """Gets the ads_id of this AccountAdsLink.

        Customer ID of the Ads account.

        :return: The ads_id of this AccountAdsLink.
        :rtype: str
        """
        return self._ads_id

    @ads_id.setter
    def ads_id(self, ads_id):
        """Sets the ads_id of this AccountAdsLink.

        Customer ID of the Ads account.

        :param ads_id: The ads_id of this AccountAdsLink.
        :type ads_id: str
        """

        self._ads_id = ads_id

    @property
    def status(self):
        """Gets the status of this AccountAdsLink.

        Status of the link between this Merchant Center account and the Ads account. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in Google Ads or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending. Acceptable values are: - \"`active`\" - \"`pending`\" 

        :return: The status of this AccountAdsLink.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AccountAdsLink.

        Status of the link between this Merchant Center account and the Ads account. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in Google Ads or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending. Acceptable values are: - \"`active`\" - \"`pending`\" 

        :param status: The status of this AccountAdsLink.
        :type status: str
        """

        self._status = status
