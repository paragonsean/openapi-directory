# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Css(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, css_domain_id: str=None, css_group_id: str=None, display_name: str=None, full_name: str=None, homepage_uri: str=None, label_ids: List[str]=None):
        """Css - a model defined in OpenAPI

        :param css_domain_id: The css_domain_id of this Css.
        :param css_group_id: The css_group_id of this Css.
        :param display_name: The display_name of this Css.
        :param full_name: The full_name of this Css.
        :param homepage_uri: The homepage_uri of this Css.
        :param label_ids: The label_ids of this Css.
        """
        self.openapi_types = {
            'css_domain_id': str,
            'css_group_id': str,
            'display_name': str,
            'full_name': str,
            'homepage_uri': str,
            'label_ids': List[str]
        }

        self.attribute_map = {
            'css_domain_id': 'cssDomainId',
            'css_group_id': 'cssGroupId',
            'display_name': 'displayName',
            'full_name': 'fullName',
            'homepage_uri': 'homepageUri',
            'label_ids': 'labelIds'
        }

        self._css_domain_id = css_domain_id
        self._css_group_id = css_group_id
        self._display_name = display_name
        self._full_name = full_name
        self._homepage_uri = homepage_uri
        self._label_ids = label_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Css':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Css of this Css.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def css_domain_id(self):
        """Gets the css_domain_id of this Css.

        Output only. Immutable. The CSS domain ID.

        :return: The css_domain_id of this Css.
        :rtype: str
        """
        return self._css_domain_id

    @css_domain_id.setter
    def css_domain_id(self, css_domain_id):
        """Sets the css_domain_id of this Css.

        Output only. Immutable. The CSS domain ID.

        :param css_domain_id: The css_domain_id of this Css.
        :type css_domain_id: str
        """

        self._css_domain_id = css_domain_id

    @property
    def css_group_id(self):
        """Gets the css_group_id of this Css.

        Output only. Immutable. The ID of the CSS group this CSS domain is affiliated with. Only populated for CSS group users.

        :return: The css_group_id of this Css.
        :rtype: str
        """
        return self._css_group_id

    @css_group_id.setter
    def css_group_id(self, css_group_id):
        """Sets the css_group_id of this Css.

        Output only. Immutable. The ID of the CSS group this CSS domain is affiliated with. Only populated for CSS group users.

        :param css_group_id: The css_group_id of this Css.
        :type css_group_id: str
        """

        self._css_group_id = css_group_id

    @property
    def display_name(self):
        """Gets the display_name of this Css.

        Output only. Immutable. The CSS domain's display name, used when space is constrained.

        :return: The display_name of this Css.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this Css.

        Output only. Immutable. The CSS domain's display name, used when space is constrained.

        :param display_name: The display_name of this Css.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def full_name(self):
        """Gets the full_name of this Css.

        Output only. Immutable. The CSS domain's full name.

        :return: The full_name of this Css.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this Css.

        Output only. Immutable. The CSS domain's full name.

        :param full_name: The full_name of this Css.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def homepage_uri(self):
        """Gets the homepage_uri of this Css.

        Output only. Immutable. The CSS domain's homepage.

        :return: The homepage_uri of this Css.
        :rtype: str
        """
        return self._homepage_uri

    @homepage_uri.setter
    def homepage_uri(self, homepage_uri):
        """Sets the homepage_uri of this Css.

        Output only. Immutable. The CSS domain's homepage.

        :param homepage_uri: The homepage_uri of this Css.
        :type homepage_uri: str
        """

        self._homepage_uri = homepage_uri

    @property
    def label_ids(self):
        """Gets the label_ids of this Css.

        A list of label IDs that are assigned to this CSS domain by its CSS group. Only populated for CSS group users.

        :return: The label_ids of this Css.
        :rtype: List[str]
        """
        return self._label_ids

    @label_ids.setter
    def label_ids(self, label_ids):
        """Sets the label_ids of this Css.

        A list of label IDs that are assigned to this CSS domain by its CSS group. Only populated for CSS group users.

        :param label_ids: The label_ids of this Css.
        :type label_ids: List[str]
        """

        self._label_ids = label_ids
