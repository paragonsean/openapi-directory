# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.settlement_transaction_amount import SettlementTransactionAmount
from openapi_server.models.settlement_transaction_identifiers import SettlementTransactionIdentifiers
from openapi_server.models.settlement_transaction_transaction import SettlementTransactionTransaction
from openapi_server import util


class SettlementTransaction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: SettlementTransactionAmount=None, identifiers: SettlementTransactionIdentifiers=None, kind: str=None, transaction: SettlementTransactionTransaction=None):
        """SettlementTransaction - a model defined in OpenAPI

        :param amount: The amount of this SettlementTransaction.
        :param identifiers: The identifiers of this SettlementTransaction.
        :param kind: The kind of this SettlementTransaction.
        :param transaction: The transaction of this SettlementTransaction.
        """
        self.openapi_types = {
            'amount': SettlementTransactionAmount,
            'identifiers': SettlementTransactionIdentifiers,
            'kind': str,
            'transaction': SettlementTransactionTransaction
        }

        self.attribute_map = {
            'amount': 'amount',
            'identifiers': 'identifiers',
            'kind': 'kind',
            'transaction': 'transaction'
        }

        self._amount = amount
        self._identifiers = identifiers
        self._kind = kind
        self._transaction = transaction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SettlementTransaction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SettlementTransaction of this SettlementTransaction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this SettlementTransaction.


        :return: The amount of this SettlementTransaction.
        :rtype: SettlementTransactionAmount
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this SettlementTransaction.


        :param amount: The amount of this SettlementTransaction.
        :type amount: SettlementTransactionAmount
        """

        self._amount = amount

    @property
    def identifiers(self):
        """Gets the identifiers of this SettlementTransaction.


        :return: The identifiers of this SettlementTransaction.
        :rtype: SettlementTransactionIdentifiers
        """
        return self._identifiers

    @identifiers.setter
    def identifiers(self, identifiers):
        """Sets the identifiers of this SettlementTransaction.


        :param identifiers: The identifiers of this SettlementTransaction.
        :type identifiers: SettlementTransactionIdentifiers
        """

        self._identifiers = identifiers

    @property
    def kind(self):
        """Gets the kind of this SettlementTransaction.

        Identifies what kind of resource this is. Value: the fixed string \"`content#settlementTransaction`\"

        :return: The kind of this SettlementTransaction.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this SettlementTransaction.

        Identifies what kind of resource this is. Value: the fixed string \"`content#settlementTransaction`\"

        :param kind: The kind of this SettlementTransaction.
        :type kind: str
        """

        self._kind = kind

    @property
    def transaction(self):
        """Gets the transaction of this SettlementTransaction.


        :return: The transaction of this SettlementTransaction.
        :rtype: SettlementTransactionTransaction
        """
        return self._transaction

    @transaction.setter
    def transaction(self, transaction):
        """Sets the transaction of this SettlementTransaction.


        :param transaction: The transaction of this SettlementTransaction.
        :type transaction: SettlementTransactionTransaction
        """

        self._transaction = transaction
