# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.region_postal_code_area_postal_code_range import RegionPostalCodeAreaPostalCodeRange
from openapi_server import util


class RegionPostalCodeArea(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, postal_codes: List[RegionPostalCodeAreaPostalCodeRange]=None, region_code: str=None):
        """RegionPostalCodeArea - a model defined in OpenAPI

        :param postal_codes: The postal_codes of this RegionPostalCodeArea.
        :param region_code: The region_code of this RegionPostalCodeArea.
        """
        self.openapi_types = {
            'postal_codes': List[RegionPostalCodeAreaPostalCodeRange],
            'region_code': str
        }

        self.attribute_map = {
            'postal_codes': 'postalCodes',
            'region_code': 'regionCode'
        }

        self._postal_codes = postal_codes
        self._region_code = region_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegionPostalCodeArea':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegionPostalCodeArea of this RegionPostalCodeArea.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def postal_codes(self):
        """Gets the postal_codes of this RegionPostalCodeArea.

        Required. A range of postal codes.

        :return: The postal_codes of this RegionPostalCodeArea.
        :rtype: List[RegionPostalCodeAreaPostalCodeRange]
        """
        return self._postal_codes

    @postal_codes.setter
    def postal_codes(self, postal_codes):
        """Sets the postal_codes of this RegionPostalCodeArea.

        Required. A range of postal codes.

        :param postal_codes: The postal_codes of this RegionPostalCodeArea.
        :type postal_codes: List[RegionPostalCodeAreaPostalCodeRange]
        """

        self._postal_codes = postal_codes

    @property
    def region_code(self):
        """Gets the region_code of this RegionPostalCodeArea.

        Required. CLDR territory code or the country the postal code group applies to.

        :return: The region_code of this RegionPostalCodeArea.
        :rtype: str
        """
        return self._region_code

    @region_code.setter
    def region_code(self, region_code):
        """Sets the region_code of this RegionPostalCodeArea.

        Required. CLDR territory code or the country the postal code group applies to.

        :param region_code: The region_code of this RegionPostalCodeArea.
        :type region_code: str
        """

        self._region_code = region_code
