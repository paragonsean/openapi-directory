# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attribution_settings import AttributionSettings
from openapi_server import util


class MerchantCenterDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribution_settings: AttributionSettings=None, currency_code: str=None, destination_id: str=None, display_name: str=None):
        """MerchantCenterDestination - a model defined in OpenAPI

        :param attribution_settings: The attribution_settings of this MerchantCenterDestination.
        :param currency_code: The currency_code of this MerchantCenterDestination.
        :param destination_id: The destination_id of this MerchantCenterDestination.
        :param display_name: The display_name of this MerchantCenterDestination.
        """
        self.openapi_types = {
            'attribution_settings': AttributionSettings,
            'currency_code': str,
            'destination_id': str,
            'display_name': str
        }

        self.attribute_map = {
            'attribution_settings': 'attributionSettings',
            'currency_code': 'currencyCode',
            'destination_id': 'destinationId',
            'display_name': 'displayName'
        }

        self._attribution_settings = attribution_settings
        self._currency_code = currency_code
        self._destination_id = destination_id
        self._display_name = display_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MerchantCenterDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MerchantCenterDestination of this MerchantCenterDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribution_settings(self):
        """Gets the attribution_settings of this MerchantCenterDestination.


        :return: The attribution_settings of this MerchantCenterDestination.
        :rtype: AttributionSettings
        """
        return self._attribution_settings

    @attribution_settings.setter
    def attribution_settings(self, attribution_settings):
        """Sets the attribution_settings of this MerchantCenterDestination.


        :param attribution_settings: The attribution_settings of this MerchantCenterDestination.
        :type attribution_settings: AttributionSettings
        """

        self._attribution_settings = attribution_settings

    @property
    def currency_code(self):
        """Gets the currency_code of this MerchantCenterDestination.

        Required. Three-letter currency code (ISO 4217). The currency code defines in which currency the conversions sent to this destination will be reported in Merchant Center.

        :return: The currency_code of this MerchantCenterDestination.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this MerchantCenterDestination.

        Required. Three-letter currency code (ISO 4217). The currency code defines in which currency the conversions sent to this destination will be reported in Merchant Center.

        :param currency_code: The currency_code of this MerchantCenterDestination.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def destination_id(self):
        """Gets the destination_id of this MerchantCenterDestination.

        Output only. Merchant Center Destination ID.

        :return: The destination_id of this MerchantCenterDestination.
        :rtype: str
        """
        return self._destination_id

    @destination_id.setter
    def destination_id(self, destination_id):
        """Sets the destination_id of this MerchantCenterDestination.

        Output only. Merchant Center Destination ID.

        :param destination_id: The destination_id of this MerchantCenterDestination.
        :type destination_id: str
        """

        self._destination_id = destination_id

    @property
    def display_name(self):
        """Gets the display_name of this MerchantCenterDestination.

        Required. Merchant-specified display name for the destination. This is the name that identifies the conversion source within the Merchant Center UI. Limited to 64 characters.

        :return: The display_name of this MerchantCenterDestination.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this MerchantCenterDestination.

        Required. Merchant-specified display name for the destination. This is the name that identifies the conversion source within the Merchant Center UI. Limited to 64 characters.

        :param display_name: The display_name of this MerchantCenterDestination.
        :type display_name: str
        """

        self._display_name = display_name
