# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_date import ModelDate
from openapi_server.models.product_view_item_issue import ProductViewItemIssue
from openapi_server import util


class ProductView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregated_destination_status: str=None, availability: str=None, brand: str=None, category_l1: str=None, category_l2: str=None, category_l3: str=None, category_l4: str=None, category_l5: str=None, channel: str=None, condition: str=None, creation_time: str=None, currency_code: str=None, expiration_date: ModelDate=None, gtin: List[str]=None, id: str=None, item_group_id: str=None, item_issues: List[ProductViewItemIssue]=None, language_code: str=None, offer_id: str=None, price_micros: str=None, product_type_l1: str=None, product_type_l2: str=None, product_type_l3: str=None, product_type_l4: str=None, product_type_l5: str=None, shipping_label: str=None, title: str=None):
        """ProductView - a model defined in OpenAPI

        :param aggregated_destination_status: The aggregated_destination_status of this ProductView.
        :param availability: The availability of this ProductView.
        :param brand: The brand of this ProductView.
        :param category_l1: The category_l1 of this ProductView.
        :param category_l2: The category_l2 of this ProductView.
        :param category_l3: The category_l3 of this ProductView.
        :param category_l4: The category_l4 of this ProductView.
        :param category_l5: The category_l5 of this ProductView.
        :param channel: The channel of this ProductView.
        :param condition: The condition of this ProductView.
        :param creation_time: The creation_time of this ProductView.
        :param currency_code: The currency_code of this ProductView.
        :param expiration_date: The expiration_date of this ProductView.
        :param gtin: The gtin of this ProductView.
        :param id: The id of this ProductView.
        :param item_group_id: The item_group_id of this ProductView.
        :param item_issues: The item_issues of this ProductView.
        :param language_code: The language_code of this ProductView.
        :param offer_id: The offer_id of this ProductView.
        :param price_micros: The price_micros of this ProductView.
        :param product_type_l1: The product_type_l1 of this ProductView.
        :param product_type_l2: The product_type_l2 of this ProductView.
        :param product_type_l3: The product_type_l3 of this ProductView.
        :param product_type_l4: The product_type_l4 of this ProductView.
        :param product_type_l5: The product_type_l5 of this ProductView.
        :param shipping_label: The shipping_label of this ProductView.
        :param title: The title of this ProductView.
        """
        self.openapi_types = {
            'aggregated_destination_status': str,
            'availability': str,
            'brand': str,
            'category_l1': str,
            'category_l2': str,
            'category_l3': str,
            'category_l4': str,
            'category_l5': str,
            'channel': str,
            'condition': str,
            'creation_time': str,
            'currency_code': str,
            'expiration_date': ModelDate,
            'gtin': List[str],
            'id': str,
            'item_group_id': str,
            'item_issues': List[ProductViewItemIssue],
            'language_code': str,
            'offer_id': str,
            'price_micros': str,
            'product_type_l1': str,
            'product_type_l2': str,
            'product_type_l3': str,
            'product_type_l4': str,
            'product_type_l5': str,
            'shipping_label': str,
            'title': str
        }

        self.attribute_map = {
            'aggregated_destination_status': 'aggregatedDestinationStatus',
            'availability': 'availability',
            'brand': 'brand',
            'category_l1': 'categoryL1',
            'category_l2': 'categoryL2',
            'category_l3': 'categoryL3',
            'category_l4': 'categoryL4',
            'category_l5': 'categoryL5',
            'channel': 'channel',
            'condition': 'condition',
            'creation_time': 'creationTime',
            'currency_code': 'currencyCode',
            'expiration_date': 'expirationDate',
            'gtin': 'gtin',
            'id': 'id',
            'item_group_id': 'itemGroupId',
            'item_issues': 'itemIssues',
            'language_code': 'languageCode',
            'offer_id': 'offerId',
            'price_micros': 'priceMicros',
            'product_type_l1': 'productTypeL1',
            'product_type_l2': 'productTypeL2',
            'product_type_l3': 'productTypeL3',
            'product_type_l4': 'productTypeL4',
            'product_type_l5': 'productTypeL5',
            'shipping_label': 'shippingLabel',
            'title': 'title'
        }

        self._aggregated_destination_status = aggregated_destination_status
        self._availability = availability
        self._brand = brand
        self._category_l1 = category_l1
        self._category_l2 = category_l2
        self._category_l3 = category_l3
        self._category_l4 = category_l4
        self._category_l5 = category_l5
        self._channel = channel
        self._condition = condition
        self._creation_time = creation_time
        self._currency_code = currency_code
        self._expiration_date = expiration_date
        self._gtin = gtin
        self._id = id
        self._item_group_id = item_group_id
        self._item_issues = item_issues
        self._language_code = language_code
        self._offer_id = offer_id
        self._price_micros = price_micros
        self._product_type_l1 = product_type_l1
        self._product_type_l2 = product_type_l2
        self._product_type_l3 = product_type_l3
        self._product_type_l4 = product_type_l4
        self._product_type_l5 = product_type_l5
        self._shipping_label = shipping_label
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductView of this ProductView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregated_destination_status(self):
        """Gets the aggregated_destination_status of this ProductView.

        Aggregated destination status.

        :return: The aggregated_destination_status of this ProductView.
        :rtype: str
        """
        return self._aggregated_destination_status

    @aggregated_destination_status.setter
    def aggregated_destination_status(self, aggregated_destination_status):
        """Sets the aggregated_destination_status of this ProductView.

        Aggregated destination status.

        :param aggregated_destination_status: The aggregated_destination_status of this ProductView.
        :type aggregated_destination_status: str
        """
        allowed_values = ["AGGREGATED_STATUS_UNSPECIFIED", "NOT_ELIGIBLE_OR_DISAPPROVED", "PENDING", "ELIGIBLE_LIMITED", "ELIGIBLE"]  # noqa: E501
        if aggregated_destination_status not in allowed_values:
            raise ValueError(
                "Invalid value for `aggregated_destination_status` ({0}), must be one of {1}"
                .format(aggregated_destination_status, allowed_values)
            )

        self._aggregated_destination_status = aggregated_destination_status

    @property
    def availability(self):
        """Gets the availability of this ProductView.

        Availability of the product.

        :return: The availability of this ProductView.
        :rtype: str
        """
        return self._availability

    @availability.setter
    def availability(self, availability):
        """Sets the availability of this ProductView.

        Availability of the product.

        :param availability: The availability of this ProductView.
        :type availability: str
        """

        self._availability = availability

    @property
    def brand(self):
        """Gets the brand of this ProductView.

        Brand of the product.

        :return: The brand of this ProductView.
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this ProductView.

        Brand of the product.

        :param brand: The brand of this ProductView.
        :type brand: str
        """

        self._brand = brand

    @property
    def category_l1(self):
        """Gets the category_l1 of this ProductView.

        First level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).

        :return: The category_l1 of this ProductView.
        :rtype: str
        """
        return self._category_l1

    @category_l1.setter
    def category_l1(self, category_l1):
        """Sets the category_l1 of this ProductView.

        First level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).

        :param category_l1: The category_l1 of this ProductView.
        :type category_l1: str
        """

        self._category_l1 = category_l1

    @property
    def category_l2(self):
        """Gets the category_l2 of this ProductView.

        Second level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).

        :return: The category_l2 of this ProductView.
        :rtype: str
        """
        return self._category_l2

    @category_l2.setter
    def category_l2(self, category_l2):
        """Sets the category_l2 of this ProductView.

        Second level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).

        :param category_l2: The category_l2 of this ProductView.
        :type category_l2: str
        """

        self._category_l2 = category_l2

    @property
    def category_l3(self):
        """Gets the category_l3 of this ProductView.

        Third level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).

        :return: The category_l3 of this ProductView.
        :rtype: str
        """
        return self._category_l3

    @category_l3.setter
    def category_l3(self, category_l3):
        """Sets the category_l3 of this ProductView.

        Third level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).

        :param category_l3: The category_l3 of this ProductView.
        :type category_l3: str
        """

        self._category_l3 = category_l3

    @property
    def category_l4(self):
        """Gets the category_l4 of this ProductView.

        Fourth level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).

        :return: The category_l4 of this ProductView.
        :rtype: str
        """
        return self._category_l4

    @category_l4.setter
    def category_l4(self, category_l4):
        """Sets the category_l4 of this ProductView.

        Fourth level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).

        :param category_l4: The category_l4 of this ProductView.
        :type category_l4: str
        """

        self._category_l4 = category_l4

    @property
    def category_l5(self):
        """Gets the category_l5 of this ProductView.

        Fifth level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).

        :return: The category_l5 of this ProductView.
        :rtype: str
        """
        return self._category_l5

    @category_l5.setter
    def category_l5(self, category_l5):
        """Sets the category_l5 of this ProductView.

        Fifth level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).

        :param category_l5: The category_l5 of this ProductView.
        :type category_l5: str
        """

        self._category_l5 = category_l5

    @property
    def channel(self):
        """Gets the channel of this ProductView.

        Channel of the product (online versus local).

        :return: The channel of this ProductView.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this ProductView.

        Channel of the product (online versus local).

        :param channel: The channel of this ProductView.
        :type channel: str
        """
        allowed_values = ["CHANNEL_UNSPECIFIED", "LOCAL", "ONLINE"]  # noqa: E501
        if channel not in allowed_values:
            raise ValueError(
                "Invalid value for `channel` ({0}), must be one of {1}"
                .format(channel, allowed_values)
            )

        self._channel = channel

    @property
    def condition(self):
        """Gets the condition of this ProductView.

        Condition of the product.

        :return: The condition of this ProductView.
        :rtype: str
        """
        return self._condition

    @condition.setter
    def condition(self, condition):
        """Sets the condition of this ProductView.

        Condition of the product.

        :param condition: The condition of this ProductView.
        :type condition: str
        """

        self._condition = condition

    @property
    def creation_time(self):
        """Gets the creation_time of this ProductView.

        The time the merchant created the product in timestamp seconds.

        :return: The creation_time of this ProductView.
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this ProductView.

        The time the merchant created the product in timestamp seconds.

        :param creation_time: The creation_time of this ProductView.
        :type creation_time: str
        """

        self._creation_time = creation_time

    @property
    def currency_code(self):
        """Gets the currency_code of this ProductView.

        Product price currency code (for example, ISO 4217). Absent if product price is not available.

        :return: The currency_code of this ProductView.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this ProductView.

        Product price currency code (for example, ISO 4217). Absent if product price is not available.

        :param currency_code: The currency_code of this ProductView.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def expiration_date(self):
        """Gets the expiration_date of this ProductView.


        :return: The expiration_date of this ProductView.
        :rtype: ModelDate
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this ProductView.


        :param expiration_date: The expiration_date of this ProductView.
        :type expiration_date: ModelDate
        """

        self._expiration_date = expiration_date

    @property
    def gtin(self):
        """Gets the gtin of this ProductView.

        GTIN of the product.

        :return: The gtin of this ProductView.
        :rtype: List[str]
        """
        return self._gtin

    @gtin.setter
    def gtin(self, gtin):
        """Sets the gtin of this ProductView.

        GTIN of the product.

        :param gtin: The gtin of this ProductView.
        :type gtin: List[str]
        """

        self._gtin = gtin

    @property
    def id(self):
        """Gets the id of this ProductView.

        The REST ID of the product, in the form of channel:contentLanguage:targetCountry:offerId. Content API methods that operate on products take this as their productId parameter. Should always be included in the SELECT clause.

        :return: The id of this ProductView.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProductView.

        The REST ID of the product, in the form of channel:contentLanguage:targetCountry:offerId. Content API methods that operate on products take this as their productId parameter. Should always be included in the SELECT clause.

        :param id: The id of this ProductView.
        :type id: str
        """

        self._id = id

    @property
    def item_group_id(self):
        """Gets the item_group_id of this ProductView.

        Item group ID provided by the merchant for grouping variants together.

        :return: The item_group_id of this ProductView.
        :rtype: str
        """
        return self._item_group_id

    @item_group_id.setter
    def item_group_id(self, item_group_id):
        """Sets the item_group_id of this ProductView.

        Item group ID provided by the merchant for grouping variants together.

        :param item_group_id: The item_group_id of this ProductView.
        :type item_group_id: str
        """

        self._item_group_id = item_group_id

    @property
    def item_issues(self):
        """Gets the item_issues of this ProductView.

        List of item issues for the product.

        :return: The item_issues of this ProductView.
        :rtype: List[ProductViewItemIssue]
        """
        return self._item_issues

    @item_issues.setter
    def item_issues(self, item_issues):
        """Sets the item_issues of this ProductView.

        List of item issues for the product.

        :param item_issues: The item_issues of this ProductView.
        :type item_issues: List[ProductViewItemIssue]
        """

        self._item_issues = item_issues

    @property
    def language_code(self):
        """Gets the language_code of this ProductView.

        Language code of the product in BCP 47 format.

        :return: The language_code of this ProductView.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this ProductView.

        Language code of the product in BCP 47 format.

        :param language_code: The language_code of this ProductView.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def offer_id(self):
        """Gets the offer_id of this ProductView.

        Merchant-provided id of the product.

        :return: The offer_id of this ProductView.
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this ProductView.

        Merchant-provided id of the product.

        :param offer_id: The offer_id of this ProductView.
        :type offer_id: str
        """

        self._offer_id = offer_id

    @property
    def price_micros(self):
        """Gets the price_micros of this ProductView.

        Product price specified as micros (1 millionth of a standard unit, 1 USD = 1000000 micros) in the product currency. Absent in case the information about the price of the product is not available.

        :return: The price_micros of this ProductView.
        :rtype: str
        """
        return self._price_micros

    @price_micros.setter
    def price_micros(self, price_micros):
        """Sets the price_micros of this ProductView.

        Product price specified as micros (1 millionth of a standard unit, 1 USD = 1000000 micros) in the product currency. Absent in case the information about the price of the product is not available.

        :param price_micros: The price_micros of this ProductView.
        :type price_micros: str
        """

        self._price_micros = price_micros

    @property
    def product_type_l1(self):
        """Gets the product_type_l1 of this ProductView.

        First level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).

        :return: The product_type_l1 of this ProductView.
        :rtype: str
        """
        return self._product_type_l1

    @product_type_l1.setter
    def product_type_l1(self, product_type_l1):
        """Sets the product_type_l1 of this ProductView.

        First level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).

        :param product_type_l1: The product_type_l1 of this ProductView.
        :type product_type_l1: str
        """

        self._product_type_l1 = product_type_l1

    @property
    def product_type_l2(self):
        """Gets the product_type_l2 of this ProductView.

        Second level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).

        :return: The product_type_l2 of this ProductView.
        :rtype: str
        """
        return self._product_type_l2

    @product_type_l2.setter
    def product_type_l2(self, product_type_l2):
        """Sets the product_type_l2 of this ProductView.

        Second level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).

        :param product_type_l2: The product_type_l2 of this ProductView.
        :type product_type_l2: str
        """

        self._product_type_l2 = product_type_l2

    @property
    def product_type_l3(self):
        """Gets the product_type_l3 of this ProductView.

        Third level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).

        :return: The product_type_l3 of this ProductView.
        :rtype: str
        """
        return self._product_type_l3

    @product_type_l3.setter
    def product_type_l3(self, product_type_l3):
        """Sets the product_type_l3 of this ProductView.

        Third level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).

        :param product_type_l3: The product_type_l3 of this ProductView.
        :type product_type_l3: str
        """

        self._product_type_l3 = product_type_l3

    @property
    def product_type_l4(self):
        """Gets the product_type_l4 of this ProductView.

        Fourth level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).

        :return: The product_type_l4 of this ProductView.
        :rtype: str
        """
        return self._product_type_l4

    @product_type_l4.setter
    def product_type_l4(self, product_type_l4):
        """Sets the product_type_l4 of this ProductView.

        Fourth level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).

        :param product_type_l4: The product_type_l4 of this ProductView.
        :type product_type_l4: str
        """

        self._product_type_l4 = product_type_l4

    @property
    def product_type_l5(self):
        """Gets the product_type_l5 of this ProductView.

        Fifth level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).

        :return: The product_type_l5 of this ProductView.
        :rtype: str
        """
        return self._product_type_l5

    @product_type_l5.setter
    def product_type_l5(self, product_type_l5):
        """Sets the product_type_l5 of this ProductView.

        Fifth level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).

        :param product_type_l5: The product_type_l5 of this ProductView.
        :type product_type_l5: str
        """

        self._product_type_l5 = product_type_l5

    @property
    def shipping_label(self):
        """Gets the shipping_label of this ProductView.

        The normalized shipping label specified in the feed

        :return: The shipping_label of this ProductView.
        :rtype: str
        """
        return self._shipping_label

    @shipping_label.setter
    def shipping_label(self, shipping_label):
        """Sets the shipping_label of this ProductView.

        The normalized shipping label specified in the feed

        :param shipping_label: The shipping_label of this ProductView.
        :type shipping_label: str
        """

        self._shipping_label = shipping_label

    @property
    def title(self):
        """Gets the title of this ProductView.

        Title of the product.

        :return: The title of this ProductView.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ProductView.

        Title of the product.

        :param title: The title of this ProductView.
        :type title: str
        """

        self._title = title
