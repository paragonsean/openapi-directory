# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CaptureOrderResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, execution_status: str=None):
        """CaptureOrderResponse - a model defined in OpenAPI

        :param execution_status: The execution_status of this CaptureOrderResponse.
        """
        self.openapi_types = {
            'execution_status': str
        }

        self.attribute_map = {
            'execution_status': 'executionStatus'
        }

        self._execution_status = execution_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CaptureOrderResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CaptureOrderResponse of this CaptureOrderResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def execution_status(self):
        """Gets the execution_status of this CaptureOrderResponse.

        The status of the execution. Only defined if the request was successful. Acceptable values are: * \"duplicate\" * \"executed\"

        :return: The execution_status of this CaptureOrderResponse.
        :rtype: str
        """
        return self._execution_status

    @execution_status.setter
    def execution_status(self, execution_status):
        """Sets the execution_status of this CaptureOrderResponse.

        The status of the execution. Only defined if the request was successful. Acceptable values are: * \"duplicate\" * \"executed\"

        :param execution_status: The execution_status of this CaptureOrderResponse.
        :type execution_status: str
        """
        allowed_values = ["EXECUTION_STATUS_UNSPECIFIED", "EXECUTED", "DUPLICATE"]  # noqa: E501
        if execution_status not in allowed_values:
            raise ValueError(
                "Invalid value for `execution_status` ({0}), must be one of {1}"
                .format(execution_status, allowed_values)
            )

        self._execution_status = execution_status
