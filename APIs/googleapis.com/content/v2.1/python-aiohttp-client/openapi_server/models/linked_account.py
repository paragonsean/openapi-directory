# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.link_service import LinkService
from openapi_server import util


class LinkedAccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, linked_account_id: str=None, services: List[LinkService]=None):
        """LinkedAccount - a model defined in OpenAPI

        :param linked_account_id: The linked_account_id of this LinkedAccount.
        :param services: The services of this LinkedAccount.
        """
        self.openapi_types = {
            'linked_account_id': str,
            'services': List[LinkService]
        }

        self.attribute_map = {
            'linked_account_id': 'linkedAccountId',
            'services': 'services'
        }

        self._linked_account_id = linked_account_id
        self._services = services

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinkedAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinkedAccount of this LinkedAccount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def linked_account_id(self):
        """Gets the linked_account_id of this LinkedAccount.

        The ID of the linked account.

        :return: The linked_account_id of this LinkedAccount.
        :rtype: str
        """
        return self._linked_account_id

    @linked_account_id.setter
    def linked_account_id(self, linked_account_id):
        """Sets the linked_account_id of this LinkedAccount.

        The ID of the linked account.

        :param linked_account_id: The linked_account_id of this LinkedAccount.
        :type linked_account_id: str
        """

        self._linked_account_id = linked_account_id

    @property
    def services(self):
        """Gets the services of this LinkedAccount.

        List of provided services.

        :return: The services of this LinkedAccount.
        :rtype: List[LinkService]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this LinkedAccount.

        List of provided services.

        :param services: The services of this LinkedAccount.
        :type services: List[LinkService]
        """

        self._services = services
