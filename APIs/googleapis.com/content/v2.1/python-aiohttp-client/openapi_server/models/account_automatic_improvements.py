# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_image_improvements import AccountImageImprovements
from openapi_server.models.account_item_updates import AccountItemUpdates
from openapi_server.models.account_shipping_improvements import AccountShippingImprovements
from openapi_server import util


class AccountAutomaticImprovements(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_improvements: AccountImageImprovements=None, item_updates: AccountItemUpdates=None, shipping_improvements: AccountShippingImprovements=None):
        """AccountAutomaticImprovements - a model defined in OpenAPI

        :param image_improvements: The image_improvements of this AccountAutomaticImprovements.
        :param item_updates: The item_updates of this AccountAutomaticImprovements.
        :param shipping_improvements: The shipping_improvements of this AccountAutomaticImprovements.
        """
        self.openapi_types = {
            'image_improvements': AccountImageImprovements,
            'item_updates': AccountItemUpdates,
            'shipping_improvements': AccountShippingImprovements
        }

        self.attribute_map = {
            'image_improvements': 'imageImprovements',
            'item_updates': 'itemUpdates',
            'shipping_improvements': 'shippingImprovements'
        }

        self._image_improvements = image_improvements
        self._item_updates = item_updates
        self._shipping_improvements = shipping_improvements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountAutomaticImprovements':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountAutomaticImprovements of this AccountAutomaticImprovements.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_improvements(self):
        """Gets the image_improvements of this AccountAutomaticImprovements.


        :return: The image_improvements of this AccountAutomaticImprovements.
        :rtype: AccountImageImprovements
        """
        return self._image_improvements

    @image_improvements.setter
    def image_improvements(self, image_improvements):
        """Sets the image_improvements of this AccountAutomaticImprovements.


        :param image_improvements: The image_improvements of this AccountAutomaticImprovements.
        :type image_improvements: AccountImageImprovements
        """

        self._image_improvements = image_improvements

    @property
    def item_updates(self):
        """Gets the item_updates of this AccountAutomaticImprovements.


        :return: The item_updates of this AccountAutomaticImprovements.
        :rtype: AccountItemUpdates
        """
        return self._item_updates

    @item_updates.setter
    def item_updates(self, item_updates):
        """Sets the item_updates of this AccountAutomaticImprovements.


        :param item_updates: The item_updates of this AccountAutomaticImprovements.
        :type item_updates: AccountItemUpdates
        """

        self._item_updates = item_updates

    @property
    def shipping_improvements(self):
        """Gets the shipping_improvements of this AccountAutomaticImprovements.


        :return: The shipping_improvements of this AccountAutomaticImprovements.
        :rtype: AccountShippingImprovements
        """
        return self._shipping_improvements

    @shipping_improvements.setter
    def shipping_improvements(self, shipping_improvements):
        """Sets the shipping_improvements of this AccountAutomaticImprovements.


        :param shipping_improvements: The shipping_improvements of this AccountAutomaticImprovements.
        :type shipping_improvements: AccountShippingImprovements
        """

        self._shipping_improvements = shipping_improvements
