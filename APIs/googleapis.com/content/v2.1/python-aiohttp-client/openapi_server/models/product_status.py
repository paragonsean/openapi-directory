# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.product_status_destination_status import ProductStatusDestinationStatus
from openapi_server.models.product_status_item_level_issue import ProductStatusItemLevelIssue
from openapi_server import util


class ProductStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_date: str=None, destination_statuses: List[ProductStatusDestinationStatus]=None, google_expiration_date: str=None, item_level_issues: List[ProductStatusItemLevelIssue]=None, kind: str=None, last_update_date: str=None, link: str=None, product_id: str=None, title: str=None):
        """ProductStatus - a model defined in OpenAPI

        :param creation_date: The creation_date of this ProductStatus.
        :param destination_statuses: The destination_statuses of this ProductStatus.
        :param google_expiration_date: The google_expiration_date of this ProductStatus.
        :param item_level_issues: The item_level_issues of this ProductStatus.
        :param kind: The kind of this ProductStatus.
        :param last_update_date: The last_update_date of this ProductStatus.
        :param link: The link of this ProductStatus.
        :param product_id: The product_id of this ProductStatus.
        :param title: The title of this ProductStatus.
        """
        self.openapi_types = {
            'creation_date': str,
            'destination_statuses': List[ProductStatusDestinationStatus],
            'google_expiration_date': str,
            'item_level_issues': List[ProductStatusItemLevelIssue],
            'kind': str,
            'last_update_date': str,
            'link': str,
            'product_id': str,
            'title': str
        }

        self.attribute_map = {
            'creation_date': 'creationDate',
            'destination_statuses': 'destinationStatuses',
            'google_expiration_date': 'googleExpirationDate',
            'item_level_issues': 'itemLevelIssues',
            'kind': 'kind',
            'last_update_date': 'lastUpdateDate',
            'link': 'link',
            'product_id': 'productId',
            'title': 'title'
        }

        self._creation_date = creation_date
        self._destination_statuses = destination_statuses
        self._google_expiration_date = google_expiration_date
        self._item_level_issues = item_level_issues
        self._kind = kind
        self._last_update_date = last_update_date
        self._link = link
        self._product_id = product_id
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductStatus of this ProductStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_date(self):
        """Gets the creation_date of this ProductStatus.

        Date on which the item has been created, in ISO 8601 format.

        :return: The creation_date of this ProductStatus.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this ProductStatus.

        Date on which the item has been created, in ISO 8601 format.

        :param creation_date: The creation_date of this ProductStatus.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def destination_statuses(self):
        """Gets the destination_statuses of this ProductStatus.

        The intended destinations for the product.

        :return: The destination_statuses of this ProductStatus.
        :rtype: List[ProductStatusDestinationStatus]
        """
        return self._destination_statuses

    @destination_statuses.setter
    def destination_statuses(self, destination_statuses):
        """Sets the destination_statuses of this ProductStatus.

        The intended destinations for the product.

        :param destination_statuses: The destination_statuses of this ProductStatus.
        :type destination_statuses: List[ProductStatusDestinationStatus]
        """

        self._destination_statuses = destination_statuses

    @property
    def google_expiration_date(self):
        """Gets the google_expiration_date of this ProductStatus.

        Date on which the item expires in Google Shopping, in ISO 8601 format.

        :return: The google_expiration_date of this ProductStatus.
        :rtype: str
        """
        return self._google_expiration_date

    @google_expiration_date.setter
    def google_expiration_date(self, google_expiration_date):
        """Sets the google_expiration_date of this ProductStatus.

        Date on which the item expires in Google Shopping, in ISO 8601 format.

        :param google_expiration_date: The google_expiration_date of this ProductStatus.
        :type google_expiration_date: str
        """

        self._google_expiration_date = google_expiration_date

    @property
    def item_level_issues(self):
        """Gets the item_level_issues of this ProductStatus.

        A list of all issues associated with the product.

        :return: The item_level_issues of this ProductStatus.
        :rtype: List[ProductStatusItemLevelIssue]
        """
        return self._item_level_issues

    @item_level_issues.setter
    def item_level_issues(self, item_level_issues):
        """Sets the item_level_issues of this ProductStatus.

        A list of all issues associated with the product.

        :param item_level_issues: The item_level_issues of this ProductStatus.
        :type item_level_issues: List[ProductStatusItemLevelIssue]
        """

        self._item_level_issues = item_level_issues

    @property
    def kind(self):
        """Gets the kind of this ProductStatus.

        Identifies what kind of resource this is. Value: the fixed string \"`content#productStatus`\"

        :return: The kind of this ProductStatus.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ProductStatus.

        Identifies what kind of resource this is. Value: the fixed string \"`content#productStatus`\"

        :param kind: The kind of this ProductStatus.
        :type kind: str
        """

        self._kind = kind

    @property
    def last_update_date(self):
        """Gets the last_update_date of this ProductStatus.

        Date on which the item has been last updated, in ISO 8601 format.

        :return: The last_update_date of this ProductStatus.
        :rtype: str
        """
        return self._last_update_date

    @last_update_date.setter
    def last_update_date(self, last_update_date):
        """Sets the last_update_date of this ProductStatus.

        Date on which the item has been last updated, in ISO 8601 format.

        :param last_update_date: The last_update_date of this ProductStatus.
        :type last_update_date: str
        """

        self._last_update_date = last_update_date

    @property
    def link(self):
        """Gets the link of this ProductStatus.

        The link to the product.

        :return: The link of this ProductStatus.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this ProductStatus.

        The link to the product.

        :param link: The link of this ProductStatus.
        :type link: str
        """

        self._link = link

    @property
    def product_id(self):
        """Gets the product_id of this ProductStatus.

        The ID of the product for which status is reported.

        :return: The product_id of this ProductStatus.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this ProductStatus.

        The ID of the product for which status is reported.

        :param product_id: The product_id of this ProductStatus.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def title(self):
        """Gets the title of this ProductStatus.

        The title of the product.

        :return: The title of this ProductStatus.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ProductStatus.

        The title of the product.

        :param title: The title of this ProductStatus.
        :type title: str
        """

        self._title = title
