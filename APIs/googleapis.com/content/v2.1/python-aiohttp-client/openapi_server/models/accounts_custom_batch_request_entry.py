# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account import Account
from openapi_server.models.accounts_custom_batch_request_entry_link_request import AccountsCustomBatchRequestEntryLinkRequest
from openapi_server import util


class AccountsCustomBatchRequestEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account: Account=None, account_id: str=None, batch_id: int=None, force: bool=None, label_ids: List[str]=None, link_request: AccountsCustomBatchRequestEntryLinkRequest=None, merchant_id: str=None, method: str=None, overwrite: bool=None, view: str=None):
        """AccountsCustomBatchRequestEntry - a model defined in OpenAPI

        :param account: The account of this AccountsCustomBatchRequestEntry.
        :param account_id: The account_id of this AccountsCustomBatchRequestEntry.
        :param batch_id: The batch_id of this AccountsCustomBatchRequestEntry.
        :param force: The force of this AccountsCustomBatchRequestEntry.
        :param label_ids: The label_ids of this AccountsCustomBatchRequestEntry.
        :param link_request: The link_request of this AccountsCustomBatchRequestEntry.
        :param merchant_id: The merchant_id of this AccountsCustomBatchRequestEntry.
        :param method: The method of this AccountsCustomBatchRequestEntry.
        :param overwrite: The overwrite of this AccountsCustomBatchRequestEntry.
        :param view: The view of this AccountsCustomBatchRequestEntry.
        """
        self.openapi_types = {
            'account': Account,
            'account_id': str,
            'batch_id': int,
            'force': bool,
            'label_ids': List[str],
            'link_request': AccountsCustomBatchRequestEntryLinkRequest,
            'merchant_id': str,
            'method': str,
            'overwrite': bool,
            'view': str
        }

        self.attribute_map = {
            'account': 'account',
            'account_id': 'accountId',
            'batch_id': 'batchId',
            'force': 'force',
            'label_ids': 'labelIds',
            'link_request': 'linkRequest',
            'merchant_id': 'merchantId',
            'method': 'method',
            'overwrite': 'overwrite',
            'view': 'view'
        }

        self._account = account
        self._account_id = account_id
        self._batch_id = batch_id
        self._force = force
        self._label_ids = label_ids
        self._link_request = link_request
        self._merchant_id = merchant_id
        self._method = method
        self._overwrite = overwrite
        self._view = view

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountsCustomBatchRequestEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountsCustomBatchRequestEntry of this AccountsCustomBatchRequestEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account(self):
        """Gets the account of this AccountsCustomBatchRequestEntry.


        :return: The account of this AccountsCustomBatchRequestEntry.
        :rtype: Account
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this AccountsCustomBatchRequestEntry.


        :param account: The account of this AccountsCustomBatchRequestEntry.
        :type account: Account
        """

        self._account = account

    @property
    def account_id(self):
        """Gets the account_id of this AccountsCustomBatchRequestEntry.

        The ID of the targeted account. Only defined if the method is not `insert`.

        :return: The account_id of this AccountsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this AccountsCustomBatchRequestEntry.

        The ID of the targeted account. Only defined if the method is not `insert`.

        :param account_id: The account_id of this AccountsCustomBatchRequestEntry.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def batch_id(self):
        """Gets the batch_id of this AccountsCustomBatchRequestEntry.

        An entry ID, unique within the batch request.

        :return: The batch_id of this AccountsCustomBatchRequestEntry.
        :rtype: int
        """
        return self._batch_id

    @batch_id.setter
    def batch_id(self, batch_id):
        """Sets the batch_id of this AccountsCustomBatchRequestEntry.

        An entry ID, unique within the batch request.

        :param batch_id: The batch_id of this AccountsCustomBatchRequestEntry.
        :type batch_id: int
        """

        self._batch_id = batch_id

    @property
    def force(self):
        """Gets the force of this AccountsCustomBatchRequestEntry.

        Whether the account should be deleted if the account has offers. Only applicable if the method is `delete`.

        :return: The force of this AccountsCustomBatchRequestEntry.
        :rtype: bool
        """
        return self._force

    @force.setter
    def force(self, force):
        """Sets the force of this AccountsCustomBatchRequestEntry.

        Whether the account should be deleted if the account has offers. Only applicable if the method is `delete`.

        :param force: The force of this AccountsCustomBatchRequestEntry.
        :type force: bool
        """

        self._force = force

    @property
    def label_ids(self):
        """Gets the label_ids of this AccountsCustomBatchRequestEntry.

        Label IDs for the 'updatelabels' request.

        :return: The label_ids of this AccountsCustomBatchRequestEntry.
        :rtype: List[str]
        """
        return self._label_ids

    @label_ids.setter
    def label_ids(self, label_ids):
        """Sets the label_ids of this AccountsCustomBatchRequestEntry.

        Label IDs for the 'updatelabels' request.

        :param label_ids: The label_ids of this AccountsCustomBatchRequestEntry.
        :type label_ids: List[str]
        """

        self._label_ids = label_ids

    @property
    def link_request(self):
        """Gets the link_request of this AccountsCustomBatchRequestEntry.


        :return: The link_request of this AccountsCustomBatchRequestEntry.
        :rtype: AccountsCustomBatchRequestEntryLinkRequest
        """
        return self._link_request

    @link_request.setter
    def link_request(self, link_request):
        """Sets the link_request of this AccountsCustomBatchRequestEntry.


        :param link_request: The link_request of this AccountsCustomBatchRequestEntry.
        :type link_request: AccountsCustomBatchRequestEntryLinkRequest
        """

        self._link_request = link_request

    @property
    def merchant_id(self):
        """Gets the merchant_id of this AccountsCustomBatchRequestEntry.

        The ID of the managing account.

        :return: The merchant_id of this AccountsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """Sets the merchant_id of this AccountsCustomBatchRequestEntry.

        The ID of the managing account.

        :param merchant_id: The merchant_id of this AccountsCustomBatchRequestEntry.
        :type merchant_id: str
        """

        self._merchant_id = merchant_id

    @property
    def method(self):
        """Gets the method of this AccountsCustomBatchRequestEntry.

        The method of the batch entry. Acceptable values are: - \"`claimWebsite`\" - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`link`\" - \"`update`\" 

        :return: The method of this AccountsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this AccountsCustomBatchRequestEntry.

        The method of the batch entry. Acceptable values are: - \"`claimWebsite`\" - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`link`\" - \"`update`\" 

        :param method: The method of this AccountsCustomBatchRequestEntry.
        :type method: str
        """

        self._method = method

    @property
    def overwrite(self):
        """Gets the overwrite of this AccountsCustomBatchRequestEntry.

        Only applicable if the method is `claimwebsite`. Indicates whether or not to take the claim from another account in case there is a conflict.

        :return: The overwrite of this AccountsCustomBatchRequestEntry.
        :rtype: bool
        """
        return self._overwrite

    @overwrite.setter
    def overwrite(self, overwrite):
        """Sets the overwrite of this AccountsCustomBatchRequestEntry.

        Only applicable if the method is `claimwebsite`. Indicates whether or not to take the claim from another account in case there is a conflict.

        :param overwrite: The overwrite of this AccountsCustomBatchRequestEntry.
        :type overwrite: bool
        """

        self._overwrite = overwrite

    @property
    def view(self):
        """Gets the view of this AccountsCustomBatchRequestEntry.

        Controls which fields are visible. Only applicable if the method is 'get'.

        :return: The view of this AccountsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._view

    @view.setter
    def view(self, view):
        """Sets the view of this AccountsCustomBatchRequestEntry.

        Controls which fields are visible. Only applicable if the method is 'get'.

        :param view: The view of this AccountsCustomBatchRequestEntry.
        :type view: str
        """

        self._view = view
