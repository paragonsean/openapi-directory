# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price import Price
from openapi_server.models.return_policy_policy import ReturnPolicyPolicy
from openapi_server.models.return_policy_seasonal_override import ReturnPolicySeasonalOverride
from openapi_server import util


class ReturnPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, kind: str=None, label: str=None, name: str=None, non_free_return_reasons: List[str]=None, policy: ReturnPolicyPolicy=None, return_policy_id: str=None, return_shipping_fee: Price=None, seasonal_overrides: List[ReturnPolicySeasonalOverride]=None):
        """ReturnPolicy - a model defined in OpenAPI

        :param country: The country of this ReturnPolicy.
        :param kind: The kind of this ReturnPolicy.
        :param label: The label of this ReturnPolicy.
        :param name: The name of this ReturnPolicy.
        :param non_free_return_reasons: The non_free_return_reasons of this ReturnPolicy.
        :param policy: The policy of this ReturnPolicy.
        :param return_policy_id: The return_policy_id of this ReturnPolicy.
        :param return_shipping_fee: The return_shipping_fee of this ReturnPolicy.
        :param seasonal_overrides: The seasonal_overrides of this ReturnPolicy.
        """
        self.openapi_types = {
            'country': str,
            'kind': str,
            'label': str,
            'name': str,
            'non_free_return_reasons': List[str],
            'policy': ReturnPolicyPolicy,
            'return_policy_id': str,
            'return_shipping_fee': Price,
            'seasonal_overrides': List[ReturnPolicySeasonalOverride]
        }

        self.attribute_map = {
            'country': 'country',
            'kind': 'kind',
            'label': 'label',
            'name': 'name',
            'non_free_return_reasons': 'nonFreeReturnReasons',
            'policy': 'policy',
            'return_policy_id': 'returnPolicyId',
            'return_shipping_fee': 'returnShippingFee',
            'seasonal_overrides': 'seasonalOverrides'
        }

        self._country = country
        self._kind = kind
        self._label = label
        self._name = name
        self._non_free_return_reasons = non_free_return_reasons
        self._policy = policy
        self._return_policy_id = return_policy_id
        self._return_shipping_fee = return_shipping_fee
        self._seasonal_overrides = seasonal_overrides

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReturnPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReturnPolicy of this ReturnPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this ReturnPolicy.

        Required. The country of sale where the return policy is applicable.

        :return: The country of this ReturnPolicy.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this ReturnPolicy.

        Required. The country of sale where the return policy is applicable.

        :param country: The country of this ReturnPolicy.
        :type country: str
        """

        self._country = country

    @property
    def kind(self):
        """Gets the kind of this ReturnPolicy.

        Identifies what kind of resource this is. Value: the fixed string \"`content#returnPolicy`\"

        :return: The kind of this ReturnPolicy.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ReturnPolicy.

        Identifies what kind of resource this is. Value: the fixed string \"`content#returnPolicy`\"

        :param kind: The kind of this ReturnPolicy.
        :type kind: str
        """

        self._kind = kind

    @property
    def label(self):
        """Gets the label of this ReturnPolicy.

        Required. The user-defined label of the return policy. For the default policy, use the label \"default\".

        :return: The label of this ReturnPolicy.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this ReturnPolicy.

        Required. The user-defined label of the return policy. For the default policy, use the label \"default\".

        :param label: The label of this ReturnPolicy.
        :type label: str
        """

        self._label = label

    @property
    def name(self):
        """Gets the name of this ReturnPolicy.

        Required. The name of the policy as shown in Merchant Center.

        :return: The name of this ReturnPolicy.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ReturnPolicy.

        Required. The name of the policy as shown in Merchant Center.

        :param name: The name of this ReturnPolicy.
        :type name: str
        """

        self._name = name

    @property
    def non_free_return_reasons(self):
        """Gets the non_free_return_reasons of this ReturnPolicy.

        Return reasons that will incur return fees.

        :return: The non_free_return_reasons of this ReturnPolicy.
        :rtype: List[str]
        """
        return self._non_free_return_reasons

    @non_free_return_reasons.setter
    def non_free_return_reasons(self, non_free_return_reasons):
        """Sets the non_free_return_reasons of this ReturnPolicy.

        Return reasons that will incur return fees.

        :param non_free_return_reasons: The non_free_return_reasons of this ReturnPolicy.
        :type non_free_return_reasons: List[str]
        """

        self._non_free_return_reasons = non_free_return_reasons

    @property
    def policy(self):
        """Gets the policy of this ReturnPolicy.


        :return: The policy of this ReturnPolicy.
        :rtype: ReturnPolicyPolicy
        """
        return self._policy

    @policy.setter
    def policy(self, policy):
        """Sets the policy of this ReturnPolicy.


        :param policy: The policy of this ReturnPolicy.
        :type policy: ReturnPolicyPolicy
        """

        self._policy = policy

    @property
    def return_policy_id(self):
        """Gets the return_policy_id of this ReturnPolicy.

        Return policy ID generated by Google.

        :return: The return_policy_id of this ReturnPolicy.
        :rtype: str
        """
        return self._return_policy_id

    @return_policy_id.setter
    def return_policy_id(self, return_policy_id):
        """Sets the return_policy_id of this ReturnPolicy.

        Return policy ID generated by Google.

        :param return_policy_id: The return_policy_id of this ReturnPolicy.
        :type return_policy_id: str
        """

        self._return_policy_id = return_policy_id

    @property
    def return_shipping_fee(self):
        """Gets the return_shipping_fee of this ReturnPolicy.


        :return: The return_shipping_fee of this ReturnPolicy.
        :rtype: Price
        """
        return self._return_shipping_fee

    @return_shipping_fee.setter
    def return_shipping_fee(self, return_shipping_fee):
        """Sets the return_shipping_fee of this ReturnPolicy.


        :param return_shipping_fee: The return_shipping_fee of this ReturnPolicy.
        :type return_shipping_fee: Price
        """

        self._return_shipping_fee = return_shipping_fee

    @property
    def seasonal_overrides(self):
        """Gets the seasonal_overrides of this ReturnPolicy.

        An optional list of seasonal overrides.

        :return: The seasonal_overrides of this ReturnPolicy.
        :rtype: List[ReturnPolicySeasonalOverride]
        """
        return self._seasonal_overrides

    @seasonal_overrides.setter
    def seasonal_overrides(self, seasonal_overrides):
        """Sets the seasonal_overrides of this ReturnPolicy.

        An optional list of seasonal overrides.

        :param seasonal_overrides: The seasonal_overrides of this ReturnPolicy.
        :type seasonal_overrides: List[ReturnPolicySeasonalOverride]
        """

        self._seasonal_overrides = seasonal_overrides
