# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_item_updates_settings import AccountItemUpdatesSettings
from openapi_server import util


class AccountItemUpdates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_item_updates_settings: AccountItemUpdatesSettings=None, effective_allow_availability_updates: bool=None, effective_allow_condition_updates: bool=None, effective_allow_price_updates: bool=None, effective_allow_strict_availability_updates: bool=None):
        """AccountItemUpdates - a model defined in OpenAPI

        :param account_item_updates_settings: The account_item_updates_settings of this AccountItemUpdates.
        :param effective_allow_availability_updates: The effective_allow_availability_updates of this AccountItemUpdates.
        :param effective_allow_condition_updates: The effective_allow_condition_updates of this AccountItemUpdates.
        :param effective_allow_price_updates: The effective_allow_price_updates of this AccountItemUpdates.
        :param effective_allow_strict_availability_updates: The effective_allow_strict_availability_updates of this AccountItemUpdates.
        """
        self.openapi_types = {
            'account_item_updates_settings': AccountItemUpdatesSettings,
            'effective_allow_availability_updates': bool,
            'effective_allow_condition_updates': bool,
            'effective_allow_price_updates': bool,
            'effective_allow_strict_availability_updates': bool
        }

        self.attribute_map = {
            'account_item_updates_settings': 'accountItemUpdatesSettings',
            'effective_allow_availability_updates': 'effectiveAllowAvailabilityUpdates',
            'effective_allow_condition_updates': 'effectiveAllowConditionUpdates',
            'effective_allow_price_updates': 'effectiveAllowPriceUpdates',
            'effective_allow_strict_availability_updates': 'effectiveAllowStrictAvailabilityUpdates'
        }

        self._account_item_updates_settings = account_item_updates_settings
        self._effective_allow_availability_updates = effective_allow_availability_updates
        self._effective_allow_condition_updates = effective_allow_condition_updates
        self._effective_allow_price_updates = effective_allow_price_updates
        self._effective_allow_strict_availability_updates = effective_allow_strict_availability_updates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountItemUpdates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountItemUpdates of this AccountItemUpdates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_item_updates_settings(self):
        """Gets the account_item_updates_settings of this AccountItemUpdates.


        :return: The account_item_updates_settings of this AccountItemUpdates.
        :rtype: AccountItemUpdatesSettings
        """
        return self._account_item_updates_settings

    @account_item_updates_settings.setter
    def account_item_updates_settings(self, account_item_updates_settings):
        """Sets the account_item_updates_settings of this AccountItemUpdates.


        :param account_item_updates_settings: The account_item_updates_settings of this AccountItemUpdates.
        :type account_item_updates_settings: AccountItemUpdatesSettings
        """

        self._account_item_updates_settings = account_item_updates_settings

    @property
    def effective_allow_availability_updates(self):
        """Gets the effective_allow_availability_updates of this AccountItemUpdates.

        Output only. The effective value of allow_availability_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.

        :return: The effective_allow_availability_updates of this AccountItemUpdates.
        :rtype: bool
        """
        return self._effective_allow_availability_updates

    @effective_allow_availability_updates.setter
    def effective_allow_availability_updates(self, effective_allow_availability_updates):
        """Sets the effective_allow_availability_updates of this AccountItemUpdates.

        Output only. The effective value of allow_availability_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.

        :param effective_allow_availability_updates: The effective_allow_availability_updates of this AccountItemUpdates.
        :type effective_allow_availability_updates: bool
        """

        self._effective_allow_availability_updates = effective_allow_availability_updates

    @property
    def effective_allow_condition_updates(self):
        """Gets the effective_allow_condition_updates of this AccountItemUpdates.

        Output only. The effective value of allow_condition_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.

        :return: The effective_allow_condition_updates of this AccountItemUpdates.
        :rtype: bool
        """
        return self._effective_allow_condition_updates

    @effective_allow_condition_updates.setter
    def effective_allow_condition_updates(self, effective_allow_condition_updates):
        """Sets the effective_allow_condition_updates of this AccountItemUpdates.

        Output only. The effective value of allow_condition_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.

        :param effective_allow_condition_updates: The effective_allow_condition_updates of this AccountItemUpdates.
        :type effective_allow_condition_updates: bool
        """

        self._effective_allow_condition_updates = effective_allow_condition_updates

    @property
    def effective_allow_price_updates(self):
        """Gets the effective_allow_price_updates of this AccountItemUpdates.

        Output only. The effective value of allow_price_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.

        :return: The effective_allow_price_updates of this AccountItemUpdates.
        :rtype: bool
        """
        return self._effective_allow_price_updates

    @effective_allow_price_updates.setter
    def effective_allow_price_updates(self, effective_allow_price_updates):
        """Sets the effective_allow_price_updates of this AccountItemUpdates.

        Output only. The effective value of allow_price_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.

        :param effective_allow_price_updates: The effective_allow_price_updates of this AccountItemUpdates.
        :type effective_allow_price_updates: bool
        """

        self._effective_allow_price_updates = effective_allow_price_updates

    @property
    def effective_allow_strict_availability_updates(self):
        """Gets the effective_allow_strict_availability_updates of this AccountItemUpdates.

        Output only. The effective value of allow_strict_availability_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.

        :return: The effective_allow_strict_availability_updates of this AccountItemUpdates.
        :rtype: bool
        """
        return self._effective_allow_strict_availability_updates

    @effective_allow_strict_availability_updates.setter
    def effective_allow_strict_availability_updates(self, effective_allow_strict_availability_updates):
        """Sets the effective_allow_strict_availability_updates of this AccountItemUpdates.

        Output only. The effective value of allow_strict_availability_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.

        :param effective_allow_strict_availability_updates: The effective_allow_strict_availability_updates of this AccountItemUpdates.
        :type effective_allow_strict_availability_updates: bool
        """

        self._effective_allow_strict_availability_updates = effective_allow_strict_availability_updates
