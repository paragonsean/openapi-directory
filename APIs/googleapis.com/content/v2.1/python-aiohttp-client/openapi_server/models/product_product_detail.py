# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductProductDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute_name: str=None, attribute_value: str=None, section_name: str=None):
        """ProductProductDetail - a model defined in OpenAPI

        :param attribute_name: The attribute_name of this ProductProductDetail.
        :param attribute_value: The attribute_value of this ProductProductDetail.
        :param section_name: The section_name of this ProductProductDetail.
        """
        self.openapi_types = {
            'attribute_name': str,
            'attribute_value': str,
            'section_name': str
        }

        self.attribute_map = {
            'attribute_name': 'attributeName',
            'attribute_value': 'attributeValue',
            'section_name': 'sectionName'
        }

        self._attribute_name = attribute_name
        self._attribute_value = attribute_value
        self._section_name = section_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductProductDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductProductDetail of this ProductProductDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_name(self):
        """Gets the attribute_name of this ProductProductDetail.

        The name of the product detail.

        :return: The attribute_name of this ProductProductDetail.
        :rtype: str
        """
        return self._attribute_name

    @attribute_name.setter
    def attribute_name(self, attribute_name):
        """Sets the attribute_name of this ProductProductDetail.

        The name of the product detail.

        :param attribute_name: The attribute_name of this ProductProductDetail.
        :type attribute_name: str
        """

        self._attribute_name = attribute_name

    @property
    def attribute_value(self):
        """Gets the attribute_value of this ProductProductDetail.

        The value of the product detail.

        :return: The attribute_value of this ProductProductDetail.
        :rtype: str
        """
        return self._attribute_value

    @attribute_value.setter
    def attribute_value(self, attribute_value):
        """Sets the attribute_value of this ProductProductDetail.

        The value of the product detail.

        :param attribute_value: The attribute_value of this ProductProductDetail.
        :type attribute_value: str
        """

        self._attribute_value = attribute_value

    @property
    def section_name(self):
        """Gets the section_name of this ProductProductDetail.

        The section header used to group a set of product details.

        :return: The section_name of this ProductProductDetail.
        :rtype: str
        """
        return self._section_name

    @section_name.setter
    def section_name(self, section_name):
        """Sets the section_name of this ProductProductDetail.

        The section header used to group a set of product details.

        :param section_name: The section_name of this ProductProductDetail.
        :type section_name: str
        """

        self._section_name = section_name
