# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price import Price
from openapi_server import util


class ProductAmount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, price_amount: Price=None, remitted_tax_amount: Price=None, tax_amount: Price=None):
        """ProductAmount - a model defined in OpenAPI

        :param price_amount: The price_amount of this ProductAmount.
        :param remitted_tax_amount: The remitted_tax_amount of this ProductAmount.
        :param tax_amount: The tax_amount of this ProductAmount.
        """
        self.openapi_types = {
            'price_amount': Price,
            'remitted_tax_amount': Price,
            'tax_amount': Price
        }

        self.attribute_map = {
            'price_amount': 'priceAmount',
            'remitted_tax_amount': 'remittedTaxAmount',
            'tax_amount': 'taxAmount'
        }

        self._price_amount = price_amount
        self._remitted_tax_amount = remitted_tax_amount
        self._tax_amount = tax_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductAmount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductAmount of this ProductAmount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def price_amount(self):
        """Gets the price_amount of this ProductAmount.


        :return: The price_amount of this ProductAmount.
        :rtype: Price
        """
        return self._price_amount

    @price_amount.setter
    def price_amount(self, price_amount):
        """Sets the price_amount of this ProductAmount.


        :param price_amount: The price_amount of this ProductAmount.
        :type price_amount: Price
        """

        self._price_amount = price_amount

    @property
    def remitted_tax_amount(self):
        """Gets the remitted_tax_amount of this ProductAmount.


        :return: The remitted_tax_amount of this ProductAmount.
        :rtype: Price
        """
        return self._remitted_tax_amount

    @remitted_tax_amount.setter
    def remitted_tax_amount(self, remitted_tax_amount):
        """Sets the remitted_tax_amount of this ProductAmount.


        :param remitted_tax_amount: The remitted_tax_amount of this ProductAmount.
        :type remitted_tax_amount: Price
        """

        self._remitted_tax_amount = remitted_tax_amount

    @property
    def tax_amount(self):
        """Gets the tax_amount of this ProductAmount.


        :return: The tax_amount of this ProductAmount.
        :rtype: Price
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this ProductAmount.


        :param tax_amount: The tax_amount of this ProductAmount.
        :type tax_amount: Price
        """

        self._tax_amount = tax_amount
