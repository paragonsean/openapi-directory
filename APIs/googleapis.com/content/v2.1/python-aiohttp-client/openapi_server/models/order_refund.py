# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price import Price
from openapi_server import util


class OrderRefund(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actor: str=None, amount: Price=None, creation_date: str=None, reason: str=None, reason_text: str=None):
        """OrderRefund - a model defined in OpenAPI

        :param actor: The actor of this OrderRefund.
        :param amount: The amount of this OrderRefund.
        :param creation_date: The creation_date of this OrderRefund.
        :param reason: The reason of this OrderRefund.
        :param reason_text: The reason_text of this OrderRefund.
        """
        self.openapi_types = {
            'actor': str,
            'amount': Price,
            'creation_date': str,
            'reason': str,
            'reason_text': str
        }

        self.attribute_map = {
            'actor': 'actor',
            'amount': 'amount',
            'creation_date': 'creationDate',
            'reason': 'reason',
            'reason_text': 'reasonText'
        }

        self._actor = actor
        self._amount = amount
        self._creation_date = creation_date
        self._reason = reason
        self._reason_text = reason_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderRefund':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderRefund of this OrderRefund.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actor(self):
        """Gets the actor of this OrderRefund.

        The actor that created the refund. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" 

        :return: The actor of this OrderRefund.
        :rtype: str
        """
        return self._actor

    @actor.setter
    def actor(self, actor):
        """Sets the actor of this OrderRefund.

        The actor that created the refund. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" 

        :param actor: The actor of this OrderRefund.
        :type actor: str
        """

        self._actor = actor

    @property
    def amount(self):
        """Gets the amount of this OrderRefund.


        :return: The amount of this OrderRefund.
        :rtype: Price
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this OrderRefund.


        :param amount: The amount of this OrderRefund.
        :type amount: Price
        """

        self._amount = amount

    @property
    def creation_date(self):
        """Gets the creation_date of this OrderRefund.

        Date on which the item has been created, in ISO 8601 format.

        :return: The creation_date of this OrderRefund.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this OrderRefund.

        Date on which the item has been created, in ISO 8601 format.

        :param creation_date: The creation_date of this OrderRefund.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def reason(self):
        """Gets the reason of this OrderRefund.

        The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" 

        :return: The reason of this OrderRefund.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this OrderRefund.

        The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" 

        :param reason: The reason of this OrderRefund.
        :type reason: str
        """

        self._reason = reason

    @property
    def reason_text(self):
        """Gets the reason_text of this OrderRefund.

        The explanation of the reason.

        :return: The reason_text of this OrderRefund.
        :rtype: str
        """
        return self._reason_text

    @reason_text.setter
    def reason_text(self, reason_text):
        """Sets the reason_text of this OrderRefund.

        The explanation of the reason.

        :param reason_text: The reason_text of this OrderRefund.
        :type reason_text: str
        """

        self._reason_text = reason_text
