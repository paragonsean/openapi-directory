/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Price from './Price';

/**
 * The PosInventoryResponse model module.
 * @module model/PosInventoryResponse
 * @version v2
 */
class PosInventoryResponse {
    /**
     * Constructs a new <code>PosInventoryResponse</code>.
     * @alias module:model/PosInventoryResponse
     */
    constructor() { 
        
        PosInventoryResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PosInventoryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PosInventoryResponse} obj Optional instance to populate.
     * @return {module:model/PosInventoryResponse} The populated <code>PosInventoryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PosInventoryResponse();

            if (data.hasOwnProperty('contentLanguage')) {
                obj['contentLanguage'] = ApiClient.convertToType(data['contentLanguage'], 'String');
            }
            if (data.hasOwnProperty('gtin')) {
                obj['gtin'] = ApiClient.convertToType(data['gtin'], 'String');
            }
            if (data.hasOwnProperty('itemId')) {
                obj['itemId'] = ApiClient.convertToType(data['itemId'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = Price.constructFromObject(data['price']);
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'String');
            }
            if (data.hasOwnProperty('storeCode')) {
                obj['storeCode'] = ApiClient.convertToType(data['storeCode'], 'String');
            }
            if (data.hasOwnProperty('targetCountry')) {
                obj['targetCountry'] = ApiClient.convertToType(data['targetCountry'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PosInventoryResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PosInventoryResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['contentLanguage'] && !(typeof data['contentLanguage'] === 'string' || data['contentLanguage'] instanceof String)) {
            throw new Error("Expected the field `contentLanguage` to be a primitive type in the JSON string but got " + data['contentLanguage']);
        }
        // ensure the json data is a string
        if (data['gtin'] && !(typeof data['gtin'] === 'string' || data['gtin'] instanceof String)) {
            throw new Error("Expected the field `gtin` to be a primitive type in the JSON string but got " + data['gtin']);
        }
        // ensure the json data is a string
        if (data['itemId'] && !(typeof data['itemId'] === 'string' || data['itemId'] instanceof String)) {
            throw new Error("Expected the field `itemId` to be a primitive type in the JSON string but got " + data['itemId']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `price`
        if (data['price']) { // data not null
          Price.validateJSON(data['price']);
        }
        // ensure the json data is a string
        if (data['quantity'] && !(typeof data['quantity'] === 'string' || data['quantity'] instanceof String)) {
            throw new Error("Expected the field `quantity` to be a primitive type in the JSON string but got " + data['quantity']);
        }
        // ensure the json data is a string
        if (data['storeCode'] && !(typeof data['storeCode'] === 'string' || data['storeCode'] instanceof String)) {
            throw new Error("Expected the field `storeCode` to be a primitive type in the JSON string but got " + data['storeCode']);
        }
        // ensure the json data is a string
        if (data['targetCountry'] && !(typeof data['targetCountry'] === 'string' || data['targetCountry'] instanceof String)) {
            throw new Error("Expected the field `targetCountry` to be a primitive type in the JSON string but got " + data['targetCountry']);
        }
        // ensure the json data is a string
        if (data['timestamp'] && !(typeof data['timestamp'] === 'string' || data['timestamp'] instanceof String)) {
            throw new Error("Expected the field `timestamp` to be a primitive type in the JSON string but got " + data['timestamp']);
        }

        return true;
    }


}



/**
 * Required. The two-letter ISO 639-1 language code for the item.
 * @member {String} contentLanguage
 */
PosInventoryResponse.prototype['contentLanguage'] = undefined;

/**
 * Global Trade Item Number.
 * @member {String} gtin
 */
PosInventoryResponse.prototype['gtin'] = undefined;

/**
 * Required. A unique identifier for the item.
 * @member {String} itemId
 */
PosInventoryResponse.prototype['itemId'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"content#posInventoryResponse\".
 * @member {String} kind
 */
PosInventoryResponse.prototype['kind'] = undefined;

/**
 * @member {module:model/Price} price
 */
PosInventoryResponse.prototype['price'] = undefined;

/**
 * Required. The available quantity of the item.
 * @member {String} quantity
 */
PosInventoryResponse.prototype['quantity'] = undefined;

/**
 * Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.
 * @member {String} storeCode
 */
PosInventoryResponse.prototype['storeCode'] = undefined;

/**
 * Required. The CLDR territory code for the item.
 * @member {String} targetCountry
 */
PosInventoryResponse.prototype['targetCountry'] = undefined;

/**
 * Required. The inventory timestamp, in ISO 8601 format.
 * @member {String} timestamp
 */
PosInventoryResponse.prototype['timestamp'] = undefined;






export default PosInventoryResponse;

