/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PosStore model module.
 * @module model/PosStore
 * @version v2
 */
class PosStore {
    /**
     * Constructs a new <code>PosStore</code>.
     * Store resource.
     * @alias module:model/PosStore
     */
    constructor() { 
        
        PosStore.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PosStore</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PosStore} obj Optional instance to populate.
     * @return {module:model/PosStore} The populated <code>PosStore</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PosStore();

            if (data.hasOwnProperty('gcidCategory')) {
                obj['gcidCategory'] = ApiClient.convertToType(data['gcidCategory'], ['String']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
            if (data.hasOwnProperty('placeId')) {
                obj['placeId'] = ApiClient.convertToType(data['placeId'], 'String');
            }
            if (data.hasOwnProperty('storeAddress')) {
                obj['storeAddress'] = ApiClient.convertToType(data['storeAddress'], 'String');
            }
            if (data.hasOwnProperty('storeCode')) {
                obj['storeCode'] = ApiClient.convertToType(data['storeCode'], 'String');
            }
            if (data.hasOwnProperty('storeName')) {
                obj['storeName'] = ApiClient.convertToType(data['storeName'], 'String');
            }
            if (data.hasOwnProperty('websiteUrl')) {
                obj['websiteUrl'] = ApiClient.convertToType(data['websiteUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PosStore</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PosStore</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['gcidCategory'])) {
            throw new Error("Expected the field `gcidCategory` to be an array in the JSON data but got " + data['gcidCategory']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['phoneNumber'] && !(typeof data['phoneNumber'] === 'string' || data['phoneNumber'] instanceof String)) {
            throw new Error("Expected the field `phoneNumber` to be a primitive type in the JSON string but got " + data['phoneNumber']);
        }
        // ensure the json data is a string
        if (data['placeId'] && !(typeof data['placeId'] === 'string' || data['placeId'] instanceof String)) {
            throw new Error("Expected the field `placeId` to be a primitive type in the JSON string but got " + data['placeId']);
        }
        // ensure the json data is a string
        if (data['storeAddress'] && !(typeof data['storeAddress'] === 'string' || data['storeAddress'] instanceof String)) {
            throw new Error("Expected the field `storeAddress` to be a primitive type in the JSON string but got " + data['storeAddress']);
        }
        // ensure the json data is a string
        if (data['storeCode'] && !(typeof data['storeCode'] === 'string' || data['storeCode'] instanceof String)) {
            throw new Error("Expected the field `storeCode` to be a primitive type in the JSON string but got " + data['storeCode']);
        }
        // ensure the json data is a string
        if (data['storeName'] && !(typeof data['storeName'] === 'string' || data['storeName'] instanceof String)) {
            throw new Error("Expected the field `storeName` to be a primitive type in the JSON string but got " + data['storeName']);
        }
        // ensure the json data is a string
        if (data['websiteUrl'] && !(typeof data['websiteUrl'] === 'string' || data['websiteUrl'] instanceof String)) {
            throw new Error("Expected the field `websiteUrl` to be a primitive type in the JSON string but got " + data['websiteUrl']);
        }

        return true;
    }


}



/**
 * The business type of the store.
 * @member {Array.<String>} gcidCategory
 */
PosStore.prototype['gcidCategory'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"`content#posStore`\"
 * @member {String} kind
 */
PosStore.prototype['kind'] = undefined;

/**
 * The store phone number.
 * @member {String} phoneNumber
 */
PosStore.prototype['phoneNumber'] = undefined;

/**
 * The Google Place Id of the store location.
 * @member {String} placeId
 */
PosStore.prototype['placeId'] = undefined;

/**
 * Required. The street address of the store.
 * @member {String} storeAddress
 */
PosStore.prototype['storeAddress'] = undefined;

/**
 * Required. A store identifier that is unique for the given merchant.
 * @member {String} storeCode
 */
PosStore.prototype['storeCode'] = undefined;

/**
 * The merchant or store name.
 * @member {String} storeName
 */
PosStore.prototype['storeName'] = undefined;

/**
 * The website url for the store or merchant.
 * @member {String} websiteUrl
 */
PosStore.prototype['websiteUrl'] = undefined;






export default PosStore;

