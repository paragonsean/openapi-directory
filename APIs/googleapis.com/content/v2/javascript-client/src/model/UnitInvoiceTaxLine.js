/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Price from './Price';

/**
 * The UnitInvoiceTaxLine model module.
 * @module model/UnitInvoiceTaxLine
 * @version v2
 */
class UnitInvoiceTaxLine {
    /**
     * Constructs a new <code>UnitInvoiceTaxLine</code>.
     * @alias module:model/UnitInvoiceTaxLine
     */
    constructor() { 
        
        UnitInvoiceTaxLine.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UnitInvoiceTaxLine</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UnitInvoiceTaxLine} obj Optional instance to populate.
     * @return {module:model/UnitInvoiceTaxLine} The populated <code>UnitInvoiceTaxLine</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UnitInvoiceTaxLine();

            if (data.hasOwnProperty('taxAmount')) {
                obj['taxAmount'] = Price.constructFromObject(data['taxAmount']);
            }
            if (data.hasOwnProperty('taxName')) {
                obj['taxName'] = ApiClient.convertToType(data['taxName'], 'String');
            }
            if (data.hasOwnProperty('taxType')) {
                obj['taxType'] = ApiClient.convertToType(data['taxType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UnitInvoiceTaxLine</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UnitInvoiceTaxLine</code>.
     */
    static validateJSON(data) {
        // validate the optional field `taxAmount`
        if (data['taxAmount']) { // data not null
          Price.validateJSON(data['taxAmount']);
        }
        // ensure the json data is a string
        if (data['taxName'] && !(typeof data['taxName'] === 'string' || data['taxName'] instanceof String)) {
            throw new Error("Expected the field `taxName` to be a primitive type in the JSON string but got " + data['taxName']);
        }
        // ensure the json data is a string
        if (data['taxType'] && !(typeof data['taxType'] === 'string' || data['taxType'] instanceof String)) {
            throw new Error("Expected the field `taxType` to be a primitive type in the JSON string but got " + data['taxType']);
        }

        return true;
    }


}



/**
 * @member {module:model/Price} taxAmount
 */
UnitInvoiceTaxLine.prototype['taxAmount'] = undefined;

/**
 * Optional name of the tax type. This should only be provided if `taxType` is `otherFeeTax`.
 * @member {String} taxName
 */
UnitInvoiceTaxLine.prototype['taxName'] = undefined;

/**
 * [required] Type of the tax. Acceptable values are: - \"`otherFee`\" - \"`otherFeeTax`\" - \"`sales`\" 
 * @member {String} taxType
 */
UnitInvoiceTaxLine.prototype['taxType'] = undefined;






export default UnitInvoiceTaxLine;

