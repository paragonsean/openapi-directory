/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HolidayCutoff model module.
 * @module model/HolidayCutoff
 * @version v2
 */
class HolidayCutoff {
    /**
     * Constructs a new <code>HolidayCutoff</code>.
     * @alias module:model/HolidayCutoff
     */
    constructor() { 
        
        HolidayCutoff.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HolidayCutoff</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HolidayCutoff} obj Optional instance to populate.
     * @return {module:model/HolidayCutoff} The populated <code>HolidayCutoff</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HolidayCutoff();

            if (data.hasOwnProperty('deadlineDate')) {
                obj['deadlineDate'] = ApiClient.convertToType(data['deadlineDate'], 'String');
            }
            if (data.hasOwnProperty('deadlineHour')) {
                obj['deadlineHour'] = ApiClient.convertToType(data['deadlineHour'], 'Number');
            }
            if (data.hasOwnProperty('deadlineTimezone')) {
                obj['deadlineTimezone'] = ApiClient.convertToType(data['deadlineTimezone'], 'String');
            }
            if (data.hasOwnProperty('holidayId')) {
                obj['holidayId'] = ApiClient.convertToType(data['holidayId'], 'String');
            }
            if (data.hasOwnProperty('visibleFromDate')) {
                obj['visibleFromDate'] = ApiClient.convertToType(data['visibleFromDate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HolidayCutoff</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HolidayCutoff</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deadlineDate'] && !(typeof data['deadlineDate'] === 'string' || data['deadlineDate'] instanceof String)) {
            throw new Error("Expected the field `deadlineDate` to be a primitive type in the JSON string but got " + data['deadlineDate']);
        }
        // ensure the json data is a string
        if (data['deadlineTimezone'] && !(typeof data['deadlineTimezone'] === 'string' || data['deadlineTimezone'] instanceof String)) {
            throw new Error("Expected the field `deadlineTimezone` to be a primitive type in the JSON string but got " + data['deadlineTimezone']);
        }
        // ensure the json data is a string
        if (data['holidayId'] && !(typeof data['holidayId'] === 'string' || data['holidayId'] instanceof String)) {
            throw new Error("Expected the field `holidayId` to be a primitive type in the JSON string but got " + data['holidayId']);
        }
        // ensure the json data is a string
        if (data['visibleFromDate'] && !(typeof data['visibleFromDate'] === 'string' || data['visibleFromDate'] instanceof String)) {
            throw new Error("Expected the field `visibleFromDate` to be a primitive type in the JSON string but got " + data['visibleFromDate']);
        }

        return true;
    }


}



/**
 * Date of the order deadline, in ISO 8601 format. E.g. \"2016-11-29\" for 29th November 2016. Required.
 * @member {String} deadlineDate
 */
HolidayCutoff.prototype['deadlineDate'] = undefined;

/**
 * Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required.
 * @member {Number} deadlineHour
 */
HolidayCutoff.prototype['deadlineHour'] = undefined;

/**
 * Timezone identifier for the deadline hour. A list of identifiers can be found in the AdWords API documentation. E.g. \"Europe/Zurich\". Required.
 * @member {String} deadlineTimezone
 */
HolidayCutoff.prototype['deadlineTimezone'] = undefined;

/**
 * Unique identifier for the holiday. Required.
 * @member {String} holidayId
 */
HolidayCutoff.prototype['holidayId'] = undefined;

/**
 * Date on which the deadline will become visible to consumers in ISO 8601 format. E.g. \"2016-10-31\" for 31st October 2016. Required.
 * @member {String} visibleFromDate
 */
HolidayCutoff.prototype['visibleFromDate'] = undefined;






export default HolidayCutoff;

