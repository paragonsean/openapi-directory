/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderLegacyPromotionBenefit from './OrderLegacyPromotionBenefit';

/**
 * The OrderLegacyPromotion model module.
 * @module model/OrderLegacyPromotion
 * @version v2
 */
class OrderLegacyPromotion {
    /**
     * Constructs a new <code>OrderLegacyPromotion</code>.
     * @alias module:model/OrderLegacyPromotion
     */
    constructor() { 
        
        OrderLegacyPromotion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderLegacyPromotion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderLegacyPromotion} obj Optional instance to populate.
     * @return {module:model/OrderLegacyPromotion} The populated <code>OrderLegacyPromotion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderLegacyPromotion();

            if (data.hasOwnProperty('benefits')) {
                obj['benefits'] = ApiClient.convertToType(data['benefits'], [OrderLegacyPromotionBenefit]);
            }
            if (data.hasOwnProperty('effectiveDates')) {
                obj['effectiveDates'] = ApiClient.convertToType(data['effectiveDates'], 'String');
            }
            if (data.hasOwnProperty('genericRedemptionCode')) {
                obj['genericRedemptionCode'] = ApiClient.convertToType(data['genericRedemptionCode'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('longTitle')) {
                obj['longTitle'] = ApiClient.convertToType(data['longTitle'], 'String');
            }
            if (data.hasOwnProperty('productApplicability')) {
                obj['productApplicability'] = ApiClient.convertToType(data['productApplicability'], 'String');
            }
            if (data.hasOwnProperty('redemptionChannel')) {
                obj['redemptionChannel'] = ApiClient.convertToType(data['redemptionChannel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderLegacyPromotion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderLegacyPromotion</code>.
     */
    static validateJSON(data) {
        if (data['benefits']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['benefits'])) {
                throw new Error("Expected the field `benefits` to be an array in the JSON data but got " + data['benefits']);
            }
            // validate the optional field `benefits` (array)
            for (const item of data['benefits']) {
                OrderLegacyPromotionBenefit.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['effectiveDates'] && !(typeof data['effectiveDates'] === 'string' || data['effectiveDates'] instanceof String)) {
            throw new Error("Expected the field `effectiveDates` to be a primitive type in the JSON string but got " + data['effectiveDates']);
        }
        // ensure the json data is a string
        if (data['genericRedemptionCode'] && !(typeof data['genericRedemptionCode'] === 'string' || data['genericRedemptionCode'] instanceof String)) {
            throw new Error("Expected the field `genericRedemptionCode` to be a primitive type in the JSON string but got " + data['genericRedemptionCode']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['longTitle'] && !(typeof data['longTitle'] === 'string' || data['longTitle'] instanceof String)) {
            throw new Error("Expected the field `longTitle` to be a primitive type in the JSON string but got " + data['longTitle']);
        }
        // ensure the json data is a string
        if (data['productApplicability'] && !(typeof data['productApplicability'] === 'string' || data['productApplicability'] instanceof String)) {
            throw new Error("Expected the field `productApplicability` to be a primitive type in the JSON string but got " + data['productApplicability']);
        }
        // ensure the json data is a string
        if (data['redemptionChannel'] && !(typeof data['redemptionChannel'] === 'string' || data['redemptionChannel'] instanceof String)) {
            throw new Error("Expected the field `redemptionChannel` to be a primitive type in the JSON string but got " + data['redemptionChannel']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/OrderLegacyPromotionBenefit>} benefits
 */
OrderLegacyPromotion.prototype['benefits'] = undefined;

/**
 * The date and time frame when the promotion is active and ready for validation review. Note that the promotion live time may be delayed for a few hours due to the validation review. Start date and end date are separated by a forward slash (/). The start date is specified by the format (YYYY-MM-DD), followed by the letter ?T?, the time of the day when the sale starts (in Greenwich Mean Time, GMT), followed by an expression of the time zone for the sale. The end date is in the same format.
 * @member {String} effectiveDates
 */
OrderLegacyPromotion.prototype['effectiveDates'] = undefined;

/**
 * Optional. The text code that corresponds to the promotion when applied on the retailer?s website.
 * @member {String} genericRedemptionCode
 */
OrderLegacyPromotion.prototype['genericRedemptionCode'] = undefined;

/**
 * The unique ID of the promotion.
 * @member {String} id
 */
OrderLegacyPromotion.prototype['id'] = undefined;

/**
 * The full title of the promotion.
 * @member {String} longTitle
 */
OrderLegacyPromotion.prototype['longTitle'] = undefined;

/**
 * Whether the promotion is applicable to all products or only specific products. Acceptable values are: - \"`allProducts`\" - \"`specificProducts`\" 
 * @member {String} productApplicability
 */
OrderLegacyPromotion.prototype['productApplicability'] = undefined;

/**
 * Indicates that the promotion is valid online. Acceptable values are: - \"`online`\" 
 * @member {String} redemptionChannel
 */
OrderLegacyPromotion.prototype['redemptionChannel'] = undefined;






export default OrderLegacyPromotion;

