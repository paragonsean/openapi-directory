/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';
import BusinessDayConfig from './BusinessDayConfig';
import WarehouseCutoffTime from './WarehouseCutoffTime';

/**
 * The Warehouse model module.
 * @module model/Warehouse
 * @version v2
 */
class Warehouse {
    /**
     * Constructs a new <code>Warehouse</code>.
     * A fulfillment warehouse, which stores and handles inventory.
     * @alias module:model/Warehouse
     */
    constructor() { 
        
        Warehouse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Warehouse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Warehouse} obj Optional instance to populate.
     * @return {module:model/Warehouse} The populated <code>Warehouse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Warehouse();

            if (data.hasOwnProperty('businessDayConfig')) {
                obj['businessDayConfig'] = BusinessDayConfig.constructFromObject(data['businessDayConfig']);
            }
            if (data.hasOwnProperty('cutoffTime')) {
                obj['cutoffTime'] = WarehouseCutoffTime.constructFromObject(data['cutoffTime']);
            }
            if (data.hasOwnProperty('handlingDays')) {
                obj['handlingDays'] = ApiClient.convertToType(data['handlingDays'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('shippingAddress')) {
                obj['shippingAddress'] = Address.constructFromObject(data['shippingAddress']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Warehouse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Warehouse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `businessDayConfig`
        if (data['businessDayConfig']) { // data not null
          BusinessDayConfig.validateJSON(data['businessDayConfig']);
        }
        // validate the optional field `cutoffTime`
        if (data['cutoffTime']) { // data not null
          WarehouseCutoffTime.validateJSON(data['cutoffTime']);
        }
        // ensure the json data is a string
        if (data['handlingDays'] && !(typeof data['handlingDays'] === 'string' || data['handlingDays'] instanceof String)) {
            throw new Error("Expected the field `handlingDays` to be a primitive type in the JSON string but got " + data['handlingDays']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `shippingAddress`
        if (data['shippingAddress']) { // data not null
          Address.validateJSON(data['shippingAddress']);
        }

        return true;
    }


}



/**
 * @member {module:model/BusinessDayConfig} businessDayConfig
 */
Warehouse.prototype['businessDayConfig'] = undefined;

/**
 * @member {module:model/WarehouseCutoffTime} cutoffTime
 */
Warehouse.prototype['cutoffTime'] = undefined;

/**
 * Required. The number of days it takes for this warehouse to pack up and ship an item. This is on the warehouse level, but can be overridden on the offer level based on the attributes of an item.
 * @member {String} handlingDays
 */
Warehouse.prototype['handlingDays'] = undefined;

/**
 * Required. The name of the warehouse. Must be unique within account.
 * @member {String} name
 */
Warehouse.prototype['name'] = undefined;

/**
 * @member {module:model/Address} shippingAddress
 */
Warehouse.prototype['shippingAddress'] = undefined;






export default Warehouse;

