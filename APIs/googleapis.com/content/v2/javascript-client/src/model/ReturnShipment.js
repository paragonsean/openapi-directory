/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ShipmentTrackingInfo from './ShipmentTrackingInfo';

/**
 * The ReturnShipment model module.
 * @module model/ReturnShipment
 * @version v2
 */
class ReturnShipment {
    /**
     * Constructs a new <code>ReturnShipment</code>.
     * @alias module:model/ReturnShipment
     */
    constructor() { 
        
        ReturnShipment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReturnShipment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReturnShipment} obj Optional instance to populate.
     * @return {module:model/ReturnShipment} The populated <code>ReturnShipment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReturnShipment();

            if (data.hasOwnProperty('creationDate')) {
                obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'String');
            }
            if (data.hasOwnProperty('deliveryDate')) {
                obj['deliveryDate'] = ApiClient.convertToType(data['deliveryDate'], 'String');
            }
            if (data.hasOwnProperty('returnMethodType')) {
                obj['returnMethodType'] = ApiClient.convertToType(data['returnMethodType'], 'String');
            }
            if (data.hasOwnProperty('shipmentId')) {
                obj['shipmentId'] = ApiClient.convertToType(data['shipmentId'], 'String');
            }
            if (data.hasOwnProperty('shipmentTrackingInfos')) {
                obj['shipmentTrackingInfos'] = ApiClient.convertToType(data['shipmentTrackingInfos'], [ShipmentTrackingInfo]);
            }
            if (data.hasOwnProperty('shippingDate')) {
                obj['shippingDate'] = ApiClient.convertToType(data['shippingDate'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReturnShipment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReturnShipment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['creationDate'] && !(typeof data['creationDate'] === 'string' || data['creationDate'] instanceof String)) {
            throw new Error("Expected the field `creationDate` to be a primitive type in the JSON string but got " + data['creationDate']);
        }
        // ensure the json data is a string
        if (data['deliveryDate'] && !(typeof data['deliveryDate'] === 'string' || data['deliveryDate'] instanceof String)) {
            throw new Error("Expected the field `deliveryDate` to be a primitive type in the JSON string but got " + data['deliveryDate']);
        }
        // ensure the json data is a string
        if (data['returnMethodType'] && !(typeof data['returnMethodType'] === 'string' || data['returnMethodType'] instanceof String)) {
            throw new Error("Expected the field `returnMethodType` to be a primitive type in the JSON string but got " + data['returnMethodType']);
        }
        // ensure the json data is a string
        if (data['shipmentId'] && !(typeof data['shipmentId'] === 'string' || data['shipmentId'] instanceof String)) {
            throw new Error("Expected the field `shipmentId` to be a primitive type in the JSON string but got " + data['shipmentId']);
        }
        if (data['shipmentTrackingInfos']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['shipmentTrackingInfos'])) {
                throw new Error("Expected the field `shipmentTrackingInfos` to be an array in the JSON data but got " + data['shipmentTrackingInfos']);
            }
            // validate the optional field `shipmentTrackingInfos` (array)
            for (const item of data['shipmentTrackingInfos']) {
                ShipmentTrackingInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['shippingDate'] && !(typeof data['shippingDate'] === 'string' || data['shippingDate'] instanceof String)) {
            throw new Error("Expected the field `shippingDate` to be a primitive type in the JSON string but got " + data['shippingDate']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * The date of creation of the shipment, in ISO 8601 format.
 * @member {String} creationDate
 */
ReturnShipment.prototype['creationDate'] = undefined;

/**
 * The date of delivery of the shipment, in ISO 8601 format.
 * @member {String} deliveryDate
 */
ReturnShipment.prototype['deliveryDate'] = undefined;

/**
 * Type of the return method. Acceptable values are: - \"`byMail`\" - \"`contactCustomerSupport`\" - \"`returnless`\" 
 * @member {String} returnMethodType
 */
ReturnShipment.prototype['returnMethodType'] = undefined;

/**
 * Shipment ID generated by Google.
 * @member {String} shipmentId
 */
ReturnShipment.prototype['shipmentId'] = undefined;

/**
 * Tracking information of the shipment. One return shipment might be handled by several shipping carriers sequentially.
 * @member {Array.<module:model/ShipmentTrackingInfo>} shipmentTrackingInfos
 */
ReturnShipment.prototype['shipmentTrackingInfos'] = undefined;

/**
 * The date of shipping of the shipment, in ISO 8601 format.
 * @member {String} shippingDate
 */
ReturnShipment.prototype['shippingDate'] = undefined;

/**
 * State of the shipment. Acceptable values are: - \"`completed`\" - \"`new`\" - \"`shipped`\" - \"`undeliverable`\" - \"`pending`\" 
 * @member {String} state
 */
ReturnShipment.prototype['state'] = undefined;






export default ReturnShipment;

