/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Price from './Price';

/**
 * The OrderLegacyPromotionBenefit model module.
 * @module model/OrderLegacyPromotionBenefit
 * @version v2
 */
class OrderLegacyPromotionBenefit {
    /**
     * Constructs a new <code>OrderLegacyPromotionBenefit</code>.
     * @alias module:model/OrderLegacyPromotionBenefit
     */
    constructor() { 
        
        OrderLegacyPromotionBenefit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderLegacyPromotionBenefit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderLegacyPromotionBenefit} obj Optional instance to populate.
     * @return {module:model/OrderLegacyPromotionBenefit} The populated <code>OrderLegacyPromotionBenefit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderLegacyPromotionBenefit();

            if (data.hasOwnProperty('discount')) {
                obj['discount'] = Price.constructFromObject(data['discount']);
            }
            if (data.hasOwnProperty('offerIds')) {
                obj['offerIds'] = ApiClient.convertToType(data['offerIds'], ['String']);
            }
            if (data.hasOwnProperty('subType')) {
                obj['subType'] = ApiClient.convertToType(data['subType'], 'String');
            }
            if (data.hasOwnProperty('taxImpact')) {
                obj['taxImpact'] = Price.constructFromObject(data['taxImpact']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderLegacyPromotionBenefit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderLegacyPromotionBenefit</code>.
     */
    static validateJSON(data) {
        // validate the optional field `discount`
        if (data['discount']) { // data not null
          Price.validateJSON(data['discount']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['offerIds'])) {
            throw new Error("Expected the field `offerIds` to be an array in the JSON data but got " + data['offerIds']);
        }
        // ensure the json data is a string
        if (data['subType'] && !(typeof data['subType'] === 'string' || data['subType'] instanceof String)) {
            throw new Error("Expected the field `subType` to be a primitive type in the JSON string but got " + data['subType']);
        }
        // validate the optional field `taxImpact`
        if (data['taxImpact']) { // data not null
          Price.validateJSON(data['taxImpact']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/Price} discount
 */
OrderLegacyPromotionBenefit.prototype['discount'] = undefined;

/**
 * The OfferId(s) that were purchased in this order and map to this specific benefit of the promotion.
 * @member {Array.<String>} offerIds
 */
OrderLegacyPromotionBenefit.prototype['offerIds'] = undefined;

/**
 * Further describes the benefit of the promotion. Note that we will expand on this enumeration as we support new promotion sub-types. Acceptable values are: - \"`buyMGetMoneyOff`\" - \"`buyMGetNMoneyOff`\" - \"`buyMGetNPercentOff`\" - \"`buyMGetPercentOff`\" - \"`freeGift`\" - \"`freeGiftWithItemId`\" - \"`freeGiftWithValue`\" - \"`freeOvernightShipping`\" - \"`freeShipping`\" - \"`freeTwoDayShipping`\" - \"`moneyOff`\" - \"`percentageOff`\" - \"`rewardPoints`\" - \"`salePrice`\" 
 * @member {String} subType
 */
OrderLegacyPromotionBenefit.prototype['subType'] = undefined;

/**
 * @member {module:model/Price} taxImpact
 */
OrderLegacyPromotionBenefit.prototype['taxImpact'] = undefined;

/**
 * Describes whether the promotion applies to products (e.g. 20% off) or to shipping (e.g. Free Shipping). Acceptable values are: - \"`product`\" - \"`shipping`\" 
 * @member {String} type
 */
OrderLegacyPromotionBenefit.prototype['type'] = undefined;






export default OrderLegacyPromotionBenefit;

