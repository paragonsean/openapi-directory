/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatafeedStatusExample from './DatafeedStatusExample';

/**
 * The DatafeedStatusError model module.
 * @module model/DatafeedStatusError
 * @version v2
 */
class DatafeedStatusError {
    /**
     * Constructs a new <code>DatafeedStatusError</code>.
     * An error occurring in the feed, like \&quot;invalid price\&quot;.
     * @alias module:model/DatafeedStatusError
     */
    constructor() { 
        
        DatafeedStatusError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DatafeedStatusError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatafeedStatusError} obj Optional instance to populate.
     * @return {module:model/DatafeedStatusError} The populated <code>DatafeedStatusError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatafeedStatusError();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'String');
            }
            if (data.hasOwnProperty('examples')) {
                obj['examples'] = ApiClient.convertToType(data['examples'], [DatafeedStatusExample]);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatafeedStatusError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatafeedStatusError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['count'] && !(typeof data['count'] === 'string' || data['count'] instanceof String)) {
            throw new Error("Expected the field `count` to be a primitive type in the JSON string but got " + data['count']);
        }
        if (data['examples']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['examples'])) {
                throw new Error("Expected the field `examples` to be an array in the JSON data but got " + data['examples']);
            }
            // validate the optional field `examples` (array)
            for (const item of data['examples']) {
                DatafeedStatusExample.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }

        return true;
    }


}



/**
 * The code of the error, e.g., \"validation/invalid_value\".
 * @member {String} code
 */
DatafeedStatusError.prototype['code'] = undefined;

/**
 * The number of occurrences of the error in the feed.
 * @member {String} count
 */
DatafeedStatusError.prototype['count'] = undefined;

/**
 * A list of example occurrences of the error, grouped by product.
 * @member {Array.<module:model/DatafeedStatusExample>} examples
 */
DatafeedStatusError.prototype['examples'] = undefined;

/**
 * The error message, e.g., \"Invalid price\".
 * @member {String} message
 */
DatafeedStatusError.prototype['message'] = undefined;






export default DatafeedStatusError;

