/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomerReturnReason from './CustomerReturnReason';
import OrderLineItemProduct from './OrderLineItemProduct';
import RefundReason from './RefundReason';

/**
 * The MerchantOrderReturnItem model module.
 * @module model/MerchantOrderReturnItem
 * @version v2
 */
class MerchantOrderReturnItem {
    /**
     * Constructs a new <code>MerchantOrderReturnItem</code>.
     * @alias module:model/MerchantOrderReturnItem
     */
    constructor() { 
        
        MerchantOrderReturnItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MerchantOrderReturnItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MerchantOrderReturnItem} obj Optional instance to populate.
     * @return {module:model/MerchantOrderReturnItem} The populated <code>MerchantOrderReturnItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MerchantOrderReturnItem();

            if (data.hasOwnProperty('customerReturnReason')) {
                obj['customerReturnReason'] = CustomerReturnReason.constructFromObject(data['customerReturnReason']);
            }
            if (data.hasOwnProperty('itemId')) {
                obj['itemId'] = ApiClient.convertToType(data['itemId'], 'String');
            }
            if (data.hasOwnProperty('merchantReturnReason')) {
                obj['merchantReturnReason'] = RefundReason.constructFromObject(data['merchantReturnReason']);
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = OrderLineItemProduct.constructFromObject(data['product']);
            }
            if (data.hasOwnProperty('returnShipmentIds')) {
                obj['returnShipmentIds'] = ApiClient.convertToType(data['returnShipmentIds'], ['String']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MerchantOrderReturnItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MerchantOrderReturnItem</code>.
     */
    static validateJSON(data) {
        // validate the optional field `customerReturnReason`
        if (data['customerReturnReason']) { // data not null
          CustomerReturnReason.validateJSON(data['customerReturnReason']);
        }
        // ensure the json data is a string
        if (data['itemId'] && !(typeof data['itemId'] === 'string' || data['itemId'] instanceof String)) {
            throw new Error("Expected the field `itemId` to be a primitive type in the JSON string but got " + data['itemId']);
        }
        // validate the optional field `merchantReturnReason`
        if (data['merchantReturnReason']) { // data not null
          RefundReason.validateJSON(data['merchantReturnReason']);
        }
        // validate the optional field `product`
        if (data['product']) { // data not null
          OrderLineItemProduct.validateJSON(data['product']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['returnShipmentIds'])) {
            throw new Error("Expected the field `returnShipmentIds` to be an array in the JSON data but got " + data['returnShipmentIds']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * @member {module:model/CustomerReturnReason} customerReturnReason
 */
MerchantOrderReturnItem.prototype['customerReturnReason'] = undefined;

/**
 * Product level item ID. If the returned items are of the same product, they will have the same ID.
 * @member {String} itemId
 */
MerchantOrderReturnItem.prototype['itemId'] = undefined;

/**
 * @member {module:model/RefundReason} merchantReturnReason
 */
MerchantOrderReturnItem.prototype['merchantReturnReason'] = undefined;

/**
 * @member {module:model/OrderLineItemProduct} product
 */
MerchantOrderReturnItem.prototype['product'] = undefined;

/**
 * IDs of the return shipments that this return item belongs to.
 * @member {Array.<String>} returnShipmentIds
 */
MerchantOrderReturnItem.prototype['returnShipmentIds'] = undefined;

/**
 * State of the item. Acceptable values are: - \"`canceled`\" - \"`new`\" - \"`received`\" - \"`refunded`\" - \"`rejected`\" 
 * @member {String} state
 */
MerchantOrderReturnItem.prototype['state'] = undefined;






export default MerchantOrderReturnItem;

