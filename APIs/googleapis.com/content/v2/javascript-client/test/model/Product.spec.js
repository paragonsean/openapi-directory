/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ContentApiForShopping);
  }
}(this, function(expect, ContentApiForShopping) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ContentApiForShopping.Product();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Product', function() {
    it('should create an instance of Product', function() {
      // uncomment below and update the code to test Product
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be.a(ContentApiForShopping.Product);
    });

    it('should have the property additionalImageLinks (base name: "additionalImageLinks")', function() {
      // uncomment below and update the code to test the property additionalImageLinks
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property additionalProductTypes (base name: "additionalProductTypes")', function() {
      // uncomment below and update the code to test the property additionalProductTypes
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property adult (base name: "adult")', function() {
      // uncomment below and update the code to test the property adult
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property adwordsGrouping (base name: "adwordsGrouping")', function() {
      // uncomment below and update the code to test the property adwordsGrouping
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property adwordsLabels (base name: "adwordsLabels")', function() {
      // uncomment below and update the code to test the property adwordsLabels
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property adwordsRedirect (base name: "adwordsRedirect")', function() {
      // uncomment below and update the code to test the property adwordsRedirect
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property ageGroup (base name: "ageGroup")', function() {
      // uncomment below and update the code to test the property ageGroup
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property aspects (base name: "aspects")', function() {
      // uncomment below and update the code to test the property aspects
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property availability (base name: "availability")', function() {
      // uncomment below and update the code to test the property availability
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property availabilityDate (base name: "availabilityDate")', function() {
      // uncomment below and update the code to test the property availabilityDate
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property brand (base name: "brand")', function() {
      // uncomment below and update the code to test the property brand
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property canonicalLink (base name: "canonicalLink")', function() {
      // uncomment below and update the code to test the property canonicalLink
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property channel (base name: "channel")', function() {
      // uncomment below and update the code to test the property channel
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property color (base name: "color")', function() {
      // uncomment below and update the code to test the property color
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property condition (base name: "condition")', function() {
      // uncomment below and update the code to test the property condition
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property contentLanguage (base name: "contentLanguage")', function() {
      // uncomment below and update the code to test the property contentLanguage
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property costOfGoodsSold (base name: "costOfGoodsSold")', function() {
      // uncomment below and update the code to test the property costOfGoodsSold
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property customAttributes (base name: "customAttributes")', function() {
      // uncomment below and update the code to test the property customAttributes
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property customGroups (base name: "customGroups")', function() {
      // uncomment below and update the code to test the property customGroups
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property customLabel0 (base name: "customLabel0")', function() {
      // uncomment below and update the code to test the property customLabel0
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property customLabel1 (base name: "customLabel1")', function() {
      // uncomment below and update the code to test the property customLabel1
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property customLabel2 (base name: "customLabel2")', function() {
      // uncomment below and update the code to test the property customLabel2
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property customLabel3 (base name: "customLabel3")', function() {
      // uncomment below and update the code to test the property customLabel3
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property customLabel4 (base name: "customLabel4")', function() {
      // uncomment below and update the code to test the property customLabel4
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property destinations (base name: "destinations")', function() {
      // uncomment below and update the code to test the property destinations
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property displayAdsId (base name: "displayAdsId")', function() {
      // uncomment below and update the code to test the property displayAdsId
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property displayAdsLink (base name: "displayAdsLink")', function() {
      // uncomment below and update the code to test the property displayAdsLink
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property displayAdsSimilarIds (base name: "displayAdsSimilarIds")', function() {
      // uncomment below and update the code to test the property displayAdsSimilarIds
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property displayAdsTitle (base name: "displayAdsTitle")', function() {
      // uncomment below and update the code to test the property displayAdsTitle
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property displayAdsValue (base name: "displayAdsValue")', function() {
      // uncomment below and update the code to test the property displayAdsValue
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property energyEfficiencyClass (base name: "energyEfficiencyClass")', function() {
      // uncomment below and update the code to test the property energyEfficiencyClass
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property expirationDate (base name: "expirationDate")', function() {
      // uncomment below and update the code to test the property expirationDate
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property googleProductCategory (base name: "googleProductCategory")', function() {
      // uncomment below and update the code to test the property googleProductCategory
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property gtin (base name: "gtin")', function() {
      // uncomment below and update the code to test the property gtin
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property identifierExists (base name: "identifierExists")', function() {
      // uncomment below and update the code to test the property identifierExists
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property imageLink (base name: "imageLink")', function() {
      // uncomment below and update the code to test the property imageLink
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property installment (base name: "installment")', function() {
      // uncomment below and update the code to test the property installment
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property isBundle (base name: "isBundle")', function() {
      // uncomment below and update the code to test the property isBundle
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property itemGroupId (base name: "itemGroupId")', function() {
      // uncomment below and update the code to test the property itemGroupId
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property loyaltyPoints (base name: "loyaltyPoints")', function() {
      // uncomment below and update the code to test the property loyaltyPoints
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property material (base name: "material")', function() {
      // uncomment below and update the code to test the property material
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property maxEnergyEfficiencyClass (base name: "maxEnergyEfficiencyClass")', function() {
      // uncomment below and update the code to test the property maxEnergyEfficiencyClass
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property maxHandlingTime (base name: "maxHandlingTime")', function() {
      // uncomment below and update the code to test the property maxHandlingTime
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property minEnergyEfficiencyClass (base name: "minEnergyEfficiencyClass")', function() {
      // uncomment below and update the code to test the property minEnergyEfficiencyClass
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property minHandlingTime (base name: "minHandlingTime")', function() {
      // uncomment below and update the code to test the property minHandlingTime
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property mobileLink (base name: "mobileLink")', function() {
      // uncomment below and update the code to test the property mobileLink
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property mpn (base name: "mpn")', function() {
      // uncomment below and update the code to test the property mpn
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property multipack (base name: "multipack")', function() {
      // uncomment below and update the code to test the property multipack
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property offerId (base name: "offerId")', function() {
      // uncomment below and update the code to test the property offerId
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property onlineOnly (base name: "onlineOnly")', function() {
      // uncomment below and update the code to test the property onlineOnly
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property pattern (base name: "pattern")', function() {
      // uncomment below and update the code to test the property pattern
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property productType (base name: "productType")', function() {
      // uncomment below and update the code to test the property productType
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property promotionIds (base name: "promotionIds")', function() {
      // uncomment below and update the code to test the property promotionIds
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property salePrice (base name: "salePrice")', function() {
      // uncomment below and update the code to test the property salePrice
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property salePriceEffectiveDate (base name: "salePriceEffectiveDate")', function() {
      // uncomment below and update the code to test the property salePriceEffectiveDate
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property sellOnGoogleQuantity (base name: "sellOnGoogleQuantity")', function() {
      // uncomment below and update the code to test the property sellOnGoogleQuantity
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property shipping (base name: "shipping")', function() {
      // uncomment below and update the code to test the property shipping
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property shippingHeight (base name: "shippingHeight")', function() {
      // uncomment below and update the code to test the property shippingHeight
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property shippingLabel (base name: "shippingLabel")', function() {
      // uncomment below and update the code to test the property shippingLabel
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property shippingLength (base name: "shippingLength")', function() {
      // uncomment below and update the code to test the property shippingLength
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property shippingWeight (base name: "shippingWeight")', function() {
      // uncomment below and update the code to test the property shippingWeight
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property shippingWidth (base name: "shippingWidth")', function() {
      // uncomment below and update the code to test the property shippingWidth
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property sizeSystem (base name: "sizeSystem")', function() {
      // uncomment below and update the code to test the property sizeSystem
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property sizeType (base name: "sizeType")', function() {
      // uncomment below and update the code to test the property sizeType
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property sizes (base name: "sizes")', function() {
      // uncomment below and update the code to test the property sizes
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property targetCountry (base name: "targetCountry")', function() {
      // uncomment below and update the code to test the property targetCountry
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property taxes (base name: "taxes")', function() {
      // uncomment below and update the code to test the property taxes
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property unitPricingBaseMeasure (base name: "unitPricingBaseMeasure")', function() {
      // uncomment below and update the code to test the property unitPricingBaseMeasure
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property unitPricingMeasure (base name: "unitPricingMeasure")', function() {
      // uncomment below and update the code to test the property unitPricingMeasure
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property validatedDestinations (base name: "validatedDestinations")', function() {
      // uncomment below and update the code to test the property validatedDestinations
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

    it('should have the property warnings (base name: "warnings")', function() {
      // uncomment below and update the code to test the property warnings
      //var instance = new ContentApiForShopping.Product();
      //expect(instance).to.be();
    });

  });

}));
