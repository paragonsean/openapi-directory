/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WarehouseBasedDeliveryTime
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:02.825653-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WarehouseBasedDeliveryTime {
  public static final String SERIALIZED_NAME_CARRIER = "carrier";
  @SerializedName(SERIALIZED_NAME_CARRIER)
  private String carrier;

  public static final String SERIALIZED_NAME_CARRIER_SERVICE = "carrierService";
  @SerializedName(SERIALIZED_NAME_CARRIER_SERVICE)
  private String carrierService;

  public static final String SERIALIZED_NAME_ORIGIN_ADMINISTRATIVE_AREA = "originAdministrativeArea";
  @SerializedName(SERIALIZED_NAME_ORIGIN_ADMINISTRATIVE_AREA)
  private String originAdministrativeArea;

  public static final String SERIALIZED_NAME_ORIGIN_CITY = "originCity";
  @SerializedName(SERIALIZED_NAME_ORIGIN_CITY)
  private String originCity;

  public static final String SERIALIZED_NAME_ORIGIN_COUNTRY = "originCountry";
  @SerializedName(SERIALIZED_NAME_ORIGIN_COUNTRY)
  private String originCountry;

  public static final String SERIALIZED_NAME_ORIGIN_POSTAL_CODE = "originPostalCode";
  @SerializedName(SERIALIZED_NAME_ORIGIN_POSTAL_CODE)
  private String originPostalCode;

  public static final String SERIALIZED_NAME_ORIGIN_STREET_ADDRESS = "originStreetAddress";
  @SerializedName(SERIALIZED_NAME_ORIGIN_STREET_ADDRESS)
  private String originStreetAddress;

  public static final String SERIALIZED_NAME_WAREHOUSE_NAME = "warehouseName";
  @SerializedName(SERIALIZED_NAME_WAREHOUSE_NAME)
  private String warehouseName;

  public WarehouseBasedDeliveryTime() {
  }

  public WarehouseBasedDeliveryTime carrier(String carrier) {
    this.carrier = carrier;
    return this;
  }

  /**
   * Required. Carrier, such as &#x60;\&quot;UPS\&quot;&#x60; or &#x60;\&quot;Fedex\&quot;&#x60;. The list of supported carriers can be retrieved via the &#x60;listSupportedCarriers&#x60; method.
   * @return carrier
   */
  @javax.annotation.Nullable
  public String getCarrier() {
    return carrier;
  }

  public void setCarrier(String carrier) {
    this.carrier = carrier;
  }


  public WarehouseBasedDeliveryTime carrierService(String carrierService) {
    this.carrierService = carrierService;
    return this;
  }

  /**
   * Required. Carrier service, such as &#x60;\&quot;ground\&quot;&#x60; or &#x60;\&quot;2 days\&quot;&#x60;. The list of supported services for a carrier can be retrieved via the &#x60;listSupportedCarriers&#x60; method. The name of the service must be in the eddSupportedServices list.
   * @return carrierService
   */
  @javax.annotation.Nullable
  public String getCarrierService() {
    return carrierService;
  }

  public void setCarrierService(String carrierService) {
    this.carrierService = carrierService;
  }


  public WarehouseBasedDeliveryTime originAdministrativeArea(String originAdministrativeArea) {
    this.originAdministrativeArea = originAdministrativeArea;
    return this;
  }

  /**
   * Shipping origin&#39;s state.
   * @return originAdministrativeArea
   */
  @javax.annotation.Nullable
  public String getOriginAdministrativeArea() {
    return originAdministrativeArea;
  }

  public void setOriginAdministrativeArea(String originAdministrativeArea) {
    this.originAdministrativeArea = originAdministrativeArea;
  }


  public WarehouseBasedDeliveryTime originCity(String originCity) {
    this.originCity = originCity;
    return this;
  }

  /**
   * Shipping origin&#39;s city.
   * @return originCity
   */
  @javax.annotation.Nullable
  public String getOriginCity() {
    return originCity;
  }

  public void setOriginCity(String originCity) {
    this.originCity = originCity;
  }


  public WarehouseBasedDeliveryTime originCountry(String originCountry) {
    this.originCountry = originCountry;
    return this;
  }

  /**
   * Shipping origin&#39;s country represented as a [CLDR territory code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml).
   * @return originCountry
   */
  @javax.annotation.Nullable
  public String getOriginCountry() {
    return originCountry;
  }

  public void setOriginCountry(String originCountry) {
    this.originCountry = originCountry;
  }


  public WarehouseBasedDeliveryTime originPostalCode(String originPostalCode) {
    this.originPostalCode = originPostalCode;
    return this;
  }

  /**
   * Shipping origin.
   * @return originPostalCode
   */
  @javax.annotation.Nullable
  public String getOriginPostalCode() {
    return originPostalCode;
  }

  public void setOriginPostalCode(String originPostalCode) {
    this.originPostalCode = originPostalCode;
  }


  public WarehouseBasedDeliveryTime originStreetAddress(String originStreetAddress) {
    this.originStreetAddress = originStreetAddress;
    return this;
  }

  /**
   * Shipping origin&#39;s street address
   * @return originStreetAddress
   */
  @javax.annotation.Nullable
  public String getOriginStreetAddress() {
    return originStreetAddress;
  }

  public void setOriginStreetAddress(String originStreetAddress) {
    this.originStreetAddress = originStreetAddress;
  }


  public WarehouseBasedDeliveryTime warehouseName(String warehouseName) {
    this.warehouseName = warehouseName;
    return this;
  }

  /**
   * The name of the warehouse. Warehouse name need to be matched with name. If warehouseName is set, the below fields will be ignored. The warehouse info will be read from warehouse.
   * @return warehouseName
   */
  @javax.annotation.Nullable
  public String getWarehouseName() {
    return warehouseName;
  }

  public void setWarehouseName(String warehouseName) {
    this.warehouseName = warehouseName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WarehouseBasedDeliveryTime warehouseBasedDeliveryTime = (WarehouseBasedDeliveryTime) o;
    return Objects.equals(this.carrier, warehouseBasedDeliveryTime.carrier) &&
        Objects.equals(this.carrierService, warehouseBasedDeliveryTime.carrierService) &&
        Objects.equals(this.originAdministrativeArea, warehouseBasedDeliveryTime.originAdministrativeArea) &&
        Objects.equals(this.originCity, warehouseBasedDeliveryTime.originCity) &&
        Objects.equals(this.originCountry, warehouseBasedDeliveryTime.originCountry) &&
        Objects.equals(this.originPostalCode, warehouseBasedDeliveryTime.originPostalCode) &&
        Objects.equals(this.originStreetAddress, warehouseBasedDeliveryTime.originStreetAddress) &&
        Objects.equals(this.warehouseName, warehouseBasedDeliveryTime.warehouseName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(carrier, carrierService, originAdministrativeArea, originCity, originCountry, originPostalCode, originStreetAddress, warehouseName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WarehouseBasedDeliveryTime {\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("    carrierService: ").append(toIndentedString(carrierService)).append("\n");
    sb.append("    originAdministrativeArea: ").append(toIndentedString(originAdministrativeArea)).append("\n");
    sb.append("    originCity: ").append(toIndentedString(originCity)).append("\n");
    sb.append("    originCountry: ").append(toIndentedString(originCountry)).append("\n");
    sb.append("    originPostalCode: ").append(toIndentedString(originPostalCode)).append("\n");
    sb.append("    originStreetAddress: ").append(toIndentedString(originStreetAddress)).append("\n");
    sb.append("    warehouseName: ").append(toIndentedString(warehouseName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("carrier");
    openapiFields.add("carrierService");
    openapiFields.add("originAdministrativeArea");
    openapiFields.add("originCity");
    openapiFields.add("originCountry");
    openapiFields.add("originPostalCode");
    openapiFields.add("originStreetAddress");
    openapiFields.add("warehouseName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WarehouseBasedDeliveryTime
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WarehouseBasedDeliveryTime.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WarehouseBasedDeliveryTime is not found in the empty JSON string", WarehouseBasedDeliveryTime.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WarehouseBasedDeliveryTime.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WarehouseBasedDeliveryTime` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("carrier") != null && !jsonObj.get("carrier").isJsonNull()) && !jsonObj.get("carrier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier").toString()));
      }
      if ((jsonObj.get("carrierService") != null && !jsonObj.get("carrierService").isJsonNull()) && !jsonObj.get("carrierService").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrierService` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrierService").toString()));
      }
      if ((jsonObj.get("originAdministrativeArea") != null && !jsonObj.get("originAdministrativeArea").isJsonNull()) && !jsonObj.get("originAdministrativeArea").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originAdministrativeArea` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originAdministrativeArea").toString()));
      }
      if ((jsonObj.get("originCity") != null && !jsonObj.get("originCity").isJsonNull()) && !jsonObj.get("originCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originCity").toString()));
      }
      if ((jsonObj.get("originCountry") != null && !jsonObj.get("originCountry").isJsonNull()) && !jsonObj.get("originCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originCountry").toString()));
      }
      if ((jsonObj.get("originPostalCode") != null && !jsonObj.get("originPostalCode").isJsonNull()) && !jsonObj.get("originPostalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originPostalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originPostalCode").toString()));
      }
      if ((jsonObj.get("originStreetAddress") != null && !jsonObj.get("originStreetAddress").isJsonNull()) && !jsonObj.get("originStreetAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originStreetAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originStreetAddress").toString()));
      }
      if ((jsonObj.get("warehouseName") != null && !jsonObj.get("warehouseName").isJsonNull()) && !jsonObj.get("warehouseName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warehouseName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehouseName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WarehouseBasedDeliveryTime.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WarehouseBasedDeliveryTime' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WarehouseBasedDeliveryTime> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WarehouseBasedDeliveryTime.class));

       return (TypeAdapter<T>) new TypeAdapter<WarehouseBasedDeliveryTime>() {
           @Override
           public void write(JsonWriter out, WarehouseBasedDeliveryTime value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WarehouseBasedDeliveryTime read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WarehouseBasedDeliveryTime given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WarehouseBasedDeliveryTime
   * @throws IOException if the JSON string is invalid with respect to WarehouseBasedDeliveryTime
   */
  public static WarehouseBasedDeliveryTime fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WarehouseBasedDeliveryTime.class);
  }

  /**
   * Convert an instance of WarehouseBasedDeliveryTime to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

