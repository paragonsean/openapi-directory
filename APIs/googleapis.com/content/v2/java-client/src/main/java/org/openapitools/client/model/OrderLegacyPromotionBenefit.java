/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Price;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderLegacyPromotionBenefit
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:02.825653-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderLegacyPromotionBenefit {
  public static final String SERIALIZED_NAME_DISCOUNT = "discount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT)
  private Price discount;

  public static final String SERIALIZED_NAME_OFFER_IDS = "offerIds";
  @SerializedName(SERIALIZED_NAME_OFFER_IDS)
  private List<String> offerIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUB_TYPE = "subType";
  @SerializedName(SERIALIZED_NAME_SUB_TYPE)
  private String subType;

  public static final String SERIALIZED_NAME_TAX_IMPACT = "taxImpact";
  @SerializedName(SERIALIZED_NAME_TAX_IMPACT)
  private Price taxImpact;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public OrderLegacyPromotionBenefit() {
  }

  public OrderLegacyPromotionBenefit discount(Price discount) {
    this.discount = discount;
    return this;
  }

  /**
   * Get discount
   * @return discount
   */
  @javax.annotation.Nullable
  public Price getDiscount() {
    return discount;
  }

  public void setDiscount(Price discount) {
    this.discount = discount;
  }


  public OrderLegacyPromotionBenefit offerIds(List<String> offerIds) {
    this.offerIds = offerIds;
    return this;
  }

  public OrderLegacyPromotionBenefit addOfferIdsItem(String offerIdsItem) {
    if (this.offerIds == null) {
      this.offerIds = new ArrayList<>();
    }
    this.offerIds.add(offerIdsItem);
    return this;
  }

  /**
   * The OfferId(s) that were purchased in this order and map to this specific benefit of the promotion.
   * @return offerIds
   */
  @javax.annotation.Nullable
  public List<String> getOfferIds() {
    return offerIds;
  }

  public void setOfferIds(List<String> offerIds) {
    this.offerIds = offerIds;
  }


  public OrderLegacyPromotionBenefit subType(String subType) {
    this.subType = subType;
    return this;
  }

  /**
   * Further describes the benefit of the promotion. Note that we will expand on this enumeration as we support new promotion sub-types. Acceptable values are: - \&quot;&#x60;buyMGetMoneyOff&#x60;\&quot; - \&quot;&#x60;buyMGetNMoneyOff&#x60;\&quot; - \&quot;&#x60;buyMGetNPercentOff&#x60;\&quot; - \&quot;&#x60;buyMGetPercentOff&#x60;\&quot; - \&quot;&#x60;freeGift&#x60;\&quot; - \&quot;&#x60;freeGiftWithItemId&#x60;\&quot; - \&quot;&#x60;freeGiftWithValue&#x60;\&quot; - \&quot;&#x60;freeOvernightShipping&#x60;\&quot; - \&quot;&#x60;freeShipping&#x60;\&quot; - \&quot;&#x60;freeTwoDayShipping&#x60;\&quot; - \&quot;&#x60;moneyOff&#x60;\&quot; - \&quot;&#x60;percentageOff&#x60;\&quot; - \&quot;&#x60;rewardPoints&#x60;\&quot; - \&quot;&#x60;salePrice&#x60;\&quot; 
   * @return subType
   */
  @javax.annotation.Nullable
  public String getSubType() {
    return subType;
  }

  public void setSubType(String subType) {
    this.subType = subType;
  }


  public OrderLegacyPromotionBenefit taxImpact(Price taxImpact) {
    this.taxImpact = taxImpact;
    return this;
  }

  /**
   * Get taxImpact
   * @return taxImpact
   */
  @javax.annotation.Nullable
  public Price getTaxImpact() {
    return taxImpact;
  }

  public void setTaxImpact(Price taxImpact) {
    this.taxImpact = taxImpact;
  }


  public OrderLegacyPromotionBenefit type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Describes whether the promotion applies to products (e.g. 20% off) or to shipping (e.g. Free Shipping). Acceptable values are: - \&quot;&#x60;product&#x60;\&quot; - \&quot;&#x60;shipping&#x60;\&quot; 
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderLegacyPromotionBenefit orderLegacyPromotionBenefit = (OrderLegacyPromotionBenefit) o;
    return Objects.equals(this.discount, orderLegacyPromotionBenefit.discount) &&
        Objects.equals(this.offerIds, orderLegacyPromotionBenefit.offerIds) &&
        Objects.equals(this.subType, orderLegacyPromotionBenefit.subType) &&
        Objects.equals(this.taxImpact, orderLegacyPromotionBenefit.taxImpact) &&
        Objects.equals(this.type, orderLegacyPromotionBenefit.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(discount, offerIds, subType, taxImpact, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderLegacyPromotionBenefit {\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    offerIds: ").append(toIndentedString(offerIds)).append("\n");
    sb.append("    subType: ").append(toIndentedString(subType)).append("\n");
    sb.append("    taxImpact: ").append(toIndentedString(taxImpact)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("discount");
    openapiFields.add("offerIds");
    openapiFields.add("subType");
    openapiFields.add("taxImpact");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderLegacyPromotionBenefit
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderLegacyPromotionBenefit.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderLegacyPromotionBenefit is not found in the empty JSON string", OrderLegacyPromotionBenefit.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderLegacyPromotionBenefit.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderLegacyPromotionBenefit` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `discount`
      if (jsonObj.get("discount") != null && !jsonObj.get("discount").isJsonNull()) {
        Price.validateJsonElement(jsonObj.get("discount"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("offerIds") != null && !jsonObj.get("offerIds").isJsonNull() && !jsonObj.get("offerIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `offerIds` to be an array in the JSON string but got `%s`", jsonObj.get("offerIds").toString()));
      }
      if ((jsonObj.get("subType") != null && !jsonObj.get("subType").isJsonNull()) && !jsonObj.get("subType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subType").toString()));
      }
      // validate the optional field `taxImpact`
      if (jsonObj.get("taxImpact") != null && !jsonObj.get("taxImpact").isJsonNull()) {
        Price.validateJsonElement(jsonObj.get("taxImpact"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderLegacyPromotionBenefit.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderLegacyPromotionBenefit' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderLegacyPromotionBenefit> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderLegacyPromotionBenefit.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderLegacyPromotionBenefit>() {
           @Override
           public void write(JsonWriter out, OrderLegacyPromotionBenefit value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderLegacyPromotionBenefit read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderLegacyPromotionBenefit given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderLegacyPromotionBenefit
   * @throws IOException if the JSON string is invalid with respect to OrderLegacyPromotionBenefit
   */
  public static OrderLegacyPromotionBenefit fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderLegacyPromotionBenefit.class);
  }

  /**
   * Convert an instance of OrderLegacyPromotionBenefit to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

