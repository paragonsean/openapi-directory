/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.OrdersCustomBatchRequestEntryCancel;
import org.openapitools.client.model.OrdersCustomBatchRequestEntryCancelLineItem;
import org.openapitools.client.model.OrdersCustomBatchRequestEntryInStoreRefundLineItem;
import org.openapitools.client.model.OrdersCustomBatchRequestEntryRefund;
import org.openapitools.client.model.OrdersCustomBatchRequestEntryRejectReturnLineItem;
import org.openapitools.client.model.OrdersCustomBatchRequestEntryReturnLineItem;
import org.openapitools.client.model.OrdersCustomBatchRequestEntryReturnRefundLineItem;
import org.openapitools.client.model.OrdersCustomBatchRequestEntrySetLineItemMetadata;
import org.openapitools.client.model.OrdersCustomBatchRequestEntryShipLineItems;
import org.openapitools.client.model.OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails;
import org.openapitools.client.model.OrdersCustomBatchRequestEntryUpdateShipment;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrdersCustomBatchRequestEntry
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:02.825653-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrdersCustomBatchRequestEntry {
  public static final String SERIALIZED_NAME_BATCH_ID = "batchId";
  @SerializedName(SERIALIZED_NAME_BATCH_ID)
  private Integer batchId;

  public static final String SERIALIZED_NAME_CANCEL = "cancel";
  @SerializedName(SERIALIZED_NAME_CANCEL)
  private OrdersCustomBatchRequestEntryCancel cancel;

  public static final String SERIALIZED_NAME_CANCEL_LINE_ITEM = "cancelLineItem";
  @SerializedName(SERIALIZED_NAME_CANCEL_LINE_ITEM)
  private OrdersCustomBatchRequestEntryCancelLineItem cancelLineItem;

  public static final String SERIALIZED_NAME_IN_STORE_REFUND_LINE_ITEM = "inStoreRefundLineItem";
  @SerializedName(SERIALIZED_NAME_IN_STORE_REFUND_LINE_ITEM)
  private OrdersCustomBatchRequestEntryInStoreRefundLineItem inStoreRefundLineItem;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchantId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_MERCHANT_ORDER_ID = "merchantOrderId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ORDER_ID)
  private String merchantOrderId;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private String method;

  public static final String SERIALIZED_NAME_OPERATION_ID = "operationId";
  @SerializedName(SERIALIZED_NAME_OPERATION_ID)
  private String operationId;

  public static final String SERIALIZED_NAME_ORDER_ID = "orderId";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_REFUND = "refund";
  @SerializedName(SERIALIZED_NAME_REFUND)
  private OrdersCustomBatchRequestEntryRefund refund;

  public static final String SERIALIZED_NAME_REJECT_RETURN_LINE_ITEM = "rejectReturnLineItem";
  @SerializedName(SERIALIZED_NAME_REJECT_RETURN_LINE_ITEM)
  private OrdersCustomBatchRequestEntryRejectReturnLineItem rejectReturnLineItem;

  public static final String SERIALIZED_NAME_RETURN_LINE_ITEM = "returnLineItem";
  @SerializedName(SERIALIZED_NAME_RETURN_LINE_ITEM)
  private OrdersCustomBatchRequestEntryReturnLineItem returnLineItem;

  public static final String SERIALIZED_NAME_RETURN_REFUND_LINE_ITEM = "returnRefundLineItem";
  @SerializedName(SERIALIZED_NAME_RETURN_REFUND_LINE_ITEM)
  private OrdersCustomBatchRequestEntryReturnRefundLineItem returnRefundLineItem;

  public static final String SERIALIZED_NAME_SET_LINE_ITEM_METADATA = "setLineItemMetadata";
  @SerializedName(SERIALIZED_NAME_SET_LINE_ITEM_METADATA)
  private OrdersCustomBatchRequestEntrySetLineItemMetadata setLineItemMetadata;

  public static final String SERIALIZED_NAME_SHIP_LINE_ITEMS = "shipLineItems";
  @SerializedName(SERIALIZED_NAME_SHIP_LINE_ITEMS)
  private OrdersCustomBatchRequestEntryShipLineItems shipLineItems;

  public static final String SERIALIZED_NAME_UPDATE_LINE_ITEM_SHIPPING_DETAILS = "updateLineItemShippingDetails";
  @SerializedName(SERIALIZED_NAME_UPDATE_LINE_ITEM_SHIPPING_DETAILS)
  private OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails updateLineItemShippingDetails;

  public static final String SERIALIZED_NAME_UPDATE_SHIPMENT = "updateShipment";
  @SerializedName(SERIALIZED_NAME_UPDATE_SHIPMENT)
  private OrdersCustomBatchRequestEntryUpdateShipment updateShipment;

  public OrdersCustomBatchRequestEntry() {
  }

  public OrdersCustomBatchRequestEntry batchId(Integer batchId) {
    this.batchId = batchId;
    return this;
  }

  /**
   * An entry ID, unique within the batch request.
   * @return batchId
   */
  @javax.annotation.Nullable
  public Integer getBatchId() {
    return batchId;
  }

  public void setBatchId(Integer batchId) {
    this.batchId = batchId;
  }


  public OrdersCustomBatchRequestEntry cancel(OrdersCustomBatchRequestEntryCancel cancel) {
    this.cancel = cancel;
    return this;
  }

  /**
   * Get cancel
   * @return cancel
   */
  @javax.annotation.Nullable
  public OrdersCustomBatchRequestEntryCancel getCancel() {
    return cancel;
  }

  public void setCancel(OrdersCustomBatchRequestEntryCancel cancel) {
    this.cancel = cancel;
  }


  public OrdersCustomBatchRequestEntry cancelLineItem(OrdersCustomBatchRequestEntryCancelLineItem cancelLineItem) {
    this.cancelLineItem = cancelLineItem;
    return this;
  }

  /**
   * Get cancelLineItem
   * @return cancelLineItem
   */
  @javax.annotation.Nullable
  public OrdersCustomBatchRequestEntryCancelLineItem getCancelLineItem() {
    return cancelLineItem;
  }

  public void setCancelLineItem(OrdersCustomBatchRequestEntryCancelLineItem cancelLineItem) {
    this.cancelLineItem = cancelLineItem;
  }


  public OrdersCustomBatchRequestEntry inStoreRefundLineItem(OrdersCustomBatchRequestEntryInStoreRefundLineItem inStoreRefundLineItem) {
    this.inStoreRefundLineItem = inStoreRefundLineItem;
    return this;
  }

  /**
   * Get inStoreRefundLineItem
   * @return inStoreRefundLineItem
   */
  @javax.annotation.Nullable
  public OrdersCustomBatchRequestEntryInStoreRefundLineItem getInStoreRefundLineItem() {
    return inStoreRefundLineItem;
  }

  public void setInStoreRefundLineItem(OrdersCustomBatchRequestEntryInStoreRefundLineItem inStoreRefundLineItem) {
    this.inStoreRefundLineItem = inStoreRefundLineItem;
  }


  public OrdersCustomBatchRequestEntry merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  /**
   * The ID of the managing account.
   * @return merchantId
   */
  @javax.annotation.Nullable
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public OrdersCustomBatchRequestEntry merchantOrderId(String merchantOrderId) {
    this.merchantOrderId = merchantOrderId;
    return this;
  }

  /**
   * The merchant order ID. Required for &#x60;updateMerchantOrderId&#x60; and &#x60;getByMerchantOrderId&#x60; methods.
   * @return merchantOrderId
   */
  @javax.annotation.Nullable
  public String getMerchantOrderId() {
    return merchantOrderId;
  }

  public void setMerchantOrderId(String merchantOrderId) {
    this.merchantOrderId = merchantOrderId;
  }


  public OrdersCustomBatchRequestEntry method(String method) {
    this.method = method;
    return this;
  }

  /**
   * The method of the batch entry. Acceptable values are: - \&quot;&#x60;acknowledge&#x60;\&quot; - \&quot;&#x60;cancel&#x60;\&quot; - \&quot;&#x60;cancelLineItem&#x60;\&quot; - \&quot;&#x60;get&#x60;\&quot; - \&quot;&#x60;getByMerchantOrderId&#x60;\&quot; - \&quot;&#x60;inStoreRefundLineItem&#x60;\&quot; - \&quot;&#x60;refund&#x60;\&quot; - \&quot;&#x60;rejectReturnLineItem&#x60;\&quot; - \&quot;&#x60;returnLineItem&#x60;\&quot; - \&quot;&#x60;returnRefundLineItem&#x60;\&quot; - \&quot;&#x60;setLineItemMetadata&#x60;\&quot; - \&quot;&#x60;shipLineItems&#x60;\&quot; - \&quot;&#x60;updateLineItemShippingDetails&#x60;\&quot; - \&quot;&#x60;updateMerchantOrderId&#x60;\&quot; - \&quot;&#x60;updateShipment&#x60;\&quot; 
   * @return method
   */
  @javax.annotation.Nullable
  public String getMethod() {
    return method;
  }

  public void setMethod(String method) {
    this.method = method;
  }


  public OrdersCustomBatchRequestEntry operationId(String operationId) {
    this.operationId = operationId;
    return this;
  }

  /**
   * The ID of the operation. Unique across all operations for a given order. Required for all methods beside &#x60;get&#x60; and &#x60;getByMerchantOrderId&#x60;.
   * @return operationId
   */
  @javax.annotation.Nullable
  public String getOperationId() {
    return operationId;
  }

  public void setOperationId(String operationId) {
    this.operationId = operationId;
  }


  public OrdersCustomBatchRequestEntry orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * The ID of the order. Required for all methods beside &#x60;getByMerchantOrderId&#x60;.
   * @return orderId
   */
  @javax.annotation.Nullable
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public OrdersCustomBatchRequestEntry refund(OrdersCustomBatchRequestEntryRefund refund) {
    this.refund = refund;
    return this;
  }

  /**
   * Get refund
   * @return refund
   */
  @javax.annotation.Nullable
  public OrdersCustomBatchRequestEntryRefund getRefund() {
    return refund;
  }

  public void setRefund(OrdersCustomBatchRequestEntryRefund refund) {
    this.refund = refund;
  }


  public OrdersCustomBatchRequestEntry rejectReturnLineItem(OrdersCustomBatchRequestEntryRejectReturnLineItem rejectReturnLineItem) {
    this.rejectReturnLineItem = rejectReturnLineItem;
    return this;
  }

  /**
   * Get rejectReturnLineItem
   * @return rejectReturnLineItem
   */
  @javax.annotation.Nullable
  public OrdersCustomBatchRequestEntryRejectReturnLineItem getRejectReturnLineItem() {
    return rejectReturnLineItem;
  }

  public void setRejectReturnLineItem(OrdersCustomBatchRequestEntryRejectReturnLineItem rejectReturnLineItem) {
    this.rejectReturnLineItem = rejectReturnLineItem;
  }


  public OrdersCustomBatchRequestEntry returnLineItem(OrdersCustomBatchRequestEntryReturnLineItem returnLineItem) {
    this.returnLineItem = returnLineItem;
    return this;
  }

  /**
   * Get returnLineItem
   * @return returnLineItem
   */
  @javax.annotation.Nullable
  public OrdersCustomBatchRequestEntryReturnLineItem getReturnLineItem() {
    return returnLineItem;
  }

  public void setReturnLineItem(OrdersCustomBatchRequestEntryReturnLineItem returnLineItem) {
    this.returnLineItem = returnLineItem;
  }


  public OrdersCustomBatchRequestEntry returnRefundLineItem(OrdersCustomBatchRequestEntryReturnRefundLineItem returnRefundLineItem) {
    this.returnRefundLineItem = returnRefundLineItem;
    return this;
  }

  /**
   * Get returnRefundLineItem
   * @return returnRefundLineItem
   */
  @javax.annotation.Nullable
  public OrdersCustomBatchRequestEntryReturnRefundLineItem getReturnRefundLineItem() {
    return returnRefundLineItem;
  }

  public void setReturnRefundLineItem(OrdersCustomBatchRequestEntryReturnRefundLineItem returnRefundLineItem) {
    this.returnRefundLineItem = returnRefundLineItem;
  }


  public OrdersCustomBatchRequestEntry setLineItemMetadata(OrdersCustomBatchRequestEntrySetLineItemMetadata setLineItemMetadata) {
    this.setLineItemMetadata = setLineItemMetadata;
    return this;
  }

  /**
   * Get setLineItemMetadata
   * @return setLineItemMetadata
   */
  @javax.annotation.Nullable
  public OrdersCustomBatchRequestEntrySetLineItemMetadata getSetLineItemMetadata() {
    return setLineItemMetadata;
  }

  public void setSetLineItemMetadata(OrdersCustomBatchRequestEntrySetLineItemMetadata setLineItemMetadata) {
    this.setLineItemMetadata = setLineItemMetadata;
  }


  public OrdersCustomBatchRequestEntry shipLineItems(OrdersCustomBatchRequestEntryShipLineItems shipLineItems) {
    this.shipLineItems = shipLineItems;
    return this;
  }

  /**
   * Get shipLineItems
   * @return shipLineItems
   */
  @javax.annotation.Nullable
  public OrdersCustomBatchRequestEntryShipLineItems getShipLineItems() {
    return shipLineItems;
  }

  public void setShipLineItems(OrdersCustomBatchRequestEntryShipLineItems shipLineItems) {
    this.shipLineItems = shipLineItems;
  }


  public OrdersCustomBatchRequestEntry updateLineItemShippingDetails(OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails updateLineItemShippingDetails) {
    this.updateLineItemShippingDetails = updateLineItemShippingDetails;
    return this;
  }

  /**
   * Get updateLineItemShippingDetails
   * @return updateLineItemShippingDetails
   */
  @javax.annotation.Nullable
  public OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails getUpdateLineItemShippingDetails() {
    return updateLineItemShippingDetails;
  }

  public void setUpdateLineItemShippingDetails(OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails updateLineItemShippingDetails) {
    this.updateLineItemShippingDetails = updateLineItemShippingDetails;
  }


  public OrdersCustomBatchRequestEntry updateShipment(OrdersCustomBatchRequestEntryUpdateShipment updateShipment) {
    this.updateShipment = updateShipment;
    return this;
  }

  /**
   * Get updateShipment
   * @return updateShipment
   */
  @javax.annotation.Nullable
  public OrdersCustomBatchRequestEntryUpdateShipment getUpdateShipment() {
    return updateShipment;
  }

  public void setUpdateShipment(OrdersCustomBatchRequestEntryUpdateShipment updateShipment) {
    this.updateShipment = updateShipment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrdersCustomBatchRequestEntry ordersCustomBatchRequestEntry = (OrdersCustomBatchRequestEntry) o;
    return Objects.equals(this.batchId, ordersCustomBatchRequestEntry.batchId) &&
        Objects.equals(this.cancel, ordersCustomBatchRequestEntry.cancel) &&
        Objects.equals(this.cancelLineItem, ordersCustomBatchRequestEntry.cancelLineItem) &&
        Objects.equals(this.inStoreRefundLineItem, ordersCustomBatchRequestEntry.inStoreRefundLineItem) &&
        Objects.equals(this.merchantId, ordersCustomBatchRequestEntry.merchantId) &&
        Objects.equals(this.merchantOrderId, ordersCustomBatchRequestEntry.merchantOrderId) &&
        Objects.equals(this.method, ordersCustomBatchRequestEntry.method) &&
        Objects.equals(this.operationId, ordersCustomBatchRequestEntry.operationId) &&
        Objects.equals(this.orderId, ordersCustomBatchRequestEntry.orderId) &&
        Objects.equals(this.refund, ordersCustomBatchRequestEntry.refund) &&
        Objects.equals(this.rejectReturnLineItem, ordersCustomBatchRequestEntry.rejectReturnLineItem) &&
        Objects.equals(this.returnLineItem, ordersCustomBatchRequestEntry.returnLineItem) &&
        Objects.equals(this.returnRefundLineItem, ordersCustomBatchRequestEntry.returnRefundLineItem) &&
        Objects.equals(this.setLineItemMetadata, ordersCustomBatchRequestEntry.setLineItemMetadata) &&
        Objects.equals(this.shipLineItems, ordersCustomBatchRequestEntry.shipLineItems) &&
        Objects.equals(this.updateLineItemShippingDetails, ordersCustomBatchRequestEntry.updateLineItemShippingDetails) &&
        Objects.equals(this.updateShipment, ordersCustomBatchRequestEntry.updateShipment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(batchId, cancel, cancelLineItem, inStoreRefundLineItem, merchantId, merchantOrderId, method, operationId, orderId, refund, rejectReturnLineItem, returnLineItem, returnRefundLineItem, setLineItemMetadata, shipLineItems, updateLineItemShippingDetails, updateShipment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrdersCustomBatchRequestEntry {\n");
    sb.append("    batchId: ").append(toIndentedString(batchId)).append("\n");
    sb.append("    cancel: ").append(toIndentedString(cancel)).append("\n");
    sb.append("    cancelLineItem: ").append(toIndentedString(cancelLineItem)).append("\n");
    sb.append("    inStoreRefundLineItem: ").append(toIndentedString(inStoreRefundLineItem)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    merchantOrderId: ").append(toIndentedString(merchantOrderId)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    operationId: ").append(toIndentedString(operationId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    refund: ").append(toIndentedString(refund)).append("\n");
    sb.append("    rejectReturnLineItem: ").append(toIndentedString(rejectReturnLineItem)).append("\n");
    sb.append("    returnLineItem: ").append(toIndentedString(returnLineItem)).append("\n");
    sb.append("    returnRefundLineItem: ").append(toIndentedString(returnRefundLineItem)).append("\n");
    sb.append("    setLineItemMetadata: ").append(toIndentedString(setLineItemMetadata)).append("\n");
    sb.append("    shipLineItems: ").append(toIndentedString(shipLineItems)).append("\n");
    sb.append("    updateLineItemShippingDetails: ").append(toIndentedString(updateLineItemShippingDetails)).append("\n");
    sb.append("    updateShipment: ").append(toIndentedString(updateShipment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("batchId");
    openapiFields.add("cancel");
    openapiFields.add("cancelLineItem");
    openapiFields.add("inStoreRefundLineItem");
    openapiFields.add("merchantId");
    openapiFields.add("merchantOrderId");
    openapiFields.add("method");
    openapiFields.add("operationId");
    openapiFields.add("orderId");
    openapiFields.add("refund");
    openapiFields.add("rejectReturnLineItem");
    openapiFields.add("returnLineItem");
    openapiFields.add("returnRefundLineItem");
    openapiFields.add("setLineItemMetadata");
    openapiFields.add("shipLineItems");
    openapiFields.add("updateLineItemShippingDetails");
    openapiFields.add("updateShipment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrdersCustomBatchRequestEntry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrdersCustomBatchRequestEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrdersCustomBatchRequestEntry is not found in the empty JSON string", OrdersCustomBatchRequestEntry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrdersCustomBatchRequestEntry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrdersCustomBatchRequestEntry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `cancel`
      if (jsonObj.get("cancel") != null && !jsonObj.get("cancel").isJsonNull()) {
        OrdersCustomBatchRequestEntryCancel.validateJsonElement(jsonObj.get("cancel"));
      }
      // validate the optional field `cancelLineItem`
      if (jsonObj.get("cancelLineItem") != null && !jsonObj.get("cancelLineItem").isJsonNull()) {
        OrdersCustomBatchRequestEntryCancelLineItem.validateJsonElement(jsonObj.get("cancelLineItem"));
      }
      // validate the optional field `inStoreRefundLineItem`
      if (jsonObj.get("inStoreRefundLineItem") != null && !jsonObj.get("inStoreRefundLineItem").isJsonNull()) {
        OrdersCustomBatchRequestEntryInStoreRefundLineItem.validateJsonElement(jsonObj.get("inStoreRefundLineItem"));
      }
      if ((jsonObj.get("merchantId") != null && !jsonObj.get("merchantId").isJsonNull()) && !jsonObj.get("merchantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchantId").toString()));
      }
      if ((jsonObj.get("merchantOrderId") != null && !jsonObj.get("merchantOrderId").isJsonNull()) && !jsonObj.get("merchantOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchantOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchantOrderId").toString()));
      }
      if ((jsonObj.get("method") != null && !jsonObj.get("method").isJsonNull()) && !jsonObj.get("method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("method").toString()));
      }
      if ((jsonObj.get("operationId") != null && !jsonObj.get("operationId").isJsonNull()) && !jsonObj.get("operationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operationId").toString()));
      }
      if ((jsonObj.get("orderId") != null && !jsonObj.get("orderId").isJsonNull()) && !jsonObj.get("orderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderId").toString()));
      }
      // validate the optional field `refund`
      if (jsonObj.get("refund") != null && !jsonObj.get("refund").isJsonNull()) {
        OrdersCustomBatchRequestEntryRefund.validateJsonElement(jsonObj.get("refund"));
      }
      // validate the optional field `rejectReturnLineItem`
      if (jsonObj.get("rejectReturnLineItem") != null && !jsonObj.get("rejectReturnLineItem").isJsonNull()) {
        OrdersCustomBatchRequestEntryRejectReturnLineItem.validateJsonElement(jsonObj.get("rejectReturnLineItem"));
      }
      // validate the optional field `returnLineItem`
      if (jsonObj.get("returnLineItem") != null && !jsonObj.get("returnLineItem").isJsonNull()) {
        OrdersCustomBatchRequestEntryReturnLineItem.validateJsonElement(jsonObj.get("returnLineItem"));
      }
      // validate the optional field `returnRefundLineItem`
      if (jsonObj.get("returnRefundLineItem") != null && !jsonObj.get("returnRefundLineItem").isJsonNull()) {
        OrdersCustomBatchRequestEntryReturnRefundLineItem.validateJsonElement(jsonObj.get("returnRefundLineItem"));
      }
      // validate the optional field `setLineItemMetadata`
      if (jsonObj.get("setLineItemMetadata") != null && !jsonObj.get("setLineItemMetadata").isJsonNull()) {
        OrdersCustomBatchRequestEntrySetLineItemMetadata.validateJsonElement(jsonObj.get("setLineItemMetadata"));
      }
      // validate the optional field `shipLineItems`
      if (jsonObj.get("shipLineItems") != null && !jsonObj.get("shipLineItems").isJsonNull()) {
        OrdersCustomBatchRequestEntryShipLineItems.validateJsonElement(jsonObj.get("shipLineItems"));
      }
      // validate the optional field `updateLineItemShippingDetails`
      if (jsonObj.get("updateLineItemShippingDetails") != null && !jsonObj.get("updateLineItemShippingDetails").isJsonNull()) {
        OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.validateJsonElement(jsonObj.get("updateLineItemShippingDetails"));
      }
      // validate the optional field `updateShipment`
      if (jsonObj.get("updateShipment") != null && !jsonObj.get("updateShipment").isJsonNull()) {
        OrdersCustomBatchRequestEntryUpdateShipment.validateJsonElement(jsonObj.get("updateShipment"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrdersCustomBatchRequestEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrdersCustomBatchRequestEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrdersCustomBatchRequestEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrdersCustomBatchRequestEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<OrdersCustomBatchRequestEntry>() {
           @Override
           public void write(JsonWriter out, OrdersCustomBatchRequestEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrdersCustomBatchRequestEntry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrdersCustomBatchRequestEntry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrdersCustomBatchRequestEntry
   * @throws IOException if the JSON string is invalid with respect to OrdersCustomBatchRequestEntry
   */
  public static OrdersCustomBatchRequestEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrdersCustomBatchRequestEntry.class);
  }

  /**
   * Convert an instance of OrdersCustomBatchRequestEntry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

