/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderLineItemReturnInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:02.825653-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderLineItemReturnInfo {
  public static final String SERIALIZED_NAME_DAYS_TO_RETURN = "daysToReturn";
  @SerializedName(SERIALIZED_NAME_DAYS_TO_RETURN)
  private Integer daysToReturn;

  public static final String SERIALIZED_NAME_IS_RETURNABLE = "isReturnable";
  @SerializedName(SERIALIZED_NAME_IS_RETURNABLE)
  private Boolean isReturnable;

  public static final String SERIALIZED_NAME_POLICY_URL = "policyUrl";
  @SerializedName(SERIALIZED_NAME_POLICY_URL)
  private String policyUrl;

  public OrderLineItemReturnInfo() {
  }

  public OrderLineItemReturnInfo daysToReturn(Integer daysToReturn) {
    this.daysToReturn = daysToReturn;
    return this;
  }

  /**
   * Required. How many days later the item can be returned.
   * @return daysToReturn
   */
  @javax.annotation.Nullable
  public Integer getDaysToReturn() {
    return daysToReturn;
  }

  public void setDaysToReturn(Integer daysToReturn) {
    this.daysToReturn = daysToReturn;
  }


  public OrderLineItemReturnInfo isReturnable(Boolean isReturnable) {
    this.isReturnable = isReturnable;
    return this;
  }

  /**
   * Required. Whether the item is returnable.
   * @return isReturnable
   */
  @javax.annotation.Nullable
  public Boolean getIsReturnable() {
    return isReturnable;
  }

  public void setIsReturnable(Boolean isReturnable) {
    this.isReturnable = isReturnable;
  }


  public OrderLineItemReturnInfo policyUrl(String policyUrl) {
    this.policyUrl = policyUrl;
    return this;
  }

  /**
   * Required. URL of the item return policy.
   * @return policyUrl
   */
  @javax.annotation.Nullable
  public String getPolicyUrl() {
    return policyUrl;
  }

  public void setPolicyUrl(String policyUrl) {
    this.policyUrl = policyUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderLineItemReturnInfo orderLineItemReturnInfo = (OrderLineItemReturnInfo) o;
    return Objects.equals(this.daysToReturn, orderLineItemReturnInfo.daysToReturn) &&
        Objects.equals(this.isReturnable, orderLineItemReturnInfo.isReturnable) &&
        Objects.equals(this.policyUrl, orderLineItemReturnInfo.policyUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(daysToReturn, isReturnable, policyUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderLineItemReturnInfo {\n");
    sb.append("    daysToReturn: ").append(toIndentedString(daysToReturn)).append("\n");
    sb.append("    isReturnable: ").append(toIndentedString(isReturnable)).append("\n");
    sb.append("    policyUrl: ").append(toIndentedString(policyUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("daysToReturn");
    openapiFields.add("isReturnable");
    openapiFields.add("policyUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderLineItemReturnInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderLineItemReturnInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderLineItemReturnInfo is not found in the empty JSON string", OrderLineItemReturnInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderLineItemReturnInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderLineItemReturnInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("policyUrl") != null && !jsonObj.get("policyUrl").isJsonNull()) && !jsonObj.get("policyUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policyUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policyUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderLineItemReturnInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderLineItemReturnInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderLineItemReturnInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderLineItemReturnInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderLineItemReturnInfo>() {
           @Override
           public void write(JsonWriter out, OrderLineItemReturnInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderLineItemReturnInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderLineItemReturnInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderLineItemReturnInfo
   * @throws IOException if the JSON string is invalid with respect to OrderLineItemReturnInfo
   */
  public static OrderLineItemReturnInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderLineItemReturnInfo.class);
  }

  /**
   * Convert an instance of OrderLineItemReturnInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

