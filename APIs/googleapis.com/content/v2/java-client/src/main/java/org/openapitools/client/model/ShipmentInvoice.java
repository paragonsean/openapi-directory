/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.InvoiceSummary;
import org.openapitools.client.model.ShipmentInvoiceLineItemInvoice;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ShipmentInvoice
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:02.825653-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ShipmentInvoice {
  public static final String SERIALIZED_NAME_INVOICE_SUMMARY = "invoiceSummary";
  @SerializedName(SERIALIZED_NAME_INVOICE_SUMMARY)
  private InvoiceSummary invoiceSummary;

  public static final String SERIALIZED_NAME_LINE_ITEM_INVOICES = "lineItemInvoices";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_INVOICES)
  private List<ShipmentInvoiceLineItemInvoice> lineItemInvoices = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHIPMENT_GROUP_ID = "shipmentGroupId";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_GROUP_ID)
  private String shipmentGroupId;

  public ShipmentInvoice() {
  }

  public ShipmentInvoice invoiceSummary(InvoiceSummary invoiceSummary) {
    this.invoiceSummary = invoiceSummary;
    return this;
  }

  /**
   * Get invoiceSummary
   * @return invoiceSummary
   */
  @javax.annotation.Nullable
  public InvoiceSummary getInvoiceSummary() {
    return invoiceSummary;
  }

  public void setInvoiceSummary(InvoiceSummary invoiceSummary) {
    this.invoiceSummary = invoiceSummary;
  }


  public ShipmentInvoice lineItemInvoices(List<ShipmentInvoiceLineItemInvoice> lineItemInvoices) {
    this.lineItemInvoices = lineItemInvoices;
    return this;
  }

  public ShipmentInvoice addLineItemInvoicesItem(ShipmentInvoiceLineItemInvoice lineItemInvoicesItem) {
    if (this.lineItemInvoices == null) {
      this.lineItemInvoices = new ArrayList<>();
    }
    this.lineItemInvoices.add(lineItemInvoicesItem);
    return this;
  }

  /**
   * [required] Invoice details per line item.
   * @return lineItemInvoices
   */
  @javax.annotation.Nullable
  public List<ShipmentInvoiceLineItemInvoice> getLineItemInvoices() {
    return lineItemInvoices;
  }

  public void setLineItemInvoices(List<ShipmentInvoiceLineItemInvoice> lineItemInvoices) {
    this.lineItemInvoices = lineItemInvoices;
  }


  public ShipmentInvoice shipmentGroupId(String shipmentGroupId) {
    this.shipmentGroupId = shipmentGroupId;
    return this;
  }

  /**
   * [required] ID of the shipment group. It is assigned by the merchant in the &#x60;shipLineItems&#x60; method and is used to group multiple line items that have the same kind of shipping charges.
   * @return shipmentGroupId
   */
  @javax.annotation.Nullable
  public String getShipmentGroupId() {
    return shipmentGroupId;
  }

  public void setShipmentGroupId(String shipmentGroupId) {
    this.shipmentGroupId = shipmentGroupId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipmentInvoice shipmentInvoice = (ShipmentInvoice) o;
    return Objects.equals(this.invoiceSummary, shipmentInvoice.invoiceSummary) &&
        Objects.equals(this.lineItemInvoices, shipmentInvoice.lineItemInvoices) &&
        Objects.equals(this.shipmentGroupId, shipmentInvoice.shipmentGroupId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceSummary, lineItemInvoices, shipmentGroupId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipmentInvoice {\n");
    sb.append("    invoiceSummary: ").append(toIndentedString(invoiceSummary)).append("\n");
    sb.append("    lineItemInvoices: ").append(toIndentedString(lineItemInvoices)).append("\n");
    sb.append("    shipmentGroupId: ").append(toIndentedString(shipmentGroupId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("invoiceSummary");
    openapiFields.add("lineItemInvoices");
    openapiFields.add("shipmentGroupId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ShipmentInvoice
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ShipmentInvoice.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ShipmentInvoice is not found in the empty JSON string", ShipmentInvoice.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ShipmentInvoice.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ShipmentInvoice` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `invoiceSummary`
      if (jsonObj.get("invoiceSummary") != null && !jsonObj.get("invoiceSummary").isJsonNull()) {
        InvoiceSummary.validateJsonElement(jsonObj.get("invoiceSummary"));
      }
      if (jsonObj.get("lineItemInvoices") != null && !jsonObj.get("lineItemInvoices").isJsonNull()) {
        JsonArray jsonArraylineItemInvoices = jsonObj.getAsJsonArray("lineItemInvoices");
        if (jsonArraylineItemInvoices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lineItemInvoices").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lineItemInvoices` to be an array in the JSON string but got `%s`", jsonObj.get("lineItemInvoices").toString()));
          }

          // validate the optional field `lineItemInvoices` (array)
          for (int i = 0; i < jsonArraylineItemInvoices.size(); i++) {
            ShipmentInvoiceLineItemInvoice.validateJsonElement(jsonArraylineItemInvoices.get(i));
          };
        }
      }
      if ((jsonObj.get("shipmentGroupId") != null && !jsonObj.get("shipmentGroupId").isJsonNull()) && !jsonObj.get("shipmentGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipmentGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipmentGroupId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ShipmentInvoice.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ShipmentInvoice' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ShipmentInvoice> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ShipmentInvoice.class));

       return (TypeAdapter<T>) new TypeAdapter<ShipmentInvoice>() {
           @Override
           public void write(JsonWriter out, ShipmentInvoice value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ShipmentInvoice read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ShipmentInvoice given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ShipmentInvoice
   * @throws IOException if the JSON string is invalid with respect to ShipmentInvoice
   */
  public static ShipmentInvoice fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ShipmentInvoice.class);
  }

  /**
   * Convert an instance of ShipmentInvoice to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

