/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Amount;
import org.openapitools.client.model.InvoiceSummaryAdditionalChargeSummary;
import org.openapitools.client.model.Promotion;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InvoiceSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:02.825653-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InvoiceSummary {
  public static final String SERIALIZED_NAME_ADDITIONAL_CHARGE_SUMMARIES = "additionalChargeSummaries";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_CHARGE_SUMMARIES)
  private List<InvoiceSummaryAdditionalChargeSummary> additionalChargeSummaries = new ArrayList<>();

  public static final String SERIALIZED_NAME_CUSTOMER_BALANCE = "customerBalance";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_BALANCE)
  private Amount customerBalance;

  public static final String SERIALIZED_NAME_GOOGLE_BALANCE = "googleBalance";
  @SerializedName(SERIALIZED_NAME_GOOGLE_BALANCE)
  private Amount googleBalance;

  public static final String SERIALIZED_NAME_MERCHANT_BALANCE = "merchantBalance";
  @SerializedName(SERIALIZED_NAME_MERCHANT_BALANCE)
  private Amount merchantBalance;

  public static final String SERIALIZED_NAME_PRODUCT_TOTAL = "productTotal";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TOTAL)
  private Amount productTotal;

  public static final String SERIALIZED_NAME_PROMOTION_SUMMARIES = "promotionSummaries";
  @SerializedName(SERIALIZED_NAME_PROMOTION_SUMMARIES)
  private List<Promotion> promotionSummaries = new ArrayList<>();

  public InvoiceSummary() {
  }

  public InvoiceSummary additionalChargeSummaries(List<InvoiceSummaryAdditionalChargeSummary> additionalChargeSummaries) {
    this.additionalChargeSummaries = additionalChargeSummaries;
    return this;
  }

  public InvoiceSummary addAdditionalChargeSummariesItem(InvoiceSummaryAdditionalChargeSummary additionalChargeSummariesItem) {
    if (this.additionalChargeSummaries == null) {
      this.additionalChargeSummaries = new ArrayList<>();
    }
    this.additionalChargeSummaries.add(additionalChargeSummariesItem);
    return this;
  }

  /**
   * Summary of the total amounts of the additional charges.
   * @return additionalChargeSummaries
   */
  @javax.annotation.Nullable
  public List<InvoiceSummaryAdditionalChargeSummary> getAdditionalChargeSummaries() {
    return additionalChargeSummaries;
  }

  public void setAdditionalChargeSummaries(List<InvoiceSummaryAdditionalChargeSummary> additionalChargeSummaries) {
    this.additionalChargeSummaries = additionalChargeSummaries;
  }


  public InvoiceSummary customerBalance(Amount customerBalance) {
    this.customerBalance = customerBalance;
    return this;
  }

  /**
   * Get customerBalance
   * @return customerBalance
   */
  @javax.annotation.Nullable
  public Amount getCustomerBalance() {
    return customerBalance;
  }

  public void setCustomerBalance(Amount customerBalance) {
    this.customerBalance = customerBalance;
  }


  public InvoiceSummary googleBalance(Amount googleBalance) {
    this.googleBalance = googleBalance;
    return this;
  }

  /**
   * Get googleBalance
   * @return googleBalance
   */
  @javax.annotation.Nullable
  public Amount getGoogleBalance() {
    return googleBalance;
  }

  public void setGoogleBalance(Amount googleBalance) {
    this.googleBalance = googleBalance;
  }


  public InvoiceSummary merchantBalance(Amount merchantBalance) {
    this.merchantBalance = merchantBalance;
    return this;
  }

  /**
   * Get merchantBalance
   * @return merchantBalance
   */
  @javax.annotation.Nullable
  public Amount getMerchantBalance() {
    return merchantBalance;
  }

  public void setMerchantBalance(Amount merchantBalance) {
    this.merchantBalance = merchantBalance;
  }


  public InvoiceSummary productTotal(Amount productTotal) {
    this.productTotal = productTotal;
    return this;
  }

  /**
   * Get productTotal
   * @return productTotal
   */
  @javax.annotation.Nullable
  public Amount getProductTotal() {
    return productTotal;
  }

  public void setProductTotal(Amount productTotal) {
    this.productTotal = productTotal;
  }


  public InvoiceSummary promotionSummaries(List<Promotion> promotionSummaries) {
    this.promotionSummaries = promotionSummaries;
    return this;
  }

  public InvoiceSummary addPromotionSummariesItem(Promotion promotionSummariesItem) {
    if (this.promotionSummaries == null) {
      this.promotionSummaries = new ArrayList<>();
    }
    this.promotionSummaries.add(promotionSummariesItem);
    return this;
  }

  /**
   * Deprecated.
   * @return promotionSummaries
   */
  @javax.annotation.Nullable
  public List<Promotion> getPromotionSummaries() {
    return promotionSummaries;
  }

  public void setPromotionSummaries(List<Promotion> promotionSummaries) {
    this.promotionSummaries = promotionSummaries;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceSummary invoiceSummary = (InvoiceSummary) o;
    return Objects.equals(this.additionalChargeSummaries, invoiceSummary.additionalChargeSummaries) &&
        Objects.equals(this.customerBalance, invoiceSummary.customerBalance) &&
        Objects.equals(this.googleBalance, invoiceSummary.googleBalance) &&
        Objects.equals(this.merchantBalance, invoiceSummary.merchantBalance) &&
        Objects.equals(this.productTotal, invoiceSummary.productTotal) &&
        Objects.equals(this.promotionSummaries, invoiceSummary.promotionSummaries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalChargeSummaries, customerBalance, googleBalance, merchantBalance, productTotal, promotionSummaries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceSummary {\n");
    sb.append("    additionalChargeSummaries: ").append(toIndentedString(additionalChargeSummaries)).append("\n");
    sb.append("    customerBalance: ").append(toIndentedString(customerBalance)).append("\n");
    sb.append("    googleBalance: ").append(toIndentedString(googleBalance)).append("\n");
    sb.append("    merchantBalance: ").append(toIndentedString(merchantBalance)).append("\n");
    sb.append("    productTotal: ").append(toIndentedString(productTotal)).append("\n");
    sb.append("    promotionSummaries: ").append(toIndentedString(promotionSummaries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additionalChargeSummaries");
    openapiFields.add("customerBalance");
    openapiFields.add("googleBalance");
    openapiFields.add("merchantBalance");
    openapiFields.add("productTotal");
    openapiFields.add("promotionSummaries");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InvoiceSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InvoiceSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InvoiceSummary is not found in the empty JSON string", InvoiceSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InvoiceSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InvoiceSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("additionalChargeSummaries") != null && !jsonObj.get("additionalChargeSummaries").isJsonNull()) {
        JsonArray jsonArrayadditionalChargeSummaries = jsonObj.getAsJsonArray("additionalChargeSummaries");
        if (jsonArrayadditionalChargeSummaries != null) {
          // ensure the json data is an array
          if (!jsonObj.get("additionalChargeSummaries").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `additionalChargeSummaries` to be an array in the JSON string but got `%s`", jsonObj.get("additionalChargeSummaries").toString()));
          }

          // validate the optional field `additionalChargeSummaries` (array)
          for (int i = 0; i < jsonArrayadditionalChargeSummaries.size(); i++) {
            InvoiceSummaryAdditionalChargeSummary.validateJsonElement(jsonArrayadditionalChargeSummaries.get(i));
          };
        }
      }
      // validate the optional field `customerBalance`
      if (jsonObj.get("customerBalance") != null && !jsonObj.get("customerBalance").isJsonNull()) {
        Amount.validateJsonElement(jsonObj.get("customerBalance"));
      }
      // validate the optional field `googleBalance`
      if (jsonObj.get("googleBalance") != null && !jsonObj.get("googleBalance").isJsonNull()) {
        Amount.validateJsonElement(jsonObj.get("googleBalance"));
      }
      // validate the optional field `merchantBalance`
      if (jsonObj.get("merchantBalance") != null && !jsonObj.get("merchantBalance").isJsonNull()) {
        Amount.validateJsonElement(jsonObj.get("merchantBalance"));
      }
      // validate the optional field `productTotal`
      if (jsonObj.get("productTotal") != null && !jsonObj.get("productTotal").isJsonNull()) {
        Amount.validateJsonElement(jsonObj.get("productTotal"));
      }
      if (jsonObj.get("promotionSummaries") != null && !jsonObj.get("promotionSummaries").isJsonNull()) {
        JsonArray jsonArraypromotionSummaries = jsonObj.getAsJsonArray("promotionSummaries");
        if (jsonArraypromotionSummaries != null) {
          // ensure the json data is an array
          if (!jsonObj.get("promotionSummaries").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `promotionSummaries` to be an array in the JSON string but got `%s`", jsonObj.get("promotionSummaries").toString()));
          }

          // validate the optional field `promotionSummaries` (array)
          for (int i = 0; i < jsonArraypromotionSummaries.size(); i++) {
            Promotion.validateJsonElement(jsonArraypromotionSummaries.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InvoiceSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InvoiceSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InvoiceSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InvoiceSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<InvoiceSummary>() {
           @Override
           public void write(JsonWriter out, InvoiceSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InvoiceSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InvoiceSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InvoiceSummary
   * @throws IOException if the JSON string is invalid with respect to InvoiceSummary
   */
  public static InvoiceSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InvoiceSummary.class);
  }

  /**
   * Convert an instance of InvoiceSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

