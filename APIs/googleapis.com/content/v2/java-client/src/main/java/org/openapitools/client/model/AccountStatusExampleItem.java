/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AccountStatusExampleItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:02.825653-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccountStatusExampleItem {
  public static final String SERIALIZED_NAME_ITEM_ID = "itemId";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private String itemId;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_SUBMITTED_VALUE = "submittedValue";
  @SerializedName(SERIALIZED_NAME_SUBMITTED_VALUE)
  private String submittedValue;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_VALUE_ON_LANDING_PAGE = "valueOnLandingPage";
  @SerializedName(SERIALIZED_NAME_VALUE_ON_LANDING_PAGE)
  private String valueOnLandingPage;

  public AccountStatusExampleItem() {
  }

  public AccountStatusExampleItem itemId(String itemId) {
    this.itemId = itemId;
    return this;
  }

  /**
   * Get itemId
   * @return itemId
   */
  @javax.annotation.Nullable
  public String getItemId() {
    return itemId;
  }

  public void setItemId(String itemId) {
    this.itemId = itemId;
  }


  public AccountStatusExampleItem link(String link) {
    this.link = link;
    return this;
  }

  /**
   * Get link
   * @return link
   */
  @javax.annotation.Nullable
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }


  public AccountStatusExampleItem submittedValue(String submittedValue) {
    this.submittedValue = submittedValue;
    return this;
  }

  /**
   * Get submittedValue
   * @return submittedValue
   */
  @javax.annotation.Nullable
  public String getSubmittedValue() {
    return submittedValue;
  }

  public void setSubmittedValue(String submittedValue) {
    this.submittedValue = submittedValue;
  }


  public AccountStatusExampleItem title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public AccountStatusExampleItem valueOnLandingPage(String valueOnLandingPage) {
    this.valueOnLandingPage = valueOnLandingPage;
    return this;
  }

  /**
   * Get valueOnLandingPage
   * @return valueOnLandingPage
   */
  @javax.annotation.Nullable
  public String getValueOnLandingPage() {
    return valueOnLandingPage;
  }

  public void setValueOnLandingPage(String valueOnLandingPage) {
    this.valueOnLandingPage = valueOnLandingPage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountStatusExampleItem accountStatusExampleItem = (AccountStatusExampleItem) o;
    return Objects.equals(this.itemId, accountStatusExampleItem.itemId) &&
        Objects.equals(this.link, accountStatusExampleItem.link) &&
        Objects.equals(this.submittedValue, accountStatusExampleItem.submittedValue) &&
        Objects.equals(this.title, accountStatusExampleItem.title) &&
        Objects.equals(this.valueOnLandingPage, accountStatusExampleItem.valueOnLandingPage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemId, link, submittedValue, title, valueOnLandingPage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountStatusExampleItem {\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    submittedValue: ").append(toIndentedString(submittedValue)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    valueOnLandingPage: ").append(toIndentedString(valueOnLandingPage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("itemId");
    openapiFields.add("link");
    openapiFields.add("submittedValue");
    openapiFields.add("title");
    openapiFields.add("valueOnLandingPage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountStatusExampleItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountStatusExampleItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountStatusExampleItem is not found in the empty JSON string", AccountStatusExampleItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountStatusExampleItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountStatusExampleItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("itemId") != null && !jsonObj.get("itemId").isJsonNull()) && !jsonObj.get("itemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemId").toString()));
      }
      if ((jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) && !jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      if ((jsonObj.get("submittedValue") != null && !jsonObj.get("submittedValue").isJsonNull()) && !jsonObj.get("submittedValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `submittedValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("submittedValue").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("valueOnLandingPage") != null && !jsonObj.get("valueOnLandingPage").isJsonNull()) && !jsonObj.get("valueOnLandingPage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `valueOnLandingPage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("valueOnLandingPage").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountStatusExampleItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountStatusExampleItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountStatusExampleItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountStatusExampleItem.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountStatusExampleItem>() {
           @Override
           public void write(JsonWriter out, AccountStatusExampleItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountStatusExampleItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountStatusExampleItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountStatusExampleItem
   * @throws IOException if the JSON string is invalid with respect to AccountStatusExampleItem
   */
  public static AccountStatusExampleItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountStatusExampleItem.class);
  }

  /**
   * Convert an instance of AccountStatusExampleItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

