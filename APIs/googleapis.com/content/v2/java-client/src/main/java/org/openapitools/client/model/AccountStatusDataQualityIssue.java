/*
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountStatusExampleItem;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AccountStatusDataQualityIssue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:02.825653-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccountStatusDataQualityIssue {
  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_DESTINATION = "destination";
  @SerializedName(SERIALIZED_NAME_DESTINATION)
  private String destination;

  public static final String SERIALIZED_NAME_DETAIL = "detail";
  @SerializedName(SERIALIZED_NAME_DETAIL)
  private String detail;

  public static final String SERIALIZED_NAME_DISPLAYED_VALUE = "displayedValue";
  @SerializedName(SERIALIZED_NAME_DISPLAYED_VALUE)
  private String displayedValue;

  public static final String SERIALIZED_NAME_EXAMPLE_ITEMS = "exampleItems";
  @SerializedName(SERIALIZED_NAME_EXAMPLE_ITEMS)
  private List<AccountStatusExampleItem> exampleItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LAST_CHECKED = "lastChecked";
  @SerializedName(SERIALIZED_NAME_LAST_CHECKED)
  private String lastChecked;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_NUM_ITEMS = "numItems";
  @SerializedName(SERIALIZED_NAME_NUM_ITEMS)
  private Integer numItems;

  public static final String SERIALIZED_NAME_SEVERITY = "severity";
  @SerializedName(SERIALIZED_NAME_SEVERITY)
  private String severity;

  public static final String SERIALIZED_NAME_SUBMITTED_VALUE = "submittedValue";
  @SerializedName(SERIALIZED_NAME_SUBMITTED_VALUE)
  private String submittedValue;

  public AccountStatusDataQualityIssue() {
  }

  public AccountStatusDataQualityIssue country(String country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public AccountStatusDataQualityIssue destination(String destination) {
    this.destination = destination;
    return this;
  }

  /**
   * Get destination
   * @return destination
   */
  @javax.annotation.Nullable
  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }


  public AccountStatusDataQualityIssue detail(String detail) {
    this.detail = detail;
    return this;
  }

  /**
   * Get detail
   * @return detail
   */
  @javax.annotation.Nullable
  public String getDetail() {
    return detail;
  }

  public void setDetail(String detail) {
    this.detail = detail;
  }


  public AccountStatusDataQualityIssue displayedValue(String displayedValue) {
    this.displayedValue = displayedValue;
    return this;
  }

  /**
   * Get displayedValue
   * @return displayedValue
   */
  @javax.annotation.Nullable
  public String getDisplayedValue() {
    return displayedValue;
  }

  public void setDisplayedValue(String displayedValue) {
    this.displayedValue = displayedValue;
  }


  public AccountStatusDataQualityIssue exampleItems(List<AccountStatusExampleItem> exampleItems) {
    this.exampleItems = exampleItems;
    return this;
  }

  public AccountStatusDataQualityIssue addExampleItemsItem(AccountStatusExampleItem exampleItemsItem) {
    if (this.exampleItems == null) {
      this.exampleItems = new ArrayList<>();
    }
    this.exampleItems.add(exampleItemsItem);
    return this;
  }

  /**
   * Get exampleItems
   * @return exampleItems
   */
  @javax.annotation.Nullable
  public List<AccountStatusExampleItem> getExampleItems() {
    return exampleItems;
  }

  public void setExampleItems(List<AccountStatusExampleItem> exampleItems) {
    this.exampleItems = exampleItems;
  }


  public AccountStatusDataQualityIssue id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public AccountStatusDataQualityIssue lastChecked(String lastChecked) {
    this.lastChecked = lastChecked;
    return this;
  }

  /**
   * Get lastChecked
   * @return lastChecked
   */
  @javax.annotation.Nullable
  public String getLastChecked() {
    return lastChecked;
  }

  public void setLastChecked(String lastChecked) {
    this.lastChecked = lastChecked;
  }


  public AccountStatusDataQualityIssue location(String location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public AccountStatusDataQualityIssue numItems(Integer numItems) {
    this.numItems = numItems;
    return this;
  }

  /**
   * Get numItems
   * @return numItems
   */
  @javax.annotation.Nullable
  public Integer getNumItems() {
    return numItems;
  }

  public void setNumItems(Integer numItems) {
    this.numItems = numItems;
  }


  public AccountStatusDataQualityIssue severity(String severity) {
    this.severity = severity;
    return this;
  }

  /**
   *  Acceptable values are: - \&quot;&#x60;critical&#x60;\&quot; - \&quot;&#x60;error&#x60;\&quot; - \&quot;&#x60;suggestion&#x60;\&quot; 
   * @return severity
   */
  @javax.annotation.Nullable
  public String getSeverity() {
    return severity;
  }

  public void setSeverity(String severity) {
    this.severity = severity;
  }


  public AccountStatusDataQualityIssue submittedValue(String submittedValue) {
    this.submittedValue = submittedValue;
    return this;
  }

  /**
   * Get submittedValue
   * @return submittedValue
   */
  @javax.annotation.Nullable
  public String getSubmittedValue() {
    return submittedValue;
  }

  public void setSubmittedValue(String submittedValue) {
    this.submittedValue = submittedValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountStatusDataQualityIssue accountStatusDataQualityIssue = (AccountStatusDataQualityIssue) o;
    return Objects.equals(this.country, accountStatusDataQualityIssue.country) &&
        Objects.equals(this.destination, accountStatusDataQualityIssue.destination) &&
        Objects.equals(this.detail, accountStatusDataQualityIssue.detail) &&
        Objects.equals(this.displayedValue, accountStatusDataQualityIssue.displayedValue) &&
        Objects.equals(this.exampleItems, accountStatusDataQualityIssue.exampleItems) &&
        Objects.equals(this.id, accountStatusDataQualityIssue.id) &&
        Objects.equals(this.lastChecked, accountStatusDataQualityIssue.lastChecked) &&
        Objects.equals(this.location, accountStatusDataQualityIssue.location) &&
        Objects.equals(this.numItems, accountStatusDataQualityIssue.numItems) &&
        Objects.equals(this.severity, accountStatusDataQualityIssue.severity) &&
        Objects.equals(this.submittedValue, accountStatusDataQualityIssue.submittedValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(country, destination, detail, displayedValue, exampleItems, id, lastChecked, location, numItems, severity, submittedValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountStatusDataQualityIssue {\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    detail: ").append(toIndentedString(detail)).append("\n");
    sb.append("    displayedValue: ").append(toIndentedString(displayedValue)).append("\n");
    sb.append("    exampleItems: ").append(toIndentedString(exampleItems)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastChecked: ").append(toIndentedString(lastChecked)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    numItems: ").append(toIndentedString(numItems)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    submittedValue: ").append(toIndentedString(submittedValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("country");
    openapiFields.add("destination");
    openapiFields.add("detail");
    openapiFields.add("displayedValue");
    openapiFields.add("exampleItems");
    openapiFields.add("id");
    openapiFields.add("lastChecked");
    openapiFields.add("location");
    openapiFields.add("numItems");
    openapiFields.add("severity");
    openapiFields.add("submittedValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountStatusDataQualityIssue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountStatusDataQualityIssue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountStatusDataQualityIssue is not found in the empty JSON string", AccountStatusDataQualityIssue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountStatusDataQualityIssue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountStatusDataQualityIssue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("destination") != null && !jsonObj.get("destination").isJsonNull()) && !jsonObj.get("destination").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination").toString()));
      }
      if ((jsonObj.get("detail") != null && !jsonObj.get("detail").isJsonNull()) && !jsonObj.get("detail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `detail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("detail").toString()));
      }
      if ((jsonObj.get("displayedValue") != null && !jsonObj.get("displayedValue").isJsonNull()) && !jsonObj.get("displayedValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayedValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayedValue").toString()));
      }
      if (jsonObj.get("exampleItems") != null && !jsonObj.get("exampleItems").isJsonNull()) {
        JsonArray jsonArrayexampleItems = jsonObj.getAsJsonArray("exampleItems");
        if (jsonArrayexampleItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("exampleItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `exampleItems` to be an array in the JSON string but got `%s`", jsonObj.get("exampleItems").toString()));
          }

          // validate the optional field `exampleItems` (array)
          for (int i = 0; i < jsonArrayexampleItems.size(); i++) {
            AccountStatusExampleItem.validateJsonElement(jsonArrayexampleItems.get(i));
          };
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("lastChecked") != null && !jsonObj.get("lastChecked").isJsonNull()) && !jsonObj.get("lastChecked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastChecked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastChecked").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("severity") != null && !jsonObj.get("severity").isJsonNull()) && !jsonObj.get("severity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `severity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("severity").toString()));
      }
      if ((jsonObj.get("submittedValue") != null && !jsonObj.get("submittedValue").isJsonNull()) && !jsonObj.get("submittedValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `submittedValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("submittedValue").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountStatusDataQualityIssue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountStatusDataQualityIssue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountStatusDataQualityIssue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountStatusDataQualityIssue.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountStatusDataQualityIssue>() {
           @Override
           public void write(JsonWriter out, AccountStatusDataQualityIssue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountStatusDataQualityIssue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountStatusDataQualityIssue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountStatusDataQualityIssue
   * @throws IOException if the JSON string is invalid with respect to AccountStatusDataQualityIssue
   */
  public static AccountStatusDataQualityIssue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountStatusDataQualityIssue.class);
  }

  /**
   * Convert an instance of AccountStatusDataQualityIssue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

