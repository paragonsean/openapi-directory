# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PosStore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gcid_category: List[str]=None, kind: str=None, phone_number: str=None, place_id: str=None, store_address: str=None, store_code: str=None, store_name: str=None, website_url: str=None):
        """PosStore - a model defined in OpenAPI

        :param gcid_category: The gcid_category of this PosStore.
        :param kind: The kind of this PosStore.
        :param phone_number: The phone_number of this PosStore.
        :param place_id: The place_id of this PosStore.
        :param store_address: The store_address of this PosStore.
        :param store_code: The store_code of this PosStore.
        :param store_name: The store_name of this PosStore.
        :param website_url: The website_url of this PosStore.
        """
        self.openapi_types = {
            'gcid_category': List[str],
            'kind': str,
            'phone_number': str,
            'place_id': str,
            'store_address': str,
            'store_code': str,
            'store_name': str,
            'website_url': str
        }

        self.attribute_map = {
            'gcid_category': 'gcidCategory',
            'kind': 'kind',
            'phone_number': 'phoneNumber',
            'place_id': 'placeId',
            'store_address': 'storeAddress',
            'store_code': 'storeCode',
            'store_name': 'storeName',
            'website_url': 'websiteUrl'
        }

        self._gcid_category = gcid_category
        self._kind = kind
        self._phone_number = phone_number
        self._place_id = place_id
        self._store_address = store_address
        self._store_code = store_code
        self._store_name = store_name
        self._website_url = website_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PosStore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PosStore of this PosStore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gcid_category(self):
        """Gets the gcid_category of this PosStore.

        The business type of the store.

        :return: The gcid_category of this PosStore.
        :rtype: List[str]
        """
        return self._gcid_category

    @gcid_category.setter
    def gcid_category(self, gcid_category):
        """Sets the gcid_category of this PosStore.

        The business type of the store.

        :param gcid_category: The gcid_category of this PosStore.
        :type gcid_category: List[str]
        """

        self._gcid_category = gcid_category

    @property
    def kind(self):
        """Gets the kind of this PosStore.

        Identifies what kind of resource this is. Value: the fixed string \"`content#posStore`\"

        :return: The kind of this PosStore.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PosStore.

        Identifies what kind of resource this is. Value: the fixed string \"`content#posStore`\"

        :param kind: The kind of this PosStore.
        :type kind: str
        """

        self._kind = kind

    @property
    def phone_number(self):
        """Gets the phone_number of this PosStore.

        The store phone number.

        :return: The phone_number of this PosStore.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this PosStore.

        The store phone number.

        :param phone_number: The phone_number of this PosStore.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def place_id(self):
        """Gets the place_id of this PosStore.

        The Google Place Id of the store location.

        :return: The place_id of this PosStore.
        :rtype: str
        """
        return self._place_id

    @place_id.setter
    def place_id(self, place_id):
        """Sets the place_id of this PosStore.

        The Google Place Id of the store location.

        :param place_id: The place_id of this PosStore.
        :type place_id: str
        """

        self._place_id = place_id

    @property
    def store_address(self):
        """Gets the store_address of this PosStore.

        Required. The street address of the store.

        :return: The store_address of this PosStore.
        :rtype: str
        """
        return self._store_address

    @store_address.setter
    def store_address(self, store_address):
        """Sets the store_address of this PosStore.

        Required. The street address of the store.

        :param store_address: The store_address of this PosStore.
        :type store_address: str
        """

        self._store_address = store_address

    @property
    def store_code(self):
        """Gets the store_code of this PosStore.

        Required. A store identifier that is unique for the given merchant.

        :return: The store_code of this PosStore.
        :rtype: str
        """
        return self._store_code

    @store_code.setter
    def store_code(self, store_code):
        """Sets the store_code of this PosStore.

        Required. A store identifier that is unique for the given merchant.

        :param store_code: The store_code of this PosStore.
        :type store_code: str
        """

        self._store_code = store_code

    @property
    def store_name(self):
        """Gets the store_name of this PosStore.

        The merchant or store name.

        :return: The store_name of this PosStore.
        :rtype: str
        """
        return self._store_name

    @store_name.setter
    def store_name(self, store_name):
        """Sets the store_name of this PosStore.

        The merchant or store name.

        :param store_name: The store_name of this PosStore.
        :type store_name: str
        """

        self._store_name = store_name

    @property
    def website_url(self):
        """Gets the website_url of this PosStore.

        The website url for the store or merchant.

        :return: The website_url of this PosStore.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """Sets the website_url of this PosStore.

        The website url for the store or merchant.

        :param website_url: The website_url of this PosStore.
        :type website_url: str
        """

        self._website_url = website_url
