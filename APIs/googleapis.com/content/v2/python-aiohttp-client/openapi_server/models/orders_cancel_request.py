# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrdersCancelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operation_id: str=None, reason: str=None, reason_text: str=None):
        """OrdersCancelRequest - a model defined in OpenAPI

        :param operation_id: The operation_id of this OrdersCancelRequest.
        :param reason: The reason of this OrdersCancelRequest.
        :param reason_text: The reason_text of this OrdersCancelRequest.
        """
        self.openapi_types = {
            'operation_id': str,
            'reason': str,
            'reason_text': str
        }

        self.attribute_map = {
            'operation_id': 'operationId',
            'reason': 'reason',
            'reason_text': 'reasonText'
        }

        self._operation_id = operation_id
        self._reason = reason
        self._reason_text = reason_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrdersCancelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrdersCancelRequest of this OrdersCancelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operation_id(self):
        """Gets the operation_id of this OrdersCancelRequest.

        The ID of the operation. Unique across all operations for a given order.

        :return: The operation_id of this OrdersCancelRequest.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this OrdersCancelRequest.

        The ID of the operation. Unique across all operations for a given order.

        :param operation_id: The operation_id of this OrdersCancelRequest.
        :type operation_id: str
        """

        self._operation_id = operation_id

    @property
    def reason(self):
        """Gets the reason of this OrdersCancelRequest.

        The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" 

        :return: The reason of this OrdersCancelRequest.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this OrdersCancelRequest.

        The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" 

        :param reason: The reason of this OrdersCancelRequest.
        :type reason: str
        """

        self._reason = reason

    @property
    def reason_text(self):
        """Gets the reason_text of this OrdersCancelRequest.

        The explanation of the reason.

        :return: The reason_text of this OrdersCancelRequest.
        :rtype: str
        """
        return self._reason_text

    @reason_text.setter
    def reason_text(self, reason_text):
        """Sets the reason_text of this OrdersCancelRequest.

        The explanation of the reason.

        :param reason_text: The reason_text of this OrdersCancelRequest.
        :type reason_text: str
        """

        self._reason_text = reason_text
