# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountAdwordsLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adwords_id: str=None, status: str=None):
        """AccountAdwordsLink - a model defined in OpenAPI

        :param adwords_id: The adwords_id of this AccountAdwordsLink.
        :param status: The status of this AccountAdwordsLink.
        """
        self.openapi_types = {
            'adwords_id': str,
            'status': str
        }

        self.attribute_map = {
            'adwords_id': 'adwordsId',
            'status': 'status'
        }

        self._adwords_id = adwords_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountAdwordsLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountAdwordsLink of this AccountAdwordsLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adwords_id(self):
        """Gets the adwords_id of this AccountAdwordsLink.

        Customer ID of the AdWords account.

        :return: The adwords_id of this AccountAdwordsLink.
        :rtype: str
        """
        return self._adwords_id

    @adwords_id.setter
    def adwords_id(self, adwords_id):
        """Sets the adwords_id of this AccountAdwordsLink.

        Customer ID of the AdWords account.

        :param adwords_id: The adwords_id of this AccountAdwordsLink.
        :type adwords_id: str
        """

        self._adwords_id = adwords_id

    @property
    def status(self):
        """Gets the status of this AccountAdwordsLink.

        Status of the link between this Merchant Center account and the AdWords account. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in Google AdWords or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending. Acceptable values are: - \"`active`\" - \"`pending`\" 

        :return: The status of this AccountAdwordsLink.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AccountAdwordsLink.

        Status of the link between this Merchant Center account and the AdWords account. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in Google AdWords or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending. Acceptable values are: - \"`active`\" - \"`pending`\" 

        :param status: The status of this AccountAdwordsLink.
        :type status: str
        """

        self._status = status
