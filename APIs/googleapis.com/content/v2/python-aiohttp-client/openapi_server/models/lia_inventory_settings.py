# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LiaInventorySettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inventory_verification_contact_email: str=None, inventory_verification_contact_name: str=None, inventory_verification_contact_status: str=None, status: str=None):
        """LiaInventorySettings - a model defined in OpenAPI

        :param inventory_verification_contact_email: The inventory_verification_contact_email of this LiaInventorySettings.
        :param inventory_verification_contact_name: The inventory_verification_contact_name of this LiaInventorySettings.
        :param inventory_verification_contact_status: The inventory_verification_contact_status of this LiaInventorySettings.
        :param status: The status of this LiaInventorySettings.
        """
        self.openapi_types = {
            'inventory_verification_contact_email': str,
            'inventory_verification_contact_name': str,
            'inventory_verification_contact_status': str,
            'status': str
        }

        self.attribute_map = {
            'inventory_verification_contact_email': 'inventoryVerificationContactEmail',
            'inventory_verification_contact_name': 'inventoryVerificationContactName',
            'inventory_verification_contact_status': 'inventoryVerificationContactStatus',
            'status': 'status'
        }

        self._inventory_verification_contact_email = inventory_verification_contact_email
        self._inventory_verification_contact_name = inventory_verification_contact_name
        self._inventory_verification_contact_status = inventory_verification_contact_status
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiaInventorySettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiaInventorySettings of this LiaInventorySettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inventory_verification_contact_email(self):
        """Gets the inventory_verification_contact_email of this LiaInventorySettings.

        The email of the contact for the inventory verification process.

        :return: The inventory_verification_contact_email of this LiaInventorySettings.
        :rtype: str
        """
        return self._inventory_verification_contact_email

    @inventory_verification_contact_email.setter
    def inventory_verification_contact_email(self, inventory_verification_contact_email):
        """Sets the inventory_verification_contact_email of this LiaInventorySettings.

        The email of the contact for the inventory verification process.

        :param inventory_verification_contact_email: The inventory_verification_contact_email of this LiaInventorySettings.
        :type inventory_verification_contact_email: str
        """

        self._inventory_verification_contact_email = inventory_verification_contact_email

    @property
    def inventory_verification_contact_name(self):
        """Gets the inventory_verification_contact_name of this LiaInventorySettings.

        The name of the contact for the inventory verification process.

        :return: The inventory_verification_contact_name of this LiaInventorySettings.
        :rtype: str
        """
        return self._inventory_verification_contact_name

    @inventory_verification_contact_name.setter
    def inventory_verification_contact_name(self, inventory_verification_contact_name):
        """Sets the inventory_verification_contact_name of this LiaInventorySettings.

        The name of the contact for the inventory verification process.

        :param inventory_verification_contact_name: The inventory_verification_contact_name of this LiaInventorySettings.
        :type inventory_verification_contact_name: str
        """

        self._inventory_verification_contact_name = inventory_verification_contact_name

    @property
    def inventory_verification_contact_status(self):
        """Gets the inventory_verification_contact_status of this LiaInventorySettings.

        The status of the verification contact. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" 

        :return: The inventory_verification_contact_status of this LiaInventorySettings.
        :rtype: str
        """
        return self._inventory_verification_contact_status

    @inventory_verification_contact_status.setter
    def inventory_verification_contact_status(self, inventory_verification_contact_status):
        """Sets the inventory_verification_contact_status of this LiaInventorySettings.

        The status of the verification contact. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" 

        :param inventory_verification_contact_status: The inventory_verification_contact_status of this LiaInventorySettings.
        :type inventory_verification_contact_status: str
        """

        self._inventory_verification_contact_status = inventory_verification_contact_status

    @property
    def status(self):
        """Gets the status of this LiaInventorySettings.

        The status of the inventory verification process. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" 

        :return: The status of this LiaInventorySettings.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this LiaInventorySettings.

        The status of the inventory verification process. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" 

        :param status: The status of this LiaInventorySettings.
        :type status: str
        """

        self._status = status
