# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server import util


class Errors(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: int=None, errors: List[Error]=None, message: str=None):
        """Errors - a model defined in OpenAPI

        :param code: The code of this Errors.
        :param errors: The errors of this Errors.
        :param message: The message of this Errors.
        """
        self.openapi_types = {
            'code': int,
            'errors': List[Error],
            'message': str
        }

        self.attribute_map = {
            'code': 'code',
            'errors': 'errors',
            'message': 'message'
        }

        self._code = code
        self._errors = errors
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Errors':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Errors of this Errors.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this Errors.

        The HTTP status of the first error in `errors`.

        :return: The code of this Errors.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Errors.

        The HTTP status of the first error in `errors`.

        :param code: The code of this Errors.
        :type code: int
        """

        self._code = code

    @property
    def errors(self):
        """Gets the errors of this Errors.

        A list of errors.

        :return: The errors of this Errors.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this Errors.

        A list of errors.

        :param errors: The errors of this Errors.
        :type errors: List[Error]
        """

        self._errors = errors

    @property
    def message(self):
        """Gets the message of this Errors.

        The message of the first error in `errors`.

        :return: The message of this Errors.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Errors.

        The message of the first error in `errors`.

        :param message: The message of this Errors.
        :type message: str
        """

        self._message = message
