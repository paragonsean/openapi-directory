# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostalCodeRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, postal_code_range_begin: str=None, postal_code_range_end: str=None):
        """PostalCodeRange - a model defined in OpenAPI

        :param postal_code_range_begin: The postal_code_range_begin of this PostalCodeRange.
        :param postal_code_range_end: The postal_code_range_end of this PostalCodeRange.
        """
        self.openapi_types = {
            'postal_code_range_begin': str,
            'postal_code_range_end': str
        }

        self.attribute_map = {
            'postal_code_range_begin': 'postalCodeRangeBegin',
            'postal_code_range_end': 'postalCodeRangeEnd'
        }

        self._postal_code_range_begin = postal_code_range_begin
        self._postal_code_range_end = postal_code_range_end

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostalCodeRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostalCodeRange of this PostalCodeRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def postal_code_range_begin(self):
        """Gets the postal_code_range_begin of this PostalCodeRange.

        A postal code or a pattern of the form `prefix*` denoting the inclusive lower bound of the range defining the area. Examples values: `\"94108\"`, `\"9410*\"`, `\"9*\"`. Required.

        :return: The postal_code_range_begin of this PostalCodeRange.
        :rtype: str
        """
        return self._postal_code_range_begin

    @postal_code_range_begin.setter
    def postal_code_range_begin(self, postal_code_range_begin):
        """Sets the postal_code_range_begin of this PostalCodeRange.

        A postal code or a pattern of the form `prefix*` denoting the inclusive lower bound of the range defining the area. Examples values: `\"94108\"`, `\"9410*\"`, `\"9*\"`. Required.

        :param postal_code_range_begin: The postal_code_range_begin of this PostalCodeRange.
        :type postal_code_range_begin: str
        """

        self._postal_code_range_begin = postal_code_range_begin

    @property
    def postal_code_range_end(self):
        """Gets the postal_code_range_end of this PostalCodeRange.

        A postal code or a pattern of the form `prefix*` denoting the inclusive upper bound of the range defining the area. It must have the same length as `postalCodeRangeBegin`: if `postalCodeRangeBegin` is a postal code then `postalCodeRangeEnd` must be a postal code too; if `postalCodeRangeBegin` is a pattern then `postalCodeRangeEnd` must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching `postalCodeRangeBegin`.

        :return: The postal_code_range_end of this PostalCodeRange.
        :rtype: str
        """
        return self._postal_code_range_end

    @postal_code_range_end.setter
    def postal_code_range_end(self, postal_code_range_end):
        """Sets the postal_code_range_end of this PostalCodeRange.

        A postal code or a pattern of the form `prefix*` denoting the inclusive upper bound of the range defining the area. It must have the same length as `postalCodeRangeBegin`: if `postalCodeRangeBegin` is a postal code then `postalCodeRangeEnd` must be a postal code too; if `postalCodeRangeBegin` is a pattern then `postalCodeRangeEnd` must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching `postalCodeRangeBegin`.

        :param postal_code_range_end: The postal_code_range_end of this PostalCodeRange.
        :type postal_code_range_end: str
        """

        self._postal_code_range_end = postal_code_range_end
