# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_customer_marketing_rights_info import OrderCustomerMarketingRightsInfo
from openapi_server import util


class OrderCustomer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, explicit_marketing_preference: bool=None, full_name: str=None, invoice_receiving_email: str=None, marketing_rights_info: OrderCustomerMarketingRightsInfo=None):
        """OrderCustomer - a model defined in OpenAPI

        :param email: The email of this OrderCustomer.
        :param explicit_marketing_preference: The explicit_marketing_preference of this OrderCustomer.
        :param full_name: The full_name of this OrderCustomer.
        :param invoice_receiving_email: The invoice_receiving_email of this OrderCustomer.
        :param marketing_rights_info: The marketing_rights_info of this OrderCustomer.
        """
        self.openapi_types = {
            'email': str,
            'explicit_marketing_preference': bool,
            'full_name': str,
            'invoice_receiving_email': str,
            'marketing_rights_info': OrderCustomerMarketingRightsInfo
        }

        self.attribute_map = {
            'email': 'email',
            'explicit_marketing_preference': 'explicitMarketingPreference',
            'full_name': 'fullName',
            'invoice_receiving_email': 'invoiceReceivingEmail',
            'marketing_rights_info': 'marketingRightsInfo'
        }

        self._email = email
        self._explicit_marketing_preference = explicit_marketing_preference
        self._full_name = full_name
        self._invoice_receiving_email = invoice_receiving_email
        self._marketing_rights_info = marketing_rights_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderCustomer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderCustomer of this OrderCustomer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this OrderCustomer.

        Deprecated.

        :return: The email of this OrderCustomer.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this OrderCustomer.

        Deprecated.

        :param email: The email of this OrderCustomer.
        :type email: str
        """

        self._email = email

    @property
    def explicit_marketing_preference(self):
        """Gets the explicit_marketing_preference of this OrderCustomer.

        Deprecated. Please use marketingRightsInfo instead.

        :return: The explicit_marketing_preference of this OrderCustomer.
        :rtype: bool
        """
        return self._explicit_marketing_preference

    @explicit_marketing_preference.setter
    def explicit_marketing_preference(self, explicit_marketing_preference):
        """Sets the explicit_marketing_preference of this OrderCustomer.

        Deprecated. Please use marketingRightsInfo instead.

        :param explicit_marketing_preference: The explicit_marketing_preference of this OrderCustomer.
        :type explicit_marketing_preference: bool
        """

        self._explicit_marketing_preference = explicit_marketing_preference

    @property
    def full_name(self):
        """Gets the full_name of this OrderCustomer.

        Full name of the customer.

        :return: The full_name of this OrderCustomer.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this OrderCustomer.

        Full name of the customer.

        :param full_name: The full_name of this OrderCustomer.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def invoice_receiving_email(self):
        """Gets the invoice_receiving_email of this OrderCustomer.

        Email address for the merchant to send value-added tax or invoice documentation of the order. Only the last document sent is made available to the customer. For more information, see About automated VAT invoicing for Buy on Google.

        :return: The invoice_receiving_email of this OrderCustomer.
        :rtype: str
        """
        return self._invoice_receiving_email

    @invoice_receiving_email.setter
    def invoice_receiving_email(self, invoice_receiving_email):
        """Sets the invoice_receiving_email of this OrderCustomer.

        Email address for the merchant to send value-added tax or invoice documentation of the order. Only the last document sent is made available to the customer. For more information, see About automated VAT invoicing for Buy on Google.

        :param invoice_receiving_email: The invoice_receiving_email of this OrderCustomer.
        :type invoice_receiving_email: str
        """

        self._invoice_receiving_email = invoice_receiving_email

    @property
    def marketing_rights_info(self):
        """Gets the marketing_rights_info of this OrderCustomer.


        :return: The marketing_rights_info of this OrderCustomer.
        :rtype: OrderCustomerMarketingRightsInfo
        """
        return self._marketing_rights_info

    @marketing_rights_info.setter
    def marketing_rights_info(self, marketing_rights_info):
        """Sets the marketing_rights_info of this OrderCustomer.


        :param marketing_rights_info: The marketing_rights_info of this OrderCustomer.
        :type marketing_rights_info: OrderCustomerMarketingRightsInfo
        """

        self._marketing_rights_info = marketing_rights_info
