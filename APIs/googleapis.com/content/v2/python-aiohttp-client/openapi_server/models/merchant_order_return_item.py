# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customer_return_reason import CustomerReturnReason
from openapi_server.models.order_line_item_product import OrderLineItemProduct
from openapi_server.models.refund_reason import RefundReason
from openapi_server import util


class MerchantOrderReturnItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer_return_reason: CustomerReturnReason=None, item_id: str=None, merchant_return_reason: RefundReason=None, product: OrderLineItemProduct=None, return_shipment_ids: List[str]=None, state: str=None):
        """MerchantOrderReturnItem - a model defined in OpenAPI

        :param customer_return_reason: The customer_return_reason of this MerchantOrderReturnItem.
        :param item_id: The item_id of this MerchantOrderReturnItem.
        :param merchant_return_reason: The merchant_return_reason of this MerchantOrderReturnItem.
        :param product: The product of this MerchantOrderReturnItem.
        :param return_shipment_ids: The return_shipment_ids of this MerchantOrderReturnItem.
        :param state: The state of this MerchantOrderReturnItem.
        """
        self.openapi_types = {
            'customer_return_reason': CustomerReturnReason,
            'item_id': str,
            'merchant_return_reason': RefundReason,
            'product': OrderLineItemProduct,
            'return_shipment_ids': List[str],
            'state': str
        }

        self.attribute_map = {
            'customer_return_reason': 'customerReturnReason',
            'item_id': 'itemId',
            'merchant_return_reason': 'merchantReturnReason',
            'product': 'product',
            'return_shipment_ids': 'returnShipmentIds',
            'state': 'state'
        }

        self._customer_return_reason = customer_return_reason
        self._item_id = item_id
        self._merchant_return_reason = merchant_return_reason
        self._product = product
        self._return_shipment_ids = return_shipment_ids
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MerchantOrderReturnItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MerchantOrderReturnItem of this MerchantOrderReturnItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_return_reason(self):
        """Gets the customer_return_reason of this MerchantOrderReturnItem.


        :return: The customer_return_reason of this MerchantOrderReturnItem.
        :rtype: CustomerReturnReason
        """
        return self._customer_return_reason

    @customer_return_reason.setter
    def customer_return_reason(self, customer_return_reason):
        """Sets the customer_return_reason of this MerchantOrderReturnItem.


        :param customer_return_reason: The customer_return_reason of this MerchantOrderReturnItem.
        :type customer_return_reason: CustomerReturnReason
        """

        self._customer_return_reason = customer_return_reason

    @property
    def item_id(self):
        """Gets the item_id of this MerchantOrderReturnItem.

        Product level item ID. If the returned items are of the same product, they will have the same ID.

        :return: The item_id of this MerchantOrderReturnItem.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this MerchantOrderReturnItem.

        Product level item ID. If the returned items are of the same product, they will have the same ID.

        :param item_id: The item_id of this MerchantOrderReturnItem.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def merchant_return_reason(self):
        """Gets the merchant_return_reason of this MerchantOrderReturnItem.


        :return: The merchant_return_reason of this MerchantOrderReturnItem.
        :rtype: RefundReason
        """
        return self._merchant_return_reason

    @merchant_return_reason.setter
    def merchant_return_reason(self, merchant_return_reason):
        """Sets the merchant_return_reason of this MerchantOrderReturnItem.


        :param merchant_return_reason: The merchant_return_reason of this MerchantOrderReturnItem.
        :type merchant_return_reason: RefundReason
        """

        self._merchant_return_reason = merchant_return_reason

    @property
    def product(self):
        """Gets the product of this MerchantOrderReturnItem.


        :return: The product of this MerchantOrderReturnItem.
        :rtype: OrderLineItemProduct
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this MerchantOrderReturnItem.


        :param product: The product of this MerchantOrderReturnItem.
        :type product: OrderLineItemProduct
        """

        self._product = product

    @property
    def return_shipment_ids(self):
        """Gets the return_shipment_ids of this MerchantOrderReturnItem.

        IDs of the return shipments that this return item belongs to.

        :return: The return_shipment_ids of this MerchantOrderReturnItem.
        :rtype: List[str]
        """
        return self._return_shipment_ids

    @return_shipment_ids.setter
    def return_shipment_ids(self, return_shipment_ids):
        """Sets the return_shipment_ids of this MerchantOrderReturnItem.

        IDs of the return shipments that this return item belongs to.

        :param return_shipment_ids: The return_shipment_ids of this MerchantOrderReturnItem.
        :type return_shipment_ids: List[str]
        """

        self._return_shipment_ids = return_shipment_ids

    @property
    def state(self):
        """Gets the state of this MerchantOrderReturnItem.

        State of the item. Acceptable values are: - \"`canceled`\" - \"`new`\" - \"`received`\" - \"`refunded`\" - \"`rejected`\" 

        :return: The state of this MerchantOrderReturnItem.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this MerchantOrderReturnItem.

        State of the item. Acceptable values are: - \"`canceled`\" - \"`new`\" - \"`received`\" - \"`refunded`\" - \"`rejected`\" 

        :param state: The state of this MerchantOrderReturnItem.
        :type state: str
        """

        self._state = state
