# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.orderinvoices_custom_batch_request_entry_create_refund_invoice_refund_option import OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption
from openapi_server.models.orderinvoices_custom_batch_request_entry_create_refund_invoice_return_option import OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption
from openapi_server.models.shipment_invoice import ShipmentInvoice
from openapi_server import util


class OrderinvoicesCreateRefundInvoiceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invoice_id: str=None, operation_id: str=None, refund_only_option: OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption=None, return_option: OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption=None, shipment_invoices: List[ShipmentInvoice]=None):
        """OrderinvoicesCreateRefundInvoiceRequest - a model defined in OpenAPI

        :param invoice_id: The invoice_id of this OrderinvoicesCreateRefundInvoiceRequest.
        :param operation_id: The operation_id of this OrderinvoicesCreateRefundInvoiceRequest.
        :param refund_only_option: The refund_only_option of this OrderinvoicesCreateRefundInvoiceRequest.
        :param return_option: The return_option of this OrderinvoicesCreateRefundInvoiceRequest.
        :param shipment_invoices: The shipment_invoices of this OrderinvoicesCreateRefundInvoiceRequest.
        """
        self.openapi_types = {
            'invoice_id': str,
            'operation_id': str,
            'refund_only_option': OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption,
            'return_option': OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption,
            'shipment_invoices': List[ShipmentInvoice]
        }

        self.attribute_map = {
            'invoice_id': 'invoiceId',
            'operation_id': 'operationId',
            'refund_only_option': 'refundOnlyOption',
            'return_option': 'returnOption',
            'shipment_invoices': 'shipmentInvoices'
        }

        self._invoice_id = invoice_id
        self._operation_id = operation_id
        self._refund_only_option = refund_only_option
        self._return_option = return_option
        self._shipment_invoices = shipment_invoices

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderinvoicesCreateRefundInvoiceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderinvoicesCreateRefundInvoiceRequest of this OrderinvoicesCreateRefundInvoiceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invoice_id(self):
        """Gets the invoice_id of this OrderinvoicesCreateRefundInvoiceRequest.

        [required] The ID of the invoice.

        :return: The invoice_id of this OrderinvoicesCreateRefundInvoiceRequest.
        :rtype: str
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """Sets the invoice_id of this OrderinvoicesCreateRefundInvoiceRequest.

        [required] The ID of the invoice.

        :param invoice_id: The invoice_id of this OrderinvoicesCreateRefundInvoiceRequest.
        :type invoice_id: str
        """

        self._invoice_id = invoice_id

    @property
    def operation_id(self):
        """Gets the operation_id of this OrderinvoicesCreateRefundInvoiceRequest.

        [required] The ID of the operation, unique across all operations for a given order.

        :return: The operation_id of this OrderinvoicesCreateRefundInvoiceRequest.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this OrderinvoicesCreateRefundInvoiceRequest.

        [required] The ID of the operation, unique across all operations for a given order.

        :param operation_id: The operation_id of this OrderinvoicesCreateRefundInvoiceRequest.
        :type operation_id: str
        """

        self._operation_id = operation_id

    @property
    def refund_only_option(self):
        """Gets the refund_only_option of this OrderinvoicesCreateRefundInvoiceRequest.


        :return: The refund_only_option of this OrderinvoicesCreateRefundInvoiceRequest.
        :rtype: OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption
        """
        return self._refund_only_option

    @refund_only_option.setter
    def refund_only_option(self, refund_only_option):
        """Sets the refund_only_option of this OrderinvoicesCreateRefundInvoiceRequest.


        :param refund_only_option: The refund_only_option of this OrderinvoicesCreateRefundInvoiceRequest.
        :type refund_only_option: OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption
        """

        self._refund_only_option = refund_only_option

    @property
    def return_option(self):
        """Gets the return_option of this OrderinvoicesCreateRefundInvoiceRequest.


        :return: The return_option of this OrderinvoicesCreateRefundInvoiceRequest.
        :rtype: OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption
        """
        return self._return_option

    @return_option.setter
    def return_option(self, return_option):
        """Sets the return_option of this OrderinvoicesCreateRefundInvoiceRequest.


        :param return_option: The return_option of this OrderinvoicesCreateRefundInvoiceRequest.
        :type return_option: OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption
        """

        self._return_option = return_option

    @property
    def shipment_invoices(self):
        """Gets the shipment_invoices of this OrderinvoicesCreateRefundInvoiceRequest.

        Invoice details for different shipment groups.

        :return: The shipment_invoices of this OrderinvoicesCreateRefundInvoiceRequest.
        :rtype: List[ShipmentInvoice]
        """
        return self._shipment_invoices

    @shipment_invoices.setter
    def shipment_invoices(self, shipment_invoices):
        """Sets the shipment_invoices of this OrderinvoicesCreateRefundInvoiceRequest.

        Invoice details for different shipment groups.

        :param shipment_invoices: The shipment_invoices of this OrderinvoicesCreateRefundInvoiceRequest.
        :type shipment_invoices: List[ShipmentInvoice]
        """

        self._shipment_invoices = shipment_invoices
