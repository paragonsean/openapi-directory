# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_status_example_item import AccountStatusExampleItem
from openapi_server import util


class AccountStatusDataQualityIssue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, destination: str=None, detail: str=None, displayed_value: str=None, example_items: List[AccountStatusExampleItem]=None, id: str=None, last_checked: str=None, location: str=None, num_items: int=None, severity: str=None, submitted_value: str=None):
        """AccountStatusDataQualityIssue - a model defined in OpenAPI

        :param country: The country of this AccountStatusDataQualityIssue.
        :param destination: The destination of this AccountStatusDataQualityIssue.
        :param detail: The detail of this AccountStatusDataQualityIssue.
        :param displayed_value: The displayed_value of this AccountStatusDataQualityIssue.
        :param example_items: The example_items of this AccountStatusDataQualityIssue.
        :param id: The id of this AccountStatusDataQualityIssue.
        :param last_checked: The last_checked of this AccountStatusDataQualityIssue.
        :param location: The location of this AccountStatusDataQualityIssue.
        :param num_items: The num_items of this AccountStatusDataQualityIssue.
        :param severity: The severity of this AccountStatusDataQualityIssue.
        :param submitted_value: The submitted_value of this AccountStatusDataQualityIssue.
        """
        self.openapi_types = {
            'country': str,
            'destination': str,
            'detail': str,
            'displayed_value': str,
            'example_items': List[AccountStatusExampleItem],
            'id': str,
            'last_checked': str,
            'location': str,
            'num_items': int,
            'severity': str,
            'submitted_value': str
        }

        self.attribute_map = {
            'country': 'country',
            'destination': 'destination',
            'detail': 'detail',
            'displayed_value': 'displayedValue',
            'example_items': 'exampleItems',
            'id': 'id',
            'last_checked': 'lastChecked',
            'location': 'location',
            'num_items': 'numItems',
            'severity': 'severity',
            'submitted_value': 'submittedValue'
        }

        self._country = country
        self._destination = destination
        self._detail = detail
        self._displayed_value = displayed_value
        self._example_items = example_items
        self._id = id
        self._last_checked = last_checked
        self._location = location
        self._num_items = num_items
        self._severity = severity
        self._submitted_value = submitted_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountStatusDataQualityIssue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountStatusDataQualityIssue of this AccountStatusDataQualityIssue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this AccountStatusDataQualityIssue.


        :return: The country of this AccountStatusDataQualityIssue.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this AccountStatusDataQualityIssue.


        :param country: The country of this AccountStatusDataQualityIssue.
        :type country: str
        """

        self._country = country

    @property
    def destination(self):
        """Gets the destination of this AccountStatusDataQualityIssue.


        :return: The destination of this AccountStatusDataQualityIssue.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this AccountStatusDataQualityIssue.


        :param destination: The destination of this AccountStatusDataQualityIssue.
        :type destination: str
        """

        self._destination = destination

    @property
    def detail(self):
        """Gets the detail of this AccountStatusDataQualityIssue.


        :return: The detail of this AccountStatusDataQualityIssue.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this AccountStatusDataQualityIssue.


        :param detail: The detail of this AccountStatusDataQualityIssue.
        :type detail: str
        """

        self._detail = detail

    @property
    def displayed_value(self):
        """Gets the displayed_value of this AccountStatusDataQualityIssue.


        :return: The displayed_value of this AccountStatusDataQualityIssue.
        :rtype: str
        """
        return self._displayed_value

    @displayed_value.setter
    def displayed_value(self, displayed_value):
        """Sets the displayed_value of this AccountStatusDataQualityIssue.


        :param displayed_value: The displayed_value of this AccountStatusDataQualityIssue.
        :type displayed_value: str
        """

        self._displayed_value = displayed_value

    @property
    def example_items(self):
        """Gets the example_items of this AccountStatusDataQualityIssue.


        :return: The example_items of this AccountStatusDataQualityIssue.
        :rtype: List[AccountStatusExampleItem]
        """
        return self._example_items

    @example_items.setter
    def example_items(self, example_items):
        """Sets the example_items of this AccountStatusDataQualityIssue.


        :param example_items: The example_items of this AccountStatusDataQualityIssue.
        :type example_items: List[AccountStatusExampleItem]
        """

        self._example_items = example_items

    @property
    def id(self):
        """Gets the id of this AccountStatusDataQualityIssue.


        :return: The id of this AccountStatusDataQualityIssue.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AccountStatusDataQualityIssue.


        :param id: The id of this AccountStatusDataQualityIssue.
        :type id: str
        """

        self._id = id

    @property
    def last_checked(self):
        """Gets the last_checked of this AccountStatusDataQualityIssue.


        :return: The last_checked of this AccountStatusDataQualityIssue.
        :rtype: str
        """
        return self._last_checked

    @last_checked.setter
    def last_checked(self, last_checked):
        """Sets the last_checked of this AccountStatusDataQualityIssue.


        :param last_checked: The last_checked of this AccountStatusDataQualityIssue.
        :type last_checked: str
        """

        self._last_checked = last_checked

    @property
    def location(self):
        """Gets the location of this AccountStatusDataQualityIssue.


        :return: The location of this AccountStatusDataQualityIssue.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this AccountStatusDataQualityIssue.


        :param location: The location of this AccountStatusDataQualityIssue.
        :type location: str
        """

        self._location = location

    @property
    def num_items(self):
        """Gets the num_items of this AccountStatusDataQualityIssue.


        :return: The num_items of this AccountStatusDataQualityIssue.
        :rtype: int
        """
        return self._num_items

    @num_items.setter
    def num_items(self, num_items):
        """Sets the num_items of this AccountStatusDataQualityIssue.


        :param num_items: The num_items of this AccountStatusDataQualityIssue.
        :type num_items: int
        """

        self._num_items = num_items

    @property
    def severity(self):
        """Gets the severity of this AccountStatusDataQualityIssue.

         Acceptable values are: - \"`critical`\" - \"`error`\" - \"`suggestion`\" 

        :return: The severity of this AccountStatusDataQualityIssue.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this AccountStatusDataQualityIssue.

         Acceptable values are: - \"`critical`\" - \"`error`\" - \"`suggestion`\" 

        :param severity: The severity of this AccountStatusDataQualityIssue.
        :type severity: str
        """

        self._severity = severity

    @property
    def submitted_value(self):
        """Gets the submitted_value of this AccountStatusDataQualityIssue.


        :return: The submitted_value of this AccountStatusDataQualityIssue.
        :rtype: str
        """
        return self._submitted_value

    @submitted_value.setter
    def submitted_value(self, submitted_value):
        """Sets the submitted_value of this AccountStatusDataQualityIssue.


        :param submitted_value: The submitted_value of this AccountStatusDataQualityIssue.
        :type submitted_value: str
        """

        self._submitted_value = submitted_value
