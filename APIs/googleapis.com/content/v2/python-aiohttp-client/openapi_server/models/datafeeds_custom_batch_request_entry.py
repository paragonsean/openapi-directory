# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.datafeed import Datafeed
from openapi_server import util


class DatafeedsCustomBatchRequestEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_id: int=None, datafeed: Datafeed=None, datafeed_id: str=None, merchant_id: str=None, method: str=None):
        """DatafeedsCustomBatchRequestEntry - a model defined in OpenAPI

        :param batch_id: The batch_id of this DatafeedsCustomBatchRequestEntry.
        :param datafeed: The datafeed of this DatafeedsCustomBatchRequestEntry.
        :param datafeed_id: The datafeed_id of this DatafeedsCustomBatchRequestEntry.
        :param merchant_id: The merchant_id of this DatafeedsCustomBatchRequestEntry.
        :param method: The method of this DatafeedsCustomBatchRequestEntry.
        """
        self.openapi_types = {
            'batch_id': int,
            'datafeed': Datafeed,
            'datafeed_id': str,
            'merchant_id': str,
            'method': str
        }

        self.attribute_map = {
            'batch_id': 'batchId',
            'datafeed': 'datafeed',
            'datafeed_id': 'datafeedId',
            'merchant_id': 'merchantId',
            'method': 'method'
        }

        self._batch_id = batch_id
        self._datafeed = datafeed
        self._datafeed_id = datafeed_id
        self._merchant_id = merchant_id
        self._method = method

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatafeedsCustomBatchRequestEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatafeedsCustomBatchRequestEntry of this DatafeedsCustomBatchRequestEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_id(self):
        """Gets the batch_id of this DatafeedsCustomBatchRequestEntry.

        An entry ID, unique within the batch request.

        :return: The batch_id of this DatafeedsCustomBatchRequestEntry.
        :rtype: int
        """
        return self._batch_id

    @batch_id.setter
    def batch_id(self, batch_id):
        """Sets the batch_id of this DatafeedsCustomBatchRequestEntry.

        An entry ID, unique within the batch request.

        :param batch_id: The batch_id of this DatafeedsCustomBatchRequestEntry.
        :type batch_id: int
        """

        self._batch_id = batch_id

    @property
    def datafeed(self):
        """Gets the datafeed of this DatafeedsCustomBatchRequestEntry.


        :return: The datafeed of this DatafeedsCustomBatchRequestEntry.
        :rtype: Datafeed
        """
        return self._datafeed

    @datafeed.setter
    def datafeed(self, datafeed):
        """Sets the datafeed of this DatafeedsCustomBatchRequestEntry.


        :param datafeed: The datafeed of this DatafeedsCustomBatchRequestEntry.
        :type datafeed: Datafeed
        """

        self._datafeed = datafeed

    @property
    def datafeed_id(self):
        """Gets the datafeed_id of this DatafeedsCustomBatchRequestEntry.

        The ID of the data feed to get, delete or fetch.

        :return: The datafeed_id of this DatafeedsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._datafeed_id

    @datafeed_id.setter
    def datafeed_id(self, datafeed_id):
        """Sets the datafeed_id of this DatafeedsCustomBatchRequestEntry.

        The ID of the data feed to get, delete or fetch.

        :param datafeed_id: The datafeed_id of this DatafeedsCustomBatchRequestEntry.
        :type datafeed_id: str
        """

        self._datafeed_id = datafeed_id

    @property
    def merchant_id(self):
        """Gets the merchant_id of this DatafeedsCustomBatchRequestEntry.

        The ID of the managing account.

        :return: The merchant_id of this DatafeedsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """Sets the merchant_id of this DatafeedsCustomBatchRequestEntry.

        The ID of the managing account.

        :param merchant_id: The merchant_id of this DatafeedsCustomBatchRequestEntry.
        :type merchant_id: str
        """

        self._merchant_id = merchant_id

    @property
    def method(self):
        """Gets the method of this DatafeedsCustomBatchRequestEntry.

        The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`fetchNow`\" - \"`get`\" - \"`insert`\" - \"`update`\" 

        :return: The method of this DatafeedsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this DatafeedsCustomBatchRequestEntry.

        The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`fetchNow`\" - \"`get`\" - \"`insert`\" - \"`update`\" 

        :param method: The method of this DatafeedsCustomBatchRequestEntry.
        :type method: str
        """

        self._method = method
