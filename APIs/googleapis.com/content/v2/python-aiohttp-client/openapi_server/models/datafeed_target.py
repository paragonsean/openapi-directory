# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DatafeedTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, excluded_destinations: List[str]=None, included_destinations: List[str]=None, language: str=None):
        """DatafeedTarget - a model defined in OpenAPI

        :param country: The country of this DatafeedTarget.
        :param excluded_destinations: The excluded_destinations of this DatafeedTarget.
        :param included_destinations: The included_destinations of this DatafeedTarget.
        :param language: The language of this DatafeedTarget.
        """
        self.openapi_types = {
            'country': str,
            'excluded_destinations': List[str],
            'included_destinations': List[str],
            'language': str
        }

        self.attribute_map = {
            'country': 'country',
            'excluded_destinations': 'excludedDestinations',
            'included_destinations': 'includedDestinations',
            'language': 'language'
        }

        self._country = country
        self._excluded_destinations = excluded_destinations
        self._included_destinations = included_destinations
        self._language = language

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatafeedTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatafeedTarget of this DatafeedTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this DatafeedTarget.

        The country where the items in the feed will be included in the search index, represented as a CLDR territory code.

        :return: The country of this DatafeedTarget.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this DatafeedTarget.

        The country where the items in the feed will be included in the search index, represented as a CLDR territory code.

        :param country: The country of this DatafeedTarget.
        :type country: str
        """

        self._country = country

    @property
    def excluded_destinations(self):
        """Gets the excluded_destinations of this DatafeedTarget.

        The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center).

        :return: The excluded_destinations of this DatafeedTarget.
        :rtype: List[str]
        """
        return self._excluded_destinations

    @excluded_destinations.setter
    def excluded_destinations(self, excluded_destinations):
        """Sets the excluded_destinations of this DatafeedTarget.

        The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center).

        :param excluded_destinations: The excluded_destinations of this DatafeedTarget.
        :type excluded_destinations: List[str]
        """

        self._excluded_destinations = excluded_destinations

    @property
    def included_destinations(self):
        """Gets the included_destinations of this DatafeedTarget.

        The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`. List of supported destinations (if available to the account): - DisplayAds - Shopping - ShoppingActions - SurfacesAcrossGoogle 

        :return: The included_destinations of this DatafeedTarget.
        :rtype: List[str]
        """
        return self._included_destinations

    @included_destinations.setter
    def included_destinations(self, included_destinations):
        """Sets the included_destinations of this DatafeedTarget.

        The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`. List of supported destinations (if available to the account): - DisplayAds - Shopping - ShoppingActions - SurfacesAcrossGoogle 

        :param included_destinations: The included_destinations of this DatafeedTarget.
        :type included_destinations: List[str]
        """

        self._included_destinations = included_destinations

    @property
    def language(self):
        """Gets the language of this DatafeedTarget.

        The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targets[].country`.

        :return: The language of this DatafeedTarget.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this DatafeedTarget.

        The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targets[].country`.

        :param language: The language of this DatafeedTarget.
        :type language: str
        """

        self._language = language
