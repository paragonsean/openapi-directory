# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price import Price
from openapi_server import util


class OrdersCustomBatchRequestEntryRefund(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: Price=None, amount_pretax: Price=None, amount_tax: Price=None, reason: str=None, reason_text: str=None):
        """OrdersCustomBatchRequestEntryRefund - a model defined in OpenAPI

        :param amount: The amount of this OrdersCustomBatchRequestEntryRefund.
        :param amount_pretax: The amount_pretax of this OrdersCustomBatchRequestEntryRefund.
        :param amount_tax: The amount_tax of this OrdersCustomBatchRequestEntryRefund.
        :param reason: The reason of this OrdersCustomBatchRequestEntryRefund.
        :param reason_text: The reason_text of this OrdersCustomBatchRequestEntryRefund.
        """
        self.openapi_types = {
            'amount': Price,
            'amount_pretax': Price,
            'amount_tax': Price,
            'reason': str,
            'reason_text': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'amount_pretax': 'amountPretax',
            'amount_tax': 'amountTax',
            'reason': 'reason',
            'reason_text': 'reasonText'
        }

        self._amount = amount
        self._amount_pretax = amount_pretax
        self._amount_tax = amount_tax
        self._reason = reason
        self._reason_text = reason_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrdersCustomBatchRequestEntryRefund':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrdersCustomBatchRequestEntryRefund of this OrdersCustomBatchRequestEntryRefund.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this OrdersCustomBatchRequestEntryRefund.


        :return: The amount of this OrdersCustomBatchRequestEntryRefund.
        :rtype: Price
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this OrdersCustomBatchRequestEntryRefund.


        :param amount: The amount of this OrdersCustomBatchRequestEntryRefund.
        :type amount: Price
        """

        self._amount = amount

    @property
    def amount_pretax(self):
        """Gets the amount_pretax of this OrdersCustomBatchRequestEntryRefund.


        :return: The amount_pretax of this OrdersCustomBatchRequestEntryRefund.
        :rtype: Price
        """
        return self._amount_pretax

    @amount_pretax.setter
    def amount_pretax(self, amount_pretax):
        """Sets the amount_pretax of this OrdersCustomBatchRequestEntryRefund.


        :param amount_pretax: The amount_pretax of this OrdersCustomBatchRequestEntryRefund.
        :type amount_pretax: Price
        """

        self._amount_pretax = amount_pretax

    @property
    def amount_tax(self):
        """Gets the amount_tax of this OrdersCustomBatchRequestEntryRefund.


        :return: The amount_tax of this OrdersCustomBatchRequestEntryRefund.
        :rtype: Price
        """
        return self._amount_tax

    @amount_tax.setter
    def amount_tax(self, amount_tax):
        """Sets the amount_tax of this OrdersCustomBatchRequestEntryRefund.


        :param amount_tax: The amount_tax of this OrdersCustomBatchRequestEntryRefund.
        :type amount_tax: Price
        """

        self._amount_tax = amount_tax

    @property
    def reason(self):
        """Gets the reason of this OrdersCustomBatchRequestEntryRefund.

        The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`deliveredLateByCarrier`\" - \"`feeAdjustment`\" - \"`lateShipmentCredit`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`shippingCostAdjustment`\" - \"`taxAdjustment`\" - \"`undeliverableShippingAddress`\" - \"`wrongProductShipped`\" 

        :return: The reason of this OrdersCustomBatchRequestEntryRefund.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this OrdersCustomBatchRequestEntryRefund.

        The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`deliveredLateByCarrier`\" - \"`feeAdjustment`\" - \"`lateShipmentCredit`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`shippingCostAdjustment`\" - \"`taxAdjustment`\" - \"`undeliverableShippingAddress`\" - \"`wrongProductShipped`\" 

        :param reason: The reason of this OrdersCustomBatchRequestEntryRefund.
        :type reason: str
        """

        self._reason = reason

    @property
    def reason_text(self):
        """Gets the reason_text of this OrdersCustomBatchRequestEntryRefund.

        The explanation of the reason.

        :return: The reason_text of this OrdersCustomBatchRequestEntryRefund.
        :rtype: str
        """
        return self._reason_text

    @reason_text.setter
    def reason_text(self, reason_text):
        """Sets the reason_text of this OrdersCustomBatchRequestEntryRefund.

        The explanation of the reason.

        :param reason_text: The reason_text of this OrdersCustomBatchRequestEntryRefund.
        :type reason_text: str
        """

        self._reason_text = reason_text
