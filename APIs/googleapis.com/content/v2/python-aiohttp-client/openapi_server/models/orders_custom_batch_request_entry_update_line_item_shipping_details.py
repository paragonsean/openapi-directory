# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deliver_by_date: str=None, line_item_id: str=None, product_id: str=None, ship_by_date: str=None):
        """OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails - a model defined in OpenAPI

        :param deliver_by_date: The deliver_by_date of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.
        :param line_item_id: The line_item_id of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.
        :param product_id: The product_id of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.
        :param ship_by_date: The ship_by_date of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.
        """
        self.openapi_types = {
            'deliver_by_date': str,
            'line_item_id': str,
            'product_id': str,
            'ship_by_date': str
        }

        self.attribute_map = {
            'deliver_by_date': 'deliverByDate',
            'line_item_id': 'lineItemId',
            'product_id': 'productId',
            'ship_by_date': 'shipByDate'
        }

        self._deliver_by_date = deliver_by_date
        self._line_item_id = line_item_id
        self._product_id = product_id
        self._ship_by_date = ship_by_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deliver_by_date(self):
        """Gets the deliver_by_date of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.

        Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.

        :return: The deliver_by_date of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.
        :rtype: str
        """
        return self._deliver_by_date

    @deliver_by_date.setter
    def deliver_by_date(self, deliver_by_date):
        """Sets the deliver_by_date of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.

        Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.

        :param deliver_by_date: The deliver_by_date of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.
        :type deliver_by_date: str
        """

        self._deliver_by_date = deliver_by_date

    @property
    def line_item_id(self):
        """Gets the line_item_id of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.

        The ID of the line item to set metadata. Either lineItemId or productId is required.

        :return: The line_item_id of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.
        :rtype: str
        """
        return self._line_item_id

    @line_item_id.setter
    def line_item_id(self, line_item_id):
        """Sets the line_item_id of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.

        The ID of the line item to set metadata. Either lineItemId or productId is required.

        :param line_item_id: The line_item_id of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.
        :type line_item_id: str
        """

        self._line_item_id = line_item_id

    @property
    def product_id(self):
        """Gets the product_id of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.

        The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.

        :return: The product_id of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.

        The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.

        :param product_id: The product_id of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def ship_by_date(self):
        """Gets the ship_by_date of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.

        Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.

        :return: The ship_by_date of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.
        :rtype: str
        """
        return self._ship_by_date

    @ship_by_date.setter
    def ship_by_date(self, ship_by_date):
        """Sets the ship_by_date of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.

        Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.

        :param ship_by_date: The ship_by_date of this OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails.
        :type ship_by_date: str
        """

        self._ship_by_date = ship_by_date
