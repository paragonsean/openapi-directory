# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.postal_code_range import PostalCodeRange
from openapi_server import util


class PostalCodeGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, name: str=None, postal_code_ranges: List[PostalCodeRange]=None):
        """PostalCodeGroup - a model defined in OpenAPI

        :param country: The country of this PostalCodeGroup.
        :param name: The name of this PostalCodeGroup.
        :param postal_code_ranges: The postal_code_ranges of this PostalCodeGroup.
        """
        self.openapi_types = {
            'country': str,
            'name': str,
            'postal_code_ranges': List[PostalCodeRange]
        }

        self.attribute_map = {
            'country': 'country',
            'name': 'name',
            'postal_code_ranges': 'postalCodeRanges'
        }

        self._country = country
        self._name = name
        self._postal_code_ranges = postal_code_ranges

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostalCodeGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostalCodeGroup of this PostalCodeGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this PostalCodeGroup.

        The CLDR territory code of the country the postal code group applies to. Required.

        :return: The country of this PostalCodeGroup.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this PostalCodeGroup.

        The CLDR territory code of the country the postal code group applies to. Required.

        :param country: The country of this PostalCodeGroup.
        :type country: str
        """

        self._country = country

    @property
    def name(self):
        """Gets the name of this PostalCodeGroup.

        The name of the postal code group, referred to in headers. Required.

        :return: The name of this PostalCodeGroup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PostalCodeGroup.

        The name of the postal code group, referred to in headers. Required.

        :param name: The name of this PostalCodeGroup.
        :type name: str
        """

        self._name = name

    @property
    def postal_code_ranges(self):
        """Gets the postal_code_ranges of this PostalCodeGroup.

        A range of postal codes. Required.

        :return: The postal_code_ranges of this PostalCodeGroup.
        :rtype: List[PostalCodeRange]
        """
        return self._postal_code_ranges

    @postal_code_ranges.setter
    def postal_code_ranges(self, postal_code_ranges):
        """Sets the postal_code_ranges of this PostalCodeGroup.

        A range of postal codes. Required.

        :param postal_code_ranges: The postal_code_ranges of this PostalCodeGroup.
        :type postal_code_ranges: List[PostalCodeRange]
        """

        self._postal_code_ranges = postal_code_ranges
