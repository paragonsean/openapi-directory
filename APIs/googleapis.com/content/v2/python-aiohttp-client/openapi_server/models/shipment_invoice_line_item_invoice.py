# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.unit_invoice import UnitInvoice
from openapi_server import util


class ShipmentInvoiceLineItemInvoice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, line_item_id: str=None, product_id: str=None, shipment_unit_ids: List[str]=None, unit_invoice: UnitInvoice=None):
        """ShipmentInvoiceLineItemInvoice - a model defined in OpenAPI

        :param line_item_id: The line_item_id of this ShipmentInvoiceLineItemInvoice.
        :param product_id: The product_id of this ShipmentInvoiceLineItemInvoice.
        :param shipment_unit_ids: The shipment_unit_ids of this ShipmentInvoiceLineItemInvoice.
        :param unit_invoice: The unit_invoice of this ShipmentInvoiceLineItemInvoice.
        """
        self.openapi_types = {
            'line_item_id': str,
            'product_id': str,
            'shipment_unit_ids': List[str],
            'unit_invoice': UnitInvoice
        }

        self.attribute_map = {
            'line_item_id': 'lineItemId',
            'product_id': 'productId',
            'shipment_unit_ids': 'shipmentUnitIds',
            'unit_invoice': 'unitInvoice'
        }

        self._line_item_id = line_item_id
        self._product_id = product_id
        self._shipment_unit_ids = shipment_unit_ids
        self._unit_invoice = unit_invoice

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShipmentInvoiceLineItemInvoice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShipmentInvoiceLineItemInvoice of this ShipmentInvoiceLineItemInvoice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def line_item_id(self):
        """Gets the line_item_id of this ShipmentInvoiceLineItemInvoice.

        ID of the line item. Either lineItemId or productId must be set.

        :return: The line_item_id of this ShipmentInvoiceLineItemInvoice.
        :rtype: str
        """
        return self._line_item_id

    @line_item_id.setter
    def line_item_id(self, line_item_id):
        """Sets the line_item_id of this ShipmentInvoiceLineItemInvoice.

        ID of the line item. Either lineItemId or productId must be set.

        :param line_item_id: The line_item_id of this ShipmentInvoiceLineItemInvoice.
        :type line_item_id: str
        """

        self._line_item_id = line_item_id

    @property
    def product_id(self):
        """Gets the product_id of this ShipmentInvoiceLineItemInvoice.

        ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set.

        :return: The product_id of this ShipmentInvoiceLineItemInvoice.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this ShipmentInvoiceLineItemInvoice.

        ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set.

        :param product_id: The product_id of this ShipmentInvoiceLineItemInvoice.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def shipment_unit_ids(self):
        """Gets the shipment_unit_ids of this ShipmentInvoiceLineItemInvoice.

        [required] The shipment unit ID is assigned by the merchant and defines individual quantities within a line item. The same ID can be assigned to units that are the same while units that differ must be assigned a different ID (for example: free or promotional units).

        :return: The shipment_unit_ids of this ShipmentInvoiceLineItemInvoice.
        :rtype: List[str]
        """
        return self._shipment_unit_ids

    @shipment_unit_ids.setter
    def shipment_unit_ids(self, shipment_unit_ids):
        """Sets the shipment_unit_ids of this ShipmentInvoiceLineItemInvoice.

        [required] The shipment unit ID is assigned by the merchant and defines individual quantities within a line item. The same ID can be assigned to units that are the same while units that differ must be assigned a different ID (for example: free or promotional units).

        :param shipment_unit_ids: The shipment_unit_ids of this ShipmentInvoiceLineItemInvoice.
        :type shipment_unit_ids: List[str]
        """

        self._shipment_unit_ids = shipment_unit_ids

    @property
    def unit_invoice(self):
        """Gets the unit_invoice of this ShipmentInvoiceLineItemInvoice.


        :return: The unit_invoice of this ShipmentInvoiceLineItemInvoice.
        :rtype: UnitInvoice
        """
        return self._unit_invoice

    @unit_invoice.setter
    def unit_invoice(self, unit_invoice):
        """Sets the unit_invoice of this ShipmentInvoiceLineItemInvoice.


        :param unit_invoice: The unit_invoice of this ShipmentInvoiceLineItemInvoice.
        :type unit_invoice: UnitInvoice
        """

        self._unit_invoice = unit_invoice
