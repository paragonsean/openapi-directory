# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_address import OrderAddress
from openapi_server.models.order_pickup_details_collector import OrderPickupDetailsCollector
from openapi_server import util


class OrderPickupDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: OrderAddress=None, collectors: List[OrderPickupDetailsCollector]=None, location_id: str=None):
        """OrderPickupDetails - a model defined in OpenAPI

        :param address: The address of this OrderPickupDetails.
        :param collectors: The collectors of this OrderPickupDetails.
        :param location_id: The location_id of this OrderPickupDetails.
        """
        self.openapi_types = {
            'address': OrderAddress,
            'collectors': List[OrderPickupDetailsCollector],
            'location_id': str
        }

        self.attribute_map = {
            'address': 'address',
            'collectors': 'collectors',
            'location_id': 'locationId'
        }

        self._address = address
        self._collectors = collectors
        self._location_id = location_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderPickupDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderPickupDetails of this OrderPickupDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this OrderPickupDetails.


        :return: The address of this OrderPickupDetails.
        :rtype: OrderAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this OrderPickupDetails.


        :param address: The address of this OrderPickupDetails.
        :type address: OrderAddress
        """

        self._address = address

    @property
    def collectors(self):
        """Gets the collectors of this OrderPickupDetails.

        Collectors authorized to pick up shipment from the pickup location.

        :return: The collectors of this OrderPickupDetails.
        :rtype: List[OrderPickupDetailsCollector]
        """
        return self._collectors

    @collectors.setter
    def collectors(self, collectors):
        """Sets the collectors of this OrderPickupDetails.

        Collectors authorized to pick up shipment from the pickup location.

        :param collectors: The collectors of this OrderPickupDetails.
        :type collectors: List[OrderPickupDetailsCollector]
        """

        self._collectors = collectors

    @property
    def location_id(self):
        """Gets the location_id of this OrderPickupDetails.

        ID of the pickup location.

        :return: The location_id of this OrderPickupDetails.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this OrderPickupDetails.

        ID of the pickup location.

        :param location_id: The location_id of this OrderPickupDetails.
        :type location_id: str
        """

        self._location_id = location_id
