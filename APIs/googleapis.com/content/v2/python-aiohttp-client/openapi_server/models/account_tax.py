# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_tax_tax_rule import AccountTaxTaxRule
from openapi_server import util


class AccountTax(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, kind: str=None, rules: List[AccountTaxTaxRule]=None):
        """AccountTax - a model defined in OpenAPI

        :param account_id: The account_id of this AccountTax.
        :param kind: The kind of this AccountTax.
        :param rules: The rules of this AccountTax.
        """
        self.openapi_types = {
            'account_id': str,
            'kind': str,
            'rules': List[AccountTaxTaxRule]
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'kind': 'kind',
            'rules': 'rules'
        }

        self._account_id = account_id
        self._kind = kind
        self._rules = rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountTax':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountTax of this AccountTax.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this AccountTax.

        Required. The ID of the account to which these account tax settings belong.

        :return: The account_id of this AccountTax.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this AccountTax.

        Required. The ID of the account to which these account tax settings belong.

        :param account_id: The account_id of this AccountTax.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def kind(self):
        """Gets the kind of this AccountTax.

        Identifies what kind of resource this is. Value: the fixed string \"content#accountTax\".

        :return: The kind of this AccountTax.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this AccountTax.

        Identifies what kind of resource this is. Value: the fixed string \"content#accountTax\".

        :param kind: The kind of this AccountTax.
        :type kind: str
        """

        self._kind = kind

    @property
    def rules(self):
        """Gets the rules of this AccountTax.

        Tax rules. Updating the tax rules will enable US taxes (not reversible). Defining no rules is equivalent to not charging tax at all.

        :return: The rules of this AccountTax.
        :rtype: List[AccountTaxTaxRule]
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this AccountTax.

        Tax rules. Updating the tax rules will enable US taxes (not reversible). Defining no rules is equivalent to not charging tax at all.

        :param rules: The rules of this AccountTax.
        :type rules: List[AccountTaxTaxRule]
        """

        self._rules = rules
