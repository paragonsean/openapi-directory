# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.datafeeds_custom_batch_request_entry import DatafeedsCustomBatchRequestEntry
from openapi_server import util


class DatafeedsCustomBatchRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entries: List[DatafeedsCustomBatchRequestEntry]=None):
        """DatafeedsCustomBatchRequest - a model defined in OpenAPI

        :param entries: The entries of this DatafeedsCustomBatchRequest.
        """
        self.openapi_types = {
            'entries': List[DatafeedsCustomBatchRequestEntry]
        }

        self.attribute_map = {
            'entries': 'entries'
        }

        self._entries = entries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatafeedsCustomBatchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatafeedsCustomBatchRequest of this DatafeedsCustomBatchRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entries(self):
        """Gets the entries of this DatafeedsCustomBatchRequest.

        The request entries to be processed in the batch.

        :return: The entries of this DatafeedsCustomBatchRequest.
        :rtype: List[DatafeedsCustomBatchRequestEntry]
        """
        return self._entries

    @entries.setter
    def entries(self, entries):
        """Sets the entries of this DatafeedsCustomBatchRequest.

        The request entries to be processed in the batch.

        :param entries: The entries of this DatafeedsCustomBatchRequest.
        :type entries: List[DatafeedsCustomBatchRequestEntry]
        """

        self._entries = entries
