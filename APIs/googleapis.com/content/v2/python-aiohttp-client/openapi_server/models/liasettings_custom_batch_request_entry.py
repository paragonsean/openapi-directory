# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lia_settings import LiaSettings
from openapi_server import util


class LiasettingsCustomBatchRequestEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, batch_id: int=None, contact_email: str=None, contact_name: str=None, country: str=None, gmb_email: str=None, lia_settings: LiaSettings=None, merchant_id: str=None, method: str=None, pos_data_provider_id: str=None, pos_external_account_id: str=None):
        """LiasettingsCustomBatchRequestEntry - a model defined in OpenAPI

        :param account_id: The account_id of this LiasettingsCustomBatchRequestEntry.
        :param batch_id: The batch_id of this LiasettingsCustomBatchRequestEntry.
        :param contact_email: The contact_email of this LiasettingsCustomBatchRequestEntry.
        :param contact_name: The contact_name of this LiasettingsCustomBatchRequestEntry.
        :param country: The country of this LiasettingsCustomBatchRequestEntry.
        :param gmb_email: The gmb_email of this LiasettingsCustomBatchRequestEntry.
        :param lia_settings: The lia_settings of this LiasettingsCustomBatchRequestEntry.
        :param merchant_id: The merchant_id of this LiasettingsCustomBatchRequestEntry.
        :param method: The method of this LiasettingsCustomBatchRequestEntry.
        :param pos_data_provider_id: The pos_data_provider_id of this LiasettingsCustomBatchRequestEntry.
        :param pos_external_account_id: The pos_external_account_id of this LiasettingsCustomBatchRequestEntry.
        """
        self.openapi_types = {
            'account_id': str,
            'batch_id': int,
            'contact_email': str,
            'contact_name': str,
            'country': str,
            'gmb_email': str,
            'lia_settings': LiaSettings,
            'merchant_id': str,
            'method': str,
            'pos_data_provider_id': str,
            'pos_external_account_id': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'batch_id': 'batchId',
            'contact_email': 'contactEmail',
            'contact_name': 'contactName',
            'country': 'country',
            'gmb_email': 'gmbEmail',
            'lia_settings': 'liaSettings',
            'merchant_id': 'merchantId',
            'method': 'method',
            'pos_data_provider_id': 'posDataProviderId',
            'pos_external_account_id': 'posExternalAccountId'
        }

        self._account_id = account_id
        self._batch_id = batch_id
        self._contact_email = contact_email
        self._contact_name = contact_name
        self._country = country
        self._gmb_email = gmb_email
        self._lia_settings = lia_settings
        self._merchant_id = merchant_id
        self._method = method
        self._pos_data_provider_id = pos_data_provider_id
        self._pos_external_account_id = pos_external_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiasettingsCustomBatchRequestEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiasettingsCustomBatchRequestEntry of this LiasettingsCustomBatchRequestEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this LiasettingsCustomBatchRequestEntry.

        The ID of the account for which to get/update account LIA settings.

        :return: The account_id of this LiasettingsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this LiasettingsCustomBatchRequestEntry.

        The ID of the account for which to get/update account LIA settings.

        :param account_id: The account_id of this LiasettingsCustomBatchRequestEntry.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def batch_id(self):
        """Gets the batch_id of this LiasettingsCustomBatchRequestEntry.

        An entry ID, unique within the batch request.

        :return: The batch_id of this LiasettingsCustomBatchRequestEntry.
        :rtype: int
        """
        return self._batch_id

    @batch_id.setter
    def batch_id(self, batch_id):
        """Sets the batch_id of this LiasettingsCustomBatchRequestEntry.

        An entry ID, unique within the batch request.

        :param batch_id: The batch_id of this LiasettingsCustomBatchRequestEntry.
        :type batch_id: int
        """

        self._batch_id = batch_id

    @property
    def contact_email(self):
        """Gets the contact_email of this LiasettingsCustomBatchRequestEntry.

        Inventory validation contact email. Required only for SetInventoryValidationContact.

        :return: The contact_email of this LiasettingsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._contact_email

    @contact_email.setter
    def contact_email(self, contact_email):
        """Sets the contact_email of this LiasettingsCustomBatchRequestEntry.

        Inventory validation contact email. Required only for SetInventoryValidationContact.

        :param contact_email: The contact_email of this LiasettingsCustomBatchRequestEntry.
        :type contact_email: str
        """

        self._contact_email = contact_email

    @property
    def contact_name(self):
        """Gets the contact_name of this LiasettingsCustomBatchRequestEntry.

        Inventory validation contact name. Required only for SetInventoryValidationContact.

        :return: The contact_name of this LiasettingsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._contact_name

    @contact_name.setter
    def contact_name(self, contact_name):
        """Sets the contact_name of this LiasettingsCustomBatchRequestEntry.

        Inventory validation contact name. Required only for SetInventoryValidationContact.

        :param contact_name: The contact_name of this LiasettingsCustomBatchRequestEntry.
        :type contact_name: str
        """

        self._contact_name = contact_name

    @property
    def country(self):
        """Gets the country of this LiasettingsCustomBatchRequestEntry.

        The country code. Required only for RequestInventoryVerification.

        :return: The country of this LiasettingsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this LiasettingsCustomBatchRequestEntry.

        The country code. Required only for RequestInventoryVerification.

        :param country: The country of this LiasettingsCustomBatchRequestEntry.
        :type country: str
        """

        self._country = country

    @property
    def gmb_email(self):
        """Gets the gmb_email of this LiasettingsCustomBatchRequestEntry.

        The GMB account. Required only for RequestGmbAccess.

        :return: The gmb_email of this LiasettingsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._gmb_email

    @gmb_email.setter
    def gmb_email(self, gmb_email):
        """Sets the gmb_email of this LiasettingsCustomBatchRequestEntry.

        The GMB account. Required only for RequestGmbAccess.

        :param gmb_email: The gmb_email of this LiasettingsCustomBatchRequestEntry.
        :type gmb_email: str
        """

        self._gmb_email = gmb_email

    @property
    def lia_settings(self):
        """Gets the lia_settings of this LiasettingsCustomBatchRequestEntry.


        :return: The lia_settings of this LiasettingsCustomBatchRequestEntry.
        :rtype: LiaSettings
        """
        return self._lia_settings

    @lia_settings.setter
    def lia_settings(self, lia_settings):
        """Sets the lia_settings of this LiasettingsCustomBatchRequestEntry.


        :param lia_settings: The lia_settings of this LiasettingsCustomBatchRequestEntry.
        :type lia_settings: LiaSettings
        """

        self._lia_settings = lia_settings

    @property
    def merchant_id(self):
        """Gets the merchant_id of this LiasettingsCustomBatchRequestEntry.

        The ID of the managing account.

        :return: The merchant_id of this LiasettingsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """Sets the merchant_id of this LiasettingsCustomBatchRequestEntry.

        The ID of the managing account.

        :param merchant_id: The merchant_id of this LiasettingsCustomBatchRequestEntry.
        :type merchant_id: str
        """

        self._merchant_id = merchant_id

    @property
    def method(self):
        """Gets the method of this LiasettingsCustomBatchRequestEntry.

        The method of the batch entry. Acceptable values are: - \"`get`\" - \"`getAccessibleGmbAccounts`\" - \"`requestGmbAccess`\" - \"`requestInventoryVerification`\" - \"`setInventoryVerificationContact`\" - \"`update`\" 

        :return: The method of this LiasettingsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this LiasettingsCustomBatchRequestEntry.

        The method of the batch entry. Acceptable values are: - \"`get`\" - \"`getAccessibleGmbAccounts`\" - \"`requestGmbAccess`\" - \"`requestInventoryVerification`\" - \"`setInventoryVerificationContact`\" - \"`update`\" 

        :param method: The method of this LiasettingsCustomBatchRequestEntry.
        :type method: str
        """

        self._method = method

    @property
    def pos_data_provider_id(self):
        """Gets the pos_data_provider_id of this LiasettingsCustomBatchRequestEntry.

        The ID of POS data provider. Required only for SetPosProvider.

        :return: The pos_data_provider_id of this LiasettingsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._pos_data_provider_id

    @pos_data_provider_id.setter
    def pos_data_provider_id(self, pos_data_provider_id):
        """Sets the pos_data_provider_id of this LiasettingsCustomBatchRequestEntry.

        The ID of POS data provider. Required only for SetPosProvider.

        :param pos_data_provider_id: The pos_data_provider_id of this LiasettingsCustomBatchRequestEntry.
        :type pos_data_provider_id: str
        """

        self._pos_data_provider_id = pos_data_provider_id

    @property
    def pos_external_account_id(self):
        """Gets the pos_external_account_id of this LiasettingsCustomBatchRequestEntry.

        The account ID by which this merchant is known to the POS provider.

        :return: The pos_external_account_id of this LiasettingsCustomBatchRequestEntry.
        :rtype: str
        """
        return self._pos_external_account_id

    @pos_external_account_id.setter
    def pos_external_account_id(self, pos_external_account_id):
        """Sets the pos_external_account_id of this LiasettingsCustomBatchRequestEntry.

        The account ID by which this merchant is known to the POS provider.

        :param pos_external_account_id: The pos_external_account_id of this LiasettingsCustomBatchRequestEntry.
        :type pos_external_account_id: str
        """

        self._pos_external_account_id = pos_external_account_id
