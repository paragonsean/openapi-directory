# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.errors import Errors
from openapi_server.models.pos_inventory import PosInventory
from openapi_server.models.pos_sale import PosSale
from openapi_server.models.pos_store import PosStore
from openapi_server import util


class PosCustomBatchResponseEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_id: int=None, errors: Errors=None, inventory: PosInventory=None, kind: str=None, sale: PosSale=None, store: PosStore=None):
        """PosCustomBatchResponseEntry - a model defined in OpenAPI

        :param batch_id: The batch_id of this PosCustomBatchResponseEntry.
        :param errors: The errors of this PosCustomBatchResponseEntry.
        :param inventory: The inventory of this PosCustomBatchResponseEntry.
        :param kind: The kind of this PosCustomBatchResponseEntry.
        :param sale: The sale of this PosCustomBatchResponseEntry.
        :param store: The store of this PosCustomBatchResponseEntry.
        """
        self.openapi_types = {
            'batch_id': int,
            'errors': Errors,
            'inventory': PosInventory,
            'kind': str,
            'sale': PosSale,
            'store': PosStore
        }

        self.attribute_map = {
            'batch_id': 'batchId',
            'errors': 'errors',
            'inventory': 'inventory',
            'kind': 'kind',
            'sale': 'sale',
            'store': 'store'
        }

        self._batch_id = batch_id
        self._errors = errors
        self._inventory = inventory
        self._kind = kind
        self._sale = sale
        self._store = store

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PosCustomBatchResponseEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PosCustomBatchResponseEntry of this PosCustomBatchResponseEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_id(self):
        """Gets the batch_id of this PosCustomBatchResponseEntry.

        The ID of the request entry to which this entry responds.

        :return: The batch_id of this PosCustomBatchResponseEntry.
        :rtype: int
        """
        return self._batch_id

    @batch_id.setter
    def batch_id(self, batch_id):
        """Sets the batch_id of this PosCustomBatchResponseEntry.

        The ID of the request entry to which this entry responds.

        :param batch_id: The batch_id of this PosCustomBatchResponseEntry.
        :type batch_id: int
        """

        self._batch_id = batch_id

    @property
    def errors(self):
        """Gets the errors of this PosCustomBatchResponseEntry.


        :return: The errors of this PosCustomBatchResponseEntry.
        :rtype: Errors
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this PosCustomBatchResponseEntry.


        :param errors: The errors of this PosCustomBatchResponseEntry.
        :type errors: Errors
        """

        self._errors = errors

    @property
    def inventory(self):
        """Gets the inventory of this PosCustomBatchResponseEntry.


        :return: The inventory of this PosCustomBatchResponseEntry.
        :rtype: PosInventory
        """
        return self._inventory

    @inventory.setter
    def inventory(self, inventory):
        """Sets the inventory of this PosCustomBatchResponseEntry.


        :param inventory: The inventory of this PosCustomBatchResponseEntry.
        :type inventory: PosInventory
        """

        self._inventory = inventory

    @property
    def kind(self):
        """Gets the kind of this PosCustomBatchResponseEntry.

        Identifies what kind of resource this is. Value: the fixed string \"`content#posCustomBatchResponseEntry`\"

        :return: The kind of this PosCustomBatchResponseEntry.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PosCustomBatchResponseEntry.

        Identifies what kind of resource this is. Value: the fixed string \"`content#posCustomBatchResponseEntry`\"

        :param kind: The kind of this PosCustomBatchResponseEntry.
        :type kind: str
        """

        self._kind = kind

    @property
    def sale(self):
        """Gets the sale of this PosCustomBatchResponseEntry.


        :return: The sale of this PosCustomBatchResponseEntry.
        :rtype: PosSale
        """
        return self._sale

    @sale.setter
    def sale(self, sale):
        """Sets the sale of this PosCustomBatchResponseEntry.


        :param sale: The sale of this PosCustomBatchResponseEntry.
        :type sale: PosSale
        """

        self._sale = sale

    @property
    def store(self):
        """Gets the store of this PosCustomBatchResponseEntry.


        :return: The store of this PosCustomBatchResponseEntry.
        :rtype: PosStore
        """
        return self._store

    @store.setter
    def store(self, store):
        """Sets the store of this PosCustomBatchResponseEntry.


        :param store: The store of this PosCustomBatchResponseEntry.
        :type store: PosStore
        """

        self._store = store
