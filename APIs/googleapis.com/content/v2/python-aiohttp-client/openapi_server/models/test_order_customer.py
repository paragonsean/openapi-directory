# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.test_order_customer_marketing_rights_info import TestOrderCustomerMarketingRightsInfo
from openapi_server import util


class TestOrderCustomer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, explicit_marketing_preference: bool=None, full_name: str=None, marketing_rights_info: TestOrderCustomerMarketingRightsInfo=None):
        """TestOrderCustomer - a model defined in OpenAPI

        :param email: The email of this TestOrderCustomer.
        :param explicit_marketing_preference: The explicit_marketing_preference of this TestOrderCustomer.
        :param full_name: The full_name of this TestOrderCustomer.
        :param marketing_rights_info: The marketing_rights_info of this TestOrderCustomer.
        """
        self.openapi_types = {
            'email': str,
            'explicit_marketing_preference': bool,
            'full_name': str,
            'marketing_rights_info': TestOrderCustomerMarketingRightsInfo
        }

        self.attribute_map = {
            'email': 'email',
            'explicit_marketing_preference': 'explicitMarketingPreference',
            'full_name': 'fullName',
            'marketing_rights_info': 'marketingRightsInfo'
        }

        self._email = email
        self._explicit_marketing_preference = explicit_marketing_preference
        self._full_name = full_name
        self._marketing_rights_info = marketing_rights_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestOrderCustomer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestOrderCustomer of this TestOrderCustomer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this TestOrderCustomer.

        Required. Email address of the customer. Acceptable values are: - \"`pog.dwight.schrute@gmail.com`\" - \"`pog.jim.halpert@gmail.com`\" - \"`penpog.pam.beesly@gmail.comding`\" 

        :return: The email of this TestOrderCustomer.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this TestOrderCustomer.

        Required. Email address of the customer. Acceptable values are: - \"`pog.dwight.schrute@gmail.com`\" - \"`pog.jim.halpert@gmail.com`\" - \"`penpog.pam.beesly@gmail.comding`\" 

        :param email: The email of this TestOrderCustomer.
        :type email: str
        """

        self._email = email

    @property
    def explicit_marketing_preference(self):
        """Gets the explicit_marketing_preference of this TestOrderCustomer.

        Deprecated. Please use marketingRightsInfo instead.

        :return: The explicit_marketing_preference of this TestOrderCustomer.
        :rtype: bool
        """
        return self._explicit_marketing_preference

    @explicit_marketing_preference.setter
    def explicit_marketing_preference(self, explicit_marketing_preference):
        """Sets the explicit_marketing_preference of this TestOrderCustomer.

        Deprecated. Please use marketingRightsInfo instead.

        :param explicit_marketing_preference: The explicit_marketing_preference of this TestOrderCustomer.
        :type explicit_marketing_preference: bool
        """

        self._explicit_marketing_preference = explicit_marketing_preference

    @property
    def full_name(self):
        """Gets the full_name of this TestOrderCustomer.

        Full name of the customer.

        :return: The full_name of this TestOrderCustomer.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this TestOrderCustomer.

        Full name of the customer.

        :param full_name: The full_name of this TestOrderCustomer.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def marketing_rights_info(self):
        """Gets the marketing_rights_info of this TestOrderCustomer.


        :return: The marketing_rights_info of this TestOrderCustomer.
        :rtype: TestOrderCustomerMarketingRightsInfo
        """
        return self._marketing_rights_info

    @marketing_rights_info.setter
    def marketing_rights_info(self, marketing_rights_info):
        """Sets the marketing_rights_info of this TestOrderCustomer.


        :param marketing_rights_info: The marketing_rights_info of this TestOrderCustomer.
        :type marketing_rights_info: TestOrderCustomerMarketingRightsInfo
        """

        self._marketing_rights_info = marketing_rights_info
