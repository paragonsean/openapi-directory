# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductStatusDataQualityIssue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination: str=None, detail: str=None, fetch_status: str=None, id: str=None, location: str=None, severity: str=None, timestamp: str=None, value_on_landing_page: str=None, value_provided: str=None):
        """ProductStatusDataQualityIssue - a model defined in OpenAPI

        :param destination: The destination of this ProductStatusDataQualityIssue.
        :param detail: The detail of this ProductStatusDataQualityIssue.
        :param fetch_status: The fetch_status of this ProductStatusDataQualityIssue.
        :param id: The id of this ProductStatusDataQualityIssue.
        :param location: The location of this ProductStatusDataQualityIssue.
        :param severity: The severity of this ProductStatusDataQualityIssue.
        :param timestamp: The timestamp of this ProductStatusDataQualityIssue.
        :param value_on_landing_page: The value_on_landing_page of this ProductStatusDataQualityIssue.
        :param value_provided: The value_provided of this ProductStatusDataQualityIssue.
        """
        self.openapi_types = {
            'destination': str,
            'detail': str,
            'fetch_status': str,
            'id': str,
            'location': str,
            'severity': str,
            'timestamp': str,
            'value_on_landing_page': str,
            'value_provided': str
        }

        self.attribute_map = {
            'destination': 'destination',
            'detail': 'detail',
            'fetch_status': 'fetchStatus',
            'id': 'id',
            'location': 'location',
            'severity': 'severity',
            'timestamp': 'timestamp',
            'value_on_landing_page': 'valueOnLandingPage',
            'value_provided': 'valueProvided'
        }

        self._destination = destination
        self._detail = detail
        self._fetch_status = fetch_status
        self._id = id
        self._location = location
        self._severity = severity
        self._timestamp = timestamp
        self._value_on_landing_page = value_on_landing_page
        self._value_provided = value_provided

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductStatusDataQualityIssue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductStatusDataQualityIssue of this ProductStatusDataQualityIssue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination(self):
        """Gets the destination of this ProductStatusDataQualityIssue.


        :return: The destination of this ProductStatusDataQualityIssue.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this ProductStatusDataQualityIssue.


        :param destination: The destination of this ProductStatusDataQualityIssue.
        :type destination: str
        """

        self._destination = destination

    @property
    def detail(self):
        """Gets the detail of this ProductStatusDataQualityIssue.


        :return: The detail of this ProductStatusDataQualityIssue.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this ProductStatusDataQualityIssue.


        :param detail: The detail of this ProductStatusDataQualityIssue.
        :type detail: str
        """

        self._detail = detail

    @property
    def fetch_status(self):
        """Gets the fetch_status of this ProductStatusDataQualityIssue.


        :return: The fetch_status of this ProductStatusDataQualityIssue.
        :rtype: str
        """
        return self._fetch_status

    @fetch_status.setter
    def fetch_status(self, fetch_status):
        """Sets the fetch_status of this ProductStatusDataQualityIssue.


        :param fetch_status: The fetch_status of this ProductStatusDataQualityIssue.
        :type fetch_status: str
        """

        self._fetch_status = fetch_status

    @property
    def id(self):
        """Gets the id of this ProductStatusDataQualityIssue.


        :return: The id of this ProductStatusDataQualityIssue.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProductStatusDataQualityIssue.


        :param id: The id of this ProductStatusDataQualityIssue.
        :type id: str
        """

        self._id = id

    @property
    def location(self):
        """Gets the location of this ProductStatusDataQualityIssue.


        :return: The location of this ProductStatusDataQualityIssue.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ProductStatusDataQualityIssue.


        :param location: The location of this ProductStatusDataQualityIssue.
        :type location: str
        """

        self._location = location

    @property
    def severity(self):
        """Gets the severity of this ProductStatusDataQualityIssue.


        :return: The severity of this ProductStatusDataQualityIssue.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this ProductStatusDataQualityIssue.


        :param severity: The severity of this ProductStatusDataQualityIssue.
        :type severity: str
        """

        self._severity = severity

    @property
    def timestamp(self):
        """Gets the timestamp of this ProductStatusDataQualityIssue.


        :return: The timestamp of this ProductStatusDataQualityIssue.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this ProductStatusDataQualityIssue.


        :param timestamp: The timestamp of this ProductStatusDataQualityIssue.
        :type timestamp: str
        """

        self._timestamp = timestamp

    @property
    def value_on_landing_page(self):
        """Gets the value_on_landing_page of this ProductStatusDataQualityIssue.


        :return: The value_on_landing_page of this ProductStatusDataQualityIssue.
        :rtype: str
        """
        return self._value_on_landing_page

    @value_on_landing_page.setter
    def value_on_landing_page(self, value_on_landing_page):
        """Sets the value_on_landing_page of this ProductStatusDataQualityIssue.


        :param value_on_landing_page: The value_on_landing_page of this ProductStatusDataQualityIssue.
        :type value_on_landing_page: str
        """

        self._value_on_landing_page = value_on_landing_page

    @property
    def value_provided(self):
        """Gets the value_provided of this ProductStatusDataQualityIssue.


        :return: The value_provided of this ProductStatusDataQualityIssue.
        :rtype: str
        """
        return self._value_provided

    @value_provided.setter
    def value_provided(self, value_provided):
        """Sets the value_provided of this ProductStatusDataQualityIssue.


        :param value_provided: The value_provided of this ProductStatusDataQualityIssue.
        :type value_provided: str
        """

        self._value_provided = value_provided
