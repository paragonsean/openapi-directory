# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GmbAccountsGmbAccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, listing_count: str=None, name: str=None, type: str=None):
        """GmbAccountsGmbAccount - a model defined in OpenAPI

        :param email: The email of this GmbAccountsGmbAccount.
        :param listing_count: The listing_count of this GmbAccountsGmbAccount.
        :param name: The name of this GmbAccountsGmbAccount.
        :param type: The type of this GmbAccountsGmbAccount.
        """
        self.openapi_types = {
            'email': str,
            'listing_count': str,
            'name': str,
            'type': str
        }

        self.attribute_map = {
            'email': 'email',
            'listing_count': 'listingCount',
            'name': 'name',
            'type': 'type'
        }

        self._email = email
        self._listing_count = listing_count
        self._name = name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GmbAccountsGmbAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GmbAccountsGmbAccount of this GmbAccountsGmbAccount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this GmbAccountsGmbAccount.

        The email which identifies the GMB account.

        :return: The email of this GmbAccountsGmbAccount.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this GmbAccountsGmbAccount.

        The email which identifies the GMB account.

        :param email: The email of this GmbAccountsGmbAccount.
        :type email: str
        """

        self._email = email

    @property
    def listing_count(self):
        """Gets the listing_count of this GmbAccountsGmbAccount.

        Number of listings under this account.

        :return: The listing_count of this GmbAccountsGmbAccount.
        :rtype: str
        """
        return self._listing_count

    @listing_count.setter
    def listing_count(self, listing_count):
        """Sets the listing_count of this GmbAccountsGmbAccount.

        Number of listings under this account.

        :param listing_count: The listing_count of this GmbAccountsGmbAccount.
        :type listing_count: str
        """

        self._listing_count = listing_count

    @property
    def name(self):
        """Gets the name of this GmbAccountsGmbAccount.

        The name of the GMB account.

        :return: The name of this GmbAccountsGmbAccount.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GmbAccountsGmbAccount.

        The name of the GMB account.

        :param name: The name of this GmbAccountsGmbAccount.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this GmbAccountsGmbAccount.

        The type of the GMB account (User or Business).

        :return: The type of this GmbAccountsGmbAccount.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GmbAccountsGmbAccount.

        The type of the GMB account (User or Business).

        :param type: The type of this GmbAccountsGmbAccount.
        :type type: str
        """

        self._type = type
