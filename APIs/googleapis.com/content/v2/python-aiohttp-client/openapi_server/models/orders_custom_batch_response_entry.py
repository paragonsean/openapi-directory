# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.errors import Errors
from openapi_server.models.order import Order
from openapi_server import util


class OrdersCustomBatchResponseEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_id: int=None, errors: Errors=None, execution_status: str=None, kind: str=None, order: Order=None):
        """OrdersCustomBatchResponseEntry - a model defined in OpenAPI

        :param batch_id: The batch_id of this OrdersCustomBatchResponseEntry.
        :param errors: The errors of this OrdersCustomBatchResponseEntry.
        :param execution_status: The execution_status of this OrdersCustomBatchResponseEntry.
        :param kind: The kind of this OrdersCustomBatchResponseEntry.
        :param order: The order of this OrdersCustomBatchResponseEntry.
        """
        self.openapi_types = {
            'batch_id': int,
            'errors': Errors,
            'execution_status': str,
            'kind': str,
            'order': Order
        }

        self.attribute_map = {
            'batch_id': 'batchId',
            'errors': 'errors',
            'execution_status': 'executionStatus',
            'kind': 'kind',
            'order': 'order'
        }

        self._batch_id = batch_id
        self._errors = errors
        self._execution_status = execution_status
        self._kind = kind
        self._order = order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrdersCustomBatchResponseEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrdersCustomBatchResponseEntry of this OrdersCustomBatchResponseEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_id(self):
        """Gets the batch_id of this OrdersCustomBatchResponseEntry.

        The ID of the request entry this entry responds to.

        :return: The batch_id of this OrdersCustomBatchResponseEntry.
        :rtype: int
        """
        return self._batch_id

    @batch_id.setter
    def batch_id(self, batch_id):
        """Sets the batch_id of this OrdersCustomBatchResponseEntry.

        The ID of the request entry this entry responds to.

        :param batch_id: The batch_id of this OrdersCustomBatchResponseEntry.
        :type batch_id: int
        """

        self._batch_id = batch_id

    @property
    def errors(self):
        """Gets the errors of this OrdersCustomBatchResponseEntry.


        :return: The errors of this OrdersCustomBatchResponseEntry.
        :rtype: Errors
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this OrdersCustomBatchResponseEntry.


        :param errors: The errors of this OrdersCustomBatchResponseEntry.
        :type errors: Errors
        """

        self._errors = errors

    @property
    def execution_status(self):
        """Gets the execution_status of this OrdersCustomBatchResponseEntry.

        The status of the execution. Only defined if 1. the request was successful; and 2. the method is not `get`, `getByMerchantOrderId`, or one of the test methods. Acceptable values are: - \"`duplicate`\" - \"`executed`\" 

        :return: The execution_status of this OrdersCustomBatchResponseEntry.
        :rtype: str
        """
        return self._execution_status

    @execution_status.setter
    def execution_status(self, execution_status):
        """Sets the execution_status of this OrdersCustomBatchResponseEntry.

        The status of the execution. Only defined if 1. the request was successful; and 2. the method is not `get`, `getByMerchantOrderId`, or one of the test methods. Acceptable values are: - \"`duplicate`\" - \"`executed`\" 

        :param execution_status: The execution_status of this OrdersCustomBatchResponseEntry.
        :type execution_status: str
        """

        self._execution_status = execution_status

    @property
    def kind(self):
        """Gets the kind of this OrdersCustomBatchResponseEntry.

        Identifies what kind of resource this is. Value: the fixed string \"`content#ordersCustomBatchResponseEntry`\"

        :return: The kind of this OrdersCustomBatchResponseEntry.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this OrdersCustomBatchResponseEntry.

        Identifies what kind of resource this is. Value: the fixed string \"`content#ordersCustomBatchResponseEntry`\"

        :param kind: The kind of this OrdersCustomBatchResponseEntry.
        :type kind: str
        """

        self._kind = kind

    @property
    def order(self):
        """Gets the order of this OrdersCustomBatchResponseEntry.


        :return: The order of this OrdersCustomBatchResponseEntry.
        :rtype: Order
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this OrdersCustomBatchResponseEntry.


        :param order: The order of this OrdersCustomBatchResponseEntry.
        :type order: Order
        """

        self._order = order
