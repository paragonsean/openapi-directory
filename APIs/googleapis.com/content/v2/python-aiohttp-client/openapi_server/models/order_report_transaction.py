# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server.models.price import Price
from openapi_server.models.product_amount import ProductAmount
from openapi_server import util


class OrderReportTransaction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disbursement_amount: Price=None, disbursement_creation_date: str=None, disbursement_date: str=None, disbursement_id: str=None, merchant_id: str=None, merchant_order_id: str=None, order_id: str=None, product_amount: Amount=None, product_amount_with_remitted_tax: ProductAmount=None, transaction_date: str=None):
        """OrderReportTransaction - a model defined in OpenAPI

        :param disbursement_amount: The disbursement_amount of this OrderReportTransaction.
        :param disbursement_creation_date: The disbursement_creation_date of this OrderReportTransaction.
        :param disbursement_date: The disbursement_date of this OrderReportTransaction.
        :param disbursement_id: The disbursement_id of this OrderReportTransaction.
        :param merchant_id: The merchant_id of this OrderReportTransaction.
        :param merchant_order_id: The merchant_order_id of this OrderReportTransaction.
        :param order_id: The order_id of this OrderReportTransaction.
        :param product_amount: The product_amount of this OrderReportTransaction.
        :param product_amount_with_remitted_tax: The product_amount_with_remitted_tax of this OrderReportTransaction.
        :param transaction_date: The transaction_date of this OrderReportTransaction.
        """
        self.openapi_types = {
            'disbursement_amount': Price,
            'disbursement_creation_date': str,
            'disbursement_date': str,
            'disbursement_id': str,
            'merchant_id': str,
            'merchant_order_id': str,
            'order_id': str,
            'product_amount': Amount,
            'product_amount_with_remitted_tax': ProductAmount,
            'transaction_date': str
        }

        self.attribute_map = {
            'disbursement_amount': 'disbursementAmount',
            'disbursement_creation_date': 'disbursementCreationDate',
            'disbursement_date': 'disbursementDate',
            'disbursement_id': 'disbursementId',
            'merchant_id': 'merchantId',
            'merchant_order_id': 'merchantOrderId',
            'order_id': 'orderId',
            'product_amount': 'productAmount',
            'product_amount_with_remitted_tax': 'productAmountWithRemittedTax',
            'transaction_date': 'transactionDate'
        }

        self._disbursement_amount = disbursement_amount
        self._disbursement_creation_date = disbursement_creation_date
        self._disbursement_date = disbursement_date
        self._disbursement_id = disbursement_id
        self._merchant_id = merchant_id
        self._merchant_order_id = merchant_order_id
        self._order_id = order_id
        self._product_amount = product_amount
        self._product_amount_with_remitted_tax = product_amount_with_remitted_tax
        self._transaction_date = transaction_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderReportTransaction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderReportTransaction of this OrderReportTransaction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disbursement_amount(self):
        """Gets the disbursement_amount of this OrderReportTransaction.


        :return: The disbursement_amount of this OrderReportTransaction.
        :rtype: Price
        """
        return self._disbursement_amount

    @disbursement_amount.setter
    def disbursement_amount(self, disbursement_amount):
        """Sets the disbursement_amount of this OrderReportTransaction.


        :param disbursement_amount: The disbursement_amount of this OrderReportTransaction.
        :type disbursement_amount: Price
        """

        self._disbursement_amount = disbursement_amount

    @property
    def disbursement_creation_date(self):
        """Gets the disbursement_creation_date of this OrderReportTransaction.

        The date the disbursement was created, in ISO 8601 format.

        :return: The disbursement_creation_date of this OrderReportTransaction.
        :rtype: str
        """
        return self._disbursement_creation_date

    @disbursement_creation_date.setter
    def disbursement_creation_date(self, disbursement_creation_date):
        """Sets the disbursement_creation_date of this OrderReportTransaction.

        The date the disbursement was created, in ISO 8601 format.

        :param disbursement_creation_date: The disbursement_creation_date of this OrderReportTransaction.
        :type disbursement_creation_date: str
        """

        self._disbursement_creation_date = disbursement_creation_date

    @property
    def disbursement_date(self):
        """Gets the disbursement_date of this OrderReportTransaction.

        The date the disbursement was initiated, in ISO 8601 format.

        :return: The disbursement_date of this OrderReportTransaction.
        :rtype: str
        """
        return self._disbursement_date

    @disbursement_date.setter
    def disbursement_date(self, disbursement_date):
        """Sets the disbursement_date of this OrderReportTransaction.

        The date the disbursement was initiated, in ISO 8601 format.

        :param disbursement_date: The disbursement_date of this OrderReportTransaction.
        :type disbursement_date: str
        """

        self._disbursement_date = disbursement_date

    @property
    def disbursement_id(self):
        """Gets the disbursement_id of this OrderReportTransaction.

        The ID of the disbursement.

        :return: The disbursement_id of this OrderReportTransaction.
        :rtype: str
        """
        return self._disbursement_id

    @disbursement_id.setter
    def disbursement_id(self, disbursement_id):
        """Sets the disbursement_id of this OrderReportTransaction.

        The ID of the disbursement.

        :param disbursement_id: The disbursement_id of this OrderReportTransaction.
        :type disbursement_id: str
        """

        self._disbursement_id = disbursement_id

    @property
    def merchant_id(self):
        """Gets the merchant_id of this OrderReportTransaction.

        The ID of the managing account.

        :return: The merchant_id of this OrderReportTransaction.
        :rtype: str
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """Sets the merchant_id of this OrderReportTransaction.

        The ID of the managing account.

        :param merchant_id: The merchant_id of this OrderReportTransaction.
        :type merchant_id: str
        """

        self._merchant_id = merchant_id

    @property
    def merchant_order_id(self):
        """Gets the merchant_order_id of this OrderReportTransaction.

        Merchant-provided ID of the order.

        :return: The merchant_order_id of this OrderReportTransaction.
        :rtype: str
        """
        return self._merchant_order_id

    @merchant_order_id.setter
    def merchant_order_id(self, merchant_order_id):
        """Sets the merchant_order_id of this OrderReportTransaction.

        Merchant-provided ID of the order.

        :param merchant_order_id: The merchant_order_id of this OrderReportTransaction.
        :type merchant_order_id: str
        """

        self._merchant_order_id = merchant_order_id

    @property
    def order_id(self):
        """Gets the order_id of this OrderReportTransaction.

        The ID of the order.

        :return: The order_id of this OrderReportTransaction.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this OrderReportTransaction.

        The ID of the order.

        :param order_id: The order_id of this OrderReportTransaction.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def product_amount(self):
        """Gets the product_amount of this OrderReportTransaction.


        :return: The product_amount of this OrderReportTransaction.
        :rtype: Amount
        """
        return self._product_amount

    @product_amount.setter
    def product_amount(self, product_amount):
        """Sets the product_amount of this OrderReportTransaction.


        :param product_amount: The product_amount of this OrderReportTransaction.
        :type product_amount: Amount
        """

        self._product_amount = product_amount

    @property
    def product_amount_with_remitted_tax(self):
        """Gets the product_amount_with_remitted_tax of this OrderReportTransaction.


        :return: The product_amount_with_remitted_tax of this OrderReportTransaction.
        :rtype: ProductAmount
        """
        return self._product_amount_with_remitted_tax

    @product_amount_with_remitted_tax.setter
    def product_amount_with_remitted_tax(self, product_amount_with_remitted_tax):
        """Sets the product_amount_with_remitted_tax of this OrderReportTransaction.


        :param product_amount_with_remitted_tax: The product_amount_with_remitted_tax of this OrderReportTransaction.
        :type product_amount_with_remitted_tax: ProductAmount
        """

        self._product_amount_with_remitted_tax = product_amount_with_remitted_tax

    @property
    def transaction_date(self):
        """Gets the transaction_date of this OrderReportTransaction.

        The date of the transaction, in ISO 8601 format.

        :return: The transaction_date of this OrderReportTransaction.
        :rtype: str
        """
        return self._transaction_date

    @transaction_date.setter
    def transaction_date(self, transaction_date):
        """Sets the transaction_date of this OrderReportTransaction.

        The date of the transaction, in ISO 8601 format.

        :param transaction_date: The transaction_date of this OrderReportTransaction.
        :type transaction_date: str
        """

        self._transaction_date = transaction_date
