/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProduct.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProduct::OAIProduct(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProduct::OAIProduct() {
    this->initializeModel();
}

OAIProduct::~OAIProduct() {}

void OAIProduct::initializeModel() {

    m_additional_image_links_isSet = false;
    m_additional_image_links_isValid = false;

    m_additional_product_types_isSet = false;
    m_additional_product_types_isValid = false;

    m_adult_isSet = false;
    m_adult_isValid = false;

    m_adwords_grouping_isSet = false;
    m_adwords_grouping_isValid = false;

    m_adwords_labels_isSet = false;
    m_adwords_labels_isValid = false;

    m_adwords_redirect_isSet = false;
    m_adwords_redirect_isValid = false;

    m_age_group_isSet = false;
    m_age_group_isValid = false;

    m_aspects_isSet = false;
    m_aspects_isValid = false;

    m_availability_isSet = false;
    m_availability_isValid = false;

    m_availability_date_isSet = false;
    m_availability_date_isValid = false;

    m_brand_isSet = false;
    m_brand_isValid = false;

    m_canonical_link_isSet = false;
    m_canonical_link_isValid = false;

    m_channel_isSet = false;
    m_channel_isValid = false;

    m_color_isSet = false;
    m_color_isValid = false;

    m_condition_isSet = false;
    m_condition_isValid = false;

    m_content_language_isSet = false;
    m_content_language_isValid = false;

    m_cost_of_goods_sold_isSet = false;
    m_cost_of_goods_sold_isValid = false;

    m_custom_attributes_isSet = false;
    m_custom_attributes_isValid = false;

    m_custom_groups_isSet = false;
    m_custom_groups_isValid = false;

    m_custom_label0_isSet = false;
    m_custom_label0_isValid = false;

    m_custom_label1_isSet = false;
    m_custom_label1_isValid = false;

    m_custom_label2_isSet = false;
    m_custom_label2_isValid = false;

    m_custom_label3_isSet = false;
    m_custom_label3_isValid = false;

    m_custom_label4_isSet = false;
    m_custom_label4_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_destinations_isSet = false;
    m_destinations_isValid = false;

    m_display_ads_id_isSet = false;
    m_display_ads_id_isValid = false;

    m_display_ads_link_isSet = false;
    m_display_ads_link_isValid = false;

    m_display_ads_similar_ids_isSet = false;
    m_display_ads_similar_ids_isValid = false;

    m_display_ads_title_isSet = false;
    m_display_ads_title_isValid = false;

    m_display_ads_value_isSet = false;
    m_display_ads_value_isValid = false;

    m_energy_efficiency_class_isSet = false;
    m_energy_efficiency_class_isValid = false;

    m_expiration_date_isSet = false;
    m_expiration_date_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_google_product_category_isSet = false;
    m_google_product_category_isValid = false;

    m_gtin_isSet = false;
    m_gtin_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_identifier_exists_isSet = false;
    m_identifier_exists_isValid = false;

    m_image_link_isSet = false;
    m_image_link_isValid = false;

    m_installment_isSet = false;
    m_installment_isValid = false;

    m_is_bundle_isSet = false;
    m_is_bundle_isValid = false;

    m_item_group_id_isSet = false;
    m_item_group_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_loyalty_points_isSet = false;
    m_loyalty_points_isValid = false;

    m_material_isSet = false;
    m_material_isValid = false;

    m_max_energy_efficiency_class_isSet = false;
    m_max_energy_efficiency_class_isValid = false;

    m_max_handling_time_isSet = false;
    m_max_handling_time_isValid = false;

    m_min_energy_efficiency_class_isSet = false;
    m_min_energy_efficiency_class_isValid = false;

    m_min_handling_time_isSet = false;
    m_min_handling_time_isValid = false;

    m_mobile_link_isSet = false;
    m_mobile_link_isValid = false;

    m_mpn_isSet = false;
    m_mpn_isValid = false;

    m_multipack_isSet = false;
    m_multipack_isValid = false;

    m_offer_id_isSet = false;
    m_offer_id_isValid = false;

    m_online_only_isSet = false;
    m_online_only_isValid = false;

    m_pattern_isSet = false;
    m_pattern_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_product_type_isSet = false;
    m_product_type_isValid = false;

    m_promotion_ids_isSet = false;
    m_promotion_ids_isValid = false;

    m_sale_price_isSet = false;
    m_sale_price_isValid = false;

    m_sale_price_effective_date_isSet = false;
    m_sale_price_effective_date_isValid = false;

    m_sell_on_google_quantity_isSet = false;
    m_sell_on_google_quantity_isValid = false;

    m_shipping_isSet = false;
    m_shipping_isValid = false;

    m_shipping_height_isSet = false;
    m_shipping_height_isValid = false;

    m_shipping_label_isSet = false;
    m_shipping_label_isValid = false;

    m_shipping_length_isSet = false;
    m_shipping_length_isValid = false;

    m_shipping_weight_isSet = false;
    m_shipping_weight_isValid = false;

    m_shipping_width_isSet = false;
    m_shipping_width_isValid = false;

    m_size_system_isSet = false;
    m_size_system_isValid = false;

    m_size_type_isSet = false;
    m_size_type_isValid = false;

    m_sizes_isSet = false;
    m_sizes_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_target_country_isSet = false;
    m_target_country_isValid = false;

    m_taxes_isSet = false;
    m_taxes_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_unit_pricing_base_measure_isSet = false;
    m_unit_pricing_base_measure_isValid = false;

    m_unit_pricing_measure_isSet = false;
    m_unit_pricing_measure_isValid = false;

    m_validated_destinations_isSet = false;
    m_validated_destinations_isValid = false;

    m_warnings_isSet = false;
    m_warnings_isValid = false;
}

void OAIProduct::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProduct::fromJsonObject(QJsonObject json) {

    m_additional_image_links_isValid = ::OpenAPI::fromJsonValue(m_additional_image_links, json[QString("additionalImageLinks")]);
    m_additional_image_links_isSet = !json[QString("additionalImageLinks")].isNull() && m_additional_image_links_isValid;

    m_additional_product_types_isValid = ::OpenAPI::fromJsonValue(m_additional_product_types, json[QString("additionalProductTypes")]);
    m_additional_product_types_isSet = !json[QString("additionalProductTypes")].isNull() && m_additional_product_types_isValid;

    m_adult_isValid = ::OpenAPI::fromJsonValue(m_adult, json[QString("adult")]);
    m_adult_isSet = !json[QString("adult")].isNull() && m_adult_isValid;

    m_adwords_grouping_isValid = ::OpenAPI::fromJsonValue(m_adwords_grouping, json[QString("adwordsGrouping")]);
    m_adwords_grouping_isSet = !json[QString("adwordsGrouping")].isNull() && m_adwords_grouping_isValid;

    m_adwords_labels_isValid = ::OpenAPI::fromJsonValue(m_adwords_labels, json[QString("adwordsLabels")]);
    m_adwords_labels_isSet = !json[QString("adwordsLabels")].isNull() && m_adwords_labels_isValid;

    m_adwords_redirect_isValid = ::OpenAPI::fromJsonValue(m_adwords_redirect, json[QString("adwordsRedirect")]);
    m_adwords_redirect_isSet = !json[QString("adwordsRedirect")].isNull() && m_adwords_redirect_isValid;

    m_age_group_isValid = ::OpenAPI::fromJsonValue(m_age_group, json[QString("ageGroup")]);
    m_age_group_isSet = !json[QString("ageGroup")].isNull() && m_age_group_isValid;

    m_aspects_isValid = ::OpenAPI::fromJsonValue(m_aspects, json[QString("aspects")]);
    m_aspects_isSet = !json[QString("aspects")].isNull() && m_aspects_isValid;

    m_availability_isValid = ::OpenAPI::fromJsonValue(m_availability, json[QString("availability")]);
    m_availability_isSet = !json[QString("availability")].isNull() && m_availability_isValid;

    m_availability_date_isValid = ::OpenAPI::fromJsonValue(m_availability_date, json[QString("availabilityDate")]);
    m_availability_date_isSet = !json[QString("availabilityDate")].isNull() && m_availability_date_isValid;

    m_brand_isValid = ::OpenAPI::fromJsonValue(m_brand, json[QString("brand")]);
    m_brand_isSet = !json[QString("brand")].isNull() && m_brand_isValid;

    m_canonical_link_isValid = ::OpenAPI::fromJsonValue(m_canonical_link, json[QString("canonicalLink")]);
    m_canonical_link_isSet = !json[QString("canonicalLink")].isNull() && m_canonical_link_isValid;

    m_channel_isValid = ::OpenAPI::fromJsonValue(m_channel, json[QString("channel")]);
    m_channel_isSet = !json[QString("channel")].isNull() && m_channel_isValid;

    m_color_isValid = ::OpenAPI::fromJsonValue(m_color, json[QString("color")]);
    m_color_isSet = !json[QString("color")].isNull() && m_color_isValid;

    m_condition_isValid = ::OpenAPI::fromJsonValue(m_condition, json[QString("condition")]);
    m_condition_isSet = !json[QString("condition")].isNull() && m_condition_isValid;

    m_content_language_isValid = ::OpenAPI::fromJsonValue(m_content_language, json[QString("contentLanguage")]);
    m_content_language_isSet = !json[QString("contentLanguage")].isNull() && m_content_language_isValid;

    m_cost_of_goods_sold_isValid = ::OpenAPI::fromJsonValue(m_cost_of_goods_sold, json[QString("costOfGoodsSold")]);
    m_cost_of_goods_sold_isSet = !json[QString("costOfGoodsSold")].isNull() && m_cost_of_goods_sold_isValid;

    m_custom_attributes_isValid = ::OpenAPI::fromJsonValue(m_custom_attributes, json[QString("customAttributes")]);
    m_custom_attributes_isSet = !json[QString("customAttributes")].isNull() && m_custom_attributes_isValid;

    m_custom_groups_isValid = ::OpenAPI::fromJsonValue(m_custom_groups, json[QString("customGroups")]);
    m_custom_groups_isSet = !json[QString("customGroups")].isNull() && m_custom_groups_isValid;

    m_custom_label0_isValid = ::OpenAPI::fromJsonValue(m_custom_label0, json[QString("customLabel0")]);
    m_custom_label0_isSet = !json[QString("customLabel0")].isNull() && m_custom_label0_isValid;

    m_custom_label1_isValid = ::OpenAPI::fromJsonValue(m_custom_label1, json[QString("customLabel1")]);
    m_custom_label1_isSet = !json[QString("customLabel1")].isNull() && m_custom_label1_isValid;

    m_custom_label2_isValid = ::OpenAPI::fromJsonValue(m_custom_label2, json[QString("customLabel2")]);
    m_custom_label2_isSet = !json[QString("customLabel2")].isNull() && m_custom_label2_isValid;

    m_custom_label3_isValid = ::OpenAPI::fromJsonValue(m_custom_label3, json[QString("customLabel3")]);
    m_custom_label3_isSet = !json[QString("customLabel3")].isNull() && m_custom_label3_isValid;

    m_custom_label4_isValid = ::OpenAPI::fromJsonValue(m_custom_label4, json[QString("customLabel4")]);
    m_custom_label4_isSet = !json[QString("customLabel4")].isNull() && m_custom_label4_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_destinations_isValid = ::OpenAPI::fromJsonValue(m_destinations, json[QString("destinations")]);
    m_destinations_isSet = !json[QString("destinations")].isNull() && m_destinations_isValid;

    m_display_ads_id_isValid = ::OpenAPI::fromJsonValue(m_display_ads_id, json[QString("displayAdsId")]);
    m_display_ads_id_isSet = !json[QString("displayAdsId")].isNull() && m_display_ads_id_isValid;

    m_display_ads_link_isValid = ::OpenAPI::fromJsonValue(m_display_ads_link, json[QString("displayAdsLink")]);
    m_display_ads_link_isSet = !json[QString("displayAdsLink")].isNull() && m_display_ads_link_isValid;

    m_display_ads_similar_ids_isValid = ::OpenAPI::fromJsonValue(m_display_ads_similar_ids, json[QString("displayAdsSimilarIds")]);
    m_display_ads_similar_ids_isSet = !json[QString("displayAdsSimilarIds")].isNull() && m_display_ads_similar_ids_isValid;

    m_display_ads_title_isValid = ::OpenAPI::fromJsonValue(m_display_ads_title, json[QString("displayAdsTitle")]);
    m_display_ads_title_isSet = !json[QString("displayAdsTitle")].isNull() && m_display_ads_title_isValid;

    m_display_ads_value_isValid = ::OpenAPI::fromJsonValue(m_display_ads_value, json[QString("displayAdsValue")]);
    m_display_ads_value_isSet = !json[QString("displayAdsValue")].isNull() && m_display_ads_value_isValid;

    m_energy_efficiency_class_isValid = ::OpenAPI::fromJsonValue(m_energy_efficiency_class, json[QString("energyEfficiencyClass")]);
    m_energy_efficiency_class_isSet = !json[QString("energyEfficiencyClass")].isNull() && m_energy_efficiency_class_isValid;

    m_expiration_date_isValid = ::OpenAPI::fromJsonValue(m_expiration_date, json[QString("expirationDate")]);
    m_expiration_date_isSet = !json[QString("expirationDate")].isNull() && m_expiration_date_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_google_product_category_isValid = ::OpenAPI::fromJsonValue(m_google_product_category, json[QString("googleProductCategory")]);
    m_google_product_category_isSet = !json[QString("googleProductCategory")].isNull() && m_google_product_category_isValid;

    m_gtin_isValid = ::OpenAPI::fromJsonValue(m_gtin, json[QString("gtin")]);
    m_gtin_isSet = !json[QString("gtin")].isNull() && m_gtin_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_identifier_exists_isValid = ::OpenAPI::fromJsonValue(m_identifier_exists, json[QString("identifierExists")]);
    m_identifier_exists_isSet = !json[QString("identifierExists")].isNull() && m_identifier_exists_isValid;

    m_image_link_isValid = ::OpenAPI::fromJsonValue(m_image_link, json[QString("imageLink")]);
    m_image_link_isSet = !json[QString("imageLink")].isNull() && m_image_link_isValid;

    m_installment_isValid = ::OpenAPI::fromJsonValue(m_installment, json[QString("installment")]);
    m_installment_isSet = !json[QString("installment")].isNull() && m_installment_isValid;

    m_is_bundle_isValid = ::OpenAPI::fromJsonValue(m_is_bundle, json[QString("isBundle")]);
    m_is_bundle_isSet = !json[QString("isBundle")].isNull() && m_is_bundle_isValid;

    m_item_group_id_isValid = ::OpenAPI::fromJsonValue(m_item_group_id, json[QString("itemGroupId")]);
    m_item_group_id_isSet = !json[QString("itemGroupId")].isNull() && m_item_group_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_loyalty_points_isValid = ::OpenAPI::fromJsonValue(m_loyalty_points, json[QString("loyaltyPoints")]);
    m_loyalty_points_isSet = !json[QString("loyaltyPoints")].isNull() && m_loyalty_points_isValid;

    m_material_isValid = ::OpenAPI::fromJsonValue(m_material, json[QString("material")]);
    m_material_isSet = !json[QString("material")].isNull() && m_material_isValid;

    m_max_energy_efficiency_class_isValid = ::OpenAPI::fromJsonValue(m_max_energy_efficiency_class, json[QString("maxEnergyEfficiencyClass")]);
    m_max_energy_efficiency_class_isSet = !json[QString("maxEnergyEfficiencyClass")].isNull() && m_max_energy_efficiency_class_isValid;

    m_max_handling_time_isValid = ::OpenAPI::fromJsonValue(m_max_handling_time, json[QString("maxHandlingTime")]);
    m_max_handling_time_isSet = !json[QString("maxHandlingTime")].isNull() && m_max_handling_time_isValid;

    m_min_energy_efficiency_class_isValid = ::OpenAPI::fromJsonValue(m_min_energy_efficiency_class, json[QString("minEnergyEfficiencyClass")]);
    m_min_energy_efficiency_class_isSet = !json[QString("minEnergyEfficiencyClass")].isNull() && m_min_energy_efficiency_class_isValid;

    m_min_handling_time_isValid = ::OpenAPI::fromJsonValue(m_min_handling_time, json[QString("minHandlingTime")]);
    m_min_handling_time_isSet = !json[QString("minHandlingTime")].isNull() && m_min_handling_time_isValid;

    m_mobile_link_isValid = ::OpenAPI::fromJsonValue(m_mobile_link, json[QString("mobileLink")]);
    m_mobile_link_isSet = !json[QString("mobileLink")].isNull() && m_mobile_link_isValid;

    m_mpn_isValid = ::OpenAPI::fromJsonValue(m_mpn, json[QString("mpn")]);
    m_mpn_isSet = !json[QString("mpn")].isNull() && m_mpn_isValid;

    m_multipack_isValid = ::OpenAPI::fromJsonValue(m_multipack, json[QString("multipack")]);
    m_multipack_isSet = !json[QString("multipack")].isNull() && m_multipack_isValid;

    m_offer_id_isValid = ::OpenAPI::fromJsonValue(m_offer_id, json[QString("offerId")]);
    m_offer_id_isSet = !json[QString("offerId")].isNull() && m_offer_id_isValid;

    m_online_only_isValid = ::OpenAPI::fromJsonValue(m_online_only, json[QString("onlineOnly")]);
    m_online_only_isSet = !json[QString("onlineOnly")].isNull() && m_online_only_isValid;

    m_pattern_isValid = ::OpenAPI::fromJsonValue(m_pattern, json[QString("pattern")]);
    m_pattern_isSet = !json[QString("pattern")].isNull() && m_pattern_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_product_type_isValid = ::OpenAPI::fromJsonValue(m_product_type, json[QString("productType")]);
    m_product_type_isSet = !json[QString("productType")].isNull() && m_product_type_isValid;

    m_promotion_ids_isValid = ::OpenAPI::fromJsonValue(m_promotion_ids, json[QString("promotionIds")]);
    m_promotion_ids_isSet = !json[QString("promotionIds")].isNull() && m_promotion_ids_isValid;

    m_sale_price_isValid = ::OpenAPI::fromJsonValue(m_sale_price, json[QString("salePrice")]);
    m_sale_price_isSet = !json[QString("salePrice")].isNull() && m_sale_price_isValid;

    m_sale_price_effective_date_isValid = ::OpenAPI::fromJsonValue(m_sale_price_effective_date, json[QString("salePriceEffectiveDate")]);
    m_sale_price_effective_date_isSet = !json[QString("salePriceEffectiveDate")].isNull() && m_sale_price_effective_date_isValid;

    m_sell_on_google_quantity_isValid = ::OpenAPI::fromJsonValue(m_sell_on_google_quantity, json[QString("sellOnGoogleQuantity")]);
    m_sell_on_google_quantity_isSet = !json[QString("sellOnGoogleQuantity")].isNull() && m_sell_on_google_quantity_isValid;

    m_shipping_isValid = ::OpenAPI::fromJsonValue(m_shipping, json[QString("shipping")]);
    m_shipping_isSet = !json[QString("shipping")].isNull() && m_shipping_isValid;

    m_shipping_height_isValid = ::OpenAPI::fromJsonValue(m_shipping_height, json[QString("shippingHeight")]);
    m_shipping_height_isSet = !json[QString("shippingHeight")].isNull() && m_shipping_height_isValid;

    m_shipping_label_isValid = ::OpenAPI::fromJsonValue(m_shipping_label, json[QString("shippingLabel")]);
    m_shipping_label_isSet = !json[QString("shippingLabel")].isNull() && m_shipping_label_isValid;

    m_shipping_length_isValid = ::OpenAPI::fromJsonValue(m_shipping_length, json[QString("shippingLength")]);
    m_shipping_length_isSet = !json[QString("shippingLength")].isNull() && m_shipping_length_isValid;

    m_shipping_weight_isValid = ::OpenAPI::fromJsonValue(m_shipping_weight, json[QString("shippingWeight")]);
    m_shipping_weight_isSet = !json[QString("shippingWeight")].isNull() && m_shipping_weight_isValid;

    m_shipping_width_isValid = ::OpenAPI::fromJsonValue(m_shipping_width, json[QString("shippingWidth")]);
    m_shipping_width_isSet = !json[QString("shippingWidth")].isNull() && m_shipping_width_isValid;

    m_size_system_isValid = ::OpenAPI::fromJsonValue(m_size_system, json[QString("sizeSystem")]);
    m_size_system_isSet = !json[QString("sizeSystem")].isNull() && m_size_system_isValid;

    m_size_type_isValid = ::OpenAPI::fromJsonValue(m_size_type, json[QString("sizeType")]);
    m_size_type_isSet = !json[QString("sizeType")].isNull() && m_size_type_isValid;

    m_sizes_isValid = ::OpenAPI::fromJsonValue(m_sizes, json[QString("sizes")]);
    m_sizes_isSet = !json[QString("sizes")].isNull() && m_sizes_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_target_country_isValid = ::OpenAPI::fromJsonValue(m_target_country, json[QString("targetCountry")]);
    m_target_country_isSet = !json[QString("targetCountry")].isNull() && m_target_country_isValid;

    m_taxes_isValid = ::OpenAPI::fromJsonValue(m_taxes, json[QString("taxes")]);
    m_taxes_isSet = !json[QString("taxes")].isNull() && m_taxes_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_unit_pricing_base_measure_isValid = ::OpenAPI::fromJsonValue(m_unit_pricing_base_measure, json[QString("unitPricingBaseMeasure")]);
    m_unit_pricing_base_measure_isSet = !json[QString("unitPricingBaseMeasure")].isNull() && m_unit_pricing_base_measure_isValid;

    m_unit_pricing_measure_isValid = ::OpenAPI::fromJsonValue(m_unit_pricing_measure, json[QString("unitPricingMeasure")]);
    m_unit_pricing_measure_isSet = !json[QString("unitPricingMeasure")].isNull() && m_unit_pricing_measure_isValid;

    m_validated_destinations_isValid = ::OpenAPI::fromJsonValue(m_validated_destinations, json[QString("validatedDestinations")]);
    m_validated_destinations_isSet = !json[QString("validatedDestinations")].isNull() && m_validated_destinations_isValid;

    m_warnings_isValid = ::OpenAPI::fromJsonValue(m_warnings, json[QString("warnings")]);
    m_warnings_isSet = !json[QString("warnings")].isNull() && m_warnings_isValid;
}

QString OAIProduct::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProduct::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_image_links.size() > 0) {
        obj.insert(QString("additionalImageLinks"), ::OpenAPI::toJsonValue(m_additional_image_links));
    }
    if (m_additional_product_types.size() > 0) {
        obj.insert(QString("additionalProductTypes"), ::OpenAPI::toJsonValue(m_additional_product_types));
    }
    if (m_adult_isSet) {
        obj.insert(QString("adult"), ::OpenAPI::toJsonValue(m_adult));
    }
    if (m_adwords_grouping_isSet) {
        obj.insert(QString("adwordsGrouping"), ::OpenAPI::toJsonValue(m_adwords_grouping));
    }
    if (m_adwords_labels.size() > 0) {
        obj.insert(QString("adwordsLabels"), ::OpenAPI::toJsonValue(m_adwords_labels));
    }
    if (m_adwords_redirect_isSet) {
        obj.insert(QString("adwordsRedirect"), ::OpenAPI::toJsonValue(m_adwords_redirect));
    }
    if (m_age_group_isSet) {
        obj.insert(QString("ageGroup"), ::OpenAPI::toJsonValue(m_age_group));
    }
    if (m_aspects.size() > 0) {
        obj.insert(QString("aspects"), ::OpenAPI::toJsonValue(m_aspects));
    }
    if (m_availability_isSet) {
        obj.insert(QString("availability"), ::OpenAPI::toJsonValue(m_availability));
    }
    if (m_availability_date_isSet) {
        obj.insert(QString("availabilityDate"), ::OpenAPI::toJsonValue(m_availability_date));
    }
    if (m_brand_isSet) {
        obj.insert(QString("brand"), ::OpenAPI::toJsonValue(m_brand));
    }
    if (m_canonical_link_isSet) {
        obj.insert(QString("canonicalLink"), ::OpenAPI::toJsonValue(m_canonical_link));
    }
    if (m_channel_isSet) {
        obj.insert(QString("channel"), ::OpenAPI::toJsonValue(m_channel));
    }
    if (m_color_isSet) {
        obj.insert(QString("color"), ::OpenAPI::toJsonValue(m_color));
    }
    if (m_condition_isSet) {
        obj.insert(QString("condition"), ::OpenAPI::toJsonValue(m_condition));
    }
    if (m_content_language_isSet) {
        obj.insert(QString("contentLanguage"), ::OpenAPI::toJsonValue(m_content_language));
    }
    if (m_cost_of_goods_sold.isSet()) {
        obj.insert(QString("costOfGoodsSold"), ::OpenAPI::toJsonValue(m_cost_of_goods_sold));
    }
    if (m_custom_attributes.size() > 0) {
        obj.insert(QString("customAttributes"), ::OpenAPI::toJsonValue(m_custom_attributes));
    }
    if (m_custom_groups.size() > 0) {
        obj.insert(QString("customGroups"), ::OpenAPI::toJsonValue(m_custom_groups));
    }
    if (m_custom_label0_isSet) {
        obj.insert(QString("customLabel0"), ::OpenAPI::toJsonValue(m_custom_label0));
    }
    if (m_custom_label1_isSet) {
        obj.insert(QString("customLabel1"), ::OpenAPI::toJsonValue(m_custom_label1));
    }
    if (m_custom_label2_isSet) {
        obj.insert(QString("customLabel2"), ::OpenAPI::toJsonValue(m_custom_label2));
    }
    if (m_custom_label3_isSet) {
        obj.insert(QString("customLabel3"), ::OpenAPI::toJsonValue(m_custom_label3));
    }
    if (m_custom_label4_isSet) {
        obj.insert(QString("customLabel4"), ::OpenAPI::toJsonValue(m_custom_label4));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_destinations.size() > 0) {
        obj.insert(QString("destinations"), ::OpenAPI::toJsonValue(m_destinations));
    }
    if (m_display_ads_id_isSet) {
        obj.insert(QString("displayAdsId"), ::OpenAPI::toJsonValue(m_display_ads_id));
    }
    if (m_display_ads_link_isSet) {
        obj.insert(QString("displayAdsLink"), ::OpenAPI::toJsonValue(m_display_ads_link));
    }
    if (m_display_ads_similar_ids.size() > 0) {
        obj.insert(QString("displayAdsSimilarIds"), ::OpenAPI::toJsonValue(m_display_ads_similar_ids));
    }
    if (m_display_ads_title_isSet) {
        obj.insert(QString("displayAdsTitle"), ::OpenAPI::toJsonValue(m_display_ads_title));
    }
    if (m_display_ads_value_isSet) {
        obj.insert(QString("displayAdsValue"), ::OpenAPI::toJsonValue(m_display_ads_value));
    }
    if (m_energy_efficiency_class_isSet) {
        obj.insert(QString("energyEfficiencyClass"), ::OpenAPI::toJsonValue(m_energy_efficiency_class));
    }
    if (m_expiration_date_isSet) {
        obj.insert(QString("expirationDate"), ::OpenAPI::toJsonValue(m_expiration_date));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_google_product_category_isSet) {
        obj.insert(QString("googleProductCategory"), ::OpenAPI::toJsonValue(m_google_product_category));
    }
    if (m_gtin_isSet) {
        obj.insert(QString("gtin"), ::OpenAPI::toJsonValue(m_gtin));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_identifier_exists_isSet) {
        obj.insert(QString("identifierExists"), ::OpenAPI::toJsonValue(m_identifier_exists));
    }
    if (m_image_link_isSet) {
        obj.insert(QString("imageLink"), ::OpenAPI::toJsonValue(m_image_link));
    }
    if (m_installment.isSet()) {
        obj.insert(QString("installment"), ::OpenAPI::toJsonValue(m_installment));
    }
    if (m_is_bundle_isSet) {
        obj.insert(QString("isBundle"), ::OpenAPI::toJsonValue(m_is_bundle));
    }
    if (m_item_group_id_isSet) {
        obj.insert(QString("itemGroupId"), ::OpenAPI::toJsonValue(m_item_group_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_loyalty_points.isSet()) {
        obj.insert(QString("loyaltyPoints"), ::OpenAPI::toJsonValue(m_loyalty_points));
    }
    if (m_material_isSet) {
        obj.insert(QString("material"), ::OpenAPI::toJsonValue(m_material));
    }
    if (m_max_energy_efficiency_class_isSet) {
        obj.insert(QString("maxEnergyEfficiencyClass"), ::OpenAPI::toJsonValue(m_max_energy_efficiency_class));
    }
    if (m_max_handling_time_isSet) {
        obj.insert(QString("maxHandlingTime"), ::OpenAPI::toJsonValue(m_max_handling_time));
    }
    if (m_min_energy_efficiency_class_isSet) {
        obj.insert(QString("minEnergyEfficiencyClass"), ::OpenAPI::toJsonValue(m_min_energy_efficiency_class));
    }
    if (m_min_handling_time_isSet) {
        obj.insert(QString("minHandlingTime"), ::OpenAPI::toJsonValue(m_min_handling_time));
    }
    if (m_mobile_link_isSet) {
        obj.insert(QString("mobileLink"), ::OpenAPI::toJsonValue(m_mobile_link));
    }
    if (m_mpn_isSet) {
        obj.insert(QString("mpn"), ::OpenAPI::toJsonValue(m_mpn));
    }
    if (m_multipack_isSet) {
        obj.insert(QString("multipack"), ::OpenAPI::toJsonValue(m_multipack));
    }
    if (m_offer_id_isSet) {
        obj.insert(QString("offerId"), ::OpenAPI::toJsonValue(m_offer_id));
    }
    if (m_online_only_isSet) {
        obj.insert(QString("onlineOnly"), ::OpenAPI::toJsonValue(m_online_only));
    }
    if (m_pattern_isSet) {
        obj.insert(QString("pattern"), ::OpenAPI::toJsonValue(m_pattern));
    }
    if (m_price.isSet()) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_product_type_isSet) {
        obj.insert(QString("productType"), ::OpenAPI::toJsonValue(m_product_type));
    }
    if (m_promotion_ids.size() > 0) {
        obj.insert(QString("promotionIds"), ::OpenAPI::toJsonValue(m_promotion_ids));
    }
    if (m_sale_price.isSet()) {
        obj.insert(QString("salePrice"), ::OpenAPI::toJsonValue(m_sale_price));
    }
    if (m_sale_price_effective_date_isSet) {
        obj.insert(QString("salePriceEffectiveDate"), ::OpenAPI::toJsonValue(m_sale_price_effective_date));
    }
    if (m_sell_on_google_quantity_isSet) {
        obj.insert(QString("sellOnGoogleQuantity"), ::OpenAPI::toJsonValue(m_sell_on_google_quantity));
    }
    if (m_shipping.size() > 0) {
        obj.insert(QString("shipping"), ::OpenAPI::toJsonValue(m_shipping));
    }
    if (m_shipping_height.isSet()) {
        obj.insert(QString("shippingHeight"), ::OpenAPI::toJsonValue(m_shipping_height));
    }
    if (m_shipping_label_isSet) {
        obj.insert(QString("shippingLabel"), ::OpenAPI::toJsonValue(m_shipping_label));
    }
    if (m_shipping_length.isSet()) {
        obj.insert(QString("shippingLength"), ::OpenAPI::toJsonValue(m_shipping_length));
    }
    if (m_shipping_weight.isSet()) {
        obj.insert(QString("shippingWeight"), ::OpenAPI::toJsonValue(m_shipping_weight));
    }
    if (m_shipping_width.isSet()) {
        obj.insert(QString("shippingWidth"), ::OpenAPI::toJsonValue(m_shipping_width));
    }
    if (m_size_system_isSet) {
        obj.insert(QString("sizeSystem"), ::OpenAPI::toJsonValue(m_size_system));
    }
    if (m_size_type_isSet) {
        obj.insert(QString("sizeType"), ::OpenAPI::toJsonValue(m_size_type));
    }
    if (m_sizes.size() > 0) {
        obj.insert(QString("sizes"), ::OpenAPI::toJsonValue(m_sizes));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_target_country_isSet) {
        obj.insert(QString("targetCountry"), ::OpenAPI::toJsonValue(m_target_country));
    }
    if (m_taxes.size() > 0) {
        obj.insert(QString("taxes"), ::OpenAPI::toJsonValue(m_taxes));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_unit_pricing_base_measure.isSet()) {
        obj.insert(QString("unitPricingBaseMeasure"), ::OpenAPI::toJsonValue(m_unit_pricing_base_measure));
    }
    if (m_unit_pricing_measure.isSet()) {
        obj.insert(QString("unitPricingMeasure"), ::OpenAPI::toJsonValue(m_unit_pricing_measure));
    }
    if (m_validated_destinations.size() > 0) {
        obj.insert(QString("validatedDestinations"), ::OpenAPI::toJsonValue(m_validated_destinations));
    }
    if (m_warnings.size() > 0) {
        obj.insert(QString("warnings"), ::OpenAPI::toJsonValue(m_warnings));
    }
    return obj;
}

QList<QString> OAIProduct::getAdditionalImageLinks() const {
    return m_additional_image_links;
}
void OAIProduct::setAdditionalImageLinks(const QList<QString> &additional_image_links) {
    m_additional_image_links = additional_image_links;
    m_additional_image_links_isSet = true;
}

bool OAIProduct::is_additional_image_links_Set() const{
    return m_additional_image_links_isSet;
}

bool OAIProduct::is_additional_image_links_Valid() const{
    return m_additional_image_links_isValid;
}

QList<QString> OAIProduct::getAdditionalProductTypes() const {
    return m_additional_product_types;
}
void OAIProduct::setAdditionalProductTypes(const QList<QString> &additional_product_types) {
    m_additional_product_types = additional_product_types;
    m_additional_product_types_isSet = true;
}

bool OAIProduct::is_additional_product_types_Set() const{
    return m_additional_product_types_isSet;
}

bool OAIProduct::is_additional_product_types_Valid() const{
    return m_additional_product_types_isValid;
}

bool OAIProduct::isAdult() const {
    return m_adult;
}
void OAIProduct::setAdult(const bool &adult) {
    m_adult = adult;
    m_adult_isSet = true;
}

bool OAIProduct::is_adult_Set() const{
    return m_adult_isSet;
}

bool OAIProduct::is_adult_Valid() const{
    return m_adult_isValid;
}

QString OAIProduct::getAdwordsGrouping() const {
    return m_adwords_grouping;
}
void OAIProduct::setAdwordsGrouping(const QString &adwords_grouping) {
    m_adwords_grouping = adwords_grouping;
    m_adwords_grouping_isSet = true;
}

bool OAIProduct::is_adwords_grouping_Set() const{
    return m_adwords_grouping_isSet;
}

bool OAIProduct::is_adwords_grouping_Valid() const{
    return m_adwords_grouping_isValid;
}

QList<QString> OAIProduct::getAdwordsLabels() const {
    return m_adwords_labels;
}
void OAIProduct::setAdwordsLabels(const QList<QString> &adwords_labels) {
    m_adwords_labels = adwords_labels;
    m_adwords_labels_isSet = true;
}

bool OAIProduct::is_adwords_labels_Set() const{
    return m_adwords_labels_isSet;
}

bool OAIProduct::is_adwords_labels_Valid() const{
    return m_adwords_labels_isValid;
}

QString OAIProduct::getAdwordsRedirect() const {
    return m_adwords_redirect;
}
void OAIProduct::setAdwordsRedirect(const QString &adwords_redirect) {
    m_adwords_redirect = adwords_redirect;
    m_adwords_redirect_isSet = true;
}

bool OAIProduct::is_adwords_redirect_Set() const{
    return m_adwords_redirect_isSet;
}

bool OAIProduct::is_adwords_redirect_Valid() const{
    return m_adwords_redirect_isValid;
}

QString OAIProduct::getAgeGroup() const {
    return m_age_group;
}
void OAIProduct::setAgeGroup(const QString &age_group) {
    m_age_group = age_group;
    m_age_group_isSet = true;
}

bool OAIProduct::is_age_group_Set() const{
    return m_age_group_isSet;
}

bool OAIProduct::is_age_group_Valid() const{
    return m_age_group_isValid;
}

QList<OAIProductAspect> OAIProduct::getAspects() const {
    return m_aspects;
}
void OAIProduct::setAspects(const QList<OAIProductAspect> &aspects) {
    m_aspects = aspects;
    m_aspects_isSet = true;
}

bool OAIProduct::is_aspects_Set() const{
    return m_aspects_isSet;
}

bool OAIProduct::is_aspects_Valid() const{
    return m_aspects_isValid;
}

QString OAIProduct::getAvailability() const {
    return m_availability;
}
void OAIProduct::setAvailability(const QString &availability) {
    m_availability = availability;
    m_availability_isSet = true;
}

bool OAIProduct::is_availability_Set() const{
    return m_availability_isSet;
}

bool OAIProduct::is_availability_Valid() const{
    return m_availability_isValid;
}

QString OAIProduct::getAvailabilityDate() const {
    return m_availability_date;
}
void OAIProduct::setAvailabilityDate(const QString &availability_date) {
    m_availability_date = availability_date;
    m_availability_date_isSet = true;
}

bool OAIProduct::is_availability_date_Set() const{
    return m_availability_date_isSet;
}

bool OAIProduct::is_availability_date_Valid() const{
    return m_availability_date_isValid;
}

QString OAIProduct::getBrand() const {
    return m_brand;
}
void OAIProduct::setBrand(const QString &brand) {
    m_brand = brand;
    m_brand_isSet = true;
}

bool OAIProduct::is_brand_Set() const{
    return m_brand_isSet;
}

bool OAIProduct::is_brand_Valid() const{
    return m_brand_isValid;
}

QString OAIProduct::getCanonicalLink() const {
    return m_canonical_link;
}
void OAIProduct::setCanonicalLink(const QString &canonical_link) {
    m_canonical_link = canonical_link;
    m_canonical_link_isSet = true;
}

bool OAIProduct::is_canonical_link_Set() const{
    return m_canonical_link_isSet;
}

bool OAIProduct::is_canonical_link_Valid() const{
    return m_canonical_link_isValid;
}

QString OAIProduct::getChannel() const {
    return m_channel;
}
void OAIProduct::setChannel(const QString &channel) {
    m_channel = channel;
    m_channel_isSet = true;
}

bool OAIProduct::is_channel_Set() const{
    return m_channel_isSet;
}

bool OAIProduct::is_channel_Valid() const{
    return m_channel_isValid;
}

QString OAIProduct::getColor() const {
    return m_color;
}
void OAIProduct::setColor(const QString &color) {
    m_color = color;
    m_color_isSet = true;
}

bool OAIProduct::is_color_Set() const{
    return m_color_isSet;
}

bool OAIProduct::is_color_Valid() const{
    return m_color_isValid;
}

QString OAIProduct::getCondition() const {
    return m_condition;
}
void OAIProduct::setCondition(const QString &condition) {
    m_condition = condition;
    m_condition_isSet = true;
}

bool OAIProduct::is_condition_Set() const{
    return m_condition_isSet;
}

bool OAIProduct::is_condition_Valid() const{
    return m_condition_isValid;
}

QString OAIProduct::getContentLanguage() const {
    return m_content_language;
}
void OAIProduct::setContentLanguage(const QString &content_language) {
    m_content_language = content_language;
    m_content_language_isSet = true;
}

bool OAIProduct::is_content_language_Set() const{
    return m_content_language_isSet;
}

bool OAIProduct::is_content_language_Valid() const{
    return m_content_language_isValid;
}

OAIPrice OAIProduct::getCostOfGoodsSold() const {
    return m_cost_of_goods_sold;
}
void OAIProduct::setCostOfGoodsSold(const OAIPrice &cost_of_goods_sold) {
    m_cost_of_goods_sold = cost_of_goods_sold;
    m_cost_of_goods_sold_isSet = true;
}

bool OAIProduct::is_cost_of_goods_sold_Set() const{
    return m_cost_of_goods_sold_isSet;
}

bool OAIProduct::is_cost_of_goods_sold_Valid() const{
    return m_cost_of_goods_sold_isValid;
}

QList<OAICustomAttribute> OAIProduct::getCustomAttributes() const {
    return m_custom_attributes;
}
void OAIProduct::setCustomAttributes(const QList<OAICustomAttribute> &custom_attributes) {
    m_custom_attributes = custom_attributes;
    m_custom_attributes_isSet = true;
}

bool OAIProduct::is_custom_attributes_Set() const{
    return m_custom_attributes_isSet;
}

bool OAIProduct::is_custom_attributes_Valid() const{
    return m_custom_attributes_isValid;
}

QList<OAICustomGroup> OAIProduct::getCustomGroups() const {
    return m_custom_groups;
}
void OAIProduct::setCustomGroups(const QList<OAICustomGroup> &custom_groups) {
    m_custom_groups = custom_groups;
    m_custom_groups_isSet = true;
}

bool OAIProduct::is_custom_groups_Set() const{
    return m_custom_groups_isSet;
}

bool OAIProduct::is_custom_groups_Valid() const{
    return m_custom_groups_isValid;
}

QString OAIProduct::getCustomLabel0() const {
    return m_custom_label0;
}
void OAIProduct::setCustomLabel0(const QString &custom_label0) {
    m_custom_label0 = custom_label0;
    m_custom_label0_isSet = true;
}

bool OAIProduct::is_custom_label0_Set() const{
    return m_custom_label0_isSet;
}

bool OAIProduct::is_custom_label0_Valid() const{
    return m_custom_label0_isValid;
}

QString OAIProduct::getCustomLabel1() const {
    return m_custom_label1;
}
void OAIProduct::setCustomLabel1(const QString &custom_label1) {
    m_custom_label1 = custom_label1;
    m_custom_label1_isSet = true;
}

bool OAIProduct::is_custom_label1_Set() const{
    return m_custom_label1_isSet;
}

bool OAIProduct::is_custom_label1_Valid() const{
    return m_custom_label1_isValid;
}

QString OAIProduct::getCustomLabel2() const {
    return m_custom_label2;
}
void OAIProduct::setCustomLabel2(const QString &custom_label2) {
    m_custom_label2 = custom_label2;
    m_custom_label2_isSet = true;
}

bool OAIProduct::is_custom_label2_Set() const{
    return m_custom_label2_isSet;
}

bool OAIProduct::is_custom_label2_Valid() const{
    return m_custom_label2_isValid;
}

QString OAIProduct::getCustomLabel3() const {
    return m_custom_label3;
}
void OAIProduct::setCustomLabel3(const QString &custom_label3) {
    m_custom_label3 = custom_label3;
    m_custom_label3_isSet = true;
}

bool OAIProduct::is_custom_label3_Set() const{
    return m_custom_label3_isSet;
}

bool OAIProduct::is_custom_label3_Valid() const{
    return m_custom_label3_isValid;
}

QString OAIProduct::getCustomLabel4() const {
    return m_custom_label4;
}
void OAIProduct::setCustomLabel4(const QString &custom_label4) {
    m_custom_label4 = custom_label4;
    m_custom_label4_isSet = true;
}

bool OAIProduct::is_custom_label4_Set() const{
    return m_custom_label4_isSet;
}

bool OAIProduct::is_custom_label4_Valid() const{
    return m_custom_label4_isValid;
}

QString OAIProduct::getDescription() const {
    return m_description;
}
void OAIProduct::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIProduct::is_description_Set() const{
    return m_description_isSet;
}

bool OAIProduct::is_description_Valid() const{
    return m_description_isValid;
}

QList<OAIProductDestination> OAIProduct::getDestinations() const {
    return m_destinations;
}
void OAIProduct::setDestinations(const QList<OAIProductDestination> &destinations) {
    m_destinations = destinations;
    m_destinations_isSet = true;
}

bool OAIProduct::is_destinations_Set() const{
    return m_destinations_isSet;
}

bool OAIProduct::is_destinations_Valid() const{
    return m_destinations_isValid;
}

QString OAIProduct::getDisplayAdsId() const {
    return m_display_ads_id;
}
void OAIProduct::setDisplayAdsId(const QString &display_ads_id) {
    m_display_ads_id = display_ads_id;
    m_display_ads_id_isSet = true;
}

bool OAIProduct::is_display_ads_id_Set() const{
    return m_display_ads_id_isSet;
}

bool OAIProduct::is_display_ads_id_Valid() const{
    return m_display_ads_id_isValid;
}

QString OAIProduct::getDisplayAdsLink() const {
    return m_display_ads_link;
}
void OAIProduct::setDisplayAdsLink(const QString &display_ads_link) {
    m_display_ads_link = display_ads_link;
    m_display_ads_link_isSet = true;
}

bool OAIProduct::is_display_ads_link_Set() const{
    return m_display_ads_link_isSet;
}

bool OAIProduct::is_display_ads_link_Valid() const{
    return m_display_ads_link_isValid;
}

QList<QString> OAIProduct::getDisplayAdsSimilarIds() const {
    return m_display_ads_similar_ids;
}
void OAIProduct::setDisplayAdsSimilarIds(const QList<QString> &display_ads_similar_ids) {
    m_display_ads_similar_ids = display_ads_similar_ids;
    m_display_ads_similar_ids_isSet = true;
}

bool OAIProduct::is_display_ads_similar_ids_Set() const{
    return m_display_ads_similar_ids_isSet;
}

bool OAIProduct::is_display_ads_similar_ids_Valid() const{
    return m_display_ads_similar_ids_isValid;
}

QString OAIProduct::getDisplayAdsTitle() const {
    return m_display_ads_title;
}
void OAIProduct::setDisplayAdsTitle(const QString &display_ads_title) {
    m_display_ads_title = display_ads_title;
    m_display_ads_title_isSet = true;
}

bool OAIProduct::is_display_ads_title_Set() const{
    return m_display_ads_title_isSet;
}

bool OAIProduct::is_display_ads_title_Valid() const{
    return m_display_ads_title_isValid;
}

double OAIProduct::getDisplayAdsValue() const {
    return m_display_ads_value;
}
void OAIProduct::setDisplayAdsValue(const double &display_ads_value) {
    m_display_ads_value = display_ads_value;
    m_display_ads_value_isSet = true;
}

bool OAIProduct::is_display_ads_value_Set() const{
    return m_display_ads_value_isSet;
}

bool OAIProduct::is_display_ads_value_Valid() const{
    return m_display_ads_value_isValid;
}

QString OAIProduct::getEnergyEfficiencyClass() const {
    return m_energy_efficiency_class;
}
void OAIProduct::setEnergyEfficiencyClass(const QString &energy_efficiency_class) {
    m_energy_efficiency_class = energy_efficiency_class;
    m_energy_efficiency_class_isSet = true;
}

bool OAIProduct::is_energy_efficiency_class_Set() const{
    return m_energy_efficiency_class_isSet;
}

bool OAIProduct::is_energy_efficiency_class_Valid() const{
    return m_energy_efficiency_class_isValid;
}

QString OAIProduct::getExpirationDate() const {
    return m_expiration_date;
}
void OAIProduct::setExpirationDate(const QString &expiration_date) {
    m_expiration_date = expiration_date;
    m_expiration_date_isSet = true;
}

bool OAIProduct::is_expiration_date_Set() const{
    return m_expiration_date_isSet;
}

bool OAIProduct::is_expiration_date_Valid() const{
    return m_expiration_date_isValid;
}

QString OAIProduct::getGender() const {
    return m_gender;
}
void OAIProduct::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAIProduct::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAIProduct::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAIProduct::getGoogleProductCategory() const {
    return m_google_product_category;
}
void OAIProduct::setGoogleProductCategory(const QString &google_product_category) {
    m_google_product_category = google_product_category;
    m_google_product_category_isSet = true;
}

bool OAIProduct::is_google_product_category_Set() const{
    return m_google_product_category_isSet;
}

bool OAIProduct::is_google_product_category_Valid() const{
    return m_google_product_category_isValid;
}

QString OAIProduct::getGtin() const {
    return m_gtin;
}
void OAIProduct::setGtin(const QString &gtin) {
    m_gtin = gtin;
    m_gtin_isSet = true;
}

bool OAIProduct::is_gtin_Set() const{
    return m_gtin_isSet;
}

bool OAIProduct::is_gtin_Valid() const{
    return m_gtin_isValid;
}

QString OAIProduct::getId() const {
    return m_id;
}
void OAIProduct::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIProduct::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProduct::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIProduct::isIdentifierExists() const {
    return m_identifier_exists;
}
void OAIProduct::setIdentifierExists(const bool &identifier_exists) {
    m_identifier_exists = identifier_exists;
    m_identifier_exists_isSet = true;
}

bool OAIProduct::is_identifier_exists_Set() const{
    return m_identifier_exists_isSet;
}

bool OAIProduct::is_identifier_exists_Valid() const{
    return m_identifier_exists_isValid;
}

QString OAIProduct::getImageLink() const {
    return m_image_link;
}
void OAIProduct::setImageLink(const QString &image_link) {
    m_image_link = image_link;
    m_image_link_isSet = true;
}

bool OAIProduct::is_image_link_Set() const{
    return m_image_link_isSet;
}

bool OAIProduct::is_image_link_Valid() const{
    return m_image_link_isValid;
}

OAIInstallment OAIProduct::getInstallment() const {
    return m_installment;
}
void OAIProduct::setInstallment(const OAIInstallment &installment) {
    m_installment = installment;
    m_installment_isSet = true;
}

bool OAIProduct::is_installment_Set() const{
    return m_installment_isSet;
}

bool OAIProduct::is_installment_Valid() const{
    return m_installment_isValid;
}

bool OAIProduct::isIsBundle() const {
    return m_is_bundle;
}
void OAIProduct::setIsBundle(const bool &is_bundle) {
    m_is_bundle = is_bundle;
    m_is_bundle_isSet = true;
}

bool OAIProduct::is_is_bundle_Set() const{
    return m_is_bundle_isSet;
}

bool OAIProduct::is_is_bundle_Valid() const{
    return m_is_bundle_isValid;
}

QString OAIProduct::getItemGroupId() const {
    return m_item_group_id;
}
void OAIProduct::setItemGroupId(const QString &item_group_id) {
    m_item_group_id = item_group_id;
    m_item_group_id_isSet = true;
}

bool OAIProduct::is_item_group_id_Set() const{
    return m_item_group_id_isSet;
}

bool OAIProduct::is_item_group_id_Valid() const{
    return m_item_group_id_isValid;
}

QString OAIProduct::getKind() const {
    return m_kind;
}
void OAIProduct::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIProduct::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIProduct::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIProduct::getLink() const {
    return m_link;
}
void OAIProduct::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIProduct::is_link_Set() const{
    return m_link_isSet;
}

bool OAIProduct::is_link_Valid() const{
    return m_link_isValid;
}

OAILoyaltyPoints OAIProduct::getLoyaltyPoints() const {
    return m_loyalty_points;
}
void OAIProduct::setLoyaltyPoints(const OAILoyaltyPoints &loyalty_points) {
    m_loyalty_points = loyalty_points;
    m_loyalty_points_isSet = true;
}

bool OAIProduct::is_loyalty_points_Set() const{
    return m_loyalty_points_isSet;
}

bool OAIProduct::is_loyalty_points_Valid() const{
    return m_loyalty_points_isValid;
}

QString OAIProduct::getMaterial() const {
    return m_material;
}
void OAIProduct::setMaterial(const QString &material) {
    m_material = material;
    m_material_isSet = true;
}

bool OAIProduct::is_material_Set() const{
    return m_material_isSet;
}

bool OAIProduct::is_material_Valid() const{
    return m_material_isValid;
}

QString OAIProduct::getMaxEnergyEfficiencyClass() const {
    return m_max_energy_efficiency_class;
}
void OAIProduct::setMaxEnergyEfficiencyClass(const QString &max_energy_efficiency_class) {
    m_max_energy_efficiency_class = max_energy_efficiency_class;
    m_max_energy_efficiency_class_isSet = true;
}

bool OAIProduct::is_max_energy_efficiency_class_Set() const{
    return m_max_energy_efficiency_class_isSet;
}

bool OAIProduct::is_max_energy_efficiency_class_Valid() const{
    return m_max_energy_efficiency_class_isValid;
}

QString OAIProduct::getMaxHandlingTime() const {
    return m_max_handling_time;
}
void OAIProduct::setMaxHandlingTime(const QString &max_handling_time) {
    m_max_handling_time = max_handling_time;
    m_max_handling_time_isSet = true;
}

bool OAIProduct::is_max_handling_time_Set() const{
    return m_max_handling_time_isSet;
}

bool OAIProduct::is_max_handling_time_Valid() const{
    return m_max_handling_time_isValid;
}

QString OAIProduct::getMinEnergyEfficiencyClass() const {
    return m_min_energy_efficiency_class;
}
void OAIProduct::setMinEnergyEfficiencyClass(const QString &min_energy_efficiency_class) {
    m_min_energy_efficiency_class = min_energy_efficiency_class;
    m_min_energy_efficiency_class_isSet = true;
}

bool OAIProduct::is_min_energy_efficiency_class_Set() const{
    return m_min_energy_efficiency_class_isSet;
}

bool OAIProduct::is_min_energy_efficiency_class_Valid() const{
    return m_min_energy_efficiency_class_isValid;
}

QString OAIProduct::getMinHandlingTime() const {
    return m_min_handling_time;
}
void OAIProduct::setMinHandlingTime(const QString &min_handling_time) {
    m_min_handling_time = min_handling_time;
    m_min_handling_time_isSet = true;
}

bool OAIProduct::is_min_handling_time_Set() const{
    return m_min_handling_time_isSet;
}

bool OAIProduct::is_min_handling_time_Valid() const{
    return m_min_handling_time_isValid;
}

QString OAIProduct::getMobileLink() const {
    return m_mobile_link;
}
void OAIProduct::setMobileLink(const QString &mobile_link) {
    m_mobile_link = mobile_link;
    m_mobile_link_isSet = true;
}

bool OAIProduct::is_mobile_link_Set() const{
    return m_mobile_link_isSet;
}

bool OAIProduct::is_mobile_link_Valid() const{
    return m_mobile_link_isValid;
}

QString OAIProduct::getMpn() const {
    return m_mpn;
}
void OAIProduct::setMpn(const QString &mpn) {
    m_mpn = mpn;
    m_mpn_isSet = true;
}

bool OAIProduct::is_mpn_Set() const{
    return m_mpn_isSet;
}

bool OAIProduct::is_mpn_Valid() const{
    return m_mpn_isValid;
}

QString OAIProduct::getMultipack() const {
    return m_multipack;
}
void OAIProduct::setMultipack(const QString &multipack) {
    m_multipack = multipack;
    m_multipack_isSet = true;
}

bool OAIProduct::is_multipack_Set() const{
    return m_multipack_isSet;
}

bool OAIProduct::is_multipack_Valid() const{
    return m_multipack_isValid;
}

QString OAIProduct::getOfferId() const {
    return m_offer_id;
}
void OAIProduct::setOfferId(const QString &offer_id) {
    m_offer_id = offer_id;
    m_offer_id_isSet = true;
}

bool OAIProduct::is_offer_id_Set() const{
    return m_offer_id_isSet;
}

bool OAIProduct::is_offer_id_Valid() const{
    return m_offer_id_isValid;
}

bool OAIProduct::isOnlineOnly() const {
    return m_online_only;
}
void OAIProduct::setOnlineOnly(const bool &online_only) {
    m_online_only = online_only;
    m_online_only_isSet = true;
}

bool OAIProduct::is_online_only_Set() const{
    return m_online_only_isSet;
}

bool OAIProduct::is_online_only_Valid() const{
    return m_online_only_isValid;
}

QString OAIProduct::getPattern() const {
    return m_pattern;
}
void OAIProduct::setPattern(const QString &pattern) {
    m_pattern = pattern;
    m_pattern_isSet = true;
}

bool OAIProduct::is_pattern_Set() const{
    return m_pattern_isSet;
}

bool OAIProduct::is_pattern_Valid() const{
    return m_pattern_isValid;
}

OAIPrice OAIProduct::getPrice() const {
    return m_price;
}
void OAIProduct::setPrice(const OAIPrice &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIProduct::is_price_Set() const{
    return m_price_isSet;
}

bool OAIProduct::is_price_Valid() const{
    return m_price_isValid;
}

QString OAIProduct::getProductType() const {
    return m_product_type;
}
void OAIProduct::setProductType(const QString &product_type) {
    m_product_type = product_type;
    m_product_type_isSet = true;
}

bool OAIProduct::is_product_type_Set() const{
    return m_product_type_isSet;
}

bool OAIProduct::is_product_type_Valid() const{
    return m_product_type_isValid;
}

QList<QString> OAIProduct::getPromotionIds() const {
    return m_promotion_ids;
}
void OAIProduct::setPromotionIds(const QList<QString> &promotion_ids) {
    m_promotion_ids = promotion_ids;
    m_promotion_ids_isSet = true;
}

bool OAIProduct::is_promotion_ids_Set() const{
    return m_promotion_ids_isSet;
}

bool OAIProduct::is_promotion_ids_Valid() const{
    return m_promotion_ids_isValid;
}

OAIPrice OAIProduct::getSalePrice() const {
    return m_sale_price;
}
void OAIProduct::setSalePrice(const OAIPrice &sale_price) {
    m_sale_price = sale_price;
    m_sale_price_isSet = true;
}

bool OAIProduct::is_sale_price_Set() const{
    return m_sale_price_isSet;
}

bool OAIProduct::is_sale_price_Valid() const{
    return m_sale_price_isValid;
}

QString OAIProduct::getSalePriceEffectiveDate() const {
    return m_sale_price_effective_date;
}
void OAIProduct::setSalePriceEffectiveDate(const QString &sale_price_effective_date) {
    m_sale_price_effective_date = sale_price_effective_date;
    m_sale_price_effective_date_isSet = true;
}

bool OAIProduct::is_sale_price_effective_date_Set() const{
    return m_sale_price_effective_date_isSet;
}

bool OAIProduct::is_sale_price_effective_date_Valid() const{
    return m_sale_price_effective_date_isValid;
}

QString OAIProduct::getSellOnGoogleQuantity() const {
    return m_sell_on_google_quantity;
}
void OAIProduct::setSellOnGoogleQuantity(const QString &sell_on_google_quantity) {
    m_sell_on_google_quantity = sell_on_google_quantity;
    m_sell_on_google_quantity_isSet = true;
}

bool OAIProduct::is_sell_on_google_quantity_Set() const{
    return m_sell_on_google_quantity_isSet;
}

bool OAIProduct::is_sell_on_google_quantity_Valid() const{
    return m_sell_on_google_quantity_isValid;
}

QList<OAIProductShipping> OAIProduct::getShipping() const {
    return m_shipping;
}
void OAIProduct::setShipping(const QList<OAIProductShipping> &shipping) {
    m_shipping = shipping;
    m_shipping_isSet = true;
}

bool OAIProduct::is_shipping_Set() const{
    return m_shipping_isSet;
}

bool OAIProduct::is_shipping_Valid() const{
    return m_shipping_isValid;
}

OAIProductShippingDimension OAIProduct::getShippingHeight() const {
    return m_shipping_height;
}
void OAIProduct::setShippingHeight(const OAIProductShippingDimension &shipping_height) {
    m_shipping_height = shipping_height;
    m_shipping_height_isSet = true;
}

bool OAIProduct::is_shipping_height_Set() const{
    return m_shipping_height_isSet;
}

bool OAIProduct::is_shipping_height_Valid() const{
    return m_shipping_height_isValid;
}

QString OAIProduct::getShippingLabel() const {
    return m_shipping_label;
}
void OAIProduct::setShippingLabel(const QString &shipping_label) {
    m_shipping_label = shipping_label;
    m_shipping_label_isSet = true;
}

bool OAIProduct::is_shipping_label_Set() const{
    return m_shipping_label_isSet;
}

bool OAIProduct::is_shipping_label_Valid() const{
    return m_shipping_label_isValid;
}

OAIProductShippingDimension OAIProduct::getShippingLength() const {
    return m_shipping_length;
}
void OAIProduct::setShippingLength(const OAIProductShippingDimension &shipping_length) {
    m_shipping_length = shipping_length;
    m_shipping_length_isSet = true;
}

bool OAIProduct::is_shipping_length_Set() const{
    return m_shipping_length_isSet;
}

bool OAIProduct::is_shipping_length_Valid() const{
    return m_shipping_length_isValid;
}

OAIProductShippingWeight OAIProduct::getShippingWeight() const {
    return m_shipping_weight;
}
void OAIProduct::setShippingWeight(const OAIProductShippingWeight &shipping_weight) {
    m_shipping_weight = shipping_weight;
    m_shipping_weight_isSet = true;
}

bool OAIProduct::is_shipping_weight_Set() const{
    return m_shipping_weight_isSet;
}

bool OAIProduct::is_shipping_weight_Valid() const{
    return m_shipping_weight_isValid;
}

OAIProductShippingDimension OAIProduct::getShippingWidth() const {
    return m_shipping_width;
}
void OAIProduct::setShippingWidth(const OAIProductShippingDimension &shipping_width) {
    m_shipping_width = shipping_width;
    m_shipping_width_isSet = true;
}

bool OAIProduct::is_shipping_width_Set() const{
    return m_shipping_width_isSet;
}

bool OAIProduct::is_shipping_width_Valid() const{
    return m_shipping_width_isValid;
}

QString OAIProduct::getSizeSystem() const {
    return m_size_system;
}
void OAIProduct::setSizeSystem(const QString &size_system) {
    m_size_system = size_system;
    m_size_system_isSet = true;
}

bool OAIProduct::is_size_system_Set() const{
    return m_size_system_isSet;
}

bool OAIProduct::is_size_system_Valid() const{
    return m_size_system_isValid;
}

QString OAIProduct::getSizeType() const {
    return m_size_type;
}
void OAIProduct::setSizeType(const QString &size_type) {
    m_size_type = size_type;
    m_size_type_isSet = true;
}

bool OAIProduct::is_size_type_Set() const{
    return m_size_type_isSet;
}

bool OAIProduct::is_size_type_Valid() const{
    return m_size_type_isValid;
}

QList<QString> OAIProduct::getSizes() const {
    return m_sizes;
}
void OAIProduct::setSizes(const QList<QString> &sizes) {
    m_sizes = sizes;
    m_sizes_isSet = true;
}

bool OAIProduct::is_sizes_Set() const{
    return m_sizes_isSet;
}

bool OAIProduct::is_sizes_Valid() const{
    return m_sizes_isValid;
}

QString OAIProduct::getSource() const {
    return m_source;
}
void OAIProduct::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIProduct::is_source_Set() const{
    return m_source_isSet;
}

bool OAIProduct::is_source_Valid() const{
    return m_source_isValid;
}

QString OAIProduct::getTargetCountry() const {
    return m_target_country;
}
void OAIProduct::setTargetCountry(const QString &target_country) {
    m_target_country = target_country;
    m_target_country_isSet = true;
}

bool OAIProduct::is_target_country_Set() const{
    return m_target_country_isSet;
}

bool OAIProduct::is_target_country_Valid() const{
    return m_target_country_isValid;
}

QList<OAIProductTax> OAIProduct::getTaxes() const {
    return m_taxes;
}
void OAIProduct::setTaxes(const QList<OAIProductTax> &taxes) {
    m_taxes = taxes;
    m_taxes_isSet = true;
}

bool OAIProduct::is_taxes_Set() const{
    return m_taxes_isSet;
}

bool OAIProduct::is_taxes_Valid() const{
    return m_taxes_isValid;
}

QString OAIProduct::getTitle() const {
    return m_title;
}
void OAIProduct::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIProduct::is_title_Set() const{
    return m_title_isSet;
}

bool OAIProduct::is_title_Valid() const{
    return m_title_isValid;
}

OAIProductUnitPricingBaseMeasure OAIProduct::getUnitPricingBaseMeasure() const {
    return m_unit_pricing_base_measure;
}
void OAIProduct::setUnitPricingBaseMeasure(const OAIProductUnitPricingBaseMeasure &unit_pricing_base_measure) {
    m_unit_pricing_base_measure = unit_pricing_base_measure;
    m_unit_pricing_base_measure_isSet = true;
}

bool OAIProduct::is_unit_pricing_base_measure_Set() const{
    return m_unit_pricing_base_measure_isSet;
}

bool OAIProduct::is_unit_pricing_base_measure_Valid() const{
    return m_unit_pricing_base_measure_isValid;
}

OAIProductUnitPricingMeasure OAIProduct::getUnitPricingMeasure() const {
    return m_unit_pricing_measure;
}
void OAIProduct::setUnitPricingMeasure(const OAIProductUnitPricingMeasure &unit_pricing_measure) {
    m_unit_pricing_measure = unit_pricing_measure;
    m_unit_pricing_measure_isSet = true;
}

bool OAIProduct::is_unit_pricing_measure_Set() const{
    return m_unit_pricing_measure_isSet;
}

bool OAIProduct::is_unit_pricing_measure_Valid() const{
    return m_unit_pricing_measure_isValid;
}

QList<QString> OAIProduct::getValidatedDestinations() const {
    return m_validated_destinations;
}
void OAIProduct::setValidatedDestinations(const QList<QString> &validated_destinations) {
    m_validated_destinations = validated_destinations;
    m_validated_destinations_isSet = true;
}

bool OAIProduct::is_validated_destinations_Set() const{
    return m_validated_destinations_isSet;
}

bool OAIProduct::is_validated_destinations_Valid() const{
    return m_validated_destinations_isValid;
}

QList<OAIError> OAIProduct::getWarnings() const {
    return m_warnings;
}
void OAIProduct::setWarnings(const QList<OAIError> &warnings) {
    m_warnings = warnings;
    m_warnings_isSet = true;
}

bool OAIProduct::is_warnings_Set() const{
    return m_warnings_isSet;
}

bool OAIProduct::is_warnings_Valid() const{
    return m_warnings_isValid;
}

bool OAIProduct::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_image_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_product_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_adult_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_adwords_grouping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_adwords_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_adwords_redirect_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_age_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aspects.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_availability_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_availability_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_brand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_canonical_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cost_of_goods_sold.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_label0_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_label1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_label2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_label3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_label4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destinations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_ads_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_ads_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_ads_similar_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_ads_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_ads_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_energy_efficiency_class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_product_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gtin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identifier_exists_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_bundle_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loyalty_points.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_material_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_energy_efficiency_class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_handling_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_energy_efficiency_class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_handling_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mpn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_multipack_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_online_only_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sale_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sale_price_effective_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sell_on_google_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_height.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_length.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_weight.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_width.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_system_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sizes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_taxes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_pricing_base_measure.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_pricing_measure.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_validated_destinations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_warnings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProduct::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
