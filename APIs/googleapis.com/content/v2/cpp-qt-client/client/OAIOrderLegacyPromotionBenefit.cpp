/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderLegacyPromotionBenefit.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderLegacyPromotionBenefit::OAIOrderLegacyPromotionBenefit(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderLegacyPromotionBenefit::OAIOrderLegacyPromotionBenefit() {
    this->initializeModel();
}

OAIOrderLegacyPromotionBenefit::~OAIOrderLegacyPromotionBenefit() {}

void OAIOrderLegacyPromotionBenefit::initializeModel() {

    m_discount_isSet = false;
    m_discount_isValid = false;

    m_offer_ids_isSet = false;
    m_offer_ids_isValid = false;

    m_sub_type_isSet = false;
    m_sub_type_isValid = false;

    m_tax_impact_isSet = false;
    m_tax_impact_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIOrderLegacyPromotionBenefit::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderLegacyPromotionBenefit::fromJsonObject(QJsonObject json) {

    m_discount_isValid = ::OpenAPI::fromJsonValue(m_discount, json[QString("discount")]);
    m_discount_isSet = !json[QString("discount")].isNull() && m_discount_isValid;

    m_offer_ids_isValid = ::OpenAPI::fromJsonValue(m_offer_ids, json[QString("offerIds")]);
    m_offer_ids_isSet = !json[QString("offerIds")].isNull() && m_offer_ids_isValid;

    m_sub_type_isValid = ::OpenAPI::fromJsonValue(m_sub_type, json[QString("subType")]);
    m_sub_type_isSet = !json[QString("subType")].isNull() && m_sub_type_isValid;

    m_tax_impact_isValid = ::OpenAPI::fromJsonValue(m_tax_impact, json[QString("taxImpact")]);
    m_tax_impact_isSet = !json[QString("taxImpact")].isNull() && m_tax_impact_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIOrderLegacyPromotionBenefit::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderLegacyPromotionBenefit::asJsonObject() const {
    QJsonObject obj;
    if (m_discount.isSet()) {
        obj.insert(QString("discount"), ::OpenAPI::toJsonValue(m_discount));
    }
    if (m_offer_ids.size() > 0) {
        obj.insert(QString("offerIds"), ::OpenAPI::toJsonValue(m_offer_ids));
    }
    if (m_sub_type_isSet) {
        obj.insert(QString("subType"), ::OpenAPI::toJsonValue(m_sub_type));
    }
    if (m_tax_impact.isSet()) {
        obj.insert(QString("taxImpact"), ::OpenAPI::toJsonValue(m_tax_impact));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIPrice OAIOrderLegacyPromotionBenefit::getDiscount() const {
    return m_discount;
}
void OAIOrderLegacyPromotionBenefit::setDiscount(const OAIPrice &discount) {
    m_discount = discount;
    m_discount_isSet = true;
}

bool OAIOrderLegacyPromotionBenefit::is_discount_Set() const{
    return m_discount_isSet;
}

bool OAIOrderLegacyPromotionBenefit::is_discount_Valid() const{
    return m_discount_isValid;
}

QList<QString> OAIOrderLegacyPromotionBenefit::getOfferIds() const {
    return m_offer_ids;
}
void OAIOrderLegacyPromotionBenefit::setOfferIds(const QList<QString> &offer_ids) {
    m_offer_ids = offer_ids;
    m_offer_ids_isSet = true;
}

bool OAIOrderLegacyPromotionBenefit::is_offer_ids_Set() const{
    return m_offer_ids_isSet;
}

bool OAIOrderLegacyPromotionBenefit::is_offer_ids_Valid() const{
    return m_offer_ids_isValid;
}

QString OAIOrderLegacyPromotionBenefit::getSubType() const {
    return m_sub_type;
}
void OAIOrderLegacyPromotionBenefit::setSubType(const QString &sub_type) {
    m_sub_type = sub_type;
    m_sub_type_isSet = true;
}

bool OAIOrderLegacyPromotionBenefit::is_sub_type_Set() const{
    return m_sub_type_isSet;
}

bool OAIOrderLegacyPromotionBenefit::is_sub_type_Valid() const{
    return m_sub_type_isValid;
}

OAIPrice OAIOrderLegacyPromotionBenefit::getTaxImpact() const {
    return m_tax_impact;
}
void OAIOrderLegacyPromotionBenefit::setTaxImpact(const OAIPrice &tax_impact) {
    m_tax_impact = tax_impact;
    m_tax_impact_isSet = true;
}

bool OAIOrderLegacyPromotionBenefit::is_tax_impact_Set() const{
    return m_tax_impact_isSet;
}

bool OAIOrderLegacyPromotionBenefit::is_tax_impact_Valid() const{
    return m_tax_impact_isValid;
}

QString OAIOrderLegacyPromotionBenefit::getType() const {
    return m_type;
}
void OAIOrderLegacyPromotionBenefit::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIOrderLegacyPromotionBenefit::is_type_Set() const{
    return m_type_isSet;
}

bool OAIOrderLegacyPromotionBenefit::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIOrderLegacyPromotionBenefit::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_discount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_offer_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_impact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderLegacyPromotionBenefit::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
