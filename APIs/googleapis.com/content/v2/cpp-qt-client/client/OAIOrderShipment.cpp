/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderShipment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderShipment::OAIOrderShipment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderShipment::OAIOrderShipment() {
    this->initializeModel();
}

OAIOrderShipment::~OAIOrderShipment() {}

void OAIOrderShipment::initializeModel() {

    m_carrier_isSet = false;
    m_carrier_isValid = false;

    m_creation_date_isSet = false;
    m_creation_date_isValid = false;

    m_delivery_date_isSet = false;
    m_delivery_date_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_line_items_isSet = false;
    m_line_items_isValid = false;

    m_scheduled_delivery_details_isSet = false;
    m_scheduled_delivery_details_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_tracking_id_isSet = false;
    m_tracking_id_isValid = false;
}

void OAIOrderShipment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderShipment::fromJsonObject(QJsonObject json) {

    m_carrier_isValid = ::OpenAPI::fromJsonValue(m_carrier, json[QString("carrier")]);
    m_carrier_isSet = !json[QString("carrier")].isNull() && m_carrier_isValid;

    m_creation_date_isValid = ::OpenAPI::fromJsonValue(m_creation_date, json[QString("creationDate")]);
    m_creation_date_isSet = !json[QString("creationDate")].isNull() && m_creation_date_isValid;

    m_delivery_date_isValid = ::OpenAPI::fromJsonValue(m_delivery_date, json[QString("deliveryDate")]);
    m_delivery_date_isSet = !json[QString("deliveryDate")].isNull() && m_delivery_date_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_line_items_isValid = ::OpenAPI::fromJsonValue(m_line_items, json[QString("lineItems")]);
    m_line_items_isSet = !json[QString("lineItems")].isNull() && m_line_items_isValid;

    m_scheduled_delivery_details_isValid = ::OpenAPI::fromJsonValue(m_scheduled_delivery_details, json[QString("scheduledDeliveryDetails")]);
    m_scheduled_delivery_details_isSet = !json[QString("scheduledDeliveryDetails")].isNull() && m_scheduled_delivery_details_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_tracking_id_isValid = ::OpenAPI::fromJsonValue(m_tracking_id, json[QString("trackingId")]);
    m_tracking_id_isSet = !json[QString("trackingId")].isNull() && m_tracking_id_isValid;
}

QString OAIOrderShipment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderShipment::asJsonObject() const {
    QJsonObject obj;
    if (m_carrier_isSet) {
        obj.insert(QString("carrier"), ::OpenAPI::toJsonValue(m_carrier));
    }
    if (m_creation_date_isSet) {
        obj.insert(QString("creationDate"), ::OpenAPI::toJsonValue(m_creation_date));
    }
    if (m_delivery_date_isSet) {
        obj.insert(QString("deliveryDate"), ::OpenAPI::toJsonValue(m_delivery_date));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_line_items.size() > 0) {
        obj.insert(QString("lineItems"), ::OpenAPI::toJsonValue(m_line_items));
    }
    if (m_scheduled_delivery_details.isSet()) {
        obj.insert(QString("scheduledDeliveryDetails"), ::OpenAPI::toJsonValue(m_scheduled_delivery_details));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_tracking_id_isSet) {
        obj.insert(QString("trackingId"), ::OpenAPI::toJsonValue(m_tracking_id));
    }
    return obj;
}

QString OAIOrderShipment::getCarrier() const {
    return m_carrier;
}
void OAIOrderShipment::setCarrier(const QString &carrier) {
    m_carrier = carrier;
    m_carrier_isSet = true;
}

bool OAIOrderShipment::is_carrier_Set() const{
    return m_carrier_isSet;
}

bool OAIOrderShipment::is_carrier_Valid() const{
    return m_carrier_isValid;
}

QString OAIOrderShipment::getCreationDate() const {
    return m_creation_date;
}
void OAIOrderShipment::setCreationDate(const QString &creation_date) {
    m_creation_date = creation_date;
    m_creation_date_isSet = true;
}

bool OAIOrderShipment::is_creation_date_Set() const{
    return m_creation_date_isSet;
}

bool OAIOrderShipment::is_creation_date_Valid() const{
    return m_creation_date_isValid;
}

QString OAIOrderShipment::getDeliveryDate() const {
    return m_delivery_date;
}
void OAIOrderShipment::setDeliveryDate(const QString &delivery_date) {
    m_delivery_date = delivery_date;
    m_delivery_date_isSet = true;
}

bool OAIOrderShipment::is_delivery_date_Set() const{
    return m_delivery_date_isSet;
}

bool OAIOrderShipment::is_delivery_date_Valid() const{
    return m_delivery_date_isValid;
}

QString OAIOrderShipment::getId() const {
    return m_id;
}
void OAIOrderShipment::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIOrderShipment::is_id_Set() const{
    return m_id_isSet;
}

bool OAIOrderShipment::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAIOrderShipmentLineItemShipment> OAIOrderShipment::getLineItems() const {
    return m_line_items;
}
void OAIOrderShipment::setLineItems(const QList<OAIOrderShipmentLineItemShipment> &line_items) {
    m_line_items = line_items;
    m_line_items_isSet = true;
}

bool OAIOrderShipment::is_line_items_Set() const{
    return m_line_items_isSet;
}

bool OAIOrderShipment::is_line_items_Valid() const{
    return m_line_items_isValid;
}

OAIOrderShipmentScheduledDeliveryDetails OAIOrderShipment::getScheduledDeliveryDetails() const {
    return m_scheduled_delivery_details;
}
void OAIOrderShipment::setScheduledDeliveryDetails(const OAIOrderShipmentScheduledDeliveryDetails &scheduled_delivery_details) {
    m_scheduled_delivery_details = scheduled_delivery_details;
    m_scheduled_delivery_details_isSet = true;
}

bool OAIOrderShipment::is_scheduled_delivery_details_Set() const{
    return m_scheduled_delivery_details_isSet;
}

bool OAIOrderShipment::is_scheduled_delivery_details_Valid() const{
    return m_scheduled_delivery_details_isValid;
}

QString OAIOrderShipment::getStatus() const {
    return m_status;
}
void OAIOrderShipment::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIOrderShipment::is_status_Set() const{
    return m_status_isSet;
}

bool OAIOrderShipment::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIOrderShipment::getTrackingId() const {
    return m_tracking_id;
}
void OAIOrderShipment::setTrackingId(const QString &tracking_id) {
    m_tracking_id = tracking_id;
    m_tracking_id_isSet = true;
}

bool OAIOrderShipment::is_tracking_id_Set() const{
    return m_tracking_id_isSet;
}

bool OAIOrderShipment::is_tracking_id_Valid() const{
    return m_tracking_id_isValid;
}

bool OAIOrderShipment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_carrier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheduled_delivery_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderShipment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
