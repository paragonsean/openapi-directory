/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccount::OAIAccount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccount::OAIAccount() {
    this->initializeModel();
}

OAIAccount::~OAIAccount() {}

void OAIAccount::initializeModel() {

    m_adult_content_isSet = false;
    m_adult_content_isValid = false;

    m_adwords_links_isSet = false;
    m_adwords_links_isValid = false;

    m_business_information_isSet = false;
    m_business_information_isValid = false;

    m_google_my_business_link_isSet = false;
    m_google_my_business_link_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_reviews_url_isSet = false;
    m_reviews_url_isValid = false;

    m_seller_id_isSet = false;
    m_seller_id_isValid = false;

    m_users_isSet = false;
    m_users_isValid = false;

    m_website_url_isSet = false;
    m_website_url_isValid = false;

    m_youtube_channel_links_isSet = false;
    m_youtube_channel_links_isValid = false;
}

void OAIAccount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccount::fromJsonObject(QJsonObject json) {

    m_adult_content_isValid = ::OpenAPI::fromJsonValue(m_adult_content, json[QString("adultContent")]);
    m_adult_content_isSet = !json[QString("adultContent")].isNull() && m_adult_content_isValid;

    m_adwords_links_isValid = ::OpenAPI::fromJsonValue(m_adwords_links, json[QString("adwordsLinks")]);
    m_adwords_links_isSet = !json[QString("adwordsLinks")].isNull() && m_adwords_links_isValid;

    m_business_information_isValid = ::OpenAPI::fromJsonValue(m_business_information, json[QString("businessInformation")]);
    m_business_information_isSet = !json[QString("businessInformation")].isNull() && m_business_information_isValid;

    m_google_my_business_link_isValid = ::OpenAPI::fromJsonValue(m_google_my_business_link, json[QString("googleMyBusinessLink")]);
    m_google_my_business_link_isSet = !json[QString("googleMyBusinessLink")].isNull() && m_google_my_business_link_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_reviews_url_isValid = ::OpenAPI::fromJsonValue(m_reviews_url, json[QString("reviewsUrl")]);
    m_reviews_url_isSet = !json[QString("reviewsUrl")].isNull() && m_reviews_url_isValid;

    m_seller_id_isValid = ::OpenAPI::fromJsonValue(m_seller_id, json[QString("sellerId")]);
    m_seller_id_isSet = !json[QString("sellerId")].isNull() && m_seller_id_isValid;

    m_users_isValid = ::OpenAPI::fromJsonValue(m_users, json[QString("users")]);
    m_users_isSet = !json[QString("users")].isNull() && m_users_isValid;

    m_website_url_isValid = ::OpenAPI::fromJsonValue(m_website_url, json[QString("websiteUrl")]);
    m_website_url_isSet = !json[QString("websiteUrl")].isNull() && m_website_url_isValid;

    m_youtube_channel_links_isValid = ::OpenAPI::fromJsonValue(m_youtube_channel_links, json[QString("youtubeChannelLinks")]);
    m_youtube_channel_links_isSet = !json[QString("youtubeChannelLinks")].isNull() && m_youtube_channel_links_isValid;
}

QString OAIAccount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccount::asJsonObject() const {
    QJsonObject obj;
    if (m_adult_content_isSet) {
        obj.insert(QString("adultContent"), ::OpenAPI::toJsonValue(m_adult_content));
    }
    if (m_adwords_links.size() > 0) {
        obj.insert(QString("adwordsLinks"), ::OpenAPI::toJsonValue(m_adwords_links));
    }
    if (m_business_information.isSet()) {
        obj.insert(QString("businessInformation"), ::OpenAPI::toJsonValue(m_business_information));
    }
    if (m_google_my_business_link.isSet()) {
        obj.insert(QString("googleMyBusinessLink"), ::OpenAPI::toJsonValue(m_google_my_business_link));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_reviews_url_isSet) {
        obj.insert(QString("reviewsUrl"), ::OpenAPI::toJsonValue(m_reviews_url));
    }
    if (m_seller_id_isSet) {
        obj.insert(QString("sellerId"), ::OpenAPI::toJsonValue(m_seller_id));
    }
    if (m_users.size() > 0) {
        obj.insert(QString("users"), ::OpenAPI::toJsonValue(m_users));
    }
    if (m_website_url_isSet) {
        obj.insert(QString("websiteUrl"), ::OpenAPI::toJsonValue(m_website_url));
    }
    if (m_youtube_channel_links.size() > 0) {
        obj.insert(QString("youtubeChannelLinks"), ::OpenAPI::toJsonValue(m_youtube_channel_links));
    }
    return obj;
}

bool OAIAccount::isAdultContent() const {
    return m_adult_content;
}
void OAIAccount::setAdultContent(const bool &adult_content) {
    m_adult_content = adult_content;
    m_adult_content_isSet = true;
}

bool OAIAccount::is_adult_content_Set() const{
    return m_adult_content_isSet;
}

bool OAIAccount::is_adult_content_Valid() const{
    return m_adult_content_isValid;
}

QList<OAIAccountAdwordsLink> OAIAccount::getAdwordsLinks() const {
    return m_adwords_links;
}
void OAIAccount::setAdwordsLinks(const QList<OAIAccountAdwordsLink> &adwords_links) {
    m_adwords_links = adwords_links;
    m_adwords_links_isSet = true;
}

bool OAIAccount::is_adwords_links_Set() const{
    return m_adwords_links_isSet;
}

bool OAIAccount::is_adwords_links_Valid() const{
    return m_adwords_links_isValid;
}

OAIAccountBusinessInformation OAIAccount::getBusinessInformation() const {
    return m_business_information;
}
void OAIAccount::setBusinessInformation(const OAIAccountBusinessInformation &business_information) {
    m_business_information = business_information;
    m_business_information_isSet = true;
}

bool OAIAccount::is_business_information_Set() const{
    return m_business_information_isSet;
}

bool OAIAccount::is_business_information_Valid() const{
    return m_business_information_isValid;
}

OAIAccountGoogleMyBusinessLink OAIAccount::getGoogleMyBusinessLink() const {
    return m_google_my_business_link;
}
void OAIAccount::setGoogleMyBusinessLink(const OAIAccountGoogleMyBusinessLink &google_my_business_link) {
    m_google_my_business_link = google_my_business_link;
    m_google_my_business_link_isSet = true;
}

bool OAIAccount::is_google_my_business_link_Set() const{
    return m_google_my_business_link_isSet;
}

bool OAIAccount::is_google_my_business_link_Valid() const{
    return m_google_my_business_link_isValid;
}

QString OAIAccount::getId() const {
    return m_id;
}
void OAIAccount::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAccount::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAccount::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAccount::getKind() const {
    return m_kind;
}
void OAIAccount::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIAccount::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIAccount::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIAccount::getName() const {
    return m_name;
}
void OAIAccount::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAccount::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAccount::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAccount::getReviewsUrl() const {
    return m_reviews_url;
}
void OAIAccount::setReviewsUrl(const QString &reviews_url) {
    m_reviews_url = reviews_url;
    m_reviews_url_isSet = true;
}

bool OAIAccount::is_reviews_url_Set() const{
    return m_reviews_url_isSet;
}

bool OAIAccount::is_reviews_url_Valid() const{
    return m_reviews_url_isValid;
}

QString OAIAccount::getSellerId() const {
    return m_seller_id;
}
void OAIAccount::setSellerId(const QString &seller_id) {
    m_seller_id = seller_id;
    m_seller_id_isSet = true;
}

bool OAIAccount::is_seller_id_Set() const{
    return m_seller_id_isSet;
}

bool OAIAccount::is_seller_id_Valid() const{
    return m_seller_id_isValid;
}

QList<OAIAccountUser> OAIAccount::getUsers() const {
    return m_users;
}
void OAIAccount::setUsers(const QList<OAIAccountUser> &users) {
    m_users = users;
    m_users_isSet = true;
}

bool OAIAccount::is_users_Set() const{
    return m_users_isSet;
}

bool OAIAccount::is_users_Valid() const{
    return m_users_isValid;
}

QString OAIAccount::getWebsiteUrl() const {
    return m_website_url;
}
void OAIAccount::setWebsiteUrl(const QString &website_url) {
    m_website_url = website_url;
    m_website_url_isSet = true;
}

bool OAIAccount::is_website_url_Set() const{
    return m_website_url_isSet;
}

bool OAIAccount::is_website_url_Valid() const{
    return m_website_url_isValid;
}

QList<OAIAccountYouTubeChannelLink> OAIAccount::getYoutubeChannelLinks() const {
    return m_youtube_channel_links;
}
void OAIAccount::setYoutubeChannelLinks(const QList<OAIAccountYouTubeChannelLink> &youtube_channel_links) {
    m_youtube_channel_links = youtube_channel_links;
    m_youtube_channel_links_isSet = true;
}

bool OAIAccount::is_youtube_channel_links_Set() const{
    return m_youtube_channel_links_isSet;
}

bool OAIAccount::is_youtube_channel_links_Valid() const{
    return m_youtube_channel_links_isValid;
}

bool OAIAccount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_adult_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_adwords_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_information.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_my_business_link.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reviews_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_seller_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_users.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_youtube_channel_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
