/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHolidaysHoliday.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHolidaysHoliday::OAIHolidaysHoliday(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHolidaysHoliday::OAIHolidaysHoliday() {
    this->initializeModel();
}

OAIHolidaysHoliday::~OAIHolidaysHoliday() {}

void OAIHolidaysHoliday::initializeModel() {

    m_country_code_isSet = false;
    m_country_code_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_delivery_guarantee_date_isSet = false;
    m_delivery_guarantee_date_isValid = false;

    m_delivery_guarantee_hour_isSet = false;
    m_delivery_guarantee_hour_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIHolidaysHoliday::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHolidaysHoliday::fromJsonObject(QJsonObject json) {

    m_country_code_isValid = ::OpenAPI::fromJsonValue(m_country_code, json[QString("countryCode")]);
    m_country_code_isSet = !json[QString("countryCode")].isNull() && m_country_code_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_delivery_guarantee_date_isValid = ::OpenAPI::fromJsonValue(m_delivery_guarantee_date, json[QString("deliveryGuaranteeDate")]);
    m_delivery_guarantee_date_isSet = !json[QString("deliveryGuaranteeDate")].isNull() && m_delivery_guarantee_date_isValid;

    m_delivery_guarantee_hour_isValid = ::OpenAPI::fromJsonValue(m_delivery_guarantee_hour, json[QString("deliveryGuaranteeHour")]);
    m_delivery_guarantee_hour_isSet = !json[QString("deliveryGuaranteeHour")].isNull() && m_delivery_guarantee_hour_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIHolidaysHoliday::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHolidaysHoliday::asJsonObject() const {
    QJsonObject obj;
    if (m_country_code_isSet) {
        obj.insert(QString("countryCode"), ::OpenAPI::toJsonValue(m_country_code));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_delivery_guarantee_date_isSet) {
        obj.insert(QString("deliveryGuaranteeDate"), ::OpenAPI::toJsonValue(m_delivery_guarantee_date));
    }
    if (m_delivery_guarantee_hour_isSet) {
        obj.insert(QString("deliveryGuaranteeHour"), ::OpenAPI::toJsonValue(m_delivery_guarantee_hour));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIHolidaysHoliday::getCountryCode() const {
    return m_country_code;
}
void OAIHolidaysHoliday::setCountryCode(const QString &country_code) {
    m_country_code = country_code;
    m_country_code_isSet = true;
}

bool OAIHolidaysHoliday::is_country_code_Set() const{
    return m_country_code_isSet;
}

bool OAIHolidaysHoliday::is_country_code_Valid() const{
    return m_country_code_isValid;
}

QString OAIHolidaysHoliday::getDate() const {
    return m_date;
}
void OAIHolidaysHoliday::setDate(const QString &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIHolidaysHoliday::is_date_Set() const{
    return m_date_isSet;
}

bool OAIHolidaysHoliday::is_date_Valid() const{
    return m_date_isValid;
}

QString OAIHolidaysHoliday::getDeliveryGuaranteeDate() const {
    return m_delivery_guarantee_date;
}
void OAIHolidaysHoliday::setDeliveryGuaranteeDate(const QString &delivery_guarantee_date) {
    m_delivery_guarantee_date = delivery_guarantee_date;
    m_delivery_guarantee_date_isSet = true;
}

bool OAIHolidaysHoliday::is_delivery_guarantee_date_Set() const{
    return m_delivery_guarantee_date_isSet;
}

bool OAIHolidaysHoliday::is_delivery_guarantee_date_Valid() const{
    return m_delivery_guarantee_date_isValid;
}

QString OAIHolidaysHoliday::getDeliveryGuaranteeHour() const {
    return m_delivery_guarantee_hour;
}
void OAIHolidaysHoliday::setDeliveryGuaranteeHour(const QString &delivery_guarantee_hour) {
    m_delivery_guarantee_hour = delivery_guarantee_hour;
    m_delivery_guarantee_hour_isSet = true;
}

bool OAIHolidaysHoliday::is_delivery_guarantee_hour_Set() const{
    return m_delivery_guarantee_hour_isSet;
}

bool OAIHolidaysHoliday::is_delivery_guarantee_hour_Valid() const{
    return m_delivery_guarantee_hour_isValid;
}

QString OAIHolidaysHoliday::getId() const {
    return m_id;
}
void OAIHolidaysHoliday::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIHolidaysHoliday::is_id_Set() const{
    return m_id_isSet;
}

bool OAIHolidaysHoliday::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIHolidaysHoliday::getType() const {
    return m_type;
}
void OAIHolidaysHoliday::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIHolidaysHoliday::is_type_Set() const{
    return m_type_isSet;
}

bool OAIHolidaysHoliday::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIHolidaysHoliday::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_guarantee_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_guarantee_hour_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHolidaysHoliday::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
