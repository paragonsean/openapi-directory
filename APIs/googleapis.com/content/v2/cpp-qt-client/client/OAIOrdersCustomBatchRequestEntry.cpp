/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrdersCustomBatchRequestEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrdersCustomBatchRequestEntry::OAIOrdersCustomBatchRequestEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrdersCustomBatchRequestEntry::OAIOrdersCustomBatchRequestEntry() {
    this->initializeModel();
}

OAIOrdersCustomBatchRequestEntry::~OAIOrdersCustomBatchRequestEntry() {}

void OAIOrdersCustomBatchRequestEntry::initializeModel() {

    m_batch_id_isSet = false;
    m_batch_id_isValid = false;

    m_cancel_isSet = false;
    m_cancel_isValid = false;

    m_cancel_line_item_isSet = false;
    m_cancel_line_item_isValid = false;

    m_in_store_refund_line_item_isSet = false;
    m_in_store_refund_line_item_isValid = false;

    m_merchant_id_isSet = false;
    m_merchant_id_isValid = false;

    m_merchant_order_id_isSet = false;
    m_merchant_order_id_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;

    m_operation_id_isSet = false;
    m_operation_id_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_refund_isSet = false;
    m_refund_isValid = false;

    m_reject_return_line_item_isSet = false;
    m_reject_return_line_item_isValid = false;

    m_return_line_item_isSet = false;
    m_return_line_item_isValid = false;

    m_return_refund_line_item_isSet = false;
    m_return_refund_line_item_isValid = false;

    m_set_line_item_metadata_isSet = false;
    m_set_line_item_metadata_isValid = false;

    m_ship_line_items_isSet = false;
    m_ship_line_items_isValid = false;

    m_update_line_item_shipping_details_isSet = false;
    m_update_line_item_shipping_details_isValid = false;

    m_update_shipment_isSet = false;
    m_update_shipment_isValid = false;
}

void OAIOrdersCustomBatchRequestEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrdersCustomBatchRequestEntry::fromJsonObject(QJsonObject json) {

    m_batch_id_isValid = ::OpenAPI::fromJsonValue(m_batch_id, json[QString("batchId")]);
    m_batch_id_isSet = !json[QString("batchId")].isNull() && m_batch_id_isValid;

    m_cancel_isValid = ::OpenAPI::fromJsonValue(m_cancel, json[QString("cancel")]);
    m_cancel_isSet = !json[QString("cancel")].isNull() && m_cancel_isValid;

    m_cancel_line_item_isValid = ::OpenAPI::fromJsonValue(m_cancel_line_item, json[QString("cancelLineItem")]);
    m_cancel_line_item_isSet = !json[QString("cancelLineItem")].isNull() && m_cancel_line_item_isValid;

    m_in_store_refund_line_item_isValid = ::OpenAPI::fromJsonValue(m_in_store_refund_line_item, json[QString("inStoreRefundLineItem")]);
    m_in_store_refund_line_item_isSet = !json[QString("inStoreRefundLineItem")].isNull() && m_in_store_refund_line_item_isValid;

    m_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_id, json[QString("merchantId")]);
    m_merchant_id_isSet = !json[QString("merchantId")].isNull() && m_merchant_id_isValid;

    m_merchant_order_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_order_id, json[QString("merchantOrderId")]);
    m_merchant_order_id_isSet = !json[QString("merchantOrderId")].isNull() && m_merchant_order_id_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_operation_id_isValid = ::OpenAPI::fromJsonValue(m_operation_id, json[QString("operationId")]);
    m_operation_id_isSet = !json[QString("operationId")].isNull() && m_operation_id_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("orderId")]);
    m_order_id_isSet = !json[QString("orderId")].isNull() && m_order_id_isValid;

    m_refund_isValid = ::OpenAPI::fromJsonValue(m_refund, json[QString("refund")]);
    m_refund_isSet = !json[QString("refund")].isNull() && m_refund_isValid;

    m_reject_return_line_item_isValid = ::OpenAPI::fromJsonValue(m_reject_return_line_item, json[QString("rejectReturnLineItem")]);
    m_reject_return_line_item_isSet = !json[QString("rejectReturnLineItem")].isNull() && m_reject_return_line_item_isValid;

    m_return_line_item_isValid = ::OpenAPI::fromJsonValue(m_return_line_item, json[QString("returnLineItem")]);
    m_return_line_item_isSet = !json[QString("returnLineItem")].isNull() && m_return_line_item_isValid;

    m_return_refund_line_item_isValid = ::OpenAPI::fromJsonValue(m_return_refund_line_item, json[QString("returnRefundLineItem")]);
    m_return_refund_line_item_isSet = !json[QString("returnRefundLineItem")].isNull() && m_return_refund_line_item_isValid;

    m_set_line_item_metadata_isValid = ::OpenAPI::fromJsonValue(m_set_line_item_metadata, json[QString("setLineItemMetadata")]);
    m_set_line_item_metadata_isSet = !json[QString("setLineItemMetadata")].isNull() && m_set_line_item_metadata_isValid;

    m_ship_line_items_isValid = ::OpenAPI::fromJsonValue(m_ship_line_items, json[QString("shipLineItems")]);
    m_ship_line_items_isSet = !json[QString("shipLineItems")].isNull() && m_ship_line_items_isValid;

    m_update_line_item_shipping_details_isValid = ::OpenAPI::fromJsonValue(m_update_line_item_shipping_details, json[QString("updateLineItemShippingDetails")]);
    m_update_line_item_shipping_details_isSet = !json[QString("updateLineItemShippingDetails")].isNull() && m_update_line_item_shipping_details_isValid;

    m_update_shipment_isValid = ::OpenAPI::fromJsonValue(m_update_shipment, json[QString("updateShipment")]);
    m_update_shipment_isSet = !json[QString("updateShipment")].isNull() && m_update_shipment_isValid;
}

QString OAIOrdersCustomBatchRequestEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrdersCustomBatchRequestEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_batch_id_isSet) {
        obj.insert(QString("batchId"), ::OpenAPI::toJsonValue(m_batch_id));
    }
    if (m_cancel.isSet()) {
        obj.insert(QString("cancel"), ::OpenAPI::toJsonValue(m_cancel));
    }
    if (m_cancel_line_item.isSet()) {
        obj.insert(QString("cancelLineItem"), ::OpenAPI::toJsonValue(m_cancel_line_item));
    }
    if (m_in_store_refund_line_item.isSet()) {
        obj.insert(QString("inStoreRefundLineItem"), ::OpenAPI::toJsonValue(m_in_store_refund_line_item));
    }
    if (m_merchant_id_isSet) {
        obj.insert(QString("merchantId"), ::OpenAPI::toJsonValue(m_merchant_id));
    }
    if (m_merchant_order_id_isSet) {
        obj.insert(QString("merchantOrderId"), ::OpenAPI::toJsonValue(m_merchant_order_id));
    }
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_operation_id_isSet) {
        obj.insert(QString("operationId"), ::OpenAPI::toJsonValue(m_operation_id));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("orderId"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_refund.isSet()) {
        obj.insert(QString("refund"), ::OpenAPI::toJsonValue(m_refund));
    }
    if (m_reject_return_line_item.isSet()) {
        obj.insert(QString("rejectReturnLineItem"), ::OpenAPI::toJsonValue(m_reject_return_line_item));
    }
    if (m_return_line_item.isSet()) {
        obj.insert(QString("returnLineItem"), ::OpenAPI::toJsonValue(m_return_line_item));
    }
    if (m_return_refund_line_item.isSet()) {
        obj.insert(QString("returnRefundLineItem"), ::OpenAPI::toJsonValue(m_return_refund_line_item));
    }
    if (m_set_line_item_metadata.isSet()) {
        obj.insert(QString("setLineItemMetadata"), ::OpenAPI::toJsonValue(m_set_line_item_metadata));
    }
    if (m_ship_line_items.isSet()) {
        obj.insert(QString("shipLineItems"), ::OpenAPI::toJsonValue(m_ship_line_items));
    }
    if (m_update_line_item_shipping_details.isSet()) {
        obj.insert(QString("updateLineItemShippingDetails"), ::OpenAPI::toJsonValue(m_update_line_item_shipping_details));
    }
    if (m_update_shipment.isSet()) {
        obj.insert(QString("updateShipment"), ::OpenAPI::toJsonValue(m_update_shipment));
    }
    return obj;
}

qint32 OAIOrdersCustomBatchRequestEntry::getBatchId() const {
    return m_batch_id;
}
void OAIOrdersCustomBatchRequestEntry::setBatchId(const qint32 &batch_id) {
    m_batch_id = batch_id;
    m_batch_id_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_batch_id_Set() const{
    return m_batch_id_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_batch_id_Valid() const{
    return m_batch_id_isValid;
}

OAIOrdersCustomBatchRequestEntryCancel OAIOrdersCustomBatchRequestEntry::getCancel() const {
    return m_cancel;
}
void OAIOrdersCustomBatchRequestEntry::setCancel(const OAIOrdersCustomBatchRequestEntryCancel &cancel) {
    m_cancel = cancel;
    m_cancel_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_cancel_Set() const{
    return m_cancel_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_cancel_Valid() const{
    return m_cancel_isValid;
}

OAIOrdersCustomBatchRequestEntryCancelLineItem OAIOrdersCustomBatchRequestEntry::getCancelLineItem() const {
    return m_cancel_line_item;
}
void OAIOrdersCustomBatchRequestEntry::setCancelLineItem(const OAIOrdersCustomBatchRequestEntryCancelLineItem &cancel_line_item) {
    m_cancel_line_item = cancel_line_item;
    m_cancel_line_item_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_cancel_line_item_Set() const{
    return m_cancel_line_item_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_cancel_line_item_Valid() const{
    return m_cancel_line_item_isValid;
}

OAIOrdersCustomBatchRequestEntryInStoreRefundLineItem OAIOrdersCustomBatchRequestEntry::getInStoreRefundLineItem() const {
    return m_in_store_refund_line_item;
}
void OAIOrdersCustomBatchRequestEntry::setInStoreRefundLineItem(const OAIOrdersCustomBatchRequestEntryInStoreRefundLineItem &in_store_refund_line_item) {
    m_in_store_refund_line_item = in_store_refund_line_item;
    m_in_store_refund_line_item_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_in_store_refund_line_item_Set() const{
    return m_in_store_refund_line_item_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_in_store_refund_line_item_Valid() const{
    return m_in_store_refund_line_item_isValid;
}

QString OAIOrdersCustomBatchRequestEntry::getMerchantId() const {
    return m_merchant_id;
}
void OAIOrdersCustomBatchRequestEntry::setMerchantId(const QString &merchant_id) {
    m_merchant_id = merchant_id;
    m_merchant_id_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_merchant_id_Set() const{
    return m_merchant_id_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_merchant_id_Valid() const{
    return m_merchant_id_isValid;
}

QString OAIOrdersCustomBatchRequestEntry::getMerchantOrderId() const {
    return m_merchant_order_id;
}
void OAIOrdersCustomBatchRequestEntry::setMerchantOrderId(const QString &merchant_order_id) {
    m_merchant_order_id = merchant_order_id;
    m_merchant_order_id_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_merchant_order_id_Set() const{
    return m_merchant_order_id_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_merchant_order_id_Valid() const{
    return m_merchant_order_id_isValid;
}

QString OAIOrdersCustomBatchRequestEntry::getMethod() const {
    return m_method;
}
void OAIOrdersCustomBatchRequestEntry::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_method_Set() const{
    return m_method_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_method_Valid() const{
    return m_method_isValid;
}

QString OAIOrdersCustomBatchRequestEntry::getOperationId() const {
    return m_operation_id;
}
void OAIOrdersCustomBatchRequestEntry::setOperationId(const QString &operation_id) {
    m_operation_id = operation_id;
    m_operation_id_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_operation_id_Set() const{
    return m_operation_id_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_operation_id_Valid() const{
    return m_operation_id_isValid;
}

QString OAIOrdersCustomBatchRequestEntry::getOrderId() const {
    return m_order_id;
}
void OAIOrdersCustomBatchRequestEntry::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_order_id_Valid() const{
    return m_order_id_isValid;
}

OAIOrdersCustomBatchRequestEntryRefund OAIOrdersCustomBatchRequestEntry::getRefund() const {
    return m_refund;
}
void OAIOrdersCustomBatchRequestEntry::setRefund(const OAIOrdersCustomBatchRequestEntryRefund &refund) {
    m_refund = refund;
    m_refund_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_refund_Set() const{
    return m_refund_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_refund_Valid() const{
    return m_refund_isValid;
}

OAIOrdersCustomBatchRequestEntryRejectReturnLineItem OAIOrdersCustomBatchRequestEntry::getRejectReturnLineItem() const {
    return m_reject_return_line_item;
}
void OAIOrdersCustomBatchRequestEntry::setRejectReturnLineItem(const OAIOrdersCustomBatchRequestEntryRejectReturnLineItem &reject_return_line_item) {
    m_reject_return_line_item = reject_return_line_item;
    m_reject_return_line_item_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_reject_return_line_item_Set() const{
    return m_reject_return_line_item_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_reject_return_line_item_Valid() const{
    return m_reject_return_line_item_isValid;
}

OAIOrdersCustomBatchRequestEntryReturnLineItem OAIOrdersCustomBatchRequestEntry::getReturnLineItem() const {
    return m_return_line_item;
}
void OAIOrdersCustomBatchRequestEntry::setReturnLineItem(const OAIOrdersCustomBatchRequestEntryReturnLineItem &return_line_item) {
    m_return_line_item = return_line_item;
    m_return_line_item_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_return_line_item_Set() const{
    return m_return_line_item_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_return_line_item_Valid() const{
    return m_return_line_item_isValid;
}

OAIOrdersCustomBatchRequestEntryReturnRefundLineItem OAIOrdersCustomBatchRequestEntry::getReturnRefundLineItem() const {
    return m_return_refund_line_item;
}
void OAIOrdersCustomBatchRequestEntry::setReturnRefundLineItem(const OAIOrdersCustomBatchRequestEntryReturnRefundLineItem &return_refund_line_item) {
    m_return_refund_line_item = return_refund_line_item;
    m_return_refund_line_item_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_return_refund_line_item_Set() const{
    return m_return_refund_line_item_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_return_refund_line_item_Valid() const{
    return m_return_refund_line_item_isValid;
}

OAIOrdersCustomBatchRequestEntrySetLineItemMetadata OAIOrdersCustomBatchRequestEntry::getSetLineItemMetadata() const {
    return m_set_line_item_metadata;
}
void OAIOrdersCustomBatchRequestEntry::setSetLineItemMetadata(const OAIOrdersCustomBatchRequestEntrySetLineItemMetadata &set_line_item_metadata) {
    m_set_line_item_metadata = set_line_item_metadata;
    m_set_line_item_metadata_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_set_line_item_metadata_Set() const{
    return m_set_line_item_metadata_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_set_line_item_metadata_Valid() const{
    return m_set_line_item_metadata_isValid;
}

OAIOrdersCustomBatchRequestEntryShipLineItems OAIOrdersCustomBatchRequestEntry::getShipLineItems() const {
    return m_ship_line_items;
}
void OAIOrdersCustomBatchRequestEntry::setShipLineItems(const OAIOrdersCustomBatchRequestEntryShipLineItems &ship_line_items) {
    m_ship_line_items = ship_line_items;
    m_ship_line_items_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_ship_line_items_Set() const{
    return m_ship_line_items_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_ship_line_items_Valid() const{
    return m_ship_line_items_isValid;
}

OAIOrdersCustomBatchRequestEntryUpdateLineItemShippingDetails OAIOrdersCustomBatchRequestEntry::getUpdateLineItemShippingDetails() const {
    return m_update_line_item_shipping_details;
}
void OAIOrdersCustomBatchRequestEntry::setUpdateLineItemShippingDetails(const OAIOrdersCustomBatchRequestEntryUpdateLineItemShippingDetails &update_line_item_shipping_details) {
    m_update_line_item_shipping_details = update_line_item_shipping_details;
    m_update_line_item_shipping_details_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_update_line_item_shipping_details_Set() const{
    return m_update_line_item_shipping_details_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_update_line_item_shipping_details_Valid() const{
    return m_update_line_item_shipping_details_isValid;
}

OAIOrdersCustomBatchRequestEntryUpdateShipment OAIOrdersCustomBatchRequestEntry::getUpdateShipment() const {
    return m_update_shipment;
}
void OAIOrdersCustomBatchRequestEntry::setUpdateShipment(const OAIOrdersCustomBatchRequestEntryUpdateShipment &update_shipment) {
    m_update_shipment = update_shipment;
    m_update_shipment_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntry::is_update_shipment_Set() const{
    return m_update_shipment_isSet;
}

bool OAIOrdersCustomBatchRequestEntry::is_update_shipment_Valid() const{
    return m_update_shipment_isValid;
}

bool OAIOrdersCustomBatchRequestEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_batch_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancel.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancel_line_item.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_in_store_refund_line_item.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refund.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reject_return_line_item.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_line_item.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_refund_line_item.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_set_line_item_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_line_items.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_line_item_shipping_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_shipment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrdersCustomBatchRequestEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
