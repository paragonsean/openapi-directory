/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPosDataProvidersPosDataProvider.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPosDataProvidersPosDataProvider::OAIPosDataProvidersPosDataProvider(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPosDataProvidersPosDataProvider::OAIPosDataProvidersPosDataProvider() {
    this->initializeModel();
}

OAIPosDataProvidersPosDataProvider::~OAIPosDataProvidersPosDataProvider() {}

void OAIPosDataProvidersPosDataProvider::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_provider_id_isSet = false;
    m_provider_id_isValid = false;
}

void OAIPosDataProvidersPosDataProvider::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPosDataProvidersPosDataProvider::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("fullName")]);
    m_full_name_isSet = !json[QString("fullName")].isNull() && m_full_name_isValid;

    m_provider_id_isValid = ::OpenAPI::fromJsonValue(m_provider_id, json[QString("providerId")]);
    m_provider_id_isSet = !json[QString("providerId")].isNull() && m_provider_id_isValid;
}

QString OAIPosDataProvidersPosDataProvider::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPosDataProvidersPosDataProvider::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_full_name_isSet) {
        obj.insert(QString("fullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_provider_id_isSet) {
        obj.insert(QString("providerId"), ::OpenAPI::toJsonValue(m_provider_id));
    }
    return obj;
}

QString OAIPosDataProvidersPosDataProvider::getDisplayName() const {
    return m_display_name;
}
void OAIPosDataProvidersPosDataProvider::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIPosDataProvidersPosDataProvider::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIPosDataProvidersPosDataProvider::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIPosDataProvidersPosDataProvider::getFullName() const {
    return m_full_name;
}
void OAIPosDataProvidersPosDataProvider::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAIPosDataProvidersPosDataProvider::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAIPosDataProvidersPosDataProvider::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAIPosDataProvidersPosDataProvider::getProviderId() const {
    return m_provider_id;
}
void OAIPosDataProvidersPosDataProvider::setProviderId(const QString &provider_id) {
    m_provider_id = provider_id;
    m_provider_id_isSet = true;
}

bool OAIPosDataProvidersPosDataProvider::is_provider_id_Set() const{
    return m_provider_id_isSet;
}

bool OAIPosDataProvidersPosDataProvider::is_provider_id_Valid() const{
    return m_provider_id_isValid;
}

bool OAIPosDataProvidersPosDataProvider::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPosDataProvidersPosDataProvider::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
