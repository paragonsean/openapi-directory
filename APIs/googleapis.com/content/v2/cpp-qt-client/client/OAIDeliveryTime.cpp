/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeliveryTime.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeliveryTime::OAIDeliveryTime(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeliveryTime::OAIDeliveryTime() {
    this->initializeModel();
}

OAIDeliveryTime::~OAIDeliveryTime() {}

void OAIDeliveryTime::initializeModel() {

    m_cutoff_time_isSet = false;
    m_cutoff_time_isValid = false;

    m_handling_business_day_config_isSet = false;
    m_handling_business_day_config_isValid = false;

    m_holiday_cutoffs_isSet = false;
    m_holiday_cutoffs_isValid = false;

    m_max_handling_time_in_days_isSet = false;
    m_max_handling_time_in_days_isValid = false;

    m_max_transit_time_in_days_isSet = false;
    m_max_transit_time_in_days_isValid = false;

    m_min_handling_time_in_days_isSet = false;
    m_min_handling_time_in_days_isValid = false;

    m_min_transit_time_in_days_isSet = false;
    m_min_transit_time_in_days_isValid = false;

    m_transit_business_day_config_isSet = false;
    m_transit_business_day_config_isValid = false;

    m_transit_time_table_isSet = false;
    m_transit_time_table_isValid = false;

    m_warehouse_based_delivery_times_isSet = false;
    m_warehouse_based_delivery_times_isValid = false;
}

void OAIDeliveryTime::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeliveryTime::fromJsonObject(QJsonObject json) {

    m_cutoff_time_isValid = ::OpenAPI::fromJsonValue(m_cutoff_time, json[QString("cutoffTime")]);
    m_cutoff_time_isSet = !json[QString("cutoffTime")].isNull() && m_cutoff_time_isValid;

    m_handling_business_day_config_isValid = ::OpenAPI::fromJsonValue(m_handling_business_day_config, json[QString("handlingBusinessDayConfig")]);
    m_handling_business_day_config_isSet = !json[QString("handlingBusinessDayConfig")].isNull() && m_handling_business_day_config_isValid;

    m_holiday_cutoffs_isValid = ::OpenAPI::fromJsonValue(m_holiday_cutoffs, json[QString("holidayCutoffs")]);
    m_holiday_cutoffs_isSet = !json[QString("holidayCutoffs")].isNull() && m_holiday_cutoffs_isValid;

    m_max_handling_time_in_days_isValid = ::OpenAPI::fromJsonValue(m_max_handling_time_in_days, json[QString("maxHandlingTimeInDays")]);
    m_max_handling_time_in_days_isSet = !json[QString("maxHandlingTimeInDays")].isNull() && m_max_handling_time_in_days_isValid;

    m_max_transit_time_in_days_isValid = ::OpenAPI::fromJsonValue(m_max_transit_time_in_days, json[QString("maxTransitTimeInDays")]);
    m_max_transit_time_in_days_isSet = !json[QString("maxTransitTimeInDays")].isNull() && m_max_transit_time_in_days_isValid;

    m_min_handling_time_in_days_isValid = ::OpenAPI::fromJsonValue(m_min_handling_time_in_days, json[QString("minHandlingTimeInDays")]);
    m_min_handling_time_in_days_isSet = !json[QString("minHandlingTimeInDays")].isNull() && m_min_handling_time_in_days_isValid;

    m_min_transit_time_in_days_isValid = ::OpenAPI::fromJsonValue(m_min_transit_time_in_days, json[QString("minTransitTimeInDays")]);
    m_min_transit_time_in_days_isSet = !json[QString("minTransitTimeInDays")].isNull() && m_min_transit_time_in_days_isValid;

    m_transit_business_day_config_isValid = ::OpenAPI::fromJsonValue(m_transit_business_day_config, json[QString("transitBusinessDayConfig")]);
    m_transit_business_day_config_isSet = !json[QString("transitBusinessDayConfig")].isNull() && m_transit_business_day_config_isValid;

    m_transit_time_table_isValid = ::OpenAPI::fromJsonValue(m_transit_time_table, json[QString("transitTimeTable")]);
    m_transit_time_table_isSet = !json[QString("transitTimeTable")].isNull() && m_transit_time_table_isValid;

    m_warehouse_based_delivery_times_isValid = ::OpenAPI::fromJsonValue(m_warehouse_based_delivery_times, json[QString("warehouseBasedDeliveryTimes")]);
    m_warehouse_based_delivery_times_isSet = !json[QString("warehouseBasedDeliveryTimes")].isNull() && m_warehouse_based_delivery_times_isValid;
}

QString OAIDeliveryTime::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeliveryTime::asJsonObject() const {
    QJsonObject obj;
    if (m_cutoff_time.isSet()) {
        obj.insert(QString("cutoffTime"), ::OpenAPI::toJsonValue(m_cutoff_time));
    }
    if (m_handling_business_day_config.isSet()) {
        obj.insert(QString("handlingBusinessDayConfig"), ::OpenAPI::toJsonValue(m_handling_business_day_config));
    }
    if (m_holiday_cutoffs.size() > 0) {
        obj.insert(QString("holidayCutoffs"), ::OpenAPI::toJsonValue(m_holiday_cutoffs));
    }
    if (m_max_handling_time_in_days_isSet) {
        obj.insert(QString("maxHandlingTimeInDays"), ::OpenAPI::toJsonValue(m_max_handling_time_in_days));
    }
    if (m_max_transit_time_in_days_isSet) {
        obj.insert(QString("maxTransitTimeInDays"), ::OpenAPI::toJsonValue(m_max_transit_time_in_days));
    }
    if (m_min_handling_time_in_days_isSet) {
        obj.insert(QString("minHandlingTimeInDays"), ::OpenAPI::toJsonValue(m_min_handling_time_in_days));
    }
    if (m_min_transit_time_in_days_isSet) {
        obj.insert(QString("minTransitTimeInDays"), ::OpenAPI::toJsonValue(m_min_transit_time_in_days));
    }
    if (m_transit_business_day_config.isSet()) {
        obj.insert(QString("transitBusinessDayConfig"), ::OpenAPI::toJsonValue(m_transit_business_day_config));
    }
    if (m_transit_time_table.isSet()) {
        obj.insert(QString("transitTimeTable"), ::OpenAPI::toJsonValue(m_transit_time_table));
    }
    if (m_warehouse_based_delivery_times.size() > 0) {
        obj.insert(QString("warehouseBasedDeliveryTimes"), ::OpenAPI::toJsonValue(m_warehouse_based_delivery_times));
    }
    return obj;
}

OAICutoffTime OAIDeliveryTime::getCutoffTime() const {
    return m_cutoff_time;
}
void OAIDeliveryTime::setCutoffTime(const OAICutoffTime &cutoff_time) {
    m_cutoff_time = cutoff_time;
    m_cutoff_time_isSet = true;
}

bool OAIDeliveryTime::is_cutoff_time_Set() const{
    return m_cutoff_time_isSet;
}

bool OAIDeliveryTime::is_cutoff_time_Valid() const{
    return m_cutoff_time_isValid;
}

OAIBusinessDayConfig OAIDeliveryTime::getHandlingBusinessDayConfig() const {
    return m_handling_business_day_config;
}
void OAIDeliveryTime::setHandlingBusinessDayConfig(const OAIBusinessDayConfig &handling_business_day_config) {
    m_handling_business_day_config = handling_business_day_config;
    m_handling_business_day_config_isSet = true;
}

bool OAIDeliveryTime::is_handling_business_day_config_Set() const{
    return m_handling_business_day_config_isSet;
}

bool OAIDeliveryTime::is_handling_business_day_config_Valid() const{
    return m_handling_business_day_config_isValid;
}

QList<OAIHolidayCutoff> OAIDeliveryTime::getHolidayCutoffs() const {
    return m_holiday_cutoffs;
}
void OAIDeliveryTime::setHolidayCutoffs(const QList<OAIHolidayCutoff> &holiday_cutoffs) {
    m_holiday_cutoffs = holiday_cutoffs;
    m_holiday_cutoffs_isSet = true;
}

bool OAIDeliveryTime::is_holiday_cutoffs_Set() const{
    return m_holiday_cutoffs_isSet;
}

bool OAIDeliveryTime::is_holiday_cutoffs_Valid() const{
    return m_holiday_cutoffs_isValid;
}

qint32 OAIDeliveryTime::getMaxHandlingTimeInDays() const {
    return m_max_handling_time_in_days;
}
void OAIDeliveryTime::setMaxHandlingTimeInDays(const qint32 &max_handling_time_in_days) {
    m_max_handling_time_in_days = max_handling_time_in_days;
    m_max_handling_time_in_days_isSet = true;
}

bool OAIDeliveryTime::is_max_handling_time_in_days_Set() const{
    return m_max_handling_time_in_days_isSet;
}

bool OAIDeliveryTime::is_max_handling_time_in_days_Valid() const{
    return m_max_handling_time_in_days_isValid;
}

qint32 OAIDeliveryTime::getMaxTransitTimeInDays() const {
    return m_max_transit_time_in_days;
}
void OAIDeliveryTime::setMaxTransitTimeInDays(const qint32 &max_transit_time_in_days) {
    m_max_transit_time_in_days = max_transit_time_in_days;
    m_max_transit_time_in_days_isSet = true;
}

bool OAIDeliveryTime::is_max_transit_time_in_days_Set() const{
    return m_max_transit_time_in_days_isSet;
}

bool OAIDeliveryTime::is_max_transit_time_in_days_Valid() const{
    return m_max_transit_time_in_days_isValid;
}

qint32 OAIDeliveryTime::getMinHandlingTimeInDays() const {
    return m_min_handling_time_in_days;
}
void OAIDeliveryTime::setMinHandlingTimeInDays(const qint32 &min_handling_time_in_days) {
    m_min_handling_time_in_days = min_handling_time_in_days;
    m_min_handling_time_in_days_isSet = true;
}

bool OAIDeliveryTime::is_min_handling_time_in_days_Set() const{
    return m_min_handling_time_in_days_isSet;
}

bool OAIDeliveryTime::is_min_handling_time_in_days_Valid() const{
    return m_min_handling_time_in_days_isValid;
}

qint32 OAIDeliveryTime::getMinTransitTimeInDays() const {
    return m_min_transit_time_in_days;
}
void OAIDeliveryTime::setMinTransitTimeInDays(const qint32 &min_transit_time_in_days) {
    m_min_transit_time_in_days = min_transit_time_in_days;
    m_min_transit_time_in_days_isSet = true;
}

bool OAIDeliveryTime::is_min_transit_time_in_days_Set() const{
    return m_min_transit_time_in_days_isSet;
}

bool OAIDeliveryTime::is_min_transit_time_in_days_Valid() const{
    return m_min_transit_time_in_days_isValid;
}

OAIBusinessDayConfig OAIDeliveryTime::getTransitBusinessDayConfig() const {
    return m_transit_business_day_config;
}
void OAIDeliveryTime::setTransitBusinessDayConfig(const OAIBusinessDayConfig &transit_business_day_config) {
    m_transit_business_day_config = transit_business_day_config;
    m_transit_business_day_config_isSet = true;
}

bool OAIDeliveryTime::is_transit_business_day_config_Set() const{
    return m_transit_business_day_config_isSet;
}

bool OAIDeliveryTime::is_transit_business_day_config_Valid() const{
    return m_transit_business_day_config_isValid;
}

OAITransitTable OAIDeliveryTime::getTransitTimeTable() const {
    return m_transit_time_table;
}
void OAIDeliveryTime::setTransitTimeTable(const OAITransitTable &transit_time_table) {
    m_transit_time_table = transit_time_table;
    m_transit_time_table_isSet = true;
}

bool OAIDeliveryTime::is_transit_time_table_Set() const{
    return m_transit_time_table_isSet;
}

bool OAIDeliveryTime::is_transit_time_table_Valid() const{
    return m_transit_time_table_isValid;
}

QList<OAIWarehouseBasedDeliveryTime> OAIDeliveryTime::getWarehouseBasedDeliveryTimes() const {
    return m_warehouse_based_delivery_times;
}
void OAIDeliveryTime::setWarehouseBasedDeliveryTimes(const QList<OAIWarehouseBasedDeliveryTime> &warehouse_based_delivery_times) {
    m_warehouse_based_delivery_times = warehouse_based_delivery_times;
    m_warehouse_based_delivery_times_isSet = true;
}

bool OAIDeliveryTime::is_warehouse_based_delivery_times_Set() const{
    return m_warehouse_based_delivery_times_isSet;
}

bool OAIDeliveryTime::is_warehouse_based_delivery_times_Valid() const{
    return m_warehouse_based_delivery_times_isValid;
}

bool OAIDeliveryTime::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cutoff_time.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_handling_business_day_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_holiday_cutoffs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_handling_time_in_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_transit_time_in_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_handling_time_in_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_transit_time_in_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transit_business_day_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transit_time_table.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_warehouse_based_delivery_times.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeliveryTime::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
