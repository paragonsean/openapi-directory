/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatafeedFetchSchedule.h
 *
 * The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.
 */

#ifndef OAIDatafeedFetchSchedule_H
#define OAIDatafeedFetchSchedule_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDatafeedFetchSchedule : public OAIObject {
public:
    OAIDatafeedFetchSchedule();
    OAIDatafeedFetchSchedule(QString json);
    ~OAIDatafeedFetchSchedule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDayOfMonth() const;
    void setDayOfMonth(const qint32 &day_of_month);
    bool is_day_of_month_Set() const;
    bool is_day_of_month_Valid() const;

    QString getFetchUrl() const;
    void setFetchUrl(const QString &fetch_url);
    bool is_fetch_url_Set() const;
    bool is_fetch_url_Valid() const;

    qint32 getHour() const;
    void setHour(const qint32 &hour);
    bool is_hour_Set() const;
    bool is_hour_Valid() const;

    qint32 getMinuteOfHour() const;
    void setMinuteOfHour(const qint32 &minute_of_hour);
    bool is_minute_of_hour_Set() const;
    bool is_minute_of_hour_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    bool isPaused() const;
    void setPaused(const bool &paused);
    bool is_paused_Set() const;
    bool is_paused_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QString getWeekday() const;
    void setWeekday(const QString &weekday);
    bool is_weekday_Set() const;
    bool is_weekday_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_day_of_month;
    bool m_day_of_month_isSet;
    bool m_day_of_month_isValid;

    QString m_fetch_url;
    bool m_fetch_url_isSet;
    bool m_fetch_url_isValid;

    qint32 m_hour;
    bool m_hour_isSet;
    bool m_hour_isValid;

    qint32 m_minute_of_hour;
    bool m_minute_of_hour_isSet;
    bool m_minute_of_hour_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    bool m_paused;
    bool m_paused_isSet;
    bool m_paused_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QString m_weekday;
    bool m_weekday_isSet;
    bool m_weekday_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatafeedFetchSchedule)

#endif // OAIDatafeedFetchSchedule_H
