/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestOrder.h
 *
 * 
 */

#ifndef OAITestOrder_H
#define OAITestOrder_H

#include <QJsonObject>

#include "OAIOrderLegacyPromotion.h"
#include "OAIPrice.h"
#include "OAITestOrderCustomer.h"
#include "OAITestOrderLineItem.h"
#include "OAITestOrderPaymentMethod.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITestOrderCustomer;
class OAITestOrderLineItem;
class OAITestOrderPaymentMethod;
class OAIOrderLegacyPromotion;
class OAIPrice;

class OAITestOrder : public OAIObject {
public:
    OAITestOrder();
    OAITestOrder(QString json);
    ~OAITestOrder() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITestOrderCustomer getCustomer() const;
    void setCustomer(const OAITestOrderCustomer &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    bool isEnableOrderinvoices() const;
    void setEnableOrderinvoices(const bool &enable_orderinvoices);
    bool is_enable_orderinvoices_Set() const;
    bool is_enable_orderinvoices_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QList<OAITestOrderLineItem> getLineItems() const;
    void setLineItems(const QList<OAITestOrderLineItem> &line_items);
    bool is_line_items_Set() const;
    bool is_line_items_Valid() const;

    QString getNotificationMode() const;
    void setNotificationMode(const QString &notification_mode);
    bool is_notification_mode_Set() const;
    bool is_notification_mode_Valid() const;

    OAITestOrderPaymentMethod getPaymentMethod() const;
    void setPaymentMethod(const OAITestOrderPaymentMethod &payment_method);
    bool is_payment_method_Set() const;
    bool is_payment_method_Valid() const;

    QString getPredefinedDeliveryAddress() const;
    void setPredefinedDeliveryAddress(const QString &predefined_delivery_address);
    bool is_predefined_delivery_address_Set() const;
    bool is_predefined_delivery_address_Valid() const;

    QString getPredefinedPickupDetails() const;
    void setPredefinedPickupDetails(const QString &predefined_pickup_details);
    bool is_predefined_pickup_details_Set() const;
    bool is_predefined_pickup_details_Valid() const;

    QList<OAIOrderLegacyPromotion> getPromotions() const;
    void setPromotions(const QList<OAIOrderLegacyPromotion> &promotions);
    bool is_promotions_Set() const;
    bool is_promotions_Valid() const;

    OAIPrice getShippingCost() const;
    void setShippingCost(const OAIPrice &shipping_cost);
    bool is_shipping_cost_Set() const;
    bool is_shipping_cost_Valid() const;

    OAIPrice getShippingCostTax() const;
    void setShippingCostTax(const OAIPrice &shipping_cost_tax);
    bool is_shipping_cost_tax_Set() const;
    bool is_shipping_cost_tax_Valid() const;

    QString getShippingOption() const;
    void setShippingOption(const QString &shipping_option);
    bool is_shipping_option_Set() const;
    bool is_shipping_option_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITestOrderCustomer m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    bool m_enable_orderinvoices;
    bool m_enable_orderinvoices_isSet;
    bool m_enable_orderinvoices_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QList<OAITestOrderLineItem> m_line_items;
    bool m_line_items_isSet;
    bool m_line_items_isValid;

    QString m_notification_mode;
    bool m_notification_mode_isSet;
    bool m_notification_mode_isValid;

    OAITestOrderPaymentMethod m_payment_method;
    bool m_payment_method_isSet;
    bool m_payment_method_isValid;

    QString m_predefined_delivery_address;
    bool m_predefined_delivery_address_isSet;
    bool m_predefined_delivery_address_isValid;

    QString m_predefined_pickup_details;
    bool m_predefined_pickup_details_isSet;
    bool m_predefined_pickup_details_isValid;

    QList<OAIOrderLegacyPromotion> m_promotions;
    bool m_promotions_isSet;
    bool m_promotions_isValid;

    OAIPrice m_shipping_cost;
    bool m_shipping_cost_isSet;
    bool m_shipping_cost_isValid;

    OAIPrice m_shipping_cost_tax;
    bool m_shipping_cost_tax_isSet;
    bool m_shipping_cost_tax_isValid;

    QString m_shipping_option;
    bool m_shipping_option_isSet;
    bool m_shipping_option_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestOrder)

#endif // OAITestOrder_H
