# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_line_item_return_info import OrderLineItemReturnInfo
from openapi_server.models.order_line_item_shipping_details import OrderLineItemShippingDetails
from openapi_server.models.price import Price
from openapi_server.models.test_order_line_item_product import TestOrderLineItemProduct
from openapi_server import util


class TestOrderLineItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product: TestOrderLineItemProduct=None, quantity_ordered: int=None, return_info: OrderLineItemReturnInfo=None, shipping_details: OrderLineItemShippingDetails=None, unit_tax: Price=None):
        """TestOrderLineItem - a model defined in OpenAPI

        :param product: The product of this TestOrderLineItem.
        :param quantity_ordered: The quantity_ordered of this TestOrderLineItem.
        :param return_info: The return_info of this TestOrderLineItem.
        :param shipping_details: The shipping_details of this TestOrderLineItem.
        :param unit_tax: The unit_tax of this TestOrderLineItem.
        """
        self.openapi_types = {
            'product': TestOrderLineItemProduct,
            'quantity_ordered': int,
            'return_info': OrderLineItemReturnInfo,
            'shipping_details': OrderLineItemShippingDetails,
            'unit_tax': Price
        }

        self.attribute_map = {
            'product': 'product',
            'quantity_ordered': 'quantityOrdered',
            'return_info': 'returnInfo',
            'shipping_details': 'shippingDetails',
            'unit_tax': 'unitTax'
        }

        self._product = product
        self._quantity_ordered = quantity_ordered
        self._return_info = return_info
        self._shipping_details = shipping_details
        self._unit_tax = unit_tax

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestOrderLineItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestOrderLineItem of this TestOrderLineItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product(self):
        """Gets the product of this TestOrderLineItem.


        :return: The product of this TestOrderLineItem.
        :rtype: TestOrderLineItemProduct
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this TestOrderLineItem.


        :param product: The product of this TestOrderLineItem.
        :type product: TestOrderLineItemProduct
        """

        self._product = product

    @property
    def quantity_ordered(self):
        """Gets the quantity_ordered of this TestOrderLineItem.

        Required. Number of items ordered.

        :return: The quantity_ordered of this TestOrderLineItem.
        :rtype: int
        """
        return self._quantity_ordered

    @quantity_ordered.setter
    def quantity_ordered(self, quantity_ordered):
        """Sets the quantity_ordered of this TestOrderLineItem.

        Required. Number of items ordered.

        :param quantity_ordered: The quantity_ordered of this TestOrderLineItem.
        :type quantity_ordered: int
        """

        self._quantity_ordered = quantity_ordered

    @property
    def return_info(self):
        """Gets the return_info of this TestOrderLineItem.


        :return: The return_info of this TestOrderLineItem.
        :rtype: OrderLineItemReturnInfo
        """
        return self._return_info

    @return_info.setter
    def return_info(self, return_info):
        """Sets the return_info of this TestOrderLineItem.


        :param return_info: The return_info of this TestOrderLineItem.
        :type return_info: OrderLineItemReturnInfo
        """

        self._return_info = return_info

    @property
    def shipping_details(self):
        """Gets the shipping_details of this TestOrderLineItem.


        :return: The shipping_details of this TestOrderLineItem.
        :rtype: OrderLineItemShippingDetails
        """
        return self._shipping_details

    @shipping_details.setter
    def shipping_details(self, shipping_details):
        """Sets the shipping_details of this TestOrderLineItem.


        :param shipping_details: The shipping_details of this TestOrderLineItem.
        :type shipping_details: OrderLineItemShippingDetails
        """

        self._shipping_details = shipping_details

    @property
    def unit_tax(self):
        """Gets the unit_tax of this TestOrderLineItem.


        :return: The unit_tax of this TestOrderLineItem.
        :rtype: Price
        """
        return self._unit_tax

    @unit_tax.setter
    def unit_tax(self, unit_tax):
        """Sets the unit_tax of this TestOrderLineItem.


        :param unit_tax: The unit_tax of this TestOrderLineItem.
        :type unit_tax: Price
        """

        self._unit_tax = unit_tax
