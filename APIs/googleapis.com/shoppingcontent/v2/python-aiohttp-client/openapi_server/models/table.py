# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.headers import Headers
from openapi_server.models.row import Row
from openapi_server import util


class Table(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column_headers: Headers=None, name: str=None, row_headers: Headers=None, rows: List[Row]=None):
        """Table - a model defined in OpenAPI

        :param column_headers: The column_headers of this Table.
        :param name: The name of this Table.
        :param row_headers: The row_headers of this Table.
        :param rows: The rows of this Table.
        """
        self.openapi_types = {
            'column_headers': Headers,
            'name': str,
            'row_headers': Headers,
            'rows': List[Row]
        }

        self.attribute_map = {
            'column_headers': 'columnHeaders',
            'name': 'name',
            'row_headers': 'rowHeaders',
            'rows': 'rows'
        }

        self._column_headers = column_headers
        self._name = name
        self._row_headers = row_headers
        self._rows = rows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Table':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Table of this Table.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_headers(self):
        """Gets the column_headers of this Table.


        :return: The column_headers of this Table.
        :rtype: Headers
        """
        return self._column_headers

    @column_headers.setter
    def column_headers(self, column_headers):
        """Sets the column_headers of this Table.


        :param column_headers: The column_headers of this Table.
        :type column_headers: Headers
        """

        self._column_headers = column_headers

    @property
    def name(self):
        """Gets the name of this Table.

        Name of the table. Required for subtables, ignored for the main table.

        :return: The name of this Table.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Table.

        Name of the table. Required for subtables, ignored for the main table.

        :param name: The name of this Table.
        :type name: str
        """

        self._name = name

    @property
    def row_headers(self):
        """Gets the row_headers of this Table.


        :return: The row_headers of this Table.
        :rtype: Headers
        """
        return self._row_headers

    @row_headers.setter
    def row_headers(self, row_headers):
        """Sets the row_headers of this Table.


        :param row_headers: The row_headers of this Table.
        :type row_headers: Headers
        """

        self._row_headers = row_headers

    @property
    def rows(self):
        """Gets the rows of this Table.

        The list of rows that constitute the table. Must have the same length as `rowHeaders`. Required.

        :return: The rows of this Table.
        :rtype: List[Row]
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this Table.

        The list of rows that constitute the table. Must have the same length as `rowHeaders`. Required.

        :param rows: The rows of this Table.
        :type rows: List[Row]
        """

        self._rows = rows
