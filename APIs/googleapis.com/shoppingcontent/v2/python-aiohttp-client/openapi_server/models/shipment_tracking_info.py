# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShipmentTrackingInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, carrier: str=None, tracking_number: str=None):
        """ShipmentTrackingInfo - a model defined in OpenAPI

        :param carrier: The carrier of this ShipmentTrackingInfo.
        :param tracking_number: The tracking_number of this ShipmentTrackingInfo.
        """
        self.openapi_types = {
            'carrier': str,
            'tracking_number': str
        }

        self.attribute_map = {
            'carrier': 'carrier',
            'tracking_number': 'trackingNumber'
        }

        self._carrier = carrier
        self._tracking_number = tracking_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShipmentTrackingInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShipmentTrackingInfo of this ShipmentTrackingInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def carrier(self):
        """Gets the carrier of this ShipmentTrackingInfo.

        The shipping carrier that handles the package. Acceptable values are: - \"`boxtal`\" - \"`bpost`\" - \"`chronopost`\" - \"`colisPrive`\" - \"`colissimo`\" - \"`cxt`\" - \"`deliv`\" - \"`dhl`\" - \"`dpd`\" - \"`dynamex`\" - \"`eCourier`\" - \"`easypost`\" - \"`efw`\" - \"`fedex`\" - \"`fedexSmartpost`\" - \"`geodis`\" - \"`gls`\" - \"`googleCourier`\" - \"`gsx`\" - \"`jdLogistics`\" - \"`laPoste`\" - \"`lasership`\" - \"`manual`\" - \"`mpx`\" - \"`onTrac`\" - \"`other`\" - \"`tnt`\" - \"`uds`\" - \"`ups`\" - \"`usps`\" 

        :return: The carrier of this ShipmentTrackingInfo.
        :rtype: str
        """
        return self._carrier

    @carrier.setter
    def carrier(self, carrier):
        """Sets the carrier of this ShipmentTrackingInfo.

        The shipping carrier that handles the package. Acceptable values are: - \"`boxtal`\" - \"`bpost`\" - \"`chronopost`\" - \"`colisPrive`\" - \"`colissimo`\" - \"`cxt`\" - \"`deliv`\" - \"`dhl`\" - \"`dpd`\" - \"`dynamex`\" - \"`eCourier`\" - \"`easypost`\" - \"`efw`\" - \"`fedex`\" - \"`fedexSmartpost`\" - \"`geodis`\" - \"`gls`\" - \"`googleCourier`\" - \"`gsx`\" - \"`jdLogistics`\" - \"`laPoste`\" - \"`lasership`\" - \"`manual`\" - \"`mpx`\" - \"`onTrac`\" - \"`other`\" - \"`tnt`\" - \"`uds`\" - \"`ups`\" - \"`usps`\" 

        :param carrier: The carrier of this ShipmentTrackingInfo.
        :type carrier: str
        """

        self._carrier = carrier

    @property
    def tracking_number(self):
        """Gets the tracking_number of this ShipmentTrackingInfo.

        The tracking number for the package.

        :return: The tracking_number of this ShipmentTrackingInfo.
        :rtype: str
        """
        return self._tracking_number

    @tracking_number.setter
    def tracking_number(self, tracking_number):
        """Sets the tracking_number of this ShipmentTrackingInfo.

        The tracking number for the package.

        :param tracking_number: The tracking_number of this ShipmentTrackingInfo.
        :type tracking_number: str
        """

        self._tracking_number = tracking_number
