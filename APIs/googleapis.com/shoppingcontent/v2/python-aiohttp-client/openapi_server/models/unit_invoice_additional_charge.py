# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server.models.promotion import Promotion
from openapi_server import util


class UnitInvoiceAdditionalCharge(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_charge_amount: Amount=None, additional_charge_promotions: List[Promotion]=None, type: str=None):
        """UnitInvoiceAdditionalCharge - a model defined in OpenAPI

        :param additional_charge_amount: The additional_charge_amount of this UnitInvoiceAdditionalCharge.
        :param additional_charge_promotions: The additional_charge_promotions of this UnitInvoiceAdditionalCharge.
        :param type: The type of this UnitInvoiceAdditionalCharge.
        """
        self.openapi_types = {
            'additional_charge_amount': Amount,
            'additional_charge_promotions': List[Promotion],
            'type': str
        }

        self.attribute_map = {
            'additional_charge_amount': 'additionalChargeAmount',
            'additional_charge_promotions': 'additionalChargePromotions',
            'type': 'type'
        }

        self._additional_charge_amount = additional_charge_amount
        self._additional_charge_promotions = additional_charge_promotions
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnitInvoiceAdditionalCharge':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UnitInvoiceAdditionalCharge of this UnitInvoiceAdditionalCharge.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_charge_amount(self):
        """Gets the additional_charge_amount of this UnitInvoiceAdditionalCharge.


        :return: The additional_charge_amount of this UnitInvoiceAdditionalCharge.
        :rtype: Amount
        """
        return self._additional_charge_amount

    @additional_charge_amount.setter
    def additional_charge_amount(self, additional_charge_amount):
        """Sets the additional_charge_amount of this UnitInvoiceAdditionalCharge.


        :param additional_charge_amount: The additional_charge_amount of this UnitInvoiceAdditionalCharge.
        :type additional_charge_amount: Amount
        """

        self._additional_charge_amount = additional_charge_amount

    @property
    def additional_charge_promotions(self):
        """Gets the additional_charge_promotions of this UnitInvoiceAdditionalCharge.

        Deprecated.

        :return: The additional_charge_promotions of this UnitInvoiceAdditionalCharge.
        :rtype: List[Promotion]
        """
        return self._additional_charge_promotions

    @additional_charge_promotions.setter
    def additional_charge_promotions(self, additional_charge_promotions):
        """Sets the additional_charge_promotions of this UnitInvoiceAdditionalCharge.

        Deprecated.

        :param additional_charge_promotions: The additional_charge_promotions of this UnitInvoiceAdditionalCharge.
        :type additional_charge_promotions: List[Promotion]
        """

        self._additional_charge_promotions = additional_charge_promotions

    @property
    def type(self):
        """Gets the type of this UnitInvoiceAdditionalCharge.

        [required] Type of the additional charge. Acceptable values are: - \"`shipping`\" 

        :return: The type of this UnitInvoiceAdditionalCharge.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UnitInvoiceAdditionalCharge.

        [required] Type of the additional charge. Acceptable values are: - \"`shipping`\" 

        :param type: The type of this UnitInvoiceAdditionalCharge.
        :type type: str
        """

        self._type = type
