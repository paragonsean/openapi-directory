# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server import util


class Promotion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, promotion_amount: Amount=None, promotion_id: str=None):
        """Promotion - a model defined in OpenAPI

        :param promotion_amount: The promotion_amount of this Promotion.
        :param promotion_id: The promotion_id of this Promotion.
        """
        self.openapi_types = {
            'promotion_amount': Amount,
            'promotion_id': str
        }

        self.attribute_map = {
            'promotion_amount': 'promotionAmount',
            'promotion_id': 'promotionId'
        }

        self._promotion_amount = promotion_amount
        self._promotion_id = promotion_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Promotion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Promotion of this Promotion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def promotion_amount(self):
        """Gets the promotion_amount of this Promotion.


        :return: The promotion_amount of this Promotion.
        :rtype: Amount
        """
        return self._promotion_amount

    @promotion_amount.setter
    def promotion_amount(self, promotion_amount):
        """Sets the promotion_amount of this Promotion.


        :param promotion_amount: The promotion_amount of this Promotion.
        :type promotion_amount: Amount
        """

        self._promotion_amount = promotion_amount

    @property
    def promotion_id(self):
        """Gets the promotion_id of this Promotion.

        [required] ID of the promotion.

        :return: The promotion_id of this Promotion.
        :rtype: str
        """
        return self._promotion_id

    @promotion_id.setter
    def promotion_id(self, promotion_id):
        """Sets the promotion_id of this Promotion.

        [required] ID of the promotion.

        :param promotion_id: The promotion_id of this Promotion.
        :type promotion_id: str
        """

        self._promotion_id = promotion_id
