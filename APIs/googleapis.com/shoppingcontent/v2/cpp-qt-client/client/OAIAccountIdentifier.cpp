/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountIdentifier.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountIdentifier::OAIAccountIdentifier(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountIdentifier::OAIAccountIdentifier() {
    this->initializeModel();
}

OAIAccountIdentifier::~OAIAccountIdentifier() {}

void OAIAccountIdentifier::initializeModel() {

    m_aggregator_id_isSet = false;
    m_aggregator_id_isValid = false;

    m_merchant_id_isSet = false;
    m_merchant_id_isValid = false;
}

void OAIAccountIdentifier::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountIdentifier::fromJsonObject(QJsonObject json) {

    m_aggregator_id_isValid = ::OpenAPI::fromJsonValue(m_aggregator_id, json[QString("aggregatorId")]);
    m_aggregator_id_isSet = !json[QString("aggregatorId")].isNull() && m_aggregator_id_isValid;

    m_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_id, json[QString("merchantId")]);
    m_merchant_id_isSet = !json[QString("merchantId")].isNull() && m_merchant_id_isValid;
}

QString OAIAccountIdentifier::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountIdentifier::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregator_id_isSet) {
        obj.insert(QString("aggregatorId"), ::OpenAPI::toJsonValue(m_aggregator_id));
    }
    if (m_merchant_id_isSet) {
        obj.insert(QString("merchantId"), ::OpenAPI::toJsonValue(m_merchant_id));
    }
    return obj;
}

QString OAIAccountIdentifier::getAggregatorId() const {
    return m_aggregator_id;
}
void OAIAccountIdentifier::setAggregatorId(const QString &aggregator_id) {
    m_aggregator_id = aggregator_id;
    m_aggregator_id_isSet = true;
}

bool OAIAccountIdentifier::is_aggregator_id_Set() const{
    return m_aggregator_id_isSet;
}

bool OAIAccountIdentifier::is_aggregator_id_Valid() const{
    return m_aggregator_id_isValid;
}

QString OAIAccountIdentifier::getMerchantId() const {
    return m_merchant_id;
}
void OAIAccountIdentifier::setMerchantId(const QString &merchant_id) {
    m_merchant_id = merchant_id;
    m_merchant_id_isSet = true;
}

bool OAIAccountIdentifier::is_merchant_id_Set() const{
    return m_merchant_id_isSet;
}

bool OAIAccountIdentifier::is_merchant_id_Valid() const{
    return m_merchant_id_isValid;
}

bool OAIAccountIdentifier::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregator_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountIdentifier::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
