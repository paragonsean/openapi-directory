/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrdersSetLineItemMetadataRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrdersSetLineItemMetadataRequest::OAIOrdersSetLineItemMetadataRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrdersSetLineItemMetadataRequest::OAIOrdersSetLineItemMetadataRequest() {
    this->initializeModel();
}

OAIOrdersSetLineItemMetadataRequest::~OAIOrdersSetLineItemMetadataRequest() {}

void OAIOrdersSetLineItemMetadataRequest::initializeModel() {

    m_annotations_isSet = false;
    m_annotations_isValid = false;

    m_line_item_id_isSet = false;
    m_line_item_id_isValid = false;

    m_operation_id_isSet = false;
    m_operation_id_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;
}

void OAIOrdersSetLineItemMetadataRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrdersSetLineItemMetadataRequest::fromJsonObject(QJsonObject json) {

    m_annotations_isValid = ::OpenAPI::fromJsonValue(m_annotations, json[QString("annotations")]);
    m_annotations_isSet = !json[QString("annotations")].isNull() && m_annotations_isValid;

    m_line_item_id_isValid = ::OpenAPI::fromJsonValue(m_line_item_id, json[QString("lineItemId")]);
    m_line_item_id_isSet = !json[QString("lineItemId")].isNull() && m_line_item_id_isValid;

    m_operation_id_isValid = ::OpenAPI::fromJsonValue(m_operation_id, json[QString("operationId")]);
    m_operation_id_isSet = !json[QString("operationId")].isNull() && m_operation_id_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("productId")]);
    m_product_id_isSet = !json[QString("productId")].isNull() && m_product_id_isValid;
}

QString OAIOrdersSetLineItemMetadataRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrdersSetLineItemMetadataRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_annotations.size() > 0) {
        obj.insert(QString("annotations"), ::OpenAPI::toJsonValue(m_annotations));
    }
    if (m_line_item_id_isSet) {
        obj.insert(QString("lineItemId"), ::OpenAPI::toJsonValue(m_line_item_id));
    }
    if (m_operation_id_isSet) {
        obj.insert(QString("operationId"), ::OpenAPI::toJsonValue(m_operation_id));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("productId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    return obj;
}

QList<OAIOrderMerchantProvidedAnnotation> OAIOrdersSetLineItemMetadataRequest::getAnnotations() const {
    return m_annotations;
}
void OAIOrdersSetLineItemMetadataRequest::setAnnotations(const QList<OAIOrderMerchantProvidedAnnotation> &annotations) {
    m_annotations = annotations;
    m_annotations_isSet = true;
}

bool OAIOrdersSetLineItemMetadataRequest::is_annotations_Set() const{
    return m_annotations_isSet;
}

bool OAIOrdersSetLineItemMetadataRequest::is_annotations_Valid() const{
    return m_annotations_isValid;
}

QString OAIOrdersSetLineItemMetadataRequest::getLineItemId() const {
    return m_line_item_id;
}
void OAIOrdersSetLineItemMetadataRequest::setLineItemId(const QString &line_item_id) {
    m_line_item_id = line_item_id;
    m_line_item_id_isSet = true;
}

bool OAIOrdersSetLineItemMetadataRequest::is_line_item_id_Set() const{
    return m_line_item_id_isSet;
}

bool OAIOrdersSetLineItemMetadataRequest::is_line_item_id_Valid() const{
    return m_line_item_id_isValid;
}

QString OAIOrdersSetLineItemMetadataRequest::getOperationId() const {
    return m_operation_id;
}
void OAIOrdersSetLineItemMetadataRequest::setOperationId(const QString &operation_id) {
    m_operation_id = operation_id;
    m_operation_id_isSet = true;
}

bool OAIOrdersSetLineItemMetadataRequest::is_operation_id_Set() const{
    return m_operation_id_isSet;
}

bool OAIOrdersSetLineItemMetadataRequest::is_operation_id_Valid() const{
    return m_operation_id_isValid;
}

QString OAIOrdersSetLineItemMetadataRequest::getProductId() const {
    return m_product_id;
}
void OAIOrdersSetLineItemMetadataRequest::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIOrdersSetLineItemMetadataRequest::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIOrdersSetLineItemMetadataRequest::is_product_id_Valid() const{
    return m_product_id_isValid;
}

bool OAIOrdersSetLineItemMetadataRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrdersSetLineItemMetadataRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
