/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrdersCustomBatchRequestEntryUpdateShipment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrdersCustomBatchRequestEntryUpdateShipment::OAIOrdersCustomBatchRequestEntryUpdateShipment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrdersCustomBatchRequestEntryUpdateShipment::OAIOrdersCustomBatchRequestEntryUpdateShipment() {
    this->initializeModel();
}

OAIOrdersCustomBatchRequestEntryUpdateShipment::~OAIOrdersCustomBatchRequestEntryUpdateShipment() {}

void OAIOrdersCustomBatchRequestEntryUpdateShipment::initializeModel() {

    m_carrier_isSet = false;
    m_carrier_isValid = false;

    m_delivery_date_isSet = false;
    m_delivery_date_isValid = false;

    m_shipment_id_isSet = false;
    m_shipment_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_tracking_id_isSet = false;
    m_tracking_id_isValid = false;
}

void OAIOrdersCustomBatchRequestEntryUpdateShipment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrdersCustomBatchRequestEntryUpdateShipment::fromJsonObject(QJsonObject json) {

    m_carrier_isValid = ::OpenAPI::fromJsonValue(m_carrier, json[QString("carrier")]);
    m_carrier_isSet = !json[QString("carrier")].isNull() && m_carrier_isValid;

    m_delivery_date_isValid = ::OpenAPI::fromJsonValue(m_delivery_date, json[QString("deliveryDate")]);
    m_delivery_date_isSet = !json[QString("deliveryDate")].isNull() && m_delivery_date_isValid;

    m_shipment_id_isValid = ::OpenAPI::fromJsonValue(m_shipment_id, json[QString("shipmentId")]);
    m_shipment_id_isSet = !json[QString("shipmentId")].isNull() && m_shipment_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_tracking_id_isValid = ::OpenAPI::fromJsonValue(m_tracking_id, json[QString("trackingId")]);
    m_tracking_id_isSet = !json[QString("trackingId")].isNull() && m_tracking_id_isValid;
}

QString OAIOrdersCustomBatchRequestEntryUpdateShipment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrdersCustomBatchRequestEntryUpdateShipment::asJsonObject() const {
    QJsonObject obj;
    if (m_carrier_isSet) {
        obj.insert(QString("carrier"), ::OpenAPI::toJsonValue(m_carrier));
    }
    if (m_delivery_date_isSet) {
        obj.insert(QString("deliveryDate"), ::OpenAPI::toJsonValue(m_delivery_date));
    }
    if (m_shipment_id_isSet) {
        obj.insert(QString("shipmentId"), ::OpenAPI::toJsonValue(m_shipment_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_tracking_id_isSet) {
        obj.insert(QString("trackingId"), ::OpenAPI::toJsonValue(m_tracking_id));
    }
    return obj;
}

QString OAIOrdersCustomBatchRequestEntryUpdateShipment::getCarrier() const {
    return m_carrier;
}
void OAIOrdersCustomBatchRequestEntryUpdateShipment::setCarrier(const QString &carrier) {
    m_carrier = carrier;
    m_carrier_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntryUpdateShipment::is_carrier_Set() const{
    return m_carrier_isSet;
}

bool OAIOrdersCustomBatchRequestEntryUpdateShipment::is_carrier_Valid() const{
    return m_carrier_isValid;
}

QString OAIOrdersCustomBatchRequestEntryUpdateShipment::getDeliveryDate() const {
    return m_delivery_date;
}
void OAIOrdersCustomBatchRequestEntryUpdateShipment::setDeliveryDate(const QString &delivery_date) {
    m_delivery_date = delivery_date;
    m_delivery_date_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntryUpdateShipment::is_delivery_date_Set() const{
    return m_delivery_date_isSet;
}

bool OAIOrdersCustomBatchRequestEntryUpdateShipment::is_delivery_date_Valid() const{
    return m_delivery_date_isValid;
}

QString OAIOrdersCustomBatchRequestEntryUpdateShipment::getShipmentId() const {
    return m_shipment_id;
}
void OAIOrdersCustomBatchRequestEntryUpdateShipment::setShipmentId(const QString &shipment_id) {
    m_shipment_id = shipment_id;
    m_shipment_id_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntryUpdateShipment::is_shipment_id_Set() const{
    return m_shipment_id_isSet;
}

bool OAIOrdersCustomBatchRequestEntryUpdateShipment::is_shipment_id_Valid() const{
    return m_shipment_id_isValid;
}

QString OAIOrdersCustomBatchRequestEntryUpdateShipment::getStatus() const {
    return m_status;
}
void OAIOrdersCustomBatchRequestEntryUpdateShipment::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntryUpdateShipment::is_status_Set() const{
    return m_status_isSet;
}

bool OAIOrdersCustomBatchRequestEntryUpdateShipment::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIOrdersCustomBatchRequestEntryUpdateShipment::getTrackingId() const {
    return m_tracking_id;
}
void OAIOrdersCustomBatchRequestEntryUpdateShipment::setTrackingId(const QString &tracking_id) {
    m_tracking_id = tracking_id;
    m_tracking_id_isSet = true;
}

bool OAIOrdersCustomBatchRequestEntryUpdateShipment::is_tracking_id_Set() const{
    return m_tracking_id_isSet;
}

bool OAIOrdersCustomBatchRequestEntryUpdateShipment::is_tracking_id_Valid() const{
    return m_tracking_id_isValid;
}

bool OAIOrdersCustomBatchRequestEntryUpdateShipment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_carrier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrdersCustomBatchRequestEntryUpdateShipment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
