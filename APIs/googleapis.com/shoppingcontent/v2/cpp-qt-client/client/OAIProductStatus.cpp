/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductStatus::OAIProductStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductStatus::OAIProductStatus() {
    this->initializeModel();
}

OAIProductStatus::~OAIProductStatus() {}

void OAIProductStatus::initializeModel() {

    m_creation_date_isSet = false;
    m_creation_date_isValid = false;

    m_data_quality_issues_isSet = false;
    m_data_quality_issues_isValid = false;

    m_destination_statuses_isSet = false;
    m_destination_statuses_isValid = false;

    m_google_expiration_date_isSet = false;
    m_google_expiration_date_isValid = false;

    m_item_level_issues_isSet = false;
    m_item_level_issues_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_last_update_date_isSet = false;
    m_last_update_date_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_product_isSet = false;
    m_product_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIProductStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductStatus::fromJsonObject(QJsonObject json) {

    m_creation_date_isValid = ::OpenAPI::fromJsonValue(m_creation_date, json[QString("creationDate")]);
    m_creation_date_isSet = !json[QString("creationDate")].isNull() && m_creation_date_isValid;

    m_data_quality_issues_isValid = ::OpenAPI::fromJsonValue(m_data_quality_issues, json[QString("dataQualityIssues")]);
    m_data_quality_issues_isSet = !json[QString("dataQualityIssues")].isNull() && m_data_quality_issues_isValid;

    m_destination_statuses_isValid = ::OpenAPI::fromJsonValue(m_destination_statuses, json[QString("destinationStatuses")]);
    m_destination_statuses_isSet = !json[QString("destinationStatuses")].isNull() && m_destination_statuses_isValid;

    m_google_expiration_date_isValid = ::OpenAPI::fromJsonValue(m_google_expiration_date, json[QString("googleExpirationDate")]);
    m_google_expiration_date_isSet = !json[QString("googleExpirationDate")].isNull() && m_google_expiration_date_isValid;

    m_item_level_issues_isValid = ::OpenAPI::fromJsonValue(m_item_level_issues, json[QString("itemLevelIssues")]);
    m_item_level_issues_isSet = !json[QString("itemLevelIssues")].isNull() && m_item_level_issues_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_last_update_date_isValid = ::OpenAPI::fromJsonValue(m_last_update_date, json[QString("lastUpdateDate")]);
    m_last_update_date_isSet = !json[QString("lastUpdateDate")].isNull() && m_last_update_date_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_product_isValid = ::OpenAPI::fromJsonValue(m_product, json[QString("product")]);
    m_product_isSet = !json[QString("product")].isNull() && m_product_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("productId")]);
    m_product_id_isSet = !json[QString("productId")].isNull() && m_product_id_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIProductStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_date_isSet) {
        obj.insert(QString("creationDate"), ::OpenAPI::toJsonValue(m_creation_date));
    }
    if (m_data_quality_issues.size() > 0) {
        obj.insert(QString("dataQualityIssues"), ::OpenAPI::toJsonValue(m_data_quality_issues));
    }
    if (m_destination_statuses.size() > 0) {
        obj.insert(QString("destinationStatuses"), ::OpenAPI::toJsonValue(m_destination_statuses));
    }
    if (m_google_expiration_date_isSet) {
        obj.insert(QString("googleExpirationDate"), ::OpenAPI::toJsonValue(m_google_expiration_date));
    }
    if (m_item_level_issues.size() > 0) {
        obj.insert(QString("itemLevelIssues"), ::OpenAPI::toJsonValue(m_item_level_issues));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_last_update_date_isSet) {
        obj.insert(QString("lastUpdateDate"), ::OpenAPI::toJsonValue(m_last_update_date));
    }
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_product.isSet()) {
        obj.insert(QString("product"), ::OpenAPI::toJsonValue(m_product));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("productId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIProductStatus::getCreationDate() const {
    return m_creation_date;
}
void OAIProductStatus::setCreationDate(const QString &creation_date) {
    m_creation_date = creation_date;
    m_creation_date_isSet = true;
}

bool OAIProductStatus::is_creation_date_Set() const{
    return m_creation_date_isSet;
}

bool OAIProductStatus::is_creation_date_Valid() const{
    return m_creation_date_isValid;
}

QList<OAIProductStatusDataQualityIssue> OAIProductStatus::getDataQualityIssues() const {
    return m_data_quality_issues;
}
void OAIProductStatus::setDataQualityIssues(const QList<OAIProductStatusDataQualityIssue> &data_quality_issues) {
    m_data_quality_issues = data_quality_issues;
    m_data_quality_issues_isSet = true;
}

bool OAIProductStatus::is_data_quality_issues_Set() const{
    return m_data_quality_issues_isSet;
}

bool OAIProductStatus::is_data_quality_issues_Valid() const{
    return m_data_quality_issues_isValid;
}

QList<OAIProductStatusDestinationStatus> OAIProductStatus::getDestinationStatuses() const {
    return m_destination_statuses;
}
void OAIProductStatus::setDestinationStatuses(const QList<OAIProductStatusDestinationStatus> &destination_statuses) {
    m_destination_statuses = destination_statuses;
    m_destination_statuses_isSet = true;
}

bool OAIProductStatus::is_destination_statuses_Set() const{
    return m_destination_statuses_isSet;
}

bool OAIProductStatus::is_destination_statuses_Valid() const{
    return m_destination_statuses_isValid;
}

QString OAIProductStatus::getGoogleExpirationDate() const {
    return m_google_expiration_date;
}
void OAIProductStatus::setGoogleExpirationDate(const QString &google_expiration_date) {
    m_google_expiration_date = google_expiration_date;
    m_google_expiration_date_isSet = true;
}

bool OAIProductStatus::is_google_expiration_date_Set() const{
    return m_google_expiration_date_isSet;
}

bool OAIProductStatus::is_google_expiration_date_Valid() const{
    return m_google_expiration_date_isValid;
}

QList<OAIProductStatusItemLevelIssue> OAIProductStatus::getItemLevelIssues() const {
    return m_item_level_issues;
}
void OAIProductStatus::setItemLevelIssues(const QList<OAIProductStatusItemLevelIssue> &item_level_issues) {
    m_item_level_issues = item_level_issues;
    m_item_level_issues_isSet = true;
}

bool OAIProductStatus::is_item_level_issues_Set() const{
    return m_item_level_issues_isSet;
}

bool OAIProductStatus::is_item_level_issues_Valid() const{
    return m_item_level_issues_isValid;
}

QString OAIProductStatus::getKind() const {
    return m_kind;
}
void OAIProductStatus::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIProductStatus::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIProductStatus::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIProductStatus::getLastUpdateDate() const {
    return m_last_update_date;
}
void OAIProductStatus::setLastUpdateDate(const QString &last_update_date) {
    m_last_update_date = last_update_date;
    m_last_update_date_isSet = true;
}

bool OAIProductStatus::is_last_update_date_Set() const{
    return m_last_update_date_isSet;
}

bool OAIProductStatus::is_last_update_date_Valid() const{
    return m_last_update_date_isValid;
}

QString OAIProductStatus::getLink() const {
    return m_link;
}
void OAIProductStatus::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIProductStatus::is_link_Set() const{
    return m_link_isSet;
}

bool OAIProductStatus::is_link_Valid() const{
    return m_link_isValid;
}

OAIProduct OAIProductStatus::getProduct() const {
    return m_product;
}
void OAIProductStatus::setProduct(const OAIProduct &product) {
    m_product = product;
    m_product_isSet = true;
}

bool OAIProductStatus::is_product_Set() const{
    return m_product_isSet;
}

bool OAIProductStatus::is_product_Valid() const{
    return m_product_isValid;
}

QString OAIProductStatus::getProductId() const {
    return m_product_id;
}
void OAIProductStatus::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIProductStatus::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIProductStatus::is_product_id_Valid() const{
    return m_product_id_isValid;
}

QString OAIProductStatus::getTitle() const {
    return m_title;
}
void OAIProductStatus::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIProductStatus::is_title_Set() const{
    return m_title_isSet;
}

bool OAIProductStatus::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIProductStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_quality_issues.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_statuses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_expiration_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_level_issues.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
