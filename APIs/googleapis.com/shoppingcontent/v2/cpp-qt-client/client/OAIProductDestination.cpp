/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductDestination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductDestination::OAIProductDestination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductDestination::OAIProductDestination() {
    this->initializeModel();
}

OAIProductDestination::~OAIProductDestination() {}

void OAIProductDestination::initializeModel() {

    m_destination_name_isSet = false;
    m_destination_name_isValid = false;

    m_intention_isSet = false;
    m_intention_isValid = false;
}

void OAIProductDestination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductDestination::fromJsonObject(QJsonObject json) {

    m_destination_name_isValid = ::OpenAPI::fromJsonValue(m_destination_name, json[QString("destinationName")]);
    m_destination_name_isSet = !json[QString("destinationName")].isNull() && m_destination_name_isValid;

    m_intention_isValid = ::OpenAPI::fromJsonValue(m_intention, json[QString("intention")]);
    m_intention_isSet = !json[QString("intention")].isNull() && m_intention_isValid;
}

QString OAIProductDestination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductDestination::asJsonObject() const {
    QJsonObject obj;
    if (m_destination_name_isSet) {
        obj.insert(QString("destinationName"), ::OpenAPI::toJsonValue(m_destination_name));
    }
    if (m_intention_isSet) {
        obj.insert(QString("intention"), ::OpenAPI::toJsonValue(m_intention));
    }
    return obj;
}

QString OAIProductDestination::getDestinationName() const {
    return m_destination_name;
}
void OAIProductDestination::setDestinationName(const QString &destination_name) {
    m_destination_name = destination_name;
    m_destination_name_isSet = true;
}

bool OAIProductDestination::is_destination_name_Set() const{
    return m_destination_name_isSet;
}

bool OAIProductDestination::is_destination_name_Valid() const{
    return m_destination_name_isValid;
}

QString OAIProductDestination::getIntention() const {
    return m_intention;
}
void OAIProductDestination::setIntention(const QString &intention) {
    m_intention = intention;
    m_intention_isSet = true;
}

bool OAIProductDestination::is_intention_Set() const{
    return m_intention_isSet;
}

bool OAIProductDestination::is_intention_Valid() const{
    return m_intention_isValid;
}

bool OAIProductDestination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_intention_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductDestination::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
