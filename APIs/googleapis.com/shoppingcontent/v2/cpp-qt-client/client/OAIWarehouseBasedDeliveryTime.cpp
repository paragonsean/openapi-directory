/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWarehouseBasedDeliveryTime.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWarehouseBasedDeliveryTime::OAIWarehouseBasedDeliveryTime(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWarehouseBasedDeliveryTime::OAIWarehouseBasedDeliveryTime() {
    this->initializeModel();
}

OAIWarehouseBasedDeliveryTime::~OAIWarehouseBasedDeliveryTime() {}

void OAIWarehouseBasedDeliveryTime::initializeModel() {

    m_carrier_isSet = false;
    m_carrier_isValid = false;

    m_carrier_service_isSet = false;
    m_carrier_service_isValid = false;

    m_origin_administrative_area_isSet = false;
    m_origin_administrative_area_isValid = false;

    m_origin_city_isSet = false;
    m_origin_city_isValid = false;

    m_origin_country_isSet = false;
    m_origin_country_isValid = false;

    m_origin_postal_code_isSet = false;
    m_origin_postal_code_isValid = false;

    m_origin_street_address_isSet = false;
    m_origin_street_address_isValid = false;

    m_warehouse_name_isSet = false;
    m_warehouse_name_isValid = false;
}

void OAIWarehouseBasedDeliveryTime::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWarehouseBasedDeliveryTime::fromJsonObject(QJsonObject json) {

    m_carrier_isValid = ::OpenAPI::fromJsonValue(m_carrier, json[QString("carrier")]);
    m_carrier_isSet = !json[QString("carrier")].isNull() && m_carrier_isValid;

    m_carrier_service_isValid = ::OpenAPI::fromJsonValue(m_carrier_service, json[QString("carrierService")]);
    m_carrier_service_isSet = !json[QString("carrierService")].isNull() && m_carrier_service_isValid;

    m_origin_administrative_area_isValid = ::OpenAPI::fromJsonValue(m_origin_administrative_area, json[QString("originAdministrativeArea")]);
    m_origin_administrative_area_isSet = !json[QString("originAdministrativeArea")].isNull() && m_origin_administrative_area_isValid;

    m_origin_city_isValid = ::OpenAPI::fromJsonValue(m_origin_city, json[QString("originCity")]);
    m_origin_city_isSet = !json[QString("originCity")].isNull() && m_origin_city_isValid;

    m_origin_country_isValid = ::OpenAPI::fromJsonValue(m_origin_country, json[QString("originCountry")]);
    m_origin_country_isSet = !json[QString("originCountry")].isNull() && m_origin_country_isValid;

    m_origin_postal_code_isValid = ::OpenAPI::fromJsonValue(m_origin_postal_code, json[QString("originPostalCode")]);
    m_origin_postal_code_isSet = !json[QString("originPostalCode")].isNull() && m_origin_postal_code_isValid;

    m_origin_street_address_isValid = ::OpenAPI::fromJsonValue(m_origin_street_address, json[QString("originStreetAddress")]);
    m_origin_street_address_isSet = !json[QString("originStreetAddress")].isNull() && m_origin_street_address_isValid;

    m_warehouse_name_isValid = ::OpenAPI::fromJsonValue(m_warehouse_name, json[QString("warehouseName")]);
    m_warehouse_name_isSet = !json[QString("warehouseName")].isNull() && m_warehouse_name_isValid;
}

QString OAIWarehouseBasedDeliveryTime::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWarehouseBasedDeliveryTime::asJsonObject() const {
    QJsonObject obj;
    if (m_carrier_isSet) {
        obj.insert(QString("carrier"), ::OpenAPI::toJsonValue(m_carrier));
    }
    if (m_carrier_service_isSet) {
        obj.insert(QString("carrierService"), ::OpenAPI::toJsonValue(m_carrier_service));
    }
    if (m_origin_administrative_area_isSet) {
        obj.insert(QString("originAdministrativeArea"), ::OpenAPI::toJsonValue(m_origin_administrative_area));
    }
    if (m_origin_city_isSet) {
        obj.insert(QString("originCity"), ::OpenAPI::toJsonValue(m_origin_city));
    }
    if (m_origin_country_isSet) {
        obj.insert(QString("originCountry"), ::OpenAPI::toJsonValue(m_origin_country));
    }
    if (m_origin_postal_code_isSet) {
        obj.insert(QString("originPostalCode"), ::OpenAPI::toJsonValue(m_origin_postal_code));
    }
    if (m_origin_street_address_isSet) {
        obj.insert(QString("originStreetAddress"), ::OpenAPI::toJsonValue(m_origin_street_address));
    }
    if (m_warehouse_name_isSet) {
        obj.insert(QString("warehouseName"), ::OpenAPI::toJsonValue(m_warehouse_name));
    }
    return obj;
}

QString OAIWarehouseBasedDeliveryTime::getCarrier() const {
    return m_carrier;
}
void OAIWarehouseBasedDeliveryTime::setCarrier(const QString &carrier) {
    m_carrier = carrier;
    m_carrier_isSet = true;
}

bool OAIWarehouseBasedDeliveryTime::is_carrier_Set() const{
    return m_carrier_isSet;
}

bool OAIWarehouseBasedDeliveryTime::is_carrier_Valid() const{
    return m_carrier_isValid;
}

QString OAIWarehouseBasedDeliveryTime::getCarrierService() const {
    return m_carrier_service;
}
void OAIWarehouseBasedDeliveryTime::setCarrierService(const QString &carrier_service) {
    m_carrier_service = carrier_service;
    m_carrier_service_isSet = true;
}

bool OAIWarehouseBasedDeliveryTime::is_carrier_service_Set() const{
    return m_carrier_service_isSet;
}

bool OAIWarehouseBasedDeliveryTime::is_carrier_service_Valid() const{
    return m_carrier_service_isValid;
}

QString OAIWarehouseBasedDeliveryTime::getOriginAdministrativeArea() const {
    return m_origin_administrative_area;
}
void OAIWarehouseBasedDeliveryTime::setOriginAdministrativeArea(const QString &origin_administrative_area) {
    m_origin_administrative_area = origin_administrative_area;
    m_origin_administrative_area_isSet = true;
}

bool OAIWarehouseBasedDeliveryTime::is_origin_administrative_area_Set() const{
    return m_origin_administrative_area_isSet;
}

bool OAIWarehouseBasedDeliveryTime::is_origin_administrative_area_Valid() const{
    return m_origin_administrative_area_isValid;
}

QString OAIWarehouseBasedDeliveryTime::getOriginCity() const {
    return m_origin_city;
}
void OAIWarehouseBasedDeliveryTime::setOriginCity(const QString &origin_city) {
    m_origin_city = origin_city;
    m_origin_city_isSet = true;
}

bool OAIWarehouseBasedDeliveryTime::is_origin_city_Set() const{
    return m_origin_city_isSet;
}

bool OAIWarehouseBasedDeliveryTime::is_origin_city_Valid() const{
    return m_origin_city_isValid;
}

QString OAIWarehouseBasedDeliveryTime::getOriginCountry() const {
    return m_origin_country;
}
void OAIWarehouseBasedDeliveryTime::setOriginCountry(const QString &origin_country) {
    m_origin_country = origin_country;
    m_origin_country_isSet = true;
}

bool OAIWarehouseBasedDeliveryTime::is_origin_country_Set() const{
    return m_origin_country_isSet;
}

bool OAIWarehouseBasedDeliveryTime::is_origin_country_Valid() const{
    return m_origin_country_isValid;
}

QString OAIWarehouseBasedDeliveryTime::getOriginPostalCode() const {
    return m_origin_postal_code;
}
void OAIWarehouseBasedDeliveryTime::setOriginPostalCode(const QString &origin_postal_code) {
    m_origin_postal_code = origin_postal_code;
    m_origin_postal_code_isSet = true;
}

bool OAIWarehouseBasedDeliveryTime::is_origin_postal_code_Set() const{
    return m_origin_postal_code_isSet;
}

bool OAIWarehouseBasedDeliveryTime::is_origin_postal_code_Valid() const{
    return m_origin_postal_code_isValid;
}

QString OAIWarehouseBasedDeliveryTime::getOriginStreetAddress() const {
    return m_origin_street_address;
}
void OAIWarehouseBasedDeliveryTime::setOriginStreetAddress(const QString &origin_street_address) {
    m_origin_street_address = origin_street_address;
    m_origin_street_address_isSet = true;
}

bool OAIWarehouseBasedDeliveryTime::is_origin_street_address_Set() const{
    return m_origin_street_address_isSet;
}

bool OAIWarehouseBasedDeliveryTime::is_origin_street_address_Valid() const{
    return m_origin_street_address_isValid;
}

QString OAIWarehouseBasedDeliveryTime::getWarehouseName() const {
    return m_warehouse_name;
}
void OAIWarehouseBasedDeliveryTime::setWarehouseName(const QString &warehouse_name) {
    m_warehouse_name = warehouse_name;
    m_warehouse_name_isSet = true;
}

bool OAIWarehouseBasedDeliveryTime::is_warehouse_name_Set() const{
    return m_warehouse_name_isSet;
}

bool OAIWarehouseBasedDeliveryTime::is_warehouse_name_Valid() const{
    return m_warehouse_name_isValid;
}

bool OAIWarehouseBasedDeliveryTime::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_carrier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_carrier_service_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin_administrative_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin_street_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_warehouse_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWarehouseBasedDeliveryTime::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
