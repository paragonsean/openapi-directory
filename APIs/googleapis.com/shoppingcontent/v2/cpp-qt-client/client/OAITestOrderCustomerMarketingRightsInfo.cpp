/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITestOrderCustomerMarketingRightsInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITestOrderCustomerMarketingRightsInfo::OAITestOrderCustomerMarketingRightsInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITestOrderCustomerMarketingRightsInfo::OAITestOrderCustomerMarketingRightsInfo() {
    this->initializeModel();
}

OAITestOrderCustomerMarketingRightsInfo::~OAITestOrderCustomerMarketingRightsInfo() {}

void OAITestOrderCustomerMarketingRightsInfo::initializeModel() {

    m_explicit_marketing_preference_isSet = false;
    m_explicit_marketing_preference_isValid = false;

    m_last_updated_timestamp_isSet = false;
    m_last_updated_timestamp_isValid = false;
}

void OAITestOrderCustomerMarketingRightsInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITestOrderCustomerMarketingRightsInfo::fromJsonObject(QJsonObject json) {

    m_explicit_marketing_preference_isValid = ::OpenAPI::fromJsonValue(m_explicit_marketing_preference, json[QString("explicitMarketingPreference")]);
    m_explicit_marketing_preference_isSet = !json[QString("explicitMarketingPreference")].isNull() && m_explicit_marketing_preference_isValid;

    m_last_updated_timestamp_isValid = ::OpenAPI::fromJsonValue(m_last_updated_timestamp, json[QString("lastUpdatedTimestamp")]);
    m_last_updated_timestamp_isSet = !json[QString("lastUpdatedTimestamp")].isNull() && m_last_updated_timestamp_isValid;
}

QString OAITestOrderCustomerMarketingRightsInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITestOrderCustomerMarketingRightsInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_explicit_marketing_preference_isSet) {
        obj.insert(QString("explicitMarketingPreference"), ::OpenAPI::toJsonValue(m_explicit_marketing_preference));
    }
    if (m_last_updated_timestamp_isSet) {
        obj.insert(QString("lastUpdatedTimestamp"), ::OpenAPI::toJsonValue(m_last_updated_timestamp));
    }
    return obj;
}

QString OAITestOrderCustomerMarketingRightsInfo::getExplicitMarketingPreference() const {
    return m_explicit_marketing_preference;
}
void OAITestOrderCustomerMarketingRightsInfo::setExplicitMarketingPreference(const QString &explicit_marketing_preference) {
    m_explicit_marketing_preference = explicit_marketing_preference;
    m_explicit_marketing_preference_isSet = true;
}

bool OAITestOrderCustomerMarketingRightsInfo::is_explicit_marketing_preference_Set() const{
    return m_explicit_marketing_preference_isSet;
}

bool OAITestOrderCustomerMarketingRightsInfo::is_explicit_marketing_preference_Valid() const{
    return m_explicit_marketing_preference_isValid;
}

QString OAITestOrderCustomerMarketingRightsInfo::getLastUpdatedTimestamp() const {
    return m_last_updated_timestamp;
}
void OAITestOrderCustomerMarketingRightsInfo::setLastUpdatedTimestamp(const QString &last_updated_timestamp) {
    m_last_updated_timestamp = last_updated_timestamp;
    m_last_updated_timestamp_isSet = true;
}

bool OAITestOrderCustomerMarketingRightsInfo::is_last_updated_timestamp_Set() const{
    return m_last_updated_timestamp_isSet;
}

bool OAITestOrderCustomerMarketingRightsInfo::is_last_updated_timestamp_Valid() const{
    return m_last_updated_timestamp_isValid;
}

bool OAITestOrderCustomerMarketingRightsInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_explicit_marketing_preference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITestOrderCustomerMarketingRightsInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
