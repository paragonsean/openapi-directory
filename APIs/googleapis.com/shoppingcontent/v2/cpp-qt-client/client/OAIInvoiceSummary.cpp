/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceSummary::OAIInvoiceSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceSummary::OAIInvoiceSummary() {
    this->initializeModel();
}

OAIInvoiceSummary::~OAIInvoiceSummary() {}

void OAIInvoiceSummary::initializeModel() {

    m_additional_charge_summaries_isSet = false;
    m_additional_charge_summaries_isValid = false;

    m_customer_balance_isSet = false;
    m_customer_balance_isValid = false;

    m_google_balance_isSet = false;
    m_google_balance_isValid = false;

    m_merchant_balance_isSet = false;
    m_merchant_balance_isValid = false;

    m_product_total_isSet = false;
    m_product_total_isValid = false;

    m_promotion_summaries_isSet = false;
    m_promotion_summaries_isValid = false;
}

void OAIInvoiceSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceSummary::fromJsonObject(QJsonObject json) {

    m_additional_charge_summaries_isValid = ::OpenAPI::fromJsonValue(m_additional_charge_summaries, json[QString("additionalChargeSummaries")]);
    m_additional_charge_summaries_isSet = !json[QString("additionalChargeSummaries")].isNull() && m_additional_charge_summaries_isValid;

    m_customer_balance_isValid = ::OpenAPI::fromJsonValue(m_customer_balance, json[QString("customerBalance")]);
    m_customer_balance_isSet = !json[QString("customerBalance")].isNull() && m_customer_balance_isValid;

    m_google_balance_isValid = ::OpenAPI::fromJsonValue(m_google_balance, json[QString("googleBalance")]);
    m_google_balance_isSet = !json[QString("googleBalance")].isNull() && m_google_balance_isValid;

    m_merchant_balance_isValid = ::OpenAPI::fromJsonValue(m_merchant_balance, json[QString("merchantBalance")]);
    m_merchant_balance_isSet = !json[QString("merchantBalance")].isNull() && m_merchant_balance_isValid;

    m_product_total_isValid = ::OpenAPI::fromJsonValue(m_product_total, json[QString("productTotal")]);
    m_product_total_isSet = !json[QString("productTotal")].isNull() && m_product_total_isValid;

    m_promotion_summaries_isValid = ::OpenAPI::fromJsonValue(m_promotion_summaries, json[QString("promotionSummaries")]);
    m_promotion_summaries_isSet = !json[QString("promotionSummaries")].isNull() && m_promotion_summaries_isValid;
}

QString OAIInvoiceSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_charge_summaries.size() > 0) {
        obj.insert(QString("additionalChargeSummaries"), ::OpenAPI::toJsonValue(m_additional_charge_summaries));
    }
    if (m_customer_balance.isSet()) {
        obj.insert(QString("customerBalance"), ::OpenAPI::toJsonValue(m_customer_balance));
    }
    if (m_google_balance.isSet()) {
        obj.insert(QString("googleBalance"), ::OpenAPI::toJsonValue(m_google_balance));
    }
    if (m_merchant_balance.isSet()) {
        obj.insert(QString("merchantBalance"), ::OpenAPI::toJsonValue(m_merchant_balance));
    }
    if (m_product_total.isSet()) {
        obj.insert(QString("productTotal"), ::OpenAPI::toJsonValue(m_product_total));
    }
    if (m_promotion_summaries.size() > 0) {
        obj.insert(QString("promotionSummaries"), ::OpenAPI::toJsonValue(m_promotion_summaries));
    }
    return obj;
}

QList<OAIInvoiceSummaryAdditionalChargeSummary> OAIInvoiceSummary::getAdditionalChargeSummaries() const {
    return m_additional_charge_summaries;
}
void OAIInvoiceSummary::setAdditionalChargeSummaries(const QList<OAIInvoiceSummaryAdditionalChargeSummary> &additional_charge_summaries) {
    m_additional_charge_summaries = additional_charge_summaries;
    m_additional_charge_summaries_isSet = true;
}

bool OAIInvoiceSummary::is_additional_charge_summaries_Set() const{
    return m_additional_charge_summaries_isSet;
}

bool OAIInvoiceSummary::is_additional_charge_summaries_Valid() const{
    return m_additional_charge_summaries_isValid;
}

OAIAmount OAIInvoiceSummary::getCustomerBalance() const {
    return m_customer_balance;
}
void OAIInvoiceSummary::setCustomerBalance(const OAIAmount &customer_balance) {
    m_customer_balance = customer_balance;
    m_customer_balance_isSet = true;
}

bool OAIInvoiceSummary::is_customer_balance_Set() const{
    return m_customer_balance_isSet;
}

bool OAIInvoiceSummary::is_customer_balance_Valid() const{
    return m_customer_balance_isValid;
}

OAIAmount OAIInvoiceSummary::getGoogleBalance() const {
    return m_google_balance;
}
void OAIInvoiceSummary::setGoogleBalance(const OAIAmount &google_balance) {
    m_google_balance = google_balance;
    m_google_balance_isSet = true;
}

bool OAIInvoiceSummary::is_google_balance_Set() const{
    return m_google_balance_isSet;
}

bool OAIInvoiceSummary::is_google_balance_Valid() const{
    return m_google_balance_isValid;
}

OAIAmount OAIInvoiceSummary::getMerchantBalance() const {
    return m_merchant_balance;
}
void OAIInvoiceSummary::setMerchantBalance(const OAIAmount &merchant_balance) {
    m_merchant_balance = merchant_balance;
    m_merchant_balance_isSet = true;
}

bool OAIInvoiceSummary::is_merchant_balance_Set() const{
    return m_merchant_balance_isSet;
}

bool OAIInvoiceSummary::is_merchant_balance_Valid() const{
    return m_merchant_balance_isValid;
}

OAIAmount OAIInvoiceSummary::getProductTotal() const {
    return m_product_total;
}
void OAIInvoiceSummary::setProductTotal(const OAIAmount &product_total) {
    m_product_total = product_total;
    m_product_total_isSet = true;
}

bool OAIInvoiceSummary::is_product_total_Set() const{
    return m_product_total_isSet;
}

bool OAIInvoiceSummary::is_product_total_Valid() const{
    return m_product_total_isValid;
}

QList<OAIPromotion> OAIInvoiceSummary::getPromotionSummaries() const {
    return m_promotion_summaries;
}
void OAIInvoiceSummary::setPromotionSummaries(const QList<OAIPromotion> &promotion_summaries) {
    m_promotion_summaries = promotion_summaries;
    m_promotion_summaries_isSet = true;
}

bool OAIInvoiceSummary::is_promotion_summaries_Set() const{
    return m_promotion_summaries_isSet;
}

bool OAIInvoiceSummary::is_promotion_summaries_Valid() const{
    return m_promotion_summaries_isValid;
}

bool OAIInvoiceSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_charge_summaries.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_balance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_balance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_balance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_total.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_summaries.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
