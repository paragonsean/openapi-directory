/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShippingSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShippingSettings::OAIShippingSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShippingSettings::OAIShippingSettings() {
    this->initializeModel();
}

OAIShippingSettings::~OAIShippingSettings() {}

void OAIShippingSettings::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_postal_code_groups_isSet = false;
    m_postal_code_groups_isValid = false;

    m_services_isSet = false;
    m_services_isValid = false;

    m_warehouses_isSet = false;
    m_warehouses_isValid = false;
}

void OAIShippingSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShippingSettings::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_postal_code_groups_isValid = ::OpenAPI::fromJsonValue(m_postal_code_groups, json[QString("postalCodeGroups")]);
    m_postal_code_groups_isSet = !json[QString("postalCodeGroups")].isNull() && m_postal_code_groups_isValid;

    m_services_isValid = ::OpenAPI::fromJsonValue(m_services, json[QString("services")]);
    m_services_isSet = !json[QString("services")].isNull() && m_services_isValid;

    m_warehouses_isValid = ::OpenAPI::fromJsonValue(m_warehouses, json[QString("warehouses")]);
    m_warehouses_isSet = !json[QString("warehouses")].isNull() && m_warehouses_isValid;
}

QString OAIShippingSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShippingSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_postal_code_groups.size() > 0) {
        obj.insert(QString("postalCodeGroups"), ::OpenAPI::toJsonValue(m_postal_code_groups));
    }
    if (m_services.size() > 0) {
        obj.insert(QString("services"), ::OpenAPI::toJsonValue(m_services));
    }
    if (m_warehouses.size() > 0) {
        obj.insert(QString("warehouses"), ::OpenAPI::toJsonValue(m_warehouses));
    }
    return obj;
}

QString OAIShippingSettings::getAccountId() const {
    return m_account_id;
}
void OAIShippingSettings::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIShippingSettings::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIShippingSettings::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QList<OAIPostalCodeGroup> OAIShippingSettings::getPostalCodeGroups() const {
    return m_postal_code_groups;
}
void OAIShippingSettings::setPostalCodeGroups(const QList<OAIPostalCodeGroup> &postal_code_groups) {
    m_postal_code_groups = postal_code_groups;
    m_postal_code_groups_isSet = true;
}

bool OAIShippingSettings::is_postal_code_groups_Set() const{
    return m_postal_code_groups_isSet;
}

bool OAIShippingSettings::is_postal_code_groups_Valid() const{
    return m_postal_code_groups_isValid;
}

QList<OAIService> OAIShippingSettings::getServices() const {
    return m_services;
}
void OAIShippingSettings::setServices(const QList<OAIService> &services) {
    m_services = services;
    m_services_isSet = true;
}

bool OAIShippingSettings::is_services_Set() const{
    return m_services_isSet;
}

bool OAIShippingSettings::is_services_Valid() const{
    return m_services_isValid;
}

QList<OAIWarehouse> OAIShippingSettings::getWarehouses() const {
    return m_warehouses;
}
void OAIShippingSettings::setWarehouses(const QList<OAIWarehouse> &warehouses) {
    m_warehouses = warehouses;
    m_warehouses_isSet = true;
}

bool OAIShippingSettings::is_warehouses_Set() const{
    return m_warehouses_isSet;
}

bool OAIShippingSettings::is_warehouses_Valid() const{
    return m_warehouses_isValid;
}

bool OAIShippingSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_warehouses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShippingSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
