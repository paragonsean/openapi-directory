/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountStatusDataQualityIssue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountStatusDataQualityIssue::OAIAccountStatusDataQualityIssue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountStatusDataQualityIssue::OAIAccountStatusDataQualityIssue() {
    this->initializeModel();
}

OAIAccountStatusDataQualityIssue::~OAIAccountStatusDataQualityIssue() {}

void OAIAccountStatusDataQualityIssue::initializeModel() {

    m_country_isSet = false;
    m_country_isValid = false;

    m_destination_isSet = false;
    m_destination_isValid = false;

    m_detail_isSet = false;
    m_detail_isValid = false;

    m_displayed_value_isSet = false;
    m_displayed_value_isValid = false;

    m_example_items_isSet = false;
    m_example_items_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_checked_isSet = false;
    m_last_checked_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_num_items_isSet = false;
    m_num_items_isValid = false;

    m_severity_isSet = false;
    m_severity_isValid = false;

    m_submitted_value_isSet = false;
    m_submitted_value_isValid = false;
}

void OAIAccountStatusDataQualityIssue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountStatusDataQualityIssue::fromJsonObject(QJsonObject json) {

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_destination_isValid = ::OpenAPI::fromJsonValue(m_destination, json[QString("destination")]);
    m_destination_isSet = !json[QString("destination")].isNull() && m_destination_isValid;

    m_detail_isValid = ::OpenAPI::fromJsonValue(m_detail, json[QString("detail")]);
    m_detail_isSet = !json[QString("detail")].isNull() && m_detail_isValid;

    m_displayed_value_isValid = ::OpenAPI::fromJsonValue(m_displayed_value, json[QString("displayedValue")]);
    m_displayed_value_isSet = !json[QString("displayedValue")].isNull() && m_displayed_value_isValid;

    m_example_items_isValid = ::OpenAPI::fromJsonValue(m_example_items, json[QString("exampleItems")]);
    m_example_items_isSet = !json[QString("exampleItems")].isNull() && m_example_items_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_checked_isValid = ::OpenAPI::fromJsonValue(m_last_checked, json[QString("lastChecked")]);
    m_last_checked_isSet = !json[QString("lastChecked")].isNull() && m_last_checked_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_num_items_isValid = ::OpenAPI::fromJsonValue(m_num_items, json[QString("numItems")]);
    m_num_items_isSet = !json[QString("numItems")].isNull() && m_num_items_isValid;

    m_severity_isValid = ::OpenAPI::fromJsonValue(m_severity, json[QString("severity")]);
    m_severity_isSet = !json[QString("severity")].isNull() && m_severity_isValid;

    m_submitted_value_isValid = ::OpenAPI::fromJsonValue(m_submitted_value, json[QString("submittedValue")]);
    m_submitted_value_isSet = !json[QString("submittedValue")].isNull() && m_submitted_value_isValid;
}

QString OAIAccountStatusDataQualityIssue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountStatusDataQualityIssue::asJsonObject() const {
    QJsonObject obj;
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_destination_isSet) {
        obj.insert(QString("destination"), ::OpenAPI::toJsonValue(m_destination));
    }
    if (m_detail_isSet) {
        obj.insert(QString("detail"), ::OpenAPI::toJsonValue(m_detail));
    }
    if (m_displayed_value_isSet) {
        obj.insert(QString("displayedValue"), ::OpenAPI::toJsonValue(m_displayed_value));
    }
    if (m_example_items.size() > 0) {
        obj.insert(QString("exampleItems"), ::OpenAPI::toJsonValue(m_example_items));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_checked_isSet) {
        obj.insert(QString("lastChecked"), ::OpenAPI::toJsonValue(m_last_checked));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_num_items_isSet) {
        obj.insert(QString("numItems"), ::OpenAPI::toJsonValue(m_num_items));
    }
    if (m_severity_isSet) {
        obj.insert(QString("severity"), ::OpenAPI::toJsonValue(m_severity));
    }
    if (m_submitted_value_isSet) {
        obj.insert(QString("submittedValue"), ::OpenAPI::toJsonValue(m_submitted_value));
    }
    return obj;
}

QString OAIAccountStatusDataQualityIssue::getCountry() const {
    return m_country;
}
void OAIAccountStatusDataQualityIssue::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIAccountStatusDataQualityIssue::is_country_Set() const{
    return m_country_isSet;
}

bool OAIAccountStatusDataQualityIssue::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIAccountStatusDataQualityIssue::getDestination() const {
    return m_destination;
}
void OAIAccountStatusDataQualityIssue::setDestination(const QString &destination) {
    m_destination = destination;
    m_destination_isSet = true;
}

bool OAIAccountStatusDataQualityIssue::is_destination_Set() const{
    return m_destination_isSet;
}

bool OAIAccountStatusDataQualityIssue::is_destination_Valid() const{
    return m_destination_isValid;
}

QString OAIAccountStatusDataQualityIssue::getDetail() const {
    return m_detail;
}
void OAIAccountStatusDataQualityIssue::setDetail(const QString &detail) {
    m_detail = detail;
    m_detail_isSet = true;
}

bool OAIAccountStatusDataQualityIssue::is_detail_Set() const{
    return m_detail_isSet;
}

bool OAIAccountStatusDataQualityIssue::is_detail_Valid() const{
    return m_detail_isValid;
}

QString OAIAccountStatusDataQualityIssue::getDisplayedValue() const {
    return m_displayed_value;
}
void OAIAccountStatusDataQualityIssue::setDisplayedValue(const QString &displayed_value) {
    m_displayed_value = displayed_value;
    m_displayed_value_isSet = true;
}

bool OAIAccountStatusDataQualityIssue::is_displayed_value_Set() const{
    return m_displayed_value_isSet;
}

bool OAIAccountStatusDataQualityIssue::is_displayed_value_Valid() const{
    return m_displayed_value_isValid;
}

QList<OAIAccountStatusExampleItem> OAIAccountStatusDataQualityIssue::getExampleItems() const {
    return m_example_items;
}
void OAIAccountStatusDataQualityIssue::setExampleItems(const QList<OAIAccountStatusExampleItem> &example_items) {
    m_example_items = example_items;
    m_example_items_isSet = true;
}

bool OAIAccountStatusDataQualityIssue::is_example_items_Set() const{
    return m_example_items_isSet;
}

bool OAIAccountStatusDataQualityIssue::is_example_items_Valid() const{
    return m_example_items_isValid;
}

QString OAIAccountStatusDataQualityIssue::getId() const {
    return m_id;
}
void OAIAccountStatusDataQualityIssue::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAccountStatusDataQualityIssue::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAccountStatusDataQualityIssue::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAccountStatusDataQualityIssue::getLastChecked() const {
    return m_last_checked;
}
void OAIAccountStatusDataQualityIssue::setLastChecked(const QString &last_checked) {
    m_last_checked = last_checked;
    m_last_checked_isSet = true;
}

bool OAIAccountStatusDataQualityIssue::is_last_checked_Set() const{
    return m_last_checked_isSet;
}

bool OAIAccountStatusDataQualityIssue::is_last_checked_Valid() const{
    return m_last_checked_isValid;
}

QString OAIAccountStatusDataQualityIssue::getLocation() const {
    return m_location;
}
void OAIAccountStatusDataQualityIssue::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIAccountStatusDataQualityIssue::is_location_Set() const{
    return m_location_isSet;
}

bool OAIAccountStatusDataQualityIssue::is_location_Valid() const{
    return m_location_isValid;
}

qint32 OAIAccountStatusDataQualityIssue::getNumItems() const {
    return m_num_items;
}
void OAIAccountStatusDataQualityIssue::setNumItems(const qint32 &num_items) {
    m_num_items = num_items;
    m_num_items_isSet = true;
}

bool OAIAccountStatusDataQualityIssue::is_num_items_Set() const{
    return m_num_items_isSet;
}

bool OAIAccountStatusDataQualityIssue::is_num_items_Valid() const{
    return m_num_items_isValid;
}

QString OAIAccountStatusDataQualityIssue::getSeverity() const {
    return m_severity;
}
void OAIAccountStatusDataQualityIssue::setSeverity(const QString &severity) {
    m_severity = severity;
    m_severity_isSet = true;
}

bool OAIAccountStatusDataQualityIssue::is_severity_Set() const{
    return m_severity_isSet;
}

bool OAIAccountStatusDataQualityIssue::is_severity_Valid() const{
    return m_severity_isValid;
}

QString OAIAccountStatusDataQualityIssue::getSubmittedValue() const {
    return m_submitted_value;
}
void OAIAccountStatusDataQualityIssue::setSubmittedValue(const QString &submitted_value) {
    m_submitted_value = submitted_value;
    m_submitted_value_isSet = true;
}

bool OAIAccountStatusDataQualityIssue::is_submitted_value_Set() const{
    return m_submitted_value_isSet;
}

bool OAIAccountStatusDataQualityIssue::is_submitted_value_Valid() const{
    return m_submitted_value_isValid;
}

bool OAIAccountStatusDataQualityIssue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_detail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_displayed_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_example_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_checked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num_items_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_severity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submitted_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountStatusDataQualityIssue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
