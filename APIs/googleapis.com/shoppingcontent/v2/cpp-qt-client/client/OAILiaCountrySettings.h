/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILiaCountrySettings.h
 *
 * 
 */

#ifndef OAILiaCountrySettings_H
#define OAILiaCountrySettings_H

#include <QJsonObject>

#include "OAILiaAboutPageSettings.h"
#include "OAILiaInventorySettings.h"
#include "OAILiaOnDisplayToOrderSettings.h"
#include "OAILiaPosDataProvider.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILiaAboutPageSettings;
class OAILiaInventorySettings;
class OAILiaOnDisplayToOrderSettings;
class OAILiaPosDataProvider;

class OAILiaCountrySettings : public OAIObject {
public:
    OAILiaCountrySettings();
    OAILiaCountrySettings(QString json);
    ~OAILiaCountrySettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILiaAboutPageSettings getAbout() const;
    void setAbout(const OAILiaAboutPageSettings &about);
    bool is_about_Set() const;
    bool is_about_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    bool isHostedLocalStorefrontActive() const;
    void setHostedLocalStorefrontActive(const bool &hosted_local_storefront_active);
    bool is_hosted_local_storefront_active_Set() const;
    bool is_hosted_local_storefront_active_Valid() const;

    OAILiaInventorySettings getInventory() const;
    void setInventory(const OAILiaInventorySettings &inventory);
    bool is_inventory_Set() const;
    bool is_inventory_Valid() const;

    OAILiaOnDisplayToOrderSettings getOnDisplayToOrder() const;
    void setOnDisplayToOrder(const OAILiaOnDisplayToOrderSettings &on_display_to_order);
    bool is_on_display_to_order_Set() const;
    bool is_on_display_to_order_Valid() const;

    OAILiaPosDataProvider getPosDataProvider() const;
    void setPosDataProvider(const OAILiaPosDataProvider &pos_data_provider);
    bool is_pos_data_provider_Set() const;
    bool is_pos_data_provider_Valid() const;

    bool isStorePickupActive() const;
    void setStorePickupActive(const bool &store_pickup_active);
    bool is_store_pickup_active_Set() const;
    bool is_store_pickup_active_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILiaAboutPageSettings m_about;
    bool m_about_isSet;
    bool m_about_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    bool m_hosted_local_storefront_active;
    bool m_hosted_local_storefront_active_isSet;
    bool m_hosted_local_storefront_active_isValid;

    OAILiaInventorySettings m_inventory;
    bool m_inventory_isSet;
    bool m_inventory_isValid;

    OAILiaOnDisplayToOrderSettings m_on_display_to_order;
    bool m_on_display_to_order_isSet;
    bool m_on_display_to_order_isValid;

    OAILiaPosDataProvider m_pos_data_provider;
    bool m_pos_data_provider_isSet;
    bool m_pos_data_provider_isValid;

    bool m_store_pickup_active;
    bool m_store_pickup_active_isSet;
    bool m_store_pickup_active_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILiaCountrySettings)

#endif // OAILiaCountrySettings_H
