/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatafeed.h
 *
 * Datafeed configuration data.
 */

#ifndef OAIDatafeed_H
#define OAIDatafeed_H

#include <QJsonObject>

#include "OAIDatafeedFetchSchedule.h"
#include "OAIDatafeedFormat.h"
#include "OAIDatafeedTarget.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDatafeedFetchSchedule;
class OAIDatafeedFormat;
class OAIDatafeedTarget;

class OAIDatafeed : public OAIObject {
public:
    OAIDatafeed();
    OAIDatafeed(QString json);
    ~OAIDatafeed() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAttributeLanguage() const;
    void setAttributeLanguage(const QString &attribute_language);
    bool is_attribute_language_Set() const;
    bool is_attribute_language_Valid() const;

    QString getContentLanguage() const;
    void setContentLanguage(const QString &content_language);
    bool is_content_language_Set() const;
    bool is_content_language_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    OAIDatafeedFetchSchedule getFetchSchedule() const;
    void setFetchSchedule(const OAIDatafeedFetchSchedule &fetch_schedule);
    bool is_fetch_schedule_Set() const;
    bool is_fetch_schedule_Valid() const;

    QString getFileName() const;
    void setFileName(const QString &file_name);
    bool is_file_name_Set() const;
    bool is_file_name_Valid() const;

    OAIDatafeedFormat getFormat() const;
    void setFormat(const OAIDatafeedFormat &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getIntendedDestinations() const;
    void setIntendedDestinations(const QList<QString> &intended_destinations);
    bool is_intended_destinations_Set() const;
    bool is_intended_destinations_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getTargetCountry() const;
    void setTargetCountry(const QString &target_country);
    bool is_target_country_Set() const;
    bool is_target_country_Valid() const;

    QList<OAIDatafeedTarget> getTargets() const;
    void setTargets(const QList<OAIDatafeedTarget> &targets);
    bool is_targets_Set() const;
    bool is_targets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_attribute_language;
    bool m_attribute_language_isSet;
    bool m_attribute_language_isValid;

    QString m_content_language;
    bool m_content_language_isSet;
    bool m_content_language_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    OAIDatafeedFetchSchedule m_fetch_schedule;
    bool m_fetch_schedule_isSet;
    bool m_fetch_schedule_isValid;

    QString m_file_name;
    bool m_file_name_isSet;
    bool m_file_name_isValid;

    OAIDatafeedFormat m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_intended_destinations;
    bool m_intended_destinations_isSet;
    bool m_intended_destinations_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_target_country;
    bool m_target_country_isSet;
    bool m_target_country_isValid;

    QList<OAIDatafeedTarget> m_targets;
    bool m_targets_isSet;
    bool m_targets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatafeed)

#endif // OAIDatafeed_H
