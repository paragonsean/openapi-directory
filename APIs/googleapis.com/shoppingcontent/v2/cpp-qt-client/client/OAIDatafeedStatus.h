/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatafeedStatus.h
 *
 * The status of a datafeed, i.e., the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished.
 */

#ifndef OAIDatafeedStatus_H
#define OAIDatafeedStatus_H

#include <QJsonObject>

#include "OAIDatafeedStatusError.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDatafeedStatusError;

class OAIDatafeedStatus : public OAIObject {
public:
    OAIDatafeedStatus();
    OAIDatafeedStatus(QString json);
    ~OAIDatafeedStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getDatafeedId() const;
    void setDatafeedId(const QString &datafeed_id);
    bool is_datafeed_id_Set() const;
    bool is_datafeed_id_Valid() const;

    QList<OAIDatafeedStatusError> getErrors() const;
    void setErrors(const QList<OAIDatafeedStatusError> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QString getItemsTotal() const;
    void setItemsTotal(const QString &items_total);
    bool is_items_total_Set() const;
    bool is_items_total_Valid() const;

    QString getItemsValid() const;
    void setItemsValid(const QString &items_valid);
    bool is_items_valid_Set() const;
    bool is_items_valid_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getLastUploadDate() const;
    void setLastUploadDate(const QString &last_upload_date);
    bool is_last_upload_date_Set() const;
    bool is_last_upload_date_Valid() const;

    QString getProcessingStatus() const;
    void setProcessingStatus(const QString &processing_status);
    bool is_processing_status_Set() const;
    bool is_processing_status_Valid() const;

    QList<OAIDatafeedStatusError> getWarnings() const;
    void setWarnings(const QList<OAIDatafeedStatusError> &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_datafeed_id;
    bool m_datafeed_id_isSet;
    bool m_datafeed_id_isValid;

    QList<OAIDatafeedStatusError> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QString m_items_total;
    bool m_items_total_isSet;
    bool m_items_total_isValid;

    QString m_items_valid;
    bool m_items_valid_isSet;
    bool m_items_valid_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_last_upload_date;
    bool m_last_upload_date_isSet;
    bool m_last_upload_date_isValid;

    QString m_processing_status;
    bool m_processing_status_isSet;
    bool m_processing_status_isValid;

    QList<OAIDatafeedStatusError> m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatafeedStatus)

#endif // OAIDatafeedStatus_H
