/**
 * Content API for Shopping
 * Manage your product listings and accounts for Google Shopping
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIValue::OAIValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIValue::OAIValue() {
    this->initializeModel();
}

OAIValue::~OAIValue() {}

void OAIValue::initializeModel() {

    m_carrier_rate_name_isSet = false;
    m_carrier_rate_name_isValid = false;

    m_flat_rate_isSet = false;
    m_flat_rate_isValid = false;

    m_no_shipping_isSet = false;
    m_no_shipping_isValid = false;

    m_price_percentage_isSet = false;
    m_price_percentage_isValid = false;

    m_subtable_name_isSet = false;
    m_subtable_name_isValid = false;
}

void OAIValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIValue::fromJsonObject(QJsonObject json) {

    m_carrier_rate_name_isValid = ::OpenAPI::fromJsonValue(m_carrier_rate_name, json[QString("carrierRateName")]);
    m_carrier_rate_name_isSet = !json[QString("carrierRateName")].isNull() && m_carrier_rate_name_isValid;

    m_flat_rate_isValid = ::OpenAPI::fromJsonValue(m_flat_rate, json[QString("flatRate")]);
    m_flat_rate_isSet = !json[QString("flatRate")].isNull() && m_flat_rate_isValid;

    m_no_shipping_isValid = ::OpenAPI::fromJsonValue(m_no_shipping, json[QString("noShipping")]);
    m_no_shipping_isSet = !json[QString("noShipping")].isNull() && m_no_shipping_isValid;

    m_price_percentage_isValid = ::OpenAPI::fromJsonValue(m_price_percentage, json[QString("pricePercentage")]);
    m_price_percentage_isSet = !json[QString("pricePercentage")].isNull() && m_price_percentage_isValid;

    m_subtable_name_isValid = ::OpenAPI::fromJsonValue(m_subtable_name, json[QString("subtableName")]);
    m_subtable_name_isSet = !json[QString("subtableName")].isNull() && m_subtable_name_isValid;
}

QString OAIValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIValue::asJsonObject() const {
    QJsonObject obj;
    if (m_carrier_rate_name_isSet) {
        obj.insert(QString("carrierRateName"), ::OpenAPI::toJsonValue(m_carrier_rate_name));
    }
    if (m_flat_rate.isSet()) {
        obj.insert(QString("flatRate"), ::OpenAPI::toJsonValue(m_flat_rate));
    }
    if (m_no_shipping_isSet) {
        obj.insert(QString("noShipping"), ::OpenAPI::toJsonValue(m_no_shipping));
    }
    if (m_price_percentage_isSet) {
        obj.insert(QString("pricePercentage"), ::OpenAPI::toJsonValue(m_price_percentage));
    }
    if (m_subtable_name_isSet) {
        obj.insert(QString("subtableName"), ::OpenAPI::toJsonValue(m_subtable_name));
    }
    return obj;
}

QString OAIValue::getCarrierRateName() const {
    return m_carrier_rate_name;
}
void OAIValue::setCarrierRateName(const QString &carrier_rate_name) {
    m_carrier_rate_name = carrier_rate_name;
    m_carrier_rate_name_isSet = true;
}

bool OAIValue::is_carrier_rate_name_Set() const{
    return m_carrier_rate_name_isSet;
}

bool OAIValue::is_carrier_rate_name_Valid() const{
    return m_carrier_rate_name_isValid;
}

OAIPrice OAIValue::getFlatRate() const {
    return m_flat_rate;
}
void OAIValue::setFlatRate(const OAIPrice &flat_rate) {
    m_flat_rate = flat_rate;
    m_flat_rate_isSet = true;
}

bool OAIValue::is_flat_rate_Set() const{
    return m_flat_rate_isSet;
}

bool OAIValue::is_flat_rate_Valid() const{
    return m_flat_rate_isValid;
}

bool OAIValue::isNoShipping() const {
    return m_no_shipping;
}
void OAIValue::setNoShipping(const bool &no_shipping) {
    m_no_shipping = no_shipping;
    m_no_shipping_isSet = true;
}

bool OAIValue::is_no_shipping_Set() const{
    return m_no_shipping_isSet;
}

bool OAIValue::is_no_shipping_Valid() const{
    return m_no_shipping_isValid;
}

QString OAIValue::getPricePercentage() const {
    return m_price_percentage;
}
void OAIValue::setPricePercentage(const QString &price_percentage) {
    m_price_percentage = price_percentage;
    m_price_percentage_isSet = true;
}

bool OAIValue::is_price_percentage_Set() const{
    return m_price_percentage_isSet;
}

bool OAIValue::is_price_percentage_Valid() const{
    return m_price_percentage_isValid;
}

QString OAIValue::getSubtableName() const {
    return m_subtable_name;
}
void OAIValue::setSubtableName(const QString &subtable_name) {
    m_subtable_name = subtable_name;
    m_subtable_name_isSet = true;
}

bool OAIValue::is_subtable_name_Set() const{
    return m_subtable_name_isSet;
}

bool OAIValue::is_subtable_name_Valid() const{
    return m_subtable_name_isValid;
}

bool OAIValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_carrier_rate_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flat_rate.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_no_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtable_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
