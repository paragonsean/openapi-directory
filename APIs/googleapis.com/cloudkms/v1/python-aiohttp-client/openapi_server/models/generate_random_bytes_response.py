# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GenerateRandomBytesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: str=None, data_crc32c: str=None):
        """GenerateRandomBytesResponse - a model defined in OpenAPI

        :param data: The data of this GenerateRandomBytesResponse.
        :param data_crc32c: The data_crc32c of this GenerateRandomBytesResponse.
        """
        self.openapi_types = {
            'data': str,
            'data_crc32c': str
        }

        self.attribute_map = {
            'data': 'data',
            'data_crc32c': 'dataCrc32c'
        }

        self._data = data
        self._data_crc32c = data_crc32c

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateRandomBytesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateRandomBytesResponse of this GenerateRandomBytesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this GenerateRandomBytesResponse.

        The generated data.

        :return: The data of this GenerateRandomBytesResponse.
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this GenerateRandomBytesResponse.

        The generated data.

        :param data: The data of this GenerateRandomBytesResponse.
        :type data: str
        """

        self._data = data

    @property
    def data_crc32c(self):
        """Gets the data_crc32c of this GenerateRandomBytesResponse.

        Integrity verification field. A CRC32C checksum of the returned GenerateRandomBytesResponse.data. An integrity check of GenerateRandomBytesResponse.data can be performed by computing the CRC32C checksum of GenerateRandomBytesResponse.data and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.

        :return: The data_crc32c of this GenerateRandomBytesResponse.
        :rtype: str
        """
        return self._data_crc32c

    @data_crc32c.setter
    def data_crc32c(self, data_crc32c):
        """Sets the data_crc32c of this GenerateRandomBytesResponse.

        Integrity verification field. A CRC32C checksum of the returned GenerateRandomBytesResponse.data. An integrity check of GenerateRandomBytesResponse.data can be performed by computing the CRC32C checksum of GenerateRandomBytesResponse.data and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.

        :param data_crc32c: The data_crc32c of this GenerateRandomBytesResponse.
        :type data_crc32c: str
        """

        self._data_crc32c = data_crc32c
