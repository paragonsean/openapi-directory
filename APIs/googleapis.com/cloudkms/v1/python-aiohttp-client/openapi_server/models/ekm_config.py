# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EkmConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_ekm_connection: str=None, name: str=None):
        """EkmConfig - a model defined in OpenAPI

        :param default_ekm_connection: The default_ekm_connection of this EkmConfig.
        :param name: The name of this EkmConfig.
        """
        self.openapi_types = {
            'default_ekm_connection': str,
            'name': str
        }

        self.attribute_map = {
            'default_ekm_connection': 'defaultEkmConnection',
            'name': 'name'
        }

        self._default_ekm_connection = default_ekm_connection
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EkmConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EkmConfig of this EkmConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_ekm_connection(self):
        """Gets the default_ekm_connection of this EkmConfig.

        Optional. Resource name of the default EkmConnection. Setting this field to the empty string removes the default.

        :return: The default_ekm_connection of this EkmConfig.
        :rtype: str
        """
        return self._default_ekm_connection

    @default_ekm_connection.setter
    def default_ekm_connection(self, default_ekm_connection):
        """Sets the default_ekm_connection of this EkmConfig.

        Optional. Resource name of the default EkmConnection. Setting this field to the empty string removes the default.

        :param default_ekm_connection: The default_ekm_connection of this EkmConfig.
        :type default_ekm_connection: str
        """

        self._default_ekm_connection = default_ekm_connection

    @property
    def name(self):
        """Gets the name of this EkmConfig.

        Output only. The resource name for the EkmConfig in the format `projects/*/locations/*/ekmConfig`.

        :return: The name of this EkmConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EkmConfig.

        Output only. The resource name for the EkmConfig in the format `projects/*/locations/*/ekmConfig`.

        :param name: The name of this EkmConfig.
        :type name: str
        """

        self._name = name
