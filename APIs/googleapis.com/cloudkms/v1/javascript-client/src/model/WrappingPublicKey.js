/**
 * Cloud Key Management Service (KMS) API
 * Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WrappingPublicKey model module.
 * @module model/WrappingPublicKey
 * @version v1
 */
class WrappingPublicKey {
    /**
     * Constructs a new <code>WrappingPublicKey</code>.
     * The public key component of the wrapping key. For details of the type of key this public key corresponds to, see the ImportMethod.
     * @alias module:model/WrappingPublicKey
     */
    constructor() { 
        
        WrappingPublicKey.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WrappingPublicKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WrappingPublicKey} obj Optional instance to populate.
     * @return {module:model/WrappingPublicKey} The populated <code>WrappingPublicKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WrappingPublicKey();

            if (data.hasOwnProperty('pem')) {
                obj['pem'] = ApiClient.convertToType(data['pem'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WrappingPublicKey</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WrappingPublicKey</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['pem'] && !(typeof data['pem'] === 'string' || data['pem'] instanceof String)) {
            throw new Error("Expected the field `pem` to be a primitive type in the JSON string but got " + data['pem']);
        }

        return true;
    }


}



/**
 * The public key, encoded in PEM format. For more information, see the [RFC 7468](https://tools.ietf.org/html/rfc7468) sections for [General Considerations](https://tools.ietf.org/html/rfc7468#section-2) and [Textual Encoding of Subject Public Key Info] (https://tools.ietf.org/html/rfc7468#section-13).
 * @member {String} pem
 */
WrappingPublicKey.prototype['pem'] = undefined;






export default WrappingPublicKey;

