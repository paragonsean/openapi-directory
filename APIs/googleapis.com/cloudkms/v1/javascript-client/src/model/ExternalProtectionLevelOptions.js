/**
 * Cloud Key Management Service (KMS) API
 * Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExternalProtectionLevelOptions model module.
 * @module model/ExternalProtectionLevelOptions
 * @version v1
 */
class ExternalProtectionLevelOptions {
    /**
     * Constructs a new <code>ExternalProtectionLevelOptions</code>.
     * ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
     * @alias module:model/ExternalProtectionLevelOptions
     */
    constructor() { 
        
        ExternalProtectionLevelOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExternalProtectionLevelOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExternalProtectionLevelOptions} obj Optional instance to populate.
     * @return {module:model/ExternalProtectionLevelOptions} The populated <code>ExternalProtectionLevelOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExternalProtectionLevelOptions();

            if (data.hasOwnProperty('ekmConnectionKeyPath')) {
                obj['ekmConnectionKeyPath'] = ApiClient.convertToType(data['ekmConnectionKeyPath'], 'String');
            }
            if (data.hasOwnProperty('externalKeyUri')) {
                obj['externalKeyUri'] = ApiClient.convertToType(data['externalKeyUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExternalProtectionLevelOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExternalProtectionLevelOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ekmConnectionKeyPath'] && !(typeof data['ekmConnectionKeyPath'] === 'string' || data['ekmConnectionKeyPath'] instanceof String)) {
            throw new Error("Expected the field `ekmConnectionKeyPath` to be a primitive type in the JSON string but got " + data['ekmConnectionKeyPath']);
        }
        // ensure the json data is a string
        if (data['externalKeyUri'] && !(typeof data['externalKeyUri'] === 'string' || data['externalKeyUri'] instanceof String)) {
            throw new Error("Expected the field `externalKeyUri` to be a primitive type in the JSON string but got " + data['externalKeyUri']);
        }

        return true;
    }


}



/**
 * The path to the external key material on the EKM when using EkmConnection e.g., \"v0/my/key\". Set this field instead of external_key_uri when using an EkmConnection.
 * @member {String} ekmConnectionKeyPath
 */
ExternalProtectionLevelOptions.prototype['ekmConnectionKeyPath'] = undefined;

/**
 * The URI for an external resource that this CryptoKeyVersion represents.
 * @member {String} externalKeyUri
 */
ExternalProtectionLevelOptions.prototype['externalKeyUri'] = undefined;






export default ExternalProtectionLevelOptions;

