/**
 * Cloud Key Management Service (KMS) API
 * Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AsymmetricDecryptRequest from './model/AsymmetricDecryptRequest';
import AsymmetricDecryptResponse from './model/AsymmetricDecryptResponse';
import AsymmetricSignRequest from './model/AsymmetricSignRequest';
import AsymmetricSignResponse from './model/AsymmetricSignResponse';
import AuditConfig from './model/AuditConfig';
import AuditLogConfig from './model/AuditLogConfig';
import Binding from './model/Binding';
import Certificate from './model/Certificate';
import CertificateChains from './model/CertificateChains';
import CryptoKey from './model/CryptoKey';
import CryptoKeyVersion from './model/CryptoKeyVersion';
import CryptoKeyVersionTemplate from './model/CryptoKeyVersionTemplate';
import DecryptRequest from './model/DecryptRequest';
import DecryptResponse from './model/DecryptResponse';
import Digest from './model/Digest';
import EkmConfig from './model/EkmConfig';
import EkmConnection from './model/EkmConnection';
import EncryptRequest from './model/EncryptRequest';
import EncryptResponse from './model/EncryptResponse';
import Expr from './model/Expr';
import ExternalProtectionLevelOptions from './model/ExternalProtectionLevelOptions';
import GenerateRandomBytesRequest from './model/GenerateRandomBytesRequest';
import GenerateRandomBytesResponse from './model/GenerateRandomBytesResponse';
import ImportCryptoKeyVersionRequest from './model/ImportCryptoKeyVersionRequest';
import ImportJob from './model/ImportJob';
import KeyOperationAttestation from './model/KeyOperationAttestation';
import KeyRing from './model/KeyRing';
import ListCryptoKeyVersionsResponse from './model/ListCryptoKeyVersionsResponse';
import ListCryptoKeysResponse from './model/ListCryptoKeysResponse';
import ListEkmConnectionsResponse from './model/ListEkmConnectionsResponse';
import ListImportJobsResponse from './model/ListImportJobsResponse';
import ListKeyRingsResponse from './model/ListKeyRingsResponse';
import ListLocationsResponse from './model/ListLocationsResponse';
import Location from './model/Location';
import LocationMetadata from './model/LocationMetadata';
import MacSignRequest from './model/MacSignRequest';
import MacSignResponse from './model/MacSignResponse';
import MacVerifyRequest from './model/MacVerifyRequest';
import MacVerifyResponse from './model/MacVerifyResponse';
import Policy from './model/Policy';
import PublicKey from './model/PublicKey';
import RawDecryptRequest from './model/RawDecryptRequest';
import RawDecryptResponse from './model/RawDecryptResponse';
import RawEncryptRequest from './model/RawEncryptRequest';
import RawEncryptResponse from './model/RawEncryptResponse';
import ServiceResolver from './model/ServiceResolver';
import SetIamPolicyRequest from './model/SetIamPolicyRequest';
import TestIamPermissionsRequest from './model/TestIamPermissionsRequest';
import TestIamPermissionsResponse from './model/TestIamPermissionsResponse';
import UpdateCryptoKeyPrimaryVersionRequest from './model/UpdateCryptoKeyPrimaryVersionRequest';
import WrappingPublicKey from './model/WrappingPublicKey';
import ProjectsApi from './api/ProjectsApi';


/**
* Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudKeyManagementServiceKmsApi = require('index'); // See note below*.
* var xxxSvc = new CloudKeyManagementServiceKmsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudKeyManagementServiceKmsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudKeyManagementServiceKmsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudKeyManagementServiceKmsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AsymmetricDecryptRequest model constructor.
     * @property {module:model/AsymmetricDecryptRequest}
     */
    AsymmetricDecryptRequest,

    /**
     * The AsymmetricDecryptResponse model constructor.
     * @property {module:model/AsymmetricDecryptResponse}
     */
    AsymmetricDecryptResponse,

    /**
     * The AsymmetricSignRequest model constructor.
     * @property {module:model/AsymmetricSignRequest}
     */
    AsymmetricSignRequest,

    /**
     * The AsymmetricSignResponse model constructor.
     * @property {module:model/AsymmetricSignResponse}
     */
    AsymmetricSignResponse,

    /**
     * The AuditConfig model constructor.
     * @property {module:model/AuditConfig}
     */
    AuditConfig,

    /**
     * The AuditLogConfig model constructor.
     * @property {module:model/AuditLogConfig}
     */
    AuditLogConfig,

    /**
     * The Binding model constructor.
     * @property {module:model/Binding}
     */
    Binding,

    /**
     * The Certificate model constructor.
     * @property {module:model/Certificate}
     */
    Certificate,

    /**
     * The CertificateChains model constructor.
     * @property {module:model/CertificateChains}
     */
    CertificateChains,

    /**
     * The CryptoKey model constructor.
     * @property {module:model/CryptoKey}
     */
    CryptoKey,

    /**
     * The CryptoKeyVersion model constructor.
     * @property {module:model/CryptoKeyVersion}
     */
    CryptoKeyVersion,

    /**
     * The CryptoKeyVersionTemplate model constructor.
     * @property {module:model/CryptoKeyVersionTemplate}
     */
    CryptoKeyVersionTemplate,

    /**
     * The DecryptRequest model constructor.
     * @property {module:model/DecryptRequest}
     */
    DecryptRequest,

    /**
     * The DecryptResponse model constructor.
     * @property {module:model/DecryptResponse}
     */
    DecryptResponse,

    /**
     * The Digest model constructor.
     * @property {module:model/Digest}
     */
    Digest,

    /**
     * The EkmConfig model constructor.
     * @property {module:model/EkmConfig}
     */
    EkmConfig,

    /**
     * The EkmConnection model constructor.
     * @property {module:model/EkmConnection}
     */
    EkmConnection,

    /**
     * The EncryptRequest model constructor.
     * @property {module:model/EncryptRequest}
     */
    EncryptRequest,

    /**
     * The EncryptResponse model constructor.
     * @property {module:model/EncryptResponse}
     */
    EncryptResponse,

    /**
     * The Expr model constructor.
     * @property {module:model/Expr}
     */
    Expr,

    /**
     * The ExternalProtectionLevelOptions model constructor.
     * @property {module:model/ExternalProtectionLevelOptions}
     */
    ExternalProtectionLevelOptions,

    /**
     * The GenerateRandomBytesRequest model constructor.
     * @property {module:model/GenerateRandomBytesRequest}
     */
    GenerateRandomBytesRequest,

    /**
     * The GenerateRandomBytesResponse model constructor.
     * @property {module:model/GenerateRandomBytesResponse}
     */
    GenerateRandomBytesResponse,

    /**
     * The ImportCryptoKeyVersionRequest model constructor.
     * @property {module:model/ImportCryptoKeyVersionRequest}
     */
    ImportCryptoKeyVersionRequest,

    /**
     * The ImportJob model constructor.
     * @property {module:model/ImportJob}
     */
    ImportJob,

    /**
     * The KeyOperationAttestation model constructor.
     * @property {module:model/KeyOperationAttestation}
     */
    KeyOperationAttestation,

    /**
     * The KeyRing model constructor.
     * @property {module:model/KeyRing}
     */
    KeyRing,

    /**
     * The ListCryptoKeyVersionsResponse model constructor.
     * @property {module:model/ListCryptoKeyVersionsResponse}
     */
    ListCryptoKeyVersionsResponse,

    /**
     * The ListCryptoKeysResponse model constructor.
     * @property {module:model/ListCryptoKeysResponse}
     */
    ListCryptoKeysResponse,

    /**
     * The ListEkmConnectionsResponse model constructor.
     * @property {module:model/ListEkmConnectionsResponse}
     */
    ListEkmConnectionsResponse,

    /**
     * The ListImportJobsResponse model constructor.
     * @property {module:model/ListImportJobsResponse}
     */
    ListImportJobsResponse,

    /**
     * The ListKeyRingsResponse model constructor.
     * @property {module:model/ListKeyRingsResponse}
     */
    ListKeyRingsResponse,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The LocationMetadata model constructor.
     * @property {module:model/LocationMetadata}
     */
    LocationMetadata,

    /**
     * The MacSignRequest model constructor.
     * @property {module:model/MacSignRequest}
     */
    MacSignRequest,

    /**
     * The MacSignResponse model constructor.
     * @property {module:model/MacSignResponse}
     */
    MacSignResponse,

    /**
     * The MacVerifyRequest model constructor.
     * @property {module:model/MacVerifyRequest}
     */
    MacVerifyRequest,

    /**
     * The MacVerifyResponse model constructor.
     * @property {module:model/MacVerifyResponse}
     */
    MacVerifyResponse,

    /**
     * The Policy model constructor.
     * @property {module:model/Policy}
     */
    Policy,

    /**
     * The PublicKey model constructor.
     * @property {module:model/PublicKey}
     */
    PublicKey,

    /**
     * The RawDecryptRequest model constructor.
     * @property {module:model/RawDecryptRequest}
     */
    RawDecryptRequest,

    /**
     * The RawDecryptResponse model constructor.
     * @property {module:model/RawDecryptResponse}
     */
    RawDecryptResponse,

    /**
     * The RawEncryptRequest model constructor.
     * @property {module:model/RawEncryptRequest}
     */
    RawEncryptRequest,

    /**
     * The RawEncryptResponse model constructor.
     * @property {module:model/RawEncryptResponse}
     */
    RawEncryptResponse,

    /**
     * The ServiceResolver model constructor.
     * @property {module:model/ServiceResolver}
     */
    ServiceResolver,

    /**
     * The SetIamPolicyRequest model constructor.
     * @property {module:model/SetIamPolicyRequest}
     */
    SetIamPolicyRequest,

    /**
     * The TestIamPermissionsRequest model constructor.
     * @property {module:model/TestIamPermissionsRequest}
     */
    TestIamPermissionsRequest,

    /**
     * The TestIamPermissionsResponse model constructor.
     * @property {module:model/TestIamPermissionsResponse}
     */
    TestIamPermissionsResponse,

    /**
     * The UpdateCryptoKeyPrimaryVersionRequest model constructor.
     * @property {module:model/UpdateCryptoKeyPrimaryVersionRequest}
     */
    UpdateCryptoKeyPrimaryVersionRequest,

    /**
     * The WrappingPublicKey model constructor.
     * @property {module:model/WrappingPublicKey}
     */
    WrappingPublicKey,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
