/**
 * Cloud Key Management Service (KMS) API
 * Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAsymmetricSignResponse.h
 *
 * Response message for KeyManagementService.AsymmetricSign.
 */

#ifndef OAIAsymmetricSignResponse_H
#define OAIAsymmetricSignResponse_H

#include <QJsonObject>

#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAsymmetricSignResponse : public OAIObject {
public:
    OAIAsymmetricSignResponse();
    OAIAsymmetricSignResponse(QString json);
    ~OAIAsymmetricSignResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getProtectionLevel() const;
    void setProtectionLevel(const QString &protection_level);
    bool is_protection_level_Set() const;
    bool is_protection_level_Valid() const;

    QByteArray getSignature() const;
    void setSignature(const QByteArray &signature);
    bool is_signature_Set() const;
    bool is_signature_Valid() const;

    QString getSignatureCrc32c() const;
    void setSignatureCrc32c(const QString &signature_crc32c);
    bool is_signature_crc32c_Set() const;
    bool is_signature_crc32c_Valid() const;

    bool isVerifiedDataCrc32c() const;
    void setVerifiedDataCrc32c(const bool &verified_data_crc32c);
    bool is_verified_data_crc32c_Set() const;
    bool is_verified_data_crc32c_Valid() const;

    bool isVerifiedDigestCrc32c() const;
    void setVerifiedDigestCrc32c(const bool &verified_digest_crc32c);
    bool is_verified_digest_crc32c_Set() const;
    bool is_verified_digest_crc32c_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_protection_level;
    bool m_protection_level_isSet;
    bool m_protection_level_isValid;

    QByteArray m_signature;
    bool m_signature_isSet;
    bool m_signature_isValid;

    QString m_signature_crc32c;
    bool m_signature_crc32c_isSet;
    bool m_signature_crc32c_isValid;

    bool m_verified_data_crc32c;
    bool m_verified_data_crc32c_isSet;
    bool m_verified_data_crc32c_isValid;

    bool m_verified_digest_crc32c;
    bool m_verified_digest_crc32c_isSet;
    bool m_verified_digest_crc32c_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAsymmetricSignResponse)

#endif // OAIAsymmetricSignResponse_H
