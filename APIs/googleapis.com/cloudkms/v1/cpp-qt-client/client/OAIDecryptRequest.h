/**
 * Cloud Key Management Service (KMS) API
 * Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDecryptRequest.h
 *
 * Request message for KeyManagementService.Decrypt.
 */

#ifndef OAIDecryptRequest_H
#define OAIDecryptRequest_H

#include <QJsonObject>

#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDecryptRequest : public OAIObject {
public:
    OAIDecryptRequest();
    OAIDecryptRequest(QString json);
    ~OAIDecryptRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QByteArray getAdditionalAuthenticatedData() const;
    void setAdditionalAuthenticatedData(const QByteArray &additional_authenticated_data);
    bool is_additional_authenticated_data_Set() const;
    bool is_additional_authenticated_data_Valid() const;

    QString getAdditionalAuthenticatedDataCrc32c() const;
    void setAdditionalAuthenticatedDataCrc32c(const QString &additional_authenticated_data_crc32c);
    bool is_additional_authenticated_data_crc32c_Set() const;
    bool is_additional_authenticated_data_crc32c_Valid() const;

    QByteArray getCiphertext() const;
    void setCiphertext(const QByteArray &ciphertext);
    bool is_ciphertext_Set() const;
    bool is_ciphertext_Valid() const;

    QString getCiphertextCrc32c() const;
    void setCiphertextCrc32c(const QString &ciphertext_crc32c);
    bool is_ciphertext_crc32c_Set() const;
    bool is_ciphertext_crc32c_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QByteArray m_additional_authenticated_data;
    bool m_additional_authenticated_data_isSet;
    bool m_additional_authenticated_data_isValid;

    QString m_additional_authenticated_data_crc32c;
    bool m_additional_authenticated_data_crc32c_isSet;
    bool m_additional_authenticated_data_crc32c_isValid;

    QByteArray m_ciphertext;
    bool m_ciphertext_isSet;
    bool m_ciphertext_isValid;

    QString m_ciphertext_crc32c;
    bool m_ciphertext_crc32c_isSet;
    bool m_ciphertext_crc32c_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDecryptRequest)

#endif // OAIDecryptRequest_H
