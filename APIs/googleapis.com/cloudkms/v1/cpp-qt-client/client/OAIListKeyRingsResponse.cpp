/**
 * Cloud Key Management Service (KMS) API
 * Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListKeyRingsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListKeyRingsResponse::OAIListKeyRingsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListKeyRingsResponse::OAIListKeyRingsResponse() {
    this->initializeModel();
}

OAIListKeyRingsResponse::~OAIListKeyRingsResponse() {}

void OAIListKeyRingsResponse::initializeModel() {

    m_key_rings_isSet = false;
    m_key_rings_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_total_size_isSet = false;
    m_total_size_isValid = false;
}

void OAIListKeyRingsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListKeyRingsResponse::fromJsonObject(QJsonObject json) {

    m_key_rings_isValid = ::OpenAPI::fromJsonValue(m_key_rings, json[QString("keyRings")]);
    m_key_rings_isSet = !json[QString("keyRings")].isNull() && m_key_rings_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_total_size_isValid = ::OpenAPI::fromJsonValue(m_total_size, json[QString("totalSize")]);
    m_total_size_isSet = !json[QString("totalSize")].isNull() && m_total_size_isValid;
}

QString OAIListKeyRingsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListKeyRingsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_key_rings.size() > 0) {
        obj.insert(QString("keyRings"), ::OpenAPI::toJsonValue(m_key_rings));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_total_size_isSet) {
        obj.insert(QString("totalSize"), ::OpenAPI::toJsonValue(m_total_size));
    }
    return obj;
}

QList<OAIKeyRing> OAIListKeyRingsResponse::getKeyRings() const {
    return m_key_rings;
}
void OAIListKeyRingsResponse::setKeyRings(const QList<OAIKeyRing> &key_rings) {
    m_key_rings = key_rings;
    m_key_rings_isSet = true;
}

bool OAIListKeyRingsResponse::is_key_rings_Set() const{
    return m_key_rings_isSet;
}

bool OAIListKeyRingsResponse::is_key_rings_Valid() const{
    return m_key_rings_isValid;
}

QString OAIListKeyRingsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListKeyRingsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListKeyRingsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListKeyRingsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

qint32 OAIListKeyRingsResponse::getTotalSize() const {
    return m_total_size;
}
void OAIListKeyRingsResponse::setTotalSize(const qint32 &total_size) {
    m_total_size = total_size;
    m_total_size_isSet = true;
}

bool OAIListKeyRingsResponse::is_total_size_Set() const{
    return m_total_size_isSet;
}

bool OAIListKeyRingsResponse::is_total_size_Valid() const{
    return m_total_size_isValid;
}

bool OAIListKeyRingsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_rings.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListKeyRingsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
