/**
 * Cloud Key Management Service (KMS) API
 * Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificate.h
 *
 * A Certificate represents an X.509 certificate used to authenticate HTTPS connections to EKM replicas.
 */

#ifndef OAICertificate_H
#define OAICertificate_H

#include <QJsonObject>

#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICertificate : public OAIObject {
public:
    OAICertificate();
    OAICertificate(QString json);
    ~OAICertificate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIssuer() const;
    void setIssuer(const QString &issuer);
    bool is_issuer_Set() const;
    bool is_issuer_Valid() const;

    QString getNotAfterTime() const;
    void setNotAfterTime(const QString &not_after_time);
    bool is_not_after_time_Set() const;
    bool is_not_after_time_Valid() const;

    QString getNotBeforeTime() const;
    void setNotBeforeTime(const QString &not_before_time);
    bool is_not_before_time_Set() const;
    bool is_not_before_time_Valid() const;

    bool isParsed() const;
    void setParsed(const bool &parsed);
    bool is_parsed_Set() const;
    bool is_parsed_Valid() const;

    QByteArray getRawDer() const;
    void setRawDer(const QByteArray &raw_der);
    bool is_raw_der_Set() const;
    bool is_raw_der_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    QString getSha256Fingerprint() const;
    void setSha256Fingerprint(const QString &sha256_fingerprint);
    bool is_sha256_fingerprint_Set() const;
    bool is_sha256_fingerprint_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QList<QString> getSubjectAlternativeDnsNames() const;
    void setSubjectAlternativeDnsNames(const QList<QString> &subject_alternative_dns_names);
    bool is_subject_alternative_dns_names_Set() const;
    bool is_subject_alternative_dns_names_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_issuer;
    bool m_issuer_isSet;
    bool m_issuer_isValid;

    QString m_not_after_time;
    bool m_not_after_time_isSet;
    bool m_not_after_time_isValid;

    QString m_not_before_time;
    bool m_not_before_time_isSet;
    bool m_not_before_time_isValid;

    bool m_parsed;
    bool m_parsed_isSet;
    bool m_parsed_isValid;

    QByteArray m_raw_der;
    bool m_raw_der_isSet;
    bool m_raw_der_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    QString m_sha256_fingerprint;
    bool m_sha256_fingerprint_isSet;
    bool m_sha256_fingerprint_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QList<QString> m_subject_alternative_dns_names;
    bool m_subject_alternative_dns_names_isSet;
    bool m_subject_alternative_dns_names_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificate)

#endif // OAICertificate_H
