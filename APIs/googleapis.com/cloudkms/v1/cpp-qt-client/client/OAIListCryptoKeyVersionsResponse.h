/**
 * Cloud Key Management Service (KMS) API
 * Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListCryptoKeyVersionsResponse.h
 *
 * Response message for KeyManagementService.ListCryptoKeyVersions.
 */

#ifndef OAIListCryptoKeyVersionsResponse_H
#define OAIListCryptoKeyVersionsResponse_H

#include <QJsonObject>

#include "OAICryptoKeyVersion.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICryptoKeyVersion;

class OAIListCryptoKeyVersionsResponse : public OAIObject {
public:
    OAIListCryptoKeyVersionsResponse();
    OAIListCryptoKeyVersionsResponse(QString json);
    ~OAIListCryptoKeyVersionsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICryptoKeyVersion> getCryptoKeyVersions() const;
    void setCryptoKeyVersions(const QList<OAICryptoKeyVersion> &crypto_key_versions);
    bool is_crypto_key_versions_Set() const;
    bool is_crypto_key_versions_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    qint32 getTotalSize() const;
    void setTotalSize(const qint32 &total_size);
    bool is_total_size_Set() const;
    bool is_total_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICryptoKeyVersion> m_crypto_key_versions;
    bool m_crypto_key_versions_isSet;
    bool m_crypto_key_versions_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    qint32 m_total_size;
    bool m_total_size_isSet;
    bool m_total_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListCryptoKeyVersionsResponse)

#endif // OAIListCryptoKeyVersionsResponse_H
