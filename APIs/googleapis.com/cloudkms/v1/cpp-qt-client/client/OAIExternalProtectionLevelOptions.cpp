/**
 * Cloud Key Management Service (KMS) API
 * Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExternalProtectionLevelOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExternalProtectionLevelOptions::OAIExternalProtectionLevelOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExternalProtectionLevelOptions::OAIExternalProtectionLevelOptions() {
    this->initializeModel();
}

OAIExternalProtectionLevelOptions::~OAIExternalProtectionLevelOptions() {}

void OAIExternalProtectionLevelOptions::initializeModel() {

    m_ekm_connection_key_path_isSet = false;
    m_ekm_connection_key_path_isValid = false;

    m_external_key_uri_isSet = false;
    m_external_key_uri_isValid = false;
}

void OAIExternalProtectionLevelOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExternalProtectionLevelOptions::fromJsonObject(QJsonObject json) {

    m_ekm_connection_key_path_isValid = ::OpenAPI::fromJsonValue(m_ekm_connection_key_path, json[QString("ekmConnectionKeyPath")]);
    m_ekm_connection_key_path_isSet = !json[QString("ekmConnectionKeyPath")].isNull() && m_ekm_connection_key_path_isValid;

    m_external_key_uri_isValid = ::OpenAPI::fromJsonValue(m_external_key_uri, json[QString("externalKeyUri")]);
    m_external_key_uri_isSet = !json[QString("externalKeyUri")].isNull() && m_external_key_uri_isValid;
}

QString OAIExternalProtectionLevelOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExternalProtectionLevelOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_ekm_connection_key_path_isSet) {
        obj.insert(QString("ekmConnectionKeyPath"), ::OpenAPI::toJsonValue(m_ekm_connection_key_path));
    }
    if (m_external_key_uri_isSet) {
        obj.insert(QString("externalKeyUri"), ::OpenAPI::toJsonValue(m_external_key_uri));
    }
    return obj;
}

QString OAIExternalProtectionLevelOptions::getEkmConnectionKeyPath() const {
    return m_ekm_connection_key_path;
}
void OAIExternalProtectionLevelOptions::setEkmConnectionKeyPath(const QString &ekm_connection_key_path) {
    m_ekm_connection_key_path = ekm_connection_key_path;
    m_ekm_connection_key_path_isSet = true;
}

bool OAIExternalProtectionLevelOptions::is_ekm_connection_key_path_Set() const{
    return m_ekm_connection_key_path_isSet;
}

bool OAIExternalProtectionLevelOptions::is_ekm_connection_key_path_Valid() const{
    return m_ekm_connection_key_path_isValid;
}

QString OAIExternalProtectionLevelOptions::getExternalKeyUri() const {
    return m_external_key_uri;
}
void OAIExternalProtectionLevelOptions::setExternalKeyUri(const QString &external_key_uri) {
    m_external_key_uri = external_key_uri;
    m_external_key_uri_isSet = true;
}

bool OAIExternalProtectionLevelOptions::is_external_key_uri_Set() const{
    return m_external_key_uri_isSet;
}

bool OAIExternalProtectionLevelOptions::is_external_key_uri_Valid() const{
    return m_external_key_uri_isValid;
}

bool OAIExternalProtectionLevelOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ekm_connection_key_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_key_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExternalProtectionLevelOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
