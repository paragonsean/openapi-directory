/**
 * Cloud Key Management Service (KMS) API
 * Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICertificateChains.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICertificateChains::OAICertificateChains(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICertificateChains::OAICertificateChains() {
    this->initializeModel();
}

OAICertificateChains::~OAICertificateChains() {}

void OAICertificateChains::initializeModel() {

    m_cavium_certs_isSet = false;
    m_cavium_certs_isValid = false;

    m_google_card_certs_isSet = false;
    m_google_card_certs_isValid = false;

    m_google_partition_certs_isSet = false;
    m_google_partition_certs_isValid = false;
}

void OAICertificateChains::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICertificateChains::fromJsonObject(QJsonObject json) {

    m_cavium_certs_isValid = ::OpenAPI::fromJsonValue(m_cavium_certs, json[QString("caviumCerts")]);
    m_cavium_certs_isSet = !json[QString("caviumCerts")].isNull() && m_cavium_certs_isValid;

    m_google_card_certs_isValid = ::OpenAPI::fromJsonValue(m_google_card_certs, json[QString("googleCardCerts")]);
    m_google_card_certs_isSet = !json[QString("googleCardCerts")].isNull() && m_google_card_certs_isValid;

    m_google_partition_certs_isValid = ::OpenAPI::fromJsonValue(m_google_partition_certs, json[QString("googlePartitionCerts")]);
    m_google_partition_certs_isSet = !json[QString("googlePartitionCerts")].isNull() && m_google_partition_certs_isValid;
}

QString OAICertificateChains::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICertificateChains::asJsonObject() const {
    QJsonObject obj;
    if (m_cavium_certs.size() > 0) {
        obj.insert(QString("caviumCerts"), ::OpenAPI::toJsonValue(m_cavium_certs));
    }
    if (m_google_card_certs.size() > 0) {
        obj.insert(QString("googleCardCerts"), ::OpenAPI::toJsonValue(m_google_card_certs));
    }
    if (m_google_partition_certs.size() > 0) {
        obj.insert(QString("googlePartitionCerts"), ::OpenAPI::toJsonValue(m_google_partition_certs));
    }
    return obj;
}

QList<QString> OAICertificateChains::getCaviumCerts() const {
    return m_cavium_certs;
}
void OAICertificateChains::setCaviumCerts(const QList<QString> &cavium_certs) {
    m_cavium_certs = cavium_certs;
    m_cavium_certs_isSet = true;
}

bool OAICertificateChains::is_cavium_certs_Set() const{
    return m_cavium_certs_isSet;
}

bool OAICertificateChains::is_cavium_certs_Valid() const{
    return m_cavium_certs_isValid;
}

QList<QString> OAICertificateChains::getGoogleCardCerts() const {
    return m_google_card_certs;
}
void OAICertificateChains::setGoogleCardCerts(const QList<QString> &google_card_certs) {
    m_google_card_certs = google_card_certs;
    m_google_card_certs_isSet = true;
}

bool OAICertificateChains::is_google_card_certs_Set() const{
    return m_google_card_certs_isSet;
}

bool OAICertificateChains::is_google_card_certs_Valid() const{
    return m_google_card_certs_isValid;
}

QList<QString> OAICertificateChains::getGooglePartitionCerts() const {
    return m_google_partition_certs;
}
void OAICertificateChains::setGooglePartitionCerts(const QList<QString> &google_partition_certs) {
    m_google_partition_certs = google_partition_certs;
    m_google_partition_certs_isSet = true;
}

bool OAICertificateChains::is_google_partition_certs_Set() const{
    return m_google_partition_certs_isSet;
}

bool OAICertificateChains::is_google_partition_certs_Valid() const{
    return m_google_partition_certs_isValid;
}

bool OAICertificateChains::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cavium_certs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_card_certs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_partition_certs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICertificateChains::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
