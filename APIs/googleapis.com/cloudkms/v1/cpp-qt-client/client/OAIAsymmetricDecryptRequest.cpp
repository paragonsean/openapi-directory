/**
 * Cloud Key Management Service (KMS) API
 * Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAsymmetricDecryptRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAsymmetricDecryptRequest::OAIAsymmetricDecryptRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAsymmetricDecryptRequest::OAIAsymmetricDecryptRequest() {
    this->initializeModel();
}

OAIAsymmetricDecryptRequest::~OAIAsymmetricDecryptRequest() {}

void OAIAsymmetricDecryptRequest::initializeModel() {

    m_ciphertext_isSet = false;
    m_ciphertext_isValid = false;

    m_ciphertext_crc32c_isSet = false;
    m_ciphertext_crc32c_isValid = false;
}

void OAIAsymmetricDecryptRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAsymmetricDecryptRequest::fromJsonObject(QJsonObject json) {

    m_ciphertext_isValid = ::OpenAPI::fromJsonValue(m_ciphertext, json[QString("ciphertext")]);
    m_ciphertext_isSet = !json[QString("ciphertext")].isNull() && m_ciphertext_isValid;

    m_ciphertext_crc32c_isValid = ::OpenAPI::fromJsonValue(m_ciphertext_crc32c, json[QString("ciphertextCrc32c")]);
    m_ciphertext_crc32c_isSet = !json[QString("ciphertextCrc32c")].isNull() && m_ciphertext_crc32c_isValid;
}

QString OAIAsymmetricDecryptRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAsymmetricDecryptRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_ciphertext_isSet) {
        obj.insert(QString("ciphertext"), ::OpenAPI::toJsonValue(m_ciphertext));
    }
    if (m_ciphertext_crc32c_isSet) {
        obj.insert(QString("ciphertextCrc32c"), ::OpenAPI::toJsonValue(m_ciphertext_crc32c));
    }
    return obj;
}

QByteArray OAIAsymmetricDecryptRequest::getCiphertext() const {
    return m_ciphertext;
}
void OAIAsymmetricDecryptRequest::setCiphertext(const QByteArray &ciphertext) {
    m_ciphertext = ciphertext;
    m_ciphertext_isSet = true;
}

bool OAIAsymmetricDecryptRequest::is_ciphertext_Set() const{
    return m_ciphertext_isSet;
}

bool OAIAsymmetricDecryptRequest::is_ciphertext_Valid() const{
    return m_ciphertext_isValid;
}

QString OAIAsymmetricDecryptRequest::getCiphertextCrc32c() const {
    return m_ciphertext_crc32c;
}
void OAIAsymmetricDecryptRequest::setCiphertextCrc32c(const QString &ciphertext_crc32c) {
    m_ciphertext_crc32c = ciphertext_crc32c;
    m_ciphertext_crc32c_isSet = true;
}

bool OAIAsymmetricDecryptRequest::is_ciphertext_crc32c_Set() const{
    return m_ciphertext_crc32c_isSet;
}

bool OAIAsymmetricDecryptRequest::is_ciphertext_crc32c_Valid() const{
    return m_ciphertext_crc32c_isValid;
}

bool OAIAsymmetricDecryptRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ciphertext_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ciphertext_crc32c_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAsymmetricDecryptRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
