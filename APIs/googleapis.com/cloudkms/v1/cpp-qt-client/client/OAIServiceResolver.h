/**
 * Cloud Key Management Service (KMS) API
 * Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceResolver.h
 *
 * A ServiceResolver represents an EKM replica that can be reached within an EkmConnection.
 */

#ifndef OAIServiceResolver_H
#define OAIServiceResolver_H

#include <QJsonObject>

#include "OAICertificate.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICertificate;

class OAIServiceResolver : public OAIObject {
public:
    OAIServiceResolver();
    OAIServiceResolver(QString json);
    ~OAIServiceResolver() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndpointFilter() const;
    void setEndpointFilter(const QString &endpoint_filter);
    bool is_endpoint_filter_Set() const;
    bool is_endpoint_filter_Valid() const;

    QString getHostname() const;
    void setHostname(const QString &hostname);
    bool is_hostname_Set() const;
    bool is_hostname_Valid() const;

    QList<OAICertificate> getServerCertificates() const;
    void setServerCertificates(const QList<OAICertificate> &server_certificates);
    bool is_server_certificates_Set() const;
    bool is_server_certificates_Valid() const;

    QString getServiceDirectoryService() const;
    void setServiceDirectoryService(const QString &service_directory_service);
    bool is_service_directory_service_Set() const;
    bool is_service_directory_service_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_endpoint_filter;
    bool m_endpoint_filter_isSet;
    bool m_endpoint_filter_isValid;

    QString m_hostname;
    bool m_hostname_isSet;
    bool m_hostname_isValid;

    QList<OAICertificate> m_server_certificates;
    bool m_server_certificates_isSet;
    bool m_server_certificates_isValid;

    QString m_service_directory_service;
    bool m_service_directory_service_isSet;
    bool m_service_directory_service_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceResolver)

#endif // OAIServiceResolver_H
