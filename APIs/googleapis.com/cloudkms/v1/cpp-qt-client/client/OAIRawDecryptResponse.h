/**
 * Cloud Key Management Service (KMS) API
 * Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRawDecryptResponse.h
 *
 * Response message for KeyManagementService.RawDecrypt.
 */

#ifndef OAIRawDecryptResponse_H
#define OAIRawDecryptResponse_H

#include <QJsonObject>

#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRawDecryptResponse : public OAIObject {
public:
    OAIRawDecryptResponse();
    OAIRawDecryptResponse(QString json);
    ~OAIRawDecryptResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QByteArray getPlaintext() const;
    void setPlaintext(const QByteArray &plaintext);
    bool is_plaintext_Set() const;
    bool is_plaintext_Valid() const;

    QString getPlaintextCrc32c() const;
    void setPlaintextCrc32c(const QString &plaintext_crc32c);
    bool is_plaintext_crc32c_Set() const;
    bool is_plaintext_crc32c_Valid() const;

    QString getProtectionLevel() const;
    void setProtectionLevel(const QString &protection_level);
    bool is_protection_level_Set() const;
    bool is_protection_level_Valid() const;

    bool isVerifiedAdditionalAuthenticatedDataCrc32c() const;
    void setVerifiedAdditionalAuthenticatedDataCrc32c(const bool &verified_additional_authenticated_data_crc32c);
    bool is_verified_additional_authenticated_data_crc32c_Set() const;
    bool is_verified_additional_authenticated_data_crc32c_Valid() const;

    bool isVerifiedCiphertextCrc32c() const;
    void setVerifiedCiphertextCrc32c(const bool &verified_ciphertext_crc32c);
    bool is_verified_ciphertext_crc32c_Set() const;
    bool is_verified_ciphertext_crc32c_Valid() const;

    bool isVerifiedInitializationVectorCrc32c() const;
    void setVerifiedInitializationVectorCrc32c(const bool &verified_initialization_vector_crc32c);
    bool is_verified_initialization_vector_crc32c_Set() const;
    bool is_verified_initialization_vector_crc32c_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QByteArray m_plaintext;
    bool m_plaintext_isSet;
    bool m_plaintext_isValid;

    QString m_plaintext_crc32c;
    bool m_plaintext_crc32c_isSet;
    bool m_plaintext_crc32c_isValid;

    QString m_protection_level;
    bool m_protection_level_isSet;
    bool m_protection_level_isValid;

    bool m_verified_additional_authenticated_data_crc32c;
    bool m_verified_additional_authenticated_data_crc32c_isSet;
    bool m_verified_additional_authenticated_data_crc32c_isValid;

    bool m_verified_ciphertext_crc32c;
    bool m_verified_ciphertext_crc32c_isSet;
    bool m_verified_ciphertext_crc32c_isValid;

    bool m_verified_initialization_vector_crc32c;
    bool m_verified_initialization_vector_crc32c_isSet;
    bool m_verified_initialization_vector_crc32c_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRawDecryptResponse)

#endif // OAIRawDecryptResponse_H
