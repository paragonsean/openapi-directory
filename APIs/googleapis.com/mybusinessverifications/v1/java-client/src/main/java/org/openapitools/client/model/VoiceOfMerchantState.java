/*
 * My Business Verifications API
 * The My Business Verifications API provides an interface for taking verifications related actions for locations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ComplyWithGuidelines;
import org.openapitools.client.model.Verify;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response message for VoiceOfMerchant.GetVoiceOfMerchantState.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:43.346754-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VoiceOfMerchantState {
  public static final String SERIALIZED_NAME_COMPLY_WITH_GUIDELINES = "complyWithGuidelines";
  @SerializedName(SERIALIZED_NAME_COMPLY_WITH_GUIDELINES)
  private ComplyWithGuidelines complyWithGuidelines;

  public static final String SERIALIZED_NAME_HAS_BUSINESS_AUTHORITY = "hasBusinessAuthority";
  @SerializedName(SERIALIZED_NAME_HAS_BUSINESS_AUTHORITY)
  private Boolean hasBusinessAuthority;

  public static final String SERIALIZED_NAME_HAS_VOICE_OF_MERCHANT = "hasVoiceOfMerchant";
  @SerializedName(SERIALIZED_NAME_HAS_VOICE_OF_MERCHANT)
  private Boolean hasVoiceOfMerchant;

  public static final String SERIALIZED_NAME_RESOLVE_OWNERSHIP_CONFLICT = "resolveOwnershipConflict";
  @SerializedName(SERIALIZED_NAME_RESOLVE_OWNERSHIP_CONFLICT)
  private Object resolveOwnershipConflict;

  public static final String SERIALIZED_NAME_VERIFY = "verify";
  @SerializedName(SERIALIZED_NAME_VERIFY)
  private Verify verify;

  public static final String SERIALIZED_NAME_WAIT_FOR_VOICE_OF_MERCHANT = "waitForVoiceOfMerchant";
  @SerializedName(SERIALIZED_NAME_WAIT_FOR_VOICE_OF_MERCHANT)
  private Object waitForVoiceOfMerchant;

  public VoiceOfMerchantState() {
  }

  public VoiceOfMerchantState complyWithGuidelines(ComplyWithGuidelines complyWithGuidelines) {
    this.complyWithGuidelines = complyWithGuidelines;
    return this;
  }

  /**
   * Get complyWithGuidelines
   * @return complyWithGuidelines
   */
  @javax.annotation.Nullable
  public ComplyWithGuidelines getComplyWithGuidelines() {
    return complyWithGuidelines;
  }

  public void setComplyWithGuidelines(ComplyWithGuidelines complyWithGuidelines) {
    this.complyWithGuidelines = complyWithGuidelines;
  }


  public VoiceOfMerchantState hasBusinessAuthority(Boolean hasBusinessAuthority) {
    this.hasBusinessAuthority = hasBusinessAuthority;
    return this;
  }

  /**
   * Indicates whether the location has the authority (ownership) over the business on Google. If true, another location cannot take over and become the dominant listing on Maps. However, edits will not become live unless Voice of Merchant is gained (i.e. has_voice_of_merchant is true).
   * @return hasBusinessAuthority
   */
  @javax.annotation.Nullable
  public Boolean getHasBusinessAuthority() {
    return hasBusinessAuthority;
  }

  public void setHasBusinessAuthority(Boolean hasBusinessAuthority) {
    this.hasBusinessAuthority = hasBusinessAuthority;
  }


  public VoiceOfMerchantState hasVoiceOfMerchant(Boolean hasVoiceOfMerchant) {
    this.hasVoiceOfMerchant = hasVoiceOfMerchant;
    return this;
  }

  /**
   * Indicates whether the location is in good standing and has control over the business on Google. Any edits made to the location will propagate to Maps after passing the review phase.
   * @return hasVoiceOfMerchant
   */
  @javax.annotation.Nullable
  public Boolean getHasVoiceOfMerchant() {
    return hasVoiceOfMerchant;
  }

  public void setHasVoiceOfMerchant(Boolean hasVoiceOfMerchant) {
    this.hasVoiceOfMerchant = hasVoiceOfMerchant;
  }


  public VoiceOfMerchantState resolveOwnershipConflict(Object resolveOwnershipConflict) {
    this.resolveOwnershipConflict = resolveOwnershipConflict;
    return this;
  }

  /**
   * Indicates that the location duplicates another location that is in good standing.
   * @return resolveOwnershipConflict
   */
  @javax.annotation.Nullable
  public Object getResolveOwnershipConflict() {
    return resolveOwnershipConflict;
  }

  public void setResolveOwnershipConflict(Object resolveOwnershipConflict) {
    this.resolveOwnershipConflict = resolveOwnershipConflict;
  }


  public VoiceOfMerchantState verify(Verify verify) {
    this.verify = verify;
    return this;
  }

  /**
   * Get verify
   * @return verify
   */
  @javax.annotation.Nullable
  public Verify getVerify() {
    return verify;
  }

  public void setVerify(Verify verify) {
    this.verify = verify;
  }


  public VoiceOfMerchantState waitForVoiceOfMerchant(Object waitForVoiceOfMerchant) {
    this.waitForVoiceOfMerchant = waitForVoiceOfMerchant;
    return this;
  }

  /**
   * Indicates that the location will gain voice of merchant after passing review.
   * @return waitForVoiceOfMerchant
   */
  @javax.annotation.Nullable
  public Object getWaitForVoiceOfMerchant() {
    return waitForVoiceOfMerchant;
  }

  public void setWaitForVoiceOfMerchant(Object waitForVoiceOfMerchant) {
    this.waitForVoiceOfMerchant = waitForVoiceOfMerchant;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VoiceOfMerchantState voiceOfMerchantState = (VoiceOfMerchantState) o;
    return Objects.equals(this.complyWithGuidelines, voiceOfMerchantState.complyWithGuidelines) &&
        Objects.equals(this.hasBusinessAuthority, voiceOfMerchantState.hasBusinessAuthority) &&
        Objects.equals(this.hasVoiceOfMerchant, voiceOfMerchantState.hasVoiceOfMerchant) &&
        Objects.equals(this.resolveOwnershipConflict, voiceOfMerchantState.resolveOwnershipConflict) &&
        Objects.equals(this.verify, voiceOfMerchantState.verify) &&
        Objects.equals(this.waitForVoiceOfMerchant, voiceOfMerchantState.waitForVoiceOfMerchant);
  }

  @Override
  public int hashCode() {
    return Objects.hash(complyWithGuidelines, hasBusinessAuthority, hasVoiceOfMerchant, resolveOwnershipConflict, verify, waitForVoiceOfMerchant);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VoiceOfMerchantState {\n");
    sb.append("    complyWithGuidelines: ").append(toIndentedString(complyWithGuidelines)).append("\n");
    sb.append("    hasBusinessAuthority: ").append(toIndentedString(hasBusinessAuthority)).append("\n");
    sb.append("    hasVoiceOfMerchant: ").append(toIndentedString(hasVoiceOfMerchant)).append("\n");
    sb.append("    resolveOwnershipConflict: ").append(toIndentedString(resolveOwnershipConflict)).append("\n");
    sb.append("    verify: ").append(toIndentedString(verify)).append("\n");
    sb.append("    waitForVoiceOfMerchant: ").append(toIndentedString(waitForVoiceOfMerchant)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("complyWithGuidelines");
    openapiFields.add("hasBusinessAuthority");
    openapiFields.add("hasVoiceOfMerchant");
    openapiFields.add("resolveOwnershipConflict");
    openapiFields.add("verify");
    openapiFields.add("waitForVoiceOfMerchant");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VoiceOfMerchantState
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VoiceOfMerchantState.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VoiceOfMerchantState is not found in the empty JSON string", VoiceOfMerchantState.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VoiceOfMerchantState.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VoiceOfMerchantState` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `complyWithGuidelines`
      if (jsonObj.get("complyWithGuidelines") != null && !jsonObj.get("complyWithGuidelines").isJsonNull()) {
        ComplyWithGuidelines.validateJsonElement(jsonObj.get("complyWithGuidelines"));
      }
      // validate the optional field `verify`
      if (jsonObj.get("verify") != null && !jsonObj.get("verify").isJsonNull()) {
        Verify.validateJsonElement(jsonObj.get("verify"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VoiceOfMerchantState.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VoiceOfMerchantState' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VoiceOfMerchantState> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VoiceOfMerchantState.class));

       return (TypeAdapter<T>) new TypeAdapter<VoiceOfMerchantState>() {
           @Override
           public void write(JsonWriter out, VoiceOfMerchantState value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VoiceOfMerchantState read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VoiceOfMerchantState given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VoiceOfMerchantState
   * @throws IOException if the JSON string is invalid with respect to VoiceOfMerchantState
   */
  public static VoiceOfMerchantState fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VoiceOfMerchantState.class);
  }

  /**
   * Convert an instance of VoiceOfMerchantState to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

