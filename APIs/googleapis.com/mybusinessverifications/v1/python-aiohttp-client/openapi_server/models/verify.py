# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Verify(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, has_pending_verification: bool=None):
        """Verify - a model defined in OpenAPI

        :param has_pending_verification: The has_pending_verification of this Verify.
        """
        self.openapi_types = {
            'has_pending_verification': bool
        }

        self.attribute_map = {
            'has_pending_verification': 'hasPendingVerification'
        }

        self._has_pending_verification = has_pending_verification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Verify':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Verify of this Verify.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def has_pending_verification(self):
        """Gets the has_pending_verification of this Verify.

        Indicates whether a verification process has already started, and can be completed by the location.

        :return: The has_pending_verification of this Verify.
        :rtype: bool
        """
        return self._has_pending_verification

    @has_pending_verification.setter
    def has_pending_verification(self, has_pending_verification):
        """Sets the has_pending_verification of this Verify.

        Indicates whether a verification process has already started, and can be completed by the location.

        :param has_pending_verification: The has_pending_verification of this Verify.
        :type has_pending_verification: bool
        """

        self._has_pending_verification = has_pending_verification
