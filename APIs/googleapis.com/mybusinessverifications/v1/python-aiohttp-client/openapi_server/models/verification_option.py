# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address_verification_data import AddressVerificationData
from openapi_server.models.email_verification_data import EmailVerificationData
from openapi_server import util


class VerificationOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_data: AddressVerificationData=None, announcement: str=None, email_data: EmailVerificationData=None, phone_number: str=None, verification_method: str=None):
        """VerificationOption - a model defined in OpenAPI

        :param address_data: The address_data of this VerificationOption.
        :param announcement: The announcement of this VerificationOption.
        :param email_data: The email_data of this VerificationOption.
        :param phone_number: The phone_number of this VerificationOption.
        :param verification_method: The verification_method of this VerificationOption.
        """
        self.openapi_types = {
            'address_data': AddressVerificationData,
            'announcement': str,
            'email_data': EmailVerificationData,
            'phone_number': str,
            'verification_method': str
        }

        self.attribute_map = {
            'address_data': 'addressData',
            'announcement': 'announcement',
            'email_data': 'emailData',
            'phone_number': 'phoneNumber',
            'verification_method': 'verificationMethod'
        }

        self._address_data = address_data
        self._announcement = announcement
        self._email_data = email_data
        self._phone_number = phone_number
        self._verification_method = verification_method

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerificationOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VerificationOption of this VerificationOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_data(self):
        """Gets the address_data of this VerificationOption.


        :return: The address_data of this VerificationOption.
        :rtype: AddressVerificationData
        """
        return self._address_data

    @address_data.setter
    def address_data(self, address_data):
        """Sets the address_data of this VerificationOption.


        :param address_data: The address_data of this VerificationOption.
        :type address_data: AddressVerificationData
        """

        self._address_data = address_data

    @property
    def announcement(self):
        """Gets the announcement of this VerificationOption.

        Set only if the method is VETTED_PARTNER.

        :return: The announcement of this VerificationOption.
        :rtype: str
        """
        return self._announcement

    @announcement.setter
    def announcement(self, announcement):
        """Sets the announcement of this VerificationOption.

        Set only if the method is VETTED_PARTNER.

        :param announcement: The announcement of this VerificationOption.
        :type announcement: str
        """

        self._announcement = announcement

    @property
    def email_data(self):
        """Gets the email_data of this VerificationOption.


        :return: The email_data of this VerificationOption.
        :rtype: EmailVerificationData
        """
        return self._email_data

    @email_data.setter
    def email_data(self, email_data):
        """Sets the email_data of this VerificationOption.


        :param email_data: The email_data of this VerificationOption.
        :type email_data: EmailVerificationData
        """

        self._email_data = email_data

    @property
    def phone_number(self):
        """Gets the phone_number of this VerificationOption.

        Set only if the method is PHONE_CALL or SMS. Phone number that the PIN will be sent to.

        :return: The phone_number of this VerificationOption.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this VerificationOption.

        Set only if the method is PHONE_CALL or SMS. Phone number that the PIN will be sent to.

        :param phone_number: The phone_number of this VerificationOption.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def verification_method(self):
        """Gets the verification_method of this VerificationOption.

        Method to verify the location.

        :return: The verification_method of this VerificationOption.
        :rtype: str
        """
        return self._verification_method

    @verification_method.setter
    def verification_method(self, verification_method):
        """Sets the verification_method of this VerificationOption.

        Method to verify the location.

        :param verification_method: The verification_method of this VerificationOption.
        :type verification_method: str
        """
        allowed_values = ["VERIFICATION_METHOD_UNSPECIFIED", "ADDRESS", "EMAIL", "PHONE_CALL", "SMS", "AUTO", "VETTED_PARTNER"]  # noqa: E501
        if verification_method not in allowed_values:
            raise ValueError(
                "Invalid value for `verification_method` ({0}), must be one of {1}"
                .format(verification_method, allowed_values)
            )

        self._verification_method = verification_method
