/**
 * My Business Verifications API
 * The My Business Verifications API provides an interface for taking verifications related actions for locations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVoiceOfMerchantState.h
 *
 * Response message for VoiceOfMerchant.GetVoiceOfMerchantState.
 */

#ifndef OAIVoiceOfMerchantState_H
#define OAIVoiceOfMerchantState_H

#include <QJsonObject>

#include "OAIComplyWithGuidelines.h"
#include "OAIObject.h"
#include "OAIVerify.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIComplyWithGuidelines;
class OAIVerify;

class OAIVoiceOfMerchantState : public OAIObject {
public:
    OAIVoiceOfMerchantState();
    OAIVoiceOfMerchantState(QString json);
    ~OAIVoiceOfMerchantState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIComplyWithGuidelines getComplyWithGuidelines() const;
    void setComplyWithGuidelines(const OAIComplyWithGuidelines &comply_with_guidelines);
    bool is_comply_with_guidelines_Set() const;
    bool is_comply_with_guidelines_Valid() const;

    bool isHasBusinessAuthority() const;
    void setHasBusinessAuthority(const bool &has_business_authority);
    bool is_has_business_authority_Set() const;
    bool is_has_business_authority_Valid() const;

    bool isHasVoiceOfMerchant() const;
    void setHasVoiceOfMerchant(const bool &has_voice_of_merchant);
    bool is_has_voice_of_merchant_Set() const;
    bool is_has_voice_of_merchant_Valid() const;

    OAIObject getResolveOwnershipConflict() const;
    void setResolveOwnershipConflict(const OAIObject &resolve_ownership_conflict);
    bool is_resolve_ownership_conflict_Set() const;
    bool is_resolve_ownership_conflict_Valid() const;

    OAIVerify getVerify() const;
    void setVerify(const OAIVerify &verify);
    bool is_verify_Set() const;
    bool is_verify_Valid() const;

    OAIObject getWaitForVoiceOfMerchant() const;
    void setWaitForVoiceOfMerchant(const OAIObject &wait_for_voice_of_merchant);
    bool is_wait_for_voice_of_merchant_Set() const;
    bool is_wait_for_voice_of_merchant_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIComplyWithGuidelines m_comply_with_guidelines;
    bool m_comply_with_guidelines_isSet;
    bool m_comply_with_guidelines_isValid;

    bool m_has_business_authority;
    bool m_has_business_authority_isSet;
    bool m_has_business_authority_isValid;

    bool m_has_voice_of_merchant;
    bool m_has_voice_of_merchant_isSet;
    bool m_has_voice_of_merchant_isValid;

    OAIObject m_resolve_ownership_conflict;
    bool m_resolve_ownership_conflict_isSet;
    bool m_resolve_ownership_conflict_isValid;

    OAIVerify m_verify;
    bool m_verify_isSet;
    bool m_verify_isValid;

    OAIObject m_wait_for_voice_of_merchant;
    bool m_wait_for_voice_of_merchant_isSet;
    bool m_wait_for_voice_of_merchant_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVoiceOfMerchantState)

#endif // OAIVoiceOfMerchantState_H
