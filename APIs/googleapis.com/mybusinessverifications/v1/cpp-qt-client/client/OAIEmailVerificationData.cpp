/**
 * My Business Verifications API
 * The My Business Verifications API provides an interface for taking verifications related actions for locations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmailVerificationData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmailVerificationData::OAIEmailVerificationData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmailVerificationData::OAIEmailVerificationData() {
    this->initializeModel();
}

OAIEmailVerificationData::~OAIEmailVerificationData() {}

void OAIEmailVerificationData::initializeModel() {

    m_domain_isSet = false;
    m_domain_isValid = false;

    m_is_user_name_editable_isSet = false;
    m_is_user_name_editable_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;
}

void OAIEmailVerificationData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmailVerificationData::fromJsonObject(QJsonObject json) {

    m_domain_isValid = ::OpenAPI::fromJsonValue(m_domain, json[QString("domain")]);
    m_domain_isSet = !json[QString("domain")].isNull() && m_domain_isValid;

    m_is_user_name_editable_isValid = ::OpenAPI::fromJsonValue(m_is_user_name_editable, json[QString("isUserNameEditable")]);
    m_is_user_name_editable_isSet = !json[QString("isUserNameEditable")].isNull() && m_is_user_name_editable_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;
}

QString OAIEmailVerificationData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmailVerificationData::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_isSet) {
        obj.insert(QString("domain"), ::OpenAPI::toJsonValue(m_domain));
    }
    if (m_is_user_name_editable_isSet) {
        obj.insert(QString("isUserNameEditable"), ::OpenAPI::toJsonValue(m_is_user_name_editable));
    }
    if (m_user_isSet) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    return obj;
}

QString OAIEmailVerificationData::getDomain() const {
    return m_domain;
}
void OAIEmailVerificationData::setDomain(const QString &domain) {
    m_domain = domain;
    m_domain_isSet = true;
}

bool OAIEmailVerificationData::is_domain_Set() const{
    return m_domain_isSet;
}

bool OAIEmailVerificationData::is_domain_Valid() const{
    return m_domain_isValid;
}

bool OAIEmailVerificationData::isIsUserNameEditable() const {
    return m_is_user_name_editable;
}
void OAIEmailVerificationData::setIsUserNameEditable(const bool &is_user_name_editable) {
    m_is_user_name_editable = is_user_name_editable;
    m_is_user_name_editable_isSet = true;
}

bool OAIEmailVerificationData::is_is_user_name_editable_Set() const{
    return m_is_user_name_editable_isSet;
}

bool OAIEmailVerificationData::is_is_user_name_editable_Valid() const{
    return m_is_user_name_editable_isValid;
}

QString OAIEmailVerificationData::getUser() const {
    return m_user;
}
void OAIEmailVerificationData::setUser(const QString &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIEmailVerificationData::is_user_Set() const{
    return m_user_isSet;
}

bool OAIEmailVerificationData::is_user_Valid() const{
    return m_user_isValid;
}

bool OAIEmailVerificationData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_user_name_editable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmailVerificationData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
