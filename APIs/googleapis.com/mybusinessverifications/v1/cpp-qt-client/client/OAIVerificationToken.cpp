/**
 * My Business Verifications API
 * The My Business Verifications API provides an interface for taking verifications related actions for locations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVerificationToken.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVerificationToken::OAIVerificationToken(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVerificationToken::OAIVerificationToken() {
    this->initializeModel();
}

OAIVerificationToken::~OAIVerificationToken() {}

void OAIVerificationToken::initializeModel() {

    m_token_string_isSet = false;
    m_token_string_isValid = false;
}

void OAIVerificationToken::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVerificationToken::fromJsonObject(QJsonObject json) {

    m_token_string_isValid = ::OpenAPI::fromJsonValue(m_token_string, json[QString("tokenString")]);
    m_token_string_isSet = !json[QString("tokenString")].isNull() && m_token_string_isValid;
}

QString OAIVerificationToken::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVerificationToken::asJsonObject() const {
    QJsonObject obj;
    if (m_token_string_isSet) {
        obj.insert(QString("tokenString"), ::OpenAPI::toJsonValue(m_token_string));
    }
    return obj;
}

QString OAIVerificationToken::getTokenString() const {
    return m_token_string;
}
void OAIVerificationToken::setTokenString(const QString &token_string) {
    m_token_string = token_string;
    m_token_string_isSet = true;
}

bool OAIVerificationToken::is_token_string_Set() const{
    return m_token_string_isSet;
}

bool OAIVerificationToken::is_token_string_Valid() const{
    return m_token_string_isValid;
}

bool OAIVerificationToken::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_token_string_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVerificationToken::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
