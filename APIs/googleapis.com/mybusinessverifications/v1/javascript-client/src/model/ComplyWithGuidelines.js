/**
 * My Business Verifications API
 * The My Business Verifications API provides an interface for taking verifications related actions for locations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ComplyWithGuidelines model module.
 * @module model/ComplyWithGuidelines
 * @version v1
 */
class ComplyWithGuidelines {
    /**
     * Constructs a new <code>ComplyWithGuidelines</code>.
     * Indicates that the location fails to comply with our [guidelines](https://support.google.com/business/answer/3038177).
     * @alias module:model/ComplyWithGuidelines
     */
    constructor() { 
        
        ComplyWithGuidelines.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ComplyWithGuidelines</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ComplyWithGuidelines} obj Optional instance to populate.
     * @return {module:model/ComplyWithGuidelines} The populated <code>ComplyWithGuidelines</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ComplyWithGuidelines();

            if (data.hasOwnProperty('recommendationReason')) {
                obj['recommendationReason'] = ApiClient.convertToType(data['recommendationReason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ComplyWithGuidelines</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ComplyWithGuidelines</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['recommendationReason'] && !(typeof data['recommendationReason'] === 'string' || data['recommendationReason'] instanceof String)) {
            throw new Error("Expected the field `recommendationReason` to be a primitive type in the JSON string but got " + data['recommendationReason']);
        }

        return true;
    }


}



/**
 * The reason why the location is being recommended to comply with guidelines.
 * @member {module:model/ComplyWithGuidelines.RecommendationReasonEnum} recommendationReason
 */
ComplyWithGuidelines.prototype['recommendationReason'] = undefined;





/**
 * Allowed values for the <code>recommendationReason</code> property.
 * @enum {String}
 * @readonly
 */
ComplyWithGuidelines['RecommendationReasonEnum'] = {

    /**
     * value: "RECOMMENDATION_REASON_UNSPECIFIED"
     * @const
     */
    "RECOMMENDATION_REASON_UNSPECIFIED": "RECOMMENDATION_REASON_UNSPECIFIED",

    /**
     * value: "BUSINESS_LOCATION_SUSPENDED"
     * @const
     */
    "BUSINESS_LOCATION_SUSPENDED": "BUSINESS_LOCATION_SUSPENDED",

    /**
     * value: "BUSINESS_LOCATION_DISABLED"
     * @const
     */
    "BUSINESS_LOCATION_DISABLED": "BUSINESS_LOCATION_DISABLED"
};



export default ComplyWithGuidelines;

