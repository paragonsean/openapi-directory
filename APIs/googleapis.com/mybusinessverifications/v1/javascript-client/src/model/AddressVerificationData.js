/**
 * My Business Verifications API
 * The My Business Verifications API provides an interface for taking verifications related actions for locations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostalAddress from './PostalAddress';

/**
 * The AddressVerificationData model module.
 * @module model/AddressVerificationData
 * @version v1
 */
class AddressVerificationData {
    /**
     * Constructs a new <code>AddressVerificationData</code>.
     * Display data for verifications through postcard.
     * @alias module:model/AddressVerificationData
     */
    constructor() { 
        
        AddressVerificationData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddressVerificationData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddressVerificationData} obj Optional instance to populate.
     * @return {module:model/AddressVerificationData} The populated <code>AddressVerificationData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddressVerificationData();

            if (data.hasOwnProperty('address')) {
                obj['address'] = PostalAddress.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('business')) {
                obj['business'] = ApiClient.convertToType(data['business'], 'String');
            }
            if (data.hasOwnProperty('expectedDeliveryDaysRegion')) {
                obj['expectedDeliveryDaysRegion'] = ApiClient.convertToType(data['expectedDeliveryDaysRegion'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddressVerificationData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddressVerificationData</code>.
     */
    static validateJSON(data) {
        // validate the optional field `address`
        if (data['address']) { // data not null
          PostalAddress.validateJSON(data['address']);
        }
        // ensure the json data is a string
        if (data['business'] && !(typeof data['business'] === 'string' || data['business'] instanceof String)) {
            throw new Error("Expected the field `business` to be a primitive type in the JSON string but got " + data['business']);
        }

        return true;
    }


}



/**
 * @member {module:model/PostalAddress} address
 */
AddressVerificationData.prototype['address'] = undefined;

/**
 * Merchant's business name.
 * @member {String} business
 */
AddressVerificationData.prototype['business'] = undefined;

/**
 * Expected number of days it takes to deliver a postcard to the address's region.
 * @member {Number} expectedDeliveryDaysRegion
 */
AddressVerificationData.prototype['expectedDeliveryDaysRegion'] = undefined;






export default AddressVerificationData;

