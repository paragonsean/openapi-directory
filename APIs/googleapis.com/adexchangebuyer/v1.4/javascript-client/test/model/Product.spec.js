/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdExchangeBuyerApi);
  }
}(this, function(expect, AdExchangeBuyerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdExchangeBuyerApi.Product();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Product', function() {
    it('should create an instance of Product', function() {
      // uncomment below and update the code to test Product
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be.a(AdExchangeBuyerApi.Product);
    });

    it('should have the property billedBuyer (base name: "billedBuyer")', function() {
      // uncomment below and update the code to test the property billedBuyer
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property buyer (base name: "buyer")', function() {
      // uncomment below and update the code to test the property buyer
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property creationTimeMs (base name: "creationTimeMs")', function() {
      // uncomment below and update the code to test the property creationTimeMs
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property creatorContacts (base name: "creatorContacts")', function() {
      // uncomment below and update the code to test the property creatorContacts
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property creatorRole (base name: "creatorRole")', function() {
      // uncomment below and update the code to test the property creatorRole
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property deliveryControl (base name: "deliveryControl")', function() {
      // uncomment below and update the code to test the property deliveryControl
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property flightEndTimeMs (base name: "flightEndTimeMs")', function() {
      // uncomment below and update the code to test the property flightEndTimeMs
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property flightStartTimeMs (base name: "flightStartTimeMs")', function() {
      // uncomment below and update the code to test the property flightStartTimeMs
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property hasCreatorSignedOff (base name: "hasCreatorSignedOff")', function() {
      // uncomment below and update the code to test the property hasCreatorSignedOff
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property inventorySource (base name: "inventorySource")', function() {
      // uncomment below and update the code to test the property inventorySource
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdateTimeMs (base name: "lastUpdateTimeMs")', function() {
      // uncomment below and update the code to test the property lastUpdateTimeMs
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property legacyOfferId (base name: "legacyOfferId")', function() {
      // uncomment below and update the code to test the property legacyOfferId
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property marketplacePublisherProfileId (base name: "marketplacePublisherProfileId")', function() {
      // uncomment below and update the code to test the property marketplacePublisherProfileId
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property privateAuctionId (base name: "privateAuctionId")', function() {
      // uncomment below and update the code to test the property privateAuctionId
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property productId (base name: "productId")', function() {
      // uncomment below and update the code to test the property productId
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property publisherProfileId (base name: "publisherProfileId")', function() {
      // uncomment below and update the code to test the property publisherProfileId
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property publisherProvidedForecast (base name: "publisherProvidedForecast")', function() {
      // uncomment below and update the code to test the property publisherProvidedForecast
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property revisionNumber (base name: "revisionNumber")', function() {
      // uncomment below and update the code to test the property revisionNumber
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property seller (base name: "seller")', function() {
      // uncomment below and update the code to test the property seller
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property sharedTargetings (base name: "sharedTargetings")', function() {
      // uncomment below and update the code to test the property sharedTargetings
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property syndicationProduct (base name: "syndicationProduct")', function() {
      // uncomment below and update the code to test the property syndicationProduct
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property terms (base name: "terms")', function() {
      // uncomment below and update the code to test the property terms
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

    it('should have the property webPropertyCode (base name: "webPropertyCode")', function() {
      // uncomment below and update the code to test the property webPropertyCode
      //var instance = new AdExchangeBuyerApi.Product();
      //expect(instance).to.be();
    });

  });

}));
