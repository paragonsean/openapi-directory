/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdExchangeBuyerApi);
  }
}(this, function(expect, AdExchangeBuyerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdExchangeBuyerApi.PretargetingConfig();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PretargetingConfig', function() {
    it('should create an instance of PretargetingConfig', function() {
      // uncomment below and update the code to test PretargetingConfig
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be.a(AdExchangeBuyerApi.PretargetingConfig);
    });

    it('should have the property billingId (base name: "billingId")', function() {
      // uncomment below and update the code to test the property billingId
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property configId (base name: "configId")', function() {
      // uncomment below and update the code to test the property configId
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property configName (base name: "configName")', function() {
      // uncomment below and update the code to test the property configName
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property creativeType (base name: "creativeType")', function() {
      // uncomment below and update the code to test the property creativeType
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property dimensions (base name: "dimensions")', function() {
      // uncomment below and update the code to test the property dimensions
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property excludedContentLabels (base name: "excludedContentLabels")', function() {
      // uncomment below and update the code to test the property excludedContentLabels
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property excludedGeoCriteriaIds (base name: "excludedGeoCriteriaIds")', function() {
      // uncomment below and update the code to test the property excludedGeoCriteriaIds
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property excludedPlacements (base name: "excludedPlacements")', function() {
      // uncomment below and update the code to test the property excludedPlacements
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property excludedUserLists (base name: "excludedUserLists")', function() {
      // uncomment below and update the code to test the property excludedUserLists
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property excludedVerticals (base name: "excludedVerticals")', function() {
      // uncomment below and update the code to test the property excludedVerticals
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property geoCriteriaIds (base name: "geoCriteriaIds")', function() {
      // uncomment below and update the code to test the property geoCriteriaIds
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "isActive")', function() {
      // uncomment below and update the code to test the property isActive
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property languages (base name: "languages")', function() {
      // uncomment below and update the code to test the property languages
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property maximumQps (base name: "maximumQps")', function() {
      // uncomment below and update the code to test the property maximumQps
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property minimumViewabilityDecile (base name: "minimumViewabilityDecile")', function() {
      // uncomment below and update the code to test the property minimumViewabilityDecile
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property mobileCarriers (base name: "mobileCarriers")', function() {
      // uncomment below and update the code to test the property mobileCarriers
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property mobileDevices (base name: "mobileDevices")', function() {
      // uncomment below and update the code to test the property mobileDevices
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property mobileOperatingSystemVersions (base name: "mobileOperatingSystemVersions")', function() {
      // uncomment below and update the code to test the property mobileOperatingSystemVersions
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property placements (base name: "placements")', function() {
      // uncomment below and update the code to test the property placements
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property platforms (base name: "platforms")', function() {
      // uncomment below and update the code to test the property platforms
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property supportedCreativeAttributes (base name: "supportedCreativeAttributes")', function() {
      // uncomment below and update the code to test the property supportedCreativeAttributes
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property userIdentifierDataRequired (base name: "userIdentifierDataRequired")', function() {
      // uncomment below and update the code to test the property userIdentifierDataRequired
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property userLists (base name: "userLists")', function() {
      // uncomment below and update the code to test the property userLists
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property vendorTypes (base name: "vendorTypes")', function() {
      // uncomment below and update the code to test the property vendorTypes
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property verticals (base name: "verticals")', function() {
      // uncomment below and update the code to test the property verticals
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

    it('should have the property videoPlayerSizes (base name: "videoPlayerSizes")', function() {
      // uncomment below and update the code to test the property videoPlayerSizes
      //var instance = new AdExchangeBuyerApi.PretargetingConfig();
      //expect(instance).to.be();
    });

  });

}));
