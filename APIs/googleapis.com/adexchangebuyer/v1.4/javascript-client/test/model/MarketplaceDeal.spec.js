/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdExchangeBuyerApi);
  }
}(this, function(expect, AdExchangeBuyerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdExchangeBuyerApi.MarketplaceDeal();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MarketplaceDeal', function() {
    it('should create an instance of MarketplaceDeal', function() {
      // uncomment below and update the code to test MarketplaceDeal
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be.a(AdExchangeBuyerApi.MarketplaceDeal);
    });

    it('should have the property buyerPrivateData (base name: "buyerPrivateData")', function() {
      // uncomment below and update the code to test the property buyerPrivateData
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property creationTimeMs (base name: "creationTimeMs")', function() {
      // uncomment below and update the code to test the property creationTimeMs
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property creativePreApprovalPolicy (base name: "creativePreApprovalPolicy")', function() {
      // uncomment below and update the code to test the property creativePreApprovalPolicy
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property creativeSafeFrameCompatibility (base name: "creativeSafeFrameCompatibility")', function() {
      // uncomment below and update the code to test the property creativeSafeFrameCompatibility
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property dealId (base name: "dealId")', function() {
      // uncomment below and update the code to test the property dealId
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property dealServingMetadata (base name: "dealServingMetadata")', function() {
      // uncomment below and update the code to test the property dealServingMetadata
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property deliveryControl (base name: "deliveryControl")', function() {
      // uncomment below and update the code to test the property deliveryControl
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property externalDealId (base name: "externalDealId")', function() {
      // uncomment below and update the code to test the property externalDealId
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property flightEndTimeMs (base name: "flightEndTimeMs")', function() {
      // uncomment below and update the code to test the property flightEndTimeMs
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property flightStartTimeMs (base name: "flightStartTimeMs")', function() {
      // uncomment below and update the code to test the property flightStartTimeMs
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property inventoryDescription (base name: "inventoryDescription")', function() {
      // uncomment below and update the code to test the property inventoryDescription
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property isRfpTemplate (base name: "isRfpTemplate")', function() {
      // uncomment below and update the code to test the property isRfpTemplate
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property isSetupComplete (base name: "isSetupComplete")', function() {
      // uncomment below and update the code to test the property isSetupComplete
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdateTimeMs (base name: "lastUpdateTimeMs")', function() {
      // uncomment below and update the code to test the property lastUpdateTimeMs
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property makegoodRequestedReason (base name: "makegoodRequestedReason")', function() {
      // uncomment below and update the code to test the property makegoodRequestedReason
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property productId (base name: "productId")', function() {
      // uncomment below and update the code to test the property productId
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property productRevisionNumber (base name: "productRevisionNumber")', function() {
      // uncomment below and update the code to test the property productRevisionNumber
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property programmaticCreativeSource (base name: "programmaticCreativeSource")', function() {
      // uncomment below and update the code to test the property programmaticCreativeSource
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property proposalId (base name: "proposalId")', function() {
      // uncomment below and update the code to test the property proposalId
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property sellerContacts (base name: "sellerContacts")', function() {
      // uncomment below and update the code to test the property sellerContacts
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property sharedTargetings (base name: "sharedTargetings")', function() {
      // uncomment below and update the code to test the property sharedTargetings
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property syndicationProduct (base name: "syndicationProduct")', function() {
      // uncomment below and update the code to test the property syndicationProduct
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property terms (base name: "terms")', function() {
      // uncomment below and update the code to test the property terms
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

    it('should have the property webPropertyCode (base name: "webPropertyCode")', function() {
      // uncomment below and update the code to test the property webPropertyCode
      //var instance = new AdExchangeBuyerApi.MarketplaceDeal();
      //expect(instance).to.be();
    });

  });

}));
