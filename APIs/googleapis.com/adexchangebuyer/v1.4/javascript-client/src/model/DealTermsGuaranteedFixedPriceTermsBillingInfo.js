/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Price from './Price';

/**
 * The DealTermsGuaranteedFixedPriceTermsBillingInfo model module.
 * @module model/DealTermsGuaranteedFixedPriceTermsBillingInfo
 * @version v1.4
 */
class DealTermsGuaranteedFixedPriceTermsBillingInfo {
    /**
     * Constructs a new <code>DealTermsGuaranteedFixedPriceTermsBillingInfo</code>.
     * @alias module:model/DealTermsGuaranteedFixedPriceTermsBillingInfo
     */
    constructor() { 
        
        DealTermsGuaranteedFixedPriceTermsBillingInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DealTermsGuaranteedFixedPriceTermsBillingInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DealTermsGuaranteedFixedPriceTermsBillingInfo} obj Optional instance to populate.
     * @return {module:model/DealTermsGuaranteedFixedPriceTermsBillingInfo} The populated <code>DealTermsGuaranteedFixedPriceTermsBillingInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DealTermsGuaranteedFixedPriceTermsBillingInfo();

            if (data.hasOwnProperty('currencyConversionTimeMs')) {
                obj['currencyConversionTimeMs'] = ApiClient.convertToType(data['currencyConversionTimeMs'], 'String');
            }
            if (data.hasOwnProperty('dfpLineItemId')) {
                obj['dfpLineItemId'] = ApiClient.convertToType(data['dfpLineItemId'], 'String');
            }
            if (data.hasOwnProperty('originalContractedQuantity')) {
                obj['originalContractedQuantity'] = ApiClient.convertToType(data['originalContractedQuantity'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = Price.constructFromObject(data['price']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DealTermsGuaranteedFixedPriceTermsBillingInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DealTermsGuaranteedFixedPriceTermsBillingInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currencyConversionTimeMs'] && !(typeof data['currencyConversionTimeMs'] === 'string' || data['currencyConversionTimeMs'] instanceof String)) {
            throw new Error("Expected the field `currencyConversionTimeMs` to be a primitive type in the JSON string but got " + data['currencyConversionTimeMs']);
        }
        // ensure the json data is a string
        if (data['dfpLineItemId'] && !(typeof data['dfpLineItemId'] === 'string' || data['dfpLineItemId'] instanceof String)) {
            throw new Error("Expected the field `dfpLineItemId` to be a primitive type in the JSON string but got " + data['dfpLineItemId']);
        }
        // ensure the json data is a string
        if (data['originalContractedQuantity'] && !(typeof data['originalContractedQuantity'] === 'string' || data['originalContractedQuantity'] instanceof String)) {
            throw new Error("Expected the field `originalContractedQuantity` to be a primitive type in the JSON string but got " + data['originalContractedQuantity']);
        }
        // validate the optional field `price`
        if (data['price']) { // data not null
          Price.validateJSON(data['price']);
        }

        return true;
    }


}



/**
 * The timestamp (in ms since epoch) when the original reservation price for the deal was first converted to DFP currency. This is used to convert the contracted price into buyer's currency without discrepancy.
 * @member {String} currencyConversionTimeMs
 */
DealTermsGuaranteedFixedPriceTermsBillingInfo.prototype['currencyConversionTimeMs'] = undefined;

/**
 * The DFP line item id associated with this deal. For features like CPD, buyers can retrieve the DFP line item for billing reconciliation.
 * @member {String} dfpLineItemId
 */
DealTermsGuaranteedFixedPriceTermsBillingInfo.prototype['dfpLineItemId'] = undefined;

/**
 * The original contracted quantity (# impressions) for this deal. To ensure delivery, sometimes the publisher will book the deal with a impression buffer, such that guaranteed_looks is greater than the contracted quantity. However clients are billed using the original contracted quantity.
 * @member {String} originalContractedQuantity
 */
DealTermsGuaranteedFixedPriceTermsBillingInfo.prototype['originalContractedQuantity'] = undefined;

/**
 * @member {module:model/Price} price
 */
DealTermsGuaranteedFixedPriceTermsBillingInfo.prototype['price'] = undefined;






export default DealTermsGuaranteedFixedPriceTermsBillingInfo;

