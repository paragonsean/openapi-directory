/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DimensionDimensionValue from './DimensionDimensionValue';

/**
 * The Dimension model module.
 * @module model/Dimension
 * @version v1.4
 */
class Dimension {
    /**
     * Constructs a new <code>Dimension</code>.
     * This message carries publisher provided breakdown. E.g. {dimension_type: &#39;COUNTRY&#39;, [{dimension_value: {id: 1, name: &#39;US&#39;}}, {dimension_value: {id: 2, name: &#39;UK&#39;}}]}
     * @alias module:model/Dimension
     */
    constructor() { 
        
        Dimension.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Dimension</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Dimension} obj Optional instance to populate.
     * @return {module:model/Dimension} The populated <code>Dimension</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Dimension();

            if (data.hasOwnProperty('dimensionType')) {
                obj['dimensionType'] = ApiClient.convertToType(data['dimensionType'], 'String');
            }
            if (data.hasOwnProperty('dimensionValues')) {
                obj['dimensionValues'] = ApiClient.convertToType(data['dimensionValues'], [DimensionDimensionValue]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Dimension</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Dimension</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dimensionType'] && !(typeof data['dimensionType'] === 'string' || data['dimensionType'] instanceof String)) {
            throw new Error("Expected the field `dimensionType` to be a primitive type in the JSON string but got " + data['dimensionType']);
        }
        if (data['dimensionValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dimensionValues'])) {
                throw new Error("Expected the field `dimensionValues` to be an array in the JSON data but got " + data['dimensionValues']);
            }
            // validate the optional field `dimensionValues` (array)
            for (const item of data['dimensionValues']) {
                DimensionDimensionValue.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} dimensionType
 */
Dimension.prototype['dimensionType'] = undefined;

/**
 * @member {Array.<module:model/DimensionDimensionValue>} dimensionValues
 */
Dimension.prototype['dimensionValues'] = undefined;






export default Dimension;

