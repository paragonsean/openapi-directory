/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Price model module.
 * @module model/Price
 * @version v1.4
 */
class Price {
    /**
     * Constructs a new <code>Price</code>.
     * @alias module:model/Price
     */
    constructor() { 
        
        Price.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Price</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Price} obj Optional instance to populate.
     * @return {module:model/Price} The populated <code>Price</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Price();

            if (data.hasOwnProperty('amountMicros')) {
                obj['amountMicros'] = ApiClient.convertToType(data['amountMicros'], 'Number');
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('expectedCpmMicros')) {
                obj['expectedCpmMicros'] = ApiClient.convertToType(data['expectedCpmMicros'], 'Number');
            }
            if (data.hasOwnProperty('pricingType')) {
                obj['pricingType'] = ApiClient.convertToType(data['pricingType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Price</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Price</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }
        // ensure the json data is a string
        if (data['pricingType'] && !(typeof data['pricingType'] === 'string' || data['pricingType'] instanceof String)) {
            throw new Error("Expected the field `pricingType` to be a primitive type in the JSON string but got " + data['pricingType']);
        }

        return true;
    }


}



/**
 * The price value in micros.
 * @member {Number} amountMicros
 */
Price.prototype['amountMicros'] = undefined;

/**
 * The currency code for the price.
 * @member {String} currencyCode
 */
Price.prototype['currencyCode'] = undefined;

/**
 * In case of CPD deals, the expected CPM in micros.
 * @member {Number} expectedCpmMicros
 */
Price.prototype['expectedCpmMicros'] = undefined;

/**
 * The pricing type for the deal/product.
 * @member {String} pricingType
 */
Price.prototype['pricingType'] = undefined;






export default Price;

