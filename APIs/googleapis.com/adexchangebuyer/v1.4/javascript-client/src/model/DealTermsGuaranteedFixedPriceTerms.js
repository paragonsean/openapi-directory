/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DealTermsGuaranteedFixedPriceTermsBillingInfo from './DealTermsGuaranteedFixedPriceTermsBillingInfo';
import PricePerBuyer from './PricePerBuyer';

/**
 * The DealTermsGuaranteedFixedPriceTerms model module.
 * @module model/DealTermsGuaranteedFixedPriceTerms
 * @version v1.4
 */
class DealTermsGuaranteedFixedPriceTerms {
    /**
     * Constructs a new <code>DealTermsGuaranteedFixedPriceTerms</code>.
     * @alias module:model/DealTermsGuaranteedFixedPriceTerms
     */
    constructor() { 
        
        DealTermsGuaranteedFixedPriceTerms.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DealTermsGuaranteedFixedPriceTerms</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DealTermsGuaranteedFixedPriceTerms} obj Optional instance to populate.
     * @return {module:model/DealTermsGuaranteedFixedPriceTerms} The populated <code>DealTermsGuaranteedFixedPriceTerms</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DealTermsGuaranteedFixedPriceTerms();

            if (data.hasOwnProperty('billingInfo')) {
                obj['billingInfo'] = DealTermsGuaranteedFixedPriceTermsBillingInfo.constructFromObject(data['billingInfo']);
            }
            if (data.hasOwnProperty('fixedPrices')) {
                obj['fixedPrices'] = ApiClient.convertToType(data['fixedPrices'], [PricePerBuyer]);
            }
            if (data.hasOwnProperty('guaranteedImpressions')) {
                obj['guaranteedImpressions'] = ApiClient.convertToType(data['guaranteedImpressions'], 'String');
            }
            if (data.hasOwnProperty('guaranteedLooks')) {
                obj['guaranteedLooks'] = ApiClient.convertToType(data['guaranteedLooks'], 'String');
            }
            if (data.hasOwnProperty('minimumDailyLooks')) {
                obj['minimumDailyLooks'] = ApiClient.convertToType(data['minimumDailyLooks'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DealTermsGuaranteedFixedPriceTerms</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DealTermsGuaranteedFixedPriceTerms</code>.
     */
    static validateJSON(data) {
        // validate the optional field `billingInfo`
        if (data['billingInfo']) { // data not null
          DealTermsGuaranteedFixedPriceTermsBillingInfo.validateJSON(data['billingInfo']);
        }
        if (data['fixedPrices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fixedPrices'])) {
                throw new Error("Expected the field `fixedPrices` to be an array in the JSON data but got " + data['fixedPrices']);
            }
            // validate the optional field `fixedPrices` (array)
            for (const item of data['fixedPrices']) {
                PricePerBuyer.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['guaranteedImpressions'] && !(typeof data['guaranteedImpressions'] === 'string' || data['guaranteedImpressions'] instanceof String)) {
            throw new Error("Expected the field `guaranteedImpressions` to be a primitive type in the JSON string but got " + data['guaranteedImpressions']);
        }
        // ensure the json data is a string
        if (data['guaranteedLooks'] && !(typeof data['guaranteedLooks'] === 'string' || data['guaranteedLooks'] instanceof String)) {
            throw new Error("Expected the field `guaranteedLooks` to be a primitive type in the JSON string but got " + data['guaranteedLooks']);
        }
        // ensure the json data is a string
        if (data['minimumDailyLooks'] && !(typeof data['minimumDailyLooks'] === 'string' || data['minimumDailyLooks'] instanceof String)) {
            throw new Error("Expected the field `minimumDailyLooks` to be a primitive type in the JSON string but got " + data['minimumDailyLooks']);
        }

        return true;
    }


}



/**
 * @member {module:model/DealTermsGuaranteedFixedPriceTermsBillingInfo} billingInfo
 */
DealTermsGuaranteedFixedPriceTerms.prototype['billingInfo'] = undefined;

/**
 * Fixed price for the specified buyer.
 * @member {Array.<module:model/PricePerBuyer>} fixedPrices
 */
DealTermsGuaranteedFixedPriceTerms.prototype['fixedPrices'] = undefined;

/**
 * Guaranteed impressions as a percentage. This is the percentage of guaranteed looks that the buyer is guaranteeing to buy.
 * @member {String} guaranteedImpressions
 */
DealTermsGuaranteedFixedPriceTerms.prototype['guaranteedImpressions'] = undefined;

/**
 * Count of guaranteed looks. Required for deal, optional for product. For CPD deals, buyer changes to guaranteed_looks will be ignored.
 * @member {String} guaranteedLooks
 */
DealTermsGuaranteedFixedPriceTerms.prototype['guaranteedLooks'] = undefined;

/**
 * Count of minimum daily looks for a CPD deal. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks.
 * @member {String} minimumDailyLooks
 */
DealTermsGuaranteedFixedPriceTerms.prototype['minimumDailyLooks'] = undefined;






export default DealTermsGuaranteedFixedPriceTerms;

