/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MarketplaceDeal from './MarketplaceDeal';
import Proposal from './Proposal';

/**
 * The EditAllOrderDealsRequest model module.
 * @module model/EditAllOrderDealsRequest
 * @version v1.4
 */
class EditAllOrderDealsRequest {
    /**
     * Constructs a new <code>EditAllOrderDealsRequest</code>.
     * @alias module:model/EditAllOrderDealsRequest
     */
    constructor() { 
        
        EditAllOrderDealsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EditAllOrderDealsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EditAllOrderDealsRequest} obj Optional instance to populate.
     * @return {module:model/EditAllOrderDealsRequest} The populated <code>EditAllOrderDealsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EditAllOrderDealsRequest();

            if (data.hasOwnProperty('deals')) {
                obj['deals'] = ApiClient.convertToType(data['deals'], [MarketplaceDeal]);
            }
            if (data.hasOwnProperty('proposal')) {
                obj['proposal'] = Proposal.constructFromObject(data['proposal']);
            }
            if (data.hasOwnProperty('proposalRevisionNumber')) {
                obj['proposalRevisionNumber'] = ApiClient.convertToType(data['proposalRevisionNumber'], 'String');
            }
            if (data.hasOwnProperty('updateAction')) {
                obj['updateAction'] = ApiClient.convertToType(data['updateAction'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EditAllOrderDealsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EditAllOrderDealsRequest</code>.
     */
    static validateJSON(data) {
        if (data['deals']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['deals'])) {
                throw new Error("Expected the field `deals` to be an array in the JSON data but got " + data['deals']);
            }
            // validate the optional field `deals` (array)
            for (const item of data['deals']) {
                MarketplaceDeal.validateJSON(item);
            };
        }
        // validate the optional field `proposal`
        if (data['proposal']) { // data not null
          Proposal.validateJSON(data['proposal']);
        }
        // ensure the json data is a string
        if (data['proposalRevisionNumber'] && !(typeof data['proposalRevisionNumber'] === 'string' || data['proposalRevisionNumber'] instanceof String)) {
            throw new Error("Expected the field `proposalRevisionNumber` to be a primitive type in the JSON string but got " + data['proposalRevisionNumber']);
        }
        // ensure the json data is a string
        if (data['updateAction'] && !(typeof data['updateAction'] === 'string' || data['updateAction'] instanceof String)) {
            throw new Error("Expected the field `updateAction` to be a primitive type in the JSON string but got " + data['updateAction']);
        }

        return true;
    }


}



/**
 * List of deals to edit. Service may perform 3 different operations based on comparison of deals in this list vs deals already persisted in database: 1. Add new deal to proposal If a deal in this list does not exist in the proposal, the service will create a new deal and add it to the proposal. Validation will follow AddOrderDealsRequest. 2. Update existing deal in the proposal If a deal in this list already exist in the proposal, the service will update that existing deal to this new deal in the request. Validation will follow UpdateOrderDealsRequest. 3. Delete deals from the proposal (just need the id) If a existing deal in the proposal is not present in this list, the service will delete that deal from the proposal. Validation will follow DeleteOrderDealsRequest.
 * @member {Array.<module:model/MarketplaceDeal>} deals
 */
EditAllOrderDealsRequest.prototype['deals'] = undefined;

/**
 * @member {module:model/Proposal} proposal
 */
EditAllOrderDealsRequest.prototype['proposal'] = undefined;

/**
 * The last known revision number for the proposal.
 * @member {String} proposalRevisionNumber
 */
EditAllOrderDealsRequest.prototype['proposalRevisionNumber'] = undefined;

/**
 * Indicates an optional action to take on the proposal
 * @member {String} updateAction
 */
EditAllOrderDealsRequest.prototype['updateAction'] = undefined;






export default EditAllOrderDealsRequest;

