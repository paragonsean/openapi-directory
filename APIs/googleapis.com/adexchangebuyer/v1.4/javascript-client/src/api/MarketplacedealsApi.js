/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddOrderDealsRequest from '../model/AddOrderDealsRequest';
import AddOrderDealsResponse from '../model/AddOrderDealsResponse';
import DeleteOrderDealsRequest from '../model/DeleteOrderDealsRequest';
import DeleteOrderDealsResponse from '../model/DeleteOrderDealsResponse';
import EditAllOrderDealsRequest from '../model/EditAllOrderDealsRequest';
import EditAllOrderDealsResponse from '../model/EditAllOrderDealsResponse';
import GetOrderDealsResponse from '../model/GetOrderDealsResponse';

/**
* Marketplacedeals service.
* @module api/MarketplacedealsApi
* @version v1.4
*/
export default class MarketplacedealsApi {

    /**
    * Constructs a new MarketplacedealsApi. 
    * @alias module:api/MarketplacedealsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the adexchangebuyerMarketplacedealsDelete operation.
     * @callback module:api/MarketplacedealsApi~adexchangebuyerMarketplacedealsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteOrderDealsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete the specified deals from the proposal
     * @param {String} proposalId The proposalId to delete deals from.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:model/DeleteOrderDealsRequest} [deleteOrderDealsRequest] 
     * @param {module:api/MarketplacedealsApi~adexchangebuyerMarketplacedealsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteOrderDealsResponse}
     */
    adexchangebuyerMarketplacedealsDelete(proposalId, opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteOrderDealsRequest'];
      // verify the required parameter 'proposalId' is set
      if (proposalId === undefined || proposalId === null) {
        throw new Error("Missing the required parameter 'proposalId' when calling adexchangebuyerMarketplacedealsDelete");
      }

      let pathParams = {
        'proposalId': proposalId
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteOrderDealsResponse;
      return this.apiClient.callApi(
        '/proposals/{proposalId}/deals/delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the adexchangebuyerMarketplacedealsInsert operation.
     * @callback module:api/MarketplacedealsApi~adexchangebuyerMarketplacedealsInsertCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AddOrderDealsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add new deals for the specified proposal
     * @param {String} proposalId proposalId for which deals need to be added.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:model/AddOrderDealsRequest} [addOrderDealsRequest] 
     * @param {module:api/MarketplacedealsApi~adexchangebuyerMarketplacedealsInsertCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AddOrderDealsResponse}
     */
    adexchangebuyerMarketplacedealsInsert(proposalId, opts, callback) {
      opts = opts || {};
      let postBody = opts['addOrderDealsRequest'];
      // verify the required parameter 'proposalId' is set
      if (proposalId === undefined || proposalId === null) {
        throw new Error("Missing the required parameter 'proposalId' when calling adexchangebuyerMarketplacedealsInsert");
      }

      let pathParams = {
        'proposalId': proposalId
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AddOrderDealsResponse;
      return this.apiClient.callApi(
        '/proposals/{proposalId}/deals/insert', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the adexchangebuyerMarketplacedealsList operation.
     * @callback module:api/MarketplacedealsApi~adexchangebuyerMarketplacedealsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrderDealsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all the deals for a given proposal
     * @param {String} proposalId The proposalId to get deals for. To search across all proposals specify order_id = '-' as part of the URL.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [pqlQuery] Query string to retrieve specific deals.
     * @param {module:api/MarketplacedealsApi~adexchangebuyerMarketplacedealsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrderDealsResponse}
     */
    adexchangebuyerMarketplacedealsList(proposalId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'proposalId' is set
      if (proposalId === undefined || proposalId === null) {
        throw new Error("Missing the required parameter 'proposalId' when calling adexchangebuyerMarketplacedealsList");
      }

      let pathParams = {
        'proposalId': proposalId
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'pqlQuery': opts['pqlQuery']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrderDealsResponse;
      return this.apiClient.callApi(
        '/proposals/{proposalId}/deals', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the adexchangebuyerMarketplacedealsUpdate operation.
     * @callback module:api/MarketplacedealsApi~adexchangebuyerMarketplacedealsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EditAllOrderDealsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces all the deals in the proposal with the passed in deals
     * @param {String} proposalId The proposalId to edit deals on.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:model/EditAllOrderDealsRequest} [editAllOrderDealsRequest] 
     * @param {module:api/MarketplacedealsApi~adexchangebuyerMarketplacedealsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EditAllOrderDealsResponse}
     */
    adexchangebuyerMarketplacedealsUpdate(proposalId, opts, callback) {
      opts = opts || {};
      let postBody = opts['editAllOrderDealsRequest'];
      // verify the required parameter 'proposalId' is set
      if (proposalId === undefined || proposalId === null) {
        throw new Error("Missing the required parameter 'proposalId' when calling adexchangebuyerMarketplacedealsUpdate");
      }

      let pathParams = {
        'proposalId': proposalId
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EditAllOrderDealsResponse;
      return this.apiClient.callApi(
        '/proposals/{proposalId}/deals/update', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
