/*
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Budget;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BudgetApi
 */
@Disabled
public class BudgetApiTest {

    private final BudgetApi api = new BudgetApi();

    /**
     * Returns the budget information for the adgroup specified by the accountId and billingId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adexchangebuyerBudgetGetTest() throws ApiException {
        String accountId = null;
        String billingId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Budget response = api.adexchangebuyerBudgetGet(accountId, billingId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

    /**
     * Updates the budget amount for the budget of the adgroup specified by the accountId and billingId, with the budget amount in the request. This method supports patch semantics.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adexchangebuyerBudgetPatchTest() throws ApiException {
        String accountId = null;
        String billingId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Budget budget = null;
        Budget response = api.adexchangebuyerBudgetPatch(accountId, billingId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, budget);
        // TODO: test validations
    }

    /**
     * Updates the budget amount for the budget of the adgroup specified by the accountId and billingId, with the budget amount in the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adexchangebuyerBudgetUpdateTest() throws ApiException {
        String accountId = null;
        String billingId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Budget budget = null;
        Budget response = api.adexchangebuyerBudgetUpdate(accountId, billingId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, budget);
        // TODO: test validations
    }

}
