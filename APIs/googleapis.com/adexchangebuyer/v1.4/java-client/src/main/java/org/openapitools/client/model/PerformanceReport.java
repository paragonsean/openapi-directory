/*
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The configuration data for an Ad Exchange performance report list.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:44.175931-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PerformanceReport {
  public static final String SERIALIZED_NAME_BID_RATE = "bidRate";
  @SerializedName(SERIALIZED_NAME_BID_RATE)
  private Double bidRate;

  public static final String SERIALIZED_NAME_BID_REQUEST_RATE = "bidRequestRate";
  @SerializedName(SERIALIZED_NAME_BID_REQUEST_RATE)
  private Double bidRequestRate;

  public static final String SERIALIZED_NAME_CALLOUT_STATUS_RATE = "calloutStatusRate";
  @SerializedName(SERIALIZED_NAME_CALLOUT_STATUS_RATE)
  private List<Object> calloutStatusRate = new ArrayList<>();

  public static final String SERIALIZED_NAME_COOKIE_MATCHER_STATUS_RATE = "cookieMatcherStatusRate";
  @SerializedName(SERIALIZED_NAME_COOKIE_MATCHER_STATUS_RATE)
  private List<Object> cookieMatcherStatusRate = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATIVE_STATUS_RATE = "creativeStatusRate";
  @SerializedName(SERIALIZED_NAME_CREATIVE_STATUS_RATE)
  private List<Object> creativeStatusRate = new ArrayList<>();

  public static final String SERIALIZED_NAME_FILTERED_BID_RATE = "filteredBidRate";
  @SerializedName(SERIALIZED_NAME_FILTERED_BID_RATE)
  private Double filteredBidRate;

  public static final String SERIALIZED_NAME_HOSTED_MATCH_STATUS_RATE = "hostedMatchStatusRate";
  @SerializedName(SERIALIZED_NAME_HOSTED_MATCH_STATUS_RATE)
  private List<Object> hostedMatchStatusRate = new ArrayList<>();

  public static final String SERIALIZED_NAME_INVENTORY_MATCH_RATE = "inventoryMatchRate";
  @SerializedName(SERIALIZED_NAME_INVENTORY_MATCH_RATE)
  private Double inventoryMatchRate;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind = "adexchangebuyer#performanceReport";

  public static final String SERIALIZED_NAME_LATENCY50TH_PERCENTILE = "latency50thPercentile";
  @SerializedName(SERIALIZED_NAME_LATENCY50TH_PERCENTILE)
  private Double latency50thPercentile;

  public static final String SERIALIZED_NAME_LATENCY85TH_PERCENTILE = "latency85thPercentile";
  @SerializedName(SERIALIZED_NAME_LATENCY85TH_PERCENTILE)
  private Double latency85thPercentile;

  public static final String SERIALIZED_NAME_LATENCY95TH_PERCENTILE = "latency95thPercentile";
  @SerializedName(SERIALIZED_NAME_LATENCY95TH_PERCENTILE)
  private Double latency95thPercentile;

  public static final String SERIALIZED_NAME_NO_QUOTA_IN_REGION = "noQuotaInRegion";
  @SerializedName(SERIALIZED_NAME_NO_QUOTA_IN_REGION)
  private Double noQuotaInRegion;

  public static final String SERIALIZED_NAME_OUT_OF_QUOTA = "outOfQuota";
  @SerializedName(SERIALIZED_NAME_OUT_OF_QUOTA)
  private Double outOfQuota;

  public static final String SERIALIZED_NAME_PIXEL_MATCH_REQUESTS = "pixelMatchRequests";
  @SerializedName(SERIALIZED_NAME_PIXEL_MATCH_REQUESTS)
  private Double pixelMatchRequests;

  public static final String SERIALIZED_NAME_PIXEL_MATCH_RESPONSES = "pixelMatchResponses";
  @SerializedName(SERIALIZED_NAME_PIXEL_MATCH_RESPONSES)
  private Double pixelMatchResponses;

  public static final String SERIALIZED_NAME_QUOTA_CONFIGURED_LIMIT = "quotaConfiguredLimit";
  @SerializedName(SERIALIZED_NAME_QUOTA_CONFIGURED_LIMIT)
  private Double quotaConfiguredLimit;

  public static final String SERIALIZED_NAME_QUOTA_THROTTLED_LIMIT = "quotaThrottledLimit";
  @SerializedName(SERIALIZED_NAME_QUOTA_THROTTLED_LIMIT)
  private Double quotaThrottledLimit;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_SUCCESSFUL_REQUEST_RATE = "successfulRequestRate";
  @SerializedName(SERIALIZED_NAME_SUCCESSFUL_REQUEST_RATE)
  private Double successfulRequestRate;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private String timestamp;

  public static final String SERIALIZED_NAME_UNSUCCESSFUL_REQUEST_RATE = "unsuccessfulRequestRate";
  @SerializedName(SERIALIZED_NAME_UNSUCCESSFUL_REQUEST_RATE)
  private Double unsuccessfulRequestRate;

  public PerformanceReport() {
  }

  public PerformanceReport bidRate(Double bidRate) {
    this.bidRate = bidRate;
    return this;
  }

  /**
   * The number of bid responses with an ad.
   * @return bidRate
   */
  @javax.annotation.Nullable
  public Double getBidRate() {
    return bidRate;
  }

  public void setBidRate(Double bidRate) {
    this.bidRate = bidRate;
  }


  public PerformanceReport bidRequestRate(Double bidRequestRate) {
    this.bidRequestRate = bidRequestRate;
    return this;
  }

  /**
   * The number of bid requests sent to your bidder.
   * @return bidRequestRate
   */
  @javax.annotation.Nullable
  public Double getBidRequestRate() {
    return bidRequestRate;
  }

  public void setBidRequestRate(Double bidRequestRate) {
    this.bidRequestRate = bidRequestRate;
  }


  public PerformanceReport calloutStatusRate(List<Object> calloutStatusRate) {
    this.calloutStatusRate = calloutStatusRate;
    return this;
  }

  public PerformanceReport addCalloutStatusRateItem(Object calloutStatusRateItem) {
    if (this.calloutStatusRate == null) {
      this.calloutStatusRate = new ArrayList<>();
    }
    this.calloutStatusRate.add(calloutStatusRateItem);
    return this;
  }

  /**
   * Rate of various prefiltering statuses per match. Please refer to the callout-status-codes.txt file for different statuses.
   * @return calloutStatusRate
   */
  @javax.annotation.Nullable
  public List<Object> getCalloutStatusRate() {
    return calloutStatusRate;
  }

  public void setCalloutStatusRate(List<Object> calloutStatusRate) {
    this.calloutStatusRate = calloutStatusRate;
  }


  public PerformanceReport cookieMatcherStatusRate(List<Object> cookieMatcherStatusRate) {
    this.cookieMatcherStatusRate = cookieMatcherStatusRate;
    return this;
  }

  public PerformanceReport addCookieMatcherStatusRateItem(Object cookieMatcherStatusRateItem) {
    if (this.cookieMatcherStatusRate == null) {
      this.cookieMatcherStatusRate = new ArrayList<>();
    }
    this.cookieMatcherStatusRate.add(cookieMatcherStatusRateItem);
    return this;
  }

  /**
   * Average QPS for cookie matcher operations.
   * @return cookieMatcherStatusRate
   */
  @javax.annotation.Nullable
  public List<Object> getCookieMatcherStatusRate() {
    return cookieMatcherStatusRate;
  }

  public void setCookieMatcherStatusRate(List<Object> cookieMatcherStatusRate) {
    this.cookieMatcherStatusRate = cookieMatcherStatusRate;
  }


  public PerformanceReport creativeStatusRate(List<Object> creativeStatusRate) {
    this.creativeStatusRate = creativeStatusRate;
    return this;
  }

  public PerformanceReport addCreativeStatusRateItem(Object creativeStatusRateItem) {
    if (this.creativeStatusRate == null) {
      this.creativeStatusRate = new ArrayList<>();
    }
    this.creativeStatusRate.add(creativeStatusRateItem);
    return this;
  }

  /**
   * Rate of ads with a given status. Please refer to the creative-status-codes.txt file for different statuses.
   * @return creativeStatusRate
   */
  @javax.annotation.Nullable
  public List<Object> getCreativeStatusRate() {
    return creativeStatusRate;
  }

  public void setCreativeStatusRate(List<Object> creativeStatusRate) {
    this.creativeStatusRate = creativeStatusRate;
  }


  public PerformanceReport filteredBidRate(Double filteredBidRate) {
    this.filteredBidRate = filteredBidRate;
    return this;
  }

  /**
   * The number of bid responses that were filtered due to a policy violation or other errors.
   * @return filteredBidRate
   */
  @javax.annotation.Nullable
  public Double getFilteredBidRate() {
    return filteredBidRate;
  }

  public void setFilteredBidRate(Double filteredBidRate) {
    this.filteredBidRate = filteredBidRate;
  }


  public PerformanceReport hostedMatchStatusRate(List<Object> hostedMatchStatusRate) {
    this.hostedMatchStatusRate = hostedMatchStatusRate;
    return this;
  }

  public PerformanceReport addHostedMatchStatusRateItem(Object hostedMatchStatusRateItem) {
    if (this.hostedMatchStatusRate == null) {
      this.hostedMatchStatusRate = new ArrayList<>();
    }
    this.hostedMatchStatusRate.add(hostedMatchStatusRateItem);
    return this;
  }

  /**
   * Average QPS for hosted match operations.
   * @return hostedMatchStatusRate
   */
  @javax.annotation.Nullable
  public List<Object> getHostedMatchStatusRate() {
    return hostedMatchStatusRate;
  }

  public void setHostedMatchStatusRate(List<Object> hostedMatchStatusRate) {
    this.hostedMatchStatusRate = hostedMatchStatusRate;
  }


  public PerformanceReport inventoryMatchRate(Double inventoryMatchRate) {
    this.inventoryMatchRate = inventoryMatchRate;
    return this;
  }

  /**
   * The number of potential queries based on your pretargeting settings.
   * @return inventoryMatchRate
   */
  @javax.annotation.Nullable
  public Double getInventoryMatchRate() {
    return inventoryMatchRate;
  }

  public void setInventoryMatchRate(Double inventoryMatchRate) {
    this.inventoryMatchRate = inventoryMatchRate;
  }


  public PerformanceReport kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Resource type.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public PerformanceReport latency50thPercentile(Double latency50thPercentile) {
    this.latency50thPercentile = latency50thPercentile;
    return this;
  }

  /**
   * The 50th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.
   * @return latency50thPercentile
   */
  @javax.annotation.Nullable
  public Double getLatency50thPercentile() {
    return latency50thPercentile;
  }

  public void setLatency50thPercentile(Double latency50thPercentile) {
    this.latency50thPercentile = latency50thPercentile;
  }


  public PerformanceReport latency85thPercentile(Double latency85thPercentile) {
    this.latency85thPercentile = latency85thPercentile;
    return this;
  }

  /**
   * The 85th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.
   * @return latency85thPercentile
   */
  @javax.annotation.Nullable
  public Double getLatency85thPercentile() {
    return latency85thPercentile;
  }

  public void setLatency85thPercentile(Double latency85thPercentile) {
    this.latency85thPercentile = latency85thPercentile;
  }


  public PerformanceReport latency95thPercentile(Double latency95thPercentile) {
    this.latency95thPercentile = latency95thPercentile;
    return this;
  }

  /**
   * The 95th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.
   * @return latency95thPercentile
   */
  @javax.annotation.Nullable
  public Double getLatency95thPercentile() {
    return latency95thPercentile;
  }

  public void setLatency95thPercentile(Double latency95thPercentile) {
    this.latency95thPercentile = latency95thPercentile;
  }


  public PerformanceReport noQuotaInRegion(Double noQuotaInRegion) {
    this.noQuotaInRegion = noQuotaInRegion;
    return this;
  }

  /**
   * Rate of various quota account statuses per quota check.
   * @return noQuotaInRegion
   */
  @javax.annotation.Nullable
  public Double getNoQuotaInRegion() {
    return noQuotaInRegion;
  }

  public void setNoQuotaInRegion(Double noQuotaInRegion) {
    this.noQuotaInRegion = noQuotaInRegion;
  }


  public PerformanceReport outOfQuota(Double outOfQuota) {
    this.outOfQuota = outOfQuota;
    return this;
  }

  /**
   * Rate of various quota account statuses per quota check.
   * @return outOfQuota
   */
  @javax.annotation.Nullable
  public Double getOutOfQuota() {
    return outOfQuota;
  }

  public void setOutOfQuota(Double outOfQuota) {
    this.outOfQuota = outOfQuota;
  }


  public PerformanceReport pixelMatchRequests(Double pixelMatchRequests) {
    this.pixelMatchRequests = pixelMatchRequests;
    return this;
  }

  /**
   * Average QPS for pixel match requests from clients.
   * @return pixelMatchRequests
   */
  @javax.annotation.Nullable
  public Double getPixelMatchRequests() {
    return pixelMatchRequests;
  }

  public void setPixelMatchRequests(Double pixelMatchRequests) {
    this.pixelMatchRequests = pixelMatchRequests;
  }


  public PerformanceReport pixelMatchResponses(Double pixelMatchResponses) {
    this.pixelMatchResponses = pixelMatchResponses;
    return this;
  }

  /**
   * Average QPS for pixel match responses from clients.
   * @return pixelMatchResponses
   */
  @javax.annotation.Nullable
  public Double getPixelMatchResponses() {
    return pixelMatchResponses;
  }

  public void setPixelMatchResponses(Double pixelMatchResponses) {
    this.pixelMatchResponses = pixelMatchResponses;
  }


  public PerformanceReport quotaConfiguredLimit(Double quotaConfiguredLimit) {
    this.quotaConfiguredLimit = quotaConfiguredLimit;
    return this;
  }

  /**
   * The configured quota limits for this account.
   * @return quotaConfiguredLimit
   */
  @javax.annotation.Nullable
  public Double getQuotaConfiguredLimit() {
    return quotaConfiguredLimit;
  }

  public void setQuotaConfiguredLimit(Double quotaConfiguredLimit) {
    this.quotaConfiguredLimit = quotaConfiguredLimit;
  }


  public PerformanceReport quotaThrottledLimit(Double quotaThrottledLimit) {
    this.quotaThrottledLimit = quotaThrottledLimit;
    return this;
  }

  /**
   * The throttled quota limits for this account.
   * @return quotaThrottledLimit
   */
  @javax.annotation.Nullable
  public Double getQuotaThrottledLimit() {
    return quotaThrottledLimit;
  }

  public void setQuotaThrottledLimit(Double quotaThrottledLimit) {
    this.quotaThrottledLimit = quotaThrottledLimit;
  }


  public PerformanceReport region(String region) {
    this.region = region;
    return this;
  }

  /**
   * The trading location of this data.
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public PerformanceReport successfulRequestRate(Double successfulRequestRate) {
    this.successfulRequestRate = successfulRequestRate;
    return this;
  }

  /**
   * The number of properly formed bid responses received by our servers within the deadline.
   * @return successfulRequestRate
   */
  @javax.annotation.Nullable
  public Double getSuccessfulRequestRate() {
    return successfulRequestRate;
  }

  public void setSuccessfulRequestRate(Double successfulRequestRate) {
    this.successfulRequestRate = successfulRequestRate;
  }


  public PerformanceReport timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * The unix timestamp of the starting time of this performance data.
   * @return timestamp
   */
  @javax.annotation.Nullable
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  public PerformanceReport unsuccessfulRequestRate(Double unsuccessfulRequestRate) {
    this.unsuccessfulRequestRate = unsuccessfulRequestRate;
    return this;
  }

  /**
   * The number of bid responses that were unsuccessful due to timeouts, incorrect formatting, etc.
   * @return unsuccessfulRequestRate
   */
  @javax.annotation.Nullable
  public Double getUnsuccessfulRequestRate() {
    return unsuccessfulRequestRate;
  }

  public void setUnsuccessfulRequestRate(Double unsuccessfulRequestRate) {
    this.unsuccessfulRequestRate = unsuccessfulRequestRate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerformanceReport performanceReport = (PerformanceReport) o;
    return Objects.equals(this.bidRate, performanceReport.bidRate) &&
        Objects.equals(this.bidRequestRate, performanceReport.bidRequestRate) &&
        Objects.equals(this.calloutStatusRate, performanceReport.calloutStatusRate) &&
        Objects.equals(this.cookieMatcherStatusRate, performanceReport.cookieMatcherStatusRate) &&
        Objects.equals(this.creativeStatusRate, performanceReport.creativeStatusRate) &&
        Objects.equals(this.filteredBidRate, performanceReport.filteredBidRate) &&
        Objects.equals(this.hostedMatchStatusRate, performanceReport.hostedMatchStatusRate) &&
        Objects.equals(this.inventoryMatchRate, performanceReport.inventoryMatchRate) &&
        Objects.equals(this.kind, performanceReport.kind) &&
        Objects.equals(this.latency50thPercentile, performanceReport.latency50thPercentile) &&
        Objects.equals(this.latency85thPercentile, performanceReport.latency85thPercentile) &&
        Objects.equals(this.latency95thPercentile, performanceReport.latency95thPercentile) &&
        Objects.equals(this.noQuotaInRegion, performanceReport.noQuotaInRegion) &&
        Objects.equals(this.outOfQuota, performanceReport.outOfQuota) &&
        Objects.equals(this.pixelMatchRequests, performanceReport.pixelMatchRequests) &&
        Objects.equals(this.pixelMatchResponses, performanceReport.pixelMatchResponses) &&
        Objects.equals(this.quotaConfiguredLimit, performanceReport.quotaConfiguredLimit) &&
        Objects.equals(this.quotaThrottledLimit, performanceReport.quotaThrottledLimit) &&
        Objects.equals(this.region, performanceReport.region) &&
        Objects.equals(this.successfulRequestRate, performanceReport.successfulRequestRate) &&
        Objects.equals(this.timestamp, performanceReport.timestamp) &&
        Objects.equals(this.unsuccessfulRequestRate, performanceReport.unsuccessfulRequestRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bidRate, bidRequestRate, calloutStatusRate, cookieMatcherStatusRate, creativeStatusRate, filteredBidRate, hostedMatchStatusRate, inventoryMatchRate, kind, latency50thPercentile, latency85thPercentile, latency95thPercentile, noQuotaInRegion, outOfQuota, pixelMatchRequests, pixelMatchResponses, quotaConfiguredLimit, quotaThrottledLimit, region, successfulRequestRate, timestamp, unsuccessfulRequestRate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerformanceReport {\n");
    sb.append("    bidRate: ").append(toIndentedString(bidRate)).append("\n");
    sb.append("    bidRequestRate: ").append(toIndentedString(bidRequestRate)).append("\n");
    sb.append("    calloutStatusRate: ").append(toIndentedString(calloutStatusRate)).append("\n");
    sb.append("    cookieMatcherStatusRate: ").append(toIndentedString(cookieMatcherStatusRate)).append("\n");
    sb.append("    creativeStatusRate: ").append(toIndentedString(creativeStatusRate)).append("\n");
    sb.append("    filteredBidRate: ").append(toIndentedString(filteredBidRate)).append("\n");
    sb.append("    hostedMatchStatusRate: ").append(toIndentedString(hostedMatchStatusRate)).append("\n");
    sb.append("    inventoryMatchRate: ").append(toIndentedString(inventoryMatchRate)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    latency50thPercentile: ").append(toIndentedString(latency50thPercentile)).append("\n");
    sb.append("    latency85thPercentile: ").append(toIndentedString(latency85thPercentile)).append("\n");
    sb.append("    latency95thPercentile: ").append(toIndentedString(latency95thPercentile)).append("\n");
    sb.append("    noQuotaInRegion: ").append(toIndentedString(noQuotaInRegion)).append("\n");
    sb.append("    outOfQuota: ").append(toIndentedString(outOfQuota)).append("\n");
    sb.append("    pixelMatchRequests: ").append(toIndentedString(pixelMatchRequests)).append("\n");
    sb.append("    pixelMatchResponses: ").append(toIndentedString(pixelMatchResponses)).append("\n");
    sb.append("    quotaConfiguredLimit: ").append(toIndentedString(quotaConfiguredLimit)).append("\n");
    sb.append("    quotaThrottledLimit: ").append(toIndentedString(quotaThrottledLimit)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    successfulRequestRate: ").append(toIndentedString(successfulRequestRate)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    unsuccessfulRequestRate: ").append(toIndentedString(unsuccessfulRequestRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bidRate");
    openapiFields.add("bidRequestRate");
    openapiFields.add("calloutStatusRate");
    openapiFields.add("cookieMatcherStatusRate");
    openapiFields.add("creativeStatusRate");
    openapiFields.add("filteredBidRate");
    openapiFields.add("hostedMatchStatusRate");
    openapiFields.add("inventoryMatchRate");
    openapiFields.add("kind");
    openapiFields.add("latency50thPercentile");
    openapiFields.add("latency85thPercentile");
    openapiFields.add("latency95thPercentile");
    openapiFields.add("noQuotaInRegion");
    openapiFields.add("outOfQuota");
    openapiFields.add("pixelMatchRequests");
    openapiFields.add("pixelMatchResponses");
    openapiFields.add("quotaConfiguredLimit");
    openapiFields.add("quotaThrottledLimit");
    openapiFields.add("region");
    openapiFields.add("successfulRequestRate");
    openapiFields.add("timestamp");
    openapiFields.add("unsuccessfulRequestRate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PerformanceReport
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PerformanceReport.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PerformanceReport is not found in the empty JSON string", PerformanceReport.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PerformanceReport.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PerformanceReport` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("calloutStatusRate") != null && !jsonObj.get("calloutStatusRate").isJsonNull() && !jsonObj.get("calloutStatusRate").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `calloutStatusRate` to be an array in the JSON string but got `%s`", jsonObj.get("calloutStatusRate").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("cookieMatcherStatusRate") != null && !jsonObj.get("cookieMatcherStatusRate").isJsonNull() && !jsonObj.get("cookieMatcherStatusRate").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `cookieMatcherStatusRate` to be an array in the JSON string but got `%s`", jsonObj.get("cookieMatcherStatusRate").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("creativeStatusRate") != null && !jsonObj.get("creativeStatusRate").isJsonNull() && !jsonObj.get("creativeStatusRate").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `creativeStatusRate` to be an array in the JSON string but got `%s`", jsonObj.get("creativeStatusRate").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("hostedMatchStatusRate") != null && !jsonObj.get("hostedMatchStatusRate").isJsonNull() && !jsonObj.get("hostedMatchStatusRate").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `hostedMatchStatusRate` to be an array in the JSON string but got `%s`", jsonObj.get("hostedMatchStatusRate").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("timestamp") != null && !jsonObj.get("timestamp").isJsonNull()) && !jsonObj.get("timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timestamp").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PerformanceReport.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PerformanceReport' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PerformanceReport> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PerformanceReport.class));

       return (TypeAdapter<T>) new TypeAdapter<PerformanceReport>() {
           @Override
           public void write(JsonWriter out, PerformanceReport value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PerformanceReport read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PerformanceReport given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PerformanceReport
   * @throws IOException if the JSON string is invalid with respect to PerformanceReport
   */
  public static PerformanceReport fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PerformanceReport.class);
  }

  /**
   * Convert an instance of PerformanceReport to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

