/*
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Buyer;
import org.openapitools.client.model.ContactInformation;
import org.openapitools.client.model.DealTerms;
import org.openapitools.client.model.DeliveryControl;
import org.openapitools.client.model.MarketplaceLabel;
import org.openapitools.client.model.PublisherProvidedForecast;
import org.openapitools.client.model.Seller;
import org.openapitools.client.model.SharedTargeting;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A product is segment of inventory that a seller wishes to sell. It is associated with certain terms and targeting information which helps buyer know more about the inventory. Each field in a product can have one of the following setting:  (readonly) - It is an error to try and set this field. (buyer-readonly) - Only the seller can set this field. (seller-readonly) - Only the buyer can set this field. (updatable) - The field is updatable at all times by either buyer or the seller.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:44.175931-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Product {
  public static final String SERIALIZED_NAME_BILLED_BUYER = "billedBuyer";
  @SerializedName(SERIALIZED_NAME_BILLED_BUYER)
  private Buyer billedBuyer;

  public static final String SERIALIZED_NAME_BUYER = "buyer";
  @SerializedName(SERIALIZED_NAME_BUYER)
  private Buyer buyer;

  public static final String SERIALIZED_NAME_CREATION_TIME_MS = "creationTimeMs";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME_MS)
  private String creationTimeMs;

  public static final String SERIALIZED_NAME_CREATOR_CONTACTS = "creatorContacts";
  @SerializedName(SERIALIZED_NAME_CREATOR_CONTACTS)
  private List<ContactInformation> creatorContacts = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATOR_ROLE = "creatorRole";
  @SerializedName(SERIALIZED_NAME_CREATOR_ROLE)
  private String creatorRole;

  public static final String SERIALIZED_NAME_DELIVERY_CONTROL = "deliveryControl";
  @SerializedName(SERIALIZED_NAME_DELIVERY_CONTROL)
  private DeliveryControl deliveryControl;

  public static final String SERIALIZED_NAME_FLIGHT_END_TIME_MS = "flightEndTimeMs";
  @SerializedName(SERIALIZED_NAME_FLIGHT_END_TIME_MS)
  private String flightEndTimeMs;

  public static final String SERIALIZED_NAME_FLIGHT_START_TIME_MS = "flightStartTimeMs";
  @SerializedName(SERIALIZED_NAME_FLIGHT_START_TIME_MS)
  private String flightStartTimeMs;

  public static final String SERIALIZED_NAME_HAS_CREATOR_SIGNED_OFF = "hasCreatorSignedOff";
  @SerializedName(SERIALIZED_NAME_HAS_CREATOR_SIGNED_OFF)
  private Boolean hasCreatorSignedOff;

  public static final String SERIALIZED_NAME_INVENTORY_SOURCE = "inventorySource";
  @SerializedName(SERIALIZED_NAME_INVENTORY_SOURCE)
  private String inventorySource;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind = "adexchangebuyer#product";

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private List<MarketplaceLabel> labels = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_UPDATE_TIME_MS = "lastUpdateTimeMs";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_TIME_MS)
  private String lastUpdateTimeMs;

  public static final String SERIALIZED_NAME_LEGACY_OFFER_ID = "legacyOfferId";
  @SerializedName(SERIALIZED_NAME_LEGACY_OFFER_ID)
  private String legacyOfferId;

  public static final String SERIALIZED_NAME_MARKETPLACE_PUBLISHER_PROFILE_ID = "marketplacePublisherProfileId";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_PUBLISHER_PROFILE_ID)
  private String marketplacePublisherProfileId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRIVATE_AUCTION_ID = "privateAuctionId";
  @SerializedName(SERIALIZED_NAME_PRIVATE_AUCTION_ID)
  private String privateAuctionId;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "productId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_PUBLISHER_PROFILE_ID = "publisherProfileId";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_PROFILE_ID)
  private String publisherProfileId;

  public static final String SERIALIZED_NAME_PUBLISHER_PROVIDED_FORECAST = "publisherProvidedForecast";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_PROVIDED_FORECAST)
  private PublisherProvidedForecast publisherProvidedForecast;

  public static final String SERIALIZED_NAME_REVISION_NUMBER = "revisionNumber";
  @SerializedName(SERIALIZED_NAME_REVISION_NUMBER)
  private String revisionNumber;

  public static final String SERIALIZED_NAME_SELLER = "seller";
  @SerializedName(SERIALIZED_NAME_SELLER)
  private Seller seller;

  public static final String SERIALIZED_NAME_SHARED_TARGETINGS = "sharedTargetings";
  @SerializedName(SERIALIZED_NAME_SHARED_TARGETINGS)
  private List<SharedTargeting> sharedTargetings = new ArrayList<>();

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_SYNDICATION_PRODUCT = "syndicationProduct";
  @SerializedName(SERIALIZED_NAME_SYNDICATION_PRODUCT)
  private String syndicationProduct;

  public static final String SERIALIZED_NAME_TERMS = "terms";
  @SerializedName(SERIALIZED_NAME_TERMS)
  private DealTerms terms;

  public static final String SERIALIZED_NAME_WEB_PROPERTY_CODE = "webPropertyCode";
  @SerializedName(SERIALIZED_NAME_WEB_PROPERTY_CODE)
  private String webPropertyCode;

  public Product() {
  }

  public Product billedBuyer(Buyer billedBuyer) {
    this.billedBuyer = billedBuyer;
    return this;
  }

  /**
   * Get billedBuyer
   * @return billedBuyer
   */
  @javax.annotation.Nullable
  public Buyer getBilledBuyer() {
    return billedBuyer;
  }

  public void setBilledBuyer(Buyer billedBuyer) {
    this.billedBuyer = billedBuyer;
  }


  public Product buyer(Buyer buyer) {
    this.buyer = buyer;
    return this;
  }

  /**
   * Get buyer
   * @return buyer
   */
  @javax.annotation.Nullable
  public Buyer getBuyer() {
    return buyer;
  }

  public void setBuyer(Buyer buyer) {
    this.buyer = buyer;
  }


  public Product creationTimeMs(String creationTimeMs) {
    this.creationTimeMs = creationTimeMs;
    return this;
  }

  /**
   * Creation time in ms. since epoch (readonly)
   * @return creationTimeMs
   */
  @javax.annotation.Nullable
  public String getCreationTimeMs() {
    return creationTimeMs;
  }

  public void setCreationTimeMs(String creationTimeMs) {
    this.creationTimeMs = creationTimeMs;
  }


  public Product creatorContacts(List<ContactInformation> creatorContacts) {
    this.creatorContacts = creatorContacts;
    return this;
  }

  public Product addCreatorContactsItem(ContactInformation creatorContactsItem) {
    if (this.creatorContacts == null) {
      this.creatorContacts = new ArrayList<>();
    }
    this.creatorContacts.add(creatorContactsItem);
    return this;
  }

  /**
   * Optional contact information for the creator of this product. (buyer-readonly)
   * @return creatorContacts
   */
  @javax.annotation.Nullable
  public List<ContactInformation> getCreatorContacts() {
    return creatorContacts;
  }

  public void setCreatorContacts(List<ContactInformation> creatorContacts) {
    this.creatorContacts = creatorContacts;
  }


  public Product creatorRole(String creatorRole) {
    this.creatorRole = creatorRole;
    return this;
  }

  /**
   * The role that created the offer. Set to BUYER for buyer initiated offers.
   * @return creatorRole
   */
  @javax.annotation.Nullable
  public String getCreatorRole() {
    return creatorRole;
  }

  public void setCreatorRole(String creatorRole) {
    this.creatorRole = creatorRole;
  }


  public Product deliveryControl(DeliveryControl deliveryControl) {
    this.deliveryControl = deliveryControl;
    return this;
  }

  /**
   * Get deliveryControl
   * @return deliveryControl
   */
  @javax.annotation.Nullable
  public DeliveryControl getDeliveryControl() {
    return deliveryControl;
  }

  public void setDeliveryControl(DeliveryControl deliveryControl) {
    this.deliveryControl = deliveryControl;
  }


  public Product flightEndTimeMs(String flightEndTimeMs) {
    this.flightEndTimeMs = flightEndTimeMs;
    return this;
  }

  /**
   * The proposed end time for the deal (ms since epoch) (buyer-readonly)
   * @return flightEndTimeMs
   */
  @javax.annotation.Nullable
  public String getFlightEndTimeMs() {
    return flightEndTimeMs;
  }

  public void setFlightEndTimeMs(String flightEndTimeMs) {
    this.flightEndTimeMs = flightEndTimeMs;
  }


  public Product flightStartTimeMs(String flightStartTimeMs) {
    this.flightStartTimeMs = flightStartTimeMs;
    return this;
  }

  /**
   * Inventory availability dates. (times are in ms since epoch) The granularity is generally in the order of seconds. (buyer-readonly)
   * @return flightStartTimeMs
   */
  @javax.annotation.Nullable
  public String getFlightStartTimeMs() {
    return flightStartTimeMs;
  }

  public void setFlightStartTimeMs(String flightStartTimeMs) {
    this.flightStartTimeMs = flightStartTimeMs;
  }


  public Product hasCreatorSignedOff(Boolean hasCreatorSignedOff) {
    this.hasCreatorSignedOff = hasCreatorSignedOff;
    return this;
  }

  /**
   * If the creator has already signed off on the product, then the buyer can finalize the deal by accepting the product as is. When copying to a proposal, if any of the terms are changed, then auto_finalize is automatically set to false.
   * @return hasCreatorSignedOff
   */
  @javax.annotation.Nullable
  public Boolean getHasCreatorSignedOff() {
    return hasCreatorSignedOff;
  }

  public void setHasCreatorSignedOff(Boolean hasCreatorSignedOff) {
    this.hasCreatorSignedOff = hasCreatorSignedOff;
  }


  public Product inventorySource(String inventorySource) {
    this.inventorySource = inventorySource;
    return this;
  }

  /**
   * What exchange will provide this inventory (readonly, except on create).
   * @return inventorySource
   */
  @javax.annotation.Nullable
  public String getInventorySource() {
    return inventorySource;
  }

  public void setInventorySource(String inventorySource) {
    this.inventorySource = inventorySource;
  }


  public Product kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;adexchangebuyer#product\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public Product labels(List<MarketplaceLabel> labels) {
    this.labels = labels;
    return this;
  }

  public Product addLabelsItem(MarketplaceLabel labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<>();
    }
    this.labels.add(labelsItem);
    return this;
  }

  /**
   * Optional List of labels for the product (optional, buyer-readonly).
   * @return labels
   */
  @javax.annotation.Nullable
  public List<MarketplaceLabel> getLabels() {
    return labels;
  }

  public void setLabels(List<MarketplaceLabel> labels) {
    this.labels = labels;
  }


  public Product lastUpdateTimeMs(String lastUpdateTimeMs) {
    this.lastUpdateTimeMs = lastUpdateTimeMs;
    return this;
  }

  /**
   * Time of last update in ms. since epoch (readonly)
   * @return lastUpdateTimeMs
   */
  @javax.annotation.Nullable
  public String getLastUpdateTimeMs() {
    return lastUpdateTimeMs;
  }

  public void setLastUpdateTimeMs(String lastUpdateTimeMs) {
    this.lastUpdateTimeMs = lastUpdateTimeMs;
  }


  public Product legacyOfferId(String legacyOfferId) {
    this.legacyOfferId = legacyOfferId;
    return this;
  }

  /**
   * Optional legacy offer id if this offer is a preferred deal offer.
   * @return legacyOfferId
   */
  @javax.annotation.Nullable
  public String getLegacyOfferId() {
    return legacyOfferId;
  }

  public void setLegacyOfferId(String legacyOfferId) {
    this.legacyOfferId = legacyOfferId;
  }


  public Product marketplacePublisherProfileId(String marketplacePublisherProfileId) {
    this.marketplacePublisherProfileId = marketplacePublisherProfileId;
    return this;
  }

  /**
   * Marketplace publisher profile Id. This Id differs from the regular publisher_profile_id in that 1. This is a new id, the old Id will be deprecated in 2017. 2. This id uniquely identifies a publisher profile by itself.
   * @return marketplacePublisherProfileId
   */
  @javax.annotation.Nullable
  public String getMarketplacePublisherProfileId() {
    return marketplacePublisherProfileId;
  }

  public void setMarketplacePublisherProfileId(String marketplacePublisherProfileId) {
    this.marketplacePublisherProfileId = marketplacePublisherProfileId;
  }


  public Product name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name for this product as set by the seller. (buyer-readonly)
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Product privateAuctionId(String privateAuctionId) {
    this.privateAuctionId = privateAuctionId;
    return this;
  }

  /**
   * Optional private auction id if this offer is a private auction offer.
   * @return privateAuctionId
   */
  @javax.annotation.Nullable
  public String getPrivateAuctionId() {
    return privateAuctionId;
  }

  public void setPrivateAuctionId(String privateAuctionId) {
    this.privateAuctionId = privateAuctionId;
  }


  public Product productId(String productId) {
    this.productId = productId;
    return this;
  }

  /**
   * The unique id for the product (readonly)
   * @return productId
   */
  @javax.annotation.Nullable
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }


  public Product publisherProfileId(String publisherProfileId) {
    this.publisherProfileId = publisherProfileId;
    return this;
  }

  /**
   * Id of the publisher profile for a given seller. A (seller.account_id, publisher_profile_id) pair uniquely identifies a publisher profile. Buyers can call the PublisherProfiles::List endpoint to get a list of publisher profiles for a given seller.
   * @return publisherProfileId
   */
  @javax.annotation.Nullable
  public String getPublisherProfileId() {
    return publisherProfileId;
  }

  public void setPublisherProfileId(String publisherProfileId) {
    this.publisherProfileId = publisherProfileId;
  }


  public Product publisherProvidedForecast(PublisherProvidedForecast publisherProvidedForecast) {
    this.publisherProvidedForecast = publisherProvidedForecast;
    return this;
  }

  /**
   * Get publisherProvidedForecast
   * @return publisherProvidedForecast
   */
  @javax.annotation.Nullable
  public PublisherProvidedForecast getPublisherProvidedForecast() {
    return publisherProvidedForecast;
  }

  public void setPublisherProvidedForecast(PublisherProvidedForecast publisherProvidedForecast) {
    this.publisherProvidedForecast = publisherProvidedForecast;
  }


  public Product revisionNumber(String revisionNumber) {
    this.revisionNumber = revisionNumber;
    return this;
  }

  /**
   * The revision number of the product. (readonly)
   * @return revisionNumber
   */
  @javax.annotation.Nullable
  public String getRevisionNumber() {
    return revisionNumber;
  }

  public void setRevisionNumber(String revisionNumber) {
    this.revisionNumber = revisionNumber;
  }


  public Product seller(Seller seller) {
    this.seller = seller;
    return this;
  }

  /**
   * Get seller
   * @return seller
   */
  @javax.annotation.Nullable
  public Seller getSeller() {
    return seller;
  }

  public void setSeller(Seller seller) {
    this.seller = seller;
  }


  public Product sharedTargetings(List<SharedTargeting> sharedTargetings) {
    this.sharedTargetings = sharedTargetings;
    return this;
  }

  public Product addSharedTargetingsItem(SharedTargeting sharedTargetingsItem) {
    if (this.sharedTargetings == null) {
      this.sharedTargetings = new ArrayList<>();
    }
    this.sharedTargetings.add(sharedTargetingsItem);
    return this;
  }

  /**
   * Targeting that is shared between the buyer and the seller. Each targeting criteria has a specified key and for each key there is a list of inclusion value or exclusion values. (buyer-readonly)
   * @return sharedTargetings
   */
  @javax.annotation.Nullable
  public List<SharedTargeting> getSharedTargetings() {
    return sharedTargetings;
  }

  public void setSharedTargetings(List<SharedTargeting> sharedTargetings) {
    this.sharedTargetings = sharedTargetings;
  }


  public Product state(String state) {
    this.state = state;
    return this;
  }

  /**
   * The state of the product. (buyer-readonly)
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public Product syndicationProduct(String syndicationProduct) {
    this.syndicationProduct = syndicationProduct;
    return this;
  }

  /**
   * The syndication product associated with the deal. (readonly, except on create)
   * @return syndicationProduct
   */
  @javax.annotation.Nullable
  public String getSyndicationProduct() {
    return syndicationProduct;
  }

  public void setSyndicationProduct(String syndicationProduct) {
    this.syndicationProduct = syndicationProduct;
  }


  public Product terms(DealTerms terms) {
    this.terms = terms;
    return this;
  }

  /**
   * Get terms
   * @return terms
   */
  @javax.annotation.Nullable
  public DealTerms getTerms() {
    return terms;
  }

  public void setTerms(DealTerms terms) {
    this.terms = terms;
  }


  public Product webPropertyCode(String webPropertyCode) {
    this.webPropertyCode = webPropertyCode;
    return this;
  }

  /**
   * The web property code for the seller. This field is meant to be copied over as is when creating deals.
   * @return webPropertyCode
   */
  @javax.annotation.Nullable
  public String getWebPropertyCode() {
    return webPropertyCode;
  }

  public void setWebPropertyCode(String webPropertyCode) {
    this.webPropertyCode = webPropertyCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.billedBuyer, product.billedBuyer) &&
        Objects.equals(this.buyer, product.buyer) &&
        Objects.equals(this.creationTimeMs, product.creationTimeMs) &&
        Objects.equals(this.creatorContacts, product.creatorContacts) &&
        Objects.equals(this.creatorRole, product.creatorRole) &&
        Objects.equals(this.deliveryControl, product.deliveryControl) &&
        Objects.equals(this.flightEndTimeMs, product.flightEndTimeMs) &&
        Objects.equals(this.flightStartTimeMs, product.flightStartTimeMs) &&
        Objects.equals(this.hasCreatorSignedOff, product.hasCreatorSignedOff) &&
        Objects.equals(this.inventorySource, product.inventorySource) &&
        Objects.equals(this.kind, product.kind) &&
        Objects.equals(this.labels, product.labels) &&
        Objects.equals(this.lastUpdateTimeMs, product.lastUpdateTimeMs) &&
        Objects.equals(this.legacyOfferId, product.legacyOfferId) &&
        Objects.equals(this.marketplacePublisherProfileId, product.marketplacePublisherProfileId) &&
        Objects.equals(this.name, product.name) &&
        Objects.equals(this.privateAuctionId, product.privateAuctionId) &&
        Objects.equals(this.productId, product.productId) &&
        Objects.equals(this.publisherProfileId, product.publisherProfileId) &&
        Objects.equals(this.publisherProvidedForecast, product.publisherProvidedForecast) &&
        Objects.equals(this.revisionNumber, product.revisionNumber) &&
        Objects.equals(this.seller, product.seller) &&
        Objects.equals(this.sharedTargetings, product.sharedTargetings) &&
        Objects.equals(this.state, product.state) &&
        Objects.equals(this.syndicationProduct, product.syndicationProduct) &&
        Objects.equals(this.terms, product.terms) &&
        Objects.equals(this.webPropertyCode, product.webPropertyCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billedBuyer, buyer, creationTimeMs, creatorContacts, creatorRole, deliveryControl, flightEndTimeMs, flightStartTimeMs, hasCreatorSignedOff, inventorySource, kind, labels, lastUpdateTimeMs, legacyOfferId, marketplacePublisherProfileId, name, privateAuctionId, productId, publisherProfileId, publisherProvidedForecast, revisionNumber, seller, sharedTargetings, state, syndicationProduct, terms, webPropertyCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    sb.append("    billedBuyer: ").append(toIndentedString(billedBuyer)).append("\n");
    sb.append("    buyer: ").append(toIndentedString(buyer)).append("\n");
    sb.append("    creationTimeMs: ").append(toIndentedString(creationTimeMs)).append("\n");
    sb.append("    creatorContacts: ").append(toIndentedString(creatorContacts)).append("\n");
    sb.append("    creatorRole: ").append(toIndentedString(creatorRole)).append("\n");
    sb.append("    deliveryControl: ").append(toIndentedString(deliveryControl)).append("\n");
    sb.append("    flightEndTimeMs: ").append(toIndentedString(flightEndTimeMs)).append("\n");
    sb.append("    flightStartTimeMs: ").append(toIndentedString(flightStartTimeMs)).append("\n");
    sb.append("    hasCreatorSignedOff: ").append(toIndentedString(hasCreatorSignedOff)).append("\n");
    sb.append("    inventorySource: ").append(toIndentedString(inventorySource)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    lastUpdateTimeMs: ").append(toIndentedString(lastUpdateTimeMs)).append("\n");
    sb.append("    legacyOfferId: ").append(toIndentedString(legacyOfferId)).append("\n");
    sb.append("    marketplacePublisherProfileId: ").append(toIndentedString(marketplacePublisherProfileId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    privateAuctionId: ").append(toIndentedString(privateAuctionId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    publisherProfileId: ").append(toIndentedString(publisherProfileId)).append("\n");
    sb.append("    publisherProvidedForecast: ").append(toIndentedString(publisherProvidedForecast)).append("\n");
    sb.append("    revisionNumber: ").append(toIndentedString(revisionNumber)).append("\n");
    sb.append("    seller: ").append(toIndentedString(seller)).append("\n");
    sb.append("    sharedTargetings: ").append(toIndentedString(sharedTargetings)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    syndicationProduct: ").append(toIndentedString(syndicationProduct)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    webPropertyCode: ").append(toIndentedString(webPropertyCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("billedBuyer");
    openapiFields.add("buyer");
    openapiFields.add("creationTimeMs");
    openapiFields.add("creatorContacts");
    openapiFields.add("creatorRole");
    openapiFields.add("deliveryControl");
    openapiFields.add("flightEndTimeMs");
    openapiFields.add("flightStartTimeMs");
    openapiFields.add("hasCreatorSignedOff");
    openapiFields.add("inventorySource");
    openapiFields.add("kind");
    openapiFields.add("labels");
    openapiFields.add("lastUpdateTimeMs");
    openapiFields.add("legacyOfferId");
    openapiFields.add("marketplacePublisherProfileId");
    openapiFields.add("name");
    openapiFields.add("privateAuctionId");
    openapiFields.add("productId");
    openapiFields.add("publisherProfileId");
    openapiFields.add("publisherProvidedForecast");
    openapiFields.add("revisionNumber");
    openapiFields.add("seller");
    openapiFields.add("sharedTargetings");
    openapiFields.add("state");
    openapiFields.add("syndicationProduct");
    openapiFields.add("terms");
    openapiFields.add("webPropertyCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Product
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Product.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Product is not found in the empty JSON string", Product.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Product.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Product` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `billedBuyer`
      if (jsonObj.get("billedBuyer") != null && !jsonObj.get("billedBuyer").isJsonNull()) {
        Buyer.validateJsonElement(jsonObj.get("billedBuyer"));
      }
      // validate the optional field `buyer`
      if (jsonObj.get("buyer") != null && !jsonObj.get("buyer").isJsonNull()) {
        Buyer.validateJsonElement(jsonObj.get("buyer"));
      }
      if ((jsonObj.get("creationTimeMs") != null && !jsonObj.get("creationTimeMs").isJsonNull()) && !jsonObj.get("creationTimeMs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creationTimeMs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creationTimeMs").toString()));
      }
      if (jsonObj.get("creatorContacts") != null && !jsonObj.get("creatorContacts").isJsonNull()) {
        JsonArray jsonArraycreatorContacts = jsonObj.getAsJsonArray("creatorContacts");
        if (jsonArraycreatorContacts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("creatorContacts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `creatorContacts` to be an array in the JSON string but got `%s`", jsonObj.get("creatorContacts").toString()));
          }

          // validate the optional field `creatorContacts` (array)
          for (int i = 0; i < jsonArraycreatorContacts.size(); i++) {
            ContactInformation.validateJsonElement(jsonArraycreatorContacts.get(i));
          };
        }
      }
      if ((jsonObj.get("creatorRole") != null && !jsonObj.get("creatorRole").isJsonNull()) && !jsonObj.get("creatorRole").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creatorRole` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creatorRole").toString()));
      }
      // validate the optional field `deliveryControl`
      if (jsonObj.get("deliveryControl") != null && !jsonObj.get("deliveryControl").isJsonNull()) {
        DeliveryControl.validateJsonElement(jsonObj.get("deliveryControl"));
      }
      if ((jsonObj.get("flightEndTimeMs") != null && !jsonObj.get("flightEndTimeMs").isJsonNull()) && !jsonObj.get("flightEndTimeMs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flightEndTimeMs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flightEndTimeMs").toString()));
      }
      if ((jsonObj.get("flightStartTimeMs") != null && !jsonObj.get("flightStartTimeMs").isJsonNull()) && !jsonObj.get("flightStartTimeMs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flightStartTimeMs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flightStartTimeMs").toString()));
      }
      if ((jsonObj.get("inventorySource") != null && !jsonObj.get("inventorySource").isJsonNull()) && !jsonObj.get("inventorySource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inventorySource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inventorySource").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      if (jsonObj.get("labels") != null && !jsonObj.get("labels").isJsonNull()) {
        JsonArray jsonArraylabels = jsonObj.getAsJsonArray("labels");
        if (jsonArraylabels != null) {
          // ensure the json data is an array
          if (!jsonObj.get("labels").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `labels` to be an array in the JSON string but got `%s`", jsonObj.get("labels").toString()));
          }

          // validate the optional field `labels` (array)
          for (int i = 0; i < jsonArraylabels.size(); i++) {
            MarketplaceLabel.validateJsonElement(jsonArraylabels.get(i));
          };
        }
      }
      if ((jsonObj.get("lastUpdateTimeMs") != null && !jsonObj.get("lastUpdateTimeMs").isJsonNull()) && !jsonObj.get("lastUpdateTimeMs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUpdateTimeMs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUpdateTimeMs").toString()));
      }
      if ((jsonObj.get("legacyOfferId") != null && !jsonObj.get("legacyOfferId").isJsonNull()) && !jsonObj.get("legacyOfferId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legacyOfferId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legacyOfferId").toString()));
      }
      if ((jsonObj.get("marketplacePublisherProfileId") != null && !jsonObj.get("marketplacePublisherProfileId").isJsonNull()) && !jsonObj.get("marketplacePublisherProfileId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplacePublisherProfileId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketplacePublisherProfileId").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("privateAuctionId") != null && !jsonObj.get("privateAuctionId").isJsonNull()) && !jsonObj.get("privateAuctionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privateAuctionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privateAuctionId").toString()));
      }
      if ((jsonObj.get("productId") != null && !jsonObj.get("productId").isJsonNull()) && !jsonObj.get("productId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productId").toString()));
      }
      if ((jsonObj.get("publisherProfileId") != null && !jsonObj.get("publisherProfileId").isJsonNull()) && !jsonObj.get("publisherProfileId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisherProfileId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisherProfileId").toString()));
      }
      // validate the optional field `publisherProvidedForecast`
      if (jsonObj.get("publisherProvidedForecast") != null && !jsonObj.get("publisherProvidedForecast").isJsonNull()) {
        PublisherProvidedForecast.validateJsonElement(jsonObj.get("publisherProvidedForecast"));
      }
      if ((jsonObj.get("revisionNumber") != null && !jsonObj.get("revisionNumber").isJsonNull()) && !jsonObj.get("revisionNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revisionNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revisionNumber").toString()));
      }
      // validate the optional field `seller`
      if (jsonObj.get("seller") != null && !jsonObj.get("seller").isJsonNull()) {
        Seller.validateJsonElement(jsonObj.get("seller"));
      }
      if (jsonObj.get("sharedTargetings") != null && !jsonObj.get("sharedTargetings").isJsonNull()) {
        JsonArray jsonArraysharedTargetings = jsonObj.getAsJsonArray("sharedTargetings");
        if (jsonArraysharedTargetings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sharedTargetings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sharedTargetings` to be an array in the JSON string but got `%s`", jsonObj.get("sharedTargetings").toString()));
          }

          // validate the optional field `sharedTargetings` (array)
          for (int i = 0; i < jsonArraysharedTargetings.size(); i++) {
            SharedTargeting.validateJsonElement(jsonArraysharedTargetings.get(i));
          };
        }
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("syndicationProduct") != null && !jsonObj.get("syndicationProduct").isJsonNull()) && !jsonObj.get("syndicationProduct").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `syndicationProduct` to be a primitive type in the JSON string but got `%s`", jsonObj.get("syndicationProduct").toString()));
      }
      // validate the optional field `terms`
      if (jsonObj.get("terms") != null && !jsonObj.get("terms").isJsonNull()) {
        DealTerms.validateJsonElement(jsonObj.get("terms"));
      }
      if ((jsonObj.get("webPropertyCode") != null && !jsonObj.get("webPropertyCode").isJsonNull()) && !jsonObj.get("webPropertyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webPropertyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webPropertyCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Product.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Product' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Product> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Product.class));

       return (TypeAdapter<T>) new TypeAdapter<Product>() {
           @Override
           public void write(JsonWriter out, Product value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Product read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Product given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Product
   * @throws IOException if the JSON string is invalid with respect to Product
   */
  public static Product fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Product.class);
  }

  /**
   * Convert an instance of Product to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

