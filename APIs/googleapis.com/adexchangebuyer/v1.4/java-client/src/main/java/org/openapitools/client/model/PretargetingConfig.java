/*
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PretargetingConfigDimensionsInner;
import org.openapitools.client.model.PretargetingConfigExcludedPlacementsInner;
import org.openapitools.client.model.PretargetingConfigVideoPlayerSizesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PretargetingConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:44.175931-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PretargetingConfig {
  public static final String SERIALIZED_NAME_BILLING_ID = "billingId";
  @SerializedName(SERIALIZED_NAME_BILLING_ID)
  private String billingId;

  public static final String SERIALIZED_NAME_CONFIG_ID = "configId";
  @SerializedName(SERIALIZED_NAME_CONFIG_ID)
  private String configId;

  public static final String SERIALIZED_NAME_CONFIG_NAME = "configName";
  @SerializedName(SERIALIZED_NAME_CONFIG_NAME)
  private String configName;

  public static final String SERIALIZED_NAME_CREATIVE_TYPE = "creativeType";
  @SerializedName(SERIALIZED_NAME_CREATIVE_TYPE)
  private List<String> creativeType = new ArrayList<>();

  public static final String SERIALIZED_NAME_DIMENSIONS = "dimensions";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS)
  private List<PretargetingConfigDimensionsInner> dimensions = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXCLUDED_CONTENT_LABELS = "excludedContentLabels";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_CONTENT_LABELS)
  private List<String> excludedContentLabels = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXCLUDED_GEO_CRITERIA_IDS = "excludedGeoCriteriaIds";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_GEO_CRITERIA_IDS)
  private List<String> excludedGeoCriteriaIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXCLUDED_PLACEMENTS = "excludedPlacements";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_PLACEMENTS)
  private List<PretargetingConfigExcludedPlacementsInner> excludedPlacements = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXCLUDED_USER_LISTS = "excludedUserLists";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_USER_LISTS)
  private List<String> excludedUserLists = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXCLUDED_VERTICALS = "excludedVerticals";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_VERTICALS)
  private List<String> excludedVerticals = new ArrayList<>();

  public static final String SERIALIZED_NAME_GEO_CRITERIA_IDS = "geoCriteriaIds";
  @SerializedName(SERIALIZED_NAME_GEO_CRITERIA_IDS)
  private List<String> geoCriteriaIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind = "adexchangebuyer#pretargetingConfig";

  public static final String SERIALIZED_NAME_LANGUAGES = "languages";
  @SerializedName(SERIALIZED_NAME_LANGUAGES)
  private List<String> languages = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAXIMUM_QPS = "maximumQps";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_QPS)
  private String maximumQps;

  public static final String SERIALIZED_NAME_MINIMUM_VIEWABILITY_DECILE = "minimumViewabilityDecile";
  @SerializedName(SERIALIZED_NAME_MINIMUM_VIEWABILITY_DECILE)
  private Integer minimumViewabilityDecile;

  public static final String SERIALIZED_NAME_MOBILE_CARRIERS = "mobileCarriers";
  @SerializedName(SERIALIZED_NAME_MOBILE_CARRIERS)
  private List<String> mobileCarriers = new ArrayList<>();

  public static final String SERIALIZED_NAME_MOBILE_DEVICES = "mobileDevices";
  @SerializedName(SERIALIZED_NAME_MOBILE_DEVICES)
  private List<String> mobileDevices = new ArrayList<>();

  public static final String SERIALIZED_NAME_MOBILE_OPERATING_SYSTEM_VERSIONS = "mobileOperatingSystemVersions";
  @SerializedName(SERIALIZED_NAME_MOBILE_OPERATING_SYSTEM_VERSIONS)
  private List<String> mobileOperatingSystemVersions = new ArrayList<>();

  public static final String SERIALIZED_NAME_PLACEMENTS = "placements";
  @SerializedName(SERIALIZED_NAME_PLACEMENTS)
  private List<PretargetingConfigExcludedPlacementsInner> placements = new ArrayList<>();

  public static final String SERIALIZED_NAME_PLATFORMS = "platforms";
  @SerializedName(SERIALIZED_NAME_PLATFORMS)
  private List<String> platforms = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUPPORTED_CREATIVE_ATTRIBUTES = "supportedCreativeAttributes";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_CREATIVE_ATTRIBUTES)
  private List<String> supportedCreativeAttributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_USER_IDENTIFIER_DATA_REQUIRED = "userIdentifierDataRequired";
  @SerializedName(SERIALIZED_NAME_USER_IDENTIFIER_DATA_REQUIRED)
  private List<String> userIdentifierDataRequired = new ArrayList<>();

  public static final String SERIALIZED_NAME_USER_LISTS = "userLists";
  @SerializedName(SERIALIZED_NAME_USER_LISTS)
  private List<String> userLists = new ArrayList<>();

  public static final String SERIALIZED_NAME_VENDOR_TYPES = "vendorTypes";
  @SerializedName(SERIALIZED_NAME_VENDOR_TYPES)
  private List<String> vendorTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_VERTICALS = "verticals";
  @SerializedName(SERIALIZED_NAME_VERTICALS)
  private List<String> verticals = new ArrayList<>();

  public static final String SERIALIZED_NAME_VIDEO_PLAYER_SIZES = "videoPlayerSizes";
  @SerializedName(SERIALIZED_NAME_VIDEO_PLAYER_SIZES)
  private List<PretargetingConfigVideoPlayerSizesInner> videoPlayerSizes = new ArrayList<>();

  public PretargetingConfig() {
  }

  public PretargetingConfig billingId(String billingId) {
    this.billingId = billingId;
    return this;
  }

  /**
   * The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically.
   * @return billingId
   */
  @javax.annotation.Nullable
  public String getBillingId() {
    return billingId;
  }

  public void setBillingId(String billingId) {
    this.billingId = billingId;
  }


  public PretargetingConfig configId(String configId) {
    this.configId = configId;
    return this;
  }

  /**
   * The config id; generated automatically. Leave this field blank for insert requests.
   * @return configId
   */
  @javax.annotation.Nullable
  public String getConfigId() {
    return configId;
  }

  public void setConfigId(String configId) {
    this.configId = configId;
  }


  public PretargetingConfig configName(String configName) {
    this.configName = configName;
    return this;
  }

  /**
   * The name of the config. Must be unique. Required for all requests.
   * @return configName
   */
  @javax.annotation.Nullable
  public String getConfigName() {
    return configName;
  }

  public void setConfigName(String configName) {
    this.configName = configName;
  }


  public PretargetingConfig creativeType(List<String> creativeType) {
    this.creativeType = creativeType;
    return this;
  }

  public PretargetingConfig addCreativeTypeItem(String creativeTypeItem) {
    if (this.creativeType == null) {
      this.creativeType = new ArrayList<>();
    }
    this.creativeType.add(creativeTypeItem);
    return this;
  }

  /**
   * List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO.
   * @return creativeType
   */
  @javax.annotation.Nullable
  public List<String> getCreativeType() {
    return creativeType;
  }

  public void setCreativeType(List<String> creativeType) {
    this.creativeType = creativeType;
  }


  public PretargetingConfig dimensions(List<PretargetingConfigDimensionsInner> dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  public PretargetingConfig addDimensionsItem(PretargetingConfigDimensionsInner dimensionsItem) {
    if (this.dimensions == null) {
      this.dimensions = new ArrayList<>();
    }
    this.dimensions.add(dimensionsItem);
    return this;
  }

  /**
   * Requests which allow one of these (width, height) pairs will match. All pairs must be supported ad dimensions.
   * @return dimensions
   */
  @javax.annotation.Nullable
  public List<PretargetingConfigDimensionsInner> getDimensions() {
    return dimensions;
  }

  public void setDimensions(List<PretargetingConfigDimensionsInner> dimensions) {
    this.dimensions = dimensions;
  }


  public PretargetingConfig excludedContentLabels(List<String> excludedContentLabels) {
    this.excludedContentLabels = excludedContentLabels;
    return this;
  }

  public PretargetingConfig addExcludedContentLabelsItem(String excludedContentLabelsItem) {
    if (this.excludedContentLabels == null) {
      this.excludedContentLabels = new ArrayList<>();
    }
    this.excludedContentLabels.add(excludedContentLabelsItem);
    return this;
  }

  /**
   * Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section.
   * @return excludedContentLabels
   */
  @javax.annotation.Nullable
  public List<String> getExcludedContentLabels() {
    return excludedContentLabels;
  }

  public void setExcludedContentLabels(List<String> excludedContentLabels) {
    this.excludedContentLabels = excludedContentLabels;
  }


  public PretargetingConfig excludedGeoCriteriaIds(List<String> excludedGeoCriteriaIds) {
    this.excludedGeoCriteriaIds = excludedGeoCriteriaIds;
    return this;
  }

  public PretargetingConfig addExcludedGeoCriteriaIdsItem(String excludedGeoCriteriaIdsItem) {
    if (this.excludedGeoCriteriaIds == null) {
      this.excludedGeoCriteriaIds = new ArrayList<>();
    }
    this.excludedGeoCriteriaIds.add(excludedGeoCriteriaIdsItem);
    return this;
  }

  /**
   * Requests containing any of these geo criteria ids will not match.
   * @return excludedGeoCriteriaIds
   */
  @javax.annotation.Nullable
  public List<String> getExcludedGeoCriteriaIds() {
    return excludedGeoCriteriaIds;
  }

  public void setExcludedGeoCriteriaIds(List<String> excludedGeoCriteriaIds) {
    this.excludedGeoCriteriaIds = excludedGeoCriteriaIds;
  }


  public PretargetingConfig excludedPlacements(List<PretargetingConfigExcludedPlacementsInner> excludedPlacements) {
    this.excludedPlacements = excludedPlacements;
    return this;
  }

  public PretargetingConfig addExcludedPlacementsItem(PretargetingConfigExcludedPlacementsInner excludedPlacementsItem) {
    if (this.excludedPlacements == null) {
      this.excludedPlacements = new ArrayList<>();
    }
    this.excludedPlacements.add(excludedPlacementsItem);
    return this;
  }

  /**
   * Requests containing any of these placements will not match.
   * @return excludedPlacements
   */
  @javax.annotation.Nullable
  public List<PretargetingConfigExcludedPlacementsInner> getExcludedPlacements() {
    return excludedPlacements;
  }

  public void setExcludedPlacements(List<PretargetingConfigExcludedPlacementsInner> excludedPlacements) {
    this.excludedPlacements = excludedPlacements;
  }


  public PretargetingConfig excludedUserLists(List<String> excludedUserLists) {
    this.excludedUserLists = excludedUserLists;
    return this;
  }

  public PretargetingConfig addExcludedUserListsItem(String excludedUserListsItem) {
    if (this.excludedUserLists == null) {
      this.excludedUserLists = new ArrayList<>();
    }
    this.excludedUserLists.add(excludedUserListsItem);
    return this;
  }

  /**
   * Requests containing any of these users list ids will not match.
   * @return excludedUserLists
   */
  @javax.annotation.Nullable
  public List<String> getExcludedUserLists() {
    return excludedUserLists;
  }

  public void setExcludedUserLists(List<String> excludedUserLists) {
    this.excludedUserLists = excludedUserLists;
  }


  public PretargetingConfig excludedVerticals(List<String> excludedVerticals) {
    this.excludedVerticals = excludedVerticals;
    return this;
  }

  public PretargetingConfig addExcludedVerticalsItem(String excludedVerticalsItem) {
    if (this.excludedVerticals == null) {
      this.excludedVerticals = new ArrayList<>();
    }
    this.excludedVerticals.add(excludedVerticalsItem);
    return this;
  }

  /**
   * Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section.
   * @return excludedVerticals
   */
  @javax.annotation.Nullable
  public List<String> getExcludedVerticals() {
    return excludedVerticals;
  }

  public void setExcludedVerticals(List<String> excludedVerticals) {
    this.excludedVerticals = excludedVerticals;
  }


  public PretargetingConfig geoCriteriaIds(List<String> geoCriteriaIds) {
    this.geoCriteriaIds = geoCriteriaIds;
    return this;
  }

  public PretargetingConfig addGeoCriteriaIdsItem(String geoCriteriaIdsItem) {
    if (this.geoCriteriaIds == null) {
      this.geoCriteriaIds = new ArrayList<>();
    }
    this.geoCriteriaIds.add(geoCriteriaIdsItem);
    return this;
  }

  /**
   * Requests containing any of these geo criteria ids will match.
   * @return geoCriteriaIds
   */
  @javax.annotation.Nullable
  public List<String> getGeoCriteriaIds() {
    return geoCriteriaIds;
  }

  public void setGeoCriteriaIds(List<String> geoCriteriaIds) {
    this.geoCriteriaIds = geoCriteriaIds;
  }


  public PretargetingConfig isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

  /**
   * Whether this config is active. Required for all requests.
   * @return isActive
   */
  @javax.annotation.Nullable
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public PretargetingConfig kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * The kind of the resource, i.e. \&quot;adexchangebuyer#pretargetingConfig\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public PretargetingConfig languages(List<String> languages) {
    this.languages = languages;
    return this;
  }

  public PretargetingConfig addLanguagesItem(String languagesItem) {
    if (this.languages == null) {
      this.languages = new ArrayList<>();
    }
    this.languages.add(languagesItem);
    return this;
  }

  /**
   * Request containing any of these language codes will match.
   * @return languages
   */
  @javax.annotation.Nullable
  public List<String> getLanguages() {
    return languages;
  }

  public void setLanguages(List<String> languages) {
    this.languages = languages;
  }


  public PretargetingConfig maximumQps(String maximumQps) {
    this.maximumQps = maximumQps;
    return this;
  }

  /**
   * The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed).
   * @return maximumQps
   */
  @javax.annotation.Nullable
  public String getMaximumQps() {
    return maximumQps;
  }

  public void setMaximumQps(String maximumQps) {
    this.maximumQps = maximumQps;
  }


  public PretargetingConfig minimumViewabilityDecile(Integer minimumViewabilityDecile) {
    this.minimumViewabilityDecile = minimumViewabilityDecile;
    return this;
  }

  /**
   * Requests where the predicted viewability is below the specified decile will not match. E.g. if the buyer sets this value to 5, requests from slots where the predicted viewability is below 50% will not match. If the predicted viewability is unknown this field will be ignored.
   * @return minimumViewabilityDecile
   */
  @javax.annotation.Nullable
  public Integer getMinimumViewabilityDecile() {
    return minimumViewabilityDecile;
  }

  public void setMinimumViewabilityDecile(Integer minimumViewabilityDecile) {
    this.minimumViewabilityDecile = minimumViewabilityDecile;
  }


  public PretargetingConfig mobileCarriers(List<String> mobileCarriers) {
    this.mobileCarriers = mobileCarriers;
    return this;
  }

  public PretargetingConfig addMobileCarriersItem(String mobileCarriersItem) {
    if (this.mobileCarriers == null) {
      this.mobileCarriers = new ArrayList<>();
    }
    this.mobileCarriers.add(mobileCarriersItem);
    return this;
  }

  /**
   * Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section.
   * @return mobileCarriers
   */
  @javax.annotation.Nullable
  public List<String> getMobileCarriers() {
    return mobileCarriers;
  }

  public void setMobileCarriers(List<String> mobileCarriers) {
    this.mobileCarriers = mobileCarriers;
  }


  public PretargetingConfig mobileDevices(List<String> mobileDevices) {
    this.mobileDevices = mobileDevices;
    return this;
  }

  public PretargetingConfig addMobileDevicesItem(String mobileDevicesItem) {
    if (this.mobileDevices == null) {
      this.mobileDevices = new ArrayList<>();
    }
    this.mobileDevices.add(mobileDevicesItem);
    return this;
  }

  /**
   * Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section.
   * @return mobileDevices
   */
  @javax.annotation.Nullable
  public List<String> getMobileDevices() {
    return mobileDevices;
  }

  public void setMobileDevices(List<String> mobileDevices) {
    this.mobileDevices = mobileDevices;
  }


  public PretargetingConfig mobileOperatingSystemVersions(List<String> mobileOperatingSystemVersions) {
    this.mobileOperatingSystemVersions = mobileOperatingSystemVersions;
    return this;
  }

  public PretargetingConfig addMobileOperatingSystemVersionsItem(String mobileOperatingSystemVersionsItem) {
    if (this.mobileOperatingSystemVersions == null) {
      this.mobileOperatingSystemVersions = new ArrayList<>();
    }
    this.mobileOperatingSystemVersions.add(mobileOperatingSystemVersionsItem);
    return this;
  }

  /**
   * Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section.
   * @return mobileOperatingSystemVersions
   */
  @javax.annotation.Nullable
  public List<String> getMobileOperatingSystemVersions() {
    return mobileOperatingSystemVersions;
  }

  public void setMobileOperatingSystemVersions(List<String> mobileOperatingSystemVersions) {
    this.mobileOperatingSystemVersions = mobileOperatingSystemVersions;
  }


  public PretargetingConfig placements(List<PretargetingConfigExcludedPlacementsInner> placements) {
    this.placements = placements;
    return this;
  }

  public PretargetingConfig addPlacementsItem(PretargetingConfigExcludedPlacementsInner placementsItem) {
    if (this.placements == null) {
      this.placements = new ArrayList<>();
    }
    this.placements.add(placementsItem);
    return this;
  }

  /**
   * Requests containing any of these placements will match.
   * @return placements
   */
  @javax.annotation.Nullable
  public List<PretargetingConfigExcludedPlacementsInner> getPlacements() {
    return placements;
  }

  public void setPlacements(List<PretargetingConfigExcludedPlacementsInner> placements) {
    this.placements = placements;
  }


  public PretargetingConfig platforms(List<String> platforms) {
    this.platforms = platforms;
    return this;
  }

  public PretargetingConfig addPlatformsItem(String platformsItem) {
    if (this.platforms == null) {
      this.platforms = new ArrayList<>();
    }
    this.platforms.add(platformsItem);
    return this;
  }

  /**
   * Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET.
   * @return platforms
   */
  @javax.annotation.Nullable
  public List<String> getPlatforms() {
    return platforms;
  }

  public void setPlatforms(List<String> platforms) {
    this.platforms = platforms;
  }


  public PretargetingConfig supportedCreativeAttributes(List<String> supportedCreativeAttributes) {
    this.supportedCreativeAttributes = supportedCreativeAttributes;
    return this;
  }

  public PretargetingConfig addSupportedCreativeAttributesItem(String supportedCreativeAttributesItem) {
    if (this.supportedCreativeAttributes == null) {
      this.supportedCreativeAttributes = new ArrayList<>();
    }
    this.supportedCreativeAttributes.add(supportedCreativeAttributesItem);
    return this;
  }

  /**
   * Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section.
   * @return supportedCreativeAttributes
   */
  @javax.annotation.Nullable
  public List<String> getSupportedCreativeAttributes() {
    return supportedCreativeAttributes;
  }

  public void setSupportedCreativeAttributes(List<String> supportedCreativeAttributes) {
    this.supportedCreativeAttributes = supportedCreativeAttributes;
  }


  public PretargetingConfig userIdentifierDataRequired(List<String> userIdentifierDataRequired) {
    this.userIdentifierDataRequired = userIdentifierDataRequired;
    return this;
  }

  public PretargetingConfig addUserIdentifierDataRequiredItem(String userIdentifierDataRequiredItem) {
    if (this.userIdentifierDataRequired == null) {
      this.userIdentifierDataRequired = new ArrayList<>();
    }
    this.userIdentifierDataRequired.add(userIdentifierDataRequiredItem);
    return this;
  }

  /**
   * Requests containing the specified type of user data will match. Possible values are HOSTED_MATCH_DATA, which means the request is cookie-targetable and has a match in the buyer&#39;s hosted match table, and COOKIE_OR_IDFA, which means the request has either a targetable cookie or an iOS IDFA.
   * @return userIdentifierDataRequired
   */
  @javax.annotation.Nullable
  public List<String> getUserIdentifierDataRequired() {
    return userIdentifierDataRequired;
  }

  public void setUserIdentifierDataRequired(List<String> userIdentifierDataRequired) {
    this.userIdentifierDataRequired = userIdentifierDataRequired;
  }


  public PretargetingConfig userLists(List<String> userLists) {
    this.userLists = userLists;
    return this;
  }

  public PretargetingConfig addUserListsItem(String userListsItem) {
    if (this.userLists == null) {
      this.userLists = new ArrayList<>();
    }
    this.userLists.add(userListsItem);
    return this;
  }

  /**
   * Requests containing any of these user list ids will match.
   * @return userLists
   */
  @javax.annotation.Nullable
  public List<String> getUserLists() {
    return userLists;
  }

  public void setUserLists(List<String> userLists) {
    this.userLists = userLists;
  }


  public PretargetingConfig vendorTypes(List<String> vendorTypes) {
    this.vendorTypes = vendorTypes;
    return this;
  }

  public PretargetingConfig addVendorTypesItem(String vendorTypesItem) {
    if (this.vendorTypes == null) {
      this.vendorTypes = new ArrayList<>();
    }
    this.vendorTypes.add(vendorTypesItem);
    return this;
  }

  /**
   * Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section.
   * @return vendorTypes
   */
  @javax.annotation.Nullable
  public List<String> getVendorTypes() {
    return vendorTypes;
  }

  public void setVendorTypes(List<String> vendorTypes) {
    this.vendorTypes = vendorTypes;
  }


  public PretargetingConfig verticals(List<String> verticals) {
    this.verticals = verticals;
    return this;
  }

  public PretargetingConfig addVerticalsItem(String verticalsItem) {
    if (this.verticals == null) {
      this.verticals = new ArrayList<>();
    }
    this.verticals.add(verticalsItem);
    return this;
  }

  /**
   * Requests containing any of these vertical ids will match.
   * @return verticals
   */
  @javax.annotation.Nullable
  public List<String> getVerticals() {
    return verticals;
  }

  public void setVerticals(List<String> verticals) {
    this.verticals = verticals;
  }


  public PretargetingConfig videoPlayerSizes(List<PretargetingConfigVideoPlayerSizesInner> videoPlayerSizes) {
    this.videoPlayerSizes = videoPlayerSizes;
    return this;
  }

  public PretargetingConfig addVideoPlayerSizesItem(PretargetingConfigVideoPlayerSizesInner videoPlayerSizesItem) {
    if (this.videoPlayerSizes == null) {
      this.videoPlayerSizes = new ArrayList<>();
    }
    this.videoPlayerSizes.add(videoPlayerSizesItem);
    return this;
  }

  /**
   * Video requests satisfying any of these player size constraints will match.
   * @return videoPlayerSizes
   */
  @javax.annotation.Nullable
  public List<PretargetingConfigVideoPlayerSizesInner> getVideoPlayerSizes() {
    return videoPlayerSizes;
  }

  public void setVideoPlayerSizes(List<PretargetingConfigVideoPlayerSizesInner> videoPlayerSizes) {
    this.videoPlayerSizes = videoPlayerSizes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PretargetingConfig pretargetingConfig = (PretargetingConfig) o;
    return Objects.equals(this.billingId, pretargetingConfig.billingId) &&
        Objects.equals(this.configId, pretargetingConfig.configId) &&
        Objects.equals(this.configName, pretargetingConfig.configName) &&
        Objects.equals(this.creativeType, pretargetingConfig.creativeType) &&
        Objects.equals(this.dimensions, pretargetingConfig.dimensions) &&
        Objects.equals(this.excludedContentLabels, pretargetingConfig.excludedContentLabels) &&
        Objects.equals(this.excludedGeoCriteriaIds, pretargetingConfig.excludedGeoCriteriaIds) &&
        Objects.equals(this.excludedPlacements, pretargetingConfig.excludedPlacements) &&
        Objects.equals(this.excludedUserLists, pretargetingConfig.excludedUserLists) &&
        Objects.equals(this.excludedVerticals, pretargetingConfig.excludedVerticals) &&
        Objects.equals(this.geoCriteriaIds, pretargetingConfig.geoCriteriaIds) &&
        Objects.equals(this.isActive, pretargetingConfig.isActive) &&
        Objects.equals(this.kind, pretargetingConfig.kind) &&
        Objects.equals(this.languages, pretargetingConfig.languages) &&
        Objects.equals(this.maximumQps, pretargetingConfig.maximumQps) &&
        Objects.equals(this.minimumViewabilityDecile, pretargetingConfig.minimumViewabilityDecile) &&
        Objects.equals(this.mobileCarriers, pretargetingConfig.mobileCarriers) &&
        Objects.equals(this.mobileDevices, pretargetingConfig.mobileDevices) &&
        Objects.equals(this.mobileOperatingSystemVersions, pretargetingConfig.mobileOperatingSystemVersions) &&
        Objects.equals(this.placements, pretargetingConfig.placements) &&
        Objects.equals(this.platforms, pretargetingConfig.platforms) &&
        Objects.equals(this.supportedCreativeAttributes, pretargetingConfig.supportedCreativeAttributes) &&
        Objects.equals(this.userIdentifierDataRequired, pretargetingConfig.userIdentifierDataRequired) &&
        Objects.equals(this.userLists, pretargetingConfig.userLists) &&
        Objects.equals(this.vendorTypes, pretargetingConfig.vendorTypes) &&
        Objects.equals(this.verticals, pretargetingConfig.verticals) &&
        Objects.equals(this.videoPlayerSizes, pretargetingConfig.videoPlayerSizes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billingId, configId, configName, creativeType, dimensions, excludedContentLabels, excludedGeoCriteriaIds, excludedPlacements, excludedUserLists, excludedVerticals, geoCriteriaIds, isActive, kind, languages, maximumQps, minimumViewabilityDecile, mobileCarriers, mobileDevices, mobileOperatingSystemVersions, placements, platforms, supportedCreativeAttributes, userIdentifierDataRequired, userLists, vendorTypes, verticals, videoPlayerSizes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PretargetingConfig {\n");
    sb.append("    billingId: ").append(toIndentedString(billingId)).append("\n");
    sb.append("    configId: ").append(toIndentedString(configId)).append("\n");
    sb.append("    configName: ").append(toIndentedString(configName)).append("\n");
    sb.append("    creativeType: ").append(toIndentedString(creativeType)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    excludedContentLabels: ").append(toIndentedString(excludedContentLabels)).append("\n");
    sb.append("    excludedGeoCriteriaIds: ").append(toIndentedString(excludedGeoCriteriaIds)).append("\n");
    sb.append("    excludedPlacements: ").append(toIndentedString(excludedPlacements)).append("\n");
    sb.append("    excludedUserLists: ").append(toIndentedString(excludedUserLists)).append("\n");
    sb.append("    excludedVerticals: ").append(toIndentedString(excludedVerticals)).append("\n");
    sb.append("    geoCriteriaIds: ").append(toIndentedString(geoCriteriaIds)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    maximumQps: ").append(toIndentedString(maximumQps)).append("\n");
    sb.append("    minimumViewabilityDecile: ").append(toIndentedString(minimumViewabilityDecile)).append("\n");
    sb.append("    mobileCarriers: ").append(toIndentedString(mobileCarriers)).append("\n");
    sb.append("    mobileDevices: ").append(toIndentedString(mobileDevices)).append("\n");
    sb.append("    mobileOperatingSystemVersions: ").append(toIndentedString(mobileOperatingSystemVersions)).append("\n");
    sb.append("    placements: ").append(toIndentedString(placements)).append("\n");
    sb.append("    platforms: ").append(toIndentedString(platforms)).append("\n");
    sb.append("    supportedCreativeAttributes: ").append(toIndentedString(supportedCreativeAttributes)).append("\n");
    sb.append("    userIdentifierDataRequired: ").append(toIndentedString(userIdentifierDataRequired)).append("\n");
    sb.append("    userLists: ").append(toIndentedString(userLists)).append("\n");
    sb.append("    vendorTypes: ").append(toIndentedString(vendorTypes)).append("\n");
    sb.append("    verticals: ").append(toIndentedString(verticals)).append("\n");
    sb.append("    videoPlayerSizes: ").append(toIndentedString(videoPlayerSizes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("billingId");
    openapiFields.add("configId");
    openapiFields.add("configName");
    openapiFields.add("creativeType");
    openapiFields.add("dimensions");
    openapiFields.add("excludedContentLabels");
    openapiFields.add("excludedGeoCriteriaIds");
    openapiFields.add("excludedPlacements");
    openapiFields.add("excludedUserLists");
    openapiFields.add("excludedVerticals");
    openapiFields.add("geoCriteriaIds");
    openapiFields.add("isActive");
    openapiFields.add("kind");
    openapiFields.add("languages");
    openapiFields.add("maximumQps");
    openapiFields.add("minimumViewabilityDecile");
    openapiFields.add("mobileCarriers");
    openapiFields.add("mobileDevices");
    openapiFields.add("mobileOperatingSystemVersions");
    openapiFields.add("placements");
    openapiFields.add("platforms");
    openapiFields.add("supportedCreativeAttributes");
    openapiFields.add("userIdentifierDataRequired");
    openapiFields.add("userLists");
    openapiFields.add("vendorTypes");
    openapiFields.add("verticals");
    openapiFields.add("videoPlayerSizes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PretargetingConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PretargetingConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PretargetingConfig is not found in the empty JSON string", PretargetingConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PretargetingConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PretargetingConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("billingId") != null && !jsonObj.get("billingId").isJsonNull()) && !jsonObj.get("billingId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingId").toString()));
      }
      if ((jsonObj.get("configId") != null && !jsonObj.get("configId").isJsonNull()) && !jsonObj.get("configId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `configId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("configId").toString()));
      }
      if ((jsonObj.get("configName") != null && !jsonObj.get("configName").isJsonNull()) && !jsonObj.get("configName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `configName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("configName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("creativeType") != null && !jsonObj.get("creativeType").isJsonNull() && !jsonObj.get("creativeType").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `creativeType` to be an array in the JSON string but got `%s`", jsonObj.get("creativeType").toString()));
      }
      if (jsonObj.get("dimensions") != null && !jsonObj.get("dimensions").isJsonNull()) {
        JsonArray jsonArraydimensions = jsonObj.getAsJsonArray("dimensions");
        if (jsonArraydimensions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("dimensions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `dimensions` to be an array in the JSON string but got `%s`", jsonObj.get("dimensions").toString()));
          }

          // validate the optional field `dimensions` (array)
          for (int i = 0; i < jsonArraydimensions.size(); i++) {
            PretargetingConfigDimensionsInner.validateJsonElement(jsonArraydimensions.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("excludedContentLabels") != null && !jsonObj.get("excludedContentLabels").isJsonNull() && !jsonObj.get("excludedContentLabels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludedContentLabels` to be an array in the JSON string but got `%s`", jsonObj.get("excludedContentLabels").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("excludedGeoCriteriaIds") != null && !jsonObj.get("excludedGeoCriteriaIds").isJsonNull() && !jsonObj.get("excludedGeoCriteriaIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludedGeoCriteriaIds` to be an array in the JSON string but got `%s`", jsonObj.get("excludedGeoCriteriaIds").toString()));
      }
      if (jsonObj.get("excludedPlacements") != null && !jsonObj.get("excludedPlacements").isJsonNull()) {
        JsonArray jsonArrayexcludedPlacements = jsonObj.getAsJsonArray("excludedPlacements");
        if (jsonArrayexcludedPlacements != null) {
          // ensure the json data is an array
          if (!jsonObj.get("excludedPlacements").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `excludedPlacements` to be an array in the JSON string but got `%s`", jsonObj.get("excludedPlacements").toString()));
          }

          // validate the optional field `excludedPlacements` (array)
          for (int i = 0; i < jsonArrayexcludedPlacements.size(); i++) {
            PretargetingConfigExcludedPlacementsInner.validateJsonElement(jsonArrayexcludedPlacements.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("excludedUserLists") != null && !jsonObj.get("excludedUserLists").isJsonNull() && !jsonObj.get("excludedUserLists").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludedUserLists` to be an array in the JSON string but got `%s`", jsonObj.get("excludedUserLists").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("excludedVerticals") != null && !jsonObj.get("excludedVerticals").isJsonNull() && !jsonObj.get("excludedVerticals").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludedVerticals` to be an array in the JSON string but got `%s`", jsonObj.get("excludedVerticals").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("geoCriteriaIds") != null && !jsonObj.get("geoCriteriaIds").isJsonNull() && !jsonObj.get("geoCriteriaIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `geoCriteriaIds` to be an array in the JSON string but got `%s`", jsonObj.get("geoCriteriaIds").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("languages") != null && !jsonObj.get("languages").isJsonNull() && !jsonObj.get("languages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `languages` to be an array in the JSON string but got `%s`", jsonObj.get("languages").toString()));
      }
      if ((jsonObj.get("maximumQps") != null && !jsonObj.get("maximumQps").isJsonNull()) && !jsonObj.get("maximumQps").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maximumQps` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maximumQps").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("mobileCarriers") != null && !jsonObj.get("mobileCarriers").isJsonNull() && !jsonObj.get("mobileCarriers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobileCarriers` to be an array in the JSON string but got `%s`", jsonObj.get("mobileCarriers").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("mobileDevices") != null && !jsonObj.get("mobileDevices").isJsonNull() && !jsonObj.get("mobileDevices").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobileDevices` to be an array in the JSON string but got `%s`", jsonObj.get("mobileDevices").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("mobileOperatingSystemVersions") != null && !jsonObj.get("mobileOperatingSystemVersions").isJsonNull() && !jsonObj.get("mobileOperatingSystemVersions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobileOperatingSystemVersions` to be an array in the JSON string but got `%s`", jsonObj.get("mobileOperatingSystemVersions").toString()));
      }
      if (jsonObj.get("placements") != null && !jsonObj.get("placements").isJsonNull()) {
        JsonArray jsonArrayplacements = jsonObj.getAsJsonArray("placements");
        if (jsonArrayplacements != null) {
          // ensure the json data is an array
          if (!jsonObj.get("placements").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `placements` to be an array in the JSON string but got `%s`", jsonObj.get("placements").toString()));
          }

          // validate the optional field `placements` (array)
          for (int i = 0; i < jsonArrayplacements.size(); i++) {
            PretargetingConfigExcludedPlacementsInner.validateJsonElement(jsonArrayplacements.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("platforms") != null && !jsonObj.get("platforms").isJsonNull() && !jsonObj.get("platforms").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `platforms` to be an array in the JSON string but got `%s`", jsonObj.get("platforms").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("supportedCreativeAttributes") != null && !jsonObj.get("supportedCreativeAttributes").isJsonNull() && !jsonObj.get("supportedCreativeAttributes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportedCreativeAttributes` to be an array in the JSON string but got `%s`", jsonObj.get("supportedCreativeAttributes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("userIdentifierDataRequired") != null && !jsonObj.get("userIdentifierDataRequired").isJsonNull() && !jsonObj.get("userIdentifierDataRequired").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `userIdentifierDataRequired` to be an array in the JSON string but got `%s`", jsonObj.get("userIdentifierDataRequired").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("userLists") != null && !jsonObj.get("userLists").isJsonNull() && !jsonObj.get("userLists").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `userLists` to be an array in the JSON string but got `%s`", jsonObj.get("userLists").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("vendorTypes") != null && !jsonObj.get("vendorTypes").isJsonNull() && !jsonObj.get("vendorTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendorTypes` to be an array in the JSON string but got `%s`", jsonObj.get("vendorTypes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("verticals") != null && !jsonObj.get("verticals").isJsonNull() && !jsonObj.get("verticals").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `verticals` to be an array in the JSON string but got `%s`", jsonObj.get("verticals").toString()));
      }
      if (jsonObj.get("videoPlayerSizes") != null && !jsonObj.get("videoPlayerSizes").isJsonNull()) {
        JsonArray jsonArrayvideoPlayerSizes = jsonObj.getAsJsonArray("videoPlayerSizes");
        if (jsonArrayvideoPlayerSizes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("videoPlayerSizes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `videoPlayerSizes` to be an array in the JSON string but got `%s`", jsonObj.get("videoPlayerSizes").toString()));
          }

          // validate the optional field `videoPlayerSizes` (array)
          for (int i = 0; i < jsonArrayvideoPlayerSizes.size(); i++) {
            PretargetingConfigVideoPlayerSizesInner.validateJsonElement(jsonArrayvideoPlayerSizes.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PretargetingConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PretargetingConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PretargetingConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PretargetingConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<PretargetingConfig>() {
           @Override
           public void write(JsonWriter out, PretargetingConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PretargetingConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PretargetingConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PretargetingConfig
   * @throws IOException if the JSON string is invalid with respect to PretargetingConfig
   */
  public static PretargetingConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PretargetingConfig.class);
  }

  /**
   * Convert an instance of PretargetingConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

