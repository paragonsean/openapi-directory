/*
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DeliveryControlFrequencyCap;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DeliveryControl
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:44.175931-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeliveryControl {
  public static final String SERIALIZED_NAME_CREATIVE_BLOCKING_LEVEL = "creativeBlockingLevel";
  @SerializedName(SERIALIZED_NAME_CREATIVE_BLOCKING_LEVEL)
  private String creativeBlockingLevel;

  public static final String SERIALIZED_NAME_DELIVERY_RATE_TYPE = "deliveryRateType";
  @SerializedName(SERIALIZED_NAME_DELIVERY_RATE_TYPE)
  private String deliveryRateType;

  public static final String SERIALIZED_NAME_FREQUENCY_CAPS = "frequencyCaps";
  @SerializedName(SERIALIZED_NAME_FREQUENCY_CAPS)
  private List<DeliveryControlFrequencyCap> frequencyCaps = new ArrayList<>();

  public DeliveryControl() {
  }

  public DeliveryControl creativeBlockingLevel(String creativeBlockingLevel) {
    this.creativeBlockingLevel = creativeBlockingLevel;
    return this;
  }

  /**
   * Get creativeBlockingLevel
   * @return creativeBlockingLevel
   */
  @javax.annotation.Nullable
  public String getCreativeBlockingLevel() {
    return creativeBlockingLevel;
  }

  public void setCreativeBlockingLevel(String creativeBlockingLevel) {
    this.creativeBlockingLevel = creativeBlockingLevel;
  }


  public DeliveryControl deliveryRateType(String deliveryRateType) {
    this.deliveryRateType = deliveryRateType;
    return this;
  }

  /**
   * Get deliveryRateType
   * @return deliveryRateType
   */
  @javax.annotation.Nullable
  public String getDeliveryRateType() {
    return deliveryRateType;
  }

  public void setDeliveryRateType(String deliveryRateType) {
    this.deliveryRateType = deliveryRateType;
  }


  public DeliveryControl frequencyCaps(List<DeliveryControlFrequencyCap> frequencyCaps) {
    this.frequencyCaps = frequencyCaps;
    return this;
  }

  public DeliveryControl addFrequencyCapsItem(DeliveryControlFrequencyCap frequencyCapsItem) {
    if (this.frequencyCaps == null) {
      this.frequencyCaps = new ArrayList<>();
    }
    this.frequencyCaps.add(frequencyCapsItem);
    return this;
  }

  /**
   * Get frequencyCaps
   * @return frequencyCaps
   */
  @javax.annotation.Nullable
  public List<DeliveryControlFrequencyCap> getFrequencyCaps() {
    return frequencyCaps;
  }

  public void setFrequencyCaps(List<DeliveryControlFrequencyCap> frequencyCaps) {
    this.frequencyCaps = frequencyCaps;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeliveryControl deliveryControl = (DeliveryControl) o;
    return Objects.equals(this.creativeBlockingLevel, deliveryControl.creativeBlockingLevel) &&
        Objects.equals(this.deliveryRateType, deliveryControl.deliveryRateType) &&
        Objects.equals(this.frequencyCaps, deliveryControl.frequencyCaps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creativeBlockingLevel, deliveryRateType, frequencyCaps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeliveryControl {\n");
    sb.append("    creativeBlockingLevel: ").append(toIndentedString(creativeBlockingLevel)).append("\n");
    sb.append("    deliveryRateType: ").append(toIndentedString(deliveryRateType)).append("\n");
    sb.append("    frequencyCaps: ").append(toIndentedString(frequencyCaps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("creativeBlockingLevel");
    openapiFields.add("deliveryRateType");
    openapiFields.add("frequencyCaps");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeliveryControl
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeliveryControl.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeliveryControl is not found in the empty JSON string", DeliveryControl.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeliveryControl.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeliveryControl` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("creativeBlockingLevel") != null && !jsonObj.get("creativeBlockingLevel").isJsonNull()) && !jsonObj.get("creativeBlockingLevel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creativeBlockingLevel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creativeBlockingLevel").toString()));
      }
      if ((jsonObj.get("deliveryRateType") != null && !jsonObj.get("deliveryRateType").isJsonNull()) && !jsonObj.get("deliveryRateType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryRateType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryRateType").toString()));
      }
      if (jsonObj.get("frequencyCaps") != null && !jsonObj.get("frequencyCaps").isJsonNull()) {
        JsonArray jsonArrayfrequencyCaps = jsonObj.getAsJsonArray("frequencyCaps");
        if (jsonArrayfrequencyCaps != null) {
          // ensure the json data is an array
          if (!jsonObj.get("frequencyCaps").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `frequencyCaps` to be an array in the JSON string but got `%s`", jsonObj.get("frequencyCaps").toString()));
          }

          // validate the optional field `frequencyCaps` (array)
          for (int i = 0; i < jsonArrayfrequencyCaps.size(); i++) {
            DeliveryControlFrequencyCap.validateJsonElement(jsonArrayfrequencyCaps.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeliveryControl.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeliveryControl' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeliveryControl> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeliveryControl.class));

       return (TypeAdapter<T>) new TypeAdapter<DeliveryControl>() {
           @Override
           public void write(JsonWriter out, DeliveryControl value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeliveryControl read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeliveryControl given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeliveryControl
   * @throws IOException if the JSON string is invalid with respect to DeliveryControl
   */
  public static DeliveryControl fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeliveryControl.class);
  }

  /**
   * Convert an instance of DeliveryControl to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

