/*
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ContactInformation;
import org.openapitools.client.model.DealServingMetadata;
import org.openapitools.client.model.DealTerms;
import org.openapitools.client.model.DeliveryControl;
import org.openapitools.client.model.PrivateData;
import org.openapitools.client.model.SharedTargeting;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A proposal can contain multiple deals. A deal contains the terms and targeting information that is used for serving.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:44.175931-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MarketplaceDeal {
  public static final String SERIALIZED_NAME_BUYER_PRIVATE_DATA = "buyerPrivateData";
  @SerializedName(SERIALIZED_NAME_BUYER_PRIVATE_DATA)
  private PrivateData buyerPrivateData;

  public static final String SERIALIZED_NAME_CREATION_TIME_MS = "creationTimeMs";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME_MS)
  private String creationTimeMs;

  public static final String SERIALIZED_NAME_CREATIVE_PRE_APPROVAL_POLICY = "creativePreApprovalPolicy";
  @SerializedName(SERIALIZED_NAME_CREATIVE_PRE_APPROVAL_POLICY)
  private String creativePreApprovalPolicy;

  public static final String SERIALIZED_NAME_CREATIVE_SAFE_FRAME_COMPATIBILITY = "creativeSafeFrameCompatibility";
  @SerializedName(SERIALIZED_NAME_CREATIVE_SAFE_FRAME_COMPATIBILITY)
  private String creativeSafeFrameCompatibility;

  public static final String SERIALIZED_NAME_DEAL_ID = "dealId";
  @SerializedName(SERIALIZED_NAME_DEAL_ID)
  private String dealId;

  public static final String SERIALIZED_NAME_DEAL_SERVING_METADATA = "dealServingMetadata";
  @SerializedName(SERIALIZED_NAME_DEAL_SERVING_METADATA)
  private DealServingMetadata dealServingMetadata;

  public static final String SERIALIZED_NAME_DELIVERY_CONTROL = "deliveryControl";
  @SerializedName(SERIALIZED_NAME_DELIVERY_CONTROL)
  private DeliveryControl deliveryControl;

  public static final String SERIALIZED_NAME_EXTERNAL_DEAL_ID = "externalDealId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_DEAL_ID)
  private String externalDealId;

  public static final String SERIALIZED_NAME_FLIGHT_END_TIME_MS = "flightEndTimeMs";
  @SerializedName(SERIALIZED_NAME_FLIGHT_END_TIME_MS)
  private String flightEndTimeMs;

  public static final String SERIALIZED_NAME_FLIGHT_START_TIME_MS = "flightStartTimeMs";
  @SerializedName(SERIALIZED_NAME_FLIGHT_START_TIME_MS)
  private String flightStartTimeMs;

  public static final String SERIALIZED_NAME_INVENTORY_DESCRIPTION = "inventoryDescription";
  @SerializedName(SERIALIZED_NAME_INVENTORY_DESCRIPTION)
  private String inventoryDescription;

  public static final String SERIALIZED_NAME_IS_RFP_TEMPLATE = "isRfpTemplate";
  @SerializedName(SERIALIZED_NAME_IS_RFP_TEMPLATE)
  private Boolean isRfpTemplate;

  public static final String SERIALIZED_NAME_IS_SETUP_COMPLETE = "isSetupComplete";
  @SerializedName(SERIALIZED_NAME_IS_SETUP_COMPLETE)
  private Boolean isSetupComplete;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind = "adexchangebuyer#marketplaceDeal";

  public static final String SERIALIZED_NAME_LAST_UPDATE_TIME_MS = "lastUpdateTimeMs";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_TIME_MS)
  private String lastUpdateTimeMs;

  public static final String SERIALIZED_NAME_MAKEGOOD_REQUESTED_REASON = "makegoodRequestedReason";
  @SerializedName(SERIALIZED_NAME_MAKEGOOD_REQUESTED_REASON)
  private String makegoodRequestedReason;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "productId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_PRODUCT_REVISION_NUMBER = "productRevisionNumber";
  @SerializedName(SERIALIZED_NAME_PRODUCT_REVISION_NUMBER)
  private String productRevisionNumber;

  public static final String SERIALIZED_NAME_PROGRAMMATIC_CREATIVE_SOURCE = "programmaticCreativeSource";
  @SerializedName(SERIALIZED_NAME_PROGRAMMATIC_CREATIVE_SOURCE)
  private String programmaticCreativeSource;

  public static final String SERIALIZED_NAME_PROPOSAL_ID = "proposalId";
  @SerializedName(SERIALIZED_NAME_PROPOSAL_ID)
  private String proposalId;

  public static final String SERIALIZED_NAME_SELLER_CONTACTS = "sellerContacts";
  @SerializedName(SERIALIZED_NAME_SELLER_CONTACTS)
  private List<ContactInformation> sellerContacts = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHARED_TARGETINGS = "sharedTargetings";
  @SerializedName(SERIALIZED_NAME_SHARED_TARGETINGS)
  private List<SharedTargeting> sharedTargetings = new ArrayList<>();

  public static final String SERIALIZED_NAME_SYNDICATION_PRODUCT = "syndicationProduct";
  @SerializedName(SERIALIZED_NAME_SYNDICATION_PRODUCT)
  private String syndicationProduct;

  public static final String SERIALIZED_NAME_TERMS = "terms";
  @SerializedName(SERIALIZED_NAME_TERMS)
  private DealTerms terms;

  public static final String SERIALIZED_NAME_WEB_PROPERTY_CODE = "webPropertyCode";
  @SerializedName(SERIALIZED_NAME_WEB_PROPERTY_CODE)
  private String webPropertyCode;

  public MarketplaceDeal() {
  }

  public MarketplaceDeal buyerPrivateData(PrivateData buyerPrivateData) {
    this.buyerPrivateData = buyerPrivateData;
    return this;
  }

  /**
   * Get buyerPrivateData
   * @return buyerPrivateData
   */
  @javax.annotation.Nullable
  public PrivateData getBuyerPrivateData() {
    return buyerPrivateData;
  }

  public void setBuyerPrivateData(PrivateData buyerPrivateData) {
    this.buyerPrivateData = buyerPrivateData;
  }


  public MarketplaceDeal creationTimeMs(String creationTimeMs) {
    this.creationTimeMs = creationTimeMs;
    return this;
  }

  /**
   * The time (ms since epoch) of the deal creation. (readonly)
   * @return creationTimeMs
   */
  @javax.annotation.Nullable
  public String getCreationTimeMs() {
    return creationTimeMs;
  }

  public void setCreationTimeMs(String creationTimeMs) {
    this.creationTimeMs = creationTimeMs;
  }


  public MarketplaceDeal creativePreApprovalPolicy(String creativePreApprovalPolicy) {
    this.creativePreApprovalPolicy = creativePreApprovalPolicy;
    return this;
  }

  /**
   * Specifies the creative pre-approval policy (buyer-readonly)
   * @return creativePreApprovalPolicy
   */
  @javax.annotation.Nullable
  public String getCreativePreApprovalPolicy() {
    return creativePreApprovalPolicy;
  }

  public void setCreativePreApprovalPolicy(String creativePreApprovalPolicy) {
    this.creativePreApprovalPolicy = creativePreApprovalPolicy;
  }


  public MarketplaceDeal creativeSafeFrameCompatibility(String creativeSafeFrameCompatibility) {
    this.creativeSafeFrameCompatibility = creativeSafeFrameCompatibility;
    return this;
  }

  /**
   * Specifies whether the creative is safeFrame compatible (buyer-readonly)
   * @return creativeSafeFrameCompatibility
   */
  @javax.annotation.Nullable
  public String getCreativeSafeFrameCompatibility() {
    return creativeSafeFrameCompatibility;
  }

  public void setCreativeSafeFrameCompatibility(String creativeSafeFrameCompatibility) {
    this.creativeSafeFrameCompatibility = creativeSafeFrameCompatibility;
  }


  public MarketplaceDeal dealId(String dealId) {
    this.dealId = dealId;
    return this;
  }

  /**
   * A unique deal-id for the deal (readonly).
   * @return dealId
   */
  @javax.annotation.Nullable
  public String getDealId() {
    return dealId;
  }

  public void setDealId(String dealId) {
    this.dealId = dealId;
  }


  public MarketplaceDeal dealServingMetadata(DealServingMetadata dealServingMetadata) {
    this.dealServingMetadata = dealServingMetadata;
    return this;
  }

  /**
   * Get dealServingMetadata
   * @return dealServingMetadata
   */
  @javax.annotation.Nullable
  public DealServingMetadata getDealServingMetadata() {
    return dealServingMetadata;
  }

  public void setDealServingMetadata(DealServingMetadata dealServingMetadata) {
    this.dealServingMetadata = dealServingMetadata;
  }


  public MarketplaceDeal deliveryControl(DeliveryControl deliveryControl) {
    this.deliveryControl = deliveryControl;
    return this;
  }

  /**
   * Get deliveryControl
   * @return deliveryControl
   */
  @javax.annotation.Nullable
  public DeliveryControl getDeliveryControl() {
    return deliveryControl;
  }

  public void setDeliveryControl(DeliveryControl deliveryControl) {
    this.deliveryControl = deliveryControl;
  }


  public MarketplaceDeal externalDealId(String externalDealId) {
    this.externalDealId = externalDealId;
    return this;
  }

  /**
   * The external deal id assigned to this deal once the deal is finalized. This is the deal-id that shows up in serving/reporting etc. (readonly)
   * @return externalDealId
   */
  @javax.annotation.Nullable
  public String getExternalDealId() {
    return externalDealId;
  }

  public void setExternalDealId(String externalDealId) {
    this.externalDealId = externalDealId;
  }


  public MarketplaceDeal flightEndTimeMs(String flightEndTimeMs) {
    this.flightEndTimeMs = flightEndTimeMs;
    return this;
  }

  /**
   * Proposed flight end time of the deal (ms since epoch) This will generally be stored in a granularity of a second. (updatable)
   * @return flightEndTimeMs
   */
  @javax.annotation.Nullable
  public String getFlightEndTimeMs() {
    return flightEndTimeMs;
  }

  public void setFlightEndTimeMs(String flightEndTimeMs) {
    this.flightEndTimeMs = flightEndTimeMs;
  }


  public MarketplaceDeal flightStartTimeMs(String flightStartTimeMs) {
    this.flightStartTimeMs = flightStartTimeMs;
    return this;
  }

  /**
   * Proposed flight start time of the deal (ms since epoch) This will generally be stored in a granularity of a second. (updatable)
   * @return flightStartTimeMs
   */
  @javax.annotation.Nullable
  public String getFlightStartTimeMs() {
    return flightStartTimeMs;
  }

  public void setFlightStartTimeMs(String flightStartTimeMs) {
    this.flightStartTimeMs = flightStartTimeMs;
  }


  public MarketplaceDeal inventoryDescription(String inventoryDescription) {
    this.inventoryDescription = inventoryDescription;
    return this;
  }

  /**
   * Description for the deal terms. (buyer-readonly)
   * @return inventoryDescription
   */
  @javax.annotation.Nullable
  public String getInventoryDescription() {
    return inventoryDescription;
  }

  public void setInventoryDescription(String inventoryDescription) {
    this.inventoryDescription = inventoryDescription;
  }


  public MarketplaceDeal isRfpTemplate(Boolean isRfpTemplate) {
    this.isRfpTemplate = isRfpTemplate;
    return this;
  }

  /**
   * Indicates whether the current deal is a RFP template. RFP template is created by buyer and not based on seller created products.
   * @return isRfpTemplate
   */
  @javax.annotation.Nullable
  public Boolean getIsRfpTemplate() {
    return isRfpTemplate;
  }

  public void setIsRfpTemplate(Boolean isRfpTemplate) {
    this.isRfpTemplate = isRfpTemplate;
  }


  public MarketplaceDeal isSetupComplete(Boolean isSetupComplete) {
    this.isSetupComplete = isSetupComplete;
    return this;
  }

  /**
   * True, if the buyside inventory setup is complete for this deal. (readonly, except via OrderSetupCompleted action)
   * @return isSetupComplete
   */
  @javax.annotation.Nullable
  public Boolean getIsSetupComplete() {
    return isSetupComplete;
  }

  public void setIsSetupComplete(Boolean isSetupComplete) {
    this.isSetupComplete = isSetupComplete;
  }


  public MarketplaceDeal kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;adexchangebuyer#marketplaceDeal\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public MarketplaceDeal lastUpdateTimeMs(String lastUpdateTimeMs) {
    this.lastUpdateTimeMs = lastUpdateTimeMs;
    return this;
  }

  /**
   * The time (ms since epoch) when the deal was last updated. (readonly)
   * @return lastUpdateTimeMs
   */
  @javax.annotation.Nullable
  public String getLastUpdateTimeMs() {
    return lastUpdateTimeMs;
  }

  public void setLastUpdateTimeMs(String lastUpdateTimeMs) {
    this.lastUpdateTimeMs = lastUpdateTimeMs;
  }


  public MarketplaceDeal makegoodRequestedReason(String makegoodRequestedReason) {
    this.makegoodRequestedReason = makegoodRequestedReason;
    return this;
  }

  /**
   * Get makegoodRequestedReason
   * @return makegoodRequestedReason
   */
  @javax.annotation.Nullable
  public String getMakegoodRequestedReason() {
    return makegoodRequestedReason;
  }

  public void setMakegoodRequestedReason(String makegoodRequestedReason) {
    this.makegoodRequestedReason = makegoodRequestedReason;
  }


  public MarketplaceDeal name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the deal. (updatable)
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public MarketplaceDeal productId(String productId) {
    this.productId = productId;
    return this;
  }

  /**
   * The product-id from which this deal was created. (readonly, except on create)
   * @return productId
   */
  @javax.annotation.Nullable
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }


  public MarketplaceDeal productRevisionNumber(String productRevisionNumber) {
    this.productRevisionNumber = productRevisionNumber;
    return this;
  }

  /**
   * The revision number of the product that the deal was created from (readonly, except on create)
   * @return productRevisionNumber
   */
  @javax.annotation.Nullable
  public String getProductRevisionNumber() {
    return productRevisionNumber;
  }

  public void setProductRevisionNumber(String productRevisionNumber) {
    this.productRevisionNumber = productRevisionNumber;
  }


  public MarketplaceDeal programmaticCreativeSource(String programmaticCreativeSource) {
    this.programmaticCreativeSource = programmaticCreativeSource;
    return this;
  }

  /**
   * Specifies the creative source for programmatic deals, PUBLISHER means creative is provided by seller and ADVERTISR means creative is provided by buyer. (buyer-readonly)
   * @return programmaticCreativeSource
   */
  @javax.annotation.Nullable
  public String getProgrammaticCreativeSource() {
    return programmaticCreativeSource;
  }

  public void setProgrammaticCreativeSource(String programmaticCreativeSource) {
    this.programmaticCreativeSource = programmaticCreativeSource;
  }


  public MarketplaceDeal proposalId(String proposalId) {
    this.proposalId = proposalId;
    return this;
  }

  /**
   * Get proposalId
   * @return proposalId
   */
  @javax.annotation.Nullable
  public String getProposalId() {
    return proposalId;
  }

  public void setProposalId(String proposalId) {
    this.proposalId = proposalId;
  }


  public MarketplaceDeal sellerContacts(List<ContactInformation> sellerContacts) {
    this.sellerContacts = sellerContacts;
    return this;
  }

  public MarketplaceDeal addSellerContactsItem(ContactInformation sellerContactsItem) {
    if (this.sellerContacts == null) {
      this.sellerContacts = new ArrayList<>();
    }
    this.sellerContacts.add(sellerContactsItem);
    return this;
  }

  /**
   * Optional Seller contact information for the deal (buyer-readonly)
   * @return sellerContacts
   */
  @javax.annotation.Nullable
  public List<ContactInformation> getSellerContacts() {
    return sellerContacts;
  }

  public void setSellerContacts(List<ContactInformation> sellerContacts) {
    this.sellerContacts = sellerContacts;
  }


  public MarketplaceDeal sharedTargetings(List<SharedTargeting> sharedTargetings) {
    this.sharedTargetings = sharedTargetings;
    return this;
  }

  public MarketplaceDeal addSharedTargetingsItem(SharedTargeting sharedTargetingsItem) {
    if (this.sharedTargetings == null) {
      this.sharedTargetings = new ArrayList<>();
    }
    this.sharedTargetings.add(sharedTargetingsItem);
    return this;
  }

  /**
   * The shared targeting visible to buyers and sellers. Each shared targeting entity is AND&#39;d together. (updatable)
   * @return sharedTargetings
   */
  @javax.annotation.Nullable
  public List<SharedTargeting> getSharedTargetings() {
    return sharedTargetings;
  }

  public void setSharedTargetings(List<SharedTargeting> sharedTargetings) {
    this.sharedTargetings = sharedTargetings;
  }


  public MarketplaceDeal syndicationProduct(String syndicationProduct) {
    this.syndicationProduct = syndicationProduct;
    return this;
  }

  /**
   * The syndication product associated with the deal. (readonly, except on create)
   * @return syndicationProduct
   */
  @javax.annotation.Nullable
  public String getSyndicationProduct() {
    return syndicationProduct;
  }

  public void setSyndicationProduct(String syndicationProduct) {
    this.syndicationProduct = syndicationProduct;
  }


  public MarketplaceDeal terms(DealTerms terms) {
    this.terms = terms;
    return this;
  }

  /**
   * Get terms
   * @return terms
   */
  @javax.annotation.Nullable
  public DealTerms getTerms() {
    return terms;
  }

  public void setTerms(DealTerms terms) {
    this.terms = terms;
  }


  public MarketplaceDeal webPropertyCode(String webPropertyCode) {
    this.webPropertyCode = webPropertyCode;
    return this;
  }

  /**
   * Get webPropertyCode
   * @return webPropertyCode
   */
  @javax.annotation.Nullable
  public String getWebPropertyCode() {
    return webPropertyCode;
  }

  public void setWebPropertyCode(String webPropertyCode) {
    this.webPropertyCode = webPropertyCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarketplaceDeal marketplaceDeal = (MarketplaceDeal) o;
    return Objects.equals(this.buyerPrivateData, marketplaceDeal.buyerPrivateData) &&
        Objects.equals(this.creationTimeMs, marketplaceDeal.creationTimeMs) &&
        Objects.equals(this.creativePreApprovalPolicy, marketplaceDeal.creativePreApprovalPolicy) &&
        Objects.equals(this.creativeSafeFrameCompatibility, marketplaceDeal.creativeSafeFrameCompatibility) &&
        Objects.equals(this.dealId, marketplaceDeal.dealId) &&
        Objects.equals(this.dealServingMetadata, marketplaceDeal.dealServingMetadata) &&
        Objects.equals(this.deliveryControl, marketplaceDeal.deliveryControl) &&
        Objects.equals(this.externalDealId, marketplaceDeal.externalDealId) &&
        Objects.equals(this.flightEndTimeMs, marketplaceDeal.flightEndTimeMs) &&
        Objects.equals(this.flightStartTimeMs, marketplaceDeal.flightStartTimeMs) &&
        Objects.equals(this.inventoryDescription, marketplaceDeal.inventoryDescription) &&
        Objects.equals(this.isRfpTemplate, marketplaceDeal.isRfpTemplate) &&
        Objects.equals(this.isSetupComplete, marketplaceDeal.isSetupComplete) &&
        Objects.equals(this.kind, marketplaceDeal.kind) &&
        Objects.equals(this.lastUpdateTimeMs, marketplaceDeal.lastUpdateTimeMs) &&
        Objects.equals(this.makegoodRequestedReason, marketplaceDeal.makegoodRequestedReason) &&
        Objects.equals(this.name, marketplaceDeal.name) &&
        Objects.equals(this.productId, marketplaceDeal.productId) &&
        Objects.equals(this.productRevisionNumber, marketplaceDeal.productRevisionNumber) &&
        Objects.equals(this.programmaticCreativeSource, marketplaceDeal.programmaticCreativeSource) &&
        Objects.equals(this.proposalId, marketplaceDeal.proposalId) &&
        Objects.equals(this.sellerContacts, marketplaceDeal.sellerContacts) &&
        Objects.equals(this.sharedTargetings, marketplaceDeal.sharedTargetings) &&
        Objects.equals(this.syndicationProduct, marketplaceDeal.syndicationProduct) &&
        Objects.equals(this.terms, marketplaceDeal.terms) &&
        Objects.equals(this.webPropertyCode, marketplaceDeal.webPropertyCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buyerPrivateData, creationTimeMs, creativePreApprovalPolicy, creativeSafeFrameCompatibility, dealId, dealServingMetadata, deliveryControl, externalDealId, flightEndTimeMs, flightStartTimeMs, inventoryDescription, isRfpTemplate, isSetupComplete, kind, lastUpdateTimeMs, makegoodRequestedReason, name, productId, productRevisionNumber, programmaticCreativeSource, proposalId, sellerContacts, sharedTargetings, syndicationProduct, terms, webPropertyCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarketplaceDeal {\n");
    sb.append("    buyerPrivateData: ").append(toIndentedString(buyerPrivateData)).append("\n");
    sb.append("    creationTimeMs: ").append(toIndentedString(creationTimeMs)).append("\n");
    sb.append("    creativePreApprovalPolicy: ").append(toIndentedString(creativePreApprovalPolicy)).append("\n");
    sb.append("    creativeSafeFrameCompatibility: ").append(toIndentedString(creativeSafeFrameCompatibility)).append("\n");
    sb.append("    dealId: ").append(toIndentedString(dealId)).append("\n");
    sb.append("    dealServingMetadata: ").append(toIndentedString(dealServingMetadata)).append("\n");
    sb.append("    deliveryControl: ").append(toIndentedString(deliveryControl)).append("\n");
    sb.append("    externalDealId: ").append(toIndentedString(externalDealId)).append("\n");
    sb.append("    flightEndTimeMs: ").append(toIndentedString(flightEndTimeMs)).append("\n");
    sb.append("    flightStartTimeMs: ").append(toIndentedString(flightStartTimeMs)).append("\n");
    sb.append("    inventoryDescription: ").append(toIndentedString(inventoryDescription)).append("\n");
    sb.append("    isRfpTemplate: ").append(toIndentedString(isRfpTemplate)).append("\n");
    sb.append("    isSetupComplete: ").append(toIndentedString(isSetupComplete)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    lastUpdateTimeMs: ").append(toIndentedString(lastUpdateTimeMs)).append("\n");
    sb.append("    makegoodRequestedReason: ").append(toIndentedString(makegoodRequestedReason)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productRevisionNumber: ").append(toIndentedString(productRevisionNumber)).append("\n");
    sb.append("    programmaticCreativeSource: ").append(toIndentedString(programmaticCreativeSource)).append("\n");
    sb.append("    proposalId: ").append(toIndentedString(proposalId)).append("\n");
    sb.append("    sellerContacts: ").append(toIndentedString(sellerContacts)).append("\n");
    sb.append("    sharedTargetings: ").append(toIndentedString(sharedTargetings)).append("\n");
    sb.append("    syndicationProduct: ").append(toIndentedString(syndicationProduct)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    webPropertyCode: ").append(toIndentedString(webPropertyCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("buyerPrivateData");
    openapiFields.add("creationTimeMs");
    openapiFields.add("creativePreApprovalPolicy");
    openapiFields.add("creativeSafeFrameCompatibility");
    openapiFields.add("dealId");
    openapiFields.add("dealServingMetadata");
    openapiFields.add("deliveryControl");
    openapiFields.add("externalDealId");
    openapiFields.add("flightEndTimeMs");
    openapiFields.add("flightStartTimeMs");
    openapiFields.add("inventoryDescription");
    openapiFields.add("isRfpTemplate");
    openapiFields.add("isSetupComplete");
    openapiFields.add("kind");
    openapiFields.add("lastUpdateTimeMs");
    openapiFields.add("makegoodRequestedReason");
    openapiFields.add("name");
    openapiFields.add("productId");
    openapiFields.add("productRevisionNumber");
    openapiFields.add("programmaticCreativeSource");
    openapiFields.add("proposalId");
    openapiFields.add("sellerContacts");
    openapiFields.add("sharedTargetings");
    openapiFields.add("syndicationProduct");
    openapiFields.add("terms");
    openapiFields.add("webPropertyCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MarketplaceDeal
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MarketplaceDeal.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MarketplaceDeal is not found in the empty JSON string", MarketplaceDeal.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MarketplaceDeal.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MarketplaceDeal` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `buyerPrivateData`
      if (jsonObj.get("buyerPrivateData") != null && !jsonObj.get("buyerPrivateData").isJsonNull()) {
        PrivateData.validateJsonElement(jsonObj.get("buyerPrivateData"));
      }
      if ((jsonObj.get("creationTimeMs") != null && !jsonObj.get("creationTimeMs").isJsonNull()) && !jsonObj.get("creationTimeMs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creationTimeMs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creationTimeMs").toString()));
      }
      if ((jsonObj.get("creativePreApprovalPolicy") != null && !jsonObj.get("creativePreApprovalPolicy").isJsonNull()) && !jsonObj.get("creativePreApprovalPolicy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creativePreApprovalPolicy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creativePreApprovalPolicy").toString()));
      }
      if ((jsonObj.get("creativeSafeFrameCompatibility") != null && !jsonObj.get("creativeSafeFrameCompatibility").isJsonNull()) && !jsonObj.get("creativeSafeFrameCompatibility").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creativeSafeFrameCompatibility` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creativeSafeFrameCompatibility").toString()));
      }
      if ((jsonObj.get("dealId") != null && !jsonObj.get("dealId").isJsonNull()) && !jsonObj.get("dealId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dealId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dealId").toString()));
      }
      // validate the optional field `dealServingMetadata`
      if (jsonObj.get("dealServingMetadata") != null && !jsonObj.get("dealServingMetadata").isJsonNull()) {
        DealServingMetadata.validateJsonElement(jsonObj.get("dealServingMetadata"));
      }
      // validate the optional field `deliveryControl`
      if (jsonObj.get("deliveryControl") != null && !jsonObj.get("deliveryControl").isJsonNull()) {
        DeliveryControl.validateJsonElement(jsonObj.get("deliveryControl"));
      }
      if ((jsonObj.get("externalDealId") != null && !jsonObj.get("externalDealId").isJsonNull()) && !jsonObj.get("externalDealId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalDealId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalDealId").toString()));
      }
      if ((jsonObj.get("flightEndTimeMs") != null && !jsonObj.get("flightEndTimeMs").isJsonNull()) && !jsonObj.get("flightEndTimeMs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flightEndTimeMs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flightEndTimeMs").toString()));
      }
      if ((jsonObj.get("flightStartTimeMs") != null && !jsonObj.get("flightStartTimeMs").isJsonNull()) && !jsonObj.get("flightStartTimeMs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flightStartTimeMs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flightStartTimeMs").toString()));
      }
      if ((jsonObj.get("inventoryDescription") != null && !jsonObj.get("inventoryDescription").isJsonNull()) && !jsonObj.get("inventoryDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inventoryDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inventoryDescription").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      if ((jsonObj.get("lastUpdateTimeMs") != null && !jsonObj.get("lastUpdateTimeMs").isJsonNull()) && !jsonObj.get("lastUpdateTimeMs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUpdateTimeMs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUpdateTimeMs").toString()));
      }
      if ((jsonObj.get("makegoodRequestedReason") != null && !jsonObj.get("makegoodRequestedReason").isJsonNull()) && !jsonObj.get("makegoodRequestedReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `makegoodRequestedReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("makegoodRequestedReason").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("productId") != null && !jsonObj.get("productId").isJsonNull()) && !jsonObj.get("productId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productId").toString()));
      }
      if ((jsonObj.get("productRevisionNumber") != null && !jsonObj.get("productRevisionNumber").isJsonNull()) && !jsonObj.get("productRevisionNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productRevisionNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productRevisionNumber").toString()));
      }
      if ((jsonObj.get("programmaticCreativeSource") != null && !jsonObj.get("programmaticCreativeSource").isJsonNull()) && !jsonObj.get("programmaticCreativeSource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `programmaticCreativeSource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("programmaticCreativeSource").toString()));
      }
      if ((jsonObj.get("proposalId") != null && !jsonObj.get("proposalId").isJsonNull()) && !jsonObj.get("proposalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proposalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proposalId").toString()));
      }
      if (jsonObj.get("sellerContacts") != null && !jsonObj.get("sellerContacts").isJsonNull()) {
        JsonArray jsonArraysellerContacts = jsonObj.getAsJsonArray("sellerContacts");
        if (jsonArraysellerContacts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sellerContacts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sellerContacts` to be an array in the JSON string but got `%s`", jsonObj.get("sellerContacts").toString()));
          }

          // validate the optional field `sellerContacts` (array)
          for (int i = 0; i < jsonArraysellerContacts.size(); i++) {
            ContactInformation.validateJsonElement(jsonArraysellerContacts.get(i));
          };
        }
      }
      if (jsonObj.get("sharedTargetings") != null && !jsonObj.get("sharedTargetings").isJsonNull()) {
        JsonArray jsonArraysharedTargetings = jsonObj.getAsJsonArray("sharedTargetings");
        if (jsonArraysharedTargetings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sharedTargetings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sharedTargetings` to be an array in the JSON string but got `%s`", jsonObj.get("sharedTargetings").toString()));
          }

          // validate the optional field `sharedTargetings` (array)
          for (int i = 0; i < jsonArraysharedTargetings.size(); i++) {
            SharedTargeting.validateJsonElement(jsonArraysharedTargetings.get(i));
          };
        }
      }
      if ((jsonObj.get("syndicationProduct") != null && !jsonObj.get("syndicationProduct").isJsonNull()) && !jsonObj.get("syndicationProduct").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `syndicationProduct` to be a primitive type in the JSON string but got `%s`", jsonObj.get("syndicationProduct").toString()));
      }
      // validate the optional field `terms`
      if (jsonObj.get("terms") != null && !jsonObj.get("terms").isJsonNull()) {
        DealTerms.validateJsonElement(jsonObj.get("terms"));
      }
      if ((jsonObj.get("webPropertyCode") != null && !jsonObj.get("webPropertyCode").isJsonNull()) && !jsonObj.get("webPropertyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webPropertyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webPropertyCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MarketplaceDeal.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MarketplaceDeal' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MarketplaceDeal> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MarketplaceDeal.class));

       return (TypeAdapter<T>) new TypeAdapter<MarketplaceDeal>() {
           @Override
           public void write(JsonWriter out, MarketplaceDeal value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MarketplaceDeal read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MarketplaceDeal given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MarketplaceDeal
   * @throws IOException if the JSON string is invalid with respect to MarketplaceDeal
   */
  public static MarketplaceDeal fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MarketplaceDeal.class);
  }

  /**
   * Convert an instance of MarketplaceDeal to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

