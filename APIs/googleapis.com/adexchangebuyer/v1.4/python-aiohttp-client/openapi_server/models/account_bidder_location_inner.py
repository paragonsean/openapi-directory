# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountBidderLocationInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bid_protocol: str=None, maximum_qps: int=None, region: str=None, url: str=None):
        """AccountBidderLocationInner - a model defined in OpenAPI

        :param bid_protocol: The bid_protocol of this AccountBidderLocationInner.
        :param maximum_qps: The maximum_qps of this AccountBidderLocationInner.
        :param region: The region of this AccountBidderLocationInner.
        :param url: The url of this AccountBidderLocationInner.
        """
        self.openapi_types = {
            'bid_protocol': str,
            'maximum_qps': int,
            'region': str,
            'url': str
        }

        self.attribute_map = {
            'bid_protocol': 'bidProtocol',
            'maximum_qps': 'maximumQps',
            'region': 'region',
            'url': 'url'
        }

        self._bid_protocol = bid_protocol
        self._maximum_qps = maximum_qps
        self._region = region
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountBidderLocationInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Account_bidderLocation_inner of this AccountBidderLocationInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bid_protocol(self):
        """Gets the bid_protocol of this AccountBidderLocationInner.

        The protocol that the bidder endpoint is using. OpenRTB protocols with prefix PROTOCOL_OPENRTB_PROTOBUF use proto buffer, otherwise use JSON.  Allowed values:   - PROTOCOL_ADX  - PROTOCOL_OPENRTB_2_2  - PROTOCOL_OPENRTB_2_3  - PROTOCOL_OPENRTB_2_4  - PROTOCOL_OPENRTB_2_5  - PROTOCOL_OPENRTB_PROTOBUF_2_3  - PROTOCOL_OPENRTB_PROTOBUF_2_4  - PROTOCOL_OPENRTB_PROTOBUF_2_5

        :return: The bid_protocol of this AccountBidderLocationInner.
        :rtype: str
        """
        return self._bid_protocol

    @bid_protocol.setter
    def bid_protocol(self, bid_protocol):
        """Sets the bid_protocol of this AccountBidderLocationInner.

        The protocol that the bidder endpoint is using. OpenRTB protocols with prefix PROTOCOL_OPENRTB_PROTOBUF use proto buffer, otherwise use JSON.  Allowed values:   - PROTOCOL_ADX  - PROTOCOL_OPENRTB_2_2  - PROTOCOL_OPENRTB_2_3  - PROTOCOL_OPENRTB_2_4  - PROTOCOL_OPENRTB_2_5  - PROTOCOL_OPENRTB_PROTOBUF_2_3  - PROTOCOL_OPENRTB_PROTOBUF_2_4  - PROTOCOL_OPENRTB_PROTOBUF_2_5

        :param bid_protocol: The bid_protocol of this AccountBidderLocationInner.
        :type bid_protocol: str
        """

        self._bid_protocol = bid_protocol

    @property
    def maximum_qps(self):
        """Gets the maximum_qps of this AccountBidderLocationInner.

        The maximum queries per second the Ad Exchange will send.

        :return: The maximum_qps of this AccountBidderLocationInner.
        :rtype: int
        """
        return self._maximum_qps

    @maximum_qps.setter
    def maximum_qps(self, maximum_qps):
        """Sets the maximum_qps of this AccountBidderLocationInner.

        The maximum queries per second the Ad Exchange will send.

        :param maximum_qps: The maximum_qps of this AccountBidderLocationInner.
        :type maximum_qps: int
        """

        self._maximum_qps = maximum_qps

    @property
    def region(self):
        """Gets the region of this AccountBidderLocationInner.

        The geographical region the Ad Exchange should send requests from. Only used by some quota systems, but always setting the value is recommended. Allowed values:   - ASIA  - EUROPE  - US_EAST  - US_WEST

        :return: The region of this AccountBidderLocationInner.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this AccountBidderLocationInner.

        The geographical region the Ad Exchange should send requests from. Only used by some quota systems, but always setting the value is recommended. Allowed values:   - ASIA  - EUROPE  - US_EAST  - US_WEST

        :param region: The region of this AccountBidderLocationInner.
        :type region: str
        """

        self._region = region

    @property
    def url(self):
        """Gets the url of this AccountBidderLocationInner.

        The URL to which the Ad Exchange will send bid requests.

        :return: The url of this AccountBidderLocationInner.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this AccountBidderLocationInner.

        The URL to which the Ad Exchange will send bid requests.

        :param url: The url of this AccountBidderLocationInner.
        :type url: str
        """

        self._url = url
