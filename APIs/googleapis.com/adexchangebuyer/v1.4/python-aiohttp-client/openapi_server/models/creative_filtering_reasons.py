# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.creative_filtering_reasons_reasons_inner import CreativeFilteringReasonsReasonsInner
from openapi_server import util


class CreativeFilteringReasons(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: str=None, reasons: List[CreativeFilteringReasonsReasonsInner]=None):
        """CreativeFilteringReasons - a model defined in OpenAPI

        :param _date: The _date of this CreativeFilteringReasons.
        :param reasons: The reasons of this CreativeFilteringReasons.
        """
        self.openapi_types = {
            '_date': str,
            'reasons': List[CreativeFilteringReasonsReasonsInner]
        }

        self.attribute_map = {
            '_date': 'date',
            'reasons': 'reasons'
        }

        self.__date = _date
        self._reasons = reasons

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreativeFilteringReasons':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Creative_filteringReasons of this CreativeFilteringReasons.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this CreativeFilteringReasons.

        The date in ISO 8601 format for the data. The data is collected from 00:00:00 to 23:59:59 in PST.

        :return: The _date of this CreativeFilteringReasons.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this CreativeFilteringReasons.

        The date in ISO 8601 format for the data. The data is collected from 00:00:00 to 23:59:59 in PST.

        :param _date: The _date of this CreativeFilteringReasons.
        :type _date: str
        """

        self.__date = _date

    @property
    def reasons(self):
        """Gets the reasons of this CreativeFilteringReasons.

        The filtering reasons.

        :return: The reasons of this CreativeFilteringReasons.
        :rtype: List[CreativeFilteringReasonsReasonsInner]
        """
        return self._reasons

    @reasons.setter
    def reasons(self, reasons):
        """Sets the reasons of this CreativeFilteringReasons.

        The filtering reasons.

        :param reasons: The reasons of this CreativeFilteringReasons.
        :type reasons: List[CreativeFilteringReasonsReasonsInner]
        """

        self._reasons = reasons
