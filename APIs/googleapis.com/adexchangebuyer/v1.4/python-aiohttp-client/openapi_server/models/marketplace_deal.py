# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_information import ContactInformation
from openapi_server.models.deal_serving_metadata import DealServingMetadata
from openapi_server.models.deal_terms import DealTerms
from openapi_server.models.delivery_control import DeliveryControl
from openapi_server.models.private_data import PrivateData
from openapi_server.models.shared_targeting import SharedTargeting
from openapi_server import util


class MarketplaceDeal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buyer_private_data: PrivateData=None, creation_time_ms: str=None, creative_pre_approval_policy: str=None, creative_safe_frame_compatibility: str=None, deal_id: str=None, deal_serving_metadata: DealServingMetadata=None, delivery_control: DeliveryControl=None, external_deal_id: str=None, flight_end_time_ms: str=None, flight_start_time_ms: str=None, inventory_description: str=None, is_rfp_template: bool=None, is_setup_complete: bool=None, kind: str='adexchangebuyer#marketplaceDeal', last_update_time_ms: str=None, makegood_requested_reason: str=None, name: str=None, product_id: str=None, product_revision_number: str=None, programmatic_creative_source: str=None, proposal_id: str=None, seller_contacts: List[ContactInformation]=None, shared_targetings: List[SharedTargeting]=None, syndication_product: str=None, terms: DealTerms=None, web_property_code: str=None):
        """MarketplaceDeal - a model defined in OpenAPI

        :param buyer_private_data: The buyer_private_data of this MarketplaceDeal.
        :param creation_time_ms: The creation_time_ms of this MarketplaceDeal.
        :param creative_pre_approval_policy: The creative_pre_approval_policy of this MarketplaceDeal.
        :param creative_safe_frame_compatibility: The creative_safe_frame_compatibility of this MarketplaceDeal.
        :param deal_id: The deal_id of this MarketplaceDeal.
        :param deal_serving_metadata: The deal_serving_metadata of this MarketplaceDeal.
        :param delivery_control: The delivery_control of this MarketplaceDeal.
        :param external_deal_id: The external_deal_id of this MarketplaceDeal.
        :param flight_end_time_ms: The flight_end_time_ms of this MarketplaceDeal.
        :param flight_start_time_ms: The flight_start_time_ms of this MarketplaceDeal.
        :param inventory_description: The inventory_description of this MarketplaceDeal.
        :param is_rfp_template: The is_rfp_template of this MarketplaceDeal.
        :param is_setup_complete: The is_setup_complete of this MarketplaceDeal.
        :param kind: The kind of this MarketplaceDeal.
        :param last_update_time_ms: The last_update_time_ms of this MarketplaceDeal.
        :param makegood_requested_reason: The makegood_requested_reason of this MarketplaceDeal.
        :param name: The name of this MarketplaceDeal.
        :param product_id: The product_id of this MarketplaceDeal.
        :param product_revision_number: The product_revision_number of this MarketplaceDeal.
        :param programmatic_creative_source: The programmatic_creative_source of this MarketplaceDeal.
        :param proposal_id: The proposal_id of this MarketplaceDeal.
        :param seller_contacts: The seller_contacts of this MarketplaceDeal.
        :param shared_targetings: The shared_targetings of this MarketplaceDeal.
        :param syndication_product: The syndication_product of this MarketplaceDeal.
        :param terms: The terms of this MarketplaceDeal.
        :param web_property_code: The web_property_code of this MarketplaceDeal.
        """
        self.openapi_types = {
            'buyer_private_data': PrivateData,
            'creation_time_ms': str,
            'creative_pre_approval_policy': str,
            'creative_safe_frame_compatibility': str,
            'deal_id': str,
            'deal_serving_metadata': DealServingMetadata,
            'delivery_control': DeliveryControl,
            'external_deal_id': str,
            'flight_end_time_ms': str,
            'flight_start_time_ms': str,
            'inventory_description': str,
            'is_rfp_template': bool,
            'is_setup_complete': bool,
            'kind': str,
            'last_update_time_ms': str,
            'makegood_requested_reason': str,
            'name': str,
            'product_id': str,
            'product_revision_number': str,
            'programmatic_creative_source': str,
            'proposal_id': str,
            'seller_contacts': List[ContactInformation],
            'shared_targetings': List[SharedTargeting],
            'syndication_product': str,
            'terms': DealTerms,
            'web_property_code': str
        }

        self.attribute_map = {
            'buyer_private_data': 'buyerPrivateData',
            'creation_time_ms': 'creationTimeMs',
            'creative_pre_approval_policy': 'creativePreApprovalPolicy',
            'creative_safe_frame_compatibility': 'creativeSafeFrameCompatibility',
            'deal_id': 'dealId',
            'deal_serving_metadata': 'dealServingMetadata',
            'delivery_control': 'deliveryControl',
            'external_deal_id': 'externalDealId',
            'flight_end_time_ms': 'flightEndTimeMs',
            'flight_start_time_ms': 'flightStartTimeMs',
            'inventory_description': 'inventoryDescription',
            'is_rfp_template': 'isRfpTemplate',
            'is_setup_complete': 'isSetupComplete',
            'kind': 'kind',
            'last_update_time_ms': 'lastUpdateTimeMs',
            'makegood_requested_reason': 'makegoodRequestedReason',
            'name': 'name',
            'product_id': 'productId',
            'product_revision_number': 'productRevisionNumber',
            'programmatic_creative_source': 'programmaticCreativeSource',
            'proposal_id': 'proposalId',
            'seller_contacts': 'sellerContacts',
            'shared_targetings': 'sharedTargetings',
            'syndication_product': 'syndicationProduct',
            'terms': 'terms',
            'web_property_code': 'webPropertyCode'
        }

        self._buyer_private_data = buyer_private_data
        self._creation_time_ms = creation_time_ms
        self._creative_pre_approval_policy = creative_pre_approval_policy
        self._creative_safe_frame_compatibility = creative_safe_frame_compatibility
        self._deal_id = deal_id
        self._deal_serving_metadata = deal_serving_metadata
        self._delivery_control = delivery_control
        self._external_deal_id = external_deal_id
        self._flight_end_time_ms = flight_end_time_ms
        self._flight_start_time_ms = flight_start_time_ms
        self._inventory_description = inventory_description
        self._is_rfp_template = is_rfp_template
        self._is_setup_complete = is_setup_complete
        self._kind = kind
        self._last_update_time_ms = last_update_time_ms
        self._makegood_requested_reason = makegood_requested_reason
        self._name = name
        self._product_id = product_id
        self._product_revision_number = product_revision_number
        self._programmatic_creative_source = programmatic_creative_source
        self._proposal_id = proposal_id
        self._seller_contacts = seller_contacts
        self._shared_targetings = shared_targetings
        self._syndication_product = syndication_product
        self._terms = terms
        self._web_property_code = web_property_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MarketplaceDeal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MarketplaceDeal of this MarketplaceDeal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buyer_private_data(self):
        """Gets the buyer_private_data of this MarketplaceDeal.


        :return: The buyer_private_data of this MarketplaceDeal.
        :rtype: PrivateData
        """
        return self._buyer_private_data

    @buyer_private_data.setter
    def buyer_private_data(self, buyer_private_data):
        """Sets the buyer_private_data of this MarketplaceDeal.


        :param buyer_private_data: The buyer_private_data of this MarketplaceDeal.
        :type buyer_private_data: PrivateData
        """

        self._buyer_private_data = buyer_private_data

    @property
    def creation_time_ms(self):
        """Gets the creation_time_ms of this MarketplaceDeal.

        The time (ms since epoch) of the deal creation. (readonly)

        :return: The creation_time_ms of this MarketplaceDeal.
        :rtype: str
        """
        return self._creation_time_ms

    @creation_time_ms.setter
    def creation_time_ms(self, creation_time_ms):
        """Sets the creation_time_ms of this MarketplaceDeal.

        The time (ms since epoch) of the deal creation. (readonly)

        :param creation_time_ms: The creation_time_ms of this MarketplaceDeal.
        :type creation_time_ms: str
        """

        self._creation_time_ms = creation_time_ms

    @property
    def creative_pre_approval_policy(self):
        """Gets the creative_pre_approval_policy of this MarketplaceDeal.

        Specifies the creative pre-approval policy (buyer-readonly)

        :return: The creative_pre_approval_policy of this MarketplaceDeal.
        :rtype: str
        """
        return self._creative_pre_approval_policy

    @creative_pre_approval_policy.setter
    def creative_pre_approval_policy(self, creative_pre_approval_policy):
        """Sets the creative_pre_approval_policy of this MarketplaceDeal.

        Specifies the creative pre-approval policy (buyer-readonly)

        :param creative_pre_approval_policy: The creative_pre_approval_policy of this MarketplaceDeal.
        :type creative_pre_approval_policy: str
        """

        self._creative_pre_approval_policy = creative_pre_approval_policy

    @property
    def creative_safe_frame_compatibility(self):
        """Gets the creative_safe_frame_compatibility of this MarketplaceDeal.

        Specifies whether the creative is safeFrame compatible (buyer-readonly)

        :return: The creative_safe_frame_compatibility of this MarketplaceDeal.
        :rtype: str
        """
        return self._creative_safe_frame_compatibility

    @creative_safe_frame_compatibility.setter
    def creative_safe_frame_compatibility(self, creative_safe_frame_compatibility):
        """Sets the creative_safe_frame_compatibility of this MarketplaceDeal.

        Specifies whether the creative is safeFrame compatible (buyer-readonly)

        :param creative_safe_frame_compatibility: The creative_safe_frame_compatibility of this MarketplaceDeal.
        :type creative_safe_frame_compatibility: str
        """

        self._creative_safe_frame_compatibility = creative_safe_frame_compatibility

    @property
    def deal_id(self):
        """Gets the deal_id of this MarketplaceDeal.

        A unique deal-id for the deal (readonly).

        :return: The deal_id of this MarketplaceDeal.
        :rtype: str
        """
        return self._deal_id

    @deal_id.setter
    def deal_id(self, deal_id):
        """Sets the deal_id of this MarketplaceDeal.

        A unique deal-id for the deal (readonly).

        :param deal_id: The deal_id of this MarketplaceDeal.
        :type deal_id: str
        """

        self._deal_id = deal_id

    @property
    def deal_serving_metadata(self):
        """Gets the deal_serving_metadata of this MarketplaceDeal.


        :return: The deal_serving_metadata of this MarketplaceDeal.
        :rtype: DealServingMetadata
        """
        return self._deal_serving_metadata

    @deal_serving_metadata.setter
    def deal_serving_metadata(self, deal_serving_metadata):
        """Sets the deal_serving_metadata of this MarketplaceDeal.


        :param deal_serving_metadata: The deal_serving_metadata of this MarketplaceDeal.
        :type deal_serving_metadata: DealServingMetadata
        """

        self._deal_serving_metadata = deal_serving_metadata

    @property
    def delivery_control(self):
        """Gets the delivery_control of this MarketplaceDeal.


        :return: The delivery_control of this MarketplaceDeal.
        :rtype: DeliveryControl
        """
        return self._delivery_control

    @delivery_control.setter
    def delivery_control(self, delivery_control):
        """Sets the delivery_control of this MarketplaceDeal.


        :param delivery_control: The delivery_control of this MarketplaceDeal.
        :type delivery_control: DeliveryControl
        """

        self._delivery_control = delivery_control

    @property
    def external_deal_id(self):
        """Gets the external_deal_id of this MarketplaceDeal.

        The external deal id assigned to this deal once the deal is finalized. This is the deal-id that shows up in serving/reporting etc. (readonly)

        :return: The external_deal_id of this MarketplaceDeal.
        :rtype: str
        """
        return self._external_deal_id

    @external_deal_id.setter
    def external_deal_id(self, external_deal_id):
        """Sets the external_deal_id of this MarketplaceDeal.

        The external deal id assigned to this deal once the deal is finalized. This is the deal-id that shows up in serving/reporting etc. (readonly)

        :param external_deal_id: The external_deal_id of this MarketplaceDeal.
        :type external_deal_id: str
        """

        self._external_deal_id = external_deal_id

    @property
    def flight_end_time_ms(self):
        """Gets the flight_end_time_ms of this MarketplaceDeal.

        Proposed flight end time of the deal (ms since epoch) This will generally be stored in a granularity of a second. (updatable)

        :return: The flight_end_time_ms of this MarketplaceDeal.
        :rtype: str
        """
        return self._flight_end_time_ms

    @flight_end_time_ms.setter
    def flight_end_time_ms(self, flight_end_time_ms):
        """Sets the flight_end_time_ms of this MarketplaceDeal.

        Proposed flight end time of the deal (ms since epoch) This will generally be stored in a granularity of a second. (updatable)

        :param flight_end_time_ms: The flight_end_time_ms of this MarketplaceDeal.
        :type flight_end_time_ms: str
        """

        self._flight_end_time_ms = flight_end_time_ms

    @property
    def flight_start_time_ms(self):
        """Gets the flight_start_time_ms of this MarketplaceDeal.

        Proposed flight start time of the deal (ms since epoch) This will generally be stored in a granularity of a second. (updatable)

        :return: The flight_start_time_ms of this MarketplaceDeal.
        :rtype: str
        """
        return self._flight_start_time_ms

    @flight_start_time_ms.setter
    def flight_start_time_ms(self, flight_start_time_ms):
        """Sets the flight_start_time_ms of this MarketplaceDeal.

        Proposed flight start time of the deal (ms since epoch) This will generally be stored in a granularity of a second. (updatable)

        :param flight_start_time_ms: The flight_start_time_ms of this MarketplaceDeal.
        :type flight_start_time_ms: str
        """

        self._flight_start_time_ms = flight_start_time_ms

    @property
    def inventory_description(self):
        """Gets the inventory_description of this MarketplaceDeal.

        Description for the deal terms. (buyer-readonly)

        :return: The inventory_description of this MarketplaceDeal.
        :rtype: str
        """
        return self._inventory_description

    @inventory_description.setter
    def inventory_description(self, inventory_description):
        """Sets the inventory_description of this MarketplaceDeal.

        Description for the deal terms. (buyer-readonly)

        :param inventory_description: The inventory_description of this MarketplaceDeal.
        :type inventory_description: str
        """

        self._inventory_description = inventory_description

    @property
    def is_rfp_template(self):
        """Gets the is_rfp_template of this MarketplaceDeal.

        Indicates whether the current deal is a RFP template. RFP template is created by buyer and not based on seller created products.

        :return: The is_rfp_template of this MarketplaceDeal.
        :rtype: bool
        """
        return self._is_rfp_template

    @is_rfp_template.setter
    def is_rfp_template(self, is_rfp_template):
        """Sets the is_rfp_template of this MarketplaceDeal.

        Indicates whether the current deal is a RFP template. RFP template is created by buyer and not based on seller created products.

        :param is_rfp_template: The is_rfp_template of this MarketplaceDeal.
        :type is_rfp_template: bool
        """

        self._is_rfp_template = is_rfp_template

    @property
    def is_setup_complete(self):
        """Gets the is_setup_complete of this MarketplaceDeal.

        True, if the buyside inventory setup is complete for this deal. (readonly, except via OrderSetupCompleted action)

        :return: The is_setup_complete of this MarketplaceDeal.
        :rtype: bool
        """
        return self._is_setup_complete

    @is_setup_complete.setter
    def is_setup_complete(self, is_setup_complete):
        """Sets the is_setup_complete of this MarketplaceDeal.

        True, if the buyside inventory setup is complete for this deal. (readonly, except via OrderSetupCompleted action)

        :param is_setup_complete: The is_setup_complete of this MarketplaceDeal.
        :type is_setup_complete: bool
        """

        self._is_setup_complete = is_setup_complete

    @property
    def kind(self):
        """Gets the kind of this MarketplaceDeal.

        Identifies what kind of resource this is. Value: the fixed string \"adexchangebuyer#marketplaceDeal\".

        :return: The kind of this MarketplaceDeal.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this MarketplaceDeal.

        Identifies what kind of resource this is. Value: the fixed string \"adexchangebuyer#marketplaceDeal\".

        :param kind: The kind of this MarketplaceDeal.
        :type kind: str
        """

        self._kind = kind

    @property
    def last_update_time_ms(self):
        """Gets the last_update_time_ms of this MarketplaceDeal.

        The time (ms since epoch) when the deal was last updated. (readonly)

        :return: The last_update_time_ms of this MarketplaceDeal.
        :rtype: str
        """
        return self._last_update_time_ms

    @last_update_time_ms.setter
    def last_update_time_ms(self, last_update_time_ms):
        """Sets the last_update_time_ms of this MarketplaceDeal.

        The time (ms since epoch) when the deal was last updated. (readonly)

        :param last_update_time_ms: The last_update_time_ms of this MarketplaceDeal.
        :type last_update_time_ms: str
        """

        self._last_update_time_ms = last_update_time_ms

    @property
    def makegood_requested_reason(self):
        """Gets the makegood_requested_reason of this MarketplaceDeal.


        :return: The makegood_requested_reason of this MarketplaceDeal.
        :rtype: str
        """
        return self._makegood_requested_reason

    @makegood_requested_reason.setter
    def makegood_requested_reason(self, makegood_requested_reason):
        """Sets the makegood_requested_reason of this MarketplaceDeal.


        :param makegood_requested_reason: The makegood_requested_reason of this MarketplaceDeal.
        :type makegood_requested_reason: str
        """

        self._makegood_requested_reason = makegood_requested_reason

    @property
    def name(self):
        """Gets the name of this MarketplaceDeal.

        The name of the deal. (updatable)

        :return: The name of this MarketplaceDeal.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MarketplaceDeal.

        The name of the deal. (updatable)

        :param name: The name of this MarketplaceDeal.
        :type name: str
        """

        self._name = name

    @property
    def product_id(self):
        """Gets the product_id of this MarketplaceDeal.

        The product-id from which this deal was created. (readonly, except on create)

        :return: The product_id of this MarketplaceDeal.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this MarketplaceDeal.

        The product-id from which this deal was created. (readonly, except on create)

        :param product_id: The product_id of this MarketplaceDeal.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def product_revision_number(self):
        """Gets the product_revision_number of this MarketplaceDeal.

        The revision number of the product that the deal was created from (readonly, except on create)

        :return: The product_revision_number of this MarketplaceDeal.
        :rtype: str
        """
        return self._product_revision_number

    @product_revision_number.setter
    def product_revision_number(self, product_revision_number):
        """Sets the product_revision_number of this MarketplaceDeal.

        The revision number of the product that the deal was created from (readonly, except on create)

        :param product_revision_number: The product_revision_number of this MarketplaceDeal.
        :type product_revision_number: str
        """

        self._product_revision_number = product_revision_number

    @property
    def programmatic_creative_source(self):
        """Gets the programmatic_creative_source of this MarketplaceDeal.

        Specifies the creative source for programmatic deals, PUBLISHER means creative is provided by seller and ADVERTISR means creative is provided by buyer. (buyer-readonly)

        :return: The programmatic_creative_source of this MarketplaceDeal.
        :rtype: str
        """
        return self._programmatic_creative_source

    @programmatic_creative_source.setter
    def programmatic_creative_source(self, programmatic_creative_source):
        """Sets the programmatic_creative_source of this MarketplaceDeal.

        Specifies the creative source for programmatic deals, PUBLISHER means creative is provided by seller and ADVERTISR means creative is provided by buyer. (buyer-readonly)

        :param programmatic_creative_source: The programmatic_creative_source of this MarketplaceDeal.
        :type programmatic_creative_source: str
        """

        self._programmatic_creative_source = programmatic_creative_source

    @property
    def proposal_id(self):
        """Gets the proposal_id of this MarketplaceDeal.


        :return: The proposal_id of this MarketplaceDeal.
        :rtype: str
        """
        return self._proposal_id

    @proposal_id.setter
    def proposal_id(self, proposal_id):
        """Sets the proposal_id of this MarketplaceDeal.


        :param proposal_id: The proposal_id of this MarketplaceDeal.
        :type proposal_id: str
        """

        self._proposal_id = proposal_id

    @property
    def seller_contacts(self):
        """Gets the seller_contacts of this MarketplaceDeal.

        Optional Seller contact information for the deal (buyer-readonly)

        :return: The seller_contacts of this MarketplaceDeal.
        :rtype: List[ContactInformation]
        """
        return self._seller_contacts

    @seller_contacts.setter
    def seller_contacts(self, seller_contacts):
        """Sets the seller_contacts of this MarketplaceDeal.

        Optional Seller contact information for the deal (buyer-readonly)

        :param seller_contacts: The seller_contacts of this MarketplaceDeal.
        :type seller_contacts: List[ContactInformation]
        """

        self._seller_contacts = seller_contacts

    @property
    def shared_targetings(self):
        """Gets the shared_targetings of this MarketplaceDeal.

        The shared targeting visible to buyers and sellers. Each shared targeting entity is AND'd together. (updatable)

        :return: The shared_targetings of this MarketplaceDeal.
        :rtype: List[SharedTargeting]
        """
        return self._shared_targetings

    @shared_targetings.setter
    def shared_targetings(self, shared_targetings):
        """Sets the shared_targetings of this MarketplaceDeal.

        The shared targeting visible to buyers and sellers. Each shared targeting entity is AND'd together. (updatable)

        :param shared_targetings: The shared_targetings of this MarketplaceDeal.
        :type shared_targetings: List[SharedTargeting]
        """

        self._shared_targetings = shared_targetings

    @property
    def syndication_product(self):
        """Gets the syndication_product of this MarketplaceDeal.

        The syndication product associated with the deal. (readonly, except on create)

        :return: The syndication_product of this MarketplaceDeal.
        :rtype: str
        """
        return self._syndication_product

    @syndication_product.setter
    def syndication_product(self, syndication_product):
        """Sets the syndication_product of this MarketplaceDeal.

        The syndication product associated with the deal. (readonly, except on create)

        :param syndication_product: The syndication_product of this MarketplaceDeal.
        :type syndication_product: str
        """

        self._syndication_product = syndication_product

    @property
    def terms(self):
        """Gets the terms of this MarketplaceDeal.


        :return: The terms of this MarketplaceDeal.
        :rtype: DealTerms
        """
        return self._terms

    @terms.setter
    def terms(self, terms):
        """Sets the terms of this MarketplaceDeal.


        :param terms: The terms of this MarketplaceDeal.
        :type terms: DealTerms
        """

        self._terms = terms

    @property
    def web_property_code(self):
        """Gets the web_property_code of this MarketplaceDeal.


        :return: The web_property_code of this MarketplaceDeal.
        :rtype: str
        """
        return self._web_property_code

    @web_property_code.setter
    def web_property_code(self, web_property_code):
        """Sets the web_property_code of this MarketplaceDeal.


        :param web_property_code: The web_property_code of this MarketplaceDeal.
        :type web_property_code: str
        """

        self._web_property_code = web_property_code
