# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.marketplace_note import MarketplaceNote
from openapi_server import util


class AddOrderNotesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notes: List[MarketplaceNote]=None):
        """AddOrderNotesResponse - a model defined in OpenAPI

        :param notes: The notes of this AddOrderNotesResponse.
        """
        self.openapi_types = {
            'notes': List[MarketplaceNote]
        }

        self.attribute_map = {
            'notes': 'notes'
        }

        self._notes = notes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddOrderNotesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddOrderNotesResponse of this AddOrderNotesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notes(self):
        """Gets the notes of this AddOrderNotesResponse.


        :return: The notes of this AddOrderNotesResponse.
        :rtype: List[MarketplaceNote]
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this AddOrderNotesResponse.


        :param notes: The notes of this AddOrderNotesResponse.
        :type notes: List[MarketplaceNote]
        """

        self._notes = notes
