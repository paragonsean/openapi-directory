# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PerformanceReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bid_rate: float=None, bid_request_rate: float=None, callout_status_rate: List[object]=None, cookie_matcher_status_rate: List[object]=None, creative_status_rate: List[object]=None, filtered_bid_rate: float=None, hosted_match_status_rate: List[object]=None, inventory_match_rate: float=None, kind: str='adexchangebuyer#performanceReport', latency50th_percentile: float=None, latency85th_percentile: float=None, latency95th_percentile: float=None, no_quota_in_region: float=None, out_of_quota: float=None, pixel_match_requests: float=None, pixel_match_responses: float=None, quota_configured_limit: float=None, quota_throttled_limit: float=None, region: str=None, successful_request_rate: float=None, timestamp: str=None, unsuccessful_request_rate: float=None):
        """PerformanceReport - a model defined in OpenAPI

        :param bid_rate: The bid_rate of this PerformanceReport.
        :param bid_request_rate: The bid_request_rate of this PerformanceReport.
        :param callout_status_rate: The callout_status_rate of this PerformanceReport.
        :param cookie_matcher_status_rate: The cookie_matcher_status_rate of this PerformanceReport.
        :param creative_status_rate: The creative_status_rate of this PerformanceReport.
        :param filtered_bid_rate: The filtered_bid_rate of this PerformanceReport.
        :param hosted_match_status_rate: The hosted_match_status_rate of this PerformanceReport.
        :param inventory_match_rate: The inventory_match_rate of this PerformanceReport.
        :param kind: The kind of this PerformanceReport.
        :param latency50th_percentile: The latency50th_percentile of this PerformanceReport.
        :param latency85th_percentile: The latency85th_percentile of this PerformanceReport.
        :param latency95th_percentile: The latency95th_percentile of this PerformanceReport.
        :param no_quota_in_region: The no_quota_in_region of this PerformanceReport.
        :param out_of_quota: The out_of_quota of this PerformanceReport.
        :param pixel_match_requests: The pixel_match_requests of this PerformanceReport.
        :param pixel_match_responses: The pixel_match_responses of this PerformanceReport.
        :param quota_configured_limit: The quota_configured_limit of this PerformanceReport.
        :param quota_throttled_limit: The quota_throttled_limit of this PerformanceReport.
        :param region: The region of this PerformanceReport.
        :param successful_request_rate: The successful_request_rate of this PerformanceReport.
        :param timestamp: The timestamp of this PerformanceReport.
        :param unsuccessful_request_rate: The unsuccessful_request_rate of this PerformanceReport.
        """
        self.openapi_types = {
            'bid_rate': float,
            'bid_request_rate': float,
            'callout_status_rate': List[object],
            'cookie_matcher_status_rate': List[object],
            'creative_status_rate': List[object],
            'filtered_bid_rate': float,
            'hosted_match_status_rate': List[object],
            'inventory_match_rate': float,
            'kind': str,
            'latency50th_percentile': float,
            'latency85th_percentile': float,
            'latency95th_percentile': float,
            'no_quota_in_region': float,
            'out_of_quota': float,
            'pixel_match_requests': float,
            'pixel_match_responses': float,
            'quota_configured_limit': float,
            'quota_throttled_limit': float,
            'region': str,
            'successful_request_rate': float,
            'timestamp': str,
            'unsuccessful_request_rate': float
        }

        self.attribute_map = {
            'bid_rate': 'bidRate',
            'bid_request_rate': 'bidRequestRate',
            'callout_status_rate': 'calloutStatusRate',
            'cookie_matcher_status_rate': 'cookieMatcherStatusRate',
            'creative_status_rate': 'creativeStatusRate',
            'filtered_bid_rate': 'filteredBidRate',
            'hosted_match_status_rate': 'hostedMatchStatusRate',
            'inventory_match_rate': 'inventoryMatchRate',
            'kind': 'kind',
            'latency50th_percentile': 'latency50thPercentile',
            'latency85th_percentile': 'latency85thPercentile',
            'latency95th_percentile': 'latency95thPercentile',
            'no_quota_in_region': 'noQuotaInRegion',
            'out_of_quota': 'outOfQuota',
            'pixel_match_requests': 'pixelMatchRequests',
            'pixel_match_responses': 'pixelMatchResponses',
            'quota_configured_limit': 'quotaConfiguredLimit',
            'quota_throttled_limit': 'quotaThrottledLimit',
            'region': 'region',
            'successful_request_rate': 'successfulRequestRate',
            'timestamp': 'timestamp',
            'unsuccessful_request_rate': 'unsuccessfulRequestRate'
        }

        self._bid_rate = bid_rate
        self._bid_request_rate = bid_request_rate
        self._callout_status_rate = callout_status_rate
        self._cookie_matcher_status_rate = cookie_matcher_status_rate
        self._creative_status_rate = creative_status_rate
        self._filtered_bid_rate = filtered_bid_rate
        self._hosted_match_status_rate = hosted_match_status_rate
        self._inventory_match_rate = inventory_match_rate
        self._kind = kind
        self._latency50th_percentile = latency50th_percentile
        self._latency85th_percentile = latency85th_percentile
        self._latency95th_percentile = latency95th_percentile
        self._no_quota_in_region = no_quota_in_region
        self._out_of_quota = out_of_quota
        self._pixel_match_requests = pixel_match_requests
        self._pixel_match_responses = pixel_match_responses
        self._quota_configured_limit = quota_configured_limit
        self._quota_throttled_limit = quota_throttled_limit
        self._region = region
        self._successful_request_rate = successful_request_rate
        self._timestamp = timestamp
        self._unsuccessful_request_rate = unsuccessful_request_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PerformanceReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PerformanceReport of this PerformanceReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bid_rate(self):
        """Gets the bid_rate of this PerformanceReport.

        The number of bid responses with an ad.

        :return: The bid_rate of this PerformanceReport.
        :rtype: float
        """
        return self._bid_rate

    @bid_rate.setter
    def bid_rate(self, bid_rate):
        """Sets the bid_rate of this PerformanceReport.

        The number of bid responses with an ad.

        :param bid_rate: The bid_rate of this PerformanceReport.
        :type bid_rate: float
        """

        self._bid_rate = bid_rate

    @property
    def bid_request_rate(self):
        """Gets the bid_request_rate of this PerformanceReport.

        The number of bid requests sent to your bidder.

        :return: The bid_request_rate of this PerformanceReport.
        :rtype: float
        """
        return self._bid_request_rate

    @bid_request_rate.setter
    def bid_request_rate(self, bid_request_rate):
        """Sets the bid_request_rate of this PerformanceReport.

        The number of bid requests sent to your bidder.

        :param bid_request_rate: The bid_request_rate of this PerformanceReport.
        :type bid_request_rate: float
        """

        self._bid_request_rate = bid_request_rate

    @property
    def callout_status_rate(self):
        """Gets the callout_status_rate of this PerformanceReport.

        Rate of various prefiltering statuses per match. Please refer to the callout-status-codes.txt file for different statuses.

        :return: The callout_status_rate of this PerformanceReport.
        :rtype: List[object]
        """
        return self._callout_status_rate

    @callout_status_rate.setter
    def callout_status_rate(self, callout_status_rate):
        """Sets the callout_status_rate of this PerformanceReport.

        Rate of various prefiltering statuses per match. Please refer to the callout-status-codes.txt file for different statuses.

        :param callout_status_rate: The callout_status_rate of this PerformanceReport.
        :type callout_status_rate: List[object]
        """

        self._callout_status_rate = callout_status_rate

    @property
    def cookie_matcher_status_rate(self):
        """Gets the cookie_matcher_status_rate of this PerformanceReport.

        Average QPS for cookie matcher operations.

        :return: The cookie_matcher_status_rate of this PerformanceReport.
        :rtype: List[object]
        """
        return self._cookie_matcher_status_rate

    @cookie_matcher_status_rate.setter
    def cookie_matcher_status_rate(self, cookie_matcher_status_rate):
        """Sets the cookie_matcher_status_rate of this PerformanceReport.

        Average QPS for cookie matcher operations.

        :param cookie_matcher_status_rate: The cookie_matcher_status_rate of this PerformanceReport.
        :type cookie_matcher_status_rate: List[object]
        """

        self._cookie_matcher_status_rate = cookie_matcher_status_rate

    @property
    def creative_status_rate(self):
        """Gets the creative_status_rate of this PerformanceReport.

        Rate of ads with a given status. Please refer to the creative-status-codes.txt file for different statuses.

        :return: The creative_status_rate of this PerformanceReport.
        :rtype: List[object]
        """
        return self._creative_status_rate

    @creative_status_rate.setter
    def creative_status_rate(self, creative_status_rate):
        """Sets the creative_status_rate of this PerformanceReport.

        Rate of ads with a given status. Please refer to the creative-status-codes.txt file for different statuses.

        :param creative_status_rate: The creative_status_rate of this PerformanceReport.
        :type creative_status_rate: List[object]
        """

        self._creative_status_rate = creative_status_rate

    @property
    def filtered_bid_rate(self):
        """Gets the filtered_bid_rate of this PerformanceReport.

        The number of bid responses that were filtered due to a policy violation or other errors.

        :return: The filtered_bid_rate of this PerformanceReport.
        :rtype: float
        """
        return self._filtered_bid_rate

    @filtered_bid_rate.setter
    def filtered_bid_rate(self, filtered_bid_rate):
        """Sets the filtered_bid_rate of this PerformanceReport.

        The number of bid responses that were filtered due to a policy violation or other errors.

        :param filtered_bid_rate: The filtered_bid_rate of this PerformanceReport.
        :type filtered_bid_rate: float
        """

        self._filtered_bid_rate = filtered_bid_rate

    @property
    def hosted_match_status_rate(self):
        """Gets the hosted_match_status_rate of this PerformanceReport.

        Average QPS for hosted match operations.

        :return: The hosted_match_status_rate of this PerformanceReport.
        :rtype: List[object]
        """
        return self._hosted_match_status_rate

    @hosted_match_status_rate.setter
    def hosted_match_status_rate(self, hosted_match_status_rate):
        """Sets the hosted_match_status_rate of this PerformanceReport.

        Average QPS for hosted match operations.

        :param hosted_match_status_rate: The hosted_match_status_rate of this PerformanceReport.
        :type hosted_match_status_rate: List[object]
        """

        self._hosted_match_status_rate = hosted_match_status_rate

    @property
    def inventory_match_rate(self):
        """Gets the inventory_match_rate of this PerformanceReport.

        The number of potential queries based on your pretargeting settings.

        :return: The inventory_match_rate of this PerformanceReport.
        :rtype: float
        """
        return self._inventory_match_rate

    @inventory_match_rate.setter
    def inventory_match_rate(self, inventory_match_rate):
        """Sets the inventory_match_rate of this PerformanceReport.

        The number of potential queries based on your pretargeting settings.

        :param inventory_match_rate: The inventory_match_rate of this PerformanceReport.
        :type inventory_match_rate: float
        """

        self._inventory_match_rate = inventory_match_rate

    @property
    def kind(self):
        """Gets the kind of this PerformanceReport.

        Resource type.

        :return: The kind of this PerformanceReport.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PerformanceReport.

        Resource type.

        :param kind: The kind of this PerformanceReport.
        :type kind: str
        """

        self._kind = kind

    @property
    def latency50th_percentile(self):
        """Gets the latency50th_percentile of this PerformanceReport.

        The 50th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.

        :return: The latency50th_percentile of this PerformanceReport.
        :rtype: float
        """
        return self._latency50th_percentile

    @latency50th_percentile.setter
    def latency50th_percentile(self, latency50th_percentile):
        """Sets the latency50th_percentile of this PerformanceReport.

        The 50th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.

        :param latency50th_percentile: The latency50th_percentile of this PerformanceReport.
        :type latency50th_percentile: float
        """

        self._latency50th_percentile = latency50th_percentile

    @property
    def latency85th_percentile(self):
        """Gets the latency85th_percentile of this PerformanceReport.

        The 85th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.

        :return: The latency85th_percentile of this PerformanceReport.
        :rtype: float
        """
        return self._latency85th_percentile

    @latency85th_percentile.setter
    def latency85th_percentile(self, latency85th_percentile):
        """Sets the latency85th_percentile of this PerformanceReport.

        The 85th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.

        :param latency85th_percentile: The latency85th_percentile of this PerformanceReport.
        :type latency85th_percentile: float
        """

        self._latency85th_percentile = latency85th_percentile

    @property
    def latency95th_percentile(self):
        """Gets the latency95th_percentile of this PerformanceReport.

        The 95th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.

        :return: The latency95th_percentile of this PerformanceReport.
        :rtype: float
        """
        return self._latency95th_percentile

    @latency95th_percentile.setter
    def latency95th_percentile(self, latency95th_percentile):
        """Sets the latency95th_percentile of this PerformanceReport.

        The 95th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.

        :param latency95th_percentile: The latency95th_percentile of this PerformanceReport.
        :type latency95th_percentile: float
        """

        self._latency95th_percentile = latency95th_percentile

    @property
    def no_quota_in_region(self):
        """Gets the no_quota_in_region of this PerformanceReport.

        Rate of various quota account statuses per quota check.

        :return: The no_quota_in_region of this PerformanceReport.
        :rtype: float
        """
        return self._no_quota_in_region

    @no_quota_in_region.setter
    def no_quota_in_region(self, no_quota_in_region):
        """Sets the no_quota_in_region of this PerformanceReport.

        Rate of various quota account statuses per quota check.

        :param no_quota_in_region: The no_quota_in_region of this PerformanceReport.
        :type no_quota_in_region: float
        """

        self._no_quota_in_region = no_quota_in_region

    @property
    def out_of_quota(self):
        """Gets the out_of_quota of this PerformanceReport.

        Rate of various quota account statuses per quota check.

        :return: The out_of_quota of this PerformanceReport.
        :rtype: float
        """
        return self._out_of_quota

    @out_of_quota.setter
    def out_of_quota(self, out_of_quota):
        """Sets the out_of_quota of this PerformanceReport.

        Rate of various quota account statuses per quota check.

        :param out_of_quota: The out_of_quota of this PerformanceReport.
        :type out_of_quota: float
        """

        self._out_of_quota = out_of_quota

    @property
    def pixel_match_requests(self):
        """Gets the pixel_match_requests of this PerformanceReport.

        Average QPS for pixel match requests from clients.

        :return: The pixel_match_requests of this PerformanceReport.
        :rtype: float
        """
        return self._pixel_match_requests

    @pixel_match_requests.setter
    def pixel_match_requests(self, pixel_match_requests):
        """Sets the pixel_match_requests of this PerformanceReport.

        Average QPS for pixel match requests from clients.

        :param pixel_match_requests: The pixel_match_requests of this PerformanceReport.
        :type pixel_match_requests: float
        """

        self._pixel_match_requests = pixel_match_requests

    @property
    def pixel_match_responses(self):
        """Gets the pixel_match_responses of this PerformanceReport.

        Average QPS for pixel match responses from clients.

        :return: The pixel_match_responses of this PerformanceReport.
        :rtype: float
        """
        return self._pixel_match_responses

    @pixel_match_responses.setter
    def pixel_match_responses(self, pixel_match_responses):
        """Sets the pixel_match_responses of this PerformanceReport.

        Average QPS for pixel match responses from clients.

        :param pixel_match_responses: The pixel_match_responses of this PerformanceReport.
        :type pixel_match_responses: float
        """

        self._pixel_match_responses = pixel_match_responses

    @property
    def quota_configured_limit(self):
        """Gets the quota_configured_limit of this PerformanceReport.

        The configured quota limits for this account.

        :return: The quota_configured_limit of this PerformanceReport.
        :rtype: float
        """
        return self._quota_configured_limit

    @quota_configured_limit.setter
    def quota_configured_limit(self, quota_configured_limit):
        """Sets the quota_configured_limit of this PerformanceReport.

        The configured quota limits for this account.

        :param quota_configured_limit: The quota_configured_limit of this PerformanceReport.
        :type quota_configured_limit: float
        """

        self._quota_configured_limit = quota_configured_limit

    @property
    def quota_throttled_limit(self):
        """Gets the quota_throttled_limit of this PerformanceReport.

        The throttled quota limits for this account.

        :return: The quota_throttled_limit of this PerformanceReport.
        :rtype: float
        """
        return self._quota_throttled_limit

    @quota_throttled_limit.setter
    def quota_throttled_limit(self, quota_throttled_limit):
        """Sets the quota_throttled_limit of this PerformanceReport.

        The throttled quota limits for this account.

        :param quota_throttled_limit: The quota_throttled_limit of this PerformanceReport.
        :type quota_throttled_limit: float
        """

        self._quota_throttled_limit = quota_throttled_limit

    @property
    def region(self):
        """Gets the region of this PerformanceReport.

        The trading location of this data.

        :return: The region of this PerformanceReport.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this PerformanceReport.

        The trading location of this data.

        :param region: The region of this PerformanceReport.
        :type region: str
        """

        self._region = region

    @property
    def successful_request_rate(self):
        """Gets the successful_request_rate of this PerformanceReport.

        The number of properly formed bid responses received by our servers within the deadline.

        :return: The successful_request_rate of this PerformanceReport.
        :rtype: float
        """
        return self._successful_request_rate

    @successful_request_rate.setter
    def successful_request_rate(self, successful_request_rate):
        """Sets the successful_request_rate of this PerformanceReport.

        The number of properly formed bid responses received by our servers within the deadline.

        :param successful_request_rate: The successful_request_rate of this PerformanceReport.
        :type successful_request_rate: float
        """

        self._successful_request_rate = successful_request_rate

    @property
    def timestamp(self):
        """Gets the timestamp of this PerformanceReport.

        The unix timestamp of the starting time of this performance data.

        :return: The timestamp of this PerformanceReport.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this PerformanceReport.

        The unix timestamp of the starting time of this performance data.

        :param timestamp: The timestamp of this PerformanceReport.
        :type timestamp: str
        """

        self._timestamp = timestamp

    @property
    def unsuccessful_request_rate(self):
        """Gets the unsuccessful_request_rate of this PerformanceReport.

        The number of bid responses that were unsuccessful due to timeouts, incorrect formatting, etc.

        :return: The unsuccessful_request_rate of this PerformanceReport.
        :rtype: float
        """
        return self._unsuccessful_request_rate

    @unsuccessful_request_rate.setter
    def unsuccessful_request_rate(self, unsuccessful_request_rate):
        """Sets the unsuccessful_request_rate of this PerformanceReport.

        The number of bid responses that were unsuccessful due to timeouts, incorrect formatting, etc.

        :param unsuccessful_request_rate: The unsuccessful_request_rate of this PerformanceReport.
        :type unsuccessful_request_rate: float
        """

        self._unsuccessful_request_rate = unsuccessful_request_rate
