# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreativeCorrectionsInnerContextsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auction_type: List[str]=None, context_type: str=None, geo_criteria_id: List[int]=None, platform: List[str]=None):
        """CreativeCorrectionsInnerContextsInner - a model defined in OpenAPI

        :param auction_type: The auction_type of this CreativeCorrectionsInnerContextsInner.
        :param context_type: The context_type of this CreativeCorrectionsInnerContextsInner.
        :param geo_criteria_id: The geo_criteria_id of this CreativeCorrectionsInnerContextsInner.
        :param platform: The platform of this CreativeCorrectionsInnerContextsInner.
        """
        self.openapi_types = {
            'auction_type': List[str],
            'context_type': str,
            'geo_criteria_id': List[int],
            'platform': List[str]
        }

        self.attribute_map = {
            'auction_type': 'auctionType',
            'context_type': 'contextType',
            'geo_criteria_id': 'geoCriteriaId',
            'platform': 'platform'
        }

        self._auction_type = auction_type
        self._context_type = context_type
        self._geo_criteria_id = geo_criteria_id
        self._platform = platform

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreativeCorrectionsInnerContextsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Creative_corrections_inner_contexts_inner of this CreativeCorrectionsInnerContextsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auction_type(self):
        """Gets the auction_type of this CreativeCorrectionsInnerContextsInner.

        Only set when contextType=AUCTION_TYPE. Represents the auction types this correction applies to.

        :return: The auction_type of this CreativeCorrectionsInnerContextsInner.
        :rtype: List[str]
        """
        return self._auction_type

    @auction_type.setter
    def auction_type(self, auction_type):
        """Sets the auction_type of this CreativeCorrectionsInnerContextsInner.

        Only set when contextType=AUCTION_TYPE. Represents the auction types this correction applies to.

        :param auction_type: The auction_type of this CreativeCorrectionsInnerContextsInner.
        :type auction_type: List[str]
        """

        self._auction_type = auction_type

    @property
    def context_type(self):
        """Gets the context_type of this CreativeCorrectionsInnerContextsInner.

        The type of context (e.g., location, platform, auction type, SSL-ness).

        :return: The context_type of this CreativeCorrectionsInnerContextsInner.
        :rtype: str
        """
        return self._context_type

    @context_type.setter
    def context_type(self, context_type):
        """Sets the context_type of this CreativeCorrectionsInnerContextsInner.

        The type of context (e.g., location, platform, auction type, SSL-ness).

        :param context_type: The context_type of this CreativeCorrectionsInnerContextsInner.
        :type context_type: str
        """

        self._context_type = context_type

    @property
    def geo_criteria_id(self):
        """Gets the geo_criteria_id of this CreativeCorrectionsInnerContextsInner.

        Only set when contextType=LOCATION. Represents the geo criterias this correction applies to.

        :return: The geo_criteria_id of this CreativeCorrectionsInnerContextsInner.
        :rtype: List[int]
        """
        return self._geo_criteria_id

    @geo_criteria_id.setter
    def geo_criteria_id(self, geo_criteria_id):
        """Sets the geo_criteria_id of this CreativeCorrectionsInnerContextsInner.

        Only set when contextType=LOCATION. Represents the geo criterias this correction applies to.

        :param geo_criteria_id: The geo_criteria_id of this CreativeCorrectionsInnerContextsInner.
        :type geo_criteria_id: List[int]
        """

        self._geo_criteria_id = geo_criteria_id

    @property
    def platform(self):
        """Gets the platform of this CreativeCorrectionsInnerContextsInner.

        Only set when contextType=PLATFORM. Represents the platforms this correction applies to.

        :return: The platform of this CreativeCorrectionsInnerContextsInner.
        :rtype: List[str]
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this CreativeCorrectionsInnerContextsInner.

        Only set when contextType=PLATFORM. Represents the platforms this correction applies to.

        :param platform: The platform of this CreativeCorrectionsInnerContextsInner.
        :type platform: List[str]
        """

        self._platform = platform
