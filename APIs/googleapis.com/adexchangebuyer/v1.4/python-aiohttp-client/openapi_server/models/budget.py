# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Budget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, billing_id: str=None, budget_amount: str=None, currency_code: str=None, id: str=None, kind: str='adexchangebuyer#budget'):
        """Budget - a model defined in OpenAPI

        :param account_id: The account_id of this Budget.
        :param billing_id: The billing_id of this Budget.
        :param budget_amount: The budget_amount of this Budget.
        :param currency_code: The currency_code of this Budget.
        :param id: The id of this Budget.
        :param kind: The kind of this Budget.
        """
        self.openapi_types = {
            'account_id': str,
            'billing_id': str,
            'budget_amount': str,
            'currency_code': str,
            'id': str,
            'kind': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'billing_id': 'billingId',
            'budget_amount': 'budgetAmount',
            'currency_code': 'currencyCode',
            'id': 'id',
            'kind': 'kind'
        }

        self._account_id = account_id
        self._billing_id = billing_id
        self._budget_amount = budget_amount
        self._currency_code = currency_code
        self._id = id
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Budget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Budget of this Budget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this Budget.

        The id of the account. This is required for get and update requests.

        :return: The account_id of this Budget.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this Budget.

        The id of the account. This is required for get and update requests.

        :param account_id: The account_id of this Budget.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def billing_id(self):
        """Gets the billing_id of this Budget.

        The billing id to determine which adgroup to provide budget information for. This is required for get and update requests.

        :return: The billing_id of this Budget.
        :rtype: str
        """
        return self._billing_id

    @billing_id.setter
    def billing_id(self, billing_id):
        """Sets the billing_id of this Budget.

        The billing id to determine which adgroup to provide budget information for. This is required for get and update requests.

        :param billing_id: The billing_id of this Budget.
        :type billing_id: str
        """

        self._billing_id = billing_id

    @property
    def budget_amount(self):
        """Gets the budget_amount of this Budget.

        The daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests.

        :return: The budget_amount of this Budget.
        :rtype: str
        """
        return self._budget_amount

    @budget_amount.setter
    def budget_amount(self, budget_amount):
        """Sets the budget_amount of this Budget.

        The daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests.

        :param budget_amount: The budget_amount of this Budget.
        :type budget_amount: str
        """

        self._budget_amount = budget_amount

    @property
    def currency_code(self):
        """Gets the currency_code of this Budget.

        The currency code for the buyer. This cannot be altered here.

        :return: The currency_code of this Budget.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this Budget.

        The currency code for the buyer. This cannot be altered here.

        :param currency_code: The currency_code of this Budget.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def id(self):
        """Gets the id of this Budget.

        The unique id that describes this item.

        :return: The id of this Budget.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Budget.

        The unique id that describes this item.

        :param id: The id of this Budget.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this Budget.

        The kind of the resource, i.e. \"adexchangebuyer#budget\".

        :return: The kind of this Budget.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Budget.

        The kind of the resource, i.e. \"adexchangebuyer#budget\".

        :param kind: The kind of this Budget.
        :type kind: str
        """

        self._kind = kind
