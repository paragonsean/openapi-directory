# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.marketplace_note import MarketplaceNote
from openapi_server import util


class UpdatePrivateAuctionProposalRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_deal_id: str=None, note: MarketplaceNote=None, proposal_revision_number: str=None, update_action: str=None):
        """UpdatePrivateAuctionProposalRequest - a model defined in OpenAPI

        :param external_deal_id: The external_deal_id of this UpdatePrivateAuctionProposalRequest.
        :param note: The note of this UpdatePrivateAuctionProposalRequest.
        :param proposal_revision_number: The proposal_revision_number of this UpdatePrivateAuctionProposalRequest.
        :param update_action: The update_action of this UpdatePrivateAuctionProposalRequest.
        """
        self.openapi_types = {
            'external_deal_id': str,
            'note': MarketplaceNote,
            'proposal_revision_number': str,
            'update_action': str
        }

        self.attribute_map = {
            'external_deal_id': 'externalDealId',
            'note': 'note',
            'proposal_revision_number': 'proposalRevisionNumber',
            'update_action': 'updateAction'
        }

        self._external_deal_id = external_deal_id
        self._note = note
        self._proposal_revision_number = proposal_revision_number
        self._update_action = update_action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatePrivateAuctionProposalRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatePrivateAuctionProposalRequest of this UpdatePrivateAuctionProposalRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_deal_id(self):
        """Gets the external_deal_id of this UpdatePrivateAuctionProposalRequest.

        The externalDealId of the deal to be updated.

        :return: The external_deal_id of this UpdatePrivateAuctionProposalRequest.
        :rtype: str
        """
        return self._external_deal_id

    @external_deal_id.setter
    def external_deal_id(self, external_deal_id):
        """Sets the external_deal_id of this UpdatePrivateAuctionProposalRequest.

        The externalDealId of the deal to be updated.

        :param external_deal_id: The external_deal_id of this UpdatePrivateAuctionProposalRequest.
        :type external_deal_id: str
        """

        self._external_deal_id = external_deal_id

    @property
    def note(self):
        """Gets the note of this UpdatePrivateAuctionProposalRequest.


        :return: The note of this UpdatePrivateAuctionProposalRequest.
        :rtype: MarketplaceNote
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this UpdatePrivateAuctionProposalRequest.


        :param note: The note of this UpdatePrivateAuctionProposalRequest.
        :type note: MarketplaceNote
        """

        self._note = note

    @property
    def proposal_revision_number(self):
        """Gets the proposal_revision_number of this UpdatePrivateAuctionProposalRequest.

        The current revision number of the proposal to be updated.

        :return: The proposal_revision_number of this UpdatePrivateAuctionProposalRequest.
        :rtype: str
        """
        return self._proposal_revision_number

    @proposal_revision_number.setter
    def proposal_revision_number(self, proposal_revision_number):
        """Sets the proposal_revision_number of this UpdatePrivateAuctionProposalRequest.

        The current revision number of the proposal to be updated.

        :param proposal_revision_number: The proposal_revision_number of this UpdatePrivateAuctionProposalRequest.
        :type proposal_revision_number: str
        """

        self._proposal_revision_number = proposal_revision_number

    @property
    def update_action(self):
        """Gets the update_action of this UpdatePrivateAuctionProposalRequest.

        The proposed action on the private auction proposal.

        :return: The update_action of this UpdatePrivateAuctionProposalRequest.
        :rtype: str
        """
        return self._update_action

    @update_action.setter
    def update_action(self, update_action):
        """Sets the update_action of this UpdatePrivateAuctionProposalRequest.

        The proposed action on the private auction proposal.

        :param update_action: The update_action of this UpdatePrivateAuctionProposalRequest.
        :type update_action: str
        """

        self._update_action = update_action
