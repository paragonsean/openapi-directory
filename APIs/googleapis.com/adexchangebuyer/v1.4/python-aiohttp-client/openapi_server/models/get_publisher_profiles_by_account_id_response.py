# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.publisher_profile_api_proto import PublisherProfileApiProto
from openapi_server import util


class GetPublisherProfilesByAccountIdResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, profiles: List[PublisherProfileApiProto]=None):
        """GetPublisherProfilesByAccountIdResponse - a model defined in OpenAPI

        :param profiles: The profiles of this GetPublisherProfilesByAccountIdResponse.
        """
        self.openapi_types = {
            'profiles': List[PublisherProfileApiProto]
        }

        self.attribute_map = {
            'profiles': 'profiles'
        }

        self._profiles = profiles

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPublisherProfilesByAccountIdResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPublisherProfilesByAccountIdResponse of this GetPublisherProfilesByAccountIdResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def profiles(self):
        """Gets the profiles of this GetPublisherProfilesByAccountIdResponse.

        Profiles for the requested publisher

        :return: The profiles of this GetPublisherProfilesByAccountIdResponse.
        :rtype: List[PublisherProfileApiProto]
        """
        return self._profiles

    @profiles.setter
    def profiles(self, profiles):
        """Sets the profiles of this GetPublisherProfilesByAccountIdResponse.

        Profiles for the requested publisher

        :param profiles: The profiles of this GetPublisherProfilesByAccountIdResponse.
        :type profiles: List[PublisherProfileApiProto]
        """

        self._profiles = profiles
