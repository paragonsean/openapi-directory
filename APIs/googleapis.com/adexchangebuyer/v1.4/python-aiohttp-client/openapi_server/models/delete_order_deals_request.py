# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteOrderDealsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deal_ids: List[str]=None, proposal_revision_number: str=None, update_action: str=None):
        """DeleteOrderDealsRequest - a model defined in OpenAPI

        :param deal_ids: The deal_ids of this DeleteOrderDealsRequest.
        :param proposal_revision_number: The proposal_revision_number of this DeleteOrderDealsRequest.
        :param update_action: The update_action of this DeleteOrderDealsRequest.
        """
        self.openapi_types = {
            'deal_ids': List[str],
            'proposal_revision_number': str,
            'update_action': str
        }

        self.attribute_map = {
            'deal_ids': 'dealIds',
            'proposal_revision_number': 'proposalRevisionNumber',
            'update_action': 'updateAction'
        }

        self._deal_ids = deal_ids
        self._proposal_revision_number = proposal_revision_number
        self._update_action = update_action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteOrderDealsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteOrderDealsRequest of this DeleteOrderDealsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deal_ids(self):
        """Gets the deal_ids of this DeleteOrderDealsRequest.

        List of deals to delete for a given proposal

        :return: The deal_ids of this DeleteOrderDealsRequest.
        :rtype: List[str]
        """
        return self._deal_ids

    @deal_ids.setter
    def deal_ids(self, deal_ids):
        """Sets the deal_ids of this DeleteOrderDealsRequest.

        List of deals to delete for a given proposal

        :param deal_ids: The deal_ids of this DeleteOrderDealsRequest.
        :type deal_ids: List[str]
        """

        self._deal_ids = deal_ids

    @property
    def proposal_revision_number(self):
        """Gets the proposal_revision_number of this DeleteOrderDealsRequest.

        The last known proposal revision number.

        :return: The proposal_revision_number of this DeleteOrderDealsRequest.
        :rtype: str
        """
        return self._proposal_revision_number

    @proposal_revision_number.setter
    def proposal_revision_number(self, proposal_revision_number):
        """Sets the proposal_revision_number of this DeleteOrderDealsRequest.

        The last known proposal revision number.

        :param proposal_revision_number: The proposal_revision_number of this DeleteOrderDealsRequest.
        :type proposal_revision_number: str
        """

        self._proposal_revision_number = proposal_revision_number

    @property
    def update_action(self):
        """Gets the update_action of this DeleteOrderDealsRequest.

        Indicates an optional action to take on the proposal

        :return: The update_action of this DeleteOrderDealsRequest.
        :rtype: str
        """
        return self._update_action

    @update_action.setter
    def update_action(self, update_action):
        """Sets the update_action of this DeleteOrderDealsRequest.

        Indicates an optional action to take on the proposal

        :param update_action: The update_action of this DeleteOrderDealsRequest.
        :type update_action: str
        """

        self._update_action = update_action
