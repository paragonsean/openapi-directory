# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PretargetingConfigVideoPlayerSizesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aspect_ratio: str=None, min_height: str=None, min_width: str=None):
        """PretargetingConfigVideoPlayerSizesInner - a model defined in OpenAPI

        :param aspect_ratio: The aspect_ratio of this PretargetingConfigVideoPlayerSizesInner.
        :param min_height: The min_height of this PretargetingConfigVideoPlayerSizesInner.
        :param min_width: The min_width of this PretargetingConfigVideoPlayerSizesInner.
        """
        self.openapi_types = {
            'aspect_ratio': str,
            'min_height': str,
            'min_width': str
        }

        self.attribute_map = {
            'aspect_ratio': 'aspectRatio',
            'min_height': 'minHeight',
            'min_width': 'minWidth'
        }

        self._aspect_ratio = aspect_ratio
        self._min_height = min_height
        self._min_width = min_width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PretargetingConfigVideoPlayerSizesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PretargetingConfig_videoPlayerSizes_inner of this PretargetingConfigVideoPlayerSizesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aspect_ratio(self):
        """Gets the aspect_ratio of this PretargetingConfigVideoPlayerSizesInner.

        The type of aspect ratio. Leave this field blank to match all aspect ratios.

        :return: The aspect_ratio of this PretargetingConfigVideoPlayerSizesInner.
        :rtype: str
        """
        return self._aspect_ratio

    @aspect_ratio.setter
    def aspect_ratio(self, aspect_ratio):
        """Sets the aspect_ratio of this PretargetingConfigVideoPlayerSizesInner.

        The type of aspect ratio. Leave this field blank to match all aspect ratios.

        :param aspect_ratio: The aspect_ratio of this PretargetingConfigVideoPlayerSizesInner.
        :type aspect_ratio: str
        """

        self._aspect_ratio = aspect_ratio

    @property
    def min_height(self):
        """Gets the min_height of this PretargetingConfigVideoPlayerSizesInner.

        The minimum player height in pixels. Leave this field blank to match any player height.

        :return: The min_height of this PretargetingConfigVideoPlayerSizesInner.
        :rtype: str
        """
        return self._min_height

    @min_height.setter
    def min_height(self, min_height):
        """Sets the min_height of this PretargetingConfigVideoPlayerSizesInner.

        The minimum player height in pixels. Leave this field blank to match any player height.

        :param min_height: The min_height of this PretargetingConfigVideoPlayerSizesInner.
        :type min_height: str
        """

        self._min_height = min_height

    @property
    def min_width(self):
        """Gets the min_width of this PretargetingConfigVideoPlayerSizesInner.

        The minimum player width in pixels. Leave this field blank to match any player width.

        :return: The min_width of this PretargetingConfigVideoPlayerSizesInner.
        :rtype: str
        """
        return self._min_width

    @min_width.setter
    def min_width(self, min_width):
        """Sets the min_width of this PretargetingConfigVideoPlayerSizesInner.

        The minimum player width in pixels. Leave this field blank to match any player width.

        :param min_width: The min_width of this PretargetingConfigVideoPlayerSizesInner.
        :type min_width: str
        """

        self._min_width = min_width
