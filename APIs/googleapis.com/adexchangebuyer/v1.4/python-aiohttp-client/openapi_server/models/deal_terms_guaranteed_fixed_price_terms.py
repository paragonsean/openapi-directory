# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deal_terms_guaranteed_fixed_price_terms_billing_info import DealTermsGuaranteedFixedPriceTermsBillingInfo
from openapi_server.models.price_per_buyer import PricePerBuyer
from openapi_server import util


class DealTermsGuaranteedFixedPriceTerms(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_info: DealTermsGuaranteedFixedPriceTermsBillingInfo=None, fixed_prices: List[PricePerBuyer]=None, guaranteed_impressions: str=None, guaranteed_looks: str=None, minimum_daily_looks: str=None):
        """DealTermsGuaranteedFixedPriceTerms - a model defined in OpenAPI

        :param billing_info: The billing_info of this DealTermsGuaranteedFixedPriceTerms.
        :param fixed_prices: The fixed_prices of this DealTermsGuaranteedFixedPriceTerms.
        :param guaranteed_impressions: The guaranteed_impressions of this DealTermsGuaranteedFixedPriceTerms.
        :param guaranteed_looks: The guaranteed_looks of this DealTermsGuaranteedFixedPriceTerms.
        :param minimum_daily_looks: The minimum_daily_looks of this DealTermsGuaranteedFixedPriceTerms.
        """
        self.openapi_types = {
            'billing_info': DealTermsGuaranteedFixedPriceTermsBillingInfo,
            'fixed_prices': List[PricePerBuyer],
            'guaranteed_impressions': str,
            'guaranteed_looks': str,
            'minimum_daily_looks': str
        }

        self.attribute_map = {
            'billing_info': 'billingInfo',
            'fixed_prices': 'fixedPrices',
            'guaranteed_impressions': 'guaranteedImpressions',
            'guaranteed_looks': 'guaranteedLooks',
            'minimum_daily_looks': 'minimumDailyLooks'
        }

        self._billing_info = billing_info
        self._fixed_prices = fixed_prices
        self._guaranteed_impressions = guaranteed_impressions
        self._guaranteed_looks = guaranteed_looks
        self._minimum_daily_looks = minimum_daily_looks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DealTermsGuaranteedFixedPriceTerms':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DealTermsGuaranteedFixedPriceTerms of this DealTermsGuaranteedFixedPriceTerms.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_info(self):
        """Gets the billing_info of this DealTermsGuaranteedFixedPriceTerms.


        :return: The billing_info of this DealTermsGuaranteedFixedPriceTerms.
        :rtype: DealTermsGuaranteedFixedPriceTermsBillingInfo
        """
        return self._billing_info

    @billing_info.setter
    def billing_info(self, billing_info):
        """Sets the billing_info of this DealTermsGuaranteedFixedPriceTerms.


        :param billing_info: The billing_info of this DealTermsGuaranteedFixedPriceTerms.
        :type billing_info: DealTermsGuaranteedFixedPriceTermsBillingInfo
        """

        self._billing_info = billing_info

    @property
    def fixed_prices(self):
        """Gets the fixed_prices of this DealTermsGuaranteedFixedPriceTerms.

        Fixed price for the specified buyer.

        :return: The fixed_prices of this DealTermsGuaranteedFixedPriceTerms.
        :rtype: List[PricePerBuyer]
        """
        return self._fixed_prices

    @fixed_prices.setter
    def fixed_prices(self, fixed_prices):
        """Sets the fixed_prices of this DealTermsGuaranteedFixedPriceTerms.

        Fixed price for the specified buyer.

        :param fixed_prices: The fixed_prices of this DealTermsGuaranteedFixedPriceTerms.
        :type fixed_prices: List[PricePerBuyer]
        """

        self._fixed_prices = fixed_prices

    @property
    def guaranteed_impressions(self):
        """Gets the guaranteed_impressions of this DealTermsGuaranteedFixedPriceTerms.

        Guaranteed impressions as a percentage. This is the percentage of guaranteed looks that the buyer is guaranteeing to buy.

        :return: The guaranteed_impressions of this DealTermsGuaranteedFixedPriceTerms.
        :rtype: str
        """
        return self._guaranteed_impressions

    @guaranteed_impressions.setter
    def guaranteed_impressions(self, guaranteed_impressions):
        """Sets the guaranteed_impressions of this DealTermsGuaranteedFixedPriceTerms.

        Guaranteed impressions as a percentage. This is the percentage of guaranteed looks that the buyer is guaranteeing to buy.

        :param guaranteed_impressions: The guaranteed_impressions of this DealTermsGuaranteedFixedPriceTerms.
        :type guaranteed_impressions: str
        """

        self._guaranteed_impressions = guaranteed_impressions

    @property
    def guaranteed_looks(self):
        """Gets the guaranteed_looks of this DealTermsGuaranteedFixedPriceTerms.

        Count of guaranteed looks. Required for deal, optional for product. For CPD deals, buyer changes to guaranteed_looks will be ignored.

        :return: The guaranteed_looks of this DealTermsGuaranteedFixedPriceTerms.
        :rtype: str
        """
        return self._guaranteed_looks

    @guaranteed_looks.setter
    def guaranteed_looks(self, guaranteed_looks):
        """Sets the guaranteed_looks of this DealTermsGuaranteedFixedPriceTerms.

        Count of guaranteed looks. Required for deal, optional for product. For CPD deals, buyer changes to guaranteed_looks will be ignored.

        :param guaranteed_looks: The guaranteed_looks of this DealTermsGuaranteedFixedPriceTerms.
        :type guaranteed_looks: str
        """

        self._guaranteed_looks = guaranteed_looks

    @property
    def minimum_daily_looks(self):
        """Gets the minimum_daily_looks of this DealTermsGuaranteedFixedPriceTerms.

        Count of minimum daily looks for a CPD deal. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks.

        :return: The minimum_daily_looks of this DealTermsGuaranteedFixedPriceTerms.
        :rtype: str
        """
        return self._minimum_daily_looks

    @minimum_daily_looks.setter
    def minimum_daily_looks(self, minimum_daily_looks):
        """Sets the minimum_daily_looks of this DealTermsGuaranteedFixedPriceTerms.

        Count of minimum daily looks for a CPD deal. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks.

        :param minimum_daily_looks: The minimum_daily_looks of this DealTermsGuaranteedFixedPriceTerms.
        :type minimum_daily_looks: str
        """

        self._minimum_daily_looks = minimum_daily_looks
