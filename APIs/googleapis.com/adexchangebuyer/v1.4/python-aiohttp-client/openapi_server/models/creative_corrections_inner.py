# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.creative_corrections_inner_contexts_inner import CreativeCorrectionsInnerContextsInner
from openapi_server import util


class CreativeCorrectionsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contexts: List[CreativeCorrectionsInnerContextsInner]=None, details: List[str]=None, reason: str=None):
        """CreativeCorrectionsInner - a model defined in OpenAPI

        :param contexts: The contexts of this CreativeCorrectionsInner.
        :param details: The details of this CreativeCorrectionsInner.
        :param reason: The reason of this CreativeCorrectionsInner.
        """
        self.openapi_types = {
            'contexts': List[CreativeCorrectionsInnerContextsInner],
            'details': List[str],
            'reason': str
        }

        self.attribute_map = {
            'contexts': 'contexts',
            'details': 'details',
            'reason': 'reason'
        }

        self._contexts = contexts
        self._details = details
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreativeCorrectionsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Creative_corrections_inner of this CreativeCorrectionsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contexts(self):
        """Gets the contexts of this CreativeCorrectionsInner.

        All known serving contexts containing serving status information.

        :return: The contexts of this CreativeCorrectionsInner.
        :rtype: List[CreativeCorrectionsInnerContextsInner]
        """
        return self._contexts

    @contexts.setter
    def contexts(self, contexts):
        """Sets the contexts of this CreativeCorrectionsInner.

        All known serving contexts containing serving status information.

        :param contexts: The contexts of this CreativeCorrectionsInner.
        :type contexts: List[CreativeCorrectionsInnerContextsInner]
        """

        self._contexts = contexts

    @property
    def details(self):
        """Gets the details of this CreativeCorrectionsInner.

        Additional details about the correction.

        :return: The details of this CreativeCorrectionsInner.
        :rtype: List[str]
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this CreativeCorrectionsInner.

        Additional details about the correction.

        :param details: The details of this CreativeCorrectionsInner.
        :type details: List[str]
        """

        self._details = details

    @property
    def reason(self):
        """Gets the reason of this CreativeCorrectionsInner.

        The type of correction that was applied to the creative.

        :return: The reason of this CreativeCorrectionsInner.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this CreativeCorrectionsInner.

        The type of correction that was applied to the creative.

        :param reason: The reason of this CreativeCorrectionsInner.
        :type reason: str
        """

        self._reason = reason
