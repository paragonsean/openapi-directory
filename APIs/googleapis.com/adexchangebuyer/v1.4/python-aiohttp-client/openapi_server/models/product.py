# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.buyer import Buyer
from openapi_server.models.contact_information import ContactInformation
from openapi_server.models.deal_terms import DealTerms
from openapi_server.models.delivery_control import DeliveryControl
from openapi_server.models.marketplace_label import MarketplaceLabel
from openapi_server.models.publisher_provided_forecast import PublisherProvidedForecast
from openapi_server.models.seller import Seller
from openapi_server.models.shared_targeting import SharedTargeting
from openapi_server import util


class Product(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billed_buyer: Buyer=None, buyer: Buyer=None, creation_time_ms: str=None, creator_contacts: List[ContactInformation]=None, creator_role: str=None, delivery_control: DeliveryControl=None, flight_end_time_ms: str=None, flight_start_time_ms: str=None, has_creator_signed_off: bool=None, inventory_source: str=None, kind: str='adexchangebuyer#product', labels: List[MarketplaceLabel]=None, last_update_time_ms: str=None, legacy_offer_id: str=None, marketplace_publisher_profile_id: str=None, name: str=None, private_auction_id: str=None, product_id: str=None, publisher_profile_id: str=None, publisher_provided_forecast: PublisherProvidedForecast=None, revision_number: str=None, seller: Seller=None, shared_targetings: List[SharedTargeting]=None, state: str=None, syndication_product: str=None, terms: DealTerms=None, web_property_code: str=None):
        """Product - a model defined in OpenAPI

        :param billed_buyer: The billed_buyer of this Product.
        :param buyer: The buyer of this Product.
        :param creation_time_ms: The creation_time_ms of this Product.
        :param creator_contacts: The creator_contacts of this Product.
        :param creator_role: The creator_role of this Product.
        :param delivery_control: The delivery_control of this Product.
        :param flight_end_time_ms: The flight_end_time_ms of this Product.
        :param flight_start_time_ms: The flight_start_time_ms of this Product.
        :param has_creator_signed_off: The has_creator_signed_off of this Product.
        :param inventory_source: The inventory_source of this Product.
        :param kind: The kind of this Product.
        :param labels: The labels of this Product.
        :param last_update_time_ms: The last_update_time_ms of this Product.
        :param legacy_offer_id: The legacy_offer_id of this Product.
        :param marketplace_publisher_profile_id: The marketplace_publisher_profile_id of this Product.
        :param name: The name of this Product.
        :param private_auction_id: The private_auction_id of this Product.
        :param product_id: The product_id of this Product.
        :param publisher_profile_id: The publisher_profile_id of this Product.
        :param publisher_provided_forecast: The publisher_provided_forecast of this Product.
        :param revision_number: The revision_number of this Product.
        :param seller: The seller of this Product.
        :param shared_targetings: The shared_targetings of this Product.
        :param state: The state of this Product.
        :param syndication_product: The syndication_product of this Product.
        :param terms: The terms of this Product.
        :param web_property_code: The web_property_code of this Product.
        """
        self.openapi_types = {
            'billed_buyer': Buyer,
            'buyer': Buyer,
            'creation_time_ms': str,
            'creator_contacts': List[ContactInformation],
            'creator_role': str,
            'delivery_control': DeliveryControl,
            'flight_end_time_ms': str,
            'flight_start_time_ms': str,
            'has_creator_signed_off': bool,
            'inventory_source': str,
            'kind': str,
            'labels': List[MarketplaceLabel],
            'last_update_time_ms': str,
            'legacy_offer_id': str,
            'marketplace_publisher_profile_id': str,
            'name': str,
            'private_auction_id': str,
            'product_id': str,
            'publisher_profile_id': str,
            'publisher_provided_forecast': PublisherProvidedForecast,
            'revision_number': str,
            'seller': Seller,
            'shared_targetings': List[SharedTargeting],
            'state': str,
            'syndication_product': str,
            'terms': DealTerms,
            'web_property_code': str
        }

        self.attribute_map = {
            'billed_buyer': 'billedBuyer',
            'buyer': 'buyer',
            'creation_time_ms': 'creationTimeMs',
            'creator_contacts': 'creatorContacts',
            'creator_role': 'creatorRole',
            'delivery_control': 'deliveryControl',
            'flight_end_time_ms': 'flightEndTimeMs',
            'flight_start_time_ms': 'flightStartTimeMs',
            'has_creator_signed_off': 'hasCreatorSignedOff',
            'inventory_source': 'inventorySource',
            'kind': 'kind',
            'labels': 'labels',
            'last_update_time_ms': 'lastUpdateTimeMs',
            'legacy_offer_id': 'legacyOfferId',
            'marketplace_publisher_profile_id': 'marketplacePublisherProfileId',
            'name': 'name',
            'private_auction_id': 'privateAuctionId',
            'product_id': 'productId',
            'publisher_profile_id': 'publisherProfileId',
            'publisher_provided_forecast': 'publisherProvidedForecast',
            'revision_number': 'revisionNumber',
            'seller': 'seller',
            'shared_targetings': 'sharedTargetings',
            'state': 'state',
            'syndication_product': 'syndicationProduct',
            'terms': 'terms',
            'web_property_code': 'webPropertyCode'
        }

        self._billed_buyer = billed_buyer
        self._buyer = buyer
        self._creation_time_ms = creation_time_ms
        self._creator_contacts = creator_contacts
        self._creator_role = creator_role
        self._delivery_control = delivery_control
        self._flight_end_time_ms = flight_end_time_ms
        self._flight_start_time_ms = flight_start_time_ms
        self._has_creator_signed_off = has_creator_signed_off
        self._inventory_source = inventory_source
        self._kind = kind
        self._labels = labels
        self._last_update_time_ms = last_update_time_ms
        self._legacy_offer_id = legacy_offer_id
        self._marketplace_publisher_profile_id = marketplace_publisher_profile_id
        self._name = name
        self._private_auction_id = private_auction_id
        self._product_id = product_id
        self._publisher_profile_id = publisher_profile_id
        self._publisher_provided_forecast = publisher_provided_forecast
        self._revision_number = revision_number
        self._seller = seller
        self._shared_targetings = shared_targetings
        self._state = state
        self._syndication_product = syndication_product
        self._terms = terms
        self._web_property_code = web_property_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Product':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Product of this Product.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billed_buyer(self):
        """Gets the billed_buyer of this Product.


        :return: The billed_buyer of this Product.
        :rtype: Buyer
        """
        return self._billed_buyer

    @billed_buyer.setter
    def billed_buyer(self, billed_buyer):
        """Sets the billed_buyer of this Product.


        :param billed_buyer: The billed_buyer of this Product.
        :type billed_buyer: Buyer
        """

        self._billed_buyer = billed_buyer

    @property
    def buyer(self):
        """Gets the buyer of this Product.


        :return: The buyer of this Product.
        :rtype: Buyer
        """
        return self._buyer

    @buyer.setter
    def buyer(self, buyer):
        """Sets the buyer of this Product.


        :param buyer: The buyer of this Product.
        :type buyer: Buyer
        """

        self._buyer = buyer

    @property
    def creation_time_ms(self):
        """Gets the creation_time_ms of this Product.

        Creation time in ms. since epoch (readonly)

        :return: The creation_time_ms of this Product.
        :rtype: str
        """
        return self._creation_time_ms

    @creation_time_ms.setter
    def creation_time_ms(self, creation_time_ms):
        """Sets the creation_time_ms of this Product.

        Creation time in ms. since epoch (readonly)

        :param creation_time_ms: The creation_time_ms of this Product.
        :type creation_time_ms: str
        """

        self._creation_time_ms = creation_time_ms

    @property
    def creator_contacts(self):
        """Gets the creator_contacts of this Product.

        Optional contact information for the creator of this product. (buyer-readonly)

        :return: The creator_contacts of this Product.
        :rtype: List[ContactInformation]
        """
        return self._creator_contacts

    @creator_contacts.setter
    def creator_contacts(self, creator_contacts):
        """Sets the creator_contacts of this Product.

        Optional contact information for the creator of this product. (buyer-readonly)

        :param creator_contacts: The creator_contacts of this Product.
        :type creator_contacts: List[ContactInformation]
        """

        self._creator_contacts = creator_contacts

    @property
    def creator_role(self):
        """Gets the creator_role of this Product.

        The role that created the offer. Set to BUYER for buyer initiated offers.

        :return: The creator_role of this Product.
        :rtype: str
        """
        return self._creator_role

    @creator_role.setter
    def creator_role(self, creator_role):
        """Sets the creator_role of this Product.

        The role that created the offer. Set to BUYER for buyer initiated offers.

        :param creator_role: The creator_role of this Product.
        :type creator_role: str
        """

        self._creator_role = creator_role

    @property
    def delivery_control(self):
        """Gets the delivery_control of this Product.


        :return: The delivery_control of this Product.
        :rtype: DeliveryControl
        """
        return self._delivery_control

    @delivery_control.setter
    def delivery_control(self, delivery_control):
        """Sets the delivery_control of this Product.


        :param delivery_control: The delivery_control of this Product.
        :type delivery_control: DeliveryControl
        """

        self._delivery_control = delivery_control

    @property
    def flight_end_time_ms(self):
        """Gets the flight_end_time_ms of this Product.

        The proposed end time for the deal (ms since epoch) (buyer-readonly)

        :return: The flight_end_time_ms of this Product.
        :rtype: str
        """
        return self._flight_end_time_ms

    @flight_end_time_ms.setter
    def flight_end_time_ms(self, flight_end_time_ms):
        """Sets the flight_end_time_ms of this Product.

        The proposed end time for the deal (ms since epoch) (buyer-readonly)

        :param flight_end_time_ms: The flight_end_time_ms of this Product.
        :type flight_end_time_ms: str
        """

        self._flight_end_time_ms = flight_end_time_ms

    @property
    def flight_start_time_ms(self):
        """Gets the flight_start_time_ms of this Product.

        Inventory availability dates. (times are in ms since epoch) The granularity is generally in the order of seconds. (buyer-readonly)

        :return: The flight_start_time_ms of this Product.
        :rtype: str
        """
        return self._flight_start_time_ms

    @flight_start_time_ms.setter
    def flight_start_time_ms(self, flight_start_time_ms):
        """Sets the flight_start_time_ms of this Product.

        Inventory availability dates. (times are in ms since epoch) The granularity is generally in the order of seconds. (buyer-readonly)

        :param flight_start_time_ms: The flight_start_time_ms of this Product.
        :type flight_start_time_ms: str
        """

        self._flight_start_time_ms = flight_start_time_ms

    @property
    def has_creator_signed_off(self):
        """Gets the has_creator_signed_off of this Product.

        If the creator has already signed off on the product, then the buyer can finalize the deal by accepting the product as is. When copying to a proposal, if any of the terms are changed, then auto_finalize is automatically set to false.

        :return: The has_creator_signed_off of this Product.
        :rtype: bool
        """
        return self._has_creator_signed_off

    @has_creator_signed_off.setter
    def has_creator_signed_off(self, has_creator_signed_off):
        """Sets the has_creator_signed_off of this Product.

        If the creator has already signed off on the product, then the buyer can finalize the deal by accepting the product as is. When copying to a proposal, if any of the terms are changed, then auto_finalize is automatically set to false.

        :param has_creator_signed_off: The has_creator_signed_off of this Product.
        :type has_creator_signed_off: bool
        """

        self._has_creator_signed_off = has_creator_signed_off

    @property
    def inventory_source(self):
        """Gets the inventory_source of this Product.

        What exchange will provide this inventory (readonly, except on create).

        :return: The inventory_source of this Product.
        :rtype: str
        """
        return self._inventory_source

    @inventory_source.setter
    def inventory_source(self, inventory_source):
        """Sets the inventory_source of this Product.

        What exchange will provide this inventory (readonly, except on create).

        :param inventory_source: The inventory_source of this Product.
        :type inventory_source: str
        """

        self._inventory_source = inventory_source

    @property
    def kind(self):
        """Gets the kind of this Product.

        Identifies what kind of resource this is. Value: the fixed string \"adexchangebuyer#product\".

        :return: The kind of this Product.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Product.

        Identifies what kind of resource this is. Value: the fixed string \"adexchangebuyer#product\".

        :param kind: The kind of this Product.
        :type kind: str
        """

        self._kind = kind

    @property
    def labels(self):
        """Gets the labels of this Product.

        Optional List of labels for the product (optional, buyer-readonly).

        :return: The labels of this Product.
        :rtype: List[MarketplaceLabel]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this Product.

        Optional List of labels for the product (optional, buyer-readonly).

        :param labels: The labels of this Product.
        :type labels: List[MarketplaceLabel]
        """

        self._labels = labels

    @property
    def last_update_time_ms(self):
        """Gets the last_update_time_ms of this Product.

        Time of last update in ms. since epoch (readonly)

        :return: The last_update_time_ms of this Product.
        :rtype: str
        """
        return self._last_update_time_ms

    @last_update_time_ms.setter
    def last_update_time_ms(self, last_update_time_ms):
        """Sets the last_update_time_ms of this Product.

        Time of last update in ms. since epoch (readonly)

        :param last_update_time_ms: The last_update_time_ms of this Product.
        :type last_update_time_ms: str
        """

        self._last_update_time_ms = last_update_time_ms

    @property
    def legacy_offer_id(self):
        """Gets the legacy_offer_id of this Product.

        Optional legacy offer id if this offer is a preferred deal offer.

        :return: The legacy_offer_id of this Product.
        :rtype: str
        """
        return self._legacy_offer_id

    @legacy_offer_id.setter
    def legacy_offer_id(self, legacy_offer_id):
        """Sets the legacy_offer_id of this Product.

        Optional legacy offer id if this offer is a preferred deal offer.

        :param legacy_offer_id: The legacy_offer_id of this Product.
        :type legacy_offer_id: str
        """

        self._legacy_offer_id = legacy_offer_id

    @property
    def marketplace_publisher_profile_id(self):
        """Gets the marketplace_publisher_profile_id of this Product.

        Marketplace publisher profile Id. This Id differs from the regular publisher_profile_id in that 1. This is a new id, the old Id will be deprecated in 2017. 2. This id uniquely identifies a publisher profile by itself.

        :return: The marketplace_publisher_profile_id of this Product.
        :rtype: str
        """
        return self._marketplace_publisher_profile_id

    @marketplace_publisher_profile_id.setter
    def marketplace_publisher_profile_id(self, marketplace_publisher_profile_id):
        """Sets the marketplace_publisher_profile_id of this Product.

        Marketplace publisher profile Id. This Id differs from the regular publisher_profile_id in that 1. This is a new id, the old Id will be deprecated in 2017. 2. This id uniquely identifies a publisher profile by itself.

        :param marketplace_publisher_profile_id: The marketplace_publisher_profile_id of this Product.
        :type marketplace_publisher_profile_id: str
        """

        self._marketplace_publisher_profile_id = marketplace_publisher_profile_id

    @property
    def name(self):
        """Gets the name of this Product.

        The name for this product as set by the seller. (buyer-readonly)

        :return: The name of this Product.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Product.

        The name for this product as set by the seller. (buyer-readonly)

        :param name: The name of this Product.
        :type name: str
        """

        self._name = name

    @property
    def private_auction_id(self):
        """Gets the private_auction_id of this Product.

        Optional private auction id if this offer is a private auction offer.

        :return: The private_auction_id of this Product.
        :rtype: str
        """
        return self._private_auction_id

    @private_auction_id.setter
    def private_auction_id(self, private_auction_id):
        """Sets the private_auction_id of this Product.

        Optional private auction id if this offer is a private auction offer.

        :param private_auction_id: The private_auction_id of this Product.
        :type private_auction_id: str
        """

        self._private_auction_id = private_auction_id

    @property
    def product_id(self):
        """Gets the product_id of this Product.

        The unique id for the product (readonly)

        :return: The product_id of this Product.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this Product.

        The unique id for the product (readonly)

        :param product_id: The product_id of this Product.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def publisher_profile_id(self):
        """Gets the publisher_profile_id of this Product.

        Id of the publisher profile for a given seller. A (seller.account_id, publisher_profile_id) pair uniquely identifies a publisher profile. Buyers can call the PublisherProfiles::List endpoint to get a list of publisher profiles for a given seller.

        :return: The publisher_profile_id of this Product.
        :rtype: str
        """
        return self._publisher_profile_id

    @publisher_profile_id.setter
    def publisher_profile_id(self, publisher_profile_id):
        """Sets the publisher_profile_id of this Product.

        Id of the publisher profile for a given seller. A (seller.account_id, publisher_profile_id) pair uniquely identifies a publisher profile. Buyers can call the PublisherProfiles::List endpoint to get a list of publisher profiles for a given seller.

        :param publisher_profile_id: The publisher_profile_id of this Product.
        :type publisher_profile_id: str
        """

        self._publisher_profile_id = publisher_profile_id

    @property
    def publisher_provided_forecast(self):
        """Gets the publisher_provided_forecast of this Product.


        :return: The publisher_provided_forecast of this Product.
        :rtype: PublisherProvidedForecast
        """
        return self._publisher_provided_forecast

    @publisher_provided_forecast.setter
    def publisher_provided_forecast(self, publisher_provided_forecast):
        """Sets the publisher_provided_forecast of this Product.


        :param publisher_provided_forecast: The publisher_provided_forecast of this Product.
        :type publisher_provided_forecast: PublisherProvidedForecast
        """

        self._publisher_provided_forecast = publisher_provided_forecast

    @property
    def revision_number(self):
        """Gets the revision_number of this Product.

        The revision number of the product. (readonly)

        :return: The revision_number of this Product.
        :rtype: str
        """
        return self._revision_number

    @revision_number.setter
    def revision_number(self, revision_number):
        """Sets the revision_number of this Product.

        The revision number of the product. (readonly)

        :param revision_number: The revision_number of this Product.
        :type revision_number: str
        """

        self._revision_number = revision_number

    @property
    def seller(self):
        """Gets the seller of this Product.


        :return: The seller of this Product.
        :rtype: Seller
        """
        return self._seller

    @seller.setter
    def seller(self, seller):
        """Sets the seller of this Product.


        :param seller: The seller of this Product.
        :type seller: Seller
        """

        self._seller = seller

    @property
    def shared_targetings(self):
        """Gets the shared_targetings of this Product.

        Targeting that is shared between the buyer and the seller. Each targeting criteria has a specified key and for each key there is a list of inclusion value or exclusion values. (buyer-readonly)

        :return: The shared_targetings of this Product.
        :rtype: List[SharedTargeting]
        """
        return self._shared_targetings

    @shared_targetings.setter
    def shared_targetings(self, shared_targetings):
        """Sets the shared_targetings of this Product.

        Targeting that is shared between the buyer and the seller. Each targeting criteria has a specified key and for each key there is a list of inclusion value or exclusion values. (buyer-readonly)

        :param shared_targetings: The shared_targetings of this Product.
        :type shared_targetings: List[SharedTargeting]
        """

        self._shared_targetings = shared_targetings

    @property
    def state(self):
        """Gets the state of this Product.

        The state of the product. (buyer-readonly)

        :return: The state of this Product.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Product.

        The state of the product. (buyer-readonly)

        :param state: The state of this Product.
        :type state: str
        """

        self._state = state

    @property
    def syndication_product(self):
        """Gets the syndication_product of this Product.

        The syndication product associated with the deal. (readonly, except on create)

        :return: The syndication_product of this Product.
        :rtype: str
        """
        return self._syndication_product

    @syndication_product.setter
    def syndication_product(self, syndication_product):
        """Sets the syndication_product of this Product.

        The syndication product associated with the deal. (readonly, except on create)

        :param syndication_product: The syndication_product of this Product.
        :type syndication_product: str
        """

        self._syndication_product = syndication_product

    @property
    def terms(self):
        """Gets the terms of this Product.


        :return: The terms of this Product.
        :rtype: DealTerms
        """
        return self._terms

    @terms.setter
    def terms(self, terms):
        """Sets the terms of this Product.


        :param terms: The terms of this Product.
        :type terms: DealTerms
        """

        self._terms = terms

    @property
    def web_property_code(self):
        """Gets the web_property_code of this Product.

        The web property code for the seller. This field is meant to be copied over as is when creating deals.

        :return: The web_property_code of this Product.
        :rtype: str
        """
        return self._web_property_code

    @web_property_code.setter
    def web_property_code(self, web_property_code):
        """Sets the web_property_code of this Product.

        The web property code for the seller. This field is meant to be copied over as is when creating deals.

        :param web_property_code: The web_property_code of this Product.
        :type web_property_code: str
        """

        self._web_property_code = web_property_code
