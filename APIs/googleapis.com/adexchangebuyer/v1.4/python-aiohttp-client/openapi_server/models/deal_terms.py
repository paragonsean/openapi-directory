# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deal_terms_guaranteed_fixed_price_terms import DealTermsGuaranteedFixedPriceTerms
from openapi_server.models.deal_terms_non_guaranteed_auction_terms import DealTermsNonGuaranteedAuctionTerms
from openapi_server.models.deal_terms_non_guaranteed_fixed_price_terms import DealTermsNonGuaranteedFixedPriceTerms
from openapi_server.models.deal_terms_rubicon_non_guaranteed_terms import DealTermsRubiconNonGuaranteedTerms
from openapi_server.models.price import Price
from openapi_server import util


class DealTerms(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, branding_type: str=None, cross_listed_external_deal_id_type: str=None, description: str=None, estimated_gross_spend: Price=None, estimated_impressions_per_day: str=None, guaranteed_fixed_price_terms: DealTermsGuaranteedFixedPriceTerms=None, non_guaranteed_auction_terms: DealTermsNonGuaranteedAuctionTerms=None, non_guaranteed_fixed_price_terms: DealTermsNonGuaranteedFixedPriceTerms=None, rubicon_non_guaranteed_terms: DealTermsRubiconNonGuaranteedTerms=None, seller_time_zone: str=None):
        """DealTerms - a model defined in OpenAPI

        :param branding_type: The branding_type of this DealTerms.
        :param cross_listed_external_deal_id_type: The cross_listed_external_deal_id_type of this DealTerms.
        :param description: The description of this DealTerms.
        :param estimated_gross_spend: The estimated_gross_spend of this DealTerms.
        :param estimated_impressions_per_day: The estimated_impressions_per_day of this DealTerms.
        :param guaranteed_fixed_price_terms: The guaranteed_fixed_price_terms of this DealTerms.
        :param non_guaranteed_auction_terms: The non_guaranteed_auction_terms of this DealTerms.
        :param non_guaranteed_fixed_price_terms: The non_guaranteed_fixed_price_terms of this DealTerms.
        :param rubicon_non_guaranteed_terms: The rubicon_non_guaranteed_terms of this DealTerms.
        :param seller_time_zone: The seller_time_zone of this DealTerms.
        """
        self.openapi_types = {
            'branding_type': str,
            'cross_listed_external_deal_id_type': str,
            'description': str,
            'estimated_gross_spend': Price,
            'estimated_impressions_per_day': str,
            'guaranteed_fixed_price_terms': DealTermsGuaranteedFixedPriceTerms,
            'non_guaranteed_auction_terms': DealTermsNonGuaranteedAuctionTerms,
            'non_guaranteed_fixed_price_terms': DealTermsNonGuaranteedFixedPriceTerms,
            'rubicon_non_guaranteed_terms': DealTermsRubiconNonGuaranteedTerms,
            'seller_time_zone': str
        }

        self.attribute_map = {
            'branding_type': 'brandingType',
            'cross_listed_external_deal_id_type': 'crossListedExternalDealIdType',
            'description': 'description',
            'estimated_gross_spend': 'estimatedGrossSpend',
            'estimated_impressions_per_day': 'estimatedImpressionsPerDay',
            'guaranteed_fixed_price_terms': 'guaranteedFixedPriceTerms',
            'non_guaranteed_auction_terms': 'nonGuaranteedAuctionTerms',
            'non_guaranteed_fixed_price_terms': 'nonGuaranteedFixedPriceTerms',
            'rubicon_non_guaranteed_terms': 'rubiconNonGuaranteedTerms',
            'seller_time_zone': 'sellerTimeZone'
        }

        self._branding_type = branding_type
        self._cross_listed_external_deal_id_type = cross_listed_external_deal_id_type
        self._description = description
        self._estimated_gross_spend = estimated_gross_spend
        self._estimated_impressions_per_day = estimated_impressions_per_day
        self._guaranteed_fixed_price_terms = guaranteed_fixed_price_terms
        self._non_guaranteed_auction_terms = non_guaranteed_auction_terms
        self._non_guaranteed_fixed_price_terms = non_guaranteed_fixed_price_terms
        self._rubicon_non_guaranteed_terms = rubicon_non_guaranteed_terms
        self._seller_time_zone = seller_time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DealTerms':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DealTerms of this DealTerms.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def branding_type(self):
        """Gets the branding_type of this DealTerms.

        Visibility of the URL in bid requests.

        :return: The branding_type of this DealTerms.
        :rtype: str
        """
        return self._branding_type

    @branding_type.setter
    def branding_type(self, branding_type):
        """Sets the branding_type of this DealTerms.

        Visibility of the URL in bid requests.

        :param branding_type: The branding_type of this DealTerms.
        :type branding_type: str
        """

        self._branding_type = branding_type

    @property
    def cross_listed_external_deal_id_type(self):
        """Gets the cross_listed_external_deal_id_type of this DealTerms.

        Indicates that this ExternalDealId exists under at least two different AdxInventoryDeals. Currently, the only case that the same ExternalDealId will exist is programmatic cross sell case.

        :return: The cross_listed_external_deal_id_type of this DealTerms.
        :rtype: str
        """
        return self._cross_listed_external_deal_id_type

    @cross_listed_external_deal_id_type.setter
    def cross_listed_external_deal_id_type(self, cross_listed_external_deal_id_type):
        """Sets the cross_listed_external_deal_id_type of this DealTerms.

        Indicates that this ExternalDealId exists under at least two different AdxInventoryDeals. Currently, the only case that the same ExternalDealId will exist is programmatic cross sell case.

        :param cross_listed_external_deal_id_type: The cross_listed_external_deal_id_type of this DealTerms.
        :type cross_listed_external_deal_id_type: str
        """

        self._cross_listed_external_deal_id_type = cross_listed_external_deal_id_type

    @property
    def description(self):
        """Gets the description of this DealTerms.

        Description for the proposed terms of the deal.

        :return: The description of this DealTerms.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DealTerms.

        Description for the proposed terms of the deal.

        :param description: The description of this DealTerms.
        :type description: str
        """

        self._description = description

    @property
    def estimated_gross_spend(self):
        """Gets the estimated_gross_spend of this DealTerms.


        :return: The estimated_gross_spend of this DealTerms.
        :rtype: Price
        """
        return self._estimated_gross_spend

    @estimated_gross_spend.setter
    def estimated_gross_spend(self, estimated_gross_spend):
        """Sets the estimated_gross_spend of this DealTerms.


        :param estimated_gross_spend: The estimated_gross_spend of this DealTerms.
        :type estimated_gross_spend: Price
        """

        self._estimated_gross_spend = estimated_gross_spend

    @property
    def estimated_impressions_per_day(self):
        """Gets the estimated_impressions_per_day of this DealTerms.

        Non-binding estimate of the impressions served per day Can be set by buyer or seller.

        :return: The estimated_impressions_per_day of this DealTerms.
        :rtype: str
        """
        return self._estimated_impressions_per_day

    @estimated_impressions_per_day.setter
    def estimated_impressions_per_day(self, estimated_impressions_per_day):
        """Sets the estimated_impressions_per_day of this DealTerms.

        Non-binding estimate of the impressions served per day Can be set by buyer or seller.

        :param estimated_impressions_per_day: The estimated_impressions_per_day of this DealTerms.
        :type estimated_impressions_per_day: str
        """

        self._estimated_impressions_per_day = estimated_impressions_per_day

    @property
    def guaranteed_fixed_price_terms(self):
        """Gets the guaranteed_fixed_price_terms of this DealTerms.


        :return: The guaranteed_fixed_price_terms of this DealTerms.
        :rtype: DealTermsGuaranteedFixedPriceTerms
        """
        return self._guaranteed_fixed_price_terms

    @guaranteed_fixed_price_terms.setter
    def guaranteed_fixed_price_terms(self, guaranteed_fixed_price_terms):
        """Sets the guaranteed_fixed_price_terms of this DealTerms.


        :param guaranteed_fixed_price_terms: The guaranteed_fixed_price_terms of this DealTerms.
        :type guaranteed_fixed_price_terms: DealTermsGuaranteedFixedPriceTerms
        """

        self._guaranteed_fixed_price_terms = guaranteed_fixed_price_terms

    @property
    def non_guaranteed_auction_terms(self):
        """Gets the non_guaranteed_auction_terms of this DealTerms.


        :return: The non_guaranteed_auction_terms of this DealTerms.
        :rtype: DealTermsNonGuaranteedAuctionTerms
        """
        return self._non_guaranteed_auction_terms

    @non_guaranteed_auction_terms.setter
    def non_guaranteed_auction_terms(self, non_guaranteed_auction_terms):
        """Sets the non_guaranteed_auction_terms of this DealTerms.


        :param non_guaranteed_auction_terms: The non_guaranteed_auction_terms of this DealTerms.
        :type non_guaranteed_auction_terms: DealTermsNonGuaranteedAuctionTerms
        """

        self._non_guaranteed_auction_terms = non_guaranteed_auction_terms

    @property
    def non_guaranteed_fixed_price_terms(self):
        """Gets the non_guaranteed_fixed_price_terms of this DealTerms.


        :return: The non_guaranteed_fixed_price_terms of this DealTerms.
        :rtype: DealTermsNonGuaranteedFixedPriceTerms
        """
        return self._non_guaranteed_fixed_price_terms

    @non_guaranteed_fixed_price_terms.setter
    def non_guaranteed_fixed_price_terms(self, non_guaranteed_fixed_price_terms):
        """Sets the non_guaranteed_fixed_price_terms of this DealTerms.


        :param non_guaranteed_fixed_price_terms: The non_guaranteed_fixed_price_terms of this DealTerms.
        :type non_guaranteed_fixed_price_terms: DealTermsNonGuaranteedFixedPriceTerms
        """

        self._non_guaranteed_fixed_price_terms = non_guaranteed_fixed_price_terms

    @property
    def rubicon_non_guaranteed_terms(self):
        """Gets the rubicon_non_guaranteed_terms of this DealTerms.


        :return: The rubicon_non_guaranteed_terms of this DealTerms.
        :rtype: DealTermsRubiconNonGuaranteedTerms
        """
        return self._rubicon_non_guaranteed_terms

    @rubicon_non_guaranteed_terms.setter
    def rubicon_non_guaranteed_terms(self, rubicon_non_guaranteed_terms):
        """Sets the rubicon_non_guaranteed_terms of this DealTerms.


        :param rubicon_non_guaranteed_terms: The rubicon_non_guaranteed_terms of this DealTerms.
        :type rubicon_non_guaranteed_terms: DealTermsRubiconNonGuaranteedTerms
        """

        self._rubicon_non_guaranteed_terms = rubicon_non_guaranteed_terms

    @property
    def seller_time_zone(self):
        """Gets the seller_time_zone of this DealTerms.

        For deals with Cost Per Day billing, defines the timezone used to mark the boundaries of a day (buyer-readonly)

        :return: The seller_time_zone of this DealTerms.
        :rtype: str
        """
        return self._seller_time_zone

    @seller_time_zone.setter
    def seller_time_zone(self, seller_time_zone):
        """Sets the seller_time_zone of this DealTerms.

        For deals with Cost Per Day billing, defines the timezone used to mark the boundaries of a day (buyer-readonly)

        :param seller_time_zone: The seller_time_zone of this DealTerms.
        :type seller_time_zone: str
        """

        self._seller_time_zone = seller_time_zone
