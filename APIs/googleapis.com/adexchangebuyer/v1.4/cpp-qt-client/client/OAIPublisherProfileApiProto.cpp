/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublisherProfileApiProto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublisherProfileApiProto::OAIPublisherProfileApiProto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublisherProfileApiProto::OAIPublisherProfileApiProto() {
    this->initializeModel();
}

OAIPublisherProfileApiProto::~OAIPublisherProfileApiProto() {}

void OAIPublisherProfileApiProto::initializeModel() {

    m_audience_isSet = false;
    m_audience_isValid = false;

    m_buyer_pitch_statement_isSet = false;
    m_buyer_pitch_statement_isValid = false;

    m_direct_contact_isSet = false;
    m_direct_contact_isValid = false;

    m_exchange_isSet = false;
    m_exchange_isValid = false;

    m_forecast_inventory_isSet = false;
    m_forecast_inventory_isValid = false;

    m_google_plus_link_isSet = false;
    m_google_plus_link_isValid = false;

    m_is_parent_isSet = false;
    m_is_parent_isValid = false;

    m_is_published_isSet = false;
    m_is_published_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_logo_url_isSet = false;
    m_logo_url_isValid = false;

    m_media_kit_link_isSet = false;
    m_media_kit_link_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_overview_isSet = false;
    m_overview_isValid = false;

    m_profile_id_isSet = false;
    m_profile_id_isValid = false;

    m_programmatic_contact_isSet = false;
    m_programmatic_contact_isValid = false;

    m_publisher_app_ids_isSet = false;
    m_publisher_app_ids_isValid = false;

    m_publisher_apps_isSet = false;
    m_publisher_apps_isValid = false;

    m_publisher_domains_isSet = false;
    m_publisher_domains_isValid = false;

    m_publisher_profile_id_isSet = false;
    m_publisher_profile_id_isValid = false;

    m_publisher_provided_forecast_isSet = false;
    m_publisher_provided_forecast_isValid = false;

    m_rate_card_info_link_isSet = false;
    m_rate_card_info_link_isValid = false;

    m_sample_page_link_isSet = false;
    m_sample_page_link_isValid = false;

    m_seller_isSet = false;
    m_seller_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_top_headlines_isSet = false;
    m_top_headlines_isValid = false;
}

void OAIPublisherProfileApiProto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublisherProfileApiProto::fromJsonObject(QJsonObject json) {

    m_audience_isValid = ::OpenAPI::fromJsonValue(m_audience, json[QString("audience")]);
    m_audience_isSet = !json[QString("audience")].isNull() && m_audience_isValid;

    m_buyer_pitch_statement_isValid = ::OpenAPI::fromJsonValue(m_buyer_pitch_statement, json[QString("buyerPitchStatement")]);
    m_buyer_pitch_statement_isSet = !json[QString("buyerPitchStatement")].isNull() && m_buyer_pitch_statement_isValid;

    m_direct_contact_isValid = ::OpenAPI::fromJsonValue(m_direct_contact, json[QString("directContact")]);
    m_direct_contact_isSet = !json[QString("directContact")].isNull() && m_direct_contact_isValid;

    m_exchange_isValid = ::OpenAPI::fromJsonValue(m_exchange, json[QString("exchange")]);
    m_exchange_isSet = !json[QString("exchange")].isNull() && m_exchange_isValid;

    m_forecast_inventory_isValid = ::OpenAPI::fromJsonValue(m_forecast_inventory, json[QString("forecastInventory")]);
    m_forecast_inventory_isSet = !json[QString("forecastInventory")].isNull() && m_forecast_inventory_isValid;

    m_google_plus_link_isValid = ::OpenAPI::fromJsonValue(m_google_plus_link, json[QString("googlePlusLink")]);
    m_google_plus_link_isSet = !json[QString("googlePlusLink")].isNull() && m_google_plus_link_isValid;

    m_is_parent_isValid = ::OpenAPI::fromJsonValue(m_is_parent, json[QString("isParent")]);
    m_is_parent_isSet = !json[QString("isParent")].isNull() && m_is_parent_isValid;

    m_is_published_isValid = ::OpenAPI::fromJsonValue(m_is_published, json[QString("isPublished")]);
    m_is_published_isSet = !json[QString("isPublished")].isNull() && m_is_published_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_logo_url_isValid = ::OpenAPI::fromJsonValue(m_logo_url, json[QString("logoUrl")]);
    m_logo_url_isSet = !json[QString("logoUrl")].isNull() && m_logo_url_isValid;

    m_media_kit_link_isValid = ::OpenAPI::fromJsonValue(m_media_kit_link, json[QString("mediaKitLink")]);
    m_media_kit_link_isSet = !json[QString("mediaKitLink")].isNull() && m_media_kit_link_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_overview_isValid = ::OpenAPI::fromJsonValue(m_overview, json[QString("overview")]);
    m_overview_isSet = !json[QString("overview")].isNull() && m_overview_isValid;

    m_profile_id_isValid = ::OpenAPI::fromJsonValue(m_profile_id, json[QString("profileId")]);
    m_profile_id_isSet = !json[QString("profileId")].isNull() && m_profile_id_isValid;

    m_programmatic_contact_isValid = ::OpenAPI::fromJsonValue(m_programmatic_contact, json[QString("programmaticContact")]);
    m_programmatic_contact_isSet = !json[QString("programmaticContact")].isNull() && m_programmatic_contact_isValid;

    m_publisher_app_ids_isValid = ::OpenAPI::fromJsonValue(m_publisher_app_ids, json[QString("publisherAppIds")]);
    m_publisher_app_ids_isSet = !json[QString("publisherAppIds")].isNull() && m_publisher_app_ids_isValid;

    m_publisher_apps_isValid = ::OpenAPI::fromJsonValue(m_publisher_apps, json[QString("publisherApps")]);
    m_publisher_apps_isSet = !json[QString("publisherApps")].isNull() && m_publisher_apps_isValid;

    m_publisher_domains_isValid = ::OpenAPI::fromJsonValue(m_publisher_domains, json[QString("publisherDomains")]);
    m_publisher_domains_isSet = !json[QString("publisherDomains")].isNull() && m_publisher_domains_isValid;

    m_publisher_profile_id_isValid = ::OpenAPI::fromJsonValue(m_publisher_profile_id, json[QString("publisherProfileId")]);
    m_publisher_profile_id_isSet = !json[QString("publisherProfileId")].isNull() && m_publisher_profile_id_isValid;

    m_publisher_provided_forecast_isValid = ::OpenAPI::fromJsonValue(m_publisher_provided_forecast, json[QString("publisherProvidedForecast")]);
    m_publisher_provided_forecast_isSet = !json[QString("publisherProvidedForecast")].isNull() && m_publisher_provided_forecast_isValid;

    m_rate_card_info_link_isValid = ::OpenAPI::fromJsonValue(m_rate_card_info_link, json[QString("rateCardInfoLink")]);
    m_rate_card_info_link_isSet = !json[QString("rateCardInfoLink")].isNull() && m_rate_card_info_link_isValid;

    m_sample_page_link_isValid = ::OpenAPI::fromJsonValue(m_sample_page_link, json[QString("samplePageLink")]);
    m_sample_page_link_isSet = !json[QString("samplePageLink")].isNull() && m_sample_page_link_isValid;

    m_seller_isValid = ::OpenAPI::fromJsonValue(m_seller, json[QString("seller")]);
    m_seller_isSet = !json[QString("seller")].isNull() && m_seller_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_top_headlines_isValid = ::OpenAPI::fromJsonValue(m_top_headlines, json[QString("topHeadlines")]);
    m_top_headlines_isSet = !json[QString("topHeadlines")].isNull() && m_top_headlines_isValid;
}

QString OAIPublisherProfileApiProto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublisherProfileApiProto::asJsonObject() const {
    QJsonObject obj;
    if (m_audience_isSet) {
        obj.insert(QString("audience"), ::OpenAPI::toJsonValue(m_audience));
    }
    if (m_buyer_pitch_statement_isSet) {
        obj.insert(QString("buyerPitchStatement"), ::OpenAPI::toJsonValue(m_buyer_pitch_statement));
    }
    if (m_direct_contact_isSet) {
        obj.insert(QString("directContact"), ::OpenAPI::toJsonValue(m_direct_contact));
    }
    if (m_exchange_isSet) {
        obj.insert(QString("exchange"), ::OpenAPI::toJsonValue(m_exchange));
    }
    if (m_forecast_inventory_isSet) {
        obj.insert(QString("forecastInventory"), ::OpenAPI::toJsonValue(m_forecast_inventory));
    }
    if (m_google_plus_link_isSet) {
        obj.insert(QString("googlePlusLink"), ::OpenAPI::toJsonValue(m_google_plus_link));
    }
    if (m_is_parent_isSet) {
        obj.insert(QString("isParent"), ::OpenAPI::toJsonValue(m_is_parent));
    }
    if (m_is_published_isSet) {
        obj.insert(QString("isPublished"), ::OpenAPI::toJsonValue(m_is_published));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_logo_url_isSet) {
        obj.insert(QString("logoUrl"), ::OpenAPI::toJsonValue(m_logo_url));
    }
    if (m_media_kit_link_isSet) {
        obj.insert(QString("mediaKitLink"), ::OpenAPI::toJsonValue(m_media_kit_link));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_overview_isSet) {
        obj.insert(QString("overview"), ::OpenAPI::toJsonValue(m_overview));
    }
    if (m_profile_id_isSet) {
        obj.insert(QString("profileId"), ::OpenAPI::toJsonValue(m_profile_id));
    }
    if (m_programmatic_contact_isSet) {
        obj.insert(QString("programmaticContact"), ::OpenAPI::toJsonValue(m_programmatic_contact));
    }
    if (m_publisher_app_ids.size() > 0) {
        obj.insert(QString("publisherAppIds"), ::OpenAPI::toJsonValue(m_publisher_app_ids));
    }
    if (m_publisher_apps.size() > 0) {
        obj.insert(QString("publisherApps"), ::OpenAPI::toJsonValue(m_publisher_apps));
    }
    if (m_publisher_domains.size() > 0) {
        obj.insert(QString("publisherDomains"), ::OpenAPI::toJsonValue(m_publisher_domains));
    }
    if (m_publisher_profile_id_isSet) {
        obj.insert(QString("publisherProfileId"), ::OpenAPI::toJsonValue(m_publisher_profile_id));
    }
    if (m_publisher_provided_forecast.isSet()) {
        obj.insert(QString("publisherProvidedForecast"), ::OpenAPI::toJsonValue(m_publisher_provided_forecast));
    }
    if (m_rate_card_info_link_isSet) {
        obj.insert(QString("rateCardInfoLink"), ::OpenAPI::toJsonValue(m_rate_card_info_link));
    }
    if (m_sample_page_link_isSet) {
        obj.insert(QString("samplePageLink"), ::OpenAPI::toJsonValue(m_sample_page_link));
    }
    if (m_seller.isSet()) {
        obj.insert(QString("seller"), ::OpenAPI::toJsonValue(m_seller));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_top_headlines.size() > 0) {
        obj.insert(QString("topHeadlines"), ::OpenAPI::toJsonValue(m_top_headlines));
    }
    return obj;
}

QString OAIPublisherProfileApiProto::getAudience() const {
    return m_audience;
}
void OAIPublisherProfileApiProto::setAudience(const QString &audience) {
    m_audience = audience;
    m_audience_isSet = true;
}

bool OAIPublisherProfileApiProto::is_audience_Set() const{
    return m_audience_isSet;
}

bool OAIPublisherProfileApiProto::is_audience_Valid() const{
    return m_audience_isValid;
}

QString OAIPublisherProfileApiProto::getBuyerPitchStatement() const {
    return m_buyer_pitch_statement;
}
void OAIPublisherProfileApiProto::setBuyerPitchStatement(const QString &buyer_pitch_statement) {
    m_buyer_pitch_statement = buyer_pitch_statement;
    m_buyer_pitch_statement_isSet = true;
}

bool OAIPublisherProfileApiProto::is_buyer_pitch_statement_Set() const{
    return m_buyer_pitch_statement_isSet;
}

bool OAIPublisherProfileApiProto::is_buyer_pitch_statement_Valid() const{
    return m_buyer_pitch_statement_isValid;
}

QString OAIPublisherProfileApiProto::getDirectContact() const {
    return m_direct_contact;
}
void OAIPublisherProfileApiProto::setDirectContact(const QString &direct_contact) {
    m_direct_contact = direct_contact;
    m_direct_contact_isSet = true;
}

bool OAIPublisherProfileApiProto::is_direct_contact_Set() const{
    return m_direct_contact_isSet;
}

bool OAIPublisherProfileApiProto::is_direct_contact_Valid() const{
    return m_direct_contact_isValid;
}

QString OAIPublisherProfileApiProto::getExchange() const {
    return m_exchange;
}
void OAIPublisherProfileApiProto::setExchange(const QString &exchange) {
    m_exchange = exchange;
    m_exchange_isSet = true;
}

bool OAIPublisherProfileApiProto::is_exchange_Set() const{
    return m_exchange_isSet;
}

bool OAIPublisherProfileApiProto::is_exchange_Valid() const{
    return m_exchange_isValid;
}

QString OAIPublisherProfileApiProto::getForecastInventory() const {
    return m_forecast_inventory;
}
void OAIPublisherProfileApiProto::setForecastInventory(const QString &forecast_inventory) {
    m_forecast_inventory = forecast_inventory;
    m_forecast_inventory_isSet = true;
}

bool OAIPublisherProfileApiProto::is_forecast_inventory_Set() const{
    return m_forecast_inventory_isSet;
}

bool OAIPublisherProfileApiProto::is_forecast_inventory_Valid() const{
    return m_forecast_inventory_isValid;
}

QString OAIPublisherProfileApiProto::getGooglePlusLink() const {
    return m_google_plus_link;
}
void OAIPublisherProfileApiProto::setGooglePlusLink(const QString &google_plus_link) {
    m_google_plus_link = google_plus_link;
    m_google_plus_link_isSet = true;
}

bool OAIPublisherProfileApiProto::is_google_plus_link_Set() const{
    return m_google_plus_link_isSet;
}

bool OAIPublisherProfileApiProto::is_google_plus_link_Valid() const{
    return m_google_plus_link_isValid;
}

bool OAIPublisherProfileApiProto::isIsParent() const {
    return m_is_parent;
}
void OAIPublisherProfileApiProto::setIsParent(const bool &is_parent) {
    m_is_parent = is_parent;
    m_is_parent_isSet = true;
}

bool OAIPublisherProfileApiProto::is_is_parent_Set() const{
    return m_is_parent_isSet;
}

bool OAIPublisherProfileApiProto::is_is_parent_Valid() const{
    return m_is_parent_isValid;
}

bool OAIPublisherProfileApiProto::isIsPublished() const {
    return m_is_published;
}
void OAIPublisherProfileApiProto::setIsPublished(const bool &is_published) {
    m_is_published = is_published;
    m_is_published_isSet = true;
}

bool OAIPublisherProfileApiProto::is_is_published_Set() const{
    return m_is_published_isSet;
}

bool OAIPublisherProfileApiProto::is_is_published_Valid() const{
    return m_is_published_isValid;
}

QString OAIPublisherProfileApiProto::getKind() const {
    return m_kind;
}
void OAIPublisherProfileApiProto::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIPublisherProfileApiProto::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIPublisherProfileApiProto::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIPublisherProfileApiProto::getLogoUrl() const {
    return m_logo_url;
}
void OAIPublisherProfileApiProto::setLogoUrl(const QString &logo_url) {
    m_logo_url = logo_url;
    m_logo_url_isSet = true;
}

bool OAIPublisherProfileApiProto::is_logo_url_Set() const{
    return m_logo_url_isSet;
}

bool OAIPublisherProfileApiProto::is_logo_url_Valid() const{
    return m_logo_url_isValid;
}

QString OAIPublisherProfileApiProto::getMediaKitLink() const {
    return m_media_kit_link;
}
void OAIPublisherProfileApiProto::setMediaKitLink(const QString &media_kit_link) {
    m_media_kit_link = media_kit_link;
    m_media_kit_link_isSet = true;
}

bool OAIPublisherProfileApiProto::is_media_kit_link_Set() const{
    return m_media_kit_link_isSet;
}

bool OAIPublisherProfileApiProto::is_media_kit_link_Valid() const{
    return m_media_kit_link_isValid;
}

QString OAIPublisherProfileApiProto::getName() const {
    return m_name;
}
void OAIPublisherProfileApiProto::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPublisherProfileApiProto::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPublisherProfileApiProto::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPublisherProfileApiProto::getOverview() const {
    return m_overview;
}
void OAIPublisherProfileApiProto::setOverview(const QString &overview) {
    m_overview = overview;
    m_overview_isSet = true;
}

bool OAIPublisherProfileApiProto::is_overview_Set() const{
    return m_overview_isSet;
}

bool OAIPublisherProfileApiProto::is_overview_Valid() const{
    return m_overview_isValid;
}

qint32 OAIPublisherProfileApiProto::getProfileId() const {
    return m_profile_id;
}
void OAIPublisherProfileApiProto::setProfileId(const qint32 &profile_id) {
    m_profile_id = profile_id;
    m_profile_id_isSet = true;
}

bool OAIPublisherProfileApiProto::is_profile_id_Set() const{
    return m_profile_id_isSet;
}

bool OAIPublisherProfileApiProto::is_profile_id_Valid() const{
    return m_profile_id_isValid;
}

QString OAIPublisherProfileApiProto::getProgrammaticContact() const {
    return m_programmatic_contact;
}
void OAIPublisherProfileApiProto::setProgrammaticContact(const QString &programmatic_contact) {
    m_programmatic_contact = programmatic_contact;
    m_programmatic_contact_isSet = true;
}

bool OAIPublisherProfileApiProto::is_programmatic_contact_Set() const{
    return m_programmatic_contact_isSet;
}

bool OAIPublisherProfileApiProto::is_programmatic_contact_Valid() const{
    return m_programmatic_contact_isValid;
}

QList<QString> OAIPublisherProfileApiProto::getPublisherAppIds() const {
    return m_publisher_app_ids;
}
void OAIPublisherProfileApiProto::setPublisherAppIds(const QList<QString> &publisher_app_ids) {
    m_publisher_app_ids = publisher_app_ids;
    m_publisher_app_ids_isSet = true;
}

bool OAIPublisherProfileApiProto::is_publisher_app_ids_Set() const{
    return m_publisher_app_ids_isSet;
}

bool OAIPublisherProfileApiProto::is_publisher_app_ids_Valid() const{
    return m_publisher_app_ids_isValid;
}

QList<OAIMobileApplication> OAIPublisherProfileApiProto::getPublisherApps() const {
    return m_publisher_apps;
}
void OAIPublisherProfileApiProto::setPublisherApps(const QList<OAIMobileApplication> &publisher_apps) {
    m_publisher_apps = publisher_apps;
    m_publisher_apps_isSet = true;
}

bool OAIPublisherProfileApiProto::is_publisher_apps_Set() const{
    return m_publisher_apps_isSet;
}

bool OAIPublisherProfileApiProto::is_publisher_apps_Valid() const{
    return m_publisher_apps_isValid;
}

QList<QString> OAIPublisherProfileApiProto::getPublisherDomains() const {
    return m_publisher_domains;
}
void OAIPublisherProfileApiProto::setPublisherDomains(const QList<QString> &publisher_domains) {
    m_publisher_domains = publisher_domains;
    m_publisher_domains_isSet = true;
}

bool OAIPublisherProfileApiProto::is_publisher_domains_Set() const{
    return m_publisher_domains_isSet;
}

bool OAIPublisherProfileApiProto::is_publisher_domains_Valid() const{
    return m_publisher_domains_isValid;
}

QString OAIPublisherProfileApiProto::getPublisherProfileId() const {
    return m_publisher_profile_id;
}
void OAIPublisherProfileApiProto::setPublisherProfileId(const QString &publisher_profile_id) {
    m_publisher_profile_id = publisher_profile_id;
    m_publisher_profile_id_isSet = true;
}

bool OAIPublisherProfileApiProto::is_publisher_profile_id_Set() const{
    return m_publisher_profile_id_isSet;
}

bool OAIPublisherProfileApiProto::is_publisher_profile_id_Valid() const{
    return m_publisher_profile_id_isValid;
}

OAIPublisherProvidedForecast OAIPublisherProfileApiProto::getPublisherProvidedForecast() const {
    return m_publisher_provided_forecast;
}
void OAIPublisherProfileApiProto::setPublisherProvidedForecast(const OAIPublisherProvidedForecast &publisher_provided_forecast) {
    m_publisher_provided_forecast = publisher_provided_forecast;
    m_publisher_provided_forecast_isSet = true;
}

bool OAIPublisherProfileApiProto::is_publisher_provided_forecast_Set() const{
    return m_publisher_provided_forecast_isSet;
}

bool OAIPublisherProfileApiProto::is_publisher_provided_forecast_Valid() const{
    return m_publisher_provided_forecast_isValid;
}

QString OAIPublisherProfileApiProto::getRateCardInfoLink() const {
    return m_rate_card_info_link;
}
void OAIPublisherProfileApiProto::setRateCardInfoLink(const QString &rate_card_info_link) {
    m_rate_card_info_link = rate_card_info_link;
    m_rate_card_info_link_isSet = true;
}

bool OAIPublisherProfileApiProto::is_rate_card_info_link_Set() const{
    return m_rate_card_info_link_isSet;
}

bool OAIPublisherProfileApiProto::is_rate_card_info_link_Valid() const{
    return m_rate_card_info_link_isValid;
}

QString OAIPublisherProfileApiProto::getSamplePageLink() const {
    return m_sample_page_link;
}
void OAIPublisherProfileApiProto::setSamplePageLink(const QString &sample_page_link) {
    m_sample_page_link = sample_page_link;
    m_sample_page_link_isSet = true;
}

bool OAIPublisherProfileApiProto::is_sample_page_link_Set() const{
    return m_sample_page_link_isSet;
}

bool OAIPublisherProfileApiProto::is_sample_page_link_Valid() const{
    return m_sample_page_link_isValid;
}

OAISeller OAIPublisherProfileApiProto::getSeller() const {
    return m_seller;
}
void OAIPublisherProfileApiProto::setSeller(const OAISeller &seller) {
    m_seller = seller;
    m_seller_isSet = true;
}

bool OAIPublisherProfileApiProto::is_seller_Set() const{
    return m_seller_isSet;
}

bool OAIPublisherProfileApiProto::is_seller_Valid() const{
    return m_seller_isValid;
}

QString OAIPublisherProfileApiProto::getState() const {
    return m_state;
}
void OAIPublisherProfileApiProto::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIPublisherProfileApiProto::is_state_Set() const{
    return m_state_isSet;
}

bool OAIPublisherProfileApiProto::is_state_Valid() const{
    return m_state_isValid;
}

QList<QString> OAIPublisherProfileApiProto::getTopHeadlines() const {
    return m_top_headlines;
}
void OAIPublisherProfileApiProto::setTopHeadlines(const QList<QString> &top_headlines) {
    m_top_headlines = top_headlines;
    m_top_headlines_isSet = true;
}

bool OAIPublisherProfileApiProto::is_top_headlines_Set() const{
    return m_top_headlines_isSet;
}

bool OAIPublisherProfileApiProto::is_top_headlines_Valid() const{
    return m_top_headlines_isValid;
}

bool OAIPublisherProfileApiProto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audience_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_buyer_pitch_statement_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_direct_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exchange_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_forecast_inventory_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_plus_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_published_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_kit_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_overview_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_programmatic_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_app_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_apps.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_domains.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_provided_forecast.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rate_card_info_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sample_page_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_seller.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_top_headlines.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublisherProfileApiProto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
