/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrice.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrice::OAIPrice(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrice::OAIPrice() {
    this->initializeModel();
}

OAIPrice::~OAIPrice() {}

void OAIPrice::initializeModel() {

    m_amount_micros_isSet = false;
    m_amount_micros_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_expected_cpm_micros_isSet = false;
    m_expected_cpm_micros_isValid = false;

    m_pricing_type_isSet = false;
    m_pricing_type_isValid = false;
}

void OAIPrice::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPrice::fromJsonObject(QJsonObject json) {

    m_amount_micros_isValid = ::OpenAPI::fromJsonValue(m_amount_micros, json[QString("amountMicros")]);
    m_amount_micros_isSet = !json[QString("amountMicros")].isNull() && m_amount_micros_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_expected_cpm_micros_isValid = ::OpenAPI::fromJsonValue(m_expected_cpm_micros, json[QString("expectedCpmMicros")]);
    m_expected_cpm_micros_isSet = !json[QString("expectedCpmMicros")].isNull() && m_expected_cpm_micros_isValid;

    m_pricing_type_isValid = ::OpenAPI::fromJsonValue(m_pricing_type, json[QString("pricingType")]);
    m_pricing_type_isSet = !json[QString("pricingType")].isNull() && m_pricing_type_isValid;
}

QString OAIPrice::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPrice::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_micros_isSet) {
        obj.insert(QString("amountMicros"), ::OpenAPI::toJsonValue(m_amount_micros));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_expected_cpm_micros_isSet) {
        obj.insert(QString("expectedCpmMicros"), ::OpenAPI::toJsonValue(m_expected_cpm_micros));
    }
    if (m_pricing_type_isSet) {
        obj.insert(QString("pricingType"), ::OpenAPI::toJsonValue(m_pricing_type));
    }
    return obj;
}

double OAIPrice::getAmountMicros() const {
    return m_amount_micros;
}
void OAIPrice::setAmountMicros(const double &amount_micros) {
    m_amount_micros = amount_micros;
    m_amount_micros_isSet = true;
}

bool OAIPrice::is_amount_micros_Set() const{
    return m_amount_micros_isSet;
}

bool OAIPrice::is_amount_micros_Valid() const{
    return m_amount_micros_isValid;
}

QString OAIPrice::getCurrencyCode() const {
    return m_currency_code;
}
void OAIPrice::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIPrice::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIPrice::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

double OAIPrice::getExpectedCpmMicros() const {
    return m_expected_cpm_micros;
}
void OAIPrice::setExpectedCpmMicros(const double &expected_cpm_micros) {
    m_expected_cpm_micros = expected_cpm_micros;
    m_expected_cpm_micros_isSet = true;
}

bool OAIPrice::is_expected_cpm_micros_Set() const{
    return m_expected_cpm_micros_isSet;
}

bool OAIPrice::is_expected_cpm_micros_Valid() const{
    return m_expected_cpm_micros_isValid;
}

QString OAIPrice::getPricingType() const {
    return m_pricing_type;
}
void OAIPrice::setPricingType(const QString &pricing_type) {
    m_pricing_type = pricing_type;
    m_pricing_type_isSet = true;
}

bool OAIPrice::is_pricing_type_Set() const{
    return m_pricing_type_isSet;
}

bool OAIPrice::is_pricing_type_Valid() const{
    return m_pricing_type_isValid;
}

bool OAIPrice::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expected_cpm_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPrice::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
