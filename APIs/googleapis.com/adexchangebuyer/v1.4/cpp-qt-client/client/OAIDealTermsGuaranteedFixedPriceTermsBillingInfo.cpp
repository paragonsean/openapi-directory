/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDealTermsGuaranteedFixedPriceTermsBillingInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::OAIDealTermsGuaranteedFixedPriceTermsBillingInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::OAIDealTermsGuaranteedFixedPriceTermsBillingInfo() {
    this->initializeModel();
}

OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::~OAIDealTermsGuaranteedFixedPriceTermsBillingInfo() {}

void OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::initializeModel() {

    m_currency_conversion_time_ms_isSet = false;
    m_currency_conversion_time_ms_isValid = false;

    m_dfp_line_item_id_isSet = false;
    m_dfp_line_item_id_isValid = false;

    m_original_contracted_quantity_isSet = false;
    m_original_contracted_quantity_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;
}

void OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::fromJsonObject(QJsonObject json) {

    m_currency_conversion_time_ms_isValid = ::OpenAPI::fromJsonValue(m_currency_conversion_time_ms, json[QString("currencyConversionTimeMs")]);
    m_currency_conversion_time_ms_isSet = !json[QString("currencyConversionTimeMs")].isNull() && m_currency_conversion_time_ms_isValid;

    m_dfp_line_item_id_isValid = ::OpenAPI::fromJsonValue(m_dfp_line_item_id, json[QString("dfpLineItemId")]);
    m_dfp_line_item_id_isSet = !json[QString("dfpLineItemId")].isNull() && m_dfp_line_item_id_isValid;

    m_original_contracted_quantity_isValid = ::OpenAPI::fromJsonValue(m_original_contracted_quantity, json[QString("originalContractedQuantity")]);
    m_original_contracted_quantity_isSet = !json[QString("originalContractedQuantity")].isNull() && m_original_contracted_quantity_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;
}

QString OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_conversion_time_ms_isSet) {
        obj.insert(QString("currencyConversionTimeMs"), ::OpenAPI::toJsonValue(m_currency_conversion_time_ms));
    }
    if (m_dfp_line_item_id_isSet) {
        obj.insert(QString("dfpLineItemId"), ::OpenAPI::toJsonValue(m_dfp_line_item_id));
    }
    if (m_original_contracted_quantity_isSet) {
        obj.insert(QString("originalContractedQuantity"), ::OpenAPI::toJsonValue(m_original_contracted_quantity));
    }
    if (m_price.isSet()) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    return obj;
}

QString OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::getCurrencyConversionTimeMs() const {
    return m_currency_conversion_time_ms;
}
void OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::setCurrencyConversionTimeMs(const QString &currency_conversion_time_ms) {
    m_currency_conversion_time_ms = currency_conversion_time_ms;
    m_currency_conversion_time_ms_isSet = true;
}

bool OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::is_currency_conversion_time_ms_Set() const{
    return m_currency_conversion_time_ms_isSet;
}

bool OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::is_currency_conversion_time_ms_Valid() const{
    return m_currency_conversion_time_ms_isValid;
}

QString OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::getDfpLineItemId() const {
    return m_dfp_line_item_id;
}
void OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::setDfpLineItemId(const QString &dfp_line_item_id) {
    m_dfp_line_item_id = dfp_line_item_id;
    m_dfp_line_item_id_isSet = true;
}

bool OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::is_dfp_line_item_id_Set() const{
    return m_dfp_line_item_id_isSet;
}

bool OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::is_dfp_line_item_id_Valid() const{
    return m_dfp_line_item_id_isValid;
}

QString OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::getOriginalContractedQuantity() const {
    return m_original_contracted_quantity;
}
void OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::setOriginalContractedQuantity(const QString &original_contracted_quantity) {
    m_original_contracted_quantity = original_contracted_quantity;
    m_original_contracted_quantity_isSet = true;
}

bool OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::is_original_contracted_quantity_Set() const{
    return m_original_contracted_quantity_isSet;
}

bool OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::is_original_contracted_quantity_Valid() const{
    return m_original_contracted_quantity_isValid;
}

OAIPrice OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::getPrice() const {
    return m_price;
}
void OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::setPrice(const OAIPrice &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::is_price_Set() const{
    return m_price_isSet;
}

bool OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::is_price_Valid() const{
    return m_price_isValid;
}

bool OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_conversion_time_ms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dfp_line_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_contracted_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDealTermsGuaranteedFixedPriceTermsBillingInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
