/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMarketplaceDealParty.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMarketplaceDealParty::OAIMarketplaceDealParty(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMarketplaceDealParty::OAIMarketplaceDealParty() {
    this->initializeModel();
}

OAIMarketplaceDealParty::~OAIMarketplaceDealParty() {}

void OAIMarketplaceDealParty::initializeModel() {

    m_buyer_isSet = false;
    m_buyer_isValid = false;

    m_seller_isSet = false;
    m_seller_isValid = false;
}

void OAIMarketplaceDealParty::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMarketplaceDealParty::fromJsonObject(QJsonObject json) {

    m_buyer_isValid = ::OpenAPI::fromJsonValue(m_buyer, json[QString("buyer")]);
    m_buyer_isSet = !json[QString("buyer")].isNull() && m_buyer_isValid;

    m_seller_isValid = ::OpenAPI::fromJsonValue(m_seller, json[QString("seller")]);
    m_seller_isSet = !json[QString("seller")].isNull() && m_seller_isValid;
}

QString OAIMarketplaceDealParty::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMarketplaceDealParty::asJsonObject() const {
    QJsonObject obj;
    if (m_buyer.isSet()) {
        obj.insert(QString("buyer"), ::OpenAPI::toJsonValue(m_buyer));
    }
    if (m_seller.isSet()) {
        obj.insert(QString("seller"), ::OpenAPI::toJsonValue(m_seller));
    }
    return obj;
}

OAIBuyer OAIMarketplaceDealParty::getBuyer() const {
    return m_buyer;
}
void OAIMarketplaceDealParty::setBuyer(const OAIBuyer &buyer) {
    m_buyer = buyer;
    m_buyer_isSet = true;
}

bool OAIMarketplaceDealParty::is_buyer_Set() const{
    return m_buyer_isSet;
}

bool OAIMarketplaceDealParty::is_buyer_Valid() const{
    return m_buyer_isValid;
}

OAISeller OAIMarketplaceDealParty::getSeller() const {
    return m_seller;
}
void OAIMarketplaceDealParty::setSeller(const OAISeller &seller) {
    m_seller = seller;
    m_seller_isSet = true;
}

bool OAIMarketplaceDealParty::is_seller_Set() const{
    return m_seller_isSet;
}

bool OAIMarketplaceDealParty::is_seller_Valid() const{
    return m_seller_isValid;
}

bool OAIMarketplaceDealParty::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_buyer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_seller.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMarketplaceDealParty::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
