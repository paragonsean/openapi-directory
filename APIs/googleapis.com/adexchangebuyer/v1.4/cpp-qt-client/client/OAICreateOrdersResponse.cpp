/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateOrdersResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateOrdersResponse::OAICreateOrdersResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateOrdersResponse::OAICreateOrdersResponse() {
    this->initializeModel();
}

OAICreateOrdersResponse::~OAICreateOrdersResponse() {}

void OAICreateOrdersResponse::initializeModel() {

    m_proposals_isSet = false;
    m_proposals_isValid = false;
}

void OAICreateOrdersResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateOrdersResponse::fromJsonObject(QJsonObject json) {

    m_proposals_isValid = ::OpenAPI::fromJsonValue(m_proposals, json[QString("proposals")]);
    m_proposals_isSet = !json[QString("proposals")].isNull() && m_proposals_isValid;
}

QString OAICreateOrdersResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateOrdersResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_proposals.size() > 0) {
        obj.insert(QString("proposals"), ::OpenAPI::toJsonValue(m_proposals));
    }
    return obj;
}

QList<OAIProposal> OAICreateOrdersResponse::getProposals() const {
    return m_proposals;
}
void OAICreateOrdersResponse::setProposals(const QList<OAIProposal> &proposals) {
    m_proposals = proposals;
    m_proposals_isSet = true;
}

bool OAICreateOrdersResponse::is_proposals_Set() const{
    return m_proposals_isSet;
}

bool OAICreateOrdersResponse::is_proposals_Valid() const{
    return m_proposals_isValid;
}

bool OAICreateOrdersResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_proposals.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateOrdersResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
