/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEditAllOrderDealsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEditAllOrderDealsResponse::OAIEditAllOrderDealsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEditAllOrderDealsResponse::OAIEditAllOrderDealsResponse() {
    this->initializeModel();
}

OAIEditAllOrderDealsResponse::~OAIEditAllOrderDealsResponse() {}

void OAIEditAllOrderDealsResponse::initializeModel() {

    m_deals_isSet = false;
    m_deals_isValid = false;

    m_order_revision_number_isSet = false;
    m_order_revision_number_isValid = false;
}

void OAIEditAllOrderDealsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEditAllOrderDealsResponse::fromJsonObject(QJsonObject json) {

    m_deals_isValid = ::OpenAPI::fromJsonValue(m_deals, json[QString("deals")]);
    m_deals_isSet = !json[QString("deals")].isNull() && m_deals_isValid;

    m_order_revision_number_isValid = ::OpenAPI::fromJsonValue(m_order_revision_number, json[QString("orderRevisionNumber")]);
    m_order_revision_number_isSet = !json[QString("orderRevisionNumber")].isNull() && m_order_revision_number_isValid;
}

QString OAIEditAllOrderDealsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEditAllOrderDealsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_deals.size() > 0) {
        obj.insert(QString("deals"), ::OpenAPI::toJsonValue(m_deals));
    }
    if (m_order_revision_number_isSet) {
        obj.insert(QString("orderRevisionNumber"), ::OpenAPI::toJsonValue(m_order_revision_number));
    }
    return obj;
}

QList<OAIMarketplaceDeal> OAIEditAllOrderDealsResponse::getDeals() const {
    return m_deals;
}
void OAIEditAllOrderDealsResponse::setDeals(const QList<OAIMarketplaceDeal> &deals) {
    m_deals = deals;
    m_deals_isSet = true;
}

bool OAIEditAllOrderDealsResponse::is_deals_Set() const{
    return m_deals_isSet;
}

bool OAIEditAllOrderDealsResponse::is_deals_Valid() const{
    return m_deals_isValid;
}

QString OAIEditAllOrderDealsResponse::getOrderRevisionNumber() const {
    return m_order_revision_number;
}
void OAIEditAllOrderDealsResponse::setOrderRevisionNumber(const QString &order_revision_number) {
    m_order_revision_number = order_revision_number;
    m_order_revision_number_isSet = true;
}

bool OAIEditAllOrderDealsResponse::is_order_revision_number_Set() const{
    return m_order_revision_number_isSet;
}

bool OAIEditAllOrderDealsResponse::is_order_revision_number_Valid() const{
    return m_order_revision_number_isValid;
}

bool OAIEditAllOrderDealsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deals.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_revision_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEditAllOrderDealsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
