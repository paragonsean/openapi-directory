/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPerformanceReport.h
 *
 * The configuration data for an Ad Exchange performance report list.
 */

#ifndef OAIPerformanceReport_H
#define OAIPerformanceReport_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPerformanceReport : public OAIObject {
public:
    OAIPerformanceReport();
    OAIPerformanceReport(QString json);
    ~OAIPerformanceReport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBidRate() const;
    void setBidRate(const double &bid_rate);
    bool is_bid_rate_Set() const;
    bool is_bid_rate_Valid() const;

    double getBidRequestRate() const;
    void setBidRequestRate(const double &bid_request_rate);
    bool is_bid_request_rate_Set() const;
    bool is_bid_request_rate_Valid() const;

    QList<QJsonValue> getCalloutStatusRate() const;
    void setCalloutStatusRate(const QList<QJsonValue> &callout_status_rate);
    bool is_callout_status_rate_Set() const;
    bool is_callout_status_rate_Valid() const;

    QList<QJsonValue> getCookieMatcherStatusRate() const;
    void setCookieMatcherStatusRate(const QList<QJsonValue> &cookie_matcher_status_rate);
    bool is_cookie_matcher_status_rate_Set() const;
    bool is_cookie_matcher_status_rate_Valid() const;

    QList<QJsonValue> getCreativeStatusRate() const;
    void setCreativeStatusRate(const QList<QJsonValue> &creative_status_rate);
    bool is_creative_status_rate_Set() const;
    bool is_creative_status_rate_Valid() const;

    double getFilteredBidRate() const;
    void setFilteredBidRate(const double &filtered_bid_rate);
    bool is_filtered_bid_rate_Set() const;
    bool is_filtered_bid_rate_Valid() const;

    QList<QJsonValue> getHostedMatchStatusRate() const;
    void setHostedMatchStatusRate(const QList<QJsonValue> &hosted_match_status_rate);
    bool is_hosted_match_status_rate_Set() const;
    bool is_hosted_match_status_rate_Valid() const;

    double getInventoryMatchRate() const;
    void setInventoryMatchRate(const double &inventory_match_rate);
    bool is_inventory_match_rate_Set() const;
    bool is_inventory_match_rate_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    double getLatency50thPercentile() const;
    void setLatency50thPercentile(const double &latency50th_percentile);
    bool is_latency50th_percentile_Set() const;
    bool is_latency50th_percentile_Valid() const;

    double getLatency85thPercentile() const;
    void setLatency85thPercentile(const double &latency85th_percentile);
    bool is_latency85th_percentile_Set() const;
    bool is_latency85th_percentile_Valid() const;

    double getLatency95thPercentile() const;
    void setLatency95thPercentile(const double &latency95th_percentile);
    bool is_latency95th_percentile_Set() const;
    bool is_latency95th_percentile_Valid() const;

    double getNoQuotaInRegion() const;
    void setNoQuotaInRegion(const double &no_quota_in_region);
    bool is_no_quota_in_region_Set() const;
    bool is_no_quota_in_region_Valid() const;

    double getOutOfQuota() const;
    void setOutOfQuota(const double &out_of_quota);
    bool is_out_of_quota_Set() const;
    bool is_out_of_quota_Valid() const;

    double getPixelMatchRequests() const;
    void setPixelMatchRequests(const double &pixel_match_requests);
    bool is_pixel_match_requests_Set() const;
    bool is_pixel_match_requests_Valid() const;

    double getPixelMatchResponses() const;
    void setPixelMatchResponses(const double &pixel_match_responses);
    bool is_pixel_match_responses_Set() const;
    bool is_pixel_match_responses_Valid() const;

    double getQuotaConfiguredLimit() const;
    void setQuotaConfiguredLimit(const double &quota_configured_limit);
    bool is_quota_configured_limit_Set() const;
    bool is_quota_configured_limit_Valid() const;

    double getQuotaThrottledLimit() const;
    void setQuotaThrottledLimit(const double &quota_throttled_limit);
    bool is_quota_throttled_limit_Set() const;
    bool is_quota_throttled_limit_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    double getSuccessfulRequestRate() const;
    void setSuccessfulRequestRate(const double &successful_request_rate);
    bool is_successful_request_rate_Set() const;
    bool is_successful_request_rate_Valid() const;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    double getUnsuccessfulRequestRate() const;
    void setUnsuccessfulRequestRate(const double &unsuccessful_request_rate);
    bool is_unsuccessful_request_rate_Set() const;
    bool is_unsuccessful_request_rate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_bid_rate;
    bool m_bid_rate_isSet;
    bool m_bid_rate_isValid;

    double m_bid_request_rate;
    bool m_bid_request_rate_isSet;
    bool m_bid_request_rate_isValid;

    QList<QJsonValue> m_callout_status_rate;
    bool m_callout_status_rate_isSet;
    bool m_callout_status_rate_isValid;

    QList<QJsonValue> m_cookie_matcher_status_rate;
    bool m_cookie_matcher_status_rate_isSet;
    bool m_cookie_matcher_status_rate_isValid;

    QList<QJsonValue> m_creative_status_rate;
    bool m_creative_status_rate_isSet;
    bool m_creative_status_rate_isValid;

    double m_filtered_bid_rate;
    bool m_filtered_bid_rate_isSet;
    bool m_filtered_bid_rate_isValid;

    QList<QJsonValue> m_hosted_match_status_rate;
    bool m_hosted_match_status_rate_isSet;
    bool m_hosted_match_status_rate_isValid;

    double m_inventory_match_rate;
    bool m_inventory_match_rate_isSet;
    bool m_inventory_match_rate_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    double m_latency50th_percentile;
    bool m_latency50th_percentile_isSet;
    bool m_latency50th_percentile_isValid;

    double m_latency85th_percentile;
    bool m_latency85th_percentile_isSet;
    bool m_latency85th_percentile_isValid;

    double m_latency95th_percentile;
    bool m_latency95th_percentile_isSet;
    bool m_latency95th_percentile_isValid;

    double m_no_quota_in_region;
    bool m_no_quota_in_region_isSet;
    bool m_no_quota_in_region_isValid;

    double m_out_of_quota;
    bool m_out_of_quota_isSet;
    bool m_out_of_quota_isValid;

    double m_pixel_match_requests;
    bool m_pixel_match_requests_isSet;
    bool m_pixel_match_requests_isValid;

    double m_pixel_match_responses;
    bool m_pixel_match_responses_isSet;
    bool m_pixel_match_responses_isValid;

    double m_quota_configured_limit;
    bool m_quota_configured_limit_isSet;
    bool m_quota_configured_limit_isValid;

    double m_quota_throttled_limit;
    bool m_quota_throttled_limit_isSet;
    bool m_quota_throttled_limit_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    double m_successful_request_rate;
    bool m_successful_request_rate_isSet;
    bool m_successful_request_rate_isValid;

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    double m_unsuccessful_request_rate;
    bool m_unsuccessful_request_rate_isSet;
    bool m_unsuccessful_request_rate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPerformanceReport)

#endif // OAIPerformanceReport_H
