/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITargetingValueDayPartTargetingDayPart.h
 *
 * 
 */

#ifndef OAITargetingValueDayPartTargetingDayPart_H
#define OAITargetingValueDayPartTargetingDayPart_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITargetingValueDayPartTargetingDayPart : public OAIObject {
public:
    OAITargetingValueDayPartTargetingDayPart();
    OAITargetingValueDayPartTargetingDayPart(QString json);
    ~OAITargetingValueDayPartTargetingDayPart() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDayOfWeek() const;
    void setDayOfWeek(const QString &day_of_week);
    bool is_day_of_week_Set() const;
    bool is_day_of_week_Valid() const;

    qint32 getEndHour() const;
    void setEndHour(const qint32 &end_hour);
    bool is_end_hour_Set() const;
    bool is_end_hour_Valid() const;

    qint32 getEndMinute() const;
    void setEndMinute(const qint32 &end_minute);
    bool is_end_minute_Set() const;
    bool is_end_minute_Valid() const;

    qint32 getStartHour() const;
    void setStartHour(const qint32 &start_hour);
    bool is_start_hour_Set() const;
    bool is_start_hour_Valid() const;

    qint32 getStartMinute() const;
    void setStartMinute(const qint32 &start_minute);
    bool is_start_minute_Set() const;
    bool is_start_minute_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_day_of_week;
    bool m_day_of_week_isSet;
    bool m_day_of_week_isValid;

    qint32 m_end_hour;
    bool m_end_hour_isSet;
    bool m_end_hour_isValid;

    qint32 m_end_minute;
    bool m_end_minute_isSet;
    bool m_end_minute_isValid;

    qint32 m_start_hour;
    bool m_start_hour_isSet;
    bool m_start_hour_isValid;

    qint32 m_start_minute;
    bool m_start_minute_isSet;
    bool m_start_minute_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITargetingValueDayPartTargetingDayPart)

#endif // OAITargetingValueDayPartTargetingDayPart_H
