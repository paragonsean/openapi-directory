/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPretargetingConfig.h
 *
 * 
 */

#ifndef OAIPretargetingConfig_H
#define OAIPretargetingConfig_H

#include <QJsonObject>

#include "OAIPretargetingConfig_dimensions_inner.h"
#include "OAIPretargetingConfig_excludedPlacements_inner.h"
#include "OAIPretargetingConfig_videoPlayerSizes_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPretargetingConfig_dimensions_inner;
class OAIPretargetingConfig_excludedPlacements_inner;
class OAIPretargetingConfig_videoPlayerSizes_inner;

class OAIPretargetingConfig : public OAIObject {
public:
    OAIPretargetingConfig();
    OAIPretargetingConfig(QString json);
    ~OAIPretargetingConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBillingId() const;
    void setBillingId(const QString &billing_id);
    bool is_billing_id_Set() const;
    bool is_billing_id_Valid() const;

    QString getConfigId() const;
    void setConfigId(const QString &config_id);
    bool is_config_id_Set() const;
    bool is_config_id_Valid() const;

    QString getConfigName() const;
    void setConfigName(const QString &config_name);
    bool is_config_name_Set() const;
    bool is_config_name_Valid() const;

    QList<QString> getCreativeType() const;
    void setCreativeType(const QList<QString> &creative_type);
    bool is_creative_type_Set() const;
    bool is_creative_type_Valid() const;

    QList<OAIPretargetingConfig_dimensions_inner> getDimensions() const;
    void setDimensions(const QList<OAIPretargetingConfig_dimensions_inner> &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    QList<QString> getExcludedContentLabels() const;
    void setExcludedContentLabels(const QList<QString> &excluded_content_labels);
    bool is_excluded_content_labels_Set() const;
    bool is_excluded_content_labels_Valid() const;

    QList<QString> getExcludedGeoCriteriaIds() const;
    void setExcludedGeoCriteriaIds(const QList<QString> &excluded_geo_criteria_ids);
    bool is_excluded_geo_criteria_ids_Set() const;
    bool is_excluded_geo_criteria_ids_Valid() const;

    QList<OAIPretargetingConfig_excludedPlacements_inner> getExcludedPlacements() const;
    void setExcludedPlacements(const QList<OAIPretargetingConfig_excludedPlacements_inner> &excluded_placements);
    bool is_excluded_placements_Set() const;
    bool is_excluded_placements_Valid() const;

    QList<QString> getExcludedUserLists() const;
    void setExcludedUserLists(const QList<QString> &excluded_user_lists);
    bool is_excluded_user_lists_Set() const;
    bool is_excluded_user_lists_Valid() const;

    QList<QString> getExcludedVerticals() const;
    void setExcludedVerticals(const QList<QString> &excluded_verticals);
    bool is_excluded_verticals_Set() const;
    bool is_excluded_verticals_Valid() const;

    QList<QString> getGeoCriteriaIds() const;
    void setGeoCriteriaIds(const QList<QString> &geo_criteria_ids);
    bool is_geo_criteria_ids_Set() const;
    bool is_geo_criteria_ids_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QList<QString> getLanguages() const;
    void setLanguages(const QList<QString> &languages);
    bool is_languages_Set() const;
    bool is_languages_Valid() const;

    QString getMaximumQps() const;
    void setMaximumQps(const QString &maximum_qps);
    bool is_maximum_qps_Set() const;
    bool is_maximum_qps_Valid() const;

    qint32 getMinimumViewabilityDecile() const;
    void setMinimumViewabilityDecile(const qint32 &minimum_viewability_decile);
    bool is_minimum_viewability_decile_Set() const;
    bool is_minimum_viewability_decile_Valid() const;

    QList<QString> getMobileCarriers() const;
    void setMobileCarriers(const QList<QString> &mobile_carriers);
    bool is_mobile_carriers_Set() const;
    bool is_mobile_carriers_Valid() const;

    QList<QString> getMobileDevices() const;
    void setMobileDevices(const QList<QString> &mobile_devices);
    bool is_mobile_devices_Set() const;
    bool is_mobile_devices_Valid() const;

    QList<QString> getMobileOperatingSystemVersions() const;
    void setMobileOperatingSystemVersions(const QList<QString> &mobile_operating_system_versions);
    bool is_mobile_operating_system_versions_Set() const;
    bool is_mobile_operating_system_versions_Valid() const;

    QList<OAIPretargetingConfig_excludedPlacements_inner> getPlacements() const;
    void setPlacements(const QList<OAIPretargetingConfig_excludedPlacements_inner> &placements);
    bool is_placements_Set() const;
    bool is_placements_Valid() const;

    QList<QString> getPlatforms() const;
    void setPlatforms(const QList<QString> &platforms);
    bool is_platforms_Set() const;
    bool is_platforms_Valid() const;

    QList<QString> getSupportedCreativeAttributes() const;
    void setSupportedCreativeAttributes(const QList<QString> &supported_creative_attributes);
    bool is_supported_creative_attributes_Set() const;
    bool is_supported_creative_attributes_Valid() const;

    QList<QString> getUserIdentifierDataRequired() const;
    void setUserIdentifierDataRequired(const QList<QString> &user_identifier_data_required);
    bool is_user_identifier_data_required_Set() const;
    bool is_user_identifier_data_required_Valid() const;

    QList<QString> getUserLists() const;
    void setUserLists(const QList<QString> &user_lists);
    bool is_user_lists_Set() const;
    bool is_user_lists_Valid() const;

    QList<QString> getVendorTypes() const;
    void setVendorTypes(const QList<QString> &vendor_types);
    bool is_vendor_types_Set() const;
    bool is_vendor_types_Valid() const;

    QList<QString> getVerticals() const;
    void setVerticals(const QList<QString> &verticals);
    bool is_verticals_Set() const;
    bool is_verticals_Valid() const;

    QList<OAIPretargetingConfig_videoPlayerSizes_inner> getVideoPlayerSizes() const;
    void setVideoPlayerSizes(const QList<OAIPretargetingConfig_videoPlayerSizes_inner> &video_player_sizes);
    bool is_video_player_sizes_Set() const;
    bool is_video_player_sizes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_billing_id;
    bool m_billing_id_isSet;
    bool m_billing_id_isValid;

    QString m_config_id;
    bool m_config_id_isSet;
    bool m_config_id_isValid;

    QString m_config_name;
    bool m_config_name_isSet;
    bool m_config_name_isValid;

    QList<QString> m_creative_type;
    bool m_creative_type_isSet;
    bool m_creative_type_isValid;

    QList<OAIPretargetingConfig_dimensions_inner> m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    QList<QString> m_excluded_content_labels;
    bool m_excluded_content_labels_isSet;
    bool m_excluded_content_labels_isValid;

    QList<QString> m_excluded_geo_criteria_ids;
    bool m_excluded_geo_criteria_ids_isSet;
    bool m_excluded_geo_criteria_ids_isValid;

    QList<OAIPretargetingConfig_excludedPlacements_inner> m_excluded_placements;
    bool m_excluded_placements_isSet;
    bool m_excluded_placements_isValid;

    QList<QString> m_excluded_user_lists;
    bool m_excluded_user_lists_isSet;
    bool m_excluded_user_lists_isValid;

    QList<QString> m_excluded_verticals;
    bool m_excluded_verticals_isSet;
    bool m_excluded_verticals_isValid;

    QList<QString> m_geo_criteria_ids;
    bool m_geo_criteria_ids_isSet;
    bool m_geo_criteria_ids_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QList<QString> m_languages;
    bool m_languages_isSet;
    bool m_languages_isValid;

    QString m_maximum_qps;
    bool m_maximum_qps_isSet;
    bool m_maximum_qps_isValid;

    qint32 m_minimum_viewability_decile;
    bool m_minimum_viewability_decile_isSet;
    bool m_minimum_viewability_decile_isValid;

    QList<QString> m_mobile_carriers;
    bool m_mobile_carriers_isSet;
    bool m_mobile_carriers_isValid;

    QList<QString> m_mobile_devices;
    bool m_mobile_devices_isSet;
    bool m_mobile_devices_isValid;

    QList<QString> m_mobile_operating_system_versions;
    bool m_mobile_operating_system_versions_isSet;
    bool m_mobile_operating_system_versions_isValid;

    QList<OAIPretargetingConfig_excludedPlacements_inner> m_placements;
    bool m_placements_isSet;
    bool m_placements_isValid;

    QList<QString> m_platforms;
    bool m_platforms_isSet;
    bool m_platforms_isValid;

    QList<QString> m_supported_creative_attributes;
    bool m_supported_creative_attributes_isSet;
    bool m_supported_creative_attributes_isValid;

    QList<QString> m_user_identifier_data_required;
    bool m_user_identifier_data_required_isSet;
    bool m_user_identifier_data_required_isValid;

    QList<QString> m_user_lists;
    bool m_user_lists_isSet;
    bool m_user_lists_isValid;

    QList<QString> m_vendor_types;
    bool m_vendor_types_isSet;
    bool m_vendor_types_isValid;

    QList<QString> m_verticals;
    bool m_verticals_isSet;
    bool m_verticals_isValid;

    QList<OAIPretargetingConfig_videoPlayerSizes_inner> m_video_player_sizes;
    bool m_video_player_sizes_isSet;
    bool m_video_player_sizes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPretargetingConfig)

#endif // OAIPretargetingConfig_H
