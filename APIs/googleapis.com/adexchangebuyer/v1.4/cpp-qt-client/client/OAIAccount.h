/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccount.h
 *
 * Configuration data for an Ad Exchange buyer account.
 */

#ifndef OAIAccount_H
#define OAIAccount_H

#include <QJsonObject>

#include "OAIAccount_bidderLocation_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccount_bidderLocation_inner;

class OAIAccount : public OAIObject {
public:
    OAIAccount();
    OAIAccount(QString json);
    ~OAIAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isApplyPretargetingToNonGuaranteedDeals() const;
    void setApplyPretargetingToNonGuaranteedDeals(const bool &apply_pretargeting_to_non_guaranteed_deals);
    bool is_apply_pretargeting_to_non_guaranteed_deals_Set() const;
    bool is_apply_pretargeting_to_non_guaranteed_deals_Valid() const;

    QList<OAIAccount_bidderLocation_inner> getBidderLocation() const;
    void setBidderLocation(const QList<OAIAccount_bidderLocation_inner> &bidder_location);
    bool is_bidder_location_Set() const;
    bool is_bidder_location_Valid() const;

    QString getCookieMatchingNid() const;
    void setCookieMatchingNid(const QString &cookie_matching_nid);
    bool is_cookie_matching_nid_Set() const;
    bool is_cookie_matching_nid_Valid() const;

    QString getCookieMatchingUrl() const;
    void setCookieMatchingUrl(const QString &cookie_matching_url);
    bool is_cookie_matching_url_Set() const;
    bool is_cookie_matching_url_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    qint32 getMaximumActiveCreatives() const;
    void setMaximumActiveCreatives(const qint32 &maximum_active_creatives);
    bool is_maximum_active_creatives_Set() const;
    bool is_maximum_active_creatives_Valid() const;

    qint32 getMaximumTotalQps() const;
    void setMaximumTotalQps(const qint32 &maximum_total_qps);
    bool is_maximum_total_qps_Set() const;
    bool is_maximum_total_qps_Valid() const;

    qint32 getNumberActiveCreatives() const;
    void setNumberActiveCreatives(const qint32 &number_active_creatives);
    bool is_number_active_creatives_Set() const;
    bool is_number_active_creatives_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_apply_pretargeting_to_non_guaranteed_deals;
    bool m_apply_pretargeting_to_non_guaranteed_deals_isSet;
    bool m_apply_pretargeting_to_non_guaranteed_deals_isValid;

    QList<OAIAccount_bidderLocation_inner> m_bidder_location;
    bool m_bidder_location_isSet;
    bool m_bidder_location_isValid;

    QString m_cookie_matching_nid;
    bool m_cookie_matching_nid_isSet;
    bool m_cookie_matching_nid_isValid;

    QString m_cookie_matching_url;
    bool m_cookie_matching_url_isSet;
    bool m_cookie_matching_url_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    qint32 m_maximum_active_creatives;
    bool m_maximum_active_creatives_isSet;
    bool m_maximum_active_creatives_isValid;

    qint32 m_maximum_total_qps;
    bool m_maximum_total_qps_isSet;
    bool m_maximum_total_qps_isValid;

    qint32 m_number_active_creatives;
    bool m_number_active_creatives_isSet;
    bool m_number_active_creatives_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccount)

#endif // OAIAccount_H
