/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillingInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillingInfo::OAIBillingInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillingInfo::OAIBillingInfo() {
    this->initializeModel();
}

OAIBillingInfo::~OAIBillingInfo() {}

void OAIBillingInfo::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_billing_id_isSet = false;
    m_billing_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;
}

void OAIBillingInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillingInfo::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("accountName")]);
    m_account_name_isSet = !json[QString("accountName")].isNull() && m_account_name_isValid;

    m_billing_id_isValid = ::OpenAPI::fromJsonValue(m_billing_id, json[QString("billingId")]);
    m_billing_id_isSet = !json[QString("billingId")].isNull() && m_billing_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;
}

QString OAIBillingInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillingInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_account_name_isSet) {
        obj.insert(QString("accountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_billing_id.size() > 0) {
        obj.insert(QString("billingId"), ::OpenAPI::toJsonValue(m_billing_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    return obj;
}

qint32 OAIBillingInfo::getAccountId() const {
    return m_account_id;
}
void OAIBillingInfo::setAccountId(const qint32 &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIBillingInfo::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIBillingInfo::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIBillingInfo::getAccountName() const {
    return m_account_name;
}
void OAIBillingInfo::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIBillingInfo::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIBillingInfo::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QList<QString> OAIBillingInfo::getBillingId() const {
    return m_billing_id;
}
void OAIBillingInfo::setBillingId(const QList<QString> &billing_id) {
    m_billing_id = billing_id;
    m_billing_id_isSet = true;
}

bool OAIBillingInfo::is_billing_id_Set() const{
    return m_billing_id_isSet;
}

bool OAIBillingInfo::is_billing_id_Valid() const{
    return m_billing_id_isValid;
}

QString OAIBillingInfo::getKind() const {
    return m_kind;
}
void OAIBillingInfo::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIBillingInfo::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIBillingInfo::is_kind_Valid() const{
    return m_kind_isValid;
}

bool OAIBillingInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_id.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillingInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
