/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBudget.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBudget::OAIBudget(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBudget::OAIBudget() {
    this->initializeModel();
}

OAIBudget::~OAIBudget() {}

void OAIBudget::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_billing_id_isSet = false;
    m_billing_id_isValid = false;

    m_budget_amount_isSet = false;
    m_budget_amount_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;
}

void OAIBudget::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBudget::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_billing_id_isValid = ::OpenAPI::fromJsonValue(m_billing_id, json[QString("billingId")]);
    m_billing_id_isSet = !json[QString("billingId")].isNull() && m_billing_id_isValid;

    m_budget_amount_isValid = ::OpenAPI::fromJsonValue(m_budget_amount, json[QString("budgetAmount")]);
    m_budget_amount_isSet = !json[QString("budgetAmount")].isNull() && m_budget_amount_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;
}

QString OAIBudget::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBudget::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_billing_id_isSet) {
        obj.insert(QString("billingId"), ::OpenAPI::toJsonValue(m_billing_id));
    }
    if (m_budget_amount_isSet) {
        obj.insert(QString("budgetAmount"), ::OpenAPI::toJsonValue(m_budget_amount));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    return obj;
}

QString OAIBudget::getAccountId() const {
    return m_account_id;
}
void OAIBudget::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIBudget::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIBudget::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIBudget::getBillingId() const {
    return m_billing_id;
}
void OAIBudget::setBillingId(const QString &billing_id) {
    m_billing_id = billing_id;
    m_billing_id_isSet = true;
}

bool OAIBudget::is_billing_id_Set() const{
    return m_billing_id_isSet;
}

bool OAIBudget::is_billing_id_Valid() const{
    return m_billing_id_isValid;
}

QString OAIBudget::getBudgetAmount() const {
    return m_budget_amount;
}
void OAIBudget::setBudgetAmount(const QString &budget_amount) {
    m_budget_amount = budget_amount;
    m_budget_amount_isSet = true;
}

bool OAIBudget::is_budget_amount_Set() const{
    return m_budget_amount_isSet;
}

bool OAIBudget::is_budget_amount_Valid() const{
    return m_budget_amount_isValid;
}

QString OAIBudget::getCurrencyCode() const {
    return m_currency_code;
}
void OAIBudget::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIBudget::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIBudget::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QString OAIBudget::getId() const {
    return m_id;
}
void OAIBudget::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIBudget::is_id_Set() const{
    return m_id_isSet;
}

bool OAIBudget::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIBudget::getKind() const {
    return m_kind;
}
void OAIBudget::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIBudget::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIBudget::is_kind_Valid() const{
    return m_kind_isValid;
}

bool OAIBudget::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_budget_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBudget::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
