/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DirectDeal model module.
 * @module model/DirectDeal
 * @version v1.3
 */
class DirectDeal {
    /**
     * Constructs a new <code>DirectDeal</code>.
     * The configuration data for an Ad Exchange direct deal.
     * @alias module:model/DirectDeal
     */
    constructor() { 
        
        DirectDeal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'adexchangebuyer#directDeal';
    }

    /**
     * Constructs a <code>DirectDeal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DirectDeal} obj Optional instance to populate.
     * @return {module:model/DirectDeal} The populated <code>DirectDeal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DirectDeal();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'Number');
            }
            if (data.hasOwnProperty('advertiser')) {
                obj['advertiser'] = ApiClient.convertToType(data['advertiser'], 'String');
            }
            if (data.hasOwnProperty('allowsAlcohol')) {
                obj['allowsAlcohol'] = ApiClient.convertToType(data['allowsAlcohol'], 'Boolean');
            }
            if (data.hasOwnProperty('buyerAccountId')) {
                obj['buyerAccountId'] = ApiClient.convertToType(data['buyerAccountId'], 'String');
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('dealTier')) {
                obj['dealTier'] = ApiClient.convertToType(data['dealTier'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('fixedCpm')) {
                obj['fixedCpm'] = ApiClient.convertToType(data['fixedCpm'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('privateExchangeMinCpm')) {
                obj['privateExchangeMinCpm'] = ApiClient.convertToType(data['privateExchangeMinCpm'], 'String');
            }
            if (data.hasOwnProperty('publisherBlocksOverriden')) {
                obj['publisherBlocksOverriden'] = ApiClient.convertToType(data['publisherBlocksOverriden'], 'Boolean');
            }
            if (data.hasOwnProperty('sellerNetwork')) {
                obj['sellerNetwork'] = ApiClient.convertToType(data['sellerNetwork'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DirectDeal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DirectDeal</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['advertiser'] && !(typeof data['advertiser'] === 'string' || data['advertiser'] instanceof String)) {
            throw new Error("Expected the field `advertiser` to be a primitive type in the JSON string but got " + data['advertiser']);
        }
        // ensure the json data is a string
        if (data['buyerAccountId'] && !(typeof data['buyerAccountId'] === 'string' || data['buyerAccountId'] instanceof String)) {
            throw new Error("Expected the field `buyerAccountId` to be a primitive type in the JSON string but got " + data['buyerAccountId']);
        }
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }
        // ensure the json data is a string
        if (data['dealTier'] && !(typeof data['dealTier'] === 'string' || data['dealTier'] instanceof String)) {
            throw new Error("Expected the field `dealTier` to be a primitive type in the JSON string but got " + data['dealTier']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['fixedCpm'] && !(typeof data['fixedCpm'] === 'string' || data['fixedCpm'] instanceof String)) {
            throw new Error("Expected the field `fixedCpm` to be a primitive type in the JSON string but got " + data['fixedCpm']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['privateExchangeMinCpm'] && !(typeof data['privateExchangeMinCpm'] === 'string' || data['privateExchangeMinCpm'] instanceof String)) {
            throw new Error("Expected the field `privateExchangeMinCpm` to be a primitive type in the JSON string but got " + data['privateExchangeMinCpm']);
        }
        // ensure the json data is a string
        if (data['sellerNetwork'] && !(typeof data['sellerNetwork'] === 'string' || data['sellerNetwork'] instanceof String)) {
            throw new Error("Expected the field `sellerNetwork` to be a primitive type in the JSON string but got " + data['sellerNetwork']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }

        return true;
    }


}



/**
 * The account id of the buyer this deal is for.
 * @member {Number} accountId
 */
DirectDeal.prototype['accountId'] = undefined;

/**
 * The name of the advertiser this deal is for.
 * @member {String} advertiser
 */
DirectDeal.prototype['advertiser'] = undefined;

/**
 * Whether the publisher for this deal is eligible for alcohol ads.
 * @member {Boolean} allowsAlcohol
 */
DirectDeal.prototype['allowsAlcohol'] = undefined;

/**
 * The account id that this deal was negotiated for. It is either the buyer or the client that this deal was negotiated on behalf of.
 * @member {String} buyerAccountId
 */
DirectDeal.prototype['buyerAccountId'] = undefined;

/**
 * The currency code that applies to the fixed_cpm value. If not set then assumed to be USD.
 * @member {String} currencyCode
 */
DirectDeal.prototype['currencyCode'] = undefined;

/**
 * The deal type such as programmatic reservation or fixed price and so on.
 * @member {String} dealTier
 */
DirectDeal.prototype['dealTier'] = undefined;

/**
 * End time for when this deal stops being active. If not set then this deal is valid until manually disabled by the publisher. In seconds since the epoch.
 * @member {String} endTime
 */
DirectDeal.prototype['endTime'] = undefined;

/**
 * The fixed price for this direct deal. In cpm micros of currency according to currency_code. If set, then this deal is eligible for the fixed price tier of buying (highest priority, pay exactly the configured fixed price).
 * @member {String} fixedCpm
 */
DirectDeal.prototype['fixedCpm'] = undefined;

/**
 * Deal id.
 * @member {String} id
 */
DirectDeal.prototype['id'] = undefined;

/**
 * Resource type.
 * @member {String} kind
 * @default 'adexchangebuyer#directDeal'
 */
DirectDeal.prototype['kind'] = 'adexchangebuyer#directDeal';

/**
 * Deal name.
 * @member {String} name
 */
DirectDeal.prototype['name'] = undefined;

/**
 * The minimum price for this direct deal. In cpm micros of currency according to currency_code. If set, then this deal is eligible for the private exchange tier of buying (below fixed price priority, run as a second price auction).
 * @member {String} privateExchangeMinCpm
 */
DirectDeal.prototype['privateExchangeMinCpm'] = undefined;

/**
 * If true, the publisher has opted to have their blocks ignored when a creative is bid with for this deal.
 * @member {Boolean} publisherBlocksOverriden
 */
DirectDeal.prototype['publisherBlocksOverriden'] = undefined;

/**
 * The name of the publisher offering this direct deal.
 * @member {String} sellerNetwork
 */
DirectDeal.prototype['sellerNetwork'] = undefined;

/**
 * Start time for when this deal becomes active. If not set then this deal is active immediately upon creation. In seconds since the epoch.
 * @member {String} startTime
 */
DirectDeal.prototype['startTime'] = undefined;






export default DirectDeal;

