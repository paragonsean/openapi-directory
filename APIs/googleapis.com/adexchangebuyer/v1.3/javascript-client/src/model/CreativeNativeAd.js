/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreativeNativeAdAppIcon from './CreativeNativeAdAppIcon';
import CreativeNativeAdImage from './CreativeNativeAdImage';
import CreativeNativeAdLogo from './CreativeNativeAdLogo';

/**
 * The CreativeNativeAd model module.
 * @module model/CreativeNativeAd
 * @version v1.3
 */
class CreativeNativeAd {
    /**
     * Constructs a new <code>CreativeNativeAd</code>.
     * If nativeAd is set, HTMLSnippet and videoURL should not be set.
     * @alias module:model/CreativeNativeAd
     */
    constructor() { 
        
        CreativeNativeAd.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreativeNativeAd</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreativeNativeAd} obj Optional instance to populate.
     * @return {module:model/CreativeNativeAd} The populated <code>CreativeNativeAd</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreativeNativeAd();

            if (data.hasOwnProperty('advertiser')) {
                obj['advertiser'] = ApiClient.convertToType(data['advertiser'], 'String');
            }
            if (data.hasOwnProperty('appIcon')) {
                obj['appIcon'] = CreativeNativeAdAppIcon.constructFromObject(data['appIcon']);
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('callToAction')) {
                obj['callToAction'] = ApiClient.convertToType(data['callToAction'], 'String');
            }
            if (data.hasOwnProperty('clickTrackingUrl')) {
                obj['clickTrackingUrl'] = ApiClient.convertToType(data['clickTrackingUrl'], 'String');
            }
            if (data.hasOwnProperty('headline')) {
                obj['headline'] = ApiClient.convertToType(data['headline'], 'String');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = CreativeNativeAdImage.constructFromObject(data['image']);
            }
            if (data.hasOwnProperty('impressionTrackingUrl')) {
                obj['impressionTrackingUrl'] = ApiClient.convertToType(data['impressionTrackingUrl'], ['String']);
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = CreativeNativeAdLogo.constructFromObject(data['logo']);
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'String');
            }
            if (data.hasOwnProperty('starRating')) {
                obj['starRating'] = ApiClient.convertToType(data['starRating'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreativeNativeAd</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreativeNativeAd</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['advertiser'] && !(typeof data['advertiser'] === 'string' || data['advertiser'] instanceof String)) {
            throw new Error("Expected the field `advertiser` to be a primitive type in the JSON string but got " + data['advertiser']);
        }
        // validate the optional field `appIcon`
        if (data['appIcon']) { // data not null
          CreativeNativeAdAppIcon.validateJSON(data['appIcon']);
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['callToAction'] && !(typeof data['callToAction'] === 'string' || data['callToAction'] instanceof String)) {
            throw new Error("Expected the field `callToAction` to be a primitive type in the JSON string but got " + data['callToAction']);
        }
        // ensure the json data is a string
        if (data['clickTrackingUrl'] && !(typeof data['clickTrackingUrl'] === 'string' || data['clickTrackingUrl'] instanceof String)) {
            throw new Error("Expected the field `clickTrackingUrl` to be a primitive type in the JSON string but got " + data['clickTrackingUrl']);
        }
        // ensure the json data is a string
        if (data['headline'] && !(typeof data['headline'] === 'string' || data['headline'] instanceof String)) {
            throw new Error("Expected the field `headline` to be a primitive type in the JSON string but got " + data['headline']);
        }
        // validate the optional field `image`
        if (data['image']) { // data not null
          CreativeNativeAdImage.validateJSON(data['image']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['impressionTrackingUrl'])) {
            throw new Error("Expected the field `impressionTrackingUrl` to be an array in the JSON data but got " + data['impressionTrackingUrl']);
        }
        // validate the optional field `logo`
        if (data['logo']) { // data not null
          CreativeNativeAdLogo.validateJSON(data['logo']);
        }
        // ensure the json data is a string
        if (data['price'] && !(typeof data['price'] === 'string' || data['price'] instanceof String)) {
            throw new Error("Expected the field `price` to be a primitive type in the JSON string but got " + data['price']);
        }

        return true;
    }


}



/**
 * @member {String} advertiser
 */
CreativeNativeAd.prototype['advertiser'] = undefined;

/**
 * @member {module:model/CreativeNativeAdAppIcon} appIcon
 */
CreativeNativeAd.prototype['appIcon'] = undefined;

/**
 * A long description of the ad.
 * @member {String} body
 */
CreativeNativeAd.prototype['body'] = undefined;

/**
 * A label for the button that the user is supposed to click.
 * @member {String} callToAction
 */
CreativeNativeAd.prototype['callToAction'] = undefined;

/**
 * The URL to use for click tracking.
 * @member {String} clickTrackingUrl
 */
CreativeNativeAd.prototype['clickTrackingUrl'] = undefined;

/**
 * A short title for the ad.
 * @member {String} headline
 */
CreativeNativeAd.prototype['headline'] = undefined;

/**
 * @member {module:model/CreativeNativeAdImage} image
 */
CreativeNativeAd.prototype['image'] = undefined;

/**
 * The URLs are called when the impression is rendered.
 * @member {Array.<String>} impressionTrackingUrl
 */
CreativeNativeAd.prototype['impressionTrackingUrl'] = undefined;

/**
 * @member {module:model/CreativeNativeAdLogo} logo
 */
CreativeNativeAd.prototype['logo'] = undefined;

/**
 * The price of the promoted app including the currency info.
 * @member {String} price
 */
CreativeNativeAd.prototype['price'] = undefined;

/**
 * The app rating in the app store. Must be in the range [0-5].
 * @member {Number} starRating
 */
CreativeNativeAd.prototype['starRating'] = undefined;






export default CreativeNativeAd;

