/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DirectDeal from './DirectDeal';

/**
 * The DirectDealsList model module.
 * @module model/DirectDealsList
 * @version v1.3
 */
class DirectDealsList {
    /**
     * Constructs a new <code>DirectDealsList</code>.
     * A direct deals feed lists Direct Deals the Ad Exchange buyer account has access to. This includes direct deals set up for the buyer account as well as its merged stream seats.
     * @alias module:model/DirectDealsList
     */
    constructor() { 
        
        DirectDealsList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'adexchangebuyer#directDealsList';
    }

    /**
     * Constructs a <code>DirectDealsList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DirectDealsList} obj Optional instance to populate.
     * @return {module:model/DirectDealsList} The populated <code>DirectDealsList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DirectDealsList();

            if (data.hasOwnProperty('directDeals')) {
                obj['directDeals'] = ApiClient.convertToType(data['directDeals'], [DirectDeal]);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DirectDealsList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DirectDealsList</code>.
     */
    static validateJSON(data) {
        if (data['directDeals']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['directDeals'])) {
                throw new Error("Expected the field `directDeals` to be an array in the JSON data but got " + data['directDeals']);
            }
            // validate the optional field `directDeals` (array)
            for (const item of data['directDeals']) {
                DirectDeal.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * A list of direct deals relevant for your account.
 * @member {Array.<module:model/DirectDeal>} directDeals
 */
DirectDealsList.prototype['directDeals'] = undefined;

/**
 * Resource type.
 * @member {String} kind
 * @default 'adexchangebuyer#directDealsList'
 */
DirectDealsList.prototype['kind'] = 'adexchangebuyer#directDealsList';






export default DirectDealsList;

