/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdExchangeBuyerApi);
  }
}(this, function(expect, AdExchangeBuyerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdExchangeBuyerApi.PerformanceReport();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PerformanceReport', function() {
    it('should create an instance of PerformanceReport', function() {
      // uncomment below and update the code to test PerformanceReport
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be.a(AdExchangeBuyerApi.PerformanceReport);
    });

    it('should have the property bidRate (base name: "bidRate")', function() {
      // uncomment below and update the code to test the property bidRate
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property bidRequestRate (base name: "bidRequestRate")', function() {
      // uncomment below and update the code to test the property bidRequestRate
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property calloutStatusRate (base name: "calloutStatusRate")', function() {
      // uncomment below and update the code to test the property calloutStatusRate
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property cookieMatcherStatusRate (base name: "cookieMatcherStatusRate")', function() {
      // uncomment below and update the code to test the property cookieMatcherStatusRate
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property creativeStatusRate (base name: "creativeStatusRate")', function() {
      // uncomment below and update the code to test the property creativeStatusRate
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property filteredBidRate (base name: "filteredBidRate")', function() {
      // uncomment below and update the code to test the property filteredBidRate
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property hostedMatchStatusRate (base name: "hostedMatchStatusRate")', function() {
      // uncomment below and update the code to test the property hostedMatchStatusRate
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property inventoryMatchRate (base name: "inventoryMatchRate")', function() {
      // uncomment below and update the code to test the property inventoryMatchRate
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property latency50thPercentile (base name: "latency50thPercentile")', function() {
      // uncomment below and update the code to test the property latency50thPercentile
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property latency85thPercentile (base name: "latency85thPercentile")', function() {
      // uncomment below and update the code to test the property latency85thPercentile
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property latency95thPercentile (base name: "latency95thPercentile")', function() {
      // uncomment below and update the code to test the property latency95thPercentile
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property noQuotaInRegion (base name: "noQuotaInRegion")', function() {
      // uncomment below and update the code to test the property noQuotaInRegion
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property outOfQuota (base name: "outOfQuota")', function() {
      // uncomment below and update the code to test the property outOfQuota
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property pixelMatchRequests (base name: "pixelMatchRequests")', function() {
      // uncomment below and update the code to test the property pixelMatchRequests
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property pixelMatchResponses (base name: "pixelMatchResponses")', function() {
      // uncomment below and update the code to test the property pixelMatchResponses
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property quotaConfiguredLimit (base name: "quotaConfiguredLimit")', function() {
      // uncomment below and update the code to test the property quotaConfiguredLimit
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property quotaThrottledLimit (base name: "quotaThrottledLimit")', function() {
      // uncomment below and update the code to test the property quotaThrottledLimit
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "region")', function() {
      // uncomment below and update the code to test the property region
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property successfulRequestRate (base name: "successfulRequestRate")', function() {
      // uncomment below and update the code to test the property successfulRequestRate
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

    it('should have the property unsuccessfulRequestRate (base name: "unsuccessfulRequestRate")', function() {
      // uncomment below and update the code to test the property unsuccessfulRequestRate
      //var instance = new AdExchangeBuyerApi.PerformanceReport();
      //expect(instance).to.be();
    });

  });

}));
