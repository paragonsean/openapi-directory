/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDirectDeal.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDirectDeal::OAIDirectDeal(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDirectDeal::OAIDirectDeal() {
    this->initializeModel();
}

OAIDirectDeal::~OAIDirectDeal() {}

void OAIDirectDeal::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_advertiser_isSet = false;
    m_advertiser_isValid = false;

    m_allows_alcohol_isSet = false;
    m_allows_alcohol_isValid = false;

    m_buyer_account_id_isSet = false;
    m_buyer_account_id_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_deal_tier_isSet = false;
    m_deal_tier_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_fixed_cpm_isSet = false;
    m_fixed_cpm_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_private_exchange_min_cpm_isSet = false;
    m_private_exchange_min_cpm_isValid = false;

    m_publisher_blocks_overriden_isSet = false;
    m_publisher_blocks_overriden_isValid = false;

    m_seller_network_isSet = false;
    m_seller_network_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIDirectDeal::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDirectDeal::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_advertiser_isValid = ::OpenAPI::fromJsonValue(m_advertiser, json[QString("advertiser")]);
    m_advertiser_isSet = !json[QString("advertiser")].isNull() && m_advertiser_isValid;

    m_allows_alcohol_isValid = ::OpenAPI::fromJsonValue(m_allows_alcohol, json[QString("allowsAlcohol")]);
    m_allows_alcohol_isSet = !json[QString("allowsAlcohol")].isNull() && m_allows_alcohol_isValid;

    m_buyer_account_id_isValid = ::OpenAPI::fromJsonValue(m_buyer_account_id, json[QString("buyerAccountId")]);
    m_buyer_account_id_isSet = !json[QString("buyerAccountId")].isNull() && m_buyer_account_id_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_deal_tier_isValid = ::OpenAPI::fromJsonValue(m_deal_tier, json[QString("dealTier")]);
    m_deal_tier_isSet = !json[QString("dealTier")].isNull() && m_deal_tier_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_fixed_cpm_isValid = ::OpenAPI::fromJsonValue(m_fixed_cpm, json[QString("fixedCpm")]);
    m_fixed_cpm_isSet = !json[QString("fixedCpm")].isNull() && m_fixed_cpm_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_private_exchange_min_cpm_isValid = ::OpenAPI::fromJsonValue(m_private_exchange_min_cpm, json[QString("privateExchangeMinCpm")]);
    m_private_exchange_min_cpm_isSet = !json[QString("privateExchangeMinCpm")].isNull() && m_private_exchange_min_cpm_isValid;

    m_publisher_blocks_overriden_isValid = ::OpenAPI::fromJsonValue(m_publisher_blocks_overriden, json[QString("publisherBlocksOverriden")]);
    m_publisher_blocks_overriden_isSet = !json[QString("publisherBlocksOverriden")].isNull() && m_publisher_blocks_overriden_isValid;

    m_seller_network_isValid = ::OpenAPI::fromJsonValue(m_seller_network, json[QString("sellerNetwork")]);
    m_seller_network_isSet = !json[QString("sellerNetwork")].isNull() && m_seller_network_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIDirectDeal::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDirectDeal::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_advertiser_isSet) {
        obj.insert(QString("advertiser"), ::OpenAPI::toJsonValue(m_advertiser));
    }
    if (m_allows_alcohol_isSet) {
        obj.insert(QString("allowsAlcohol"), ::OpenAPI::toJsonValue(m_allows_alcohol));
    }
    if (m_buyer_account_id_isSet) {
        obj.insert(QString("buyerAccountId"), ::OpenAPI::toJsonValue(m_buyer_account_id));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_deal_tier_isSet) {
        obj.insert(QString("dealTier"), ::OpenAPI::toJsonValue(m_deal_tier));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_fixed_cpm_isSet) {
        obj.insert(QString("fixedCpm"), ::OpenAPI::toJsonValue(m_fixed_cpm));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_private_exchange_min_cpm_isSet) {
        obj.insert(QString("privateExchangeMinCpm"), ::OpenAPI::toJsonValue(m_private_exchange_min_cpm));
    }
    if (m_publisher_blocks_overriden_isSet) {
        obj.insert(QString("publisherBlocksOverriden"), ::OpenAPI::toJsonValue(m_publisher_blocks_overriden));
    }
    if (m_seller_network_isSet) {
        obj.insert(QString("sellerNetwork"), ::OpenAPI::toJsonValue(m_seller_network));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

qint32 OAIDirectDeal::getAccountId() const {
    return m_account_id;
}
void OAIDirectDeal::setAccountId(const qint32 &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIDirectDeal::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIDirectDeal::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIDirectDeal::getAdvertiser() const {
    return m_advertiser;
}
void OAIDirectDeal::setAdvertiser(const QString &advertiser) {
    m_advertiser = advertiser;
    m_advertiser_isSet = true;
}

bool OAIDirectDeal::is_advertiser_Set() const{
    return m_advertiser_isSet;
}

bool OAIDirectDeal::is_advertiser_Valid() const{
    return m_advertiser_isValid;
}

bool OAIDirectDeal::isAllowsAlcohol() const {
    return m_allows_alcohol;
}
void OAIDirectDeal::setAllowsAlcohol(const bool &allows_alcohol) {
    m_allows_alcohol = allows_alcohol;
    m_allows_alcohol_isSet = true;
}

bool OAIDirectDeal::is_allows_alcohol_Set() const{
    return m_allows_alcohol_isSet;
}

bool OAIDirectDeal::is_allows_alcohol_Valid() const{
    return m_allows_alcohol_isValid;
}

QString OAIDirectDeal::getBuyerAccountId() const {
    return m_buyer_account_id;
}
void OAIDirectDeal::setBuyerAccountId(const QString &buyer_account_id) {
    m_buyer_account_id = buyer_account_id;
    m_buyer_account_id_isSet = true;
}

bool OAIDirectDeal::is_buyer_account_id_Set() const{
    return m_buyer_account_id_isSet;
}

bool OAIDirectDeal::is_buyer_account_id_Valid() const{
    return m_buyer_account_id_isValid;
}

QString OAIDirectDeal::getCurrencyCode() const {
    return m_currency_code;
}
void OAIDirectDeal::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIDirectDeal::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIDirectDeal::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QString OAIDirectDeal::getDealTier() const {
    return m_deal_tier;
}
void OAIDirectDeal::setDealTier(const QString &deal_tier) {
    m_deal_tier = deal_tier;
    m_deal_tier_isSet = true;
}

bool OAIDirectDeal::is_deal_tier_Set() const{
    return m_deal_tier_isSet;
}

bool OAIDirectDeal::is_deal_tier_Valid() const{
    return m_deal_tier_isValid;
}

QString OAIDirectDeal::getEndTime() const {
    return m_end_time;
}
void OAIDirectDeal::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIDirectDeal::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIDirectDeal::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIDirectDeal::getFixedCpm() const {
    return m_fixed_cpm;
}
void OAIDirectDeal::setFixedCpm(const QString &fixed_cpm) {
    m_fixed_cpm = fixed_cpm;
    m_fixed_cpm_isSet = true;
}

bool OAIDirectDeal::is_fixed_cpm_Set() const{
    return m_fixed_cpm_isSet;
}

bool OAIDirectDeal::is_fixed_cpm_Valid() const{
    return m_fixed_cpm_isValid;
}

QString OAIDirectDeal::getId() const {
    return m_id;
}
void OAIDirectDeal::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIDirectDeal::is_id_Set() const{
    return m_id_isSet;
}

bool OAIDirectDeal::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIDirectDeal::getKind() const {
    return m_kind;
}
void OAIDirectDeal::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIDirectDeal::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIDirectDeal::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIDirectDeal::getName() const {
    return m_name;
}
void OAIDirectDeal::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDirectDeal::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDirectDeal::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIDirectDeal::getPrivateExchangeMinCpm() const {
    return m_private_exchange_min_cpm;
}
void OAIDirectDeal::setPrivateExchangeMinCpm(const QString &private_exchange_min_cpm) {
    m_private_exchange_min_cpm = private_exchange_min_cpm;
    m_private_exchange_min_cpm_isSet = true;
}

bool OAIDirectDeal::is_private_exchange_min_cpm_Set() const{
    return m_private_exchange_min_cpm_isSet;
}

bool OAIDirectDeal::is_private_exchange_min_cpm_Valid() const{
    return m_private_exchange_min_cpm_isValid;
}

bool OAIDirectDeal::isPublisherBlocksOverriden() const {
    return m_publisher_blocks_overriden;
}
void OAIDirectDeal::setPublisherBlocksOverriden(const bool &publisher_blocks_overriden) {
    m_publisher_blocks_overriden = publisher_blocks_overriden;
    m_publisher_blocks_overriden_isSet = true;
}

bool OAIDirectDeal::is_publisher_blocks_overriden_Set() const{
    return m_publisher_blocks_overriden_isSet;
}

bool OAIDirectDeal::is_publisher_blocks_overriden_Valid() const{
    return m_publisher_blocks_overriden_isValid;
}

QString OAIDirectDeal::getSellerNetwork() const {
    return m_seller_network;
}
void OAIDirectDeal::setSellerNetwork(const QString &seller_network) {
    m_seller_network = seller_network;
    m_seller_network_isSet = true;
}

bool OAIDirectDeal::is_seller_network_Set() const{
    return m_seller_network_isSet;
}

bool OAIDirectDeal::is_seller_network_Valid() const{
    return m_seller_network_isValid;
}

QString OAIDirectDeal::getStartTime() const {
    return m_start_time;
}
void OAIDirectDeal::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIDirectDeal::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIDirectDeal::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIDirectDeal::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advertiser_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allows_alcohol_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_buyer_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deal_tier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fixed_cpm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_exchange_min_cpm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_blocks_overriden_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_seller_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDirectDeal::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
