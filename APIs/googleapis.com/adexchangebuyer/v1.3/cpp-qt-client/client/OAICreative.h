/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreative.h
 *
 * A creative and its classification data.
 */

#ifndef OAICreative_H
#define OAICreative_H

#include <QJsonObject>

#include "OAICreative_adTechnologyProviders.h"
#include "OAICreative_corrections_inner.h"
#include "OAICreative_disapprovalReasons_inner.h"
#include "OAICreative_filteringReasons.h"
#include "OAICreative_nativeAd.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreative_adTechnologyProviders;
class OAICreative_corrections_inner;
class OAICreative_disapprovalReasons_inner;
class OAICreative_filteringReasons;
class OAICreative_nativeAd;

class OAICreative : public OAIObject {
public:
    OAICreative();
    OAICreative(QString json);
    ~OAICreative() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHtmlSnippet() const;
    void setHtmlSnippet(const QString &html_snippet);
    bool is_html_snippet_Set() const;
    bool is_html_snippet_Valid() const;

    qint32 getAccountId() const;
    void setAccountId(const qint32 &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    OAICreative_adTechnologyProviders getAdTechnologyProviders() const;
    void setAdTechnologyProviders(const OAICreative_adTechnologyProviders &ad_technology_providers);
    bool is_ad_technology_providers_Set() const;
    bool is_ad_technology_providers_Valid() const;

    QList<QString> getAdvertiserId() const;
    void setAdvertiserId(const QList<QString> &advertiser_id);
    bool is_advertiser_id_Set() const;
    bool is_advertiser_id_Valid() const;

    QString getAdvertiserName() const;
    void setAdvertiserName(const QString &advertiser_name);
    bool is_advertiser_name_Set() const;
    bool is_advertiser_name_Valid() const;

    QString getAgencyId() const;
    void setAgencyId(const QString &agency_id);
    bool is_agency_id_Set() const;
    bool is_agency_id_Valid() const;

    QDateTime getApiUploadTimestamp() const;
    void setApiUploadTimestamp(const QDateTime &api_upload_timestamp);
    bool is_api_upload_timestamp_Set() const;
    bool is_api_upload_timestamp_Valid() const;

    QList<qint32> getAttribute() const;
    void setAttribute(const QList<qint32> &attribute);
    bool is_attribute_Set() const;
    bool is_attribute_Valid() const;

    QString getBuyerCreativeId() const;
    void setBuyerCreativeId(const QString &buyer_creative_id);
    bool is_buyer_creative_id_Set() const;
    bool is_buyer_creative_id_Valid() const;

    QList<QString> getClickThroughUrl() const;
    void setClickThroughUrl(const QList<QString> &click_through_url);
    bool is_click_through_url_Set() const;
    bool is_click_through_url_Valid() const;

    QList<OAICreative_corrections_inner> getCorrections() const;
    void setCorrections(const QList<OAICreative_corrections_inner> &corrections);
    bool is_corrections_Set() const;
    bool is_corrections_Valid() const;

    QList<OAICreative_disapprovalReasons_inner> getDisapprovalReasons() const;
    void setDisapprovalReasons(const QList<OAICreative_disapprovalReasons_inner> &disapproval_reasons);
    bool is_disapproval_reasons_Set() const;
    bool is_disapproval_reasons_Valid() const;

    OAICreative_filteringReasons getFilteringReasons() const;
    void setFilteringReasons(const OAICreative_filteringReasons &filtering_reasons);
    bool is_filtering_reasons_Set() const;
    bool is_filtering_reasons_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QList<QString> getImpressionTrackingUrl() const;
    void setImpressionTrackingUrl(const QList<QString> &impression_tracking_url);
    bool is_impression_tracking_url_Set() const;
    bool is_impression_tracking_url_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAICreative_nativeAd getNativeAd() const;
    void setNativeAd(const OAICreative_nativeAd &native_ad);
    bool is_native_ad_Set() const;
    bool is_native_ad_Valid() const;

    QList<qint32> getProductCategories() const;
    void setProductCategories(const QList<qint32> &product_categories);
    bool is_product_categories_Set() const;
    bool is_product_categories_Valid() const;

    QList<qint32> getRestrictedCategories() const;
    void setRestrictedCategories(const QList<qint32> &restricted_categories);
    bool is_restricted_categories_Set() const;
    bool is_restricted_categories_Valid() const;

    QList<qint32> getSensitiveCategories() const;
    void setSensitiveCategories(const QList<qint32> &sensitive_categories);
    bool is_sensitive_categories_Set() const;
    bool is_sensitive_categories_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<qint32> getVendorType() const;
    void setVendorType(const QList<qint32> &vendor_type);
    bool is_vendor_type_Set() const;
    bool is_vendor_type_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getVideoUrl() const;
    void setVideoUrl(const QString &video_url);
    bool is_video_url_Set() const;
    bool is_video_url_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_html_snippet;
    bool m_html_snippet_isSet;
    bool m_html_snippet_isValid;

    qint32 m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    OAICreative_adTechnologyProviders m_ad_technology_providers;
    bool m_ad_technology_providers_isSet;
    bool m_ad_technology_providers_isValid;

    QList<QString> m_advertiser_id;
    bool m_advertiser_id_isSet;
    bool m_advertiser_id_isValid;

    QString m_advertiser_name;
    bool m_advertiser_name_isSet;
    bool m_advertiser_name_isValid;

    QString m_agency_id;
    bool m_agency_id_isSet;
    bool m_agency_id_isValid;

    QDateTime m_api_upload_timestamp;
    bool m_api_upload_timestamp_isSet;
    bool m_api_upload_timestamp_isValid;

    QList<qint32> m_attribute;
    bool m_attribute_isSet;
    bool m_attribute_isValid;

    QString m_buyer_creative_id;
    bool m_buyer_creative_id_isSet;
    bool m_buyer_creative_id_isValid;

    QList<QString> m_click_through_url;
    bool m_click_through_url_isSet;
    bool m_click_through_url_isValid;

    QList<OAICreative_corrections_inner> m_corrections;
    bool m_corrections_isSet;
    bool m_corrections_isValid;

    QList<OAICreative_disapprovalReasons_inner> m_disapproval_reasons;
    bool m_disapproval_reasons_isSet;
    bool m_disapproval_reasons_isValid;

    OAICreative_filteringReasons m_filtering_reasons;
    bool m_filtering_reasons_isSet;
    bool m_filtering_reasons_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QList<QString> m_impression_tracking_url;
    bool m_impression_tracking_url_isSet;
    bool m_impression_tracking_url_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAICreative_nativeAd m_native_ad;
    bool m_native_ad_isSet;
    bool m_native_ad_isValid;

    QList<qint32> m_product_categories;
    bool m_product_categories_isSet;
    bool m_product_categories_isValid;

    QList<qint32> m_restricted_categories;
    bool m_restricted_categories_isSet;
    bool m_restricted_categories_isValid;

    QList<qint32> m_sensitive_categories;
    bool m_sensitive_categories_isSet;
    bool m_sensitive_categories_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<qint32> m_vendor_type;
    bool m_vendor_type_isSet;
    bool m_vendor_type_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_video_url;
    bool m_video_url_isSet;
    bool m_video_url_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreative)

#endif // OAICreative_H
