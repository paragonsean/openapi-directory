/*
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PerformanceReport
 */
public class PerformanceReportTest {
    private final PerformanceReport model = new PerformanceReport();

    /**
     * Model tests for PerformanceReport
     */
    @Test
    public void testPerformanceReport() {
        // TODO: test PerformanceReport
    }

    /**
     * Test the property 'bidRate'
     */
    @Test
    public void bidRateTest() {
        // TODO: test bidRate
    }

    /**
     * Test the property 'bidRequestRate'
     */
    @Test
    public void bidRequestRateTest() {
        // TODO: test bidRequestRate
    }

    /**
     * Test the property 'calloutStatusRate'
     */
    @Test
    public void calloutStatusRateTest() {
        // TODO: test calloutStatusRate
    }

    /**
     * Test the property 'cookieMatcherStatusRate'
     */
    @Test
    public void cookieMatcherStatusRateTest() {
        // TODO: test cookieMatcherStatusRate
    }

    /**
     * Test the property 'creativeStatusRate'
     */
    @Test
    public void creativeStatusRateTest() {
        // TODO: test creativeStatusRate
    }

    /**
     * Test the property 'filteredBidRate'
     */
    @Test
    public void filteredBidRateTest() {
        // TODO: test filteredBidRate
    }

    /**
     * Test the property 'hostedMatchStatusRate'
     */
    @Test
    public void hostedMatchStatusRateTest() {
        // TODO: test hostedMatchStatusRate
    }

    /**
     * Test the property 'inventoryMatchRate'
     */
    @Test
    public void inventoryMatchRateTest() {
        // TODO: test inventoryMatchRate
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'latency50thPercentile'
     */
    @Test
    public void latency50thPercentileTest() {
        // TODO: test latency50thPercentile
    }

    /**
     * Test the property 'latency85thPercentile'
     */
    @Test
    public void latency85thPercentileTest() {
        // TODO: test latency85thPercentile
    }

    /**
     * Test the property 'latency95thPercentile'
     */
    @Test
    public void latency95thPercentileTest() {
        // TODO: test latency95thPercentile
    }

    /**
     * Test the property 'noQuotaInRegion'
     */
    @Test
    public void noQuotaInRegionTest() {
        // TODO: test noQuotaInRegion
    }

    /**
     * Test the property 'outOfQuota'
     */
    @Test
    public void outOfQuotaTest() {
        // TODO: test outOfQuota
    }

    /**
     * Test the property 'pixelMatchRequests'
     */
    @Test
    public void pixelMatchRequestsTest() {
        // TODO: test pixelMatchRequests
    }

    /**
     * Test the property 'pixelMatchResponses'
     */
    @Test
    public void pixelMatchResponsesTest() {
        // TODO: test pixelMatchResponses
    }

    /**
     * Test the property 'quotaConfiguredLimit'
     */
    @Test
    public void quotaConfiguredLimitTest() {
        // TODO: test quotaConfiguredLimit
    }

    /**
     * Test the property 'quotaThrottledLimit'
     */
    @Test
    public void quotaThrottledLimitTest() {
        // TODO: test quotaThrottledLimit
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'successfulRequestRate'
     */
    @Test
    public void successfulRequestRateTest() {
        // TODO: test successfulRequestRate
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'unsuccessfulRequestRate'
     */
    @Test
    public void unsuccessfulRequestRateTest() {
        // TODO: test unsuccessfulRequestRate
    }

}
