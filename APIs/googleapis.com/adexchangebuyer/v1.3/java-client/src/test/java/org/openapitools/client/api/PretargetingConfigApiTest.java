/*
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PretargetingConfig;
import org.openapitools.client.model.PretargetingConfigList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PretargetingConfigApi
 */
@Disabled
public class PretargetingConfigApiTest {

    private final PretargetingConfigApi api = new PretargetingConfigApi();

    /**
     * Deletes an existing pretargeting config.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adexchangebuyerPretargetingConfigDeleteTest() throws ApiException {
        String accountId = null;
        String configId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        api.adexchangebuyerPretargetingConfigDelete(accountId, configId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

    /**
     * Gets a specific pretargeting configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adexchangebuyerPretargetingConfigGetTest() throws ApiException {
        String accountId = null;
        String configId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        PretargetingConfig response = api.adexchangebuyerPretargetingConfigGet(accountId, configId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

    /**
     * Inserts a new pretargeting configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adexchangebuyerPretargetingConfigInsertTest() throws ApiException {
        String accountId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        PretargetingConfig pretargetingConfig = null;
        PretargetingConfig response = api.adexchangebuyerPretargetingConfigInsert(accountId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, pretargetingConfig);
        // TODO: test validations
    }

    /**
     * Retrieves a list of the authenticated user&#39;s pretargeting configurations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adexchangebuyerPretargetingConfigListTest() throws ApiException {
        String accountId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        PretargetingConfigList response = api.adexchangebuyerPretargetingConfigList(accountId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

    /**
     * Updates an existing pretargeting config. This method supports patch semantics.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adexchangebuyerPretargetingConfigPatchTest() throws ApiException {
        String accountId = null;
        String configId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        PretargetingConfig pretargetingConfig = null;
        PretargetingConfig response = api.adexchangebuyerPretargetingConfigPatch(accountId, configId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, pretargetingConfig);
        // TODO: test validations
    }

    /**
     * Updates an existing pretargeting config.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adexchangebuyerPretargetingConfigUpdateTest() throws ApiException {
        String accountId = null;
        String configId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        PretargetingConfig pretargetingConfig = null;
        PretargetingConfig response = api.adexchangebuyerPretargetingConfigUpdate(accountId, configId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, pretargetingConfig);
        // TODO: test validations
    }

}
