/*
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DirectDeal;
import org.openapitools.client.model.DirectDealsList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DirectDealsApi
 */
@Disabled
public class DirectDealsApiTest {

    private final DirectDealsApi api = new DirectDealsApi();

    /**
     * Gets one direct deal by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adexchangebuyerDirectDealsGetTest() throws ApiException {
        String id = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        DirectDeal response = api.adexchangebuyerDirectDealsGet(id, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

    /**
     * Retrieves the authenticated user&#39;s list of direct deals.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adexchangebuyerDirectDealsListTest() throws ApiException {
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        DirectDealsList response = api.adexchangebuyerDirectDealsList(alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

}
