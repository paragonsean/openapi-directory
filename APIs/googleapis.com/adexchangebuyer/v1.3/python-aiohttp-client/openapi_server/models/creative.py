# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.creative_ad_technology_providers import CreativeAdTechnologyProviders
from openapi_server.models.creative_corrections_inner import CreativeCorrectionsInner
from openapi_server.models.creative_disapproval_reasons_inner import CreativeDisapprovalReasonsInner
from openapi_server.models.creative_filtering_reasons import CreativeFilteringReasons
from openapi_server.models.creative_native_ad import CreativeNativeAd
from openapi_server import util


class Creative(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, html_snippet: str=None, account_id: int=None, ad_technology_providers: CreativeAdTechnologyProviders=None, advertiser_id: List[str]=None, advertiser_name: str=None, agency_id: str=None, api_upload_timestamp: datetime=None, attribute: List[int]=None, buyer_creative_id: str=None, click_through_url: List[str]=None, corrections: List[CreativeCorrectionsInner]=None, disapproval_reasons: List[CreativeDisapprovalReasonsInner]=None, filtering_reasons: CreativeFilteringReasons=None, height: int=None, impression_tracking_url: List[str]=None, kind: str='adexchangebuyer#creative', native_ad: CreativeNativeAd=None, product_categories: List[int]=None, restricted_categories: List[int]=None, sensitive_categories: List[int]=None, status: str=None, vendor_type: List[int]=None, version: int=None, video_url: str=None, width: int=None):
        """Creative - a model defined in OpenAPI

        :param html_snippet: The html_snippet of this Creative.
        :param account_id: The account_id of this Creative.
        :param ad_technology_providers: The ad_technology_providers of this Creative.
        :param advertiser_id: The advertiser_id of this Creative.
        :param advertiser_name: The advertiser_name of this Creative.
        :param agency_id: The agency_id of this Creative.
        :param api_upload_timestamp: The api_upload_timestamp of this Creative.
        :param attribute: The attribute of this Creative.
        :param buyer_creative_id: The buyer_creative_id of this Creative.
        :param click_through_url: The click_through_url of this Creative.
        :param corrections: The corrections of this Creative.
        :param disapproval_reasons: The disapproval_reasons of this Creative.
        :param filtering_reasons: The filtering_reasons of this Creative.
        :param height: The height of this Creative.
        :param impression_tracking_url: The impression_tracking_url of this Creative.
        :param kind: The kind of this Creative.
        :param native_ad: The native_ad of this Creative.
        :param product_categories: The product_categories of this Creative.
        :param restricted_categories: The restricted_categories of this Creative.
        :param sensitive_categories: The sensitive_categories of this Creative.
        :param status: The status of this Creative.
        :param vendor_type: The vendor_type of this Creative.
        :param version: The version of this Creative.
        :param video_url: The video_url of this Creative.
        :param width: The width of this Creative.
        """
        self.openapi_types = {
            'html_snippet': str,
            'account_id': int,
            'ad_technology_providers': CreativeAdTechnologyProviders,
            'advertiser_id': List[str],
            'advertiser_name': str,
            'agency_id': str,
            'api_upload_timestamp': datetime,
            'attribute': List[int],
            'buyer_creative_id': str,
            'click_through_url': List[str],
            'corrections': List[CreativeCorrectionsInner],
            'disapproval_reasons': List[CreativeDisapprovalReasonsInner],
            'filtering_reasons': CreativeFilteringReasons,
            'height': int,
            'impression_tracking_url': List[str],
            'kind': str,
            'native_ad': CreativeNativeAd,
            'product_categories': List[int],
            'restricted_categories': List[int],
            'sensitive_categories': List[int],
            'status': str,
            'vendor_type': List[int],
            'version': int,
            'video_url': str,
            'width': int
        }

        self.attribute_map = {
            'html_snippet': 'HTMLSnippet',
            'account_id': 'accountId',
            'ad_technology_providers': 'adTechnologyProviders',
            'advertiser_id': 'advertiserId',
            'advertiser_name': 'advertiserName',
            'agency_id': 'agencyId',
            'api_upload_timestamp': 'apiUploadTimestamp',
            'attribute': 'attribute',
            'buyer_creative_id': 'buyerCreativeId',
            'click_through_url': 'clickThroughUrl',
            'corrections': 'corrections',
            'disapproval_reasons': 'disapprovalReasons',
            'filtering_reasons': 'filteringReasons',
            'height': 'height',
            'impression_tracking_url': 'impressionTrackingUrl',
            'kind': 'kind',
            'native_ad': 'nativeAd',
            'product_categories': 'productCategories',
            'restricted_categories': 'restrictedCategories',
            'sensitive_categories': 'sensitiveCategories',
            'status': 'status',
            'vendor_type': 'vendorType',
            'version': 'version',
            'video_url': 'videoURL',
            'width': 'width'
        }

        self._html_snippet = html_snippet
        self._account_id = account_id
        self._ad_technology_providers = ad_technology_providers
        self._advertiser_id = advertiser_id
        self._advertiser_name = advertiser_name
        self._agency_id = agency_id
        self._api_upload_timestamp = api_upload_timestamp
        self._attribute = attribute
        self._buyer_creative_id = buyer_creative_id
        self._click_through_url = click_through_url
        self._corrections = corrections
        self._disapproval_reasons = disapproval_reasons
        self._filtering_reasons = filtering_reasons
        self._height = height
        self._impression_tracking_url = impression_tracking_url
        self._kind = kind
        self._native_ad = native_ad
        self._product_categories = product_categories
        self._restricted_categories = restricted_categories
        self._sensitive_categories = sensitive_categories
        self._status = status
        self._vendor_type = vendor_type
        self._version = version
        self._video_url = video_url
        self._width = width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Creative':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Creative of this Creative.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def html_snippet(self):
        """Gets the html_snippet of this Creative.

        The HTML snippet that displays the ad when inserted in the web page. If set, videoURL should not be set.

        :return: The html_snippet of this Creative.
        :rtype: str
        """
        return self._html_snippet

    @html_snippet.setter
    def html_snippet(self, html_snippet):
        """Sets the html_snippet of this Creative.

        The HTML snippet that displays the ad when inserted in the web page. If set, videoURL should not be set.

        :param html_snippet: The html_snippet of this Creative.
        :type html_snippet: str
        """

        self._html_snippet = html_snippet

    @property
    def account_id(self):
        """Gets the account_id of this Creative.

        Account id.

        :return: The account_id of this Creative.
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this Creative.

        Account id.

        :param account_id: The account_id of this Creative.
        :type account_id: int
        """

        self._account_id = account_id

    @property
    def ad_technology_providers(self):
        """Gets the ad_technology_providers of this Creative.


        :return: The ad_technology_providers of this Creative.
        :rtype: CreativeAdTechnologyProviders
        """
        return self._ad_technology_providers

    @ad_technology_providers.setter
    def ad_technology_providers(self, ad_technology_providers):
        """Sets the ad_technology_providers of this Creative.


        :param ad_technology_providers: The ad_technology_providers of this Creative.
        :type ad_technology_providers: CreativeAdTechnologyProviders
        """

        self._ad_technology_providers = ad_technology_providers

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this Creative.

        Detected advertiser id, if any. Read-only. This field should not be set in requests.

        :return: The advertiser_id of this Creative.
        :rtype: List[str]
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this Creative.

        Detected advertiser id, if any. Read-only. This field should not be set in requests.

        :param advertiser_id: The advertiser_id of this Creative.
        :type advertiser_id: List[str]
        """

        self._advertiser_id = advertiser_id

    @property
    def advertiser_name(self):
        """Gets the advertiser_name of this Creative.

        The name of the company being advertised in the creative.

        :return: The advertiser_name of this Creative.
        :rtype: str
        """
        return self._advertiser_name

    @advertiser_name.setter
    def advertiser_name(self, advertiser_name):
        """Sets the advertiser_name of this Creative.

        The name of the company being advertised in the creative.

        :param advertiser_name: The advertiser_name of this Creative.
        :type advertiser_name: str
        """

        self._advertiser_name = advertiser_name

    @property
    def agency_id(self):
        """Gets the agency_id of this Creative.

        The agency id for this creative.

        :return: The agency_id of this Creative.
        :rtype: str
        """
        return self._agency_id

    @agency_id.setter
    def agency_id(self, agency_id):
        """Sets the agency_id of this Creative.

        The agency id for this creative.

        :param agency_id: The agency_id of this Creative.
        :type agency_id: str
        """

        self._agency_id = agency_id

    @property
    def api_upload_timestamp(self):
        """Gets the api_upload_timestamp of this Creative.

        The last upload timestamp of this creative if it was uploaded via API. Read-only. The value of this field is generated, and will be ignored for uploads. (formatted RFC 3339 timestamp).

        :return: The api_upload_timestamp of this Creative.
        :rtype: datetime
        """
        return self._api_upload_timestamp

    @api_upload_timestamp.setter
    def api_upload_timestamp(self, api_upload_timestamp):
        """Sets the api_upload_timestamp of this Creative.

        The last upload timestamp of this creative if it was uploaded via API. Read-only. The value of this field is generated, and will be ignored for uploads. (formatted RFC 3339 timestamp).

        :param api_upload_timestamp: The api_upload_timestamp of this Creative.
        :type api_upload_timestamp: datetime
        """

        self._api_upload_timestamp = api_upload_timestamp

    @property
    def attribute(self):
        """Gets the attribute of this Creative.

        All attributes for the ads that may be shown from this snippet.

        :return: The attribute of this Creative.
        :rtype: List[int]
        """
        return self._attribute

    @attribute.setter
    def attribute(self, attribute):
        """Sets the attribute of this Creative.

        All attributes for the ads that may be shown from this snippet.

        :param attribute: The attribute of this Creative.
        :type attribute: List[int]
        """

        self._attribute = attribute

    @property
    def buyer_creative_id(self):
        """Gets the buyer_creative_id of this Creative.

        A buyer-specific id identifying the creative in this ad.

        :return: The buyer_creative_id of this Creative.
        :rtype: str
        """
        return self._buyer_creative_id

    @buyer_creative_id.setter
    def buyer_creative_id(self, buyer_creative_id):
        """Sets the buyer_creative_id of this Creative.

        A buyer-specific id identifying the creative in this ad.

        :param buyer_creative_id: The buyer_creative_id of this Creative.
        :type buyer_creative_id: str
        """

        self._buyer_creative_id = buyer_creative_id

    @property
    def click_through_url(self):
        """Gets the click_through_url of this Creative.

        The set of destination urls for the snippet.

        :return: The click_through_url of this Creative.
        :rtype: List[str]
        """
        return self._click_through_url

    @click_through_url.setter
    def click_through_url(self, click_through_url):
        """Sets the click_through_url of this Creative.

        The set of destination urls for the snippet.

        :param click_through_url: The click_through_url of this Creative.
        :type click_through_url: List[str]
        """

        self._click_through_url = click_through_url

    @property
    def corrections(self):
        """Gets the corrections of this Creative.

        Shows any corrections that were applied to this creative. Read-only. This field should not be set in requests.

        :return: The corrections of this Creative.
        :rtype: List[CreativeCorrectionsInner]
        """
        return self._corrections

    @corrections.setter
    def corrections(self, corrections):
        """Sets the corrections of this Creative.

        Shows any corrections that were applied to this creative. Read-only. This field should not be set in requests.

        :param corrections: The corrections of this Creative.
        :type corrections: List[CreativeCorrectionsInner]
        """

        self._corrections = corrections

    @property
    def disapproval_reasons(self):
        """Gets the disapproval_reasons of this Creative.

        The reasons for disapproval, if any. Note that not all disapproval reasons may be categorized, so it is possible for the creative to have a status of DISAPPROVED with an empty list for disapproval_reasons. In this case, please reach out to your TAM to help debug the issue. Read-only. This field should not be set in requests.

        :return: The disapproval_reasons of this Creative.
        :rtype: List[CreativeDisapprovalReasonsInner]
        """
        return self._disapproval_reasons

    @disapproval_reasons.setter
    def disapproval_reasons(self, disapproval_reasons):
        """Sets the disapproval_reasons of this Creative.

        The reasons for disapproval, if any. Note that not all disapproval reasons may be categorized, so it is possible for the creative to have a status of DISAPPROVED with an empty list for disapproval_reasons. In this case, please reach out to your TAM to help debug the issue. Read-only. This field should not be set in requests.

        :param disapproval_reasons: The disapproval_reasons of this Creative.
        :type disapproval_reasons: List[CreativeDisapprovalReasonsInner]
        """

        self._disapproval_reasons = disapproval_reasons

    @property
    def filtering_reasons(self):
        """Gets the filtering_reasons of this Creative.


        :return: The filtering_reasons of this Creative.
        :rtype: CreativeFilteringReasons
        """
        return self._filtering_reasons

    @filtering_reasons.setter
    def filtering_reasons(self, filtering_reasons):
        """Sets the filtering_reasons of this Creative.


        :param filtering_reasons: The filtering_reasons of this Creative.
        :type filtering_reasons: CreativeFilteringReasons
        """

        self._filtering_reasons = filtering_reasons

    @property
    def height(self):
        """Gets the height of this Creative.

        Ad height.

        :return: The height of this Creative.
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this Creative.

        Ad height.

        :param height: The height of this Creative.
        :type height: int
        """

        self._height = height

    @property
    def impression_tracking_url(self):
        """Gets the impression_tracking_url of this Creative.

        The set of urls to be called to record an impression.

        :return: The impression_tracking_url of this Creative.
        :rtype: List[str]
        """
        return self._impression_tracking_url

    @impression_tracking_url.setter
    def impression_tracking_url(self, impression_tracking_url):
        """Sets the impression_tracking_url of this Creative.

        The set of urls to be called to record an impression.

        :param impression_tracking_url: The impression_tracking_url of this Creative.
        :type impression_tracking_url: List[str]
        """

        self._impression_tracking_url = impression_tracking_url

    @property
    def kind(self):
        """Gets the kind of this Creative.

        Resource type.

        :return: The kind of this Creative.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Creative.

        Resource type.

        :param kind: The kind of this Creative.
        :type kind: str
        """

        self._kind = kind

    @property
    def native_ad(self):
        """Gets the native_ad of this Creative.


        :return: The native_ad of this Creative.
        :rtype: CreativeNativeAd
        """
        return self._native_ad

    @native_ad.setter
    def native_ad(self, native_ad):
        """Sets the native_ad of this Creative.


        :param native_ad: The native_ad of this Creative.
        :type native_ad: CreativeNativeAd
        """

        self._native_ad = native_ad

    @property
    def product_categories(self):
        """Gets the product_categories of this Creative.

        Detected product categories, if any. Read-only. This field should not be set in requests.

        :return: The product_categories of this Creative.
        :rtype: List[int]
        """
        return self._product_categories

    @product_categories.setter
    def product_categories(self, product_categories):
        """Sets the product_categories of this Creative.

        Detected product categories, if any. Read-only. This field should not be set in requests.

        :param product_categories: The product_categories of this Creative.
        :type product_categories: List[int]
        """

        self._product_categories = product_categories

    @property
    def restricted_categories(self):
        """Gets the restricted_categories of this Creative.

        All restricted categories for the ads that may be shown from this snippet.

        :return: The restricted_categories of this Creative.
        :rtype: List[int]
        """
        return self._restricted_categories

    @restricted_categories.setter
    def restricted_categories(self, restricted_categories):
        """Sets the restricted_categories of this Creative.

        All restricted categories for the ads that may be shown from this snippet.

        :param restricted_categories: The restricted_categories of this Creative.
        :type restricted_categories: List[int]
        """

        self._restricted_categories = restricted_categories

    @property
    def sensitive_categories(self):
        """Gets the sensitive_categories of this Creative.

        Detected sensitive categories, if any. Read-only. This field should not be set in requests.

        :return: The sensitive_categories of this Creative.
        :rtype: List[int]
        """
        return self._sensitive_categories

    @sensitive_categories.setter
    def sensitive_categories(self, sensitive_categories):
        """Sets the sensitive_categories of this Creative.

        Detected sensitive categories, if any. Read-only. This field should not be set in requests.

        :param sensitive_categories: The sensitive_categories of this Creative.
        :type sensitive_categories: List[int]
        """

        self._sensitive_categories = sensitive_categories

    @property
    def status(self):
        """Gets the status of this Creative.

        Creative serving status. Read-only. This field should not be set in requests.

        :return: The status of this Creative.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Creative.

        Creative serving status. Read-only. This field should not be set in requests.

        :param status: The status of this Creative.
        :type status: str
        """

        self._status = status

    @property
    def vendor_type(self):
        """Gets the vendor_type of this Creative.

        All vendor types for the ads that may be shown from this snippet.

        :return: The vendor_type of this Creative.
        :rtype: List[int]
        """
        return self._vendor_type

    @vendor_type.setter
    def vendor_type(self, vendor_type):
        """Sets the vendor_type of this Creative.

        All vendor types for the ads that may be shown from this snippet.

        :param vendor_type: The vendor_type of this Creative.
        :type vendor_type: List[int]
        """

        self._vendor_type = vendor_type

    @property
    def version(self):
        """Gets the version of this Creative.

        The version for this creative. Read-only. This field should not be set in requests.

        :return: The version of this Creative.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Creative.

        The version for this creative. Read-only. This field should not be set in requests.

        :param version: The version of this Creative.
        :type version: int
        """

        self._version = version

    @property
    def video_url(self):
        """Gets the video_url of this Creative.

        The URL to fetch a video ad. If set, HTMLSnippet and the nativeAd should not be set.

        :return: The video_url of this Creative.
        :rtype: str
        """
        return self._video_url

    @video_url.setter
    def video_url(self, video_url):
        """Sets the video_url of this Creative.

        The URL to fetch a video ad. If set, HTMLSnippet and the nativeAd should not be set.

        :param video_url: The video_url of this Creative.
        :type video_url: str
        """

        self._video_url = video_url

    @property
    def width(self):
        """Gets the width of this Creative.

        Ad width.

        :return: The width of this Creative.
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this Creative.

        Ad width.

        :param width: The width of this Creative.
        :type width: int
        """

        self._width = width
