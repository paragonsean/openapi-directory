/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreative_filteringReasons_reasons_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreative_filteringReasons_reasons_inner::OAICreative_filteringReasons_reasons_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreative_filteringReasons_reasons_inner::OAICreative_filteringReasons_reasons_inner() {
    this->initializeModel();
}

OAICreative_filteringReasons_reasons_inner::~OAICreative_filteringReasons_reasons_inner() {}

void OAICreative_filteringReasons_reasons_inner::initializeModel() {

    m_filtering_count_isSet = false;
    m_filtering_count_isValid = false;

    m_filtering_status_isSet = false;
    m_filtering_status_isValid = false;
}

void OAICreative_filteringReasons_reasons_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreative_filteringReasons_reasons_inner::fromJsonObject(QJsonObject json) {

    m_filtering_count_isValid = ::OpenAPI::fromJsonValue(m_filtering_count, json[QString("filteringCount")]);
    m_filtering_count_isSet = !json[QString("filteringCount")].isNull() && m_filtering_count_isValid;

    m_filtering_status_isValid = ::OpenAPI::fromJsonValue(m_filtering_status, json[QString("filteringStatus")]);
    m_filtering_status_isSet = !json[QString("filteringStatus")].isNull() && m_filtering_status_isValid;
}

QString OAICreative_filteringReasons_reasons_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreative_filteringReasons_reasons_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_filtering_count_isSet) {
        obj.insert(QString("filteringCount"), ::OpenAPI::toJsonValue(m_filtering_count));
    }
    if (m_filtering_status_isSet) {
        obj.insert(QString("filteringStatus"), ::OpenAPI::toJsonValue(m_filtering_status));
    }
    return obj;
}

QString OAICreative_filteringReasons_reasons_inner::getFilteringCount() const {
    return m_filtering_count;
}
void OAICreative_filteringReasons_reasons_inner::setFilteringCount(const QString &filtering_count) {
    m_filtering_count = filtering_count;
    m_filtering_count_isSet = true;
}

bool OAICreative_filteringReasons_reasons_inner::is_filtering_count_Set() const{
    return m_filtering_count_isSet;
}

bool OAICreative_filteringReasons_reasons_inner::is_filtering_count_Valid() const{
    return m_filtering_count_isValid;
}

qint32 OAICreative_filteringReasons_reasons_inner::getFilteringStatus() const {
    return m_filtering_status;
}
void OAICreative_filteringReasons_reasons_inner::setFilteringStatus(const qint32 &filtering_status) {
    m_filtering_status = filtering_status;
    m_filtering_status_isSet = true;
}

bool OAICreative_filteringReasons_reasons_inner::is_filtering_status_Set() const{
    return m_filtering_status_isSet;
}

bool OAICreative_filteringReasons_reasons_inner::is_filtering_status_Valid() const{
    return m_filtering_status_isValid;
}

bool OAICreative_filteringReasons_reasons_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_filtering_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filtering_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreative_filteringReasons_reasons_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
