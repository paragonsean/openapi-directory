/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdExchangeBuyerApi);
  }
}(this, function(expect, AdExchangeBuyerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdExchangeBuyerApi.Creative();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Creative', function() {
    it('should create an instance of Creative', function() {
      // uncomment below and update the code to test Creative
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be.a(AdExchangeBuyerApi.Creative);
    });

    it('should have the property hTMLSnippet (base name: "HTMLSnippet")', function() {
      // uncomment below and update the code to test the property hTMLSnippet
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property advertiserId (base name: "advertiserId")', function() {
      // uncomment below and update the code to test the property advertiserId
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property advertiserName (base name: "advertiserName")', function() {
      // uncomment below and update the code to test the property advertiserName
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property agencyId (base name: "agencyId")', function() {
      // uncomment below and update the code to test the property agencyId
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property apiUploadTimestamp (base name: "apiUploadTimestamp")', function() {
      // uncomment below and update the code to test the property apiUploadTimestamp
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property attribute (base name: "attribute")', function() {
      // uncomment below and update the code to test the property attribute
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property buyerCreativeId (base name: "buyerCreativeId")', function() {
      // uncomment below and update the code to test the property buyerCreativeId
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property clickThroughUrl (base name: "clickThroughUrl")', function() {
      // uncomment below and update the code to test the property clickThroughUrl
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property corrections (base name: "corrections")', function() {
      // uncomment below and update the code to test the property corrections
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property disapprovalReasons (base name: "disapprovalReasons")', function() {
      // uncomment below and update the code to test the property disapprovalReasons
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property filteringReasons (base name: "filteringReasons")', function() {
      // uncomment below and update the code to test the property filteringReasons
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property impressionTrackingUrl (base name: "impressionTrackingUrl")', function() {
      // uncomment below and update the code to test the property impressionTrackingUrl
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property productCategories (base name: "productCategories")', function() {
      // uncomment below and update the code to test the property productCategories
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property restrictedCategories (base name: "restrictedCategories")', function() {
      // uncomment below and update the code to test the property restrictedCategories
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property sensitiveCategories (base name: "sensitiveCategories")', function() {
      // uncomment below and update the code to test the property sensitiveCategories
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property vendorType (base name: "vendorType")', function() {
      // uncomment below and update the code to test the property vendorType
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property videoURL (base name: "videoURL")', function() {
      // uncomment below and update the code to test the property videoURL
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new AdExchangeBuyerApi.Creative();
      //expect(instance).to.be();
    });

  });

}));
