/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Account from './model/Account';
import AccountBidderLocationInner from './model/AccountBidderLocationInner';
import AccountsList from './model/AccountsList';
import Creative from './model/Creative';
import CreativeCorrectionsInner from './model/CreativeCorrectionsInner';
import CreativeDisapprovalReasonsInner from './model/CreativeDisapprovalReasonsInner';
import CreativeFilteringReasons from './model/CreativeFilteringReasons';
import CreativeFilteringReasonsReasonsInner from './model/CreativeFilteringReasonsReasonsInner';
import CreativesList from './model/CreativesList';
import AccountsApi from './api/AccountsApi';
import CreativesApi from './api/CreativesApi';


/**
* Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AdExchangeBuyerApi = require('index'); // See note below*.
* var xxxSvc = new AdExchangeBuyerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AdExchangeBuyerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AdExchangeBuyerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AdExchangeBuyerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1.2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account,

    /**
     * The AccountBidderLocationInner model constructor.
     * @property {module:model/AccountBidderLocationInner}
     */
    AccountBidderLocationInner,

    /**
     * The AccountsList model constructor.
     * @property {module:model/AccountsList}
     */
    AccountsList,

    /**
     * The Creative model constructor.
     * @property {module:model/Creative}
     */
    Creative,

    /**
     * The CreativeCorrectionsInner model constructor.
     * @property {module:model/CreativeCorrectionsInner}
     */
    CreativeCorrectionsInner,

    /**
     * The CreativeDisapprovalReasonsInner model constructor.
     * @property {module:model/CreativeDisapprovalReasonsInner}
     */
    CreativeDisapprovalReasonsInner,

    /**
     * The CreativeFilteringReasons model constructor.
     * @property {module:model/CreativeFilteringReasons}
     */
    CreativeFilteringReasons,

    /**
     * The CreativeFilteringReasonsReasonsInner model constructor.
     * @property {module:model/CreativeFilteringReasonsReasonsInner}
     */
    CreativeFilteringReasonsReasonsInner,

    /**
     * The CreativesList model constructor.
     * @property {module:model/CreativesList}
     */
    CreativesList,

    /**
    * The AccountsApi service constructor.
    * @property {module:api/AccountsApi}
    */
    AccountsApi,

    /**
    * The CreativesApi service constructor.
    * @property {module:api/CreativesApi}
    */
    CreativesApi
};
