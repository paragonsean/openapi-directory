/**
 * Ad Exchange Buyer API
 * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
 *
 * The version of the OpenAPI document: v1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreativeFilteringReasonsReasonsInner from './CreativeFilteringReasonsReasonsInner';

/**
 * The CreativeFilteringReasons model module.
 * @module model/CreativeFilteringReasons
 * @version v1.2
 */
class CreativeFilteringReasons {
    /**
     * Constructs a new <code>CreativeFilteringReasons</code>.
     * The filtering reasons for the creative. Read-only. This field should not be set in requests.
     * @alias module:model/CreativeFilteringReasons
     */
    constructor() { 
        
        CreativeFilteringReasons.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreativeFilteringReasons</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreativeFilteringReasons} obj Optional instance to populate.
     * @return {module:model/CreativeFilteringReasons} The populated <code>CreativeFilteringReasons</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreativeFilteringReasons();

            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('reasons')) {
                obj['reasons'] = ApiClient.convertToType(data['reasons'], [CreativeFilteringReasonsReasonsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreativeFilteringReasons</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreativeFilteringReasons</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }
        if (data['reasons']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['reasons'])) {
                throw new Error("Expected the field `reasons` to be an array in the JSON data but got " + data['reasons']);
            }
            // validate the optional field `reasons` (array)
            for (const item of data['reasons']) {
                CreativeFilteringReasonsReasonsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The date in ISO 8601 format for the data. The data is collected from 00:00:00 to 23:59:59 in PST.
 * @member {String} date
 */
CreativeFilteringReasons.prototype['date'] = undefined;

/**
 * The filtering reasons.
 * @member {Array.<module:model/CreativeFilteringReasonsReasonsInner>} reasons
 */
CreativeFilteringReasons.prototype['reasons'] = undefined;






export default CreativeFilteringReasons;

