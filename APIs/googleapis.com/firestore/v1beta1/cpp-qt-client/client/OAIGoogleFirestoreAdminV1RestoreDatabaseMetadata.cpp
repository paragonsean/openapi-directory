/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata() {
    this->initializeModel();
}

OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::~OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata() {}

void OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::initializeModel() {

    m_backup_isSet = false;
    m_backup_isValid = false;

    m_database_isSet = false;
    m_database_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_operation_state_isSet = false;
    m_operation_state_isValid = false;

    m_progress_percentage_isSet = false;
    m_progress_percentage_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::fromJsonObject(QJsonObject json) {

    m_backup_isValid = ::OpenAPI::fromJsonValue(m_backup, json[QString("backup")]);
    m_backup_isSet = !json[QString("backup")].isNull() && m_backup_isValid;

    m_database_isValid = ::OpenAPI::fromJsonValue(m_database, json[QString("database")]);
    m_database_isSet = !json[QString("database")].isNull() && m_database_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_operation_state_isValid = ::OpenAPI::fromJsonValue(m_operation_state, json[QString("operationState")]);
    m_operation_state_isSet = !json[QString("operationState")].isNull() && m_operation_state_isValid;

    m_progress_percentage_isValid = ::OpenAPI::fromJsonValue(m_progress_percentage, json[QString("progressPercentage")]);
    m_progress_percentage_isSet = !json[QString("progressPercentage")].isNull() && m_progress_percentage_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_backup_isSet) {
        obj.insert(QString("backup"), ::OpenAPI::toJsonValue(m_backup));
    }
    if (m_database_isSet) {
        obj.insert(QString("database"), ::OpenAPI::toJsonValue(m_database));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_operation_state_isSet) {
        obj.insert(QString("operationState"), ::OpenAPI::toJsonValue(m_operation_state));
    }
    if (m_progress_percentage.isSet()) {
        obj.insert(QString("progressPercentage"), ::OpenAPI::toJsonValue(m_progress_percentage));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::getBackup() const {
    return m_backup;
}
void OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::setBackup(const QString &backup) {
    m_backup = backup;
    m_backup_isSet = true;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::is_backup_Set() const{
    return m_backup_isSet;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::is_backup_Valid() const{
    return m_backup_isValid;
}

QString OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::getDatabase() const {
    return m_database;
}
void OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::setDatabase(const QString &database) {
    m_database = database;
    m_database_isSet = true;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::is_database_Set() const{
    return m_database_isSet;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::is_database_Valid() const{
    return m_database_isValid;
}

QString OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::getEndTime() const {
    return m_end_time;
}
void OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::getOperationState() const {
    return m_operation_state;
}
void OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::setOperationState(const QString &operation_state) {
    m_operation_state = operation_state;
    m_operation_state_isSet = true;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::is_operation_state_Set() const{
    return m_operation_state_isSet;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::is_operation_state_Valid() const{
    return m_operation_state_isValid;
}

OAIGoogleFirestoreAdminV1Progress OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::getProgressPercentage() const {
    return m_progress_percentage;
}
void OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::setProgressPercentage(const OAIGoogleFirestoreAdminV1Progress &progress_percentage) {
    m_progress_percentage = progress_percentage;
    m_progress_percentage_isSet = true;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::is_progress_percentage_Set() const{
    return m_progress_percentage_isSet;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::is_progress_percentage_Valid() const{
    return m_progress_percentage_isValid;
}

QString OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::getStartTime() const {
    return m_start_time;
}
void OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_backup_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_database_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress_percentage.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleFirestoreAdminV1RestoreDatabaseMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
