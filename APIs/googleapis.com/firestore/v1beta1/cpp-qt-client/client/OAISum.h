/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISum.h
 *
 * Sum of the values of the requested field. * Only numeric values will be aggregated. All non-numeric values including &#x60;NULL&#x60; are skipped. * If the aggregated values contain &#x60;NaN&#x60;, returns &#x60;NaN&#x60;. Infinity math follows IEEE-754 standards. * If the aggregated value set is empty, returns 0. * Returns a 64-bit integer if all aggregated numbers are integers and the sum result does not overflow. Otherwise, the result is returned as a double. Note that even if all the aggregated values are integers, the result is returned as a double if it cannot fit within a 64-bit signed integer. When this occurs, the returned value will lose precision. * When underflow occurs, floating-point aggregation is non-deterministic. This means that running the same query repeatedly without any changes to the underlying values could produce slightly different results each time. In those cases, values should be stored as integers over floating-point numbers.
 */

#ifndef OAISum_H
#define OAISum_H

#include <QJsonObject>

#include "OAIFieldReference.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFieldReference;

class OAISum : public OAIObject {
public:
    OAISum();
    OAISum(QString json);
    ~OAISum() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFieldReference getField() const;
    void setField(const OAIFieldReference &field);
    bool is_field_Set() const;
    bool is_field_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFieldReference m_field;
    bool m_field_isSet;
    bool m_field_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISum)

#endif // OAISum_H
