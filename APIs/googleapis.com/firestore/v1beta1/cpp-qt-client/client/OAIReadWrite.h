/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReadWrite.h
 *
 * Options for a transaction that can be used to read and write documents. Firestore does not allow 3rd party auth requests to create read-write. transactions.
 */

#ifndef OAIReadWrite_H
#define OAIReadWrite_H

#include <QJsonObject>

#include <QByteArray>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReadWrite : public OAIObject {
public:
    OAIReadWrite();
    OAIReadWrite(QString json);
    ~OAIReadWrite() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QByteArray getRetryTransaction() const;
    void setRetryTransaction(const QByteArray &retry_transaction);
    bool is_retry_transaction_Set() const;
    bool is_retry_transaction_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QByteArray m_retry_transaction;
    bool m_retry_transaction_isSet;
    bool m_retry_transaction_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReadWrite)

#endif // OAIReadWrite_H
