/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata() {
    this->initializeModel();
}

OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::~OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata() {}

void OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::initializeModel() {

    m_cancelled_isSet = false;
    m_cancelled_isValid = false;

    m_document_progress_isSet = false;
    m_document_progress_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_index_isSet = false;
    m_index_isValid = false;

    m_operation_type_isSet = false;
    m_operation_type_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::fromJsonObject(QJsonObject json) {

    m_cancelled_isValid = ::OpenAPI::fromJsonValue(m_cancelled, json[QString("cancelled")]);
    m_cancelled_isSet = !json[QString("cancelled")].isNull() && m_cancelled_isValid;

    m_document_progress_isValid = ::OpenAPI::fromJsonValue(m_document_progress, json[QString("documentProgress")]);
    m_document_progress_isSet = !json[QString("documentProgress")].isNull() && m_document_progress_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_index_isValid = ::OpenAPI::fromJsonValue(m_index, json[QString("index")]);
    m_index_isSet = !json[QString("index")].isNull() && m_index_isValid;

    m_operation_type_isValid = ::OpenAPI::fromJsonValue(m_operation_type, json[QString("operationType")]);
    m_operation_type_isSet = !json[QString("operationType")].isNull() && m_operation_type_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_cancelled_isSet) {
        obj.insert(QString("cancelled"), ::OpenAPI::toJsonValue(m_cancelled));
    }
    if (m_document_progress.isSet()) {
        obj.insert(QString("documentProgress"), ::OpenAPI::toJsonValue(m_document_progress));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_index_isSet) {
        obj.insert(QString("index"), ::OpenAPI::toJsonValue(m_index));
    }
    if (m_operation_type_isSet) {
        obj.insert(QString("operationType"), ::OpenAPI::toJsonValue(m_operation_type));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::isCancelled() const {
    return m_cancelled;
}
void OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::setCancelled(const bool &cancelled) {
    m_cancelled = cancelled;
    m_cancelled_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::is_cancelled_Set() const{
    return m_cancelled_isSet;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::is_cancelled_Valid() const{
    return m_cancelled_isValid;
}

OAIGoogleFirestoreAdminV1beta1Progress OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::getDocumentProgress() const {
    return m_document_progress;
}
void OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::setDocumentProgress(const OAIGoogleFirestoreAdminV1beta1Progress &document_progress) {
    m_document_progress = document_progress;
    m_document_progress_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::is_document_progress_Set() const{
    return m_document_progress_isSet;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::is_document_progress_Valid() const{
    return m_document_progress_isValid;
}

QString OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::getEndTime() const {
    return m_end_time;
}
void OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::getIndex() const {
    return m_index;
}
void OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::setIndex(const QString &index) {
    m_index = index;
    m_index_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::is_index_Set() const{
    return m_index_isSet;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::is_index_Valid() const{
    return m_index_isValid;
}

QString OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::getOperationType() const {
    return m_operation_type;
}
void OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::setOperationType(const QString &operation_type) {
    m_operation_type = operation_type;
    m_operation_type_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::is_operation_type_Set() const{
    return m_operation_type_isSet;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::is_operation_type_Valid() const{
    return m_operation_type_isValid;
}

QString OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::getStartTime() const {
    return m_start_time;
}
void OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cancelled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_progress.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleFirestoreAdminV1beta1IndexOperationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
