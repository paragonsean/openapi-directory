/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommitRequest.h
 *
 * The request for Firestore.Commit.
 */

#ifndef OAICommitRequest_H
#define OAICommitRequest_H

#include <QJsonObject>

#include "OAIWrite.h"
#include <QByteArray>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWrite;

class OAICommitRequest : public OAIObject {
public:
    OAICommitRequest();
    OAICommitRequest(QString json);
    ~OAICommitRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QByteArray getTransaction() const;
    void setTransaction(const QByteArray &transaction);
    bool is_transaction_Set() const;
    bool is_transaction_Valid() const;

    QList<OAIWrite> getWrites() const;
    void setWrites(const QList<OAIWrite> &writes);
    bool is_writes_Set() const;
    bool is_writes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QByteArray m_transaction;
    bool m_transaction_isSet;
    bool m_transaction_isValid;

    QList<OAIWrite> m_writes;
    bool m_writes_isSet;
    bool m_writes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommitRequest)

#endif // OAICommitRequest_H
