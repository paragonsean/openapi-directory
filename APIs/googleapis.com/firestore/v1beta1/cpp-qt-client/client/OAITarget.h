/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITarget.h
 *
 * A specification of a set of documents to listen to.
 */

#ifndef OAITarget_H
#define OAITarget_H

#include <QJsonObject>

#include "OAIDocumentsTarget.h"
#include "OAIQueryTarget.h"
#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDocumentsTarget;
class OAIQueryTarget;

class OAITarget : public OAIObject {
public:
    OAITarget();
    OAITarget(QString json);
    ~OAITarget() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDocumentsTarget getDocuments() const;
    void setDocuments(const OAIDocumentsTarget &documents);
    bool is_documents_Set() const;
    bool is_documents_Valid() const;

    qint32 getExpectedCount() const;
    void setExpectedCount(const qint32 &expected_count);
    bool is_expected_count_Set() const;
    bool is_expected_count_Valid() const;

    bool isOnce() const;
    void setOnce(const bool &once);
    bool is_once_Set() const;
    bool is_once_Valid() const;

    OAIQueryTarget getQuery() const;
    void setQuery(const OAIQueryTarget &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    QString getReadTime() const;
    void setReadTime(const QString &read_time);
    bool is_read_time_Set() const;
    bool is_read_time_Valid() const;

    QByteArray getResumeToken() const;
    void setResumeToken(const QByteArray &resume_token);
    bool is_resume_token_Set() const;
    bool is_resume_token_Valid() const;

    qint32 getTargetId() const;
    void setTargetId(const qint32 &target_id);
    bool is_target_id_Set() const;
    bool is_target_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDocumentsTarget m_documents;
    bool m_documents_isSet;
    bool m_documents_isValid;

    qint32 m_expected_count;
    bool m_expected_count_isSet;
    bool m_expected_count_isValid;

    bool m_once;
    bool m_once_isSet;
    bool m_once_isValid;

    OAIQueryTarget m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    QString m_read_time;
    bool m_read_time_isSet;
    bool m_read_time_isValid;

    QByteArray m_resume_token;
    bool m_resume_token_isSet;
    bool m_resume_token_isValid;

    qint32 m_target_id;
    bool m_target_id_isSet;
    bool m_target_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITarget)

#endif // OAITarget_H
