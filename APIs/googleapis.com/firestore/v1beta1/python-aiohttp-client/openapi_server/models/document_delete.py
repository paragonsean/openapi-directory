# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DocumentDelete(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document: str=None, read_time: str=None, removed_target_ids: List[int]=None):
        """DocumentDelete - a model defined in OpenAPI

        :param document: The document of this DocumentDelete.
        :param read_time: The read_time of this DocumentDelete.
        :param removed_target_ids: The removed_target_ids of this DocumentDelete.
        """
        self.openapi_types = {
            'document': str,
            'read_time': str,
            'removed_target_ids': List[int]
        }

        self.attribute_map = {
            'document': 'document',
            'read_time': 'readTime',
            'removed_target_ids': 'removedTargetIds'
        }

        self._document = document
        self._read_time = read_time
        self._removed_target_ids = removed_target_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentDelete':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentDelete of this DocumentDelete.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document(self):
        """Gets the document of this DocumentDelete.

        The resource name of the Document that was deleted.

        :return: The document of this DocumentDelete.
        :rtype: str
        """
        return self._document

    @document.setter
    def document(self, document):
        """Sets the document of this DocumentDelete.

        The resource name of the Document that was deleted.

        :param document: The document of this DocumentDelete.
        :type document: str
        """

        self._document = document

    @property
    def read_time(self):
        """Gets the read_time of this DocumentDelete.

        The read timestamp at which the delete was observed. Greater or equal to the `commit_time` of the delete.

        :return: The read_time of this DocumentDelete.
        :rtype: str
        """
        return self._read_time

    @read_time.setter
    def read_time(self, read_time):
        """Sets the read_time of this DocumentDelete.

        The read timestamp at which the delete was observed. Greater or equal to the `commit_time` of the delete.

        :param read_time: The read_time of this DocumentDelete.
        :type read_time: str
        """

        self._read_time = read_time

    @property
    def removed_target_ids(self):
        """Gets the removed_target_ids of this DocumentDelete.

        A set of target IDs for targets that previously matched this entity.

        :return: The removed_target_ids of this DocumentDelete.
        :rtype: List[int]
        """
        return self._removed_target_ids

    @removed_target_ids.setter
    def removed_target_ids(self, removed_target_ids):
        """Sets the removed_target_ids of this DocumentDelete.

        A set of target IDs for targets that previously matched this entity.

        :param removed_target_ids: The removed_target_ids of this DocumentDelete.
        :type removed_target_ids: List[int]
        """

        self._removed_target_ids = removed_target_ids
