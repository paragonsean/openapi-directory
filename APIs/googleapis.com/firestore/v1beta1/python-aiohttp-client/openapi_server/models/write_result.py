# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.value import Value
from openapi_server import util


class WriteResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, transform_results: List[Value]=None, update_time: str=None):
        """WriteResult - a model defined in OpenAPI

        :param transform_results: The transform_results of this WriteResult.
        :param update_time: The update_time of this WriteResult.
        """
        self.openapi_types = {
            'transform_results': List[Value],
            'update_time': str
        }

        self.attribute_map = {
            'transform_results': 'transformResults',
            'update_time': 'updateTime'
        }

        self._transform_results = transform_results
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WriteResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WriteResult of this WriteResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transform_results(self):
        """Gets the transform_results of this WriteResult.

        The results of applying each DocumentTransform.FieldTransform, in the same order.

        :return: The transform_results of this WriteResult.
        :rtype: List[Value]
        """
        return self._transform_results

    @transform_results.setter
    def transform_results(self, transform_results):
        """Sets the transform_results of this WriteResult.

        The results of applying each DocumentTransform.FieldTransform, in the same order.

        :param transform_results: The transform_results of this WriteResult.
        :type transform_results: List[Value]
        """

        self._transform_results = transform_results

    @property
    def update_time(self):
        """Gets the update_time of this WriteResult.

        The last update time of the document after applying the write. Not set after a `delete`. If the write did not actually change the document, this will be the previous update_time.

        :return: The update_time of this WriteResult.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this WriteResult.

        The last update time of the document after applying the write. Not set after a `delete`. If the write did not actually change the document, this will be the previous update_time.

        :param update_time: The update_time of this WriteResult.
        :type update_time: str
        """

        self._update_time = update_time
