# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.structured_query import StructuredQuery
from openapi_server import util


class QueryTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parent: str=None, structured_query: StructuredQuery=None):
        """QueryTarget - a model defined in OpenAPI

        :param parent: The parent of this QueryTarget.
        :param structured_query: The structured_query of this QueryTarget.
        """
        self.openapi_types = {
            'parent': str,
            'structured_query': StructuredQuery
        }

        self.attribute_map = {
            'parent': 'parent',
            'structured_query': 'structuredQuery'
        }

        self._parent = parent
        self._structured_query = structured_query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryTarget of this QueryTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parent(self):
        """Gets the parent of this QueryTarget.

        The parent resource name. In the format: `projects/{project_id}/databases/{database_id}/documents` or `projects/{project_id}/databases/{database_id}/documents/{document_path}`. For example: `projects/my-project/databases/my-database/documents` or `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`

        :return: The parent of this QueryTarget.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this QueryTarget.

        The parent resource name. In the format: `projects/{project_id}/databases/{database_id}/documents` or `projects/{project_id}/databases/{database_id}/documents/{document_path}`. For example: `projects/my-project/databases/my-database/documents` or `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`

        :param parent: The parent of this QueryTarget.
        :type parent: str
        """

        self._parent = parent

    @property
    def structured_query(self):
        """Gets the structured_query of this QueryTarget.


        :return: The structured_query of this QueryTarget.
        :rtype: StructuredQuery
        """
        return self._structured_query

    @structured_query.setter
    def structured_query(self, structured_query):
        """Sets the structured_query of this QueryTarget.


        :param structured_query: The structured_query of this QueryTarget.
        :type structured_query: StructuredQuery
        """

        self._structured_query = structured_query
