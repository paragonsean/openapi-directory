# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.write import Write
from openapi_server import util


class CommitRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, transaction: str=None, writes: List[Write]=None):
        """CommitRequest - a model defined in OpenAPI

        :param transaction: The transaction of this CommitRequest.
        :param writes: The writes of this CommitRequest.
        """
        self.openapi_types = {
            'transaction': str,
            'writes': List[Write]
        }

        self.attribute_map = {
            'transaction': 'transaction',
            'writes': 'writes'
        }

        self._transaction = transaction
        self._writes = writes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommitRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommitRequest of this CommitRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transaction(self):
        """Gets the transaction of this CommitRequest.

        If set, applies all writes in this transaction, and commits it.

        :return: The transaction of this CommitRequest.
        :rtype: str
        """
        return self._transaction

    @transaction.setter
    def transaction(self, transaction):
        """Sets the transaction of this CommitRequest.

        If set, applies all writes in this transaction, and commits it.

        :param transaction: The transaction of this CommitRequest.
        :type transaction: str
        """

        self._transaction = transaction

    @property
    def writes(self):
        """Gets the writes of this CommitRequest.

        The writes to apply. Always executed atomically and in order.

        :return: The writes of this CommitRequest.
        :rtype: List[Write]
        """
        return self._writes

    @writes.setter
    def writes(self, writes):
        """Sets the writes of this CommitRequest.

        The writes to apply. Always executed atomically and in order.

        :param writes: The writes of this CommitRequest.
        :type writes: List[Write]
        """

        self._writes = writes
