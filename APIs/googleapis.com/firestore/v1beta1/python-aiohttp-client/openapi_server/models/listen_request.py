# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.target import Target
from openapi_server import util


class ListenRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add_target: Target=None, labels: Dict[str, str]=None, remove_target: int=None):
        """ListenRequest - a model defined in OpenAPI

        :param add_target: The add_target of this ListenRequest.
        :param labels: The labels of this ListenRequest.
        :param remove_target: The remove_target of this ListenRequest.
        """
        self.openapi_types = {
            'add_target': Target,
            'labels': Dict[str, str],
            'remove_target': int
        }

        self.attribute_map = {
            'add_target': 'addTarget',
            'labels': 'labels',
            'remove_target': 'removeTarget'
        }

        self._add_target = add_target
        self._labels = labels
        self._remove_target = remove_target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListenRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListenRequest of this ListenRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add_target(self):
        """Gets the add_target of this ListenRequest.


        :return: The add_target of this ListenRequest.
        :rtype: Target
        """
        return self._add_target

    @add_target.setter
    def add_target(self, add_target):
        """Sets the add_target of this ListenRequest.


        :param add_target: The add_target of this ListenRequest.
        :type add_target: Target
        """

        self._add_target = add_target

    @property
    def labels(self):
        """Gets the labels of this ListenRequest.

        Labels associated with this target change.

        :return: The labels of this ListenRequest.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this ListenRequest.

        Labels associated with this target change.

        :param labels: The labels of this ListenRequest.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def remove_target(self):
        """Gets the remove_target of this ListenRequest.

        The ID of a target to remove from this stream.

        :return: The remove_target of this ListenRequest.
        :rtype: int
        """
        return self._remove_target

    @remove_target.setter
    def remove_target(self, remove_target):
        """Sets the remove_target of this ListenRequest.

        The ID of a target to remove from this stream.

        :param remove_target: The remove_target of this ListenRequest.
        :type remove_target: int
        """

        self._remove_target = remove_target
