# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_firestore_admin_v1beta1_index_field import GoogleFirestoreAdminV1beta1IndexField
from openapi_server import util


class GoogleFirestoreAdminV1beta1Index(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collection_id: str=None, fields: List[GoogleFirestoreAdminV1beta1IndexField]=None, name: str=None, state: str=None):
        """GoogleFirestoreAdminV1beta1Index - a model defined in OpenAPI

        :param collection_id: The collection_id of this GoogleFirestoreAdminV1beta1Index.
        :param fields: The fields of this GoogleFirestoreAdminV1beta1Index.
        :param name: The name of this GoogleFirestoreAdminV1beta1Index.
        :param state: The state of this GoogleFirestoreAdminV1beta1Index.
        """
        self.openapi_types = {
            'collection_id': str,
            'fields': List[GoogleFirestoreAdminV1beta1IndexField],
            'name': str,
            'state': str
        }

        self.attribute_map = {
            'collection_id': 'collectionId',
            'fields': 'fields',
            'name': 'name',
            'state': 'state'
        }

        self._collection_id = collection_id
        self._fields = fields
        self._name = name
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleFirestoreAdminV1beta1Index':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleFirestoreAdminV1beta1Index of this GoogleFirestoreAdminV1beta1Index.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collection_id(self):
        """Gets the collection_id of this GoogleFirestoreAdminV1beta1Index.

        The collection ID to which this index applies. Required.

        :return: The collection_id of this GoogleFirestoreAdminV1beta1Index.
        :rtype: str
        """
        return self._collection_id

    @collection_id.setter
    def collection_id(self, collection_id):
        """Sets the collection_id of this GoogleFirestoreAdminV1beta1Index.

        The collection ID to which this index applies. Required.

        :param collection_id: The collection_id of this GoogleFirestoreAdminV1beta1Index.
        :type collection_id: str
        """

        self._collection_id = collection_id

    @property
    def fields(self):
        """Gets the fields of this GoogleFirestoreAdminV1beta1Index.

        The fields to index.

        :return: The fields of this GoogleFirestoreAdminV1beta1Index.
        :rtype: List[GoogleFirestoreAdminV1beta1IndexField]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this GoogleFirestoreAdminV1beta1Index.

        The fields to index.

        :param fields: The fields of this GoogleFirestoreAdminV1beta1Index.
        :type fields: List[GoogleFirestoreAdminV1beta1IndexField]
        """

        self._fields = fields

    @property
    def name(self):
        """Gets the name of this GoogleFirestoreAdminV1beta1Index.

        The resource name of the index. Output only.

        :return: The name of this GoogleFirestoreAdminV1beta1Index.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleFirestoreAdminV1beta1Index.

        The resource name of the index. Output only.

        :param name: The name of this GoogleFirestoreAdminV1beta1Index.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this GoogleFirestoreAdminV1beta1Index.

        The state of the index. Output only.

        :return: The state of this GoogleFirestoreAdminV1beta1Index.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleFirestoreAdminV1beta1Index.

        The state of the index. Output only.

        :param state: The state of this GoogleFirestoreAdminV1beta1Index.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "CREATING", "READY", "ERROR"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state
