/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleFirestoreAdminV1beta1ImportDocumentsRequest model module.
 * @module model/GoogleFirestoreAdminV1beta1ImportDocumentsRequest
 * @version v1beta1
 */
class GoogleFirestoreAdminV1beta1ImportDocumentsRequest {
    /**
     * Constructs a new <code>GoogleFirestoreAdminV1beta1ImportDocumentsRequest</code>.
     * The request for FirestoreAdmin.ImportDocuments.
     * @alias module:model/GoogleFirestoreAdminV1beta1ImportDocumentsRequest
     */
    constructor() { 
        
        GoogleFirestoreAdminV1beta1ImportDocumentsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleFirestoreAdminV1beta1ImportDocumentsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleFirestoreAdminV1beta1ImportDocumentsRequest} obj Optional instance to populate.
     * @return {module:model/GoogleFirestoreAdminV1beta1ImportDocumentsRequest} The populated <code>GoogleFirestoreAdminV1beta1ImportDocumentsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleFirestoreAdminV1beta1ImportDocumentsRequest();

            if (data.hasOwnProperty('collectionIds')) {
                obj['collectionIds'] = ApiClient.convertToType(data['collectionIds'], ['String']);
            }
            if (data.hasOwnProperty('inputUriPrefix')) {
                obj['inputUriPrefix'] = ApiClient.convertToType(data['inputUriPrefix'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleFirestoreAdminV1beta1ImportDocumentsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleFirestoreAdminV1beta1ImportDocumentsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['collectionIds'])) {
            throw new Error("Expected the field `collectionIds` to be an array in the JSON data but got " + data['collectionIds']);
        }
        // ensure the json data is a string
        if (data['inputUriPrefix'] && !(typeof data['inputUriPrefix'] === 'string' || data['inputUriPrefix'] instanceof String)) {
            throw new Error("Expected the field `inputUriPrefix` to be a primitive type in the JSON string but got " + data['inputUriPrefix']);
        }

        return true;
    }


}



/**
 * Which collection ids to import. Unspecified means all collections included in the import.
 * @member {Array.<String>} collectionIds
 */
GoogleFirestoreAdminV1beta1ImportDocumentsRequest.prototype['collectionIds'] = undefined;

/**
 * Location of the exported files. This must match the output_uri_prefix of an ExportDocumentsResponse from an export that has completed successfully. See: google.firestore.admin.v1beta1.ExportDocumentsResponse.output_uri_prefix.
 * @member {String} inputUriPrefix
 */
GoogleFirestoreAdminV1beta1ImportDocumentsRequest.prototype['inputUriPrefix'] = undefined;






export default GoogleFirestoreAdminV1beta1ImportDocumentsRequest;

