/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleFirestoreAdminV1beta1Progress from './GoogleFirestoreAdminV1beta1Progress';

/**
 * The GoogleFirestoreAdminV1beta1IndexOperationMetadata model module.
 * @module model/GoogleFirestoreAdminV1beta1IndexOperationMetadata
 * @version v1beta1
 */
class GoogleFirestoreAdminV1beta1IndexOperationMetadata {
    /**
     * Constructs a new <code>GoogleFirestoreAdminV1beta1IndexOperationMetadata</code>.
     * Metadata for index operations. This metadata populates the metadata field of google.longrunning.Operation.
     * @alias module:model/GoogleFirestoreAdminV1beta1IndexOperationMetadata
     */
    constructor() { 
        
        GoogleFirestoreAdminV1beta1IndexOperationMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleFirestoreAdminV1beta1IndexOperationMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleFirestoreAdminV1beta1IndexOperationMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleFirestoreAdminV1beta1IndexOperationMetadata} The populated <code>GoogleFirestoreAdminV1beta1IndexOperationMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleFirestoreAdminV1beta1IndexOperationMetadata();

            if (data.hasOwnProperty('cancelled')) {
                obj['cancelled'] = ApiClient.convertToType(data['cancelled'], 'Boolean');
            }
            if (data.hasOwnProperty('documentProgress')) {
                obj['documentProgress'] = GoogleFirestoreAdminV1beta1Progress.constructFromObject(data['documentProgress']);
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'String');
            }
            if (data.hasOwnProperty('operationType')) {
                obj['operationType'] = ApiClient.convertToType(data['operationType'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleFirestoreAdminV1beta1IndexOperationMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleFirestoreAdminV1beta1IndexOperationMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `documentProgress`
        if (data['documentProgress']) { // data not null
          GoogleFirestoreAdminV1beta1Progress.validateJSON(data['documentProgress']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['index'] && !(typeof data['index'] === 'string' || data['index'] instanceof String)) {
            throw new Error("Expected the field `index` to be a primitive type in the JSON string but got " + data['index']);
        }
        // ensure the json data is a string
        if (data['operationType'] && !(typeof data['operationType'] === 'string' || data['operationType'] instanceof String)) {
            throw new Error("Expected the field `operationType` to be a primitive type in the JSON string but got " + data['operationType']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }

        return true;
    }


}



/**
 * True if the [google.longrunning.Operation] was cancelled. If the cancellation is in progress, cancelled will be true but google.longrunning.Operation.done will be false.
 * @member {Boolean} cancelled
 */
GoogleFirestoreAdminV1beta1IndexOperationMetadata.prototype['cancelled'] = undefined;

/**
 * @member {module:model/GoogleFirestoreAdminV1beta1Progress} documentProgress
 */
GoogleFirestoreAdminV1beta1IndexOperationMetadata.prototype['documentProgress'] = undefined;

/**
 * The time the operation ended, either successfully or otherwise. Unset if the operation is still active.
 * @member {String} endTime
 */
GoogleFirestoreAdminV1beta1IndexOperationMetadata.prototype['endTime'] = undefined;

/**
 * The index resource that this operation is acting on. For example: `projects/{project_id}/databases/{database_id}/indexes/{index_id}`
 * @member {String} index
 */
GoogleFirestoreAdminV1beta1IndexOperationMetadata.prototype['index'] = undefined;

/**
 * The type of index operation.
 * @member {module:model/GoogleFirestoreAdminV1beta1IndexOperationMetadata.OperationTypeEnum} operationType
 */
GoogleFirestoreAdminV1beta1IndexOperationMetadata.prototype['operationType'] = undefined;

/**
 * The time that work began on the operation.
 * @member {String} startTime
 */
GoogleFirestoreAdminV1beta1IndexOperationMetadata.prototype['startTime'] = undefined;





/**
 * Allowed values for the <code>operationType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleFirestoreAdminV1beta1IndexOperationMetadata['OperationTypeEnum'] = {

    /**
     * value: "OPERATION_TYPE_UNSPECIFIED"
     * @const
     */
    "OPERATION_TYPE_UNSPECIFIED": "OPERATION_TYPE_UNSPECIFIED",

    /**
     * value: "CREATING_INDEX"
     * @const
     */
    "CREATING_INDEX": "CREATING_INDEX"
};



export default GoogleFirestoreAdminV1beta1IndexOperationMetadata;

