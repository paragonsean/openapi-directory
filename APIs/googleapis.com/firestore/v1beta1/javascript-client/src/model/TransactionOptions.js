/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReadOnly from './ReadOnly';
import ReadWrite from './ReadWrite';

/**
 * The TransactionOptions model module.
 * @module model/TransactionOptions
 * @version v1beta1
 */
class TransactionOptions {
    /**
     * Constructs a new <code>TransactionOptions</code>.
     * Options for creating a new transaction.
     * @alias module:model/TransactionOptions
     */
    constructor() { 
        
        TransactionOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransactionOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionOptions} obj Optional instance to populate.
     * @return {module:model/TransactionOptions} The populated <code>TransactionOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionOptions();

            if (data.hasOwnProperty('readOnly')) {
                obj['readOnly'] = ReadOnly.constructFromObject(data['readOnly']);
            }
            if (data.hasOwnProperty('readWrite')) {
                obj['readWrite'] = ReadWrite.constructFromObject(data['readWrite']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionOptions</code>.
     */
    static validateJSON(data) {
        // validate the optional field `readOnly`
        if (data['readOnly']) { // data not null
          ReadOnly.validateJSON(data['readOnly']);
        }
        // validate the optional field `readWrite`
        if (data['readWrite']) { // data not null
          ReadWrite.validateJSON(data['readWrite']);
        }

        return true;
    }


}



/**
 * @member {module:model/ReadOnly} readOnly
 */
TransactionOptions.prototype['readOnly'] = undefined;

/**
 * @member {module:model/ReadWrite} readWrite
 */
TransactionOptions.prototype['readWrite'] = undefined;






export default TransactionOptions;

