/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListCollectionIdsRequest model module.
 * @module model/ListCollectionIdsRequest
 * @version v1beta1
 */
class ListCollectionIdsRequest {
    /**
     * Constructs a new <code>ListCollectionIdsRequest</code>.
     * The request for Firestore.ListCollectionIds.
     * @alias module:model/ListCollectionIdsRequest
     */
    constructor() { 
        
        ListCollectionIdsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListCollectionIdsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListCollectionIdsRequest} obj Optional instance to populate.
     * @return {module:model/ListCollectionIdsRequest} The populated <code>ListCollectionIdsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListCollectionIdsRequest();

            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
            if (data.hasOwnProperty('pageToken')) {
                obj['pageToken'] = ApiClient.convertToType(data['pageToken'], 'String');
            }
            if (data.hasOwnProperty('readTime')) {
                obj['readTime'] = ApiClient.convertToType(data['readTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListCollectionIdsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListCollectionIdsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['pageToken'] && !(typeof data['pageToken'] === 'string' || data['pageToken'] instanceof String)) {
            throw new Error("Expected the field `pageToken` to be a primitive type in the JSON string but got " + data['pageToken']);
        }
        // ensure the json data is a string
        if (data['readTime'] && !(typeof data['readTime'] === 'string' || data['readTime'] instanceof String)) {
            throw new Error("Expected the field `readTime` to be a primitive type in the JSON string but got " + data['readTime']);
        }

        return true;
    }


}



/**
 * The maximum number of results to return.
 * @member {Number} pageSize
 */
ListCollectionIdsRequest.prototype['pageSize'] = undefined;

/**
 * A page token. Must be a value from ListCollectionIdsResponse.
 * @member {String} pageToken
 */
ListCollectionIdsRequest.prototype['pageToken'] = undefined;

/**
 * Reads documents as they were at the given time. This must be a microsecond precision timestamp within the past one hour, or if Point-in-Time Recovery is enabled, can additionally be a whole minute timestamp within the past 7 days.
 * @member {String} readTime
 */
ListCollectionIdsRequest.prototype['readTime'] = undefined;






export default ListCollectionIdsRequest;

