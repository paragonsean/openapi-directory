/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DocumentChange from './DocumentChange';
import DocumentDelete from './DocumentDelete';
import DocumentRemove from './DocumentRemove';
import ExistenceFilter from './ExistenceFilter';
import TargetChange from './TargetChange';

/**
 * The ListenResponse model module.
 * @module model/ListenResponse
 * @version v1beta1
 */
class ListenResponse {
    /**
     * Constructs a new <code>ListenResponse</code>.
     * The response for Firestore.Listen.
     * @alias module:model/ListenResponse
     */
    constructor() { 
        
        ListenResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListenResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListenResponse} obj Optional instance to populate.
     * @return {module:model/ListenResponse} The populated <code>ListenResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListenResponse();

            if (data.hasOwnProperty('documentChange')) {
                obj['documentChange'] = DocumentChange.constructFromObject(data['documentChange']);
            }
            if (data.hasOwnProperty('documentDelete')) {
                obj['documentDelete'] = DocumentDelete.constructFromObject(data['documentDelete']);
            }
            if (data.hasOwnProperty('documentRemove')) {
                obj['documentRemove'] = DocumentRemove.constructFromObject(data['documentRemove']);
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ExistenceFilter.constructFromObject(data['filter']);
            }
            if (data.hasOwnProperty('targetChange')) {
                obj['targetChange'] = TargetChange.constructFromObject(data['targetChange']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListenResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListenResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `documentChange`
        if (data['documentChange']) { // data not null
          DocumentChange.validateJSON(data['documentChange']);
        }
        // validate the optional field `documentDelete`
        if (data['documentDelete']) { // data not null
          DocumentDelete.validateJSON(data['documentDelete']);
        }
        // validate the optional field `documentRemove`
        if (data['documentRemove']) { // data not null
          DocumentRemove.validateJSON(data['documentRemove']);
        }
        // validate the optional field `filter`
        if (data['filter']) { // data not null
          ExistenceFilter.validateJSON(data['filter']);
        }
        // validate the optional field `targetChange`
        if (data['targetChange']) { // data not null
          TargetChange.validateJSON(data['targetChange']);
        }

        return true;
    }


}



/**
 * @member {module:model/DocumentChange} documentChange
 */
ListenResponse.prototype['documentChange'] = undefined;

/**
 * @member {module:model/DocumentDelete} documentDelete
 */
ListenResponse.prototype['documentDelete'] = undefined;

/**
 * @member {module:model/DocumentRemove} documentRemove
 */
ListenResponse.prototype['documentRemove'] = undefined;

/**
 * @member {module:model/ExistenceFilter} filter
 */
ListenResponse.prototype['filter'] = undefined;

/**
 * @member {module:model/TargetChange} targetChange
 */
ListenResponse.prototype['targetChange'] = undefined;






export default ListenResponse;

