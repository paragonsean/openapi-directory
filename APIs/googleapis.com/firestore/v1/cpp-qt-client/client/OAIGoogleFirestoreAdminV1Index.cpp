/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleFirestoreAdminV1Index.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleFirestoreAdminV1Index::OAIGoogleFirestoreAdminV1Index(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleFirestoreAdminV1Index::OAIGoogleFirestoreAdminV1Index() {
    this->initializeModel();
}

OAIGoogleFirestoreAdminV1Index::~OAIGoogleFirestoreAdminV1Index() {}

void OAIGoogleFirestoreAdminV1Index::initializeModel() {

    m_api_scope_isSet = false;
    m_api_scope_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_query_scope_isSet = false;
    m_query_scope_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIGoogleFirestoreAdminV1Index::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleFirestoreAdminV1Index::fromJsonObject(QJsonObject json) {

    m_api_scope_isValid = ::OpenAPI::fromJsonValue(m_api_scope, json[QString("apiScope")]);
    m_api_scope_isSet = !json[QString("apiScope")].isNull() && m_api_scope_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_query_scope_isValid = ::OpenAPI::fromJsonValue(m_query_scope, json[QString("queryScope")]);
    m_query_scope_isSet = !json[QString("queryScope")].isNull() && m_query_scope_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIGoogleFirestoreAdminV1Index::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleFirestoreAdminV1Index::asJsonObject() const {
    QJsonObject obj;
    if (m_api_scope_isSet) {
        obj.insert(QString("apiScope"), ::OpenAPI::toJsonValue(m_api_scope));
    }
    if (m_fields.size() > 0) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_query_scope_isSet) {
        obj.insert(QString("queryScope"), ::OpenAPI::toJsonValue(m_query_scope));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIGoogleFirestoreAdminV1Index::getApiScope() const {
    return m_api_scope;
}
void OAIGoogleFirestoreAdminV1Index::setApiScope(const QString &api_scope) {
    m_api_scope = api_scope;
    m_api_scope_isSet = true;
}

bool OAIGoogleFirestoreAdminV1Index::is_api_scope_Set() const{
    return m_api_scope_isSet;
}

bool OAIGoogleFirestoreAdminV1Index::is_api_scope_Valid() const{
    return m_api_scope_isValid;
}

QList<OAIGoogleFirestoreAdminV1IndexField> OAIGoogleFirestoreAdminV1Index::getFields() const {
    return m_fields;
}
void OAIGoogleFirestoreAdminV1Index::setFields(const QList<OAIGoogleFirestoreAdminV1IndexField> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIGoogleFirestoreAdminV1Index::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIGoogleFirestoreAdminV1Index::is_fields_Valid() const{
    return m_fields_isValid;
}

QString OAIGoogleFirestoreAdminV1Index::getName() const {
    return m_name;
}
void OAIGoogleFirestoreAdminV1Index::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleFirestoreAdminV1Index::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleFirestoreAdminV1Index::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleFirestoreAdminV1Index::getQueryScope() const {
    return m_query_scope;
}
void OAIGoogleFirestoreAdminV1Index::setQueryScope(const QString &query_scope) {
    m_query_scope = query_scope;
    m_query_scope_isSet = true;
}

bool OAIGoogleFirestoreAdminV1Index::is_query_scope_Set() const{
    return m_query_scope_isSet;
}

bool OAIGoogleFirestoreAdminV1Index::is_query_scope_Valid() const{
    return m_query_scope_isValid;
}

QString OAIGoogleFirestoreAdminV1Index::getState() const {
    return m_state;
}
void OAIGoogleFirestoreAdminV1Index::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleFirestoreAdminV1Index::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleFirestoreAdminV1Index::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIGoogleFirestoreAdminV1Index::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_scope_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_scope_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleFirestoreAdminV1Index::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
