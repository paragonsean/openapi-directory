/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWriteResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWriteResult::OAIWriteResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWriteResult::OAIWriteResult() {
    this->initializeModel();
}

OAIWriteResult::~OAIWriteResult() {}

void OAIWriteResult::initializeModel() {

    m_transform_results_isSet = false;
    m_transform_results_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIWriteResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWriteResult::fromJsonObject(QJsonObject json) {

    m_transform_results_isValid = ::OpenAPI::fromJsonValue(m_transform_results, json[QString("transformResults")]);
    m_transform_results_isSet = !json[QString("transformResults")].isNull() && m_transform_results_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIWriteResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWriteResult::asJsonObject() const {
    QJsonObject obj;
    if (m_transform_results.size() > 0) {
        obj.insert(QString("transformResults"), ::OpenAPI::toJsonValue(m_transform_results));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QList<OAIValue> OAIWriteResult::getTransformResults() const {
    return m_transform_results;
}
void OAIWriteResult::setTransformResults(const QList<OAIValue> &transform_results) {
    m_transform_results = transform_results;
    m_transform_results_isSet = true;
}

bool OAIWriteResult::is_transform_results_Set() const{
    return m_transform_results_isSet;
}

bool OAIWriteResult::is_transform_results_Valid() const{
    return m_transform_results_isValid;
}

QString OAIWriteResult::getUpdateTime() const {
    return m_update_time;
}
void OAIWriteResult::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIWriteResult::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIWriteResult::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIWriteResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_transform_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWriteResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
