/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStructuredAggregationQuery.h
 *
 * Firestore query for running an aggregation over a StructuredQuery.
 */

#ifndef OAIStructuredAggregationQuery_H
#define OAIStructuredAggregationQuery_H

#include <QJsonObject>

#include "OAIAggregation.h"
#include "OAIStructuredQuery.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAggregation;
class OAIStructuredQuery;

class OAIStructuredAggregationQuery : public OAIObject {
public:
    OAIStructuredAggregationQuery();
    OAIStructuredAggregationQuery(QString json);
    ~OAIStructuredAggregationQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAggregation> getAggregations() const;
    void setAggregations(const QList<OAIAggregation> &aggregations);
    bool is_aggregations_Set() const;
    bool is_aggregations_Valid() const;

    OAIStructuredQuery getStructuredQuery() const;
    void setStructuredQuery(const OAIStructuredQuery &structured_query);
    bool is_structured_query_Set() const;
    bool is_structured_query_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAggregation> m_aggregations;
    bool m_aggregations_isSet;
    bool m_aggregations_isValid;

    OAIStructuredQuery m_structured_query;
    bool m_structured_query_isSet;
    bool m_structured_query_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStructuredAggregationQuery)

#endif // OAIStructuredAggregationQuery_H
