/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWriteRequest.h
 *
 * The request for Firestore.Write. The first request creates a stream, or resumes an existing one from a token. When creating a new stream, the server replies with a response containing only an ID and a token, to use in the next request. When resuming a stream, the server first streams any responses later than the given token, then a response containing only an up-to-date token, to use in the next request.
 */

#ifndef OAIWriteRequest_H
#define OAIWriteRequest_H

#include <QJsonObject>

#include "OAIWrite.h"
#include <QByteArray>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWrite;

class OAIWriteRequest : public OAIObject {
public:
    OAIWriteRequest();
    OAIWriteRequest(QString json);
    ~OAIWriteRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getStreamId() const;
    void setStreamId(const QString &stream_id);
    bool is_stream_id_Set() const;
    bool is_stream_id_Valid() const;

    QByteArray getStreamToken() const;
    void setStreamToken(const QByteArray &stream_token);
    bool is_stream_token_Set() const;
    bool is_stream_token_Valid() const;

    QList<OAIWrite> getWrites() const;
    void setWrites(const QList<OAIWrite> &writes);
    bool is_writes_Set() const;
    bool is_writes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_stream_id;
    bool m_stream_id_isSet;
    bool m_stream_id_isValid;

    QByteArray m_stream_token;
    bool m_stream_token_isSet;
    bool m_stream_token_isValid;

    QList<OAIWrite> m_writes;
    bool m_writes_isSet;
    bool m_writes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWriteRequest)

#endif // OAIWriteRequest_H
