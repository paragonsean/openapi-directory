/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListenResponse.h
 *
 * The response for Firestore.Listen.
 */

#ifndef OAIListenResponse_H
#define OAIListenResponse_H

#include <QJsonObject>

#include "OAIDocumentChange.h"
#include "OAIDocumentDelete.h"
#include "OAIDocumentRemove.h"
#include "OAIExistenceFilter.h"
#include "OAITargetChange.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDocumentChange;
class OAIDocumentDelete;
class OAIDocumentRemove;
class OAIExistenceFilter;
class OAITargetChange;

class OAIListenResponse : public OAIObject {
public:
    OAIListenResponse();
    OAIListenResponse(QString json);
    ~OAIListenResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDocumentChange getDocumentChange() const;
    void setDocumentChange(const OAIDocumentChange &document_change);
    bool is_document_change_Set() const;
    bool is_document_change_Valid() const;

    OAIDocumentDelete getDocumentDelete() const;
    void setDocumentDelete(const OAIDocumentDelete &document_delete);
    bool is_document_delete_Set() const;
    bool is_document_delete_Valid() const;

    OAIDocumentRemove getDocumentRemove() const;
    void setDocumentRemove(const OAIDocumentRemove &document_remove);
    bool is_document_remove_Set() const;
    bool is_document_remove_Valid() const;

    OAIExistenceFilter getFilter() const;
    void setFilter(const OAIExistenceFilter &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    OAITargetChange getTargetChange() const;
    void setTargetChange(const OAITargetChange &target_change);
    bool is_target_change_Set() const;
    bool is_target_change_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDocumentChange m_document_change;
    bool m_document_change_isSet;
    bool m_document_change_isValid;

    OAIDocumentDelete m_document_delete;
    bool m_document_delete_isSet;
    bool m_document_delete_isValid;

    OAIDocumentRemove m_document_remove;
    bool m_document_remove_isSet;
    bool m_document_remove_isValid;

    OAIExistenceFilter m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    OAITargetChange m_target_change;
    bool m_target_change_isSet;
    bool m_target_change_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListenResponse)

#endif // OAIListenResponse_H
