/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudFirestoreApi);
  }
}(this, function(expect, CloudFirestoreApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudFirestoreApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('firestoreProjectsDatabasesBackupSchedulesCreate', function() {
      it('should call firestoreProjectsDatabasesBackupSchedulesCreate successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesBackupSchedulesCreate
        //instance.firestoreProjectsDatabasesBackupSchedulesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesBackupSchedulesList', function() {
      it('should call firestoreProjectsDatabasesBackupSchedulesList successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesBackupSchedulesList
        //instance.firestoreProjectsDatabasesBackupSchedulesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesCollectionGroupsFieldsList', function() {
      it('should call firestoreProjectsDatabasesCollectionGroupsFieldsList successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesCollectionGroupsFieldsList
        //instance.firestoreProjectsDatabasesCollectionGroupsFieldsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesCollectionGroupsIndexesCreate', function() {
      it('should call firestoreProjectsDatabasesCollectionGroupsIndexesCreate successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesCollectionGroupsIndexesCreate
        //instance.firestoreProjectsDatabasesCollectionGroupsIndexesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesCollectionGroupsIndexesList', function() {
      it('should call firestoreProjectsDatabasesCollectionGroupsIndexesList successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesCollectionGroupsIndexesList
        //instance.firestoreProjectsDatabasesCollectionGroupsIndexesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesCreate', function() {
      it('should call firestoreProjectsDatabasesCreate successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesCreate
        //instance.firestoreProjectsDatabasesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsBatchGet', function() {
      it('should call firestoreProjectsDatabasesDocumentsBatchGet successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsBatchGet
        //instance.firestoreProjectsDatabasesDocumentsBatchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsBatchWrite', function() {
      it('should call firestoreProjectsDatabasesDocumentsBatchWrite successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsBatchWrite
        //instance.firestoreProjectsDatabasesDocumentsBatchWrite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsBeginTransaction', function() {
      it('should call firestoreProjectsDatabasesDocumentsBeginTransaction successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsBeginTransaction
        //instance.firestoreProjectsDatabasesDocumentsBeginTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsCommit', function() {
      it('should call firestoreProjectsDatabasesDocumentsCommit successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsCommit
        //instance.firestoreProjectsDatabasesDocumentsCommit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsCreateDocument', function() {
      it('should call firestoreProjectsDatabasesDocumentsCreateDocument successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsCreateDocument
        //instance.firestoreProjectsDatabasesDocumentsCreateDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsListCollectionIds', function() {
      it('should call firestoreProjectsDatabasesDocumentsListCollectionIds successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsListCollectionIds
        //instance.firestoreProjectsDatabasesDocumentsListCollectionIds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsListDocuments', function() {
      it('should call firestoreProjectsDatabasesDocumentsListDocuments successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsListDocuments
        //instance.firestoreProjectsDatabasesDocumentsListDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsListen', function() {
      it('should call firestoreProjectsDatabasesDocumentsListen successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsListen
        //instance.firestoreProjectsDatabasesDocumentsListen(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsPartitionQuery', function() {
      it('should call firestoreProjectsDatabasesDocumentsPartitionQuery successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsPartitionQuery
        //instance.firestoreProjectsDatabasesDocumentsPartitionQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsPatch', function() {
      it('should call firestoreProjectsDatabasesDocumentsPatch successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsPatch
        //instance.firestoreProjectsDatabasesDocumentsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsRollback', function() {
      it('should call firestoreProjectsDatabasesDocumentsRollback successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsRollback
        //instance.firestoreProjectsDatabasesDocumentsRollback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsRunAggregationQuery', function() {
      it('should call firestoreProjectsDatabasesDocumentsRunAggregationQuery successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsRunAggregationQuery
        //instance.firestoreProjectsDatabasesDocumentsRunAggregationQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsRunQuery', function() {
      it('should call firestoreProjectsDatabasesDocumentsRunQuery successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsRunQuery
        //instance.firestoreProjectsDatabasesDocumentsRunQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesDocumentsWrite', function() {
      it('should call firestoreProjectsDatabasesDocumentsWrite successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesDocumentsWrite
        //instance.firestoreProjectsDatabasesDocumentsWrite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesExportDocuments', function() {
      it('should call firestoreProjectsDatabasesExportDocuments successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesExportDocuments
        //instance.firestoreProjectsDatabasesExportDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesImportDocuments', function() {
      it('should call firestoreProjectsDatabasesImportDocuments successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesImportDocuments
        //instance.firestoreProjectsDatabasesImportDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesList', function() {
      it('should call firestoreProjectsDatabasesList successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesList
        //instance.firestoreProjectsDatabasesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesOperationsCancel', function() {
      it('should call firestoreProjectsDatabasesOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesOperationsCancel
        //instance.firestoreProjectsDatabasesOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesOperationsList', function() {
      it('should call firestoreProjectsDatabasesOperationsList successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesOperationsList
        //instance.firestoreProjectsDatabasesOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsDatabasesRestore', function() {
      it('should call firestoreProjectsDatabasesRestore successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsDatabasesRestore
        //instance.firestoreProjectsDatabasesRestore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsLocationsBackupsDelete', function() {
      it('should call firestoreProjectsLocationsBackupsDelete successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsLocationsBackupsDelete
        //instance.firestoreProjectsLocationsBackupsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsLocationsBackupsGet', function() {
      it('should call firestoreProjectsLocationsBackupsGet successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsLocationsBackupsGet
        //instance.firestoreProjectsLocationsBackupsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsLocationsBackupsList', function() {
      it('should call firestoreProjectsLocationsBackupsList successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsLocationsBackupsList
        //instance.firestoreProjectsLocationsBackupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('firestoreProjectsLocationsList', function() {
      it('should call firestoreProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test firestoreProjectsLocationsList
        //instance.firestoreProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
