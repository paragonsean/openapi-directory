/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleFirestoreAdminV1DatabaseSnapshot model module.
 * @module model/GoogleFirestoreAdminV1DatabaseSnapshot
 * @version v1
 */
class GoogleFirestoreAdminV1DatabaseSnapshot {
    /**
     * Constructs a new <code>GoogleFirestoreAdminV1DatabaseSnapshot</code>.
     * A consistent snapshot of a database at a specific point in time.
     * @alias module:model/GoogleFirestoreAdminV1DatabaseSnapshot
     */
    constructor() { 
        
        GoogleFirestoreAdminV1DatabaseSnapshot.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleFirestoreAdminV1DatabaseSnapshot</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleFirestoreAdminV1DatabaseSnapshot} obj Optional instance to populate.
     * @return {module:model/GoogleFirestoreAdminV1DatabaseSnapshot} The populated <code>GoogleFirestoreAdminV1DatabaseSnapshot</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleFirestoreAdminV1DatabaseSnapshot();

            if (data.hasOwnProperty('database')) {
                obj['database'] = ApiClient.convertToType(data['database'], 'String');
            }
            if (data.hasOwnProperty('snapshotTime')) {
                obj['snapshotTime'] = ApiClient.convertToType(data['snapshotTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleFirestoreAdminV1DatabaseSnapshot</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleFirestoreAdminV1DatabaseSnapshot</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['database'] && !(typeof data['database'] === 'string' || data['database'] instanceof String)) {
            throw new Error("Expected the field `database` to be a primitive type in the JSON string but got " + data['database']);
        }
        // ensure the json data is a string
        if (data['snapshotTime'] && !(typeof data['snapshotTime'] === 'string' || data['snapshotTime'] instanceof String)) {
            throw new Error("Expected the field `snapshotTime` to be a primitive type in the JSON string but got " + data['snapshotTime']);
        }

        return true;
    }


}



/**
 * Required. A name of the form `projects/{project_id}/databases/{database_id}`
 * @member {String} database
 */
GoogleFirestoreAdminV1DatabaseSnapshot.prototype['database'] = undefined;

/**
 * Required. The timestamp at which the database snapshot is taken. The requested timestamp must be a whole minute within the PITR window.
 * @member {String} snapshotTime
 */
GoogleFirestoreAdminV1DatabaseSnapshot.prototype['snapshotTime'] = undefined;






export default GoogleFirestoreAdminV1DatabaseSnapshot;

