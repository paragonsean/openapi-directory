/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleFirestoreAdminV1Progress from './GoogleFirestoreAdminV1Progress';

/**
 * The GoogleFirestoreAdminV1ExportDocumentsMetadata model module.
 * @module model/GoogleFirestoreAdminV1ExportDocumentsMetadata
 * @version v1
 */
class GoogleFirestoreAdminV1ExportDocumentsMetadata {
    /**
     * Constructs a new <code>GoogleFirestoreAdminV1ExportDocumentsMetadata</code>.
     * Metadata for google.longrunning.Operation results from FirestoreAdmin.ExportDocuments.
     * @alias module:model/GoogleFirestoreAdminV1ExportDocumentsMetadata
     */
    constructor() { 
        
        GoogleFirestoreAdminV1ExportDocumentsMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleFirestoreAdminV1ExportDocumentsMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleFirestoreAdminV1ExportDocumentsMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleFirestoreAdminV1ExportDocumentsMetadata} The populated <code>GoogleFirestoreAdminV1ExportDocumentsMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleFirestoreAdminV1ExportDocumentsMetadata();

            if (data.hasOwnProperty('collectionIds')) {
                obj['collectionIds'] = ApiClient.convertToType(data['collectionIds'], ['String']);
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('namespaceIds')) {
                obj['namespaceIds'] = ApiClient.convertToType(data['namespaceIds'], ['String']);
            }
            if (data.hasOwnProperty('operationState')) {
                obj['operationState'] = ApiClient.convertToType(data['operationState'], 'String');
            }
            if (data.hasOwnProperty('outputUriPrefix')) {
                obj['outputUriPrefix'] = ApiClient.convertToType(data['outputUriPrefix'], 'String');
            }
            if (data.hasOwnProperty('progressBytes')) {
                obj['progressBytes'] = GoogleFirestoreAdminV1Progress.constructFromObject(data['progressBytes']);
            }
            if (data.hasOwnProperty('progressDocuments')) {
                obj['progressDocuments'] = GoogleFirestoreAdminV1Progress.constructFromObject(data['progressDocuments']);
            }
            if (data.hasOwnProperty('snapshotTime')) {
                obj['snapshotTime'] = ApiClient.convertToType(data['snapshotTime'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleFirestoreAdminV1ExportDocumentsMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleFirestoreAdminV1ExportDocumentsMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['collectionIds'])) {
            throw new Error("Expected the field `collectionIds` to be an array in the JSON data but got " + data['collectionIds']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['namespaceIds'])) {
            throw new Error("Expected the field `namespaceIds` to be an array in the JSON data but got " + data['namespaceIds']);
        }
        // ensure the json data is a string
        if (data['operationState'] && !(typeof data['operationState'] === 'string' || data['operationState'] instanceof String)) {
            throw new Error("Expected the field `operationState` to be a primitive type in the JSON string but got " + data['operationState']);
        }
        // ensure the json data is a string
        if (data['outputUriPrefix'] && !(typeof data['outputUriPrefix'] === 'string' || data['outputUriPrefix'] instanceof String)) {
            throw new Error("Expected the field `outputUriPrefix` to be a primitive type in the JSON string but got " + data['outputUriPrefix']);
        }
        // validate the optional field `progressBytes`
        if (data['progressBytes']) { // data not null
          GoogleFirestoreAdminV1Progress.validateJSON(data['progressBytes']);
        }
        // validate the optional field `progressDocuments`
        if (data['progressDocuments']) { // data not null
          GoogleFirestoreAdminV1Progress.validateJSON(data['progressDocuments']);
        }
        // ensure the json data is a string
        if (data['snapshotTime'] && !(typeof data['snapshotTime'] === 'string' || data['snapshotTime'] instanceof String)) {
            throw new Error("Expected the field `snapshotTime` to be a primitive type in the JSON string but got " + data['snapshotTime']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }

        return true;
    }


}



/**
 * Which collection ids are being exported.
 * @member {Array.<String>} collectionIds
 */
GoogleFirestoreAdminV1ExportDocumentsMetadata.prototype['collectionIds'] = undefined;

/**
 * The time this operation completed. Will be unset if operation still in progress.
 * @member {String} endTime
 */
GoogleFirestoreAdminV1ExportDocumentsMetadata.prototype['endTime'] = undefined;

/**
 * Which namespace ids are being exported.
 * @member {Array.<String>} namespaceIds
 */
GoogleFirestoreAdminV1ExportDocumentsMetadata.prototype['namespaceIds'] = undefined;

/**
 * The state of the export operation.
 * @member {module:model/GoogleFirestoreAdminV1ExportDocumentsMetadata.OperationStateEnum} operationState
 */
GoogleFirestoreAdminV1ExportDocumentsMetadata.prototype['operationState'] = undefined;

/**
 * Where the documents are being exported to.
 * @member {String} outputUriPrefix
 */
GoogleFirestoreAdminV1ExportDocumentsMetadata.prototype['outputUriPrefix'] = undefined;

/**
 * @member {module:model/GoogleFirestoreAdminV1Progress} progressBytes
 */
GoogleFirestoreAdminV1ExportDocumentsMetadata.prototype['progressBytes'] = undefined;

/**
 * @member {module:model/GoogleFirestoreAdminV1Progress} progressDocuments
 */
GoogleFirestoreAdminV1ExportDocumentsMetadata.prototype['progressDocuments'] = undefined;

/**
 * The timestamp that corresponds to the version of the database that is being exported. If unspecified, there are no guarantees about the consistency of the documents being exported.
 * @member {String} snapshotTime
 */
GoogleFirestoreAdminV1ExportDocumentsMetadata.prototype['snapshotTime'] = undefined;

/**
 * The time this operation started.
 * @member {String} startTime
 */
GoogleFirestoreAdminV1ExportDocumentsMetadata.prototype['startTime'] = undefined;





/**
 * Allowed values for the <code>operationState</code> property.
 * @enum {String}
 * @readonly
 */
GoogleFirestoreAdminV1ExportDocumentsMetadata['OperationStateEnum'] = {

    /**
     * value: "OPERATION_STATE_UNSPECIFIED"
     * @const
     */
    "OPERATION_STATE_UNSPECIFIED": "OPERATION_STATE_UNSPECIFIED",

    /**
     * value: "INITIALIZING"
     * @const
     */
    "INITIALIZING": "INITIALIZING",

    /**
     * value: "PROCESSING"
     * @const
     */
    "PROCESSING": "PROCESSING",

    /**
     * value: "CANCELLING"
     * @const
     */
    "CANCELLING": "CANCELLING",

    /**
     * value: "FINALIZING"
     * @const
     */
    "FINALIZING": "FINALIZING",

    /**
     * value: "SUCCESSFUL"
     * @const
     */
    "SUCCESSFUL": "SUCCESSFUL",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED"
};



export default GoogleFirestoreAdminV1ExportDocumentsMetadata;

