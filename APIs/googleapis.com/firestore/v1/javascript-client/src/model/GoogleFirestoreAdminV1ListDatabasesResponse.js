/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleFirestoreAdminV1Database from './GoogleFirestoreAdminV1Database';

/**
 * The GoogleFirestoreAdminV1ListDatabasesResponse model module.
 * @module model/GoogleFirestoreAdminV1ListDatabasesResponse
 * @version v1
 */
class GoogleFirestoreAdminV1ListDatabasesResponse {
    /**
     * Constructs a new <code>GoogleFirestoreAdminV1ListDatabasesResponse</code>.
     * The list of databases for a project.
     * @alias module:model/GoogleFirestoreAdminV1ListDatabasesResponse
     */
    constructor() { 
        
        GoogleFirestoreAdminV1ListDatabasesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleFirestoreAdminV1ListDatabasesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleFirestoreAdminV1ListDatabasesResponse} obj Optional instance to populate.
     * @return {module:model/GoogleFirestoreAdminV1ListDatabasesResponse} The populated <code>GoogleFirestoreAdminV1ListDatabasesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleFirestoreAdminV1ListDatabasesResponse();

            if (data.hasOwnProperty('databases')) {
                obj['databases'] = ApiClient.convertToType(data['databases'], [GoogleFirestoreAdminV1Database]);
            }
            if (data.hasOwnProperty('unreachable')) {
                obj['unreachable'] = ApiClient.convertToType(data['unreachable'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleFirestoreAdminV1ListDatabasesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleFirestoreAdminV1ListDatabasesResponse</code>.
     */
    static validateJSON(data) {
        if (data['databases']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['databases'])) {
                throw new Error("Expected the field `databases` to be an array in the JSON data but got " + data['databases']);
            }
            // validate the optional field `databases` (array)
            for (const item of data['databases']) {
                GoogleFirestoreAdminV1Database.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['unreachable'])) {
            throw new Error("Expected the field `unreachable` to be an array in the JSON data but got " + data['unreachable']);
        }

        return true;
    }


}



/**
 * The databases in the project.
 * @member {Array.<module:model/GoogleFirestoreAdminV1Database>} databases
 */
GoogleFirestoreAdminV1ListDatabasesResponse.prototype['databases'] = undefined;

/**
 * In the event that data about individual databases cannot be listed they will be recorded here. An example entry might be: projects/some_project/locations/some_location This can happen if the Cloud Region that the Database resides in is currently unavailable. In this case we can't fetch all the details about the database. You may be able to get a more detailed error message (or possibly fetch the resource) by sending a 'Get' request for the resource or a 'List' request for the specific location.
 * @member {Array.<String>} unreachable
 */
GoogleFirestoreAdminV1ListDatabasesResponse.prototype['unreachable'] = undefined;






export default GoogleFirestoreAdminV1ListDatabasesResponse;

