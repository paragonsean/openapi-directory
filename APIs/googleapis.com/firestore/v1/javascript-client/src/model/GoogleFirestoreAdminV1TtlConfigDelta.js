/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleFirestoreAdminV1TtlConfigDelta model module.
 * @module model/GoogleFirestoreAdminV1TtlConfigDelta
 * @version v1
 */
class GoogleFirestoreAdminV1TtlConfigDelta {
    /**
     * Constructs a new <code>GoogleFirestoreAdminV1TtlConfigDelta</code>.
     * Information about a TTL configuration change.
     * @alias module:model/GoogleFirestoreAdminV1TtlConfigDelta
     */
    constructor() { 
        
        GoogleFirestoreAdminV1TtlConfigDelta.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleFirestoreAdminV1TtlConfigDelta</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleFirestoreAdminV1TtlConfigDelta} obj Optional instance to populate.
     * @return {module:model/GoogleFirestoreAdminV1TtlConfigDelta} The populated <code>GoogleFirestoreAdminV1TtlConfigDelta</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleFirestoreAdminV1TtlConfigDelta();

            if (data.hasOwnProperty('changeType')) {
                obj['changeType'] = ApiClient.convertToType(data['changeType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleFirestoreAdminV1TtlConfigDelta</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleFirestoreAdminV1TtlConfigDelta</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['changeType'] && !(typeof data['changeType'] === 'string' || data['changeType'] instanceof String)) {
            throw new Error("Expected the field `changeType` to be a primitive type in the JSON string but got " + data['changeType']);
        }

        return true;
    }


}



/**
 * Specifies how the TTL configuration is changing.
 * @member {module:model/GoogleFirestoreAdminV1TtlConfigDelta.ChangeTypeEnum} changeType
 */
GoogleFirestoreAdminV1TtlConfigDelta.prototype['changeType'] = undefined;





/**
 * Allowed values for the <code>changeType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleFirestoreAdminV1TtlConfigDelta['ChangeTypeEnum'] = {

    /**
     * value: "CHANGE_TYPE_UNSPECIFIED"
     * @const
     */
    "CHANGE_TYPE_UNSPECIFIED": "CHANGE_TYPE_UNSPECIFIED",

    /**
     * value: "ADD"
     * @const
     */
    "ADD": "ADD",

    /**
     * value: "REMOVE"
     * @const
     */
    "REMOVE": "REMOVE"
};



export default GoogleFirestoreAdminV1TtlConfigDelta;

