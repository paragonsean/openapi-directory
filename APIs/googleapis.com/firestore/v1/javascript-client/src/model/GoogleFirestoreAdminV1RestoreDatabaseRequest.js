/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleFirestoreAdminV1DatabaseSnapshot from './GoogleFirestoreAdminV1DatabaseSnapshot';

/**
 * The GoogleFirestoreAdminV1RestoreDatabaseRequest model module.
 * @module model/GoogleFirestoreAdminV1RestoreDatabaseRequest
 * @version v1
 */
class GoogleFirestoreAdminV1RestoreDatabaseRequest {
    /**
     * Constructs a new <code>GoogleFirestoreAdminV1RestoreDatabaseRequest</code>.
     * The request message for FirestoreAdmin.RestoreDatabase.
     * @alias module:model/GoogleFirestoreAdminV1RestoreDatabaseRequest
     */
    constructor() { 
        
        GoogleFirestoreAdminV1RestoreDatabaseRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleFirestoreAdminV1RestoreDatabaseRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleFirestoreAdminV1RestoreDatabaseRequest} obj Optional instance to populate.
     * @return {module:model/GoogleFirestoreAdminV1RestoreDatabaseRequest} The populated <code>GoogleFirestoreAdminV1RestoreDatabaseRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleFirestoreAdminV1RestoreDatabaseRequest();

            if (data.hasOwnProperty('backup')) {
                obj['backup'] = ApiClient.convertToType(data['backup'], 'String');
            }
            if (data.hasOwnProperty('databaseId')) {
                obj['databaseId'] = ApiClient.convertToType(data['databaseId'], 'String');
            }
            if (data.hasOwnProperty('databaseSnapshot')) {
                obj['databaseSnapshot'] = GoogleFirestoreAdminV1DatabaseSnapshot.constructFromObject(data['databaseSnapshot']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleFirestoreAdminV1RestoreDatabaseRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleFirestoreAdminV1RestoreDatabaseRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['backup'] && !(typeof data['backup'] === 'string' || data['backup'] instanceof String)) {
            throw new Error("Expected the field `backup` to be a primitive type in the JSON string but got " + data['backup']);
        }
        // ensure the json data is a string
        if (data['databaseId'] && !(typeof data['databaseId'] === 'string' || data['databaseId'] instanceof String)) {
            throw new Error("Expected the field `databaseId` to be a primitive type in the JSON string but got " + data['databaseId']);
        }
        // validate the optional field `databaseSnapshot`
        if (data['databaseSnapshot']) { // data not null
          GoogleFirestoreAdminV1DatabaseSnapshot.validateJSON(data['databaseSnapshot']);
        }

        return true;
    }


}



/**
 * Backup to restore from. Must be from the same project as the parent. Format is: `projects/{project_id}/locations/{location}/backups/{backup}`
 * @member {String} backup
 */
GoogleFirestoreAdminV1RestoreDatabaseRequest.prototype['backup'] = undefined;

/**
 * Required. The ID to use for the database, which will become the final component of the database's resource name. This database id must not be associated with an existing database. This value should be 4-63 characters. Valid characters are /a-z-/ with first character a letter and the last a letter or a number. Must not be UUID-like /[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}/. \"(default)\" database id is also valid.
 * @member {String} databaseId
 */
GoogleFirestoreAdminV1RestoreDatabaseRequest.prototype['databaseId'] = undefined;

/**
 * @member {module:model/GoogleFirestoreAdminV1DatabaseSnapshot} databaseSnapshot
 */
GoogleFirestoreAdminV1RestoreDatabaseRequest.prototype['databaseSnapshot'] = undefined;






export default GoogleFirestoreAdminV1RestoreDatabaseRequest;

