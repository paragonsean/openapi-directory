# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_firestore_admin_v1_database_snapshot import GoogleFirestoreAdminV1DatabaseSnapshot
from openapi_server import util


class GoogleFirestoreAdminV1RestoreDatabaseRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup: str=None, database_id: str=None, database_snapshot: GoogleFirestoreAdminV1DatabaseSnapshot=None):
        """GoogleFirestoreAdminV1RestoreDatabaseRequest - a model defined in OpenAPI

        :param backup: The backup of this GoogleFirestoreAdminV1RestoreDatabaseRequest.
        :param database_id: The database_id of this GoogleFirestoreAdminV1RestoreDatabaseRequest.
        :param database_snapshot: The database_snapshot of this GoogleFirestoreAdminV1RestoreDatabaseRequest.
        """
        self.openapi_types = {
            'backup': str,
            'database_id': str,
            'database_snapshot': GoogleFirestoreAdminV1DatabaseSnapshot
        }

        self.attribute_map = {
            'backup': 'backup',
            'database_id': 'databaseId',
            'database_snapshot': 'databaseSnapshot'
        }

        self._backup = backup
        self._database_id = database_id
        self._database_snapshot = database_snapshot

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleFirestoreAdminV1RestoreDatabaseRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleFirestoreAdminV1RestoreDatabaseRequest of this GoogleFirestoreAdminV1RestoreDatabaseRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup(self):
        """Gets the backup of this GoogleFirestoreAdminV1RestoreDatabaseRequest.

        Backup to restore from. Must be from the same project as the parent. Format is: `projects/{project_id}/locations/{location}/backups/{backup}`

        :return: The backup of this GoogleFirestoreAdminV1RestoreDatabaseRequest.
        :rtype: str
        """
        return self._backup

    @backup.setter
    def backup(self, backup):
        """Sets the backup of this GoogleFirestoreAdminV1RestoreDatabaseRequest.

        Backup to restore from. Must be from the same project as the parent. Format is: `projects/{project_id}/locations/{location}/backups/{backup}`

        :param backup: The backup of this GoogleFirestoreAdminV1RestoreDatabaseRequest.
        :type backup: str
        """

        self._backup = backup

    @property
    def database_id(self):
        """Gets the database_id of this GoogleFirestoreAdminV1RestoreDatabaseRequest.

        Required. The ID to use for the database, which will become the final component of the database's resource name. This database id must not be associated with an existing database. This value should be 4-63 characters. Valid characters are /a-z-/ with first character a letter and the last a letter or a number. Must not be UUID-like /[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}/. \"(default)\" database id is also valid.

        :return: The database_id of this GoogleFirestoreAdminV1RestoreDatabaseRequest.
        :rtype: str
        """
        return self._database_id

    @database_id.setter
    def database_id(self, database_id):
        """Sets the database_id of this GoogleFirestoreAdminV1RestoreDatabaseRequest.

        Required. The ID to use for the database, which will become the final component of the database's resource name. This database id must not be associated with an existing database. This value should be 4-63 characters. Valid characters are /a-z-/ with first character a letter and the last a letter or a number. Must not be UUID-like /[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}/. \"(default)\" database id is also valid.

        :param database_id: The database_id of this GoogleFirestoreAdminV1RestoreDatabaseRequest.
        :type database_id: str
        """

        self._database_id = database_id

    @property
    def database_snapshot(self):
        """Gets the database_snapshot of this GoogleFirestoreAdminV1RestoreDatabaseRequest.


        :return: The database_snapshot of this GoogleFirestoreAdminV1RestoreDatabaseRequest.
        :rtype: GoogleFirestoreAdminV1DatabaseSnapshot
        """
        return self._database_snapshot

    @database_snapshot.setter
    def database_snapshot(self, database_snapshot):
        """Sets the database_snapshot of this GoogleFirestoreAdminV1RestoreDatabaseRequest.


        :param database_snapshot: The database_snapshot of this GoogleFirestoreAdminV1RestoreDatabaseRequest.
        :type database_snapshot: GoogleFirestoreAdminV1DatabaseSnapshot
        """

        self._database_snapshot = database_snapshot
