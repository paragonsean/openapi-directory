# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleFirestoreAdminV1WeeklyRecurrence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day: str=None):
        """GoogleFirestoreAdminV1WeeklyRecurrence - a model defined in OpenAPI

        :param day: The day of this GoogleFirestoreAdminV1WeeklyRecurrence.
        """
        self.openapi_types = {
            'day': str
        }

        self.attribute_map = {
            'day': 'day'
        }

        self._day = day

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleFirestoreAdminV1WeeklyRecurrence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleFirestoreAdminV1WeeklyRecurrence of this GoogleFirestoreAdminV1WeeklyRecurrence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day(self):
        """Gets the day of this GoogleFirestoreAdminV1WeeklyRecurrence.

        The day of week to run. DAY_OF_WEEK_UNSPECIFIED is not allowed.

        :return: The day of this GoogleFirestoreAdminV1WeeklyRecurrence.
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this GoogleFirestoreAdminV1WeeklyRecurrence.

        The day of week to run. DAY_OF_WEEK_UNSPECIFIED is not allowed.

        :param day: The day of this GoogleFirestoreAdminV1WeeklyRecurrence.
        :type day: str
        """
        allowed_values = ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]  # noqa: E501
        if day not in allowed_values:
            raise ValueError(
                "Invalid value for `day` ({0}), must be one of {1}"
                .format(day, allowed_values)
            )

        self._day = day
