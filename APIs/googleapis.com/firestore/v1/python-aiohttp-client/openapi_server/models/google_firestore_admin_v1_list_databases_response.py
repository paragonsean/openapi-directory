# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_firestore_admin_v1_database import GoogleFirestoreAdminV1Database
from openapi_server import util


class GoogleFirestoreAdminV1ListDatabasesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, databases: List[GoogleFirestoreAdminV1Database]=None, unreachable: List[str]=None):
        """GoogleFirestoreAdminV1ListDatabasesResponse - a model defined in OpenAPI

        :param databases: The databases of this GoogleFirestoreAdminV1ListDatabasesResponse.
        :param unreachable: The unreachable of this GoogleFirestoreAdminV1ListDatabasesResponse.
        """
        self.openapi_types = {
            'databases': List[GoogleFirestoreAdminV1Database],
            'unreachable': List[str]
        }

        self.attribute_map = {
            'databases': 'databases',
            'unreachable': 'unreachable'
        }

        self._databases = databases
        self._unreachable = unreachable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleFirestoreAdminV1ListDatabasesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleFirestoreAdminV1ListDatabasesResponse of this GoogleFirestoreAdminV1ListDatabasesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def databases(self):
        """Gets the databases of this GoogleFirestoreAdminV1ListDatabasesResponse.

        The databases in the project.

        :return: The databases of this GoogleFirestoreAdminV1ListDatabasesResponse.
        :rtype: List[GoogleFirestoreAdminV1Database]
        """
        return self._databases

    @databases.setter
    def databases(self, databases):
        """Sets the databases of this GoogleFirestoreAdminV1ListDatabasesResponse.

        The databases in the project.

        :param databases: The databases of this GoogleFirestoreAdminV1ListDatabasesResponse.
        :type databases: List[GoogleFirestoreAdminV1Database]
        """

        self._databases = databases

    @property
    def unreachable(self):
        """Gets the unreachable of this GoogleFirestoreAdminV1ListDatabasesResponse.

        In the event that data about individual databases cannot be listed they will be recorded here. An example entry might be: projects/some_project/locations/some_location This can happen if the Cloud Region that the Database resides in is currently unavailable. In this case we can't fetch all the details about the database. You may be able to get a more detailed error message (or possibly fetch the resource) by sending a 'Get' request for the resource or a 'List' request for the specific location.

        :return: The unreachable of this GoogleFirestoreAdminV1ListDatabasesResponse.
        :rtype: List[str]
        """
        return self._unreachable

    @unreachable.setter
    def unreachable(self, unreachable):
        """Sets the unreachable of this GoogleFirestoreAdminV1ListDatabasesResponse.

        In the event that data about individual databases cannot be listed they will be recorded here. An example entry might be: projects/some_project/locations/some_location This can happen if the Cloud Region that the Database resides in is currently unavailable. In this case we can't fetch all the details about the database. You may be able to get a more detailed error message (or possibly fetch the resource) by sending a 'Get' request for the resource or a 'List' request for the specific location.

        :param unreachable: The unreachable of this GoogleFirestoreAdminV1ListDatabasesResponse.
        :type unreachable: List[str]
        """

        self._unreachable = unreachable
