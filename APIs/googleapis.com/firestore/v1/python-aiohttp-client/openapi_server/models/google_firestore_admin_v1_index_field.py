# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_firestore_admin_v1_vector_config import GoogleFirestoreAdminV1VectorConfig
from openapi_server import util


class GoogleFirestoreAdminV1IndexField(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, array_config: str=None, field_path: str=None, order: str=None, vector_config: GoogleFirestoreAdminV1VectorConfig=None):
        """GoogleFirestoreAdminV1IndexField - a model defined in OpenAPI

        :param array_config: The array_config of this GoogleFirestoreAdminV1IndexField.
        :param field_path: The field_path of this GoogleFirestoreAdminV1IndexField.
        :param order: The order of this GoogleFirestoreAdminV1IndexField.
        :param vector_config: The vector_config of this GoogleFirestoreAdminV1IndexField.
        """
        self.openapi_types = {
            'array_config': str,
            'field_path': str,
            'order': str,
            'vector_config': GoogleFirestoreAdminV1VectorConfig
        }

        self.attribute_map = {
            'array_config': 'arrayConfig',
            'field_path': 'fieldPath',
            'order': 'order',
            'vector_config': 'vectorConfig'
        }

        self._array_config = array_config
        self._field_path = field_path
        self._order = order
        self._vector_config = vector_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleFirestoreAdminV1IndexField':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleFirestoreAdminV1IndexField of this GoogleFirestoreAdminV1IndexField.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def array_config(self):
        """Gets the array_config of this GoogleFirestoreAdminV1IndexField.

        Indicates that this field supports operations on `array_value`s.

        :return: The array_config of this GoogleFirestoreAdminV1IndexField.
        :rtype: str
        """
        return self._array_config

    @array_config.setter
    def array_config(self, array_config):
        """Sets the array_config of this GoogleFirestoreAdminV1IndexField.

        Indicates that this field supports operations on `array_value`s.

        :param array_config: The array_config of this GoogleFirestoreAdminV1IndexField.
        :type array_config: str
        """
        allowed_values = ["ARRAY_CONFIG_UNSPECIFIED", "CONTAINS"]  # noqa: E501
        if array_config not in allowed_values:
            raise ValueError(
                "Invalid value for `array_config` ({0}), must be one of {1}"
                .format(array_config, allowed_values)
            )

        self._array_config = array_config

    @property
    def field_path(self):
        """Gets the field_path of this GoogleFirestoreAdminV1IndexField.

        Can be __name__. For single field indexes, this must match the name of the field or may be omitted.

        :return: The field_path of this GoogleFirestoreAdminV1IndexField.
        :rtype: str
        """
        return self._field_path

    @field_path.setter
    def field_path(self, field_path):
        """Sets the field_path of this GoogleFirestoreAdminV1IndexField.

        Can be __name__. For single field indexes, this must match the name of the field or may be omitted.

        :param field_path: The field_path of this GoogleFirestoreAdminV1IndexField.
        :type field_path: str
        """

        self._field_path = field_path

    @property
    def order(self):
        """Gets the order of this GoogleFirestoreAdminV1IndexField.

        Indicates that this field supports ordering by the specified order or comparing using =, !=, <, <=, >, >=.

        :return: The order of this GoogleFirestoreAdminV1IndexField.
        :rtype: str
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this GoogleFirestoreAdminV1IndexField.

        Indicates that this field supports ordering by the specified order or comparing using =, !=, <, <=, >, >=.

        :param order: The order of this GoogleFirestoreAdminV1IndexField.
        :type order: str
        """
        allowed_values = ["ORDER_UNSPECIFIED", "ASCENDING", "DESCENDING"]  # noqa: E501
        if order not in allowed_values:
            raise ValueError(
                "Invalid value for `order` ({0}), must be one of {1}"
                .format(order, allowed_values)
            )

        self._order = order

    @property
    def vector_config(self):
        """Gets the vector_config of this GoogleFirestoreAdminV1IndexField.


        :return: The vector_config of this GoogleFirestoreAdminV1IndexField.
        :rtype: GoogleFirestoreAdminV1VectorConfig
        """
        return self._vector_config

    @vector_config.setter
    def vector_config(self, vector_config):
        """Sets the vector_config of this GoogleFirestoreAdminV1IndexField.


        :param vector_config: The vector_config of this GoogleFirestoreAdminV1IndexField.
        :type vector_config: GoogleFirestoreAdminV1VectorConfig
        """

        self._vector_config = vector_config
