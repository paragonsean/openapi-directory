# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.field_reference import FieldReference
from openapi_server import util


class Sum(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _field: FieldReference=None):
        """Sum - a model defined in OpenAPI

        :param _field: The _field of this Sum.
        """
        self.openapi_types = {
            '_field': FieldReference
        }

        self.attribute_map = {
            '_field': 'field'
        }

        self.__field = _field

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Sum':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Sum of this Sum.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _field(self):
        """Gets the _field of this Sum.


        :return: The _field of this Sum.
        :rtype: FieldReference
        """
        return self.__field

    @_field.setter
    def _field(self, _field):
        """Sets the _field of this Sum.


        :param _field: The _field of this Sum.
        :type _field: FieldReference
        """

        self.__field = _field
