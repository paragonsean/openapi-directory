# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleFirestoreAdminV1DatabaseSnapshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, database: str=None, snapshot_time: str=None):
        """GoogleFirestoreAdminV1DatabaseSnapshot - a model defined in OpenAPI

        :param database: The database of this GoogleFirestoreAdminV1DatabaseSnapshot.
        :param snapshot_time: The snapshot_time of this GoogleFirestoreAdminV1DatabaseSnapshot.
        """
        self.openapi_types = {
            'database': str,
            'snapshot_time': str
        }

        self.attribute_map = {
            'database': 'database',
            'snapshot_time': 'snapshotTime'
        }

        self._database = database
        self._snapshot_time = snapshot_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleFirestoreAdminV1DatabaseSnapshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleFirestoreAdminV1DatabaseSnapshot of this GoogleFirestoreAdminV1DatabaseSnapshot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def database(self):
        """Gets the database of this GoogleFirestoreAdminV1DatabaseSnapshot.

        Required. A name of the form `projects/{project_id}/databases/{database_id}`

        :return: The database of this GoogleFirestoreAdminV1DatabaseSnapshot.
        :rtype: str
        """
        return self._database

    @database.setter
    def database(self, database):
        """Sets the database of this GoogleFirestoreAdminV1DatabaseSnapshot.

        Required. A name of the form `projects/{project_id}/databases/{database_id}`

        :param database: The database of this GoogleFirestoreAdminV1DatabaseSnapshot.
        :type database: str
        """

        self._database = database

    @property
    def snapshot_time(self):
        """Gets the snapshot_time of this GoogleFirestoreAdminV1DatabaseSnapshot.

        Required. The timestamp at which the database snapshot is taken. The requested timestamp must be a whole minute within the PITR window.

        :return: The snapshot_time of this GoogleFirestoreAdminV1DatabaseSnapshot.
        :rtype: str
        """
        return self._snapshot_time

    @snapshot_time.setter
    def snapshot_time(self, snapshot_time):
        """Sets the snapshot_time of this GoogleFirestoreAdminV1DatabaseSnapshot.

        Required. The timestamp at which the database snapshot is taken. The requested timestamp must be a whole minute within the PITR window.

        :param snapshot_time: The snapshot_time of this GoogleFirestoreAdminV1DatabaseSnapshot.
        :type snapshot_time: str
        """

        self._snapshot_time = snapshot_time
