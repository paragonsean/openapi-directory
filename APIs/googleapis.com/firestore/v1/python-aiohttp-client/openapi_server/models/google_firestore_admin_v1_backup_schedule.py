# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_firestore_admin_v1_weekly_recurrence import GoogleFirestoreAdminV1WeeklyRecurrence
from openapi_server import util


class GoogleFirestoreAdminV1BackupSchedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, daily_recurrence: object=None, name: str=None, retention: str=None, update_time: str=None, weekly_recurrence: GoogleFirestoreAdminV1WeeklyRecurrence=None):
        """GoogleFirestoreAdminV1BackupSchedule - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleFirestoreAdminV1BackupSchedule.
        :param daily_recurrence: The daily_recurrence of this GoogleFirestoreAdminV1BackupSchedule.
        :param name: The name of this GoogleFirestoreAdminV1BackupSchedule.
        :param retention: The retention of this GoogleFirestoreAdminV1BackupSchedule.
        :param update_time: The update_time of this GoogleFirestoreAdminV1BackupSchedule.
        :param weekly_recurrence: The weekly_recurrence of this GoogleFirestoreAdminV1BackupSchedule.
        """
        self.openapi_types = {
            'create_time': str,
            'daily_recurrence': object,
            'name': str,
            'retention': str,
            'update_time': str,
            'weekly_recurrence': GoogleFirestoreAdminV1WeeklyRecurrence
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'daily_recurrence': 'dailyRecurrence',
            'name': 'name',
            'retention': 'retention',
            'update_time': 'updateTime',
            'weekly_recurrence': 'weeklyRecurrence'
        }

        self._create_time = create_time
        self._daily_recurrence = daily_recurrence
        self._name = name
        self._retention = retention
        self._update_time = update_time
        self._weekly_recurrence = weekly_recurrence

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleFirestoreAdminV1BackupSchedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleFirestoreAdminV1BackupSchedule of this GoogleFirestoreAdminV1BackupSchedule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleFirestoreAdminV1BackupSchedule.

        Output only. The timestamp at which this backup schedule was created and effective since. No backups will be created for this schedule before this time.

        :return: The create_time of this GoogleFirestoreAdminV1BackupSchedule.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleFirestoreAdminV1BackupSchedule.

        Output only. The timestamp at which this backup schedule was created and effective since. No backups will be created for this schedule before this time.

        :param create_time: The create_time of this GoogleFirestoreAdminV1BackupSchedule.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def daily_recurrence(self):
        """Gets the daily_recurrence of this GoogleFirestoreAdminV1BackupSchedule.

        Represent a recurring schedule that runs at a specific time every day. The time zone is UTC.

        :return: The daily_recurrence of this GoogleFirestoreAdminV1BackupSchedule.
        :rtype: object
        """
        return self._daily_recurrence

    @daily_recurrence.setter
    def daily_recurrence(self, daily_recurrence):
        """Sets the daily_recurrence of this GoogleFirestoreAdminV1BackupSchedule.

        Represent a recurring schedule that runs at a specific time every day. The time zone is UTC.

        :param daily_recurrence: The daily_recurrence of this GoogleFirestoreAdminV1BackupSchedule.
        :type daily_recurrence: object
        """

        self._daily_recurrence = daily_recurrence

    @property
    def name(self):
        """Gets the name of this GoogleFirestoreAdminV1BackupSchedule.

        Output only. The unique backup schedule identifier across all locations and databases for the given project. This will be auto-assigned. Format is `projects/{project}/databases/{database}/backupSchedules/{backup_schedule}`

        :return: The name of this GoogleFirestoreAdminV1BackupSchedule.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleFirestoreAdminV1BackupSchedule.

        Output only. The unique backup schedule identifier across all locations and databases for the given project. This will be auto-assigned. Format is `projects/{project}/databases/{database}/backupSchedules/{backup_schedule}`

        :param name: The name of this GoogleFirestoreAdminV1BackupSchedule.
        :type name: str
        """

        self._name = name

    @property
    def retention(self):
        """Gets the retention of this GoogleFirestoreAdminV1BackupSchedule.

        At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for 7 days.

        :return: The retention of this GoogleFirestoreAdminV1BackupSchedule.
        :rtype: str
        """
        return self._retention

    @retention.setter
    def retention(self, retention):
        """Sets the retention of this GoogleFirestoreAdminV1BackupSchedule.

        At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for 7 days.

        :param retention: The retention of this GoogleFirestoreAdminV1BackupSchedule.
        :type retention: str
        """

        self._retention = retention

    @property
    def update_time(self):
        """Gets the update_time of this GoogleFirestoreAdminV1BackupSchedule.

        Output only. The timestamp at which this backup schedule was most recently updated. When a backup schedule is first created, this is the same as create_time.

        :return: The update_time of this GoogleFirestoreAdminV1BackupSchedule.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleFirestoreAdminV1BackupSchedule.

        Output only. The timestamp at which this backup schedule was most recently updated. When a backup schedule is first created, this is the same as create_time.

        :param update_time: The update_time of this GoogleFirestoreAdminV1BackupSchedule.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def weekly_recurrence(self):
        """Gets the weekly_recurrence of this GoogleFirestoreAdminV1BackupSchedule.


        :return: The weekly_recurrence of this GoogleFirestoreAdminV1BackupSchedule.
        :rtype: GoogleFirestoreAdminV1WeeklyRecurrence
        """
        return self._weekly_recurrence

    @weekly_recurrence.setter
    def weekly_recurrence(self, weekly_recurrence):
        """Sets the weekly_recurrence of this GoogleFirestoreAdminV1BackupSchedule.


        :param weekly_recurrence: The weekly_recurrence of this GoogleFirestoreAdminV1BackupSchedule.
        :type weekly_recurrence: GoogleFirestoreAdminV1WeeklyRecurrence
        """

        self._weekly_recurrence = weekly_recurrence
