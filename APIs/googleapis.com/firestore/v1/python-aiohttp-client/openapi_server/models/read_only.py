# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReadOnly(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, read_time: str=None):
        """ReadOnly - a model defined in OpenAPI

        :param read_time: The read_time of this ReadOnly.
        """
        self.openapi_types = {
            'read_time': str
        }

        self.attribute_map = {
            'read_time': 'readTime'
        }

        self._read_time = read_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReadOnly':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReadOnly of this ReadOnly.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def read_time(self):
        """Gets the read_time of this ReadOnly.

        Reads documents at the given time. This must be a microsecond precision timestamp within the past one hour, or if Point-in-Time Recovery is enabled, can additionally be a whole minute timestamp within the past 7 days.

        :return: The read_time of this ReadOnly.
        :rtype: str
        """
        return self._read_time

    @read_time.setter
    def read_time(self, read_time):
        """Sets the read_time of this ReadOnly.

        Reads documents at the given time. This must be a microsecond precision timestamp within the past one hour, or if Point-in-Time Recovery is enabled, can additionally be a whole minute timestamp within the past 7 days.

        :param read_time: The read_time of this ReadOnly.
        :type read_time: str
        """

        self._read_time = read_time
