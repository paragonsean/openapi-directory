# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleFirestoreAdminV1ExportDocumentsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collection_ids: List[str]=None, namespace_ids: List[str]=None, output_uri_prefix: str=None, snapshot_time: str=None):
        """GoogleFirestoreAdminV1ExportDocumentsRequest - a model defined in OpenAPI

        :param collection_ids: The collection_ids of this GoogleFirestoreAdminV1ExportDocumentsRequest.
        :param namespace_ids: The namespace_ids of this GoogleFirestoreAdminV1ExportDocumentsRequest.
        :param output_uri_prefix: The output_uri_prefix of this GoogleFirestoreAdminV1ExportDocumentsRequest.
        :param snapshot_time: The snapshot_time of this GoogleFirestoreAdminV1ExportDocumentsRequest.
        """
        self.openapi_types = {
            'collection_ids': List[str],
            'namespace_ids': List[str],
            'output_uri_prefix': str,
            'snapshot_time': str
        }

        self.attribute_map = {
            'collection_ids': 'collectionIds',
            'namespace_ids': 'namespaceIds',
            'output_uri_prefix': 'outputUriPrefix',
            'snapshot_time': 'snapshotTime'
        }

        self._collection_ids = collection_ids
        self._namespace_ids = namespace_ids
        self._output_uri_prefix = output_uri_prefix
        self._snapshot_time = snapshot_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleFirestoreAdminV1ExportDocumentsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleFirestoreAdminV1ExportDocumentsRequest of this GoogleFirestoreAdminV1ExportDocumentsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collection_ids(self):
        """Gets the collection_ids of this GoogleFirestoreAdminV1ExportDocumentsRequest.

        Which collection ids to export. Unspecified means all collections.

        :return: The collection_ids of this GoogleFirestoreAdminV1ExportDocumentsRequest.
        :rtype: List[str]
        """
        return self._collection_ids

    @collection_ids.setter
    def collection_ids(self, collection_ids):
        """Sets the collection_ids of this GoogleFirestoreAdminV1ExportDocumentsRequest.

        Which collection ids to export. Unspecified means all collections.

        :param collection_ids: The collection_ids of this GoogleFirestoreAdminV1ExportDocumentsRequest.
        :type collection_ids: List[str]
        """

        self._collection_ids = collection_ids

    @property
    def namespace_ids(self):
        """Gets the namespace_ids of this GoogleFirestoreAdminV1ExportDocumentsRequest.

        An empty list represents all namespaces. This is the preferred usage for databases that don't use namespaces. An empty string element represents the default namespace. This should be used if the database has data in non-default namespaces, but doesn't want to include them. Each namespace in this list must be unique.

        :return: The namespace_ids of this GoogleFirestoreAdminV1ExportDocumentsRequest.
        :rtype: List[str]
        """
        return self._namespace_ids

    @namespace_ids.setter
    def namespace_ids(self, namespace_ids):
        """Sets the namespace_ids of this GoogleFirestoreAdminV1ExportDocumentsRequest.

        An empty list represents all namespaces. This is the preferred usage for databases that don't use namespaces. An empty string element represents the default namespace. This should be used if the database has data in non-default namespaces, but doesn't want to include them. Each namespace in this list must be unique.

        :param namespace_ids: The namespace_ids of this GoogleFirestoreAdminV1ExportDocumentsRequest.
        :type namespace_ids: List[str]
        """

        self._namespace_ids = namespace_ids

    @property
    def output_uri_prefix(self):
        """Gets the output_uri_prefix of this GoogleFirestoreAdminV1ExportDocumentsRequest.

        The output URI. Currently only supports Google Cloud Storage URIs of the form: `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the name of the Google Cloud Storage bucket and `NAMESPACE_PATH` is an optional Google Cloud Storage namespace path. When choosing a name, be sure to consider Google Cloud Storage naming guidelines: https://cloud.google.com/storage/docs/naming. If the URI is a bucket (without a namespace path), a prefix will be generated based on the start time.

        :return: The output_uri_prefix of this GoogleFirestoreAdminV1ExportDocumentsRequest.
        :rtype: str
        """
        return self._output_uri_prefix

    @output_uri_prefix.setter
    def output_uri_prefix(self, output_uri_prefix):
        """Sets the output_uri_prefix of this GoogleFirestoreAdminV1ExportDocumentsRequest.

        The output URI. Currently only supports Google Cloud Storage URIs of the form: `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the name of the Google Cloud Storage bucket and `NAMESPACE_PATH` is an optional Google Cloud Storage namespace path. When choosing a name, be sure to consider Google Cloud Storage naming guidelines: https://cloud.google.com/storage/docs/naming. If the URI is a bucket (without a namespace path), a prefix will be generated based on the start time.

        :param output_uri_prefix: The output_uri_prefix of this GoogleFirestoreAdminV1ExportDocumentsRequest.
        :type output_uri_prefix: str
        """

        self._output_uri_prefix = output_uri_prefix

    @property
    def snapshot_time(self):
        """Gets the snapshot_time of this GoogleFirestoreAdminV1ExportDocumentsRequest.

        The timestamp that corresponds to the version of the database to be exported. The timestamp must be in the past, rounded to the minute and not older than earliestVersionTime. If specified, then the exported documents will represent a consistent view of the database at the provided time. Otherwise, there are no guarantees about the consistency of the exported documents.

        :return: The snapshot_time of this GoogleFirestoreAdminV1ExportDocumentsRequest.
        :rtype: str
        """
        return self._snapshot_time

    @snapshot_time.setter
    def snapshot_time(self, snapshot_time):
        """Sets the snapshot_time of this GoogleFirestoreAdminV1ExportDocumentsRequest.

        The timestamp that corresponds to the version of the database to be exported. The timestamp must be in the past, rounded to the minute and not older than earliestVersionTime. If specified, then the exported documents will represent a consistent view of the database at the provided time. Otherwise, there are no guarantees about the consistency of the exported documents.

        :param snapshot_time: The snapshot_time of this GoogleFirestoreAdminV1ExportDocumentsRequest.
        :type snapshot_time: str
        """

        self._snapshot_time = snapshot_time
