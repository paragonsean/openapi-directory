# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleFirestoreAdminV1TtlConfigDelta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, change_type: str=None):
        """GoogleFirestoreAdminV1TtlConfigDelta - a model defined in OpenAPI

        :param change_type: The change_type of this GoogleFirestoreAdminV1TtlConfigDelta.
        """
        self.openapi_types = {
            'change_type': str
        }

        self.attribute_map = {
            'change_type': 'changeType'
        }

        self._change_type = change_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleFirestoreAdminV1TtlConfigDelta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleFirestoreAdminV1TtlConfigDelta of this GoogleFirestoreAdminV1TtlConfigDelta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def change_type(self):
        """Gets the change_type of this GoogleFirestoreAdminV1TtlConfigDelta.

        Specifies how the TTL configuration is changing.

        :return: The change_type of this GoogleFirestoreAdminV1TtlConfigDelta.
        :rtype: str
        """
        return self._change_type

    @change_type.setter
    def change_type(self, change_type):
        """Sets the change_type of this GoogleFirestoreAdminV1TtlConfigDelta.

        Specifies how the TTL configuration is changing.

        :param change_type: The change_type of this GoogleFirestoreAdminV1TtlConfigDelta.
        :type change_type: str
        """
        allowed_values = ["CHANGE_TYPE_UNSPECIFIED", "ADD", "REMOVE"]  # noqa: E501
        if change_type not in allowed_values:
            raise ValueError(
                "Invalid value for `change_type` ({0}), must be one of {1}"
                .format(change_type, allowed_values)
            )

        self._change_type = change_type
