/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleFirestoreAdminV1beta2IndexConfigDelta.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::OAIGoogleFirestoreAdminV1beta2IndexConfigDelta(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::OAIGoogleFirestoreAdminV1beta2IndexConfigDelta() {
    this->initializeModel();
}

OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::~OAIGoogleFirestoreAdminV1beta2IndexConfigDelta() {}

void OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::initializeModel() {

    m_change_type_isSet = false;
    m_change_type_isValid = false;

    m_index_isSet = false;
    m_index_isValid = false;
}

void OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::fromJsonObject(QJsonObject json) {

    m_change_type_isValid = ::OpenAPI::fromJsonValue(m_change_type, json[QString("changeType")]);
    m_change_type_isSet = !json[QString("changeType")].isNull() && m_change_type_isValid;

    m_index_isValid = ::OpenAPI::fromJsonValue(m_index, json[QString("index")]);
    m_index_isSet = !json[QString("index")].isNull() && m_index_isValid;
}

QString OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::asJsonObject() const {
    QJsonObject obj;
    if (m_change_type_isSet) {
        obj.insert(QString("changeType"), ::OpenAPI::toJsonValue(m_change_type));
    }
    if (m_index.isSet()) {
        obj.insert(QString("index"), ::OpenAPI::toJsonValue(m_index));
    }
    return obj;
}

QString OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::getChangeType() const {
    return m_change_type;
}
void OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::setChangeType(const QString &change_type) {
    m_change_type = change_type;
    m_change_type_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::is_change_type_Set() const{
    return m_change_type_isSet;
}

bool OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::is_change_type_Valid() const{
    return m_change_type_isValid;
}

OAIGoogleFirestoreAdminV1beta2Index OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::getIndex() const {
    return m_index;
}
void OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::setIndex(const OAIGoogleFirestoreAdminV1beta2Index &index) {
    m_index = index;
    m_index_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::is_index_Set() const{
    return m_index_isSet;
}

bool OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::is_index_Valid() const{
    return m_index_isValid;
}

bool OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleFirestoreAdminV1beta2IndexConfigDelta::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
