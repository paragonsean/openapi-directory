/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata() {
    this->initializeModel();
}

OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::~OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata() {}

void OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::initializeModel() {

    m_collection_ids_isSet = false;
    m_collection_ids_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_input_uri_prefix_isSet = false;
    m_input_uri_prefix_isValid = false;

    m_operation_state_isSet = false;
    m_operation_state_isValid = false;

    m_progress_bytes_isSet = false;
    m_progress_bytes_isValid = false;

    m_progress_documents_isSet = false;
    m_progress_documents_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::fromJsonObject(QJsonObject json) {

    m_collection_ids_isValid = ::OpenAPI::fromJsonValue(m_collection_ids, json[QString("collectionIds")]);
    m_collection_ids_isSet = !json[QString("collectionIds")].isNull() && m_collection_ids_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_input_uri_prefix_isValid = ::OpenAPI::fromJsonValue(m_input_uri_prefix, json[QString("inputUriPrefix")]);
    m_input_uri_prefix_isSet = !json[QString("inputUriPrefix")].isNull() && m_input_uri_prefix_isValid;

    m_operation_state_isValid = ::OpenAPI::fromJsonValue(m_operation_state, json[QString("operationState")]);
    m_operation_state_isSet = !json[QString("operationState")].isNull() && m_operation_state_isValid;

    m_progress_bytes_isValid = ::OpenAPI::fromJsonValue(m_progress_bytes, json[QString("progressBytes")]);
    m_progress_bytes_isSet = !json[QString("progressBytes")].isNull() && m_progress_bytes_isValid;

    m_progress_documents_isValid = ::OpenAPI::fromJsonValue(m_progress_documents, json[QString("progressDocuments")]);
    m_progress_documents_isSet = !json[QString("progressDocuments")].isNull() && m_progress_documents_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_collection_ids.size() > 0) {
        obj.insert(QString("collectionIds"), ::OpenAPI::toJsonValue(m_collection_ids));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_input_uri_prefix_isSet) {
        obj.insert(QString("inputUriPrefix"), ::OpenAPI::toJsonValue(m_input_uri_prefix));
    }
    if (m_operation_state_isSet) {
        obj.insert(QString("operationState"), ::OpenAPI::toJsonValue(m_operation_state));
    }
    if (m_progress_bytes.isSet()) {
        obj.insert(QString("progressBytes"), ::OpenAPI::toJsonValue(m_progress_bytes));
    }
    if (m_progress_documents.isSet()) {
        obj.insert(QString("progressDocuments"), ::OpenAPI::toJsonValue(m_progress_documents));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QList<QString> OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::getCollectionIds() const {
    return m_collection_ids;
}
void OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::setCollectionIds(const QList<QString> &collection_ids) {
    m_collection_ids = collection_ids;
    m_collection_ids_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_collection_ids_Set() const{
    return m_collection_ids_isSet;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_collection_ids_Valid() const{
    return m_collection_ids_isValid;
}

QString OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::getEndTime() const {
    return m_end_time;
}
void OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::getInputUriPrefix() const {
    return m_input_uri_prefix;
}
void OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::setInputUriPrefix(const QString &input_uri_prefix) {
    m_input_uri_prefix = input_uri_prefix;
    m_input_uri_prefix_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_input_uri_prefix_Set() const{
    return m_input_uri_prefix_isSet;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_input_uri_prefix_Valid() const{
    return m_input_uri_prefix_isValid;
}

QString OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::getOperationState() const {
    return m_operation_state;
}
void OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::setOperationState(const QString &operation_state) {
    m_operation_state = operation_state;
    m_operation_state_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_operation_state_Set() const{
    return m_operation_state_isSet;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_operation_state_Valid() const{
    return m_operation_state_isValid;
}

OAIGoogleFirestoreAdminV1beta2Progress OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::getProgressBytes() const {
    return m_progress_bytes;
}
void OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::setProgressBytes(const OAIGoogleFirestoreAdminV1beta2Progress &progress_bytes) {
    m_progress_bytes = progress_bytes;
    m_progress_bytes_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_progress_bytes_Set() const{
    return m_progress_bytes_isSet;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_progress_bytes_Valid() const{
    return m_progress_bytes_isValid;
}

OAIGoogleFirestoreAdminV1beta2Progress OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::getProgressDocuments() const {
    return m_progress_documents;
}
void OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::setProgressDocuments(const OAIGoogleFirestoreAdminV1beta2Progress &progress_documents) {
    m_progress_documents = progress_documents;
    m_progress_documents_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_progress_documents_Set() const{
    return m_progress_documents_isSet;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_progress_documents_Valid() const{
    return m_progress_documents_isValid;
}

QString OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::getStartTime() const {
    return m_start_time;
}
void OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_collection_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_uri_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress_bytes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress_documents.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleFirestoreAdminV1beta2ImportDocumentsMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
