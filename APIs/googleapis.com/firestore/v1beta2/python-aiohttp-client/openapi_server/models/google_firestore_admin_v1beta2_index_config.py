# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_firestore_admin_v1beta2_index import GoogleFirestoreAdminV1beta2Index
from openapi_server import util


class GoogleFirestoreAdminV1beta2IndexConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ancestor_field: str=None, indexes: List[GoogleFirestoreAdminV1beta2Index]=None, reverting: bool=None, uses_ancestor_config: bool=None):
        """GoogleFirestoreAdminV1beta2IndexConfig - a model defined in OpenAPI

        :param ancestor_field: The ancestor_field of this GoogleFirestoreAdminV1beta2IndexConfig.
        :param indexes: The indexes of this GoogleFirestoreAdminV1beta2IndexConfig.
        :param reverting: The reverting of this GoogleFirestoreAdminV1beta2IndexConfig.
        :param uses_ancestor_config: The uses_ancestor_config of this GoogleFirestoreAdminV1beta2IndexConfig.
        """
        self.openapi_types = {
            'ancestor_field': str,
            'indexes': List[GoogleFirestoreAdminV1beta2Index],
            'reverting': bool,
            'uses_ancestor_config': bool
        }

        self.attribute_map = {
            'ancestor_field': 'ancestorField',
            'indexes': 'indexes',
            'reverting': 'reverting',
            'uses_ancestor_config': 'usesAncestorConfig'
        }

        self._ancestor_field = ancestor_field
        self._indexes = indexes
        self._reverting = reverting
        self._uses_ancestor_config = uses_ancestor_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleFirestoreAdminV1beta2IndexConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleFirestoreAdminV1beta2IndexConfig of this GoogleFirestoreAdminV1beta2IndexConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ancestor_field(self):
        """Gets the ancestor_field of this GoogleFirestoreAdminV1beta2IndexConfig.

        Output only. Specifies the resource name of the `Field` from which this field's index configuration is set (when `uses_ancestor_config` is true), or from which it *would* be set if this field had no index configuration (when `uses_ancestor_config` is false).

        :return: The ancestor_field of this GoogleFirestoreAdminV1beta2IndexConfig.
        :rtype: str
        """
        return self._ancestor_field

    @ancestor_field.setter
    def ancestor_field(self, ancestor_field):
        """Sets the ancestor_field of this GoogleFirestoreAdminV1beta2IndexConfig.

        Output only. Specifies the resource name of the `Field` from which this field's index configuration is set (when `uses_ancestor_config` is true), or from which it *would* be set if this field had no index configuration (when `uses_ancestor_config` is false).

        :param ancestor_field: The ancestor_field of this GoogleFirestoreAdminV1beta2IndexConfig.
        :type ancestor_field: str
        """

        self._ancestor_field = ancestor_field

    @property
    def indexes(self):
        """Gets the indexes of this GoogleFirestoreAdminV1beta2IndexConfig.

        The indexes supported for this field.

        :return: The indexes of this GoogleFirestoreAdminV1beta2IndexConfig.
        :rtype: List[GoogleFirestoreAdminV1beta2Index]
        """
        return self._indexes

    @indexes.setter
    def indexes(self, indexes):
        """Sets the indexes of this GoogleFirestoreAdminV1beta2IndexConfig.

        The indexes supported for this field.

        :param indexes: The indexes of this GoogleFirestoreAdminV1beta2IndexConfig.
        :type indexes: List[GoogleFirestoreAdminV1beta2Index]
        """

        self._indexes = indexes

    @property
    def reverting(self):
        """Gets the reverting of this GoogleFirestoreAdminV1beta2IndexConfig.

        Output only When true, the `Field`'s index configuration is in the process of being reverted. Once complete, the index config will transition to the same state as the field specified by `ancestor_field`, at which point `uses_ancestor_config` will be `true` and `reverting` will be `false`.

        :return: The reverting of this GoogleFirestoreAdminV1beta2IndexConfig.
        :rtype: bool
        """
        return self._reverting

    @reverting.setter
    def reverting(self, reverting):
        """Sets the reverting of this GoogleFirestoreAdminV1beta2IndexConfig.

        Output only When true, the `Field`'s index configuration is in the process of being reverted. Once complete, the index config will transition to the same state as the field specified by `ancestor_field`, at which point `uses_ancestor_config` will be `true` and `reverting` will be `false`.

        :param reverting: The reverting of this GoogleFirestoreAdminV1beta2IndexConfig.
        :type reverting: bool
        """

        self._reverting = reverting

    @property
    def uses_ancestor_config(self):
        """Gets the uses_ancestor_config of this GoogleFirestoreAdminV1beta2IndexConfig.

        Output only. When true, the `Field`'s index configuration is set from the configuration specified by the `ancestor_field`. When false, the `Field`'s index configuration is defined explicitly.

        :return: The uses_ancestor_config of this GoogleFirestoreAdminV1beta2IndexConfig.
        :rtype: bool
        """
        return self._uses_ancestor_config

    @uses_ancestor_config.setter
    def uses_ancestor_config(self, uses_ancestor_config):
        """Sets the uses_ancestor_config of this GoogleFirestoreAdminV1beta2IndexConfig.

        Output only. When true, the `Field`'s index configuration is set from the configuration specified by the `ancestor_field`. When false, the `Field`'s index configuration is defined explicitly.

        :param uses_ancestor_config: The uses_ancestor_config of this GoogleFirestoreAdminV1beta2IndexConfig.
        :type uses_ancestor_config: bool
        """

        self._uses_ancestor_config = uses_ancestor_config
