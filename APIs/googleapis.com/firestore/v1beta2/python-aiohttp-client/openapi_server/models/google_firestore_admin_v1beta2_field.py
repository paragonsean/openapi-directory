# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_firestore_admin_v1beta2_index_config import GoogleFirestoreAdminV1beta2IndexConfig
from openapi_server import util


class GoogleFirestoreAdminV1beta2Field(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index_config: GoogleFirestoreAdminV1beta2IndexConfig=None, name: str=None):
        """GoogleFirestoreAdminV1beta2Field - a model defined in OpenAPI

        :param index_config: The index_config of this GoogleFirestoreAdminV1beta2Field.
        :param name: The name of this GoogleFirestoreAdminV1beta2Field.
        """
        self.openapi_types = {
            'index_config': GoogleFirestoreAdminV1beta2IndexConfig,
            'name': str
        }

        self.attribute_map = {
            'index_config': 'indexConfig',
            'name': 'name'
        }

        self._index_config = index_config
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleFirestoreAdminV1beta2Field':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleFirestoreAdminV1beta2Field of this GoogleFirestoreAdminV1beta2Field.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index_config(self):
        """Gets the index_config of this GoogleFirestoreAdminV1beta2Field.


        :return: The index_config of this GoogleFirestoreAdminV1beta2Field.
        :rtype: GoogleFirestoreAdminV1beta2IndexConfig
        """
        return self._index_config

    @index_config.setter
    def index_config(self, index_config):
        """Sets the index_config of this GoogleFirestoreAdminV1beta2Field.


        :param index_config: The index_config of this GoogleFirestoreAdminV1beta2Field.
        :type index_config: GoogleFirestoreAdminV1beta2IndexConfig
        """

        self._index_config = index_config

    @property
    def name(self):
        """Gets the name of this GoogleFirestoreAdminV1beta2Field.

        A field name of the form `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}` A field path may be a simple field name, e.g. `address` or a path to fields within map_value , e.g. `address.city`, or a special field path. The only valid special field is `*`, which represents any field. Field paths may be quoted using ` (backtick). The only character that needs to be escaped within a quoted field path is the backtick character itself, escaped using a backslash. Special characters in field paths that must be quoted include: `*`, `.`, ``` (backtick), `[`, `]`, as well as any ascii symbolic characters. Examples: (Note: Comments here are written in markdown syntax, so there is an additional layer of backticks to represent a code block) `\\`address.city\\`` represents a field named `address.city`, not the map key `city` in the field `address`. `\\`*\\`` represents a field named `*`, not any field. A special `Field` contains the default indexing settings for all fields. This field's resource name is: `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*` Indexes defined on this `Field` will be applied to all fields which do not have their own `Field` index configuration.

        :return: The name of this GoogleFirestoreAdminV1beta2Field.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleFirestoreAdminV1beta2Field.

        A field name of the form `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}` A field path may be a simple field name, e.g. `address` or a path to fields within map_value , e.g. `address.city`, or a special field path. The only valid special field is `*`, which represents any field. Field paths may be quoted using ` (backtick). The only character that needs to be escaped within a quoted field path is the backtick character itself, escaped using a backslash. Special characters in field paths that must be quoted include: `*`, `.`, ``` (backtick), `[`, `]`, as well as any ascii symbolic characters. Examples: (Note: Comments here are written in markdown syntax, so there is an additional layer of backticks to represent a code block) `\\`address.city\\`` represents a field named `address.city`, not the map key `city` in the field `address`. `\\`*\\`` represents a field named `*`, not any field. A special `Field` contains the default indexing settings for all fields. This field's resource name is: `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*` Indexes defined on this `Field` will be applied to all fields which do not have their own `Field` index configuration.

        :param name: The name of this GoogleFirestoreAdminV1beta2Field.
        :type name: str
        """

        self._name = name
