openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "Accesses the NoSQL document database built for automatic scaling,\
    \ high performance, and ease of application development. "
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Firestore API
  version: v1beta2
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://firestore.googleapis.com/$discovery/rest?version=v1beta2
    version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: firestore
externalDocs:
  url: https://cloud.google.com/firestore
servers:
- url: https://firestore.googleapis.com/
tags:
- name: projects
paths:
  /v1beta2/{name}:
    delete:
      description: Deletes a composite index.
      operationId: firestore_projects_databases_collection_groups_indexes_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "A name of the form `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Gets a composite index.
      operationId: firestore_projects_databases_collection_groups_indexes_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "A name of the form `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Index'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    patch:
      description: "Updates a field configuration. Currently, field updates apply\
        \ only to single field index configuration. However, calls to FirestoreAdmin.UpdateField\
        \ should provide a field mask to avoid changing any configuration that the\
        \ caller isn't aware of. The field mask should be specified as: `{ paths:\
        \ \"index_config\" }`. This call returns a google.longrunning.Operation which\
        \ may be used to track the status of the field update. The metadata for the\
        \ operation will be the type FieldOperationMetadata. To configure the default\
        \ field settings for the database, use the special `Field` with resource name:\
        \ `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`."
      operationId: firestore_projects_databases_collection_groups_fields_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "A field name of the form `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`\
          \ A field path may be a simple field name, e.g. `address` or a path to fields\
          \ within map_value , e.g. `address.city`, or a special field path. The only\
          \ valid special field is `*`, which represents any field. Field paths may\
          \ be quoted using ` (backtick). The only character that needs to be escaped\
          \ within a quoted field path is the backtick character itself, escaped using\
          \ a backslash. Special characters in field paths that must be quoted include:\
          \ `*`, `.`, ``` (backtick), `[`, `]`, as well as any ascii symbolic characters.\
          \ Examples: (Note: Comments here are written in markdown syntax, so there\
          \ is an additional layer of backticks to represent a code block) `\\`address.city\\\
          `` represents a field named `address.city`, not the map key `city` in the\
          \ field `address`. `\\`*\\`` represents a field named `*`, not any field.\
          \ A special `Field` contains the default indexing settings for all fields.\
          \ This field's resource name is: `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`\
          \ Indexes defined on this `Field` will be applied to all fields which do\
          \ not have their own `Field` index configuration."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "A mask, relative to the field. If specified, only configuration\
          \ specified by this field_mask will be updated in the field."
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Field'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1beta2/{name}:exportDocuments:
    post:
      description: "Exports a copy of all or a subset of documents from Google Cloud\
        \ Firestore to another storage system, such as Google Cloud Storage. Recent\
        \ updates to documents may not be reflected in the export. The export occurs\
        \ in the background and its progress can be monitored and managed via the\
        \ Operation resource that is created. The output of an export may only be\
        \ used once the associated operation is done. If an export operation is cancelled\
        \ before completion it may leave partial data behind in Google Cloud Storage."
      operationId: firestore_projects_databases_export_documents
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Database to export. Should be of the form: `projects/{project_id}/databases/{database_id}`."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2ExportDocumentsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1beta2/{name}:importDocuments:
    post:
      description: "Imports documents into Google Cloud Firestore. Existing documents\
        \ with the same name are overwritten. The import occurs in the background\
        \ and its progress can be monitored and managed via the Operation resource\
        \ that is created. If an ImportDocuments operation is cancelled, it is possible\
        \ that a subset of the data has already been imported to Cloud Firestore."
      operationId: firestore_projects_databases_import_documents
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Database to import into. Should be of the form: `projects/{project_id}/databases/{database_id}`."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2ImportDocumentsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1beta2/{parent}/fields:
    get:
      description: "Lists the field configuration and metadata for this database.\
        \ Currently, FirestoreAdmin.ListFields only supports listing fields that have\
        \ been explicitly overridden. To issue this query, call FirestoreAdmin.ListFields\
        \ with the filter set to `indexConfig.usesAncestorConfig:false`."
      operationId: firestore_projects_databases_collection_groups_fields_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "A parent name of the form `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "The filter to apply to list results. Currently, FirestoreAdmin.ListFields\
          \ only supports listing fields that have been explicitly overridden. To\
          \ issue this query, call FirestoreAdmin.ListFields with the filter set to\
          \ `indexConfig.usesAncestorConfig:false`."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The number of results to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "A page token, returned from a previous call to FirestoreAdmin.ListFields,\
          \ that may be used to get the next page of results."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2ListFieldsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1beta2/{parent}/indexes:
    get:
      description: Lists composite indexes.
      operationId: firestore_projects_databases_collection_groups_indexes_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "A parent name of the form `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The filter to apply to list results.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The number of results to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "A page token, returned from a previous call to FirestoreAdmin.ListIndexes,\
          \ that may be used to get the next page of results."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2ListIndexesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Creates a composite index. This returns a google.longrunning.Operation
        which may be used to track the status of the creation. The metadata for the
        operation will be the type IndexOperationMetadata.
      operationId: firestore_projects_databases_collection_groups_indexes_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "A parent name of the form `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Index'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GoogleFirestoreAdminV1CreateDatabaseMetadata:
      description: Metadata related to the create database operation.
      properties: {}
      type: object
    GoogleFirestoreAdminV1DeleteDatabaseMetadata:
      description: Metadata related to the delete database operation.
      properties: {}
      type: object
    GoogleFirestoreAdminV1Progress:
      description: Describes the progress of the operation. Unit of work is generic
        and must be interpreted based on where Progress is used.
      properties:
        completedWork:
          description: The amount of work completed.
          format: int64
          title: completedWork
          type: string
        estimatedWork:
          description: The amount of work estimated.
          format: int64
          title: estimatedWork
          type: string
      title: GoogleFirestoreAdminV1Progress
      type: object
    GoogleFirestoreAdminV1RestoreDatabaseMetadata:
      description: Metadata for the long-running operation from the RestoreDatabase
        request.
      properties:
        backup:
          description: The name of the backup restoring from.
          type: string
        database:
          description: The name of the database being restored to.
          type: string
        endTime:
          description: "The time the restore finished, unset for ongoing restores."
          format: google-datetime
          type: string
        operationState:
          description: The operation state of the restore.
          enum:
          - OPERATION_STATE_UNSPECIFIED
          - INITIALIZING
          - PROCESSING
          - CANCELLING
          - FINALIZING
          - SUCCESSFUL
          - FAILED
          - CANCELLED
          type: string
        progressPercentage:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1Progress'
        startTime:
          description: The time the restore was started.
          format: google-datetime
          type: string
      type: object
    GoogleFirestoreAdminV1UpdateDatabaseMetadata:
      description: Metadata related to the update database operation.
      properties: {}
      type: object
    GoogleFirestoreAdminV1beta2ExportDocumentsMetadata:
      description: Metadata for google.longrunning.Operation results from FirestoreAdmin.ExportDocuments.
      properties:
        collectionIds:
          description: Which collection ids are being exported.
          items:
            type: string
          type: array
        endTime:
          description: The time this operation completed. Will be unset if operation
            still in progress.
          format: google-datetime
          type: string
        operationState:
          description: The state of the export operation.
          enum:
          - OPERATION_STATE_UNSPECIFIED
          - INITIALIZING
          - PROCESSING
          - CANCELLING
          - FINALIZING
          - SUCCESSFUL
          - FAILED
          - CANCELLED
          type: string
        outputUriPrefix:
          description: Where the entities are being exported to.
          type: string
        progressBytes:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
        progressDocuments:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
        startTime:
          description: The time this operation started.
          format: google-datetime
          type: string
      type: object
    GoogleFirestoreAdminV1beta2ExportDocumentsRequest:
      description: The request for FirestoreAdmin.ExportDocuments.
      example:
        collectionIds:
        - collectionIds
        - collectionIds
        outputUriPrefix: outputUriPrefix
      properties:
        collectionIds:
          description: Which collection ids to export. Unspecified means all collections.
          items:
            type: string
          title: collectionIds
          type: array
        outputUriPrefix:
          description: "The output URI. Currently only supports Google Cloud Storage\
            \ URIs of the form: `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME`\
            \ is the name of the Google Cloud Storage bucket and `NAMESPACE_PATH`\
            \ is an optional Google Cloud Storage namespace path. When choosing a\
            \ name, be sure to consider Google Cloud Storage naming guidelines: https://cloud.google.com/storage/docs/naming.\
            \ If the URI is a bucket (without a namespace path), a prefix will be\
            \ generated based on the start time."
          title: outputUriPrefix
          type: string
      title: GoogleFirestoreAdminV1beta2ExportDocumentsRequest
      type: object
    GoogleFirestoreAdminV1beta2ExportDocumentsResponse:
      description: Returned in the google.longrunning.Operation response field.
      properties:
        outputUriPrefix:
          description: Location of the output files. This can be used to begin an
            import into Cloud Firestore (this project or another project) after the
            operation completes successfully.
          type: string
      type: object
    GoogleFirestoreAdminV1beta2Field:
      description: "Represents a single field in the database. Fields are grouped\
        \ by their \"Collection Group\", which represent all collections in the database\
        \ with the same id."
      example:
        name: name
        indexConfig:
          usesAncestorConfig: true
          ancestorField: ancestorField
          indexes:
          - queryScope: QUERY_SCOPE_UNSPECIFIED
            name: name
            state: STATE_UNSPECIFIED
            fields:
            - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
              fieldPath: fieldPath
              order: ORDER_UNSPECIFIED
            - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
              fieldPath: fieldPath
              order: ORDER_UNSPECIFIED
          - queryScope: QUERY_SCOPE_UNSPECIFIED
            name: name
            state: STATE_UNSPECIFIED
            fields:
            - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
              fieldPath: fieldPath
              order: ORDER_UNSPECIFIED
            - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
              fieldPath: fieldPath
              order: ORDER_UNSPECIFIED
          reverting: true
      properties:
        indexConfig:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2IndexConfig'
        name:
          description: "A field name of the form `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`\
            \ A field path may be a simple field name, e.g. `address` or a path to\
            \ fields within map_value , e.g. `address.city`, or a special field path.\
            \ The only valid special field is `*`, which represents any field. Field\
            \ paths may be quoted using ` (backtick). The only character that needs\
            \ to be escaped within a quoted field path is the backtick character itself,\
            \ escaped using a backslash. Special characters in field paths that must\
            \ be quoted include: `*`, `.`, ``` (backtick), `[`, `]`, as well as any\
            \ ascii symbolic characters. Examples: (Note: Comments here are written\
            \ in markdown syntax, so there is an additional layer of backticks to\
            \ represent a code block) `\\`address.city\\`` represents a field named\
            \ `address.city`, not the map key `city` in the field `address`. `\\`*\\\
            `` represents a field named `*`, not any field. A special `Field` contains\
            \ the default indexing settings for all fields. This field's resource\
            \ name is: `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`\
            \ Indexes defined on this `Field` will be applied to all fields which\
            \ do not have their own `Field` index configuration."
          title: name
          type: string
      title: GoogleFirestoreAdminV1beta2Field
      type: object
    GoogleFirestoreAdminV1beta2FieldOperationMetadata:
      description: Metadata for google.longrunning.Operation results from FirestoreAdmin.UpdateField.
      properties:
        bytesProgress:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
        documentProgress:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
        endTime:
          description: The time this operation completed. Will be unset if operation
            still in progress.
          format: google-datetime
          type: string
        field:
          description: "The field resource that this operation is acting on. For example:\
            \ `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`"
          type: string
        indexConfigDeltas:
          description: "A list of IndexConfigDelta, which describe the intent of this\
            \ operation."
          items:
            $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2IndexConfigDelta'
          type: array
        startTime:
          description: The time this operation started.
          format: google-datetime
          type: string
        state:
          description: The state of the operation.
          enum:
          - OPERATION_STATE_UNSPECIFIED
          - INITIALIZING
          - PROCESSING
          - CANCELLING
          - FINALIZING
          - SUCCESSFUL
          - FAILED
          - CANCELLED
          type: string
      type: object
    GoogleFirestoreAdminV1beta2ImportDocumentsMetadata:
      description: Metadata for google.longrunning.Operation results from FirestoreAdmin.ImportDocuments.
      properties:
        collectionIds:
          description: Which collection ids are being imported.
          items:
            type: string
          type: array
        endTime:
          description: The time this operation completed. Will be unset if operation
            still in progress.
          format: google-datetime
          type: string
        inputUriPrefix:
          description: The location of the documents being imported.
          type: string
        operationState:
          description: The state of the import operation.
          enum:
          - OPERATION_STATE_UNSPECIFIED
          - INITIALIZING
          - PROCESSING
          - CANCELLING
          - FINALIZING
          - SUCCESSFUL
          - FAILED
          - CANCELLED
          type: string
        progressBytes:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
        progressDocuments:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
        startTime:
          description: The time this operation started.
          format: google-datetime
          type: string
      type: object
    GoogleFirestoreAdminV1beta2ImportDocumentsRequest:
      description: The request for FirestoreAdmin.ImportDocuments.
      example:
        inputUriPrefix: inputUriPrefix
        collectionIds:
        - collectionIds
        - collectionIds
      properties:
        collectionIds:
          description: Which collection ids to import. Unspecified means all collections
            included in the import.
          items:
            type: string
          title: collectionIds
          type: array
        inputUriPrefix:
          description: "Location of the exported files. This must match the output_uri_prefix\
            \ of an ExportDocumentsResponse from an export that has completed successfully.\
            \ See: google.firestore.admin.v1beta2.ExportDocumentsResponse.output_uri_prefix."
          title: inputUriPrefix
          type: string
      title: GoogleFirestoreAdminV1beta2ImportDocumentsRequest
      type: object
    GoogleFirestoreAdminV1beta2Index:
      description: Cloud Firestore indexes enable simple and complex queries against
        documents in a database.
      example:
        queryScope: QUERY_SCOPE_UNSPECIFIED
        name: name
        state: STATE_UNSPECIFIED
        fields:
        - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
          fieldPath: fieldPath
          order: ORDER_UNSPECIFIED
        - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
          fieldPath: fieldPath
          order: ORDER_UNSPECIFIED
      properties:
        fields:
          description: "The fields supported by this index. For composite indexes,\
            \ this is always 2 or more fields. The last field entry is always for\
            \ the field path `__name__`. If, on creation, `__name__` was not specified\
            \ as the last field, it will be added automatically with the same direction\
            \ as that of the last field defined. If the final field in a composite\
            \ index is not directional, the `__name__` will be ordered ASCENDING (unless\
            \ explicitly specified). For single field indexes, this will always be\
            \ exactly one entry with a field path equal to the field path of the associated\
            \ field."
          items:
            $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2IndexField'
          title: fields
          type: array
        name:
          description: "Output only. A server defined name for this index. The form\
            \ of this name for composite indexes will be: `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}`\
            \ For single field indexes, this field will be empty."
          title: name
          type: string
        queryScope:
          description: "Indexes with a collection query scope specified allow queries\
            \ against a collection that is the child of a specific document, specified\
            \ at query time, and that has the same collection id. Indexes with a collection\
            \ group query scope specified allow queries against all collections descended\
            \ from a specific document, specified at query time, and that have the\
            \ same collection id as this index."
          enum:
          - QUERY_SCOPE_UNSPECIFIED
          - COLLECTION
          - COLLECTION_GROUP
          title: queryScope
          type: string
        state:
          description: Output only. The serving state of the index.
          enum:
          - STATE_UNSPECIFIED
          - CREATING
          - READY
          - NEEDS_REPAIR
          title: state
          type: string
      title: GoogleFirestoreAdminV1beta2Index
      type: object
    GoogleFirestoreAdminV1beta2IndexConfig:
      description: The index configuration for this field.
      example:
        usesAncestorConfig: true
        ancestorField: ancestorField
        indexes:
        - queryScope: QUERY_SCOPE_UNSPECIFIED
          name: name
          state: STATE_UNSPECIFIED
          fields:
          - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
            fieldPath: fieldPath
            order: ORDER_UNSPECIFIED
          - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
            fieldPath: fieldPath
            order: ORDER_UNSPECIFIED
        - queryScope: QUERY_SCOPE_UNSPECIFIED
          name: name
          state: STATE_UNSPECIFIED
          fields:
          - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
            fieldPath: fieldPath
            order: ORDER_UNSPECIFIED
          - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
            fieldPath: fieldPath
            order: ORDER_UNSPECIFIED
        reverting: true
      properties:
        ancestorField:
          description: "Output only. Specifies the resource name of the `Field` from\
            \ which this field's index configuration is set (when `uses_ancestor_config`\
            \ is true), or from which it *would* be set if this field had no index\
            \ configuration (when `uses_ancestor_config` is false)."
          title: ancestorField
          type: string
        indexes:
          description: The indexes supported for this field.
          items:
            $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Index'
          title: indexes
          type: array
        reverting:
          description: "Output only When true, the `Field`'s index configuration is\
            \ in the process of being reverted. Once complete, the index config will\
            \ transition to the same state as the field specified by `ancestor_field`,\
            \ at which point `uses_ancestor_config` will be `true` and `reverting`\
            \ will be `false`."
          title: reverting
          type: boolean
        usesAncestorConfig:
          description: "Output only. When true, the `Field`'s index configuration\
            \ is set from the configuration specified by the `ancestor_field`. When\
            \ false, the `Field`'s index configuration is defined explicitly."
          title: usesAncestorConfig
          type: boolean
      title: GoogleFirestoreAdminV1beta2IndexConfig
      type: object
    GoogleFirestoreAdminV1beta2IndexConfigDelta:
      description: Information about an index configuration change.
      properties:
        changeType:
          description: Specifies how the index is changing.
          enum:
          - CHANGE_TYPE_UNSPECIFIED
          - ADD
          - REMOVE
          title: changeType
          type: string
        index:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Index'
      title: GoogleFirestoreAdminV1beta2IndexConfigDelta
      type: object
    GoogleFirestoreAdminV1beta2IndexField:
      description: "A field in an index. The field_path describes which field is indexed,\
        \ the value_mode describes how the field value is indexed."
      example:
        arrayConfig: ARRAY_CONFIG_UNSPECIFIED
        fieldPath: fieldPath
        order: ORDER_UNSPECIFIED
      properties:
        arrayConfig:
          description: Indicates that this field supports operations on `array_value`s.
          enum:
          - ARRAY_CONFIG_UNSPECIFIED
          - CONTAINS
          title: arrayConfig
          type: string
        fieldPath:
          description: "Can be __name__. For single field indexes, this must match\
            \ the name of the field or may be omitted."
          title: fieldPath
          type: string
        order:
          description: "Indicates that this field supports ordering by the specified\
            \ order or comparing using =, <, <=, >, >=."
          enum:
          - ORDER_UNSPECIFIED
          - ASCENDING
          - DESCENDING
          title: order
          type: string
      title: GoogleFirestoreAdminV1beta2IndexField
      type: object
    GoogleFirestoreAdminV1beta2IndexOperationMetadata:
      description: Metadata for google.longrunning.Operation results from FirestoreAdmin.CreateIndex.
      properties:
        endTime:
          description: The time this operation completed. Will be unset if operation
            still in progress.
          format: google-datetime
          type: string
        index:
          description: "The index resource that this operation is acting on. For example:\
            \ `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`"
          type: string
        progressBytes:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
        progressDocuments:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
        startTime:
          description: The time this operation started.
          format: google-datetime
          type: string
        state:
          description: The state of the operation.
          enum:
          - OPERATION_STATE_UNSPECIFIED
          - INITIALIZING
          - PROCESSING
          - CANCELLING
          - FINALIZING
          - SUCCESSFUL
          - FAILED
          - CANCELLED
          type: string
      type: object
    GoogleFirestoreAdminV1beta2ListFieldsResponse:
      description: The response for FirestoreAdmin.ListFields.
      example:
        nextPageToken: nextPageToken
        fields:
        - name: name
          indexConfig:
            usesAncestorConfig: true
            ancestorField: ancestorField
            indexes:
            - queryScope: QUERY_SCOPE_UNSPECIFIED
              name: name
              state: STATE_UNSPECIFIED
              fields:
              - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
                fieldPath: fieldPath
                order: ORDER_UNSPECIFIED
              - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
                fieldPath: fieldPath
                order: ORDER_UNSPECIFIED
            - queryScope: QUERY_SCOPE_UNSPECIFIED
              name: name
              state: STATE_UNSPECIFIED
              fields:
              - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
                fieldPath: fieldPath
                order: ORDER_UNSPECIFIED
              - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
                fieldPath: fieldPath
                order: ORDER_UNSPECIFIED
            reverting: true
        - name: name
          indexConfig:
            usesAncestorConfig: true
            ancestorField: ancestorField
            indexes:
            - queryScope: QUERY_SCOPE_UNSPECIFIED
              name: name
              state: STATE_UNSPECIFIED
              fields:
              - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
                fieldPath: fieldPath
                order: ORDER_UNSPECIFIED
              - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
                fieldPath: fieldPath
                order: ORDER_UNSPECIFIED
            - queryScope: QUERY_SCOPE_UNSPECIFIED
              name: name
              state: STATE_UNSPECIFIED
              fields:
              - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
                fieldPath: fieldPath
                order: ORDER_UNSPECIFIED
              - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
                fieldPath: fieldPath
                order: ORDER_UNSPECIFIED
            reverting: true
      properties:
        fields:
          description: The requested fields.
          items:
            $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Field'
          title: fields
          type: array
        nextPageToken:
          description: "A page token that may be used to request another page of results.\
            \ If blank, this is the last page."
          title: nextPageToken
          type: string
      title: GoogleFirestoreAdminV1beta2ListFieldsResponse
      type: object
    GoogleFirestoreAdminV1beta2ListIndexesResponse:
      description: The response for FirestoreAdmin.ListIndexes.
      example:
        indexes:
        - queryScope: QUERY_SCOPE_UNSPECIFIED
          name: name
          state: STATE_UNSPECIFIED
          fields:
          - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
            fieldPath: fieldPath
            order: ORDER_UNSPECIFIED
          - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
            fieldPath: fieldPath
            order: ORDER_UNSPECIFIED
        - queryScope: QUERY_SCOPE_UNSPECIFIED
          name: name
          state: STATE_UNSPECIFIED
          fields:
          - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
            fieldPath: fieldPath
            order: ORDER_UNSPECIFIED
          - arrayConfig: ARRAY_CONFIG_UNSPECIFIED
            fieldPath: fieldPath
            order: ORDER_UNSPECIFIED
        nextPageToken: nextPageToken
      properties:
        indexes:
          description: The requested indexes.
          items:
            $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Index'
          title: indexes
          type: array
        nextPageToken:
          description: "A page token that may be used to request another page of results.\
            \ If blank, this is the last page."
          title: nextPageToken
          type: string
      title: GoogleFirestoreAdminV1beta2ListIndexesResponse
      type: object
    GoogleFirestoreAdminV1beta2Progress:
      description: Describes the progress of the operation. Unit of work is generic
        and must be interpreted based on where Progress is used.
      properties:
        completedWork:
          description: The amount of work completed.
          format: int64
          title: completedWork
          type: string
        estimatedWork:
          description: The amount of work estimated.
          format: int64
          title: estimatedWork
          type: string
      title: GoogleFirestoreAdminV1beta2Progress
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result
        of a network API call.
      example:
        metadata:
          key: ""
        response:
          key: ""
        name: name
        error:
          code: 0
          details:
          - key: ""
          - key: ""
          message: message
        done: true
      properties:
        done:
          description: "If the value is `false`, it means the operation is still in\
            \ progress. If `true`, the operation is completed, and either `error`\
            \ or `response` is available."
          title: done
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "Service-specific metadata associated with the operation. It\
            \ typically contains progress information and common metadata such as\
            \ create time. Some services might not provide such metadata. Any method\
            \ that returns a long-running operation should document the metadata type,\
            \ if any."
          title: metadata
          type: object
        name:
          description: "The server-assigned name, which is only unique within the\
            \ same service that originally returns it. If you use the default HTTP\
            \ mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
          title: name
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "The normal, successful response of the operation. If the original\
            \ method returns no data on success, such as `Delete`, the response is\
            \ `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`,\
            \ the response should be the resource. For other methods, the response\
            \ should have the type `XxxResponse`, where `Xxx` is the original method\
            \ name. For example, if the original method name is `TakeSnapshot()`,\
            \ the inferred response type is `TakeSnapshotResponse`."
          title: response
          type: object
      title: GoogleLongrunningOperation
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable\
        \ for different programming environments, including REST APIs and RPC APIs.\
        \ It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\
        \ three pieces of data: error code, error message, and error details. You\
        \ can find out more about this error model and how to work with it in the\
        \ [API Design Guide](https://cloud.google.com/apis/design/errors)."
      example:
        code: 0
        details:
        - key: ""
        - key: ""
        message: message
      properties:
        code:
          description: "The status code, which should be an enum value of google.rpc.Code."
          format: int32
          title: code
          type: integer
        details:
          description: A list of messages that carry the error details. There is a
            common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type
                URL.
            type: object
          title: details
          type: array
        message:
          description: "A developer-facing error message, which should be in English.\
            \ Any user-facing error message should be localized and sent in the google.rpc.Status.details\
            \ field, or localized by the client."
          title: message
          type: string
      title: Status
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/datastore: View and manage your Google
              Cloud Datastore data
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/datastore: View and manage your Google
              Cloud Datastore data
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
