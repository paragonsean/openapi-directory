/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleFirestoreAdminV1Progress model module.
 * @module model/GoogleFirestoreAdminV1Progress
 * @version v1beta2
 */
class GoogleFirestoreAdminV1Progress {
    /**
     * Constructs a new <code>GoogleFirestoreAdminV1Progress</code>.
     * Describes the progress of the operation. Unit of work is generic and must be interpreted based on where Progress is used.
     * @alias module:model/GoogleFirestoreAdminV1Progress
     */
    constructor() { 
        
        GoogleFirestoreAdminV1Progress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleFirestoreAdminV1Progress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleFirestoreAdminV1Progress} obj Optional instance to populate.
     * @return {module:model/GoogleFirestoreAdminV1Progress} The populated <code>GoogleFirestoreAdminV1Progress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleFirestoreAdminV1Progress();

            if (data.hasOwnProperty('completedWork')) {
                obj['completedWork'] = ApiClient.convertToType(data['completedWork'], 'String');
            }
            if (data.hasOwnProperty('estimatedWork')) {
                obj['estimatedWork'] = ApiClient.convertToType(data['estimatedWork'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleFirestoreAdminV1Progress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleFirestoreAdminV1Progress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['completedWork'] && !(typeof data['completedWork'] === 'string' || data['completedWork'] instanceof String)) {
            throw new Error("Expected the field `completedWork` to be a primitive type in the JSON string but got " + data['completedWork']);
        }
        // ensure the json data is a string
        if (data['estimatedWork'] && !(typeof data['estimatedWork'] === 'string' || data['estimatedWork'] instanceof String)) {
            throw new Error("Expected the field `estimatedWork` to be a primitive type in the JSON string but got " + data['estimatedWork']);
        }

        return true;
    }


}



/**
 * The amount of work completed.
 * @member {String} completedWork
 */
GoogleFirestoreAdminV1Progress.prototype['completedWork'] = undefined;

/**
 * The amount of work estimated.
 * @member {String} estimatedWork
 */
GoogleFirestoreAdminV1Progress.prototype['estimatedWork'] = undefined;






export default GoogleFirestoreAdminV1Progress;

