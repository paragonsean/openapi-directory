/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleFirestoreAdminV1beta2IndexConfigDelta from './GoogleFirestoreAdminV1beta2IndexConfigDelta';
import GoogleFirestoreAdminV1beta2Progress from './GoogleFirestoreAdminV1beta2Progress';

/**
 * The GoogleFirestoreAdminV1beta2FieldOperationMetadata model module.
 * @module model/GoogleFirestoreAdminV1beta2FieldOperationMetadata
 * @version v1beta2
 */
class GoogleFirestoreAdminV1beta2FieldOperationMetadata {
    /**
     * Constructs a new <code>GoogleFirestoreAdminV1beta2FieldOperationMetadata</code>.
     * Metadata for google.longrunning.Operation results from FirestoreAdmin.UpdateField.
     * @alias module:model/GoogleFirestoreAdminV1beta2FieldOperationMetadata
     */
    constructor() { 
        
        GoogleFirestoreAdminV1beta2FieldOperationMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleFirestoreAdminV1beta2FieldOperationMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleFirestoreAdminV1beta2FieldOperationMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleFirestoreAdminV1beta2FieldOperationMetadata} The populated <code>GoogleFirestoreAdminV1beta2FieldOperationMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleFirestoreAdminV1beta2FieldOperationMetadata();

            if (data.hasOwnProperty('bytesProgress')) {
                obj['bytesProgress'] = GoogleFirestoreAdminV1beta2Progress.constructFromObject(data['bytesProgress']);
            }
            if (data.hasOwnProperty('documentProgress')) {
                obj['documentProgress'] = GoogleFirestoreAdminV1beta2Progress.constructFromObject(data['documentProgress']);
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('field')) {
                obj['field'] = ApiClient.convertToType(data['field'], 'String');
            }
            if (data.hasOwnProperty('indexConfigDeltas')) {
                obj['indexConfigDeltas'] = ApiClient.convertToType(data['indexConfigDeltas'], [GoogleFirestoreAdminV1beta2IndexConfigDelta]);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleFirestoreAdminV1beta2FieldOperationMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleFirestoreAdminV1beta2FieldOperationMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bytesProgress`
        if (data['bytesProgress']) { // data not null
          GoogleFirestoreAdminV1beta2Progress.validateJSON(data['bytesProgress']);
        }
        // validate the optional field `documentProgress`
        if (data['documentProgress']) { // data not null
          GoogleFirestoreAdminV1beta2Progress.validateJSON(data['documentProgress']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['field'] && !(typeof data['field'] === 'string' || data['field'] instanceof String)) {
            throw new Error("Expected the field `field` to be a primitive type in the JSON string but got " + data['field']);
        }
        if (data['indexConfigDeltas']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['indexConfigDeltas'])) {
                throw new Error("Expected the field `indexConfigDeltas` to be an array in the JSON data but got " + data['indexConfigDeltas']);
            }
            // validate the optional field `indexConfigDeltas` (array)
            for (const item of data['indexConfigDeltas']) {
                GoogleFirestoreAdminV1beta2IndexConfigDelta.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleFirestoreAdminV1beta2Progress} bytesProgress
 */
GoogleFirestoreAdminV1beta2FieldOperationMetadata.prototype['bytesProgress'] = undefined;

/**
 * @member {module:model/GoogleFirestoreAdminV1beta2Progress} documentProgress
 */
GoogleFirestoreAdminV1beta2FieldOperationMetadata.prototype['documentProgress'] = undefined;

/**
 * The time this operation completed. Will be unset if operation still in progress.
 * @member {String} endTime
 */
GoogleFirestoreAdminV1beta2FieldOperationMetadata.prototype['endTime'] = undefined;

/**
 * The field resource that this operation is acting on. For example: `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`
 * @member {String} field
 */
GoogleFirestoreAdminV1beta2FieldOperationMetadata.prototype['field'] = undefined;

/**
 * A list of IndexConfigDelta, which describe the intent of this operation.
 * @member {Array.<module:model/GoogleFirestoreAdminV1beta2IndexConfigDelta>} indexConfigDeltas
 */
GoogleFirestoreAdminV1beta2FieldOperationMetadata.prototype['indexConfigDeltas'] = undefined;

/**
 * The time this operation started.
 * @member {String} startTime
 */
GoogleFirestoreAdminV1beta2FieldOperationMetadata.prototype['startTime'] = undefined;

/**
 * The state of the operation.
 * @member {module:model/GoogleFirestoreAdminV1beta2FieldOperationMetadata.StateEnum} state
 */
GoogleFirestoreAdminV1beta2FieldOperationMetadata.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleFirestoreAdminV1beta2FieldOperationMetadata['StateEnum'] = {

    /**
     * value: "OPERATION_STATE_UNSPECIFIED"
     * @const
     */
    "OPERATION_STATE_UNSPECIFIED": "OPERATION_STATE_UNSPECIFIED",

    /**
     * value: "INITIALIZING"
     * @const
     */
    "INITIALIZING": "INITIALIZING",

    /**
     * value: "PROCESSING"
     * @const
     */
    "PROCESSING": "PROCESSING",

    /**
     * value: "CANCELLING"
     * @const
     */
    "CANCELLING": "CANCELLING",

    /**
     * value: "FINALIZING"
     * @const
     */
    "FINALIZING": "FINALIZING",

    /**
     * value: "SUCCESSFUL"
     * @const
     */
    "SUCCESSFUL": "SUCCESSFUL",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED"
};



export default GoogleFirestoreAdminV1beta2FieldOperationMetadata;

