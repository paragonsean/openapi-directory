/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleFirestoreAdminV1beta2IndexField model module.
 * @module model/GoogleFirestoreAdminV1beta2IndexField
 * @version v1beta2
 */
class GoogleFirestoreAdminV1beta2IndexField {
    /**
     * Constructs a new <code>GoogleFirestoreAdminV1beta2IndexField</code>.
     * A field in an index. The field_path describes which field is indexed, the value_mode describes how the field value is indexed.
     * @alias module:model/GoogleFirestoreAdminV1beta2IndexField
     */
    constructor() { 
        
        GoogleFirestoreAdminV1beta2IndexField.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleFirestoreAdminV1beta2IndexField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleFirestoreAdminV1beta2IndexField} obj Optional instance to populate.
     * @return {module:model/GoogleFirestoreAdminV1beta2IndexField} The populated <code>GoogleFirestoreAdminV1beta2IndexField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleFirestoreAdminV1beta2IndexField();

            if (data.hasOwnProperty('arrayConfig')) {
                obj['arrayConfig'] = ApiClient.convertToType(data['arrayConfig'], 'String');
            }
            if (data.hasOwnProperty('fieldPath')) {
                obj['fieldPath'] = ApiClient.convertToType(data['fieldPath'], 'String');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleFirestoreAdminV1beta2IndexField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleFirestoreAdminV1beta2IndexField</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['arrayConfig'] && !(typeof data['arrayConfig'] === 'string' || data['arrayConfig'] instanceof String)) {
            throw new Error("Expected the field `arrayConfig` to be a primitive type in the JSON string but got " + data['arrayConfig']);
        }
        // ensure the json data is a string
        if (data['fieldPath'] && !(typeof data['fieldPath'] === 'string' || data['fieldPath'] instanceof String)) {
            throw new Error("Expected the field `fieldPath` to be a primitive type in the JSON string but got " + data['fieldPath']);
        }
        // ensure the json data is a string
        if (data['order'] && !(typeof data['order'] === 'string' || data['order'] instanceof String)) {
            throw new Error("Expected the field `order` to be a primitive type in the JSON string but got " + data['order']);
        }

        return true;
    }


}



/**
 * Indicates that this field supports operations on `array_value`s.
 * @member {module:model/GoogleFirestoreAdminV1beta2IndexField.ArrayConfigEnum} arrayConfig
 */
GoogleFirestoreAdminV1beta2IndexField.prototype['arrayConfig'] = undefined;

/**
 * Can be __name__. For single field indexes, this must match the name of the field or may be omitted.
 * @member {String} fieldPath
 */
GoogleFirestoreAdminV1beta2IndexField.prototype['fieldPath'] = undefined;

/**
 * Indicates that this field supports ordering by the specified order or comparing using =, <, <=, >, >=.
 * @member {module:model/GoogleFirestoreAdminV1beta2IndexField.OrderEnum} order
 */
GoogleFirestoreAdminV1beta2IndexField.prototype['order'] = undefined;





/**
 * Allowed values for the <code>arrayConfig</code> property.
 * @enum {String}
 * @readonly
 */
GoogleFirestoreAdminV1beta2IndexField['ArrayConfigEnum'] = {

    /**
     * value: "ARRAY_CONFIG_UNSPECIFIED"
     * @const
     */
    "ARRAY_CONFIG_UNSPECIFIED": "ARRAY_CONFIG_UNSPECIFIED",

    /**
     * value: "CONTAINS"
     * @const
     */
    "CONTAINS": "CONTAINS"
};


/**
 * Allowed values for the <code>order</code> property.
 * @enum {String}
 * @readonly
 */
GoogleFirestoreAdminV1beta2IndexField['OrderEnum'] = {

    /**
     * value: "ORDER_UNSPECIFIED"
     * @const
     */
    "ORDER_UNSPECIFIED": "ORDER_UNSPECIFIED",

    /**
     * value: "ASCENDING"
     * @const
     */
    "ASCENDING": "ASCENDING",

    /**
     * value: "DESCENDING"
     * @const
     */
    "DESCENDING": "DESCENDING"
};



export default GoogleFirestoreAdminV1beta2IndexField;

