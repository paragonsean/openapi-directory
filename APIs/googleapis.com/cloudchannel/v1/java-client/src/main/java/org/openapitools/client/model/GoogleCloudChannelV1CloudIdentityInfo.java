/*
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudChannelV1EduData;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Cloud Identity information for the Cloud Channel Customer.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:50.180583-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudChannelV1CloudIdentityInfo {
  public static final String SERIALIZED_NAME_ADMIN_CONSOLE_URI = "adminConsoleUri";
  @SerializedName(SERIALIZED_NAME_ADMIN_CONSOLE_URI)
  private String adminConsoleUri;

  public static final String SERIALIZED_NAME_ALTERNATE_EMAIL = "alternateEmail";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_EMAIL)
  private String alternateEmail;

  /**
   * CustomerType indicates verification type needed for using services.
   */
  @JsonAdapter(CustomerTypeEnum.Adapter.class)
  public enum CustomerTypeEnum {
    CUSTOMER_TYPE_UNSPECIFIED("CUSTOMER_TYPE_UNSPECIFIED"),
    
    DOMAIN("DOMAIN"),
    
    TEAM("TEAM");

    private String value;

    CustomerTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CustomerTypeEnum fromValue(String value) {
      for (CustomerTypeEnum b : CustomerTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CustomerTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CustomerTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CustomerTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CustomerTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CustomerTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CUSTOMER_TYPE = "customerType";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_TYPE)
  private CustomerTypeEnum customerType;

  public static final String SERIALIZED_NAME_EDU_DATA = "eduData";
  @SerializedName(SERIALIZED_NAME_EDU_DATA)
  private GoogleCloudChannelV1EduData eduData;

  public static final String SERIALIZED_NAME_IS_DOMAIN_VERIFIED = "isDomainVerified";
  @SerializedName(SERIALIZED_NAME_IS_DOMAIN_VERIFIED)
  private Boolean isDomainVerified;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_PRIMARY_DOMAIN = "primaryDomain";
  @SerializedName(SERIALIZED_NAME_PRIMARY_DOMAIN)
  private String primaryDomain;

  public GoogleCloudChannelV1CloudIdentityInfo() {
  }

  public GoogleCloudChannelV1CloudIdentityInfo(
     String adminConsoleUri, 
     Boolean isDomainVerified, 
     String primaryDomain
  ) {
    this();
    this.adminConsoleUri = adminConsoleUri;
    this.isDomainVerified = isDomainVerified;
    this.primaryDomain = primaryDomain;
  }

  /**
   * Output only. URI of Customer&#39;s Admin console dashboard.
   * @return adminConsoleUri
   */
  @javax.annotation.Nullable
  public String getAdminConsoleUri() {
    return adminConsoleUri;
  }



  public GoogleCloudChannelV1CloudIdentityInfo alternateEmail(String alternateEmail) {
    this.alternateEmail = alternateEmail;
    return this;
  }

  /**
   * The alternate email.
   * @return alternateEmail
   */
  @javax.annotation.Nullable
  public String getAlternateEmail() {
    return alternateEmail;
  }

  public void setAlternateEmail(String alternateEmail) {
    this.alternateEmail = alternateEmail;
  }


  public GoogleCloudChannelV1CloudIdentityInfo customerType(CustomerTypeEnum customerType) {
    this.customerType = customerType;
    return this;
  }

  /**
   * CustomerType indicates verification type needed for using services.
   * @return customerType
   */
  @javax.annotation.Nullable
  public CustomerTypeEnum getCustomerType() {
    return customerType;
  }

  public void setCustomerType(CustomerTypeEnum customerType) {
    this.customerType = customerType;
  }


  public GoogleCloudChannelV1CloudIdentityInfo eduData(GoogleCloudChannelV1EduData eduData) {
    this.eduData = eduData;
    return this;
  }

  /**
   * Get eduData
   * @return eduData
   */
  @javax.annotation.Nullable
  public GoogleCloudChannelV1EduData getEduData() {
    return eduData;
  }

  public void setEduData(GoogleCloudChannelV1EduData eduData) {
    this.eduData = eduData;
  }


  /**
   * Output only. Whether the domain is verified. This field is not returned for a Customer&#39;s cloud_identity_info resource. Partners can use the domains.get() method of the Workspace SDK&#39;s Directory API, or listen to the PRIMARY_DOMAIN_VERIFIED Pub/Sub event in to track domain verification of their resolve Workspace customers.
   * @return isDomainVerified
   */
  @javax.annotation.Nullable
  public Boolean getIsDomainVerified() {
    return isDomainVerified;
  }



  public GoogleCloudChannelV1CloudIdentityInfo languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Language code.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GoogleCloudChannelV1CloudIdentityInfo phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Phone number associated with the Cloud Identity.
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  /**
   * Output only. The primary domain name.
   * @return primaryDomain
   */
  @javax.annotation.Nullable
  public String getPrimaryDomain() {
    return primaryDomain;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudChannelV1CloudIdentityInfo googleCloudChannelV1CloudIdentityInfo = (GoogleCloudChannelV1CloudIdentityInfo) o;
    return Objects.equals(this.adminConsoleUri, googleCloudChannelV1CloudIdentityInfo.adminConsoleUri) &&
        Objects.equals(this.alternateEmail, googleCloudChannelV1CloudIdentityInfo.alternateEmail) &&
        Objects.equals(this.customerType, googleCloudChannelV1CloudIdentityInfo.customerType) &&
        Objects.equals(this.eduData, googleCloudChannelV1CloudIdentityInfo.eduData) &&
        Objects.equals(this.isDomainVerified, googleCloudChannelV1CloudIdentityInfo.isDomainVerified) &&
        Objects.equals(this.languageCode, googleCloudChannelV1CloudIdentityInfo.languageCode) &&
        Objects.equals(this.phoneNumber, googleCloudChannelV1CloudIdentityInfo.phoneNumber) &&
        Objects.equals(this.primaryDomain, googleCloudChannelV1CloudIdentityInfo.primaryDomain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminConsoleUri, alternateEmail, customerType, eduData, isDomainVerified, languageCode, phoneNumber, primaryDomain);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudChannelV1CloudIdentityInfo {\n");
    sb.append("    adminConsoleUri: ").append(toIndentedString(adminConsoleUri)).append("\n");
    sb.append("    alternateEmail: ").append(toIndentedString(alternateEmail)).append("\n");
    sb.append("    customerType: ").append(toIndentedString(customerType)).append("\n");
    sb.append("    eduData: ").append(toIndentedString(eduData)).append("\n");
    sb.append("    isDomainVerified: ").append(toIndentedString(isDomainVerified)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    primaryDomain: ").append(toIndentedString(primaryDomain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adminConsoleUri");
    openapiFields.add("alternateEmail");
    openapiFields.add("customerType");
    openapiFields.add("eduData");
    openapiFields.add("isDomainVerified");
    openapiFields.add("languageCode");
    openapiFields.add("phoneNumber");
    openapiFields.add("primaryDomain");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudChannelV1CloudIdentityInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudChannelV1CloudIdentityInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudChannelV1CloudIdentityInfo is not found in the empty JSON string", GoogleCloudChannelV1CloudIdentityInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudChannelV1CloudIdentityInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudChannelV1CloudIdentityInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("adminConsoleUri") != null && !jsonObj.get("adminConsoleUri").isJsonNull()) && !jsonObj.get("adminConsoleUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adminConsoleUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adminConsoleUri").toString()));
      }
      if ((jsonObj.get("alternateEmail") != null && !jsonObj.get("alternateEmail").isJsonNull()) && !jsonObj.get("alternateEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alternateEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alternateEmail").toString()));
      }
      if ((jsonObj.get("customerType") != null && !jsonObj.get("customerType").isJsonNull()) && !jsonObj.get("customerType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerType").toString()));
      }
      // validate the optional field `customerType`
      if (jsonObj.get("customerType") != null && !jsonObj.get("customerType").isJsonNull()) {
        CustomerTypeEnum.validateJsonElement(jsonObj.get("customerType"));
      }
      // validate the optional field `eduData`
      if (jsonObj.get("eduData") != null && !jsonObj.get("eduData").isJsonNull()) {
        GoogleCloudChannelV1EduData.validateJsonElement(jsonObj.get("eduData"));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if ((jsonObj.get("phoneNumber") != null && !jsonObj.get("phoneNumber").isJsonNull()) && !jsonObj.get("phoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber").toString()));
      }
      if ((jsonObj.get("primaryDomain") != null && !jsonObj.get("primaryDomain").isJsonNull()) && !jsonObj.get("primaryDomain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryDomain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryDomain").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudChannelV1CloudIdentityInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudChannelV1CloudIdentityInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudChannelV1CloudIdentityInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudChannelV1CloudIdentityInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudChannelV1CloudIdentityInfo>() {
           @Override
           public void write(JsonWriter out, GoogleCloudChannelV1CloudIdentityInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudChannelV1CloudIdentityInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudChannelV1CloudIdentityInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudChannelV1CloudIdentityInfo
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudChannelV1CloudIdentityInfo
   */
  public static GoogleCloudChannelV1CloudIdentityInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudChannelV1CloudIdentityInfo.class);
  }

  /**
   * Convert an instance of GoogleCloudChannelV1CloudIdentityInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

