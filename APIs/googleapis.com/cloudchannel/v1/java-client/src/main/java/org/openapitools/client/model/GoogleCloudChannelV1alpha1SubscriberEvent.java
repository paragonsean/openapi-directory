/*
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudChannelV1alpha1ChannelPartnerEvent;
import org.openapitools.client.model.GoogleCloudChannelV1alpha1CustomerEvent;
import org.openapitools.client.model.GoogleCloudChannelV1alpha1EntitlementEvent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents information which resellers will get as part of notification from Pub/Sub.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:50.180583-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudChannelV1alpha1SubscriberEvent {
  public static final String SERIALIZED_NAME_CHANNEL_PARTNER_EVENT = "channelPartnerEvent";
  @SerializedName(SERIALIZED_NAME_CHANNEL_PARTNER_EVENT)
  private GoogleCloudChannelV1alpha1ChannelPartnerEvent channelPartnerEvent;

  public static final String SERIALIZED_NAME_CUSTOMER_EVENT = "customerEvent";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_EVENT)
  private GoogleCloudChannelV1alpha1CustomerEvent customerEvent;

  public static final String SERIALIZED_NAME_ENTITLEMENT_EVENT = "entitlementEvent";
  @SerializedName(SERIALIZED_NAME_ENTITLEMENT_EVENT)
  private GoogleCloudChannelV1alpha1EntitlementEvent entitlementEvent;

  public GoogleCloudChannelV1alpha1SubscriberEvent() {
  }

  public GoogleCloudChannelV1alpha1SubscriberEvent channelPartnerEvent(GoogleCloudChannelV1alpha1ChannelPartnerEvent channelPartnerEvent) {
    this.channelPartnerEvent = channelPartnerEvent;
    return this;
  }

  /**
   * Get channelPartnerEvent
   * @return channelPartnerEvent
   */
  @javax.annotation.Nullable
  public GoogleCloudChannelV1alpha1ChannelPartnerEvent getChannelPartnerEvent() {
    return channelPartnerEvent;
  }

  public void setChannelPartnerEvent(GoogleCloudChannelV1alpha1ChannelPartnerEvent channelPartnerEvent) {
    this.channelPartnerEvent = channelPartnerEvent;
  }


  public GoogleCloudChannelV1alpha1SubscriberEvent customerEvent(GoogleCloudChannelV1alpha1CustomerEvent customerEvent) {
    this.customerEvent = customerEvent;
    return this;
  }

  /**
   * Get customerEvent
   * @return customerEvent
   */
  @javax.annotation.Nullable
  public GoogleCloudChannelV1alpha1CustomerEvent getCustomerEvent() {
    return customerEvent;
  }

  public void setCustomerEvent(GoogleCloudChannelV1alpha1CustomerEvent customerEvent) {
    this.customerEvent = customerEvent;
  }


  public GoogleCloudChannelV1alpha1SubscriberEvent entitlementEvent(GoogleCloudChannelV1alpha1EntitlementEvent entitlementEvent) {
    this.entitlementEvent = entitlementEvent;
    return this;
  }

  /**
   * Get entitlementEvent
   * @return entitlementEvent
   */
  @javax.annotation.Nullable
  public GoogleCloudChannelV1alpha1EntitlementEvent getEntitlementEvent() {
    return entitlementEvent;
  }

  public void setEntitlementEvent(GoogleCloudChannelV1alpha1EntitlementEvent entitlementEvent) {
    this.entitlementEvent = entitlementEvent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudChannelV1alpha1SubscriberEvent googleCloudChannelV1alpha1SubscriberEvent = (GoogleCloudChannelV1alpha1SubscriberEvent) o;
    return Objects.equals(this.channelPartnerEvent, googleCloudChannelV1alpha1SubscriberEvent.channelPartnerEvent) &&
        Objects.equals(this.customerEvent, googleCloudChannelV1alpha1SubscriberEvent.customerEvent) &&
        Objects.equals(this.entitlementEvent, googleCloudChannelV1alpha1SubscriberEvent.entitlementEvent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelPartnerEvent, customerEvent, entitlementEvent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudChannelV1alpha1SubscriberEvent {\n");
    sb.append("    channelPartnerEvent: ").append(toIndentedString(channelPartnerEvent)).append("\n");
    sb.append("    customerEvent: ").append(toIndentedString(customerEvent)).append("\n");
    sb.append("    entitlementEvent: ").append(toIndentedString(entitlementEvent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("channelPartnerEvent");
    openapiFields.add("customerEvent");
    openapiFields.add("entitlementEvent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudChannelV1alpha1SubscriberEvent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudChannelV1alpha1SubscriberEvent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudChannelV1alpha1SubscriberEvent is not found in the empty JSON string", GoogleCloudChannelV1alpha1SubscriberEvent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudChannelV1alpha1SubscriberEvent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudChannelV1alpha1SubscriberEvent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `channelPartnerEvent`
      if (jsonObj.get("channelPartnerEvent") != null && !jsonObj.get("channelPartnerEvent").isJsonNull()) {
        GoogleCloudChannelV1alpha1ChannelPartnerEvent.validateJsonElement(jsonObj.get("channelPartnerEvent"));
      }
      // validate the optional field `customerEvent`
      if (jsonObj.get("customerEvent") != null && !jsonObj.get("customerEvent").isJsonNull()) {
        GoogleCloudChannelV1alpha1CustomerEvent.validateJsonElement(jsonObj.get("customerEvent"));
      }
      // validate the optional field `entitlementEvent`
      if (jsonObj.get("entitlementEvent") != null && !jsonObj.get("entitlementEvent").isJsonNull()) {
        GoogleCloudChannelV1alpha1EntitlementEvent.validateJsonElement(jsonObj.get("entitlementEvent"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudChannelV1alpha1SubscriberEvent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudChannelV1alpha1SubscriberEvent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudChannelV1alpha1SubscriberEvent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudChannelV1alpha1SubscriberEvent.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudChannelV1alpha1SubscriberEvent>() {
           @Override
           public void write(JsonWriter out, GoogleCloudChannelV1alpha1SubscriberEvent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudChannelV1alpha1SubscriberEvent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudChannelV1alpha1SubscriberEvent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudChannelV1alpha1SubscriberEvent
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudChannelV1alpha1SubscriberEvent
   */
  public static GoogleCloudChannelV1alpha1SubscriberEvent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudChannelV1alpha1SubscriberEvent.class);
  }

  /**
   * Convert an instance of GoogleCloudChannelV1alpha1SubscriberEvent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

