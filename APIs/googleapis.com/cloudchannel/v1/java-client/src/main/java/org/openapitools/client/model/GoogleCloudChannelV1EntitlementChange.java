/*
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudChannelV1Parameter;
import org.openapitools.client.model.GoogleCloudChannelV1ProvisionedService;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Change event entry for Entitlement order history
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:50.180583-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudChannelV1EntitlementChange {
  /**
   * The Entitlement&#39;s activation reason
   */
  @JsonAdapter(ActivationReasonEnum.Adapter.class)
  public enum ActivationReasonEnum {
    ACTIVATION_REASON_UNSPECIFIED("ACTIVATION_REASON_UNSPECIFIED"),
    
    RESELLER_REVOKED_SUSPENSION("RESELLER_REVOKED_SUSPENSION"),
    
    CUSTOMER_ACCEPTED_PENDING_TOS("CUSTOMER_ACCEPTED_PENDING_TOS"),
    
    RENEWAL_SETTINGS_CHANGED("RENEWAL_SETTINGS_CHANGED"),
    
    OTHER_ACTIVATION_REASON("OTHER_ACTIVATION_REASON");

    private String value;

    ActivationReasonEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ActivationReasonEnum fromValue(String value) {
      for (ActivationReasonEnum b : ActivationReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ActivationReasonEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActivationReasonEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActivationReasonEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ActivationReasonEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ActivationReasonEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ACTIVATION_REASON = "activationReason";
  @SerializedName(SERIALIZED_NAME_ACTIVATION_REASON)
  private ActivationReasonEnum activationReason;

  /**
   * Cancellation reason for the Entitlement.
   */
  @JsonAdapter(CancellationReasonEnum.Adapter.class)
  public enum CancellationReasonEnum {
    CANCELLATION_REASON_UNSPECIFIED("CANCELLATION_REASON_UNSPECIFIED"),
    
    SERVICE_TERMINATED("SERVICE_TERMINATED"),
    
    RELATIONSHIP_ENDED("RELATIONSHIP_ENDED"),
    
    PARTIAL_TRANSFER("PARTIAL_TRANSFER");

    private String value;

    CancellationReasonEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CancellationReasonEnum fromValue(String value) {
      for (CancellationReasonEnum b : CancellationReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CancellationReasonEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CancellationReasonEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CancellationReasonEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CancellationReasonEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CancellationReasonEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CANCELLATION_REASON = "cancellationReason";
  @SerializedName(SERIALIZED_NAME_CANCELLATION_REASON)
  private CancellationReasonEnum cancellationReason;

  /**
   * The change action type.
   */
  @JsonAdapter(ChangeTypeEnum.Adapter.class)
  public enum ChangeTypeEnum {
    CHANGE_TYPE_UNSPECIFIED("CHANGE_TYPE_UNSPECIFIED"),
    
    CREATED("CREATED"),
    
    PRICE_PLAN_SWITCHED("PRICE_PLAN_SWITCHED"),
    
    COMMITMENT_CHANGED("COMMITMENT_CHANGED"),
    
    RENEWED("RENEWED"),
    
    SUSPENDED("SUSPENDED"),
    
    ACTIVATED("ACTIVATED"),
    
    CANCELLED("CANCELLED"),
    
    SKU_CHANGED("SKU_CHANGED"),
    
    RENEWAL_SETTING_CHANGED("RENEWAL_SETTING_CHANGED"),
    
    PAID_SUBSCRIPTION_STARTED("PAID_SUBSCRIPTION_STARTED"),
    
    LICENSE_CAP_CHANGED("LICENSE_CAP_CHANGED"),
    
    SUSPENSION_DETAILS_CHANGED("SUSPENSION_DETAILS_CHANGED"),
    
    TRIAL_END_DATE_EXTENDED("TRIAL_END_DATE_EXTENDED"),
    
    TRIAL_STARTED("TRIAL_STARTED");

    private String value;

    ChangeTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ChangeTypeEnum fromValue(String value) {
      for (ChangeTypeEnum b : ChangeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ChangeTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ChangeTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ChangeTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ChangeTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ChangeTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CHANGE_TYPE = "changeType";
  @SerializedName(SERIALIZED_NAME_CHANGE_TYPE)
  private ChangeTypeEnum changeType;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_ENTITLEMENT = "entitlement";
  @SerializedName(SERIALIZED_NAME_ENTITLEMENT)
  private String entitlement;

  public static final String SERIALIZED_NAME_OFFER = "offer";
  @SerializedName(SERIALIZED_NAME_OFFER)
  private String offer;

  public static final String SERIALIZED_NAME_OPERATOR = "operator";
  @SerializedName(SERIALIZED_NAME_OPERATOR)
  private String operator;

  /**
   * Operator type responsible for the change.
   */
  @JsonAdapter(OperatorTypeEnum.Adapter.class)
  public enum OperatorTypeEnum {
    OPERATOR_TYPE_UNSPECIFIED("OPERATOR_TYPE_UNSPECIFIED"),
    
    CUSTOMER_SERVICE_REPRESENTATIVE("CUSTOMER_SERVICE_REPRESENTATIVE"),
    
    SYSTEM("SYSTEM"),
    
    CUSTOMER("CUSTOMER"),
    
    RESELLER("RESELLER");

    private String value;

    OperatorTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OperatorTypeEnum fromValue(String value) {
      for (OperatorTypeEnum b : OperatorTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OperatorTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OperatorTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OperatorTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OperatorTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OperatorTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_OPERATOR_TYPE = "operatorType";
  @SerializedName(SERIALIZED_NAME_OPERATOR_TYPE)
  private OperatorTypeEnum operatorType;

  public static final String SERIALIZED_NAME_OTHER_CHANGE_REASON = "otherChangeReason";
  @SerializedName(SERIALIZED_NAME_OTHER_CHANGE_REASON)
  private String otherChangeReason;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<GoogleCloudChannelV1Parameter> parameters = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROVISIONED_SERVICE = "provisionedService";
  @SerializedName(SERIALIZED_NAME_PROVISIONED_SERVICE)
  private GoogleCloudChannelV1ProvisionedService provisionedService;

  /**
   * Suspension reason for the Entitlement.
   */
  @JsonAdapter(SuspensionReasonEnum.Adapter.class)
  public enum SuspensionReasonEnum {
    SUSPENSION_REASON_UNSPECIFIED("SUSPENSION_REASON_UNSPECIFIED"),
    
    RESELLER_INITIATED("RESELLER_INITIATED"),
    
    TRIAL_ENDED("TRIAL_ENDED"),
    
    RENEWAL_WITH_TYPE_CANCEL("RENEWAL_WITH_TYPE_CANCEL"),
    
    PENDING_TOS_ACCEPTANCE("PENDING_TOS_ACCEPTANCE"),
    
    OTHER("OTHER");

    private String value;

    SuspensionReasonEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SuspensionReasonEnum fromValue(String value) {
      for (SuspensionReasonEnum b : SuspensionReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SuspensionReasonEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SuspensionReasonEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SuspensionReasonEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SuspensionReasonEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SuspensionReasonEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SUSPENSION_REASON = "suspensionReason";
  @SerializedName(SERIALIZED_NAME_SUSPENSION_REASON)
  private SuspensionReasonEnum suspensionReason;

  public GoogleCloudChannelV1EntitlementChange() {
  }

  public GoogleCloudChannelV1EntitlementChange activationReason(ActivationReasonEnum activationReason) {
    this.activationReason = activationReason;
    return this;
  }

  /**
   * The Entitlement&#39;s activation reason
   * @return activationReason
   */
  @javax.annotation.Nullable
  public ActivationReasonEnum getActivationReason() {
    return activationReason;
  }

  public void setActivationReason(ActivationReasonEnum activationReason) {
    this.activationReason = activationReason;
  }


  public GoogleCloudChannelV1EntitlementChange cancellationReason(CancellationReasonEnum cancellationReason) {
    this.cancellationReason = cancellationReason;
    return this;
  }

  /**
   * Cancellation reason for the Entitlement.
   * @return cancellationReason
   */
  @javax.annotation.Nullable
  public CancellationReasonEnum getCancellationReason() {
    return cancellationReason;
  }

  public void setCancellationReason(CancellationReasonEnum cancellationReason) {
    this.cancellationReason = cancellationReason;
  }


  public GoogleCloudChannelV1EntitlementChange changeType(ChangeTypeEnum changeType) {
    this.changeType = changeType;
    return this;
  }

  /**
   * The change action type.
   * @return changeType
   */
  @javax.annotation.Nullable
  public ChangeTypeEnum getChangeType() {
    return changeType;
  }

  public void setChangeType(ChangeTypeEnum changeType) {
    this.changeType = changeType;
  }


  public GoogleCloudChannelV1EntitlementChange createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * The submitted time of the change.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GoogleCloudChannelV1EntitlementChange entitlement(String entitlement) {
    this.entitlement = entitlement;
    return this;
  }

  /**
   * Required. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   * @return entitlement
   */
  @javax.annotation.Nullable
  public String getEntitlement() {
    return entitlement;
  }

  public void setEntitlement(String entitlement) {
    this.entitlement = entitlement;
  }


  public GoogleCloudChannelV1EntitlementChange offer(String offer) {
    this.offer = offer;
    return this;
  }

  /**
   * Required. Resource name of the Offer at the time of change. Takes the form: accounts/{account_id}/offers/{offer_id}.
   * @return offer
   */
  @javax.annotation.Nullable
  public String getOffer() {
    return offer;
  }

  public void setOffer(String offer) {
    this.offer = offer;
  }


  public GoogleCloudChannelV1EntitlementChange operator(String operator) {
    this.operator = operator;
    return this;
  }

  /**
   * Human-readable identifier that shows what operator made a change. When the operator_type is RESELLER, this is the user&#39;s email address. For all other operator types, this is empty.
   * @return operator
   */
  @javax.annotation.Nullable
  public String getOperator() {
    return operator;
  }

  public void setOperator(String operator) {
    this.operator = operator;
  }


  public GoogleCloudChannelV1EntitlementChange operatorType(OperatorTypeEnum operatorType) {
    this.operatorType = operatorType;
    return this;
  }

  /**
   * Operator type responsible for the change.
   * @return operatorType
   */
  @javax.annotation.Nullable
  public OperatorTypeEnum getOperatorType() {
    return operatorType;
  }

  public void setOperatorType(OperatorTypeEnum operatorType) {
    this.operatorType = operatorType;
  }


  public GoogleCloudChannelV1EntitlementChange otherChangeReason(String otherChangeReason) {
    this.otherChangeReason = otherChangeReason;
    return this;
  }

  /**
   * e.g. purchase_number change reason, entered by CRS.
   * @return otherChangeReason
   */
  @javax.annotation.Nullable
  public String getOtherChangeReason() {
    return otherChangeReason;
  }

  public void setOtherChangeReason(String otherChangeReason) {
    this.otherChangeReason = otherChangeReason;
  }


  public GoogleCloudChannelV1EntitlementChange parameters(List<GoogleCloudChannelV1Parameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public GoogleCloudChannelV1EntitlementChange addParametersItem(GoogleCloudChannelV1Parameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

  /**
   * Extended parameters, such as: purchase_order_number, gcp_details; internal_correlation_id, long_running_operation_id, order_id; etc.
   * @return parameters
   */
  @javax.annotation.Nullable
  public List<GoogleCloudChannelV1Parameter> getParameters() {
    return parameters;
  }

  public void setParameters(List<GoogleCloudChannelV1Parameter> parameters) {
    this.parameters = parameters;
  }


  public GoogleCloudChannelV1EntitlementChange provisionedService(GoogleCloudChannelV1ProvisionedService provisionedService) {
    this.provisionedService = provisionedService;
    return this;
  }

  /**
   * Get provisionedService
   * @return provisionedService
   */
  @javax.annotation.Nullable
  public GoogleCloudChannelV1ProvisionedService getProvisionedService() {
    return provisionedService;
  }

  public void setProvisionedService(GoogleCloudChannelV1ProvisionedService provisionedService) {
    this.provisionedService = provisionedService;
  }


  public GoogleCloudChannelV1EntitlementChange suspensionReason(SuspensionReasonEnum suspensionReason) {
    this.suspensionReason = suspensionReason;
    return this;
  }

  /**
   * Suspension reason for the Entitlement.
   * @return suspensionReason
   */
  @javax.annotation.Nullable
  public SuspensionReasonEnum getSuspensionReason() {
    return suspensionReason;
  }

  public void setSuspensionReason(SuspensionReasonEnum suspensionReason) {
    this.suspensionReason = suspensionReason;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudChannelV1EntitlementChange googleCloudChannelV1EntitlementChange = (GoogleCloudChannelV1EntitlementChange) o;
    return Objects.equals(this.activationReason, googleCloudChannelV1EntitlementChange.activationReason) &&
        Objects.equals(this.cancellationReason, googleCloudChannelV1EntitlementChange.cancellationReason) &&
        Objects.equals(this.changeType, googleCloudChannelV1EntitlementChange.changeType) &&
        Objects.equals(this.createTime, googleCloudChannelV1EntitlementChange.createTime) &&
        Objects.equals(this.entitlement, googleCloudChannelV1EntitlementChange.entitlement) &&
        Objects.equals(this.offer, googleCloudChannelV1EntitlementChange.offer) &&
        Objects.equals(this.operator, googleCloudChannelV1EntitlementChange.operator) &&
        Objects.equals(this.operatorType, googleCloudChannelV1EntitlementChange.operatorType) &&
        Objects.equals(this.otherChangeReason, googleCloudChannelV1EntitlementChange.otherChangeReason) &&
        Objects.equals(this.parameters, googleCloudChannelV1EntitlementChange.parameters) &&
        Objects.equals(this.provisionedService, googleCloudChannelV1EntitlementChange.provisionedService) &&
        Objects.equals(this.suspensionReason, googleCloudChannelV1EntitlementChange.suspensionReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activationReason, cancellationReason, changeType, createTime, entitlement, offer, operator, operatorType, otherChangeReason, parameters, provisionedService, suspensionReason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudChannelV1EntitlementChange {\n");
    sb.append("    activationReason: ").append(toIndentedString(activationReason)).append("\n");
    sb.append("    cancellationReason: ").append(toIndentedString(cancellationReason)).append("\n");
    sb.append("    changeType: ").append(toIndentedString(changeType)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    entitlement: ").append(toIndentedString(entitlement)).append("\n");
    sb.append("    offer: ").append(toIndentedString(offer)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    operatorType: ").append(toIndentedString(operatorType)).append("\n");
    sb.append("    otherChangeReason: ").append(toIndentedString(otherChangeReason)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    provisionedService: ").append(toIndentedString(provisionedService)).append("\n");
    sb.append("    suspensionReason: ").append(toIndentedString(suspensionReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activationReason");
    openapiFields.add("cancellationReason");
    openapiFields.add("changeType");
    openapiFields.add("createTime");
    openapiFields.add("entitlement");
    openapiFields.add("offer");
    openapiFields.add("operator");
    openapiFields.add("operatorType");
    openapiFields.add("otherChangeReason");
    openapiFields.add("parameters");
    openapiFields.add("provisionedService");
    openapiFields.add("suspensionReason");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudChannelV1EntitlementChange
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudChannelV1EntitlementChange.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudChannelV1EntitlementChange is not found in the empty JSON string", GoogleCloudChannelV1EntitlementChange.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudChannelV1EntitlementChange.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudChannelV1EntitlementChange` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("activationReason") != null && !jsonObj.get("activationReason").isJsonNull()) && !jsonObj.get("activationReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activationReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activationReason").toString()));
      }
      // validate the optional field `activationReason`
      if (jsonObj.get("activationReason") != null && !jsonObj.get("activationReason").isJsonNull()) {
        ActivationReasonEnum.validateJsonElement(jsonObj.get("activationReason"));
      }
      if ((jsonObj.get("cancellationReason") != null && !jsonObj.get("cancellationReason").isJsonNull()) && !jsonObj.get("cancellationReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cancellationReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cancellationReason").toString()));
      }
      // validate the optional field `cancellationReason`
      if (jsonObj.get("cancellationReason") != null && !jsonObj.get("cancellationReason").isJsonNull()) {
        CancellationReasonEnum.validateJsonElement(jsonObj.get("cancellationReason"));
      }
      if ((jsonObj.get("changeType") != null && !jsonObj.get("changeType").isJsonNull()) && !jsonObj.get("changeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `changeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("changeType").toString()));
      }
      // validate the optional field `changeType`
      if (jsonObj.get("changeType") != null && !jsonObj.get("changeType").isJsonNull()) {
        ChangeTypeEnum.validateJsonElement(jsonObj.get("changeType"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("entitlement") != null && !jsonObj.get("entitlement").isJsonNull()) && !jsonObj.get("entitlement").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entitlement` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entitlement").toString()));
      }
      if ((jsonObj.get("offer") != null && !jsonObj.get("offer").isJsonNull()) && !jsonObj.get("offer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offer").toString()));
      }
      if ((jsonObj.get("operator") != null && !jsonObj.get("operator").isJsonNull()) && !jsonObj.get("operator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operator").toString()));
      }
      if ((jsonObj.get("operatorType") != null && !jsonObj.get("operatorType").isJsonNull()) && !jsonObj.get("operatorType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operatorType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operatorType").toString()));
      }
      // validate the optional field `operatorType`
      if (jsonObj.get("operatorType") != null && !jsonObj.get("operatorType").isJsonNull()) {
        OperatorTypeEnum.validateJsonElement(jsonObj.get("operatorType"));
      }
      if ((jsonObj.get("otherChangeReason") != null && !jsonObj.get("otherChangeReason").isJsonNull()) && !jsonObj.get("otherChangeReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherChangeReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otherChangeReason").toString()));
      }
      if (jsonObj.get("parameters") != null && !jsonObj.get("parameters").isJsonNull()) {
        JsonArray jsonArrayparameters = jsonObj.getAsJsonArray("parameters");
        if (jsonArrayparameters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("parameters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `parameters` to be an array in the JSON string but got `%s`", jsonObj.get("parameters").toString()));
          }

          // validate the optional field `parameters` (array)
          for (int i = 0; i < jsonArrayparameters.size(); i++) {
            GoogleCloudChannelV1Parameter.validateJsonElement(jsonArrayparameters.get(i));
          };
        }
      }
      // validate the optional field `provisionedService`
      if (jsonObj.get("provisionedService") != null && !jsonObj.get("provisionedService").isJsonNull()) {
        GoogleCloudChannelV1ProvisionedService.validateJsonElement(jsonObj.get("provisionedService"));
      }
      if ((jsonObj.get("suspensionReason") != null && !jsonObj.get("suspensionReason").isJsonNull()) && !jsonObj.get("suspensionReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suspensionReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suspensionReason").toString()));
      }
      // validate the optional field `suspensionReason`
      if (jsonObj.get("suspensionReason") != null && !jsonObj.get("suspensionReason").isJsonNull()) {
        SuspensionReasonEnum.validateJsonElement(jsonObj.get("suspensionReason"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudChannelV1EntitlementChange.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudChannelV1EntitlementChange' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudChannelV1EntitlementChange> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudChannelV1EntitlementChange.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudChannelV1EntitlementChange>() {
           @Override
           public void write(JsonWriter out, GoogleCloudChannelV1EntitlementChange value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudChannelV1EntitlementChange read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudChannelV1EntitlementChange given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudChannelV1EntitlementChange
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudChannelV1EntitlementChange
   */
  public static GoogleCloudChannelV1EntitlementChange fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudChannelV1EntitlementChange.class);
  }

  /**
   * Convert an instance of GoogleCloudChannelV1EntitlementChange to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

