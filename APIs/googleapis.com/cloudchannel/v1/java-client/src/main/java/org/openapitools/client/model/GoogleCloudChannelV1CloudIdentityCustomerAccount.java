/*
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Entity representing a Cloud Identity account that may be associated with a Channel Services API partner.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:50.180583-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudChannelV1CloudIdentityCustomerAccount {
  public static final String SERIALIZED_NAME_CUSTOMER_CLOUD_IDENTITY_ID = "customerCloudIdentityId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_CLOUD_IDENTITY_ID)
  private String customerCloudIdentityId;

  public static final String SERIALIZED_NAME_CUSTOMER_NAME = "customerName";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NAME)
  private String customerName;

  public static final String SERIALIZED_NAME_EXISTING = "existing";
  @SerializedName(SERIALIZED_NAME_EXISTING)
  private Boolean existing;

  public static final String SERIALIZED_NAME_OWNED = "owned";
  @SerializedName(SERIALIZED_NAME_OWNED)
  private Boolean owned;

  public GoogleCloudChannelV1CloudIdentityCustomerAccount() {
  }

  public GoogleCloudChannelV1CloudIdentityCustomerAccount customerCloudIdentityId(String customerCloudIdentityId) {
    this.customerCloudIdentityId = customerCloudIdentityId;
    return this;
  }

  /**
   * If existing &#x3D; true, the Cloud Identity ID of the customer.
   * @return customerCloudIdentityId
   */
  @javax.annotation.Nullable
  public String getCustomerCloudIdentityId() {
    return customerCloudIdentityId;
  }

  public void setCustomerCloudIdentityId(String customerCloudIdentityId) {
    this.customerCloudIdentityId = customerCloudIdentityId;
  }


  public GoogleCloudChannelV1CloudIdentityCustomerAccount customerName(String customerName) {
    this.customerName = customerName;
    return this;
  }

  /**
   * If owned &#x3D; true, the name of the customer that owns the Cloud Identity account. Customer_name uses the format: accounts/{account_id}/customers/{customer_id}
   * @return customerName
   */
  @javax.annotation.Nullable
  public String getCustomerName() {
    return customerName;
  }

  public void setCustomerName(String customerName) {
    this.customerName = customerName;
  }


  public GoogleCloudChannelV1CloudIdentityCustomerAccount existing(Boolean existing) {
    this.existing = existing;
    return this;
  }

  /**
   * Returns true if a Cloud Identity account exists for a specific domain.
   * @return existing
   */
  @javax.annotation.Nullable
  public Boolean getExisting() {
    return existing;
  }

  public void setExisting(Boolean existing) {
    this.existing = existing;
  }


  public GoogleCloudChannelV1CloudIdentityCustomerAccount owned(Boolean owned) {
    this.owned = owned;
    return this;
  }

  /**
   * Returns true if the Cloud Identity account is associated with a customer of the Channel Services partner.
   * @return owned
   */
  @javax.annotation.Nullable
  public Boolean getOwned() {
    return owned;
  }

  public void setOwned(Boolean owned) {
    this.owned = owned;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudChannelV1CloudIdentityCustomerAccount googleCloudChannelV1CloudIdentityCustomerAccount = (GoogleCloudChannelV1CloudIdentityCustomerAccount) o;
    return Objects.equals(this.customerCloudIdentityId, googleCloudChannelV1CloudIdentityCustomerAccount.customerCloudIdentityId) &&
        Objects.equals(this.customerName, googleCloudChannelV1CloudIdentityCustomerAccount.customerName) &&
        Objects.equals(this.existing, googleCloudChannelV1CloudIdentityCustomerAccount.existing) &&
        Objects.equals(this.owned, googleCloudChannelV1CloudIdentityCustomerAccount.owned);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerCloudIdentityId, customerName, existing, owned);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudChannelV1CloudIdentityCustomerAccount {\n");
    sb.append("    customerCloudIdentityId: ").append(toIndentedString(customerCloudIdentityId)).append("\n");
    sb.append("    customerName: ").append(toIndentedString(customerName)).append("\n");
    sb.append("    existing: ").append(toIndentedString(existing)).append("\n");
    sb.append("    owned: ").append(toIndentedString(owned)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customerCloudIdentityId");
    openapiFields.add("customerName");
    openapiFields.add("existing");
    openapiFields.add("owned");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudChannelV1CloudIdentityCustomerAccount
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudChannelV1CloudIdentityCustomerAccount.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudChannelV1CloudIdentityCustomerAccount is not found in the empty JSON string", GoogleCloudChannelV1CloudIdentityCustomerAccount.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudChannelV1CloudIdentityCustomerAccount.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudChannelV1CloudIdentityCustomerAccount` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("customerCloudIdentityId") != null && !jsonObj.get("customerCloudIdentityId").isJsonNull()) && !jsonObj.get("customerCloudIdentityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerCloudIdentityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerCloudIdentityId").toString()));
      }
      if ((jsonObj.get("customerName") != null && !jsonObj.get("customerName").isJsonNull()) && !jsonObj.get("customerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudChannelV1CloudIdentityCustomerAccount.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudChannelV1CloudIdentityCustomerAccount' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudChannelV1CloudIdentityCustomerAccount> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudChannelV1CloudIdentityCustomerAccount.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudChannelV1CloudIdentityCustomerAccount>() {
           @Override
           public void write(JsonWriter out, GoogleCloudChannelV1CloudIdentityCustomerAccount value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudChannelV1CloudIdentityCustomerAccount read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudChannelV1CloudIdentityCustomerAccount given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudChannelV1CloudIdentityCustomerAccount
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudChannelV1CloudIdentityCustomerAccount
   */
  public static GoogleCloudChannelV1CloudIdentityCustomerAccount fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudChannelV1CloudIdentityCustomerAccount.class);
  }

  /**
   * Convert an instance of GoogleCloudChannelV1CloudIdentityCustomerAccount to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

