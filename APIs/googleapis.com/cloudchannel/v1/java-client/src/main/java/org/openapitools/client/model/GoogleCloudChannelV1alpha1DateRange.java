/*
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleTypeDate;
import org.openapitools.client.model.GoogleTypeDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A representation of usage or invoice date ranges.
 * @deprecated
 */
@Deprecated
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:50.180583-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudChannelV1alpha1DateRange {
  public static final String SERIALIZED_NAME_INVOICE_END_DATE = "invoiceEndDate";
  @SerializedName(SERIALIZED_NAME_INVOICE_END_DATE)
  private GoogleTypeDate invoiceEndDate;

  public static final String SERIALIZED_NAME_INVOICE_START_DATE = "invoiceStartDate";
  @SerializedName(SERIALIZED_NAME_INVOICE_START_DATE)
  private GoogleTypeDate invoiceStartDate;

  public static final String SERIALIZED_NAME_USAGE_END_DATE_TIME = "usageEndDateTime";
  @SerializedName(SERIALIZED_NAME_USAGE_END_DATE_TIME)
  private GoogleTypeDateTime usageEndDateTime;

  public static final String SERIALIZED_NAME_USAGE_START_DATE_TIME = "usageStartDateTime";
  @SerializedName(SERIALIZED_NAME_USAGE_START_DATE_TIME)
  private GoogleTypeDateTime usageStartDateTime;

  public GoogleCloudChannelV1alpha1DateRange() {
  }

  public GoogleCloudChannelV1alpha1DateRange invoiceEndDate(GoogleTypeDate invoiceEndDate) {
    this.invoiceEndDate = invoiceEndDate;
    return this;
  }

  /**
   * Get invoiceEndDate
   * @return invoiceEndDate
   */
  @javax.annotation.Nullable
  public GoogleTypeDate getInvoiceEndDate() {
    return invoiceEndDate;
  }

  public void setInvoiceEndDate(GoogleTypeDate invoiceEndDate) {
    this.invoiceEndDate = invoiceEndDate;
  }


  public GoogleCloudChannelV1alpha1DateRange invoiceStartDate(GoogleTypeDate invoiceStartDate) {
    this.invoiceStartDate = invoiceStartDate;
    return this;
  }

  /**
   * Get invoiceStartDate
   * @return invoiceStartDate
   */
  @javax.annotation.Nullable
  public GoogleTypeDate getInvoiceStartDate() {
    return invoiceStartDate;
  }

  public void setInvoiceStartDate(GoogleTypeDate invoiceStartDate) {
    this.invoiceStartDate = invoiceStartDate;
  }


  public GoogleCloudChannelV1alpha1DateRange usageEndDateTime(GoogleTypeDateTime usageEndDateTime) {
    this.usageEndDateTime = usageEndDateTime;
    return this;
  }

  /**
   * Get usageEndDateTime
   * @return usageEndDateTime
   */
  @javax.annotation.Nullable
  public GoogleTypeDateTime getUsageEndDateTime() {
    return usageEndDateTime;
  }

  public void setUsageEndDateTime(GoogleTypeDateTime usageEndDateTime) {
    this.usageEndDateTime = usageEndDateTime;
  }


  public GoogleCloudChannelV1alpha1DateRange usageStartDateTime(GoogleTypeDateTime usageStartDateTime) {
    this.usageStartDateTime = usageStartDateTime;
    return this;
  }

  /**
   * Get usageStartDateTime
   * @return usageStartDateTime
   */
  @javax.annotation.Nullable
  public GoogleTypeDateTime getUsageStartDateTime() {
    return usageStartDateTime;
  }

  public void setUsageStartDateTime(GoogleTypeDateTime usageStartDateTime) {
    this.usageStartDateTime = usageStartDateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudChannelV1alpha1DateRange googleCloudChannelV1alpha1DateRange = (GoogleCloudChannelV1alpha1DateRange) o;
    return Objects.equals(this.invoiceEndDate, googleCloudChannelV1alpha1DateRange.invoiceEndDate) &&
        Objects.equals(this.invoiceStartDate, googleCloudChannelV1alpha1DateRange.invoiceStartDate) &&
        Objects.equals(this.usageEndDateTime, googleCloudChannelV1alpha1DateRange.usageEndDateTime) &&
        Objects.equals(this.usageStartDateTime, googleCloudChannelV1alpha1DateRange.usageStartDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceEndDate, invoiceStartDate, usageEndDateTime, usageStartDateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudChannelV1alpha1DateRange {\n");
    sb.append("    invoiceEndDate: ").append(toIndentedString(invoiceEndDate)).append("\n");
    sb.append("    invoiceStartDate: ").append(toIndentedString(invoiceStartDate)).append("\n");
    sb.append("    usageEndDateTime: ").append(toIndentedString(usageEndDateTime)).append("\n");
    sb.append("    usageStartDateTime: ").append(toIndentedString(usageStartDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("invoiceEndDate");
    openapiFields.add("invoiceStartDate");
    openapiFields.add("usageEndDateTime");
    openapiFields.add("usageStartDateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudChannelV1alpha1DateRange
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudChannelV1alpha1DateRange.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudChannelV1alpha1DateRange is not found in the empty JSON string", GoogleCloudChannelV1alpha1DateRange.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudChannelV1alpha1DateRange.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudChannelV1alpha1DateRange` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `invoiceEndDate`
      if (jsonObj.get("invoiceEndDate") != null && !jsonObj.get("invoiceEndDate").isJsonNull()) {
        GoogleTypeDate.validateJsonElement(jsonObj.get("invoiceEndDate"));
      }
      // validate the optional field `invoiceStartDate`
      if (jsonObj.get("invoiceStartDate") != null && !jsonObj.get("invoiceStartDate").isJsonNull()) {
        GoogleTypeDate.validateJsonElement(jsonObj.get("invoiceStartDate"));
      }
      // validate the optional field `usageEndDateTime`
      if (jsonObj.get("usageEndDateTime") != null && !jsonObj.get("usageEndDateTime").isJsonNull()) {
        GoogleTypeDateTime.validateJsonElement(jsonObj.get("usageEndDateTime"));
      }
      // validate the optional field `usageStartDateTime`
      if (jsonObj.get("usageStartDateTime") != null && !jsonObj.get("usageStartDateTime").isJsonNull()) {
        GoogleTypeDateTime.validateJsonElement(jsonObj.get("usageStartDateTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudChannelV1alpha1DateRange.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudChannelV1alpha1DateRange' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudChannelV1alpha1DateRange> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudChannelV1alpha1DateRange.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudChannelV1alpha1DateRange>() {
           @Override
           public void write(JsonWriter out, GoogleCloudChannelV1alpha1DateRange value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudChannelV1alpha1DateRange read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudChannelV1alpha1DateRange given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudChannelV1alpha1DateRange
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudChannelV1alpha1DateRange
   */
  public static GoogleCloudChannelV1alpha1DateRange fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudChannelV1alpha1DateRange.class);
  }

  /**
   * Convert an instance of GoogleCloudChannelV1alpha1DateRange to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

