/*
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudChannelV1Parameter;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for CloudChannelService.ChangeOffer.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:50.180583-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudChannelV1ChangeOfferRequest {
  public static final String SERIALIZED_NAME_BILLING_ACCOUNT = "billingAccount";
  @SerializedName(SERIALIZED_NAME_BILLING_ACCOUNT)
  private String billingAccount;

  public static final String SERIALIZED_NAME_OFFER = "offer";
  @SerializedName(SERIALIZED_NAME_OFFER)
  private String offer;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<GoogleCloudChannelV1Parameter> parameters = new ArrayList<>();

  public static final String SERIALIZED_NAME_PURCHASE_ORDER_ID = "purchaseOrderId";
  @SerializedName(SERIALIZED_NAME_PURCHASE_ORDER_ID)
  private String purchaseOrderId;

  public static final String SERIALIZED_NAME_REQUEST_ID = "requestId";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;

  public GoogleCloudChannelV1ChangeOfferRequest() {
  }

  public GoogleCloudChannelV1ChangeOfferRequest billingAccount(String billingAccount) {
    this.billingAccount = billingAccount;
    return this;
  }

  /**
   * Optional. The billing account resource name that is used to pay for this entitlement when setting up billing on a trial subscription. This field is only relevant for multi-currency accounts. It should be left empty for single currency accounts.
   * @return billingAccount
   */
  @javax.annotation.Nullable
  public String getBillingAccount() {
    return billingAccount;
  }

  public void setBillingAccount(String billingAccount) {
    this.billingAccount = billingAccount;
  }


  public GoogleCloudChannelV1ChangeOfferRequest offer(String offer) {
    this.offer = offer;
    return this;
  }

  /**
   * Required. New Offer. Format: accounts/{account_id}/offers/{offer_id}.
   * @return offer
   */
  @javax.annotation.Nullable
  public String getOffer() {
    return offer;
  }

  public void setOffer(String offer) {
    this.offer = offer;
  }


  public GoogleCloudChannelV1ChangeOfferRequest parameters(List<GoogleCloudChannelV1Parameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public GoogleCloudChannelV1ChangeOfferRequest addParametersItem(GoogleCloudChannelV1Parameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

  /**
   * Optional. Parameters needed to purchase the Offer. To view the available Parameters refer to the Offer.parameter_definitions from the desired offer.
   * @return parameters
   */
  @javax.annotation.Nullable
  public List<GoogleCloudChannelV1Parameter> getParameters() {
    return parameters;
  }

  public void setParameters(List<GoogleCloudChannelV1Parameter> parameters) {
    this.parameters = parameters;
  }


  public GoogleCloudChannelV1ChangeOfferRequest purchaseOrderId(String purchaseOrderId) {
    this.purchaseOrderId = purchaseOrderId;
    return this;
  }

  /**
   * Optional. Purchase order id provided by the reseller.
   * @return purchaseOrderId
   */
  @javax.annotation.Nullable
  public String getPurchaseOrderId() {
    return purchaseOrderId;
  }

  public void setPurchaseOrderId(String purchaseOrderId) {
    this.purchaseOrderId = purchaseOrderId;
  }


  public GoogleCloudChannelV1ChangeOfferRequest requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it&#39;s complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (&#x60;00000000-0000-0000-0000-000000000000&#x60;).
   * @return requestId
   */
  @javax.annotation.Nullable
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudChannelV1ChangeOfferRequest googleCloudChannelV1ChangeOfferRequest = (GoogleCloudChannelV1ChangeOfferRequest) o;
    return Objects.equals(this.billingAccount, googleCloudChannelV1ChangeOfferRequest.billingAccount) &&
        Objects.equals(this.offer, googleCloudChannelV1ChangeOfferRequest.offer) &&
        Objects.equals(this.parameters, googleCloudChannelV1ChangeOfferRequest.parameters) &&
        Objects.equals(this.purchaseOrderId, googleCloudChannelV1ChangeOfferRequest.purchaseOrderId) &&
        Objects.equals(this.requestId, googleCloudChannelV1ChangeOfferRequest.requestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billingAccount, offer, parameters, purchaseOrderId, requestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudChannelV1ChangeOfferRequest {\n");
    sb.append("    billingAccount: ").append(toIndentedString(billingAccount)).append("\n");
    sb.append("    offer: ").append(toIndentedString(offer)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    purchaseOrderId: ").append(toIndentedString(purchaseOrderId)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("billingAccount");
    openapiFields.add("offer");
    openapiFields.add("parameters");
    openapiFields.add("purchaseOrderId");
    openapiFields.add("requestId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudChannelV1ChangeOfferRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudChannelV1ChangeOfferRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudChannelV1ChangeOfferRequest is not found in the empty JSON string", GoogleCloudChannelV1ChangeOfferRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudChannelV1ChangeOfferRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudChannelV1ChangeOfferRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("billingAccount") != null && !jsonObj.get("billingAccount").isJsonNull()) && !jsonObj.get("billingAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingAccount").toString()));
      }
      if ((jsonObj.get("offer") != null && !jsonObj.get("offer").isJsonNull()) && !jsonObj.get("offer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offer").toString()));
      }
      if (jsonObj.get("parameters") != null && !jsonObj.get("parameters").isJsonNull()) {
        JsonArray jsonArrayparameters = jsonObj.getAsJsonArray("parameters");
        if (jsonArrayparameters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("parameters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `parameters` to be an array in the JSON string but got `%s`", jsonObj.get("parameters").toString()));
          }

          // validate the optional field `parameters` (array)
          for (int i = 0; i < jsonArrayparameters.size(); i++) {
            GoogleCloudChannelV1Parameter.validateJsonElement(jsonArrayparameters.get(i));
          };
        }
      }
      if ((jsonObj.get("purchaseOrderId") != null && !jsonObj.get("purchaseOrderId").isJsonNull()) && !jsonObj.get("purchaseOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchaseOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchaseOrderId").toString()));
      }
      if ((jsonObj.get("requestId") != null && !jsonObj.get("requestId").isJsonNull()) && !jsonObj.get("requestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudChannelV1ChangeOfferRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudChannelV1ChangeOfferRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudChannelV1ChangeOfferRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudChannelV1ChangeOfferRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudChannelV1ChangeOfferRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudChannelV1ChangeOfferRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudChannelV1ChangeOfferRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudChannelV1ChangeOfferRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudChannelV1ChangeOfferRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudChannelV1ChangeOfferRequest
   */
  public static GoogleCloudChannelV1ChangeOfferRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudChannelV1ChangeOfferRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudChannelV1ChangeOfferRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

