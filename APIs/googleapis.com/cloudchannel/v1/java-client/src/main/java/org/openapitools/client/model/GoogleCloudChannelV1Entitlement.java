/*
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudChannelV1AssociationInfo;
import org.openapitools.client.model.GoogleCloudChannelV1CommitmentSettings;
import org.openapitools.client.model.GoogleCloudChannelV1Parameter;
import org.openapitools.client.model.GoogleCloudChannelV1ProvisionedService;
import org.openapitools.client.model.GoogleCloudChannelV1TrialSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An entitlement is a representation of a customer&#39;s ability to use a service.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:50.180583-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudChannelV1Entitlement {
  public static final String SERIALIZED_NAME_ASSOCIATION_INFO = "associationInfo";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_INFO)
  private GoogleCloudChannelV1AssociationInfo associationInfo;

  public static final String SERIALIZED_NAME_BILLING_ACCOUNT = "billingAccount";
  @SerializedName(SERIALIZED_NAME_BILLING_ACCOUNT)
  private String billingAccount;

  public static final String SERIALIZED_NAME_COMMITMENT_SETTINGS = "commitmentSettings";
  @SerializedName(SERIALIZED_NAME_COMMITMENT_SETTINGS)
  private GoogleCloudChannelV1CommitmentSettings commitmentSettings;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OFFER = "offer";
  @SerializedName(SERIALIZED_NAME_OFFER)
  private String offer;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<GoogleCloudChannelV1Parameter> parameters = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROVISIONED_SERVICE = "provisionedService";
  @SerializedName(SERIALIZED_NAME_PROVISIONED_SERVICE)
  private GoogleCloudChannelV1ProvisionedService provisionedService;

  /**
   * Output only. Current provisioning state of the entitlement.
   */
  @JsonAdapter(ProvisioningStateEnum.Adapter.class)
  public enum ProvisioningStateEnum {
    PROVISIONING_STATE_UNSPECIFIED("PROVISIONING_STATE_UNSPECIFIED"),
    
    ACTIVE("ACTIVE"),
    
    SUSPENDED("SUSPENDED");

    private String value;

    ProvisioningStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProvisioningStateEnum fromValue(String value) {
      for (ProvisioningStateEnum b : ProvisioningStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProvisioningStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProvisioningStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProvisioningStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProvisioningStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProvisioningStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private ProvisioningStateEnum provisioningState;

  public static final String SERIALIZED_NAME_PURCHASE_ORDER_ID = "purchaseOrderId";
  @SerializedName(SERIALIZED_NAME_PURCHASE_ORDER_ID)
  private String purchaseOrderId;

  /**
   * Gets or Sets suspensionReasons
   */
  @JsonAdapter(SuspensionReasonsEnum.Adapter.class)
  public enum SuspensionReasonsEnum {
    SUSPENSION_REASON_UNSPECIFIED("SUSPENSION_REASON_UNSPECIFIED"),
    
    RESELLER_INITIATED("RESELLER_INITIATED"),
    
    TRIAL_ENDED("TRIAL_ENDED"),
    
    RENEWAL_WITH_TYPE_CANCEL("RENEWAL_WITH_TYPE_CANCEL"),
    
    PENDING_TOS_ACCEPTANCE("PENDING_TOS_ACCEPTANCE"),
    
    OTHER("OTHER");

    private String value;

    SuspensionReasonsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SuspensionReasonsEnum fromValue(String value) {
      for (SuspensionReasonsEnum b : SuspensionReasonsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SuspensionReasonsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SuspensionReasonsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SuspensionReasonsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SuspensionReasonsEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SuspensionReasonsEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SUSPENSION_REASONS = "suspensionReasons";
  @SerializedName(SERIALIZED_NAME_SUSPENSION_REASONS)
  private List<SuspensionReasonsEnum> suspensionReasons = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRIAL_SETTINGS = "trialSettings";
  @SerializedName(SERIALIZED_NAME_TRIAL_SETTINGS)
  private GoogleCloudChannelV1TrialSettings trialSettings;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudChannelV1Entitlement() {
  }

  public GoogleCloudChannelV1Entitlement(
     String createTime, 
     String name, 
     ProvisioningStateEnum provisioningState, 
     List<SuspensionReasonsEnum> suspensionReasons, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.name = name;
    this.provisioningState = provisioningState;
    this.suspensionReasons = suspensionReasons;
    this.updateTime = updateTime;
  }

  public GoogleCloudChannelV1Entitlement associationInfo(GoogleCloudChannelV1AssociationInfo associationInfo) {
    this.associationInfo = associationInfo;
    return this;
  }

  /**
   * Get associationInfo
   * @return associationInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudChannelV1AssociationInfo getAssociationInfo() {
    return associationInfo;
  }

  public void setAssociationInfo(GoogleCloudChannelV1AssociationInfo associationInfo) {
    this.associationInfo = associationInfo;
  }


  public GoogleCloudChannelV1Entitlement billingAccount(String billingAccount) {
    this.billingAccount = billingAccount;
    return this;
  }

  /**
   * Optional. The billing account resource name that is used to pay for this entitlement.
   * @return billingAccount
   */
  @javax.annotation.Nullable
  public String getBillingAccount() {
    return billingAccount;
  }

  public void setBillingAccount(String billingAccount) {
    this.billingAccount = billingAccount;
  }


  public GoogleCloudChannelV1Entitlement commitmentSettings(GoogleCloudChannelV1CommitmentSettings commitmentSettings) {
    this.commitmentSettings = commitmentSettings;
    return this;
  }

  /**
   * Get commitmentSettings
   * @return commitmentSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudChannelV1CommitmentSettings getCommitmentSettings() {
    return commitmentSettings;
  }

  public void setCommitmentSettings(GoogleCloudChannelV1CommitmentSettings commitmentSettings) {
    this.commitmentSettings = commitmentSettings;
  }


  /**
   * Output only. The time at which the entitlement is created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  /**
   * Output only. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudChannelV1Entitlement offer(String offer) {
    this.offer = offer;
    return this;
  }

  /**
   * Required. The offer resource name for which the entitlement is to be created. Takes the form: accounts/{account_id}/offers/{offer_id}.
   * @return offer
   */
  @javax.annotation.Nullable
  public String getOffer() {
    return offer;
  }

  public void setOffer(String offer) {
    this.offer = offer;
  }


  public GoogleCloudChannelV1Entitlement parameters(List<GoogleCloudChannelV1Parameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public GoogleCloudChannelV1Entitlement addParametersItem(GoogleCloudChannelV1Parameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

  /**
   * Extended entitlement parameters. When creating an entitlement, valid parameter names and values are defined in the Offer.parameter_definitions. For Google Workspace, the following Parameters may be accepted as input: - max_units: The maximum assignable units for a flexible offer OR - num_units: The total commitment for commitment-based offers The response may additionally include the following output-only Parameters: - assigned_units: The number of licenses assigned to users. For Google Cloud billing subaccounts, the following Parameter may be accepted as input: - display_name: The display name of the billing subaccount.
   * @return parameters
   */
  @javax.annotation.Nullable
  public List<GoogleCloudChannelV1Parameter> getParameters() {
    return parameters;
  }

  public void setParameters(List<GoogleCloudChannelV1Parameter> parameters) {
    this.parameters = parameters;
  }


  public GoogleCloudChannelV1Entitlement provisionedService(GoogleCloudChannelV1ProvisionedService provisionedService) {
    this.provisionedService = provisionedService;
    return this;
  }

  /**
   * Get provisionedService
   * @return provisionedService
   */
  @javax.annotation.Nullable
  public GoogleCloudChannelV1ProvisionedService getProvisionedService() {
    return provisionedService;
  }

  public void setProvisionedService(GoogleCloudChannelV1ProvisionedService provisionedService) {
    this.provisionedService = provisionedService;
  }


  /**
   * Output only. Current provisioning state of the entitlement.
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public ProvisioningStateEnum getProvisioningState() {
    return provisioningState;
  }



  public GoogleCloudChannelV1Entitlement purchaseOrderId(String purchaseOrderId) {
    this.purchaseOrderId = purchaseOrderId;
    return this;
  }

  /**
   * Optional. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given, it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters. This is only supported for Google Workspace entitlements.
   * @return purchaseOrderId
   */
  @javax.annotation.Nullable
  public String getPurchaseOrderId() {
    return purchaseOrderId;
  }

  public void setPurchaseOrderId(String purchaseOrderId) {
    this.purchaseOrderId = purchaseOrderId;
  }


  /**
   * Output only. Enumerable of all current suspension reasons for an entitlement.
   * @return suspensionReasons
   */
  @javax.annotation.Nullable
  public List<SuspensionReasonsEnum> getSuspensionReasons() {
    return suspensionReasons;
  }



  public GoogleCloudChannelV1Entitlement trialSettings(GoogleCloudChannelV1TrialSettings trialSettings) {
    this.trialSettings = trialSettings;
    return this;
  }

  /**
   * Get trialSettings
   * @return trialSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudChannelV1TrialSettings getTrialSettings() {
    return trialSettings;
  }

  public void setTrialSettings(GoogleCloudChannelV1TrialSettings trialSettings) {
    this.trialSettings = trialSettings;
  }


  /**
   * Output only. The time at which the entitlement is updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudChannelV1Entitlement googleCloudChannelV1Entitlement = (GoogleCloudChannelV1Entitlement) o;
    return Objects.equals(this.associationInfo, googleCloudChannelV1Entitlement.associationInfo) &&
        Objects.equals(this.billingAccount, googleCloudChannelV1Entitlement.billingAccount) &&
        Objects.equals(this.commitmentSettings, googleCloudChannelV1Entitlement.commitmentSettings) &&
        Objects.equals(this.createTime, googleCloudChannelV1Entitlement.createTime) &&
        Objects.equals(this.name, googleCloudChannelV1Entitlement.name) &&
        Objects.equals(this.offer, googleCloudChannelV1Entitlement.offer) &&
        Objects.equals(this.parameters, googleCloudChannelV1Entitlement.parameters) &&
        Objects.equals(this.provisionedService, googleCloudChannelV1Entitlement.provisionedService) &&
        Objects.equals(this.provisioningState, googleCloudChannelV1Entitlement.provisioningState) &&
        Objects.equals(this.purchaseOrderId, googleCloudChannelV1Entitlement.purchaseOrderId) &&
        Objects.equals(this.suspensionReasons, googleCloudChannelV1Entitlement.suspensionReasons) &&
        Objects.equals(this.trialSettings, googleCloudChannelV1Entitlement.trialSettings) &&
        Objects.equals(this.updateTime, googleCloudChannelV1Entitlement.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(associationInfo, billingAccount, commitmentSettings, createTime, name, offer, parameters, provisionedService, provisioningState, purchaseOrderId, suspensionReasons, trialSettings, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudChannelV1Entitlement {\n");
    sb.append("    associationInfo: ").append(toIndentedString(associationInfo)).append("\n");
    sb.append("    billingAccount: ").append(toIndentedString(billingAccount)).append("\n");
    sb.append("    commitmentSettings: ").append(toIndentedString(commitmentSettings)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    offer: ").append(toIndentedString(offer)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    provisionedService: ").append(toIndentedString(provisionedService)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    purchaseOrderId: ").append(toIndentedString(purchaseOrderId)).append("\n");
    sb.append("    suspensionReasons: ").append(toIndentedString(suspensionReasons)).append("\n");
    sb.append("    trialSettings: ").append(toIndentedString(trialSettings)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("associationInfo");
    openapiFields.add("billingAccount");
    openapiFields.add("commitmentSettings");
    openapiFields.add("createTime");
    openapiFields.add("name");
    openapiFields.add("offer");
    openapiFields.add("parameters");
    openapiFields.add("provisionedService");
    openapiFields.add("provisioningState");
    openapiFields.add("purchaseOrderId");
    openapiFields.add("suspensionReasons");
    openapiFields.add("trialSettings");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudChannelV1Entitlement
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudChannelV1Entitlement.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudChannelV1Entitlement is not found in the empty JSON string", GoogleCloudChannelV1Entitlement.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudChannelV1Entitlement.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudChannelV1Entitlement` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `associationInfo`
      if (jsonObj.get("associationInfo") != null && !jsonObj.get("associationInfo").isJsonNull()) {
        GoogleCloudChannelV1AssociationInfo.validateJsonElement(jsonObj.get("associationInfo"));
      }
      if ((jsonObj.get("billingAccount") != null && !jsonObj.get("billingAccount").isJsonNull()) && !jsonObj.get("billingAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingAccount").toString()));
      }
      // validate the optional field `commitmentSettings`
      if (jsonObj.get("commitmentSettings") != null && !jsonObj.get("commitmentSettings").isJsonNull()) {
        GoogleCloudChannelV1CommitmentSettings.validateJsonElement(jsonObj.get("commitmentSettings"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("offer") != null && !jsonObj.get("offer").isJsonNull()) && !jsonObj.get("offer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offer").toString()));
      }
      if (jsonObj.get("parameters") != null && !jsonObj.get("parameters").isJsonNull()) {
        JsonArray jsonArrayparameters = jsonObj.getAsJsonArray("parameters");
        if (jsonArrayparameters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("parameters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `parameters` to be an array in the JSON string but got `%s`", jsonObj.get("parameters").toString()));
          }

          // validate the optional field `parameters` (array)
          for (int i = 0; i < jsonArrayparameters.size(); i++) {
            GoogleCloudChannelV1Parameter.validateJsonElement(jsonArrayparameters.get(i));
          };
        }
      }
      // validate the optional field `provisionedService`
      if (jsonObj.get("provisionedService") != null && !jsonObj.get("provisionedService").isJsonNull()) {
        GoogleCloudChannelV1ProvisionedService.validateJsonElement(jsonObj.get("provisionedService"));
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      // validate the optional field `provisioningState`
      if (jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) {
        ProvisioningStateEnum.validateJsonElement(jsonObj.get("provisioningState"));
      }
      if ((jsonObj.get("purchaseOrderId") != null && !jsonObj.get("purchaseOrderId").isJsonNull()) && !jsonObj.get("purchaseOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchaseOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchaseOrderId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("suspensionReasons") != null && !jsonObj.get("suspensionReasons").isJsonNull() && !jsonObj.get("suspensionReasons").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `suspensionReasons` to be an array in the JSON string but got `%s`", jsonObj.get("suspensionReasons").toString()));
      }
      // validate the optional field `trialSettings`
      if (jsonObj.get("trialSettings") != null && !jsonObj.get("trialSettings").isJsonNull()) {
        GoogleCloudChannelV1TrialSettings.validateJsonElement(jsonObj.get("trialSettings"));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudChannelV1Entitlement.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudChannelV1Entitlement' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudChannelV1Entitlement> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudChannelV1Entitlement.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudChannelV1Entitlement>() {
           @Override
           public void write(JsonWriter out, GoogleCloudChannelV1Entitlement value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudChannelV1Entitlement read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudChannelV1Entitlement given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudChannelV1Entitlement
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudChannelV1Entitlement
   */
  public static GoogleCloudChannelV1Entitlement fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudChannelV1Entitlement.class);
  }

  /**
   * Convert an instance of GoogleCloudChannelV1Entitlement to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

