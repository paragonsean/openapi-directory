/*
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleTypeDate;
import org.openapitools.client.model.GoogleTypeDateTime;
import org.openapitools.client.model.GoogleTypeDecimal;
import org.openapitools.client.model.GoogleTypeMoney;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A single report value.
 * @deprecated
 */
@Deprecated
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:50.180583-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudChannelV1ReportValue {
  public static final String SERIALIZED_NAME_DATE_TIME_VALUE = "dateTimeValue";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_VALUE)
  private GoogleTypeDateTime dateTimeValue;

  public static final String SERIALIZED_NAME_DATE_VALUE = "dateValue";
  @SerializedName(SERIALIZED_NAME_DATE_VALUE)
  private GoogleTypeDate dateValue;

  public static final String SERIALIZED_NAME_DECIMAL_VALUE = "decimalValue";
  @SerializedName(SERIALIZED_NAME_DECIMAL_VALUE)
  private GoogleTypeDecimal decimalValue;

  public static final String SERIALIZED_NAME_INT_VALUE = "intValue";
  @SerializedName(SERIALIZED_NAME_INT_VALUE)
  private String intValue;

  public static final String SERIALIZED_NAME_MONEY_VALUE = "moneyValue";
  @SerializedName(SERIALIZED_NAME_MONEY_VALUE)
  private GoogleTypeMoney moneyValue;

  public static final String SERIALIZED_NAME_STRING_VALUE = "stringValue";
  @SerializedName(SERIALIZED_NAME_STRING_VALUE)
  private String stringValue;

  public GoogleCloudChannelV1ReportValue() {
  }

  public GoogleCloudChannelV1ReportValue dateTimeValue(GoogleTypeDateTime dateTimeValue) {
    this.dateTimeValue = dateTimeValue;
    return this;
  }

  /**
   * Get dateTimeValue
   * @return dateTimeValue
   */
  @javax.annotation.Nullable
  public GoogleTypeDateTime getDateTimeValue() {
    return dateTimeValue;
  }

  public void setDateTimeValue(GoogleTypeDateTime dateTimeValue) {
    this.dateTimeValue = dateTimeValue;
  }


  public GoogleCloudChannelV1ReportValue dateValue(GoogleTypeDate dateValue) {
    this.dateValue = dateValue;
    return this;
  }

  /**
   * Get dateValue
   * @return dateValue
   */
  @javax.annotation.Nullable
  public GoogleTypeDate getDateValue() {
    return dateValue;
  }

  public void setDateValue(GoogleTypeDate dateValue) {
    this.dateValue = dateValue;
  }


  public GoogleCloudChannelV1ReportValue decimalValue(GoogleTypeDecimal decimalValue) {
    this.decimalValue = decimalValue;
    return this;
  }

  /**
   * Get decimalValue
   * @return decimalValue
   */
  @javax.annotation.Nullable
  public GoogleTypeDecimal getDecimalValue() {
    return decimalValue;
  }

  public void setDecimalValue(GoogleTypeDecimal decimalValue) {
    this.decimalValue = decimalValue;
  }


  public GoogleCloudChannelV1ReportValue intValue(String intValue) {
    this.intValue = intValue;
    return this;
  }

  /**
   * A value of type &#x60;int&#x60;.
   * @return intValue
   */
  @javax.annotation.Nullable
  public String getIntValue() {
    return intValue;
  }

  public void setIntValue(String intValue) {
    this.intValue = intValue;
  }


  public GoogleCloudChannelV1ReportValue moneyValue(GoogleTypeMoney moneyValue) {
    this.moneyValue = moneyValue;
    return this;
  }

  /**
   * Get moneyValue
   * @return moneyValue
   */
  @javax.annotation.Nullable
  public GoogleTypeMoney getMoneyValue() {
    return moneyValue;
  }

  public void setMoneyValue(GoogleTypeMoney moneyValue) {
    this.moneyValue = moneyValue;
  }


  public GoogleCloudChannelV1ReportValue stringValue(String stringValue) {
    this.stringValue = stringValue;
    return this;
  }

  /**
   * A value of type &#x60;string&#x60;.
   * @return stringValue
   */
  @javax.annotation.Nullable
  public String getStringValue() {
    return stringValue;
  }

  public void setStringValue(String stringValue) {
    this.stringValue = stringValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudChannelV1ReportValue googleCloudChannelV1ReportValue = (GoogleCloudChannelV1ReportValue) o;
    return Objects.equals(this.dateTimeValue, googleCloudChannelV1ReportValue.dateTimeValue) &&
        Objects.equals(this.dateValue, googleCloudChannelV1ReportValue.dateValue) &&
        Objects.equals(this.decimalValue, googleCloudChannelV1ReportValue.decimalValue) &&
        Objects.equals(this.intValue, googleCloudChannelV1ReportValue.intValue) &&
        Objects.equals(this.moneyValue, googleCloudChannelV1ReportValue.moneyValue) &&
        Objects.equals(this.stringValue, googleCloudChannelV1ReportValue.stringValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateTimeValue, dateValue, decimalValue, intValue, moneyValue, stringValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudChannelV1ReportValue {\n");
    sb.append("    dateTimeValue: ").append(toIndentedString(dateTimeValue)).append("\n");
    sb.append("    dateValue: ").append(toIndentedString(dateValue)).append("\n");
    sb.append("    decimalValue: ").append(toIndentedString(decimalValue)).append("\n");
    sb.append("    intValue: ").append(toIndentedString(intValue)).append("\n");
    sb.append("    moneyValue: ").append(toIndentedString(moneyValue)).append("\n");
    sb.append("    stringValue: ").append(toIndentedString(stringValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dateTimeValue");
    openapiFields.add("dateValue");
    openapiFields.add("decimalValue");
    openapiFields.add("intValue");
    openapiFields.add("moneyValue");
    openapiFields.add("stringValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudChannelV1ReportValue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudChannelV1ReportValue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudChannelV1ReportValue is not found in the empty JSON string", GoogleCloudChannelV1ReportValue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudChannelV1ReportValue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudChannelV1ReportValue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `dateTimeValue`
      if (jsonObj.get("dateTimeValue") != null && !jsonObj.get("dateTimeValue").isJsonNull()) {
        GoogleTypeDateTime.validateJsonElement(jsonObj.get("dateTimeValue"));
      }
      // validate the optional field `dateValue`
      if (jsonObj.get("dateValue") != null && !jsonObj.get("dateValue").isJsonNull()) {
        GoogleTypeDate.validateJsonElement(jsonObj.get("dateValue"));
      }
      // validate the optional field `decimalValue`
      if (jsonObj.get("decimalValue") != null && !jsonObj.get("decimalValue").isJsonNull()) {
        GoogleTypeDecimal.validateJsonElement(jsonObj.get("decimalValue"));
      }
      if ((jsonObj.get("intValue") != null && !jsonObj.get("intValue").isJsonNull()) && !jsonObj.get("intValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intValue").toString()));
      }
      // validate the optional field `moneyValue`
      if (jsonObj.get("moneyValue") != null && !jsonObj.get("moneyValue").isJsonNull()) {
        GoogleTypeMoney.validateJsonElement(jsonObj.get("moneyValue"));
      }
      if ((jsonObj.get("stringValue") != null && !jsonObj.get("stringValue").isJsonNull()) && !jsonObj.get("stringValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stringValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stringValue").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudChannelV1ReportValue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudChannelV1ReportValue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudChannelV1ReportValue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudChannelV1ReportValue.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudChannelV1ReportValue>() {
           @Override
           public void write(JsonWriter out, GoogleCloudChannelV1ReportValue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudChannelV1ReportValue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudChannelV1ReportValue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudChannelV1ReportValue
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudChannelV1ReportValue
   */
  public static GoogleCloudChannelV1ReportValue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudChannelV1ReportValue.class);
  }

  /**
   * Convert an instance of GoogleCloudChannelV1ReportValue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

