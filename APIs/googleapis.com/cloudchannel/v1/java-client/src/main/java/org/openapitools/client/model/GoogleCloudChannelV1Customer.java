/*
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudChannelV1CloudIdentityInfo;
import org.openapitools.client.model.GoogleCloudChannelV1ContactInfo;
import org.openapitools.client.model.GoogleTypePostalAddress;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Entity representing a customer of a reseller or distributor.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:50.180583-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudChannelV1Customer {
  public static final String SERIALIZED_NAME_ALTERNATE_EMAIL = "alternateEmail";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_EMAIL)
  private String alternateEmail;

  public static final String SERIALIZED_NAME_CHANNEL_PARTNER_ID = "channelPartnerId";
  @SerializedName(SERIALIZED_NAME_CHANNEL_PARTNER_ID)
  private String channelPartnerId;

  public static final String SERIALIZED_NAME_CLOUD_IDENTITY_ID = "cloudIdentityId";
  @SerializedName(SERIALIZED_NAME_CLOUD_IDENTITY_ID)
  private String cloudIdentityId;

  public static final String SERIALIZED_NAME_CLOUD_IDENTITY_INFO = "cloudIdentityInfo";
  @SerializedName(SERIALIZED_NAME_CLOUD_IDENTITY_INFO)
  private GoogleCloudChannelV1CloudIdentityInfo cloudIdentityInfo;

  public static final String SERIALIZED_NAME_CORRELATION_ID = "correlationId";
  @SerializedName(SERIALIZED_NAME_CORRELATION_ID)
  private String correlationId;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ORG_DISPLAY_NAME = "orgDisplayName";
  @SerializedName(SERIALIZED_NAME_ORG_DISPLAY_NAME)
  private String orgDisplayName;

  public static final String SERIALIZED_NAME_ORG_POSTAL_ADDRESS = "orgPostalAddress";
  @SerializedName(SERIALIZED_NAME_ORG_POSTAL_ADDRESS)
  private GoogleTypePostalAddress orgPostalAddress;

  public static final String SERIALIZED_NAME_PRIMARY_CONTACT_INFO = "primaryContactInfo";
  @SerializedName(SERIALIZED_NAME_PRIMARY_CONTACT_INFO)
  private GoogleCloudChannelV1ContactInfo primaryContactInfo;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudChannelV1Customer() {
  }

  public GoogleCloudChannelV1Customer(
     String cloudIdentityId, 
     String createTime, 
     String name, 
     String updateTime
  ) {
    this();
    this.cloudIdentityId = cloudIdentityId;
    this.createTime = createTime;
    this.name = name;
    this.updateTime = updateTime;
  }

  public GoogleCloudChannelV1Customer alternateEmail(String alternateEmail) {
    this.alternateEmail = alternateEmail;
    return this;
  }

  /**
   * Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
   * @return alternateEmail
   */
  @javax.annotation.Nullable
  public String getAlternateEmail() {
    return alternateEmail;
  }

  public void setAlternateEmail(String alternateEmail) {
    this.alternateEmail = alternateEmail;
  }


  public GoogleCloudChannelV1Customer channelPartnerId(String channelPartnerId) {
    this.channelPartnerId = channelPartnerId;
    return this;
  }

  /**
   * Cloud Identity ID of the customer&#39;s channel partner. Populated only if a channel partner exists for this customer.
   * @return channelPartnerId
   */
  @javax.annotation.Nullable
  public String getChannelPartnerId() {
    return channelPartnerId;
  }

  public void setChannelPartnerId(String channelPartnerId) {
    this.channelPartnerId = channelPartnerId;
  }


  /**
   * Output only. The customer&#39;s Cloud Identity ID if the customer has a Cloud Identity resource.
   * @return cloudIdentityId
   */
  @javax.annotation.Nullable
  public String getCloudIdentityId() {
    return cloudIdentityId;
  }



  public GoogleCloudChannelV1Customer cloudIdentityInfo(GoogleCloudChannelV1CloudIdentityInfo cloudIdentityInfo) {
    this.cloudIdentityInfo = cloudIdentityInfo;
    return this;
  }

  /**
   * Get cloudIdentityInfo
   * @return cloudIdentityInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudChannelV1CloudIdentityInfo getCloudIdentityInfo() {
    return cloudIdentityInfo;
  }

  public void setCloudIdentityInfo(GoogleCloudChannelV1CloudIdentityInfo cloudIdentityInfo) {
    this.cloudIdentityInfo = cloudIdentityInfo;
  }


  public GoogleCloudChannelV1Customer correlationId(String correlationId) {
    this.correlationId = correlationId;
    return this;
  }

  /**
   * Optional. External CRM ID for the customer. Populated only if a CRM ID exists for this customer.
   * @return correlationId
   */
  @javax.annotation.Nullable
  public String getCorrelationId() {
    return correlationId;
  }

  public void setCorrelationId(String correlationId) {
    this.correlationId = correlationId;
  }


  /**
   * Output only. Time when the customer was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudChannelV1Customer domain(String domain) {
    this.domain = domain;
    return this;
  }

  /**
   * Required. The customer&#39;s primary domain. Must match the primary contact email&#39;s domain.
   * @return domain
   */
  @javax.annotation.Nullable
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }


  public GoogleCloudChannelV1Customer languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Optional. The BCP-47 language code, such as \&quot;en-US\&quot; or \&quot;sr-Latn\&quot;. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  /**
   * Output only. Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudChannelV1Customer orgDisplayName(String orgDisplayName) {
    this.orgDisplayName = orgDisplayName;
    return this;
  }

  /**
   * Required. Name of the organization that the customer entity represents.
   * @return orgDisplayName
   */
  @javax.annotation.Nullable
  public String getOrgDisplayName() {
    return orgDisplayName;
  }

  public void setOrgDisplayName(String orgDisplayName) {
    this.orgDisplayName = orgDisplayName;
  }


  public GoogleCloudChannelV1Customer orgPostalAddress(GoogleTypePostalAddress orgPostalAddress) {
    this.orgPostalAddress = orgPostalAddress;
    return this;
  }

  /**
   * Get orgPostalAddress
   * @return orgPostalAddress
   */
  @javax.annotation.Nullable
  public GoogleTypePostalAddress getOrgPostalAddress() {
    return orgPostalAddress;
  }

  public void setOrgPostalAddress(GoogleTypePostalAddress orgPostalAddress) {
    this.orgPostalAddress = orgPostalAddress;
  }


  public GoogleCloudChannelV1Customer primaryContactInfo(GoogleCloudChannelV1ContactInfo primaryContactInfo) {
    this.primaryContactInfo = primaryContactInfo;
    return this;
  }

  /**
   * Get primaryContactInfo
   * @return primaryContactInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudChannelV1ContactInfo getPrimaryContactInfo() {
    return primaryContactInfo;
  }

  public void setPrimaryContactInfo(GoogleCloudChannelV1ContactInfo primaryContactInfo) {
    this.primaryContactInfo = primaryContactInfo;
  }


  /**
   * Output only. Time when the customer was updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudChannelV1Customer googleCloudChannelV1Customer = (GoogleCloudChannelV1Customer) o;
    return Objects.equals(this.alternateEmail, googleCloudChannelV1Customer.alternateEmail) &&
        Objects.equals(this.channelPartnerId, googleCloudChannelV1Customer.channelPartnerId) &&
        Objects.equals(this.cloudIdentityId, googleCloudChannelV1Customer.cloudIdentityId) &&
        Objects.equals(this.cloudIdentityInfo, googleCloudChannelV1Customer.cloudIdentityInfo) &&
        Objects.equals(this.correlationId, googleCloudChannelV1Customer.correlationId) &&
        Objects.equals(this.createTime, googleCloudChannelV1Customer.createTime) &&
        Objects.equals(this.domain, googleCloudChannelV1Customer.domain) &&
        Objects.equals(this.languageCode, googleCloudChannelV1Customer.languageCode) &&
        Objects.equals(this.name, googleCloudChannelV1Customer.name) &&
        Objects.equals(this.orgDisplayName, googleCloudChannelV1Customer.orgDisplayName) &&
        Objects.equals(this.orgPostalAddress, googleCloudChannelV1Customer.orgPostalAddress) &&
        Objects.equals(this.primaryContactInfo, googleCloudChannelV1Customer.primaryContactInfo) &&
        Objects.equals(this.updateTime, googleCloudChannelV1Customer.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alternateEmail, channelPartnerId, cloudIdentityId, cloudIdentityInfo, correlationId, createTime, domain, languageCode, name, orgDisplayName, orgPostalAddress, primaryContactInfo, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudChannelV1Customer {\n");
    sb.append("    alternateEmail: ").append(toIndentedString(alternateEmail)).append("\n");
    sb.append("    channelPartnerId: ").append(toIndentedString(channelPartnerId)).append("\n");
    sb.append("    cloudIdentityId: ").append(toIndentedString(cloudIdentityId)).append("\n");
    sb.append("    cloudIdentityInfo: ").append(toIndentedString(cloudIdentityInfo)).append("\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    orgDisplayName: ").append(toIndentedString(orgDisplayName)).append("\n");
    sb.append("    orgPostalAddress: ").append(toIndentedString(orgPostalAddress)).append("\n");
    sb.append("    primaryContactInfo: ").append(toIndentedString(primaryContactInfo)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alternateEmail");
    openapiFields.add("channelPartnerId");
    openapiFields.add("cloudIdentityId");
    openapiFields.add("cloudIdentityInfo");
    openapiFields.add("correlationId");
    openapiFields.add("createTime");
    openapiFields.add("domain");
    openapiFields.add("languageCode");
    openapiFields.add("name");
    openapiFields.add("orgDisplayName");
    openapiFields.add("orgPostalAddress");
    openapiFields.add("primaryContactInfo");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudChannelV1Customer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudChannelV1Customer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudChannelV1Customer is not found in the empty JSON string", GoogleCloudChannelV1Customer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudChannelV1Customer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudChannelV1Customer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("alternateEmail") != null && !jsonObj.get("alternateEmail").isJsonNull()) && !jsonObj.get("alternateEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alternateEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alternateEmail").toString()));
      }
      if ((jsonObj.get("channelPartnerId") != null && !jsonObj.get("channelPartnerId").isJsonNull()) && !jsonObj.get("channelPartnerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channelPartnerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channelPartnerId").toString()));
      }
      if ((jsonObj.get("cloudIdentityId") != null && !jsonObj.get("cloudIdentityId").isJsonNull()) && !jsonObj.get("cloudIdentityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cloudIdentityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cloudIdentityId").toString()));
      }
      // validate the optional field `cloudIdentityInfo`
      if (jsonObj.get("cloudIdentityInfo") != null && !jsonObj.get("cloudIdentityInfo").isJsonNull()) {
        GoogleCloudChannelV1CloudIdentityInfo.validateJsonElement(jsonObj.get("cloudIdentityInfo"));
      }
      if ((jsonObj.get("correlationId") != null && !jsonObj.get("correlationId").isJsonNull()) && !jsonObj.get("correlationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `correlationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("correlationId").toString()));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("domain") != null && !jsonObj.get("domain").isJsonNull()) && !jsonObj.get("domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain").toString()));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("orgDisplayName") != null && !jsonObj.get("orgDisplayName").isJsonNull()) && !jsonObj.get("orgDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgDisplayName").toString()));
      }
      // validate the optional field `orgPostalAddress`
      if (jsonObj.get("orgPostalAddress") != null && !jsonObj.get("orgPostalAddress").isJsonNull()) {
        GoogleTypePostalAddress.validateJsonElement(jsonObj.get("orgPostalAddress"));
      }
      // validate the optional field `primaryContactInfo`
      if (jsonObj.get("primaryContactInfo") != null && !jsonObj.get("primaryContactInfo").isJsonNull()) {
        GoogleCloudChannelV1ContactInfo.validateJsonElement(jsonObj.get("primaryContactInfo"));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudChannelV1Customer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudChannelV1Customer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudChannelV1Customer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudChannelV1Customer.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudChannelV1Customer>() {
           @Override
           public void write(JsonWriter out, GoogleCloudChannelV1Customer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudChannelV1Customer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudChannelV1Customer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudChannelV1Customer
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudChannelV1Customer
   */
  public static GoogleCloudChannelV1Customer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudChannelV1Customer.class);
  }

  /**
   * Convert an instance of GoogleCloudChannelV1Customer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

