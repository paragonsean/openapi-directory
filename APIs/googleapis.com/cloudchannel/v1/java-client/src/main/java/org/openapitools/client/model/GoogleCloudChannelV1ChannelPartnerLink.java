/*
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudChannelV1CloudIdentityInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Entity representing a link between distributors and their indirect resellers in an n-tier resale channel.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:50.180583-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudChannelV1ChannelPartnerLink {
  public static final String SERIALIZED_NAME_CHANNEL_PARTNER_CLOUD_IDENTITY_INFO = "channelPartnerCloudIdentityInfo";
  @SerializedName(SERIALIZED_NAME_CHANNEL_PARTNER_CLOUD_IDENTITY_INFO)
  private GoogleCloudChannelV1CloudIdentityInfo channelPartnerCloudIdentityInfo;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_INVITE_LINK_URI = "inviteLinkUri";
  @SerializedName(SERIALIZED_NAME_INVITE_LINK_URI)
  private String inviteLinkUri;

  /**
   * Required. State of the channel partner link.
   */
  @JsonAdapter(LinkStateEnum.Adapter.class)
  public enum LinkStateEnum {
    CHANNEL_PARTNER_LINK_STATE_UNSPECIFIED("CHANNEL_PARTNER_LINK_STATE_UNSPECIFIED"),
    
    INVITED("INVITED"),
    
    ACTIVE("ACTIVE"),
    
    REVOKED("REVOKED"),
    
    SUSPENDED("SUSPENDED");

    private String value;

    LinkStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LinkStateEnum fromValue(String value) {
      for (LinkStateEnum b : LinkStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LinkStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LinkStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LinkStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LinkStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LinkStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LINK_STATE = "linkState";
  @SerializedName(SERIALIZED_NAME_LINK_STATE)
  private LinkStateEnum linkState;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PUBLIC_ID = "publicId";
  @SerializedName(SERIALIZED_NAME_PUBLIC_ID)
  private String publicId;

  public static final String SERIALIZED_NAME_RESELLER_CLOUD_IDENTITY_ID = "resellerCloudIdentityId";
  @SerializedName(SERIALIZED_NAME_RESELLER_CLOUD_IDENTITY_ID)
  private String resellerCloudIdentityId;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudChannelV1ChannelPartnerLink() {
  }

  public GoogleCloudChannelV1ChannelPartnerLink(
     String createTime, 
     String inviteLinkUri, 
     String name, 
     String publicId, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.inviteLinkUri = inviteLinkUri;
    this.name = name;
    this.publicId = publicId;
    this.updateTime = updateTime;
  }

  public GoogleCloudChannelV1ChannelPartnerLink channelPartnerCloudIdentityInfo(GoogleCloudChannelV1CloudIdentityInfo channelPartnerCloudIdentityInfo) {
    this.channelPartnerCloudIdentityInfo = channelPartnerCloudIdentityInfo;
    return this;
  }

  /**
   * Get channelPartnerCloudIdentityInfo
   * @return channelPartnerCloudIdentityInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudChannelV1CloudIdentityInfo getChannelPartnerCloudIdentityInfo() {
    return channelPartnerCloudIdentityInfo;
  }

  public void setChannelPartnerCloudIdentityInfo(GoogleCloudChannelV1CloudIdentityInfo channelPartnerCloudIdentityInfo) {
    this.channelPartnerCloudIdentityInfo = channelPartnerCloudIdentityInfo;
  }


  /**
   * Output only. Timestamp of when the channel partner link is created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  /**
   * Output only. URI of the web page where partner accepts the link invitation.
   * @return inviteLinkUri
   */
  @javax.annotation.Nullable
  public String getInviteLinkUri() {
    return inviteLinkUri;
  }



  public GoogleCloudChannelV1ChannelPartnerLink linkState(LinkStateEnum linkState) {
    this.linkState = linkState;
    return this;
  }

  /**
   * Required. State of the channel partner link.
   * @return linkState
   */
  @javax.annotation.Nullable
  public LinkStateEnum getLinkState() {
    return linkState;
  }

  public void setLinkState(LinkStateEnum linkState) {
    this.linkState = linkState;
  }


  /**
   * Output only. Resource name for the channel partner link, in the format accounts/{account_id}/channelPartnerLinks/{id}.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. Public identifier that a customer must use to generate a transfer token to move to this distributor-reseller combination.
   * @return publicId
   */
  @javax.annotation.Nullable
  public String getPublicId() {
    return publicId;
  }



  public GoogleCloudChannelV1ChannelPartnerLink resellerCloudIdentityId(String resellerCloudIdentityId) {
    this.resellerCloudIdentityId = resellerCloudIdentityId;
    return this;
  }

  /**
   * Required. Cloud Identity ID of the linked reseller.
   * @return resellerCloudIdentityId
   */
  @javax.annotation.Nullable
  public String getResellerCloudIdentityId() {
    return resellerCloudIdentityId;
  }

  public void setResellerCloudIdentityId(String resellerCloudIdentityId) {
    this.resellerCloudIdentityId = resellerCloudIdentityId;
  }


  /**
   * Output only. Timestamp of when the channel partner link is updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudChannelV1ChannelPartnerLink googleCloudChannelV1ChannelPartnerLink = (GoogleCloudChannelV1ChannelPartnerLink) o;
    return Objects.equals(this.channelPartnerCloudIdentityInfo, googleCloudChannelV1ChannelPartnerLink.channelPartnerCloudIdentityInfo) &&
        Objects.equals(this.createTime, googleCloudChannelV1ChannelPartnerLink.createTime) &&
        Objects.equals(this.inviteLinkUri, googleCloudChannelV1ChannelPartnerLink.inviteLinkUri) &&
        Objects.equals(this.linkState, googleCloudChannelV1ChannelPartnerLink.linkState) &&
        Objects.equals(this.name, googleCloudChannelV1ChannelPartnerLink.name) &&
        Objects.equals(this.publicId, googleCloudChannelV1ChannelPartnerLink.publicId) &&
        Objects.equals(this.resellerCloudIdentityId, googleCloudChannelV1ChannelPartnerLink.resellerCloudIdentityId) &&
        Objects.equals(this.updateTime, googleCloudChannelV1ChannelPartnerLink.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelPartnerCloudIdentityInfo, createTime, inviteLinkUri, linkState, name, publicId, resellerCloudIdentityId, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudChannelV1ChannelPartnerLink {\n");
    sb.append("    channelPartnerCloudIdentityInfo: ").append(toIndentedString(channelPartnerCloudIdentityInfo)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    inviteLinkUri: ").append(toIndentedString(inviteLinkUri)).append("\n");
    sb.append("    linkState: ").append(toIndentedString(linkState)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    publicId: ").append(toIndentedString(publicId)).append("\n");
    sb.append("    resellerCloudIdentityId: ").append(toIndentedString(resellerCloudIdentityId)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("channelPartnerCloudIdentityInfo");
    openapiFields.add("createTime");
    openapiFields.add("inviteLinkUri");
    openapiFields.add("linkState");
    openapiFields.add("name");
    openapiFields.add("publicId");
    openapiFields.add("resellerCloudIdentityId");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudChannelV1ChannelPartnerLink
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudChannelV1ChannelPartnerLink.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudChannelV1ChannelPartnerLink is not found in the empty JSON string", GoogleCloudChannelV1ChannelPartnerLink.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudChannelV1ChannelPartnerLink.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudChannelV1ChannelPartnerLink` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `channelPartnerCloudIdentityInfo`
      if (jsonObj.get("channelPartnerCloudIdentityInfo") != null && !jsonObj.get("channelPartnerCloudIdentityInfo").isJsonNull()) {
        GoogleCloudChannelV1CloudIdentityInfo.validateJsonElement(jsonObj.get("channelPartnerCloudIdentityInfo"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("inviteLinkUri") != null && !jsonObj.get("inviteLinkUri").isJsonNull()) && !jsonObj.get("inviteLinkUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inviteLinkUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inviteLinkUri").toString()));
      }
      if ((jsonObj.get("linkState") != null && !jsonObj.get("linkState").isJsonNull()) && !jsonObj.get("linkState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkState").toString()));
      }
      // validate the optional field `linkState`
      if (jsonObj.get("linkState") != null && !jsonObj.get("linkState").isJsonNull()) {
        LinkStateEnum.validateJsonElement(jsonObj.get("linkState"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("publicId") != null && !jsonObj.get("publicId").isJsonNull()) && !jsonObj.get("publicId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publicId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publicId").toString()));
      }
      if ((jsonObj.get("resellerCloudIdentityId") != null && !jsonObj.get("resellerCloudIdentityId").isJsonNull()) && !jsonObj.get("resellerCloudIdentityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resellerCloudIdentityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resellerCloudIdentityId").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudChannelV1ChannelPartnerLink.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudChannelV1ChannelPartnerLink' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudChannelV1ChannelPartnerLink> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudChannelV1ChannelPartnerLink.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudChannelV1ChannelPartnerLink>() {
           @Override
           public void write(JsonWriter out, GoogleCloudChannelV1ChannelPartnerLink value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudChannelV1ChannelPartnerLink read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudChannelV1ChannelPartnerLink given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudChannelV1ChannelPartnerLink
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudChannelV1ChannelPartnerLink
   */
  public static GoogleCloudChannelV1ChannelPartnerLink fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudChannelV1ChannelPartnerLink.class);
  }

  /**
   * Convert an instance of GoogleCloudChannelV1ChannelPartnerLink to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

