/*
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleCloudChannelV1ActivateEntitlementRequest;
import org.openapitools.client.model.GoogleCloudChannelV1ChangeOfferRequest;
import org.openapitools.client.model.GoogleCloudChannelV1ChangeParametersRequest;
import org.openapitools.client.model.GoogleCloudChannelV1ChangeRenewalSettingsRequest;
import org.openapitools.client.model.GoogleCloudChannelV1ChannelPartnerLink;
import org.openapitools.client.model.GoogleCloudChannelV1ChannelPartnerRepricingConfig;
import org.openapitools.client.model.GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest;
import org.openapitools.client.model.GoogleCloudChannelV1CheckCloudIdentityAccountsExistResponse;
import org.openapitools.client.model.GoogleCloudChannelV1CreateEntitlementRequest;
import org.openapitools.client.model.GoogleCloudChannelV1Customer;
import org.openapitools.client.model.GoogleCloudChannelV1CustomerRepricingConfig;
import org.openapitools.client.model.GoogleCloudChannelV1FetchReportResultsRequest;
import org.openapitools.client.model.GoogleCloudChannelV1FetchReportResultsResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ImportCustomerRequest;
import org.openapitools.client.model.GoogleCloudChannelV1ListChannelPartnerLinksResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListChannelPartnerRepricingConfigsResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListCustomerRepricingConfigsResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListCustomersResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListEntitlementChangesResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListEntitlementsResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListOffersResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListPurchasableOffersResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListPurchasableSkusResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListReportsResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListSkuGroupBillableSkusResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListSkuGroupsResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListSubscribersResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListTransferableOffersRequest;
import org.openapitools.client.model.GoogleCloudChannelV1ListTransferableOffersResponse;
import org.openapitools.client.model.GoogleCloudChannelV1ListTransferableSkusRequest;
import org.openapitools.client.model.GoogleCloudChannelV1ListTransferableSkusResponse;
import org.openapitools.client.model.GoogleCloudChannelV1Offer;
import org.openapitools.client.model.GoogleCloudChannelV1ProvisionCloudIdentityRequest;
import org.openapitools.client.model.GoogleCloudChannelV1QueryEligibleBillingAccountsResponse;
import org.openapitools.client.model.GoogleCloudChannelV1RegisterSubscriberRequest;
import org.openapitools.client.model.GoogleCloudChannelV1RegisterSubscriberResponse;
import org.openapitools.client.model.GoogleCloudChannelV1RunReportJobRequest;
import org.openapitools.client.model.GoogleCloudChannelV1StartPaidServiceRequest;
import org.openapitools.client.model.GoogleCloudChannelV1SuspendEntitlementRequest;
import org.openapitools.client.model.GoogleCloudChannelV1TransferEntitlementsRequest;
import org.openapitools.client.model.GoogleCloudChannelV1TransferEntitlementsToGoogleRequest;
import org.openapitools.client.model.GoogleCloudChannelV1UnregisterSubscriberRequest;
import org.openapitools.client.model.GoogleCloudChannelV1UnregisterSubscriberResponse;
import org.openapitools.client.model.GoogleLongrunningOperation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountsApi
 */
@Disabled
public class AccountsApiTest {

    private final AccountsApi api = new AccountsApi();

    /**
     * Creates a ChannelPartnerRepricingConfig. Call this method to set modifications for a specific ChannelPartner&#39;s bill. You can only create configs if the RepricingConfig.effective_invoice_month is a future month. If needed, you can create a config for the current month, with some restrictions. When creating a config for a future month, make sure there are no existing configs for that RepricingConfig.effective_invoice_month. The following restrictions are for creating configs in the current month. * This functionality is reserved for recovering from an erroneous config, and should not be used for regular business cases. * The new config will not modify exports used with other configs. Changes to the config may be immediate, but may take up to 24 hours. * There is a limit of ten configs for any ChannelPartner or RepricingConfig.EntitlementGranularity.entitlement, for any RepricingConfig.effective_invoice_month. * The contained ChannelPartnerRepricingConfig.repricing_config value must be different from the value used in the current config for a ChannelPartner. Possible Error Codes: * PERMISSION_DENIED: If the account making the request and the account being queried are different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. Also displays if the updated config is for the current month or past months. * NOT_FOUND: The ChannelPartnerRepricingConfig specified does not exist or is not associated with the given account. * INTERNAL: Any non-user error related to technical issues in the backend. In this case, contact Cloud Channel support. Return Value: If successful, the updated ChannelPartnerRepricingConfig resource, otherwise returns an error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsChannelPartnerLinksChannelPartnerRepricingConfigsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1ChannelPartnerRepricingConfig googleCloudChannelV1ChannelPartnerRepricingConfig = null;
        GoogleCloudChannelV1ChannelPartnerRepricingConfig response = api.cloudchannelAccountsChannelPartnerLinksChannelPartnerRepricingConfigsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1ChannelPartnerRepricingConfig);
        // TODO: test validations
    }

    /**
     * Lists information about how a Reseller modifies their bill before sending it to a ChannelPartner. Possible Error Codes: * PERMISSION_DENIED: If the account making the request and the account being queried are different. * NOT_FOUND: The ChannelPartnerRepricingConfig specified does not exist or is not associated with the given account. * INTERNAL: Any non-user error related to technical issues in the backend. In this case, contact Cloud Channel support. Return Value: If successful, the ChannelPartnerRepricingConfig resources. The data for each resource is displayed in the ascending order of: * Channel Partner ID * RepricingConfig.effective_invoice_month * ChannelPartnerRepricingConfig.update_time If unsuccessful, returns an error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsChannelPartnerLinksChannelPartnerRepricingConfigsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudChannelV1ListChannelPartnerRepricingConfigsResponse response = api.cloudchannelAccountsChannelPartnerLinksChannelPartnerRepricingConfigsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Initiates a channel partner link between a distributor and a reseller, or between resellers in an n-tier reseller channel. Invited partners need to follow the invite_link_uri provided in the response to accept. After accepting the invitation, a link is set up between the two parties. You must be a distributor to call this method. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * ALREADY_EXISTS: The ChannelPartnerLink sent in the request already exists. * NOT_FOUND: No Cloud Identity customer exists for provided domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The new ChannelPartnerLink resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsChannelPartnerLinksCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1ChannelPartnerLink googleCloudChannelV1ChannelPartnerLink = null;
        GoogleCloudChannelV1ChannelPartnerLink response = api.cloudchannelAccountsChannelPartnerLinksCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1ChannelPartnerLink);
        // TODO: test validations
    }

    /**
     * List ChannelPartnerLinks belonging to a distributor. You must be a distributor to call this method. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: The list of the distributor account&#39;s ChannelPartnerLink resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsChannelPartnerLinksListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String view = null;
        GoogleCloudChannelV1ListChannelPartnerLinksResponse response = api.cloudchannelAccountsChannelPartnerLinksList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, view);
        // TODO: test validations
    }

    /**
     * Confirms the existence of Cloud Identity accounts based on the domain and if the Cloud Identity accounts are owned by the reseller. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * INVALID_VALUE: Invalid domain value in the request. Return value: A list of CloudIdentityCustomerAccount resources for the domain (may be empty) Note: in the v1alpha1 version of the API, a NOT_FOUND error returns if no CloudIdentityCustomerAccount resources match the domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCheckCloudIdentityAccountsExistTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest googleCloudChannelV1CheckCloudIdentityAccountsExistRequest = null;
        GoogleCloudChannelV1CheckCloudIdentityAccountsExistResponse response = api.cloudchannelAccountsCheckCloudIdentityAccountsExist(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1CheckCloudIdentityAccountsExistRequest);
        // TODO: test validations
    }

    /**
     * Creates a new Customer resource under the reseller or distributor account. Possible error codes: * PERMISSION_DENIED: * The reseller account making the request is different from the reseller account in the API request. * You are not authorized to create a customer. See https://support.google.com/channelservices/answer/9759265 * INVALID_ARGUMENT: * Required request parameters are missing or invalid. * Domain field value doesn&#39;t match the primary email domain. Return value: The newly created Customer resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1Customer googleCloudChannelV1Customer = null;
        GoogleCloudChannelV1Customer response = api.cloudchannelAccountsCustomersCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1Customer);
        // TODO: test validations
    }

    /**
     * Creates a CustomerRepricingConfig. Call this method to set modifications for a specific customer&#39;s bill. You can only create configs if the RepricingConfig.effective_invoice_month is a future month. If needed, you can create a config for the current month, with some restrictions. When creating a config for a future month, make sure there are no existing configs for that RepricingConfig.effective_invoice_month. The following restrictions are for creating configs in the current month. * This functionality is reserved for recovering from an erroneous config, and should not be used for regular business cases. * The new config will not modify exports used with other configs. Changes to the config may be immediate, but may take up to 24 hours. * There is a limit of ten configs for any RepricingConfig.EntitlementGranularity.entitlement, for any RepricingConfig.effective_invoice_month. * The contained CustomerRepricingConfig.repricing_config value must be different from the value used in the current config for a RepricingConfig.EntitlementGranularity.entitlement. Possible Error Codes: * PERMISSION_DENIED: If the account making the request and the account being queried are different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. Also displays if the updated config is for the current month or past months. * NOT_FOUND: The CustomerRepricingConfig specified does not exist or is not associated with the given account. * INTERNAL: Any non-user error related to technical issues in the backend. In this case, contact Cloud Channel support. Return Value: If successful, the updated CustomerRepricingConfig resource, otherwise returns an error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersCustomerRepricingConfigsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1CustomerRepricingConfig googleCloudChannelV1CustomerRepricingConfig = null;
        GoogleCloudChannelV1CustomerRepricingConfig response = api.cloudchannelAccountsCustomersCustomerRepricingConfigsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1CustomerRepricingConfig);
        // TODO: test validations
    }

    /**
     * Lists information about how a Reseller modifies their bill before sending it to a Customer. Possible Error Codes: * PERMISSION_DENIED: If the account making the request and the account being queried are different. * NOT_FOUND: The CustomerRepricingConfig specified does not exist or is not associated with the given account. * INTERNAL: Any non-user error related to technical issues in the backend. In this case, contact Cloud Channel support. Return Value: If successful, the CustomerRepricingConfig resources. The data for each resource is displayed in the ascending order of: * Customer ID * RepricingConfig.EntitlementGranularity.entitlement * RepricingConfig.effective_invoice_month * CustomerRepricingConfig.update_time If unsuccessful, returns an error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersCustomerRepricingConfigsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudChannelV1ListCustomerRepricingConfigsResponse response = api.cloudchannelAccountsCustomersCustomerRepricingConfigsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates a CustomerRepricingConfig. Call this method to set modifications for a specific customer&#39;s bill. This method overwrites the existing CustomerRepricingConfig. You can only update configs if the RepricingConfig.effective_invoice_month is a future month. To make changes to configs for the current month, use CreateCustomerRepricingConfig, taking note of its restrictions. You cannot update the RepricingConfig.effective_invoice_month. When updating a config in the future: * This config must already exist. Possible Error Codes: * PERMISSION_DENIED: If the account making the request and the account being queried are different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. Also displays if the updated config is for the current month or past months. * NOT_FOUND: The CustomerRepricingConfig specified does not exist or is not associated with the given account. * INTERNAL: Any non-user error related to technical issues in the backend. In this case, contact Cloud Channel support. Return Value: If successful, the updated CustomerRepricingConfig resource, otherwise returns an error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersCustomerRepricingConfigsPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        GoogleCloudChannelV1CustomerRepricingConfig googleCloudChannelV1CustomerRepricingConfig = null;
        GoogleCloudChannelV1CustomerRepricingConfig response = api.cloudchannelAccountsCustomersCustomerRepricingConfigsPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, googleCloudChannelV1CustomerRepricingConfig);
        // TODO: test validations
    }

    /**
     * Activates a previously suspended entitlement. Entitlements suspended for pending ToS acceptance can&#39;t be activated using this method. An entitlement activation is a long-running operation and it updates the state of the customer entitlement. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement resource not found. * SUSPENSION_NOT_RESELLER_INITIATED: Can only activate reseller-initiated suspensions and entitlements that have accepted the TOS. * NOT_SUSPENDED: Can only activate suspended entitlements not in an ACTIVE state. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersEntitlementsActivateTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1ActivateEntitlementRequest googleCloudChannelV1ActivateEntitlementRequest = null;
        GoogleLongrunningOperation response = api.cloudchannelAccountsCustomersEntitlementsActivate(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1ActivateEntitlementRequest);
        // TODO: test validations
    }

    /**
     * Updates the Offer for an existing customer entitlement. An entitlement update is a long-running operation and it updates the entitlement as a result of fulfillment. Possible error codes: * PERMISSION_DENIED: The customer doesn&#39;t belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Offer or Entitlement resource not found. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersEntitlementsChangeOfferTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1ChangeOfferRequest googleCloudChannelV1ChangeOfferRequest = null;
        GoogleLongrunningOperation response = api.cloudchannelAccountsCustomersEntitlementsChangeOffer(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1ChangeOfferRequest);
        // TODO: test validations
    }

    /**
     * Change parameters of the entitlement. An entitlement update is a long-running operation and it updates the entitlement as a result of fulfillment. Possible error codes: * PERMISSION_DENIED: The customer doesn&#39;t belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. For example, the number of seats being changed is greater than the allowed number of max seats, or decreasing seats for a commitment based plan. * NOT_FOUND: Entitlement resource not found. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersEntitlementsChangeParametersTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1ChangeParametersRequest googleCloudChannelV1ChangeParametersRequest = null;
        GoogleLongrunningOperation response = api.cloudchannelAccountsCustomersEntitlementsChangeParameters(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1ChangeParametersRequest);
        // TODO: test validations
    }

    /**
     * Updates the renewal settings for an existing customer entitlement. An entitlement update is a long-running operation and it updates the entitlement as a result of fulfillment. Possible error codes: * PERMISSION_DENIED: The customer doesn&#39;t belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement resource not found. * NOT_COMMITMENT_PLAN: Renewal Settings are only applicable for a commitment plan. Can&#39;t enable or disable renewals for non-commitment plans. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersEntitlementsChangeRenewalSettingsTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1ChangeRenewalSettingsRequest googleCloudChannelV1ChangeRenewalSettingsRequest = null;
        GoogleLongrunningOperation response = api.cloudchannelAccountsCustomersEntitlementsChangeRenewalSettings(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1ChangeRenewalSettingsRequest);
        // TODO: test validations
    }

    /**
     * Creates an entitlement for a customer. Possible error codes: * PERMISSION_DENIED: * The customer doesn&#39;t belong to the reseller. * The reseller is not authorized to transact on this Product. See https://support.google.com/channelservices/answer/9759265 * INVALID_ARGUMENT: * Required request parameters are missing or invalid. * There is already a customer entitlement for a SKU from the same product family. * INVALID_VALUE: Make sure the OfferId is valid. If it is, contact Google Channel support for further troubleshooting. * NOT_FOUND: The customer or offer resource was not found. * ALREADY_EXISTS: * The SKU was already purchased for the customer. * The customer&#39;s primary email already exists. Retry after changing the customer&#39;s primary contact email. * CONDITION_NOT_MET or FAILED_PRECONDITION: * The domain required for purchasing a SKU has not been verified. * A pre-requisite SKU required to purchase an Add-On SKU is missing. For example, Google Workspace Business Starter is required to purchase Vault or Drive. * (Developer accounts only) Reseller and resold domain must meet the following naming requirements: * Domain names must start with goog-test. * Domain names must include the reseller domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersEntitlementsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1CreateEntitlementRequest googleCloudChannelV1CreateEntitlementRequest = null;
        GoogleLongrunningOperation response = api.cloudchannelAccountsCustomersEntitlementsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1CreateEntitlementRequest);
        // TODO: test validations
    }

    /**
     * Lists Entitlements belonging to a customer. Possible error codes: * PERMISSION_DENIED: The customer doesn&#39;t belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: A list of the customer&#39;s Entitlements.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersEntitlementsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudChannelV1ListEntitlementsResponse response = api.cloudchannelAccountsCustomersEntitlementsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * List entitlement history. Possible error codes: * PERMISSION_DENIED: The reseller account making the request and the provided reseller account are different. * INVALID_ARGUMENT: Missing or invalid required fields in the request. * NOT_FOUND: The parent resource doesn&#39;t exist. Usually the result of an invalid name parameter. * INTERNAL: Any non-user error related to a technical issue in the backend. In this case, contact CloudChannel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. Return value: List of EntitlementChanges.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersEntitlementsListEntitlementChangesTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudChannelV1ListEntitlementChangesResponse response = api.cloudchannelAccountsCustomersEntitlementsListEntitlementChanges(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Returns the requested Offer resource. Possible error codes: * PERMISSION_DENIED: The entitlement doesn&#39;t belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement or offer was not found. Return value: The Offer resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersEntitlementsLookupOfferTest() throws ApiException {
        String entitlement = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1Offer response = api.cloudchannelAccountsCustomersEntitlementsLookupOffer(entitlement, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Starts paid service for a trial entitlement. Starts paid service for a trial entitlement immediately. This method is only applicable if a plan is set up for a trial entitlement but has some trial days remaining. Possible error codes: * PERMISSION_DENIED: The customer doesn&#39;t belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement resource not found. * FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for entitlement on trial plans. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersEntitlementsStartPaidServiceTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1StartPaidServiceRequest googleCloudChannelV1StartPaidServiceRequest = null;
        GoogleLongrunningOperation response = api.cloudchannelAccountsCustomersEntitlementsStartPaidService(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1StartPaidServiceRequest);
        // TODO: test validations
    }

    /**
     * Suspends a previously fulfilled entitlement. An entitlement suspension is a long-running operation. Possible error codes: * PERMISSION_DENIED: The customer doesn&#39;t belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement resource not found. * NOT_ACTIVE: Entitlement is not active. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersEntitlementsSuspendTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1SuspendEntitlementRequest googleCloudChannelV1SuspendEntitlementRequest = null;
        GoogleLongrunningOperation response = api.cloudchannelAccountsCustomersEntitlementsSuspend(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1SuspendEntitlementRequest);
        // TODO: test validations
    }

    /**
     * Imports a Customer from the Cloud Identity associated with the provided Cloud Identity ID or domain before a TransferEntitlements call. If a linked Customer already exists and overwrite_if_exists is true, it will update that Customer&#39;s data. Possible error codes: * PERMISSION_DENIED: * The reseller account making the request is different from the reseller account in the API request. * You are not authorized to import the customer. See https://support.google.com/channelservices/answer/9759265 * NOT_FOUND: Cloud Identity doesn&#39;t exist or was deleted. * INVALID_ARGUMENT: Required parameters are missing, or the auth_token is expired or invalid. * ALREADY_EXISTS: A customer already exists and has conflicting critical fields. Requires an overwrite. Return value: The Customer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersImportTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1ImportCustomerRequest googleCloudChannelV1ImportCustomerRequest = null;
        GoogleCloudChannelV1Customer response = api.cloudchannelAccountsCustomersImport(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1ImportCustomerRequest);
        // TODO: test validations
    }

    /**
     * List Customers. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: List of Customers, or an empty list if there are no customers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudChannelV1ListCustomersResponse response = api.cloudchannelAccountsCustomersList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists the following: * Offers that you can purchase for a customer. * Offers that you can change for an entitlement. Possible error codes: * PERMISSION_DENIED: * The customer doesn&#39;t belong to the reseller * The reseller is not authorized to transact on this Product. See https://support.google.com/channelservices/answer/9759265 * INVALID_ARGUMENT: Required request parameters are missing or invalid.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersListPurchasableOffersTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String changeOfferPurchaseBillingAccount = null;
        String changeOfferPurchaseEntitlement = null;
        String changeOfferPurchaseNewSku = null;
        String createEntitlementPurchaseBillingAccount = null;
        String createEntitlementPurchaseSku = null;
        String languageCode = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudChannelV1ListPurchasableOffersResponse response = api.cloudchannelAccountsCustomersListPurchasableOffers(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, changeOfferPurchaseBillingAccount, changeOfferPurchaseEntitlement, changeOfferPurchaseNewSku, createEntitlementPurchaseBillingAccount, createEntitlementPurchaseSku, languageCode, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists the following: * SKUs that you can purchase for a customer * SKUs that you can upgrade or downgrade for an entitlement. Possible error codes: * PERMISSION_DENIED: The customer doesn&#39;t belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersListPurchasableSkusTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String changeOfferPurchaseChangeType = null;
        String changeOfferPurchaseEntitlement = null;
        String createEntitlementPurchaseProduct = null;
        String languageCode = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudChannelV1ListPurchasableSkusResponse response = api.cloudchannelAccountsCustomersListPurchasableSkus(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, changeOfferPurchaseChangeType, changeOfferPurchaseEntitlement, createEntitlementPurchaseProduct, languageCode, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a Cloud Identity for the given customer using the customer&#39;s information, or the information provided here. Possible error codes: * PERMISSION_DENIED: * The customer doesn&#39;t belong to the reseller. * You are not authorized to provision cloud identity id. See https://support.google.com/channelservices/answer/9759265 * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer was not found. * ALREADY_EXISTS: The customer&#39;s primary email already exists. Retry after changing the customer&#39;s primary contact email. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata contains an instance of OperationMetadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersProvisionCloudIdentityTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1ProvisionCloudIdentityRequest googleCloudChannelV1ProvisionCloudIdentityRequest = null;
        GoogleLongrunningOperation response = api.cloudchannelAccountsCustomersProvisionCloudIdentity(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1ProvisionCloudIdentityRequest);
        // TODO: test validations
    }

    /**
     * Lists the billing accounts that are eligible to purchase particular SKUs for a given customer. Possible error codes: * PERMISSION_DENIED: The customer doesn&#39;t belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: Based on the provided list of SKUs, returns a list of SKU groups that must be purchased using the same billing account and the billing accounts eligible to purchase each SKU group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersQueryEligibleBillingAccountsTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        List<String> skus = null;
        GoogleCloudChannelV1QueryEligibleBillingAccountsResponse response = api.cloudchannelAccountsCustomersQueryEligibleBillingAccounts(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, skus);
        // TODO: test validations
    }

    /**
     * Transfers customer entitlements to new reseller. Possible error codes: * PERMISSION_DENIED: * The customer doesn&#39;t belong to the reseller. * The reseller is not authorized to transact on this Product. See https://support.google.com/channelservices/answer/9759265 * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer or offer resource was not found. * ALREADY_EXISTS: The SKU was already transferred for the customer. * CONDITION_NOT_MET or FAILED_PRECONDITION: * The SKU requires domain verification to transfer, but the domain is not verified. * An Add-On SKU (example, Vault or Drive) is missing the pre-requisite SKU (example, G Suite Basic). * (Developer accounts only) Reseller and resold domain must meet the following naming requirements: * Domain names must start with goog-test. * Domain names must include the reseller domain. * Specify all transferring entitlements. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersTransferEntitlementsTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1TransferEntitlementsRequest googleCloudChannelV1TransferEntitlementsRequest = null;
        GoogleLongrunningOperation response = api.cloudchannelAccountsCustomersTransferEntitlements(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1TransferEntitlementsRequest);
        // TODO: test validations
    }

    /**
     * Transfers customer entitlements from their current reseller to Google. Possible error codes: * PERMISSION_DENIED: The customer doesn&#39;t belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer or offer resource was not found. * ALREADY_EXISTS: The SKU was already transferred for the customer. * CONDITION_NOT_MET or FAILED_PRECONDITION: * The SKU requires domain verification to transfer, but the domain is not verified. * An Add-On SKU (example, Vault or Drive) is missing the pre-requisite SKU (example, G Suite Basic). * (Developer accounts only) Reseller and resold domain must meet the following naming requirements: * Domain names must start with goog-test. * Domain names must include the reseller domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The response will contain google.protobuf.Empty on success. The Operation metadata will contain an instance of OperationMetadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsCustomersTransferEntitlementsToGoogleTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1TransferEntitlementsToGoogleRequest googleCloudChannelV1TransferEntitlementsToGoogleRequest = null;
        GoogleLongrunningOperation response = api.cloudchannelAccountsCustomersTransferEntitlementsToGoogle(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1TransferEntitlementsToGoogleRequest);
        // TODO: test validations
    }

    /**
     * Lists service accounts with subscriber privileges on the Cloud Pub/Sub topic created for this Channel Services account. Possible error codes: * PERMISSION_DENIED: The reseller account making the request and the provided reseller account are different, or the impersonated user is not a super admin. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The topic resource doesn&#39;t exist. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: A list of service email addresses.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsListSubscribersTest() throws ApiException {
        String account = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudChannelV1ListSubscribersResponse response = api.cloudchannelAccountsListSubscribers(account, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * List TransferableOffers of a customer based on Cloud Identity ID or Customer Name in the request. Use this method when a reseller gets the entitlement information of an unowned customer. The reseller should provide the customer&#39;s Cloud Identity ID or Customer Name. Possible error codes: * PERMISSION_DENIED: * The customer doesn&#39;t belong to the reseller and has no auth token. * The customer provided incorrect reseller information when generating auth token. * The reseller account making the request is different from the reseller account in the query. * The reseller is not authorized to transact on this Product. See https://support.google.com/channelservices/answer/9759265 * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: List of TransferableOffer for the given customer and SKU.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsListTransferableOffersTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1ListTransferableOffersRequest googleCloudChannelV1ListTransferableOffersRequest = null;
        GoogleCloudChannelV1ListTransferableOffersResponse response = api.cloudchannelAccountsListTransferableOffers(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1ListTransferableOffersRequest);
        // TODO: test validations
    }

    /**
     * List TransferableSkus of a customer based on the Cloud Identity ID or Customer Name in the request. Use this method to list the entitlements information of an unowned customer. You should provide the customer&#39;s Cloud Identity ID or Customer Name. Possible error codes: * PERMISSION_DENIED: * The customer doesn&#39;t belong to the reseller and has no auth token. * The supplied auth token is invalid. * The reseller account making the request is different from the reseller account in the query. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: A list of the customer&#39;s TransferableSku.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsListTransferableSkusTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1ListTransferableSkusRequest googleCloudChannelV1ListTransferableSkusRequest = null;
        GoogleCloudChannelV1ListTransferableSkusResponse response = api.cloudchannelAccountsListTransferableSkus(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1ListTransferableSkusRequest);
        // TODO: test validations
    }

    /**
     * Lists the Offers the reseller can sell. Possible error codes: * INVALID_ARGUMENT: Required request parameters are missing or invalid.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsOffersListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String languageCode = null;
        Integer pageSize = null;
        String pageToken = null;
        Boolean showFutureOffers = null;
        GoogleCloudChannelV1ListOffersResponse response = api.cloudchannelAccountsOffersList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, languageCode, pageSize, pageToken, showFutureOffers);
        // TODO: test validations
    }

    /**
     * Registers a service account with subscriber privileges on the Cloud Pub/Sub topic for this Channel Services account. After you create a subscriber, you get the events through SubscriberEvent Possible error codes: * PERMISSION_DENIED: The reseller account making the request and the provided reseller account are different, or the impersonated user is not a super admin. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The topic name with the registered service email address.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsRegisterTest() throws ApiException {
        String account = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1RegisterSubscriberRequest googleCloudChannelV1RegisterSubscriberRequest = null;
        GoogleCloudChannelV1RegisterSubscriberResponse response = api.cloudchannelAccountsRegister(account, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1RegisterSubscriberRequest);
        // TODO: test validations
    }

    /**
     * Retrieves data generated by CloudChannelReportsService.RunReportJob. Deprecated: Please use [Export Channel Services data to BigQuery](https://cloud.google.com/channel/docs/rebilling/export-data-to-bigquery) instead.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsReportJobsFetchReportResultsTest() throws ApiException {
        String reportJob = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1FetchReportResultsRequest googleCloudChannelV1FetchReportResultsRequest = null;
        GoogleCloudChannelV1FetchReportResultsResponse response = api.cloudchannelAccountsReportJobsFetchReportResults(reportJob, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1FetchReportResultsRequest);
        // TODO: test validations
    }

    /**
     * Lists the reports that RunReportJob can run. These reports include an ID, a description, and the list of columns that will be in the result. Deprecated: Please use [Export Channel Services data to BigQuery](https://cloud.google.com/channel/docs/rebilling/export-data-to-bigquery) instead.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsReportsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String languageCode = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudChannelV1ListReportsResponse response = api.cloudchannelAccountsReportsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, languageCode, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Begins generation of data for a given report. The report identifier is a UID (for example, &#x60;613bf59q&#x60;). Possible error codes: * PERMISSION_DENIED: The user doesn&#39;t have access to this report. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The report identifier was not found. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata contains an instance of OperationMetadata. To get the results of report generation, call CloudChannelReportsService.FetchReportResults with the RunReportJobResponse.report_job. Deprecated: Please use [Export Channel Services data to BigQuery](https://cloud.google.com/channel/docs/rebilling/export-data-to-bigquery) instead.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsReportsRunTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1RunReportJobRequest googleCloudChannelV1RunReportJobRequest = null;
        GoogleLongrunningOperation response = api.cloudchannelAccountsReportsRun(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1RunReportJobRequest);
        // TODO: test validations
    }

    /**
     * Lists the Billable SKUs in a given SKU group. Possible error codes: PERMISSION_DENIED: If the account making the request and the account being queried for are different, or the account doesn&#39;t exist. INVALID_ARGUMENT: Missing or invalid required parameters in the request. INTERNAL: Any non-user error related to technical issue in the backend. In this case, contact cloud channel support. Return Value: If successful, the BillableSku resources. The data for each resource is displayed in the ascending order of: * BillableSku.service_display_name * BillableSku.sku_display_name If unsuccessful, returns an error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsSkuGroupsBillableSkusListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudChannelV1ListSkuGroupBillableSkusResponse response = api.cloudchannelAccountsSkuGroupsBillableSkusList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists the Rebilling supported SKU groups the account is authorized to sell. Reference: https://cloud.google.com/skus/sku-groups Possible Error Codes: * PERMISSION_DENIED: If the account making the request and the account being queried are different, or the account doesn&#39;t exist. * INTERNAL: Any non-user error related to technical issues in the backend. In this case, contact Cloud Channel support. Return Value: If successful, the SkuGroup resources. The data for each resource is displayed in the alphabetical order of SKU group display name. The data for each resource is displayed in the ascending order of SkuGroup.display_name If unsuccessful, returns an error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsSkuGroupsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudChannelV1ListSkuGroupsResponse response = api.cloudchannelAccountsSkuGroupsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Unregisters a service account with subscriber privileges on the Cloud Pub/Sub topic created for this Channel Services account. If there are no service accounts left with subscriber privileges, this deletes the topic. You can call ListSubscribers to check for these accounts. Possible error codes: * PERMISSION_DENIED: The reseller account making the request and the provided reseller account are different, or the impersonated user is not a super admin. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The topic resource doesn&#39;t exist. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The topic name that unregistered the service email address. Returns a success response if the service email address wasn&#39;t registered with the topic.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudchannelAccountsUnregisterTest() throws ApiException {
        String account = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudChannelV1UnregisterSubscriberRequest googleCloudChannelV1UnregisterSubscriberRequest = null;
        GoogleCloudChannelV1UnregisterSubscriberResponse response = api.cloudchannelAccountsUnregister(account, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudChannelV1UnregisterSubscriberRequest);
        // TODO: test validations
    }

}
