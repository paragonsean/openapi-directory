/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1CloudIdentityCustomerAccount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::OAIGoogleCloudChannelV1CloudIdentityCustomerAccount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::OAIGoogleCloudChannelV1CloudIdentityCustomerAccount() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::~OAIGoogleCloudChannelV1CloudIdentityCustomerAccount() {}

void OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::initializeModel() {

    m_customer_cloud_identity_id_isSet = false;
    m_customer_cloud_identity_id_isValid = false;

    m_customer_name_isSet = false;
    m_customer_name_isValid = false;

    m_existing_isSet = false;
    m_existing_isValid = false;

    m_owned_isSet = false;
    m_owned_isValid = false;
}

void OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::fromJsonObject(QJsonObject json) {

    m_customer_cloud_identity_id_isValid = ::OpenAPI::fromJsonValue(m_customer_cloud_identity_id, json[QString("customerCloudIdentityId")]);
    m_customer_cloud_identity_id_isSet = !json[QString("customerCloudIdentityId")].isNull() && m_customer_cloud_identity_id_isValid;

    m_customer_name_isValid = ::OpenAPI::fromJsonValue(m_customer_name, json[QString("customerName")]);
    m_customer_name_isSet = !json[QString("customerName")].isNull() && m_customer_name_isValid;

    m_existing_isValid = ::OpenAPI::fromJsonValue(m_existing, json[QString("existing")]);
    m_existing_isSet = !json[QString("existing")].isNull() && m_existing_isValid;

    m_owned_isValid = ::OpenAPI::fromJsonValue(m_owned, json[QString("owned")]);
    m_owned_isSet = !json[QString("owned")].isNull() && m_owned_isValid;
}

QString OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::asJsonObject() const {
    QJsonObject obj;
    if (m_customer_cloud_identity_id_isSet) {
        obj.insert(QString("customerCloudIdentityId"), ::OpenAPI::toJsonValue(m_customer_cloud_identity_id));
    }
    if (m_customer_name_isSet) {
        obj.insert(QString("customerName"), ::OpenAPI::toJsonValue(m_customer_name));
    }
    if (m_existing_isSet) {
        obj.insert(QString("existing"), ::OpenAPI::toJsonValue(m_existing));
    }
    if (m_owned_isSet) {
        obj.insert(QString("owned"), ::OpenAPI::toJsonValue(m_owned));
    }
    return obj;
}

QString OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::getCustomerCloudIdentityId() const {
    return m_customer_cloud_identity_id;
}
void OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::setCustomerCloudIdentityId(const QString &customer_cloud_identity_id) {
    m_customer_cloud_identity_id = customer_cloud_identity_id;
    m_customer_cloud_identity_id_isSet = true;
}

bool OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::is_customer_cloud_identity_id_Set() const{
    return m_customer_cloud_identity_id_isSet;
}

bool OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::is_customer_cloud_identity_id_Valid() const{
    return m_customer_cloud_identity_id_isValid;
}

QString OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::getCustomerName() const {
    return m_customer_name;
}
void OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::setCustomerName(const QString &customer_name) {
    m_customer_name = customer_name;
    m_customer_name_isSet = true;
}

bool OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::is_customer_name_Set() const{
    return m_customer_name_isSet;
}

bool OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::is_customer_name_Valid() const{
    return m_customer_name_isValid;
}

bool OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::isExisting() const {
    return m_existing;
}
void OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::setExisting(const bool &existing) {
    m_existing = existing;
    m_existing_isSet = true;
}

bool OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::is_existing_Set() const{
    return m_existing_isSet;
}

bool OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::is_existing_Valid() const{
    return m_existing_isValid;
}

bool OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::isOwned() const {
    return m_owned;
}
void OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::setOwned(const bool &owned) {
    m_owned = owned;
    m_owned_isSet = true;
}

bool OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::is_owned_Set() const{
    return m_owned_isSet;
}

bool OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::is_owned_Valid() const{
    return m_owned_isValid;
}

bool OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customer_cloud_identity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_existing_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owned_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1CloudIdentityCustomerAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
