/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1alpha1RenewalSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1alpha1RenewalSettings::OAIGoogleCloudChannelV1alpha1RenewalSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1alpha1RenewalSettings::OAIGoogleCloudChannelV1alpha1RenewalSettings() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1alpha1RenewalSettings::~OAIGoogleCloudChannelV1alpha1RenewalSettings() {}

void OAIGoogleCloudChannelV1alpha1RenewalSettings::initializeModel() {

    m_disable_commitment_isSet = false;
    m_disable_commitment_isValid = false;

    m_enable_renewal_isSet = false;
    m_enable_renewal_isValid = false;

    m_payment_cycle_isSet = false;
    m_payment_cycle_isValid = false;

    m_payment_option_isSet = false;
    m_payment_option_isValid = false;

    m_payment_plan_isSet = false;
    m_payment_plan_isValid = false;

    m_resize_unit_count_isSet = false;
    m_resize_unit_count_isValid = false;

    m_scheduled_renewal_offer_isSet = false;
    m_scheduled_renewal_offer_isValid = false;
}

void OAIGoogleCloudChannelV1alpha1RenewalSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1alpha1RenewalSettings::fromJsonObject(QJsonObject json) {

    m_disable_commitment_isValid = ::OpenAPI::fromJsonValue(m_disable_commitment, json[QString("disableCommitment")]);
    m_disable_commitment_isSet = !json[QString("disableCommitment")].isNull() && m_disable_commitment_isValid;

    m_enable_renewal_isValid = ::OpenAPI::fromJsonValue(m_enable_renewal, json[QString("enableRenewal")]);
    m_enable_renewal_isSet = !json[QString("enableRenewal")].isNull() && m_enable_renewal_isValid;

    m_payment_cycle_isValid = ::OpenAPI::fromJsonValue(m_payment_cycle, json[QString("paymentCycle")]);
    m_payment_cycle_isSet = !json[QString("paymentCycle")].isNull() && m_payment_cycle_isValid;

    m_payment_option_isValid = ::OpenAPI::fromJsonValue(m_payment_option, json[QString("paymentOption")]);
    m_payment_option_isSet = !json[QString("paymentOption")].isNull() && m_payment_option_isValid;

    m_payment_plan_isValid = ::OpenAPI::fromJsonValue(m_payment_plan, json[QString("paymentPlan")]);
    m_payment_plan_isSet = !json[QString("paymentPlan")].isNull() && m_payment_plan_isValid;

    m_resize_unit_count_isValid = ::OpenAPI::fromJsonValue(m_resize_unit_count, json[QString("resizeUnitCount")]);
    m_resize_unit_count_isSet = !json[QString("resizeUnitCount")].isNull() && m_resize_unit_count_isValid;

    m_scheduled_renewal_offer_isValid = ::OpenAPI::fromJsonValue(m_scheduled_renewal_offer, json[QString("scheduledRenewalOffer")]);
    m_scheduled_renewal_offer_isSet = !json[QString("scheduledRenewalOffer")].isNull() && m_scheduled_renewal_offer_isValid;
}

QString OAIGoogleCloudChannelV1alpha1RenewalSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1alpha1RenewalSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_disable_commitment_isSet) {
        obj.insert(QString("disableCommitment"), ::OpenAPI::toJsonValue(m_disable_commitment));
    }
    if (m_enable_renewal_isSet) {
        obj.insert(QString("enableRenewal"), ::OpenAPI::toJsonValue(m_enable_renewal));
    }
    if (m_payment_cycle.isSet()) {
        obj.insert(QString("paymentCycle"), ::OpenAPI::toJsonValue(m_payment_cycle));
    }
    if (m_payment_option_isSet) {
        obj.insert(QString("paymentOption"), ::OpenAPI::toJsonValue(m_payment_option));
    }
    if (m_payment_plan_isSet) {
        obj.insert(QString("paymentPlan"), ::OpenAPI::toJsonValue(m_payment_plan));
    }
    if (m_resize_unit_count_isSet) {
        obj.insert(QString("resizeUnitCount"), ::OpenAPI::toJsonValue(m_resize_unit_count));
    }
    if (m_scheduled_renewal_offer_isSet) {
        obj.insert(QString("scheduledRenewalOffer"), ::OpenAPI::toJsonValue(m_scheduled_renewal_offer));
    }
    return obj;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::isDisableCommitment() const {
    return m_disable_commitment;
}
void OAIGoogleCloudChannelV1alpha1RenewalSettings::setDisableCommitment(const bool &disable_commitment) {
    m_disable_commitment = disable_commitment;
    m_disable_commitment_isSet = true;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_disable_commitment_Set() const{
    return m_disable_commitment_isSet;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_disable_commitment_Valid() const{
    return m_disable_commitment_isValid;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::isEnableRenewal() const {
    return m_enable_renewal;
}
void OAIGoogleCloudChannelV1alpha1RenewalSettings::setEnableRenewal(const bool &enable_renewal) {
    m_enable_renewal = enable_renewal;
    m_enable_renewal_isSet = true;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_enable_renewal_Set() const{
    return m_enable_renewal_isSet;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_enable_renewal_Valid() const{
    return m_enable_renewal_isValid;
}

OAIGoogleCloudChannelV1alpha1Period OAIGoogleCloudChannelV1alpha1RenewalSettings::getPaymentCycle() const {
    return m_payment_cycle;
}
void OAIGoogleCloudChannelV1alpha1RenewalSettings::setPaymentCycle(const OAIGoogleCloudChannelV1alpha1Period &payment_cycle) {
    m_payment_cycle = payment_cycle;
    m_payment_cycle_isSet = true;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_payment_cycle_Set() const{
    return m_payment_cycle_isSet;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_payment_cycle_Valid() const{
    return m_payment_cycle_isValid;
}

QString OAIGoogleCloudChannelV1alpha1RenewalSettings::getPaymentOption() const {
    return m_payment_option;
}
void OAIGoogleCloudChannelV1alpha1RenewalSettings::setPaymentOption(const QString &payment_option) {
    m_payment_option = payment_option;
    m_payment_option_isSet = true;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_payment_option_Set() const{
    return m_payment_option_isSet;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_payment_option_Valid() const{
    return m_payment_option_isValid;
}

QString OAIGoogleCloudChannelV1alpha1RenewalSettings::getPaymentPlan() const {
    return m_payment_plan;
}
void OAIGoogleCloudChannelV1alpha1RenewalSettings::setPaymentPlan(const QString &payment_plan) {
    m_payment_plan = payment_plan;
    m_payment_plan_isSet = true;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_payment_plan_Set() const{
    return m_payment_plan_isSet;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_payment_plan_Valid() const{
    return m_payment_plan_isValid;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::isResizeUnitCount() const {
    return m_resize_unit_count;
}
void OAIGoogleCloudChannelV1alpha1RenewalSettings::setResizeUnitCount(const bool &resize_unit_count) {
    m_resize_unit_count = resize_unit_count;
    m_resize_unit_count_isSet = true;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_resize_unit_count_Set() const{
    return m_resize_unit_count_isSet;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_resize_unit_count_Valid() const{
    return m_resize_unit_count_isValid;
}

QString OAIGoogleCloudChannelV1alpha1RenewalSettings::getScheduledRenewalOffer() const {
    return m_scheduled_renewal_offer;
}
void OAIGoogleCloudChannelV1alpha1RenewalSettings::setScheduledRenewalOffer(const QString &scheduled_renewal_offer) {
    m_scheduled_renewal_offer = scheduled_renewal_offer;
    m_scheduled_renewal_offer_isSet = true;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_scheduled_renewal_offer_Set() const{
    return m_scheduled_renewal_offer_isSet;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::is_scheduled_renewal_offer_Valid() const{
    return m_scheduled_renewal_offer_isValid;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disable_commitment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_renewal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_cycle.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_option_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_plan_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resize_unit_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheduled_renewal_offer_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1alpha1RenewalSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
