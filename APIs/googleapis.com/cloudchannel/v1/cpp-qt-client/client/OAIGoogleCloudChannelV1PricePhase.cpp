/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1PricePhase.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1PricePhase::OAIGoogleCloudChannelV1PricePhase(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1PricePhase::OAIGoogleCloudChannelV1PricePhase() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1PricePhase::~OAIGoogleCloudChannelV1PricePhase() {}

void OAIGoogleCloudChannelV1PricePhase::initializeModel() {

    m_first_period_isSet = false;
    m_first_period_isValid = false;

    m_last_period_isSet = false;
    m_last_period_isValid = false;

    m_period_type_isSet = false;
    m_period_type_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_price_tiers_isSet = false;
    m_price_tiers_isValid = false;
}

void OAIGoogleCloudChannelV1PricePhase::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1PricePhase::fromJsonObject(QJsonObject json) {

    m_first_period_isValid = ::OpenAPI::fromJsonValue(m_first_period, json[QString("firstPeriod")]);
    m_first_period_isSet = !json[QString("firstPeriod")].isNull() && m_first_period_isValid;

    m_last_period_isValid = ::OpenAPI::fromJsonValue(m_last_period, json[QString("lastPeriod")]);
    m_last_period_isSet = !json[QString("lastPeriod")].isNull() && m_last_period_isValid;

    m_period_type_isValid = ::OpenAPI::fromJsonValue(m_period_type, json[QString("periodType")]);
    m_period_type_isSet = !json[QString("periodType")].isNull() && m_period_type_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_price_tiers_isValid = ::OpenAPI::fromJsonValue(m_price_tiers, json[QString("priceTiers")]);
    m_price_tiers_isSet = !json[QString("priceTiers")].isNull() && m_price_tiers_isValid;
}

QString OAIGoogleCloudChannelV1PricePhase::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1PricePhase::asJsonObject() const {
    QJsonObject obj;
    if (m_first_period_isSet) {
        obj.insert(QString("firstPeriod"), ::OpenAPI::toJsonValue(m_first_period));
    }
    if (m_last_period_isSet) {
        obj.insert(QString("lastPeriod"), ::OpenAPI::toJsonValue(m_last_period));
    }
    if (m_period_type_isSet) {
        obj.insert(QString("periodType"), ::OpenAPI::toJsonValue(m_period_type));
    }
    if (m_price.isSet()) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_price_tiers.size() > 0) {
        obj.insert(QString("priceTiers"), ::OpenAPI::toJsonValue(m_price_tiers));
    }
    return obj;
}

qint32 OAIGoogleCloudChannelV1PricePhase::getFirstPeriod() const {
    return m_first_period;
}
void OAIGoogleCloudChannelV1PricePhase::setFirstPeriod(const qint32 &first_period) {
    m_first_period = first_period;
    m_first_period_isSet = true;
}

bool OAIGoogleCloudChannelV1PricePhase::is_first_period_Set() const{
    return m_first_period_isSet;
}

bool OAIGoogleCloudChannelV1PricePhase::is_first_period_Valid() const{
    return m_first_period_isValid;
}

qint32 OAIGoogleCloudChannelV1PricePhase::getLastPeriod() const {
    return m_last_period;
}
void OAIGoogleCloudChannelV1PricePhase::setLastPeriod(const qint32 &last_period) {
    m_last_period = last_period;
    m_last_period_isSet = true;
}

bool OAIGoogleCloudChannelV1PricePhase::is_last_period_Set() const{
    return m_last_period_isSet;
}

bool OAIGoogleCloudChannelV1PricePhase::is_last_period_Valid() const{
    return m_last_period_isValid;
}

QString OAIGoogleCloudChannelV1PricePhase::getPeriodType() const {
    return m_period_type;
}
void OAIGoogleCloudChannelV1PricePhase::setPeriodType(const QString &period_type) {
    m_period_type = period_type;
    m_period_type_isSet = true;
}

bool OAIGoogleCloudChannelV1PricePhase::is_period_type_Set() const{
    return m_period_type_isSet;
}

bool OAIGoogleCloudChannelV1PricePhase::is_period_type_Valid() const{
    return m_period_type_isValid;
}

OAIGoogleCloudChannelV1Price OAIGoogleCloudChannelV1PricePhase::getPrice() const {
    return m_price;
}
void OAIGoogleCloudChannelV1PricePhase::setPrice(const OAIGoogleCloudChannelV1Price &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIGoogleCloudChannelV1PricePhase::is_price_Set() const{
    return m_price_isSet;
}

bool OAIGoogleCloudChannelV1PricePhase::is_price_Valid() const{
    return m_price_isValid;
}

QList<OAIGoogleCloudChannelV1PriceTier> OAIGoogleCloudChannelV1PricePhase::getPriceTiers() const {
    return m_price_tiers;
}
void OAIGoogleCloudChannelV1PricePhase::setPriceTiers(const QList<OAIGoogleCloudChannelV1PriceTier> &price_tiers) {
    m_price_tiers = price_tiers;
    m_price_tiers_isSet = true;
}

bool OAIGoogleCloudChannelV1PricePhase::is_price_tiers_Set() const{
    return m_price_tiers_isSet;
}

bool OAIGoogleCloudChannelV1PricePhase::is_price_tiers_Valid() const{
    return m_price_tiers_isValid;
}

bool OAIGoogleCloudChannelV1PricePhase::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_period_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_tiers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1PricePhase::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
