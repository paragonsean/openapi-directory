/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1PriceByResource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1PriceByResource::OAIGoogleCloudChannelV1PriceByResource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1PriceByResource::OAIGoogleCloudChannelV1PriceByResource() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1PriceByResource::~OAIGoogleCloudChannelV1PriceByResource() {}

void OAIGoogleCloudChannelV1PriceByResource::initializeModel() {

    m_price_isSet = false;
    m_price_isValid = false;

    m_price_phases_isSet = false;
    m_price_phases_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;
}

void OAIGoogleCloudChannelV1PriceByResource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1PriceByResource::fromJsonObject(QJsonObject json) {

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_price_phases_isValid = ::OpenAPI::fromJsonValue(m_price_phases, json[QString("pricePhases")]);
    m_price_phases_isSet = !json[QString("pricePhases")].isNull() && m_price_phases_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resourceType")]);
    m_resource_type_isSet = !json[QString("resourceType")].isNull() && m_resource_type_isValid;
}

QString OAIGoogleCloudChannelV1PriceByResource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1PriceByResource::asJsonObject() const {
    QJsonObject obj;
    if (m_price.isSet()) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_price_phases.size() > 0) {
        obj.insert(QString("pricePhases"), ::OpenAPI::toJsonValue(m_price_phases));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("resourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    return obj;
}

OAIGoogleCloudChannelV1Price OAIGoogleCloudChannelV1PriceByResource::getPrice() const {
    return m_price;
}
void OAIGoogleCloudChannelV1PriceByResource::setPrice(const OAIGoogleCloudChannelV1Price &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIGoogleCloudChannelV1PriceByResource::is_price_Set() const{
    return m_price_isSet;
}

bool OAIGoogleCloudChannelV1PriceByResource::is_price_Valid() const{
    return m_price_isValid;
}

QList<OAIGoogleCloudChannelV1PricePhase> OAIGoogleCloudChannelV1PriceByResource::getPricePhases() const {
    return m_price_phases;
}
void OAIGoogleCloudChannelV1PriceByResource::setPricePhases(const QList<OAIGoogleCloudChannelV1PricePhase> &price_phases) {
    m_price_phases = price_phases;
    m_price_phases_isSet = true;
}

bool OAIGoogleCloudChannelV1PriceByResource::is_price_phases_Set() const{
    return m_price_phases_isSet;
}

bool OAIGoogleCloudChannelV1PriceByResource::is_price_phases_Valid() const{
    return m_price_phases_isValid;
}

QString OAIGoogleCloudChannelV1PriceByResource::getResourceType() const {
    return m_resource_type;
}
void OAIGoogleCloudChannelV1PriceByResource::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAIGoogleCloudChannelV1PriceByResource::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAIGoogleCloudChannelV1PriceByResource::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

bool OAIGoogleCloudChannelV1PriceByResource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_phases.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1PriceByResource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
