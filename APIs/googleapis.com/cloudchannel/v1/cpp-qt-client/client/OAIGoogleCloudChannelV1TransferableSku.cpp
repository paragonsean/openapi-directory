/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1TransferableSku.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1TransferableSku::OAIGoogleCloudChannelV1TransferableSku(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1TransferableSku::OAIGoogleCloudChannelV1TransferableSku() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1TransferableSku::~OAIGoogleCloudChannelV1TransferableSku() {}

void OAIGoogleCloudChannelV1TransferableSku::initializeModel() {

    m_legacy_sku_isSet = false;
    m_legacy_sku_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_transfer_eligibility_isSet = false;
    m_transfer_eligibility_isValid = false;
}

void OAIGoogleCloudChannelV1TransferableSku::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1TransferableSku::fromJsonObject(QJsonObject json) {

    m_legacy_sku_isValid = ::OpenAPI::fromJsonValue(m_legacy_sku, json[QString("legacySku")]);
    m_legacy_sku_isSet = !json[QString("legacySku")].isNull() && m_legacy_sku_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;

    m_transfer_eligibility_isValid = ::OpenAPI::fromJsonValue(m_transfer_eligibility, json[QString("transferEligibility")]);
    m_transfer_eligibility_isSet = !json[QString("transferEligibility")].isNull() && m_transfer_eligibility_isValid;
}

QString OAIGoogleCloudChannelV1TransferableSku::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1TransferableSku::asJsonObject() const {
    QJsonObject obj;
    if (m_legacy_sku.isSet()) {
        obj.insert(QString("legacySku"), ::OpenAPI::toJsonValue(m_legacy_sku));
    }
    if (m_sku.isSet()) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_transfer_eligibility.isSet()) {
        obj.insert(QString("transferEligibility"), ::OpenAPI::toJsonValue(m_transfer_eligibility));
    }
    return obj;
}

OAIGoogleCloudChannelV1Sku OAIGoogleCloudChannelV1TransferableSku::getLegacySku() const {
    return m_legacy_sku;
}
void OAIGoogleCloudChannelV1TransferableSku::setLegacySku(const OAIGoogleCloudChannelV1Sku &legacy_sku) {
    m_legacy_sku = legacy_sku;
    m_legacy_sku_isSet = true;
}

bool OAIGoogleCloudChannelV1TransferableSku::is_legacy_sku_Set() const{
    return m_legacy_sku_isSet;
}

bool OAIGoogleCloudChannelV1TransferableSku::is_legacy_sku_Valid() const{
    return m_legacy_sku_isValid;
}

OAIGoogleCloudChannelV1Sku OAIGoogleCloudChannelV1TransferableSku::getSku() const {
    return m_sku;
}
void OAIGoogleCloudChannelV1TransferableSku::setSku(const OAIGoogleCloudChannelV1Sku &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIGoogleCloudChannelV1TransferableSku::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIGoogleCloudChannelV1TransferableSku::is_sku_Valid() const{
    return m_sku_isValid;
}

OAIGoogleCloudChannelV1TransferEligibility OAIGoogleCloudChannelV1TransferableSku::getTransferEligibility() const {
    return m_transfer_eligibility;
}
void OAIGoogleCloudChannelV1TransferableSku::setTransferEligibility(const OAIGoogleCloudChannelV1TransferEligibility &transfer_eligibility) {
    m_transfer_eligibility = transfer_eligibility;
    m_transfer_eligibility_isSet = true;
}

bool OAIGoogleCloudChannelV1TransferableSku::is_transfer_eligibility_Set() const{
    return m_transfer_eligibility_isSet;
}

bool OAIGoogleCloudChannelV1TransferableSku::is_transfer_eligibility_Valid() const{
    return m_transfer_eligibility_isValid;
}

bool OAIGoogleCloudChannelV1TransferableSku::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_legacy_sku.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_eligibility.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1TransferableSku::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
