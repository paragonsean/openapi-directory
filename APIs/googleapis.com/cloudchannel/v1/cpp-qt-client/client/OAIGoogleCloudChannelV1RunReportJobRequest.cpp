/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1RunReportJobRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1RunReportJobRequest::OAIGoogleCloudChannelV1RunReportJobRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1RunReportJobRequest::OAIGoogleCloudChannelV1RunReportJobRequest() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1RunReportJobRequest::~OAIGoogleCloudChannelV1RunReportJobRequest() {}

void OAIGoogleCloudChannelV1RunReportJobRequest::initializeModel() {

    m_date_range_isSet = false;
    m_date_range_isValid = false;

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;
}

void OAIGoogleCloudChannelV1RunReportJobRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1RunReportJobRequest::fromJsonObject(QJsonObject json) {

    m_date_range_isValid = ::OpenAPI::fromJsonValue(m_date_range, json[QString("dateRange")]);
    m_date_range_isSet = !json[QString("dateRange")].isNull() && m_date_range_isValid;

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;
}

QString OAIGoogleCloudChannelV1RunReportJobRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1RunReportJobRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_date_range.isSet()) {
        obj.insert(QString("dateRange"), ::OpenAPI::toJsonValue(m_date_range));
    }
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    return obj;
}

OAIGoogleCloudChannelV1DateRange OAIGoogleCloudChannelV1RunReportJobRequest::getDateRange() const {
    return m_date_range;
}
void OAIGoogleCloudChannelV1RunReportJobRequest::setDateRange(const OAIGoogleCloudChannelV1DateRange &date_range) {
    m_date_range = date_range;
    m_date_range_isSet = true;
}

bool OAIGoogleCloudChannelV1RunReportJobRequest::is_date_range_Set() const{
    return m_date_range_isSet;
}

bool OAIGoogleCloudChannelV1RunReportJobRequest::is_date_range_Valid() const{
    return m_date_range_isValid;
}

QString OAIGoogleCloudChannelV1RunReportJobRequest::getFilter() const {
    return m_filter;
}
void OAIGoogleCloudChannelV1RunReportJobRequest::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGoogleCloudChannelV1RunReportJobRequest::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGoogleCloudChannelV1RunReportJobRequest::is_filter_Valid() const{
    return m_filter_isValid;
}

QString OAIGoogleCloudChannelV1RunReportJobRequest::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudChannelV1RunReportJobRequest::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudChannelV1RunReportJobRequest::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudChannelV1RunReportJobRequest::is_language_code_Valid() const{
    return m_language_code_isValid;
}

bool OAIGoogleCloudChannelV1RunReportJobRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1RunReportJobRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
