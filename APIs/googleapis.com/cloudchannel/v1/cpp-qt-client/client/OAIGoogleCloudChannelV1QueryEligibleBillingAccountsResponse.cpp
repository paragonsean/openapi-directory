/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::~OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse() {}

void OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::initializeModel() {

    m_sku_purchase_groups_isSet = false;
    m_sku_purchase_groups_isValid = false;
}

void OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::fromJsonObject(QJsonObject json) {

    m_sku_purchase_groups_isValid = ::OpenAPI::fromJsonValue(m_sku_purchase_groups, json[QString("skuPurchaseGroups")]);
    m_sku_purchase_groups_isSet = !json[QString("skuPurchaseGroups")].isNull() && m_sku_purchase_groups_isValid;
}

QString OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_sku_purchase_groups.size() > 0) {
        obj.insert(QString("skuPurchaseGroups"), ::OpenAPI::toJsonValue(m_sku_purchase_groups));
    }
    return obj;
}

QList<OAIGoogleCloudChannelV1SkuPurchaseGroup> OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::getSkuPurchaseGroups() const {
    return m_sku_purchase_groups;
}
void OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::setSkuPurchaseGroups(const QList<OAIGoogleCloudChannelV1SkuPurchaseGroup> &sku_purchase_groups) {
    m_sku_purchase_groups = sku_purchase_groups;
    m_sku_purchase_groups_isSet = true;
}

bool OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::is_sku_purchase_groups_Set() const{
    return m_sku_purchase_groups_isSet;
}

bool OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::is_sku_purchase_groups_Valid() const{
    return m_sku_purchase_groups_isValid;
}

bool OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sku_purchase_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1QueryEligibleBillingAccountsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
