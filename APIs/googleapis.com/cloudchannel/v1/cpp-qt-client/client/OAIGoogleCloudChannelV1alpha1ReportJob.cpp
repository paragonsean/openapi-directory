/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1alpha1ReportJob.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1alpha1ReportJob::OAIGoogleCloudChannelV1alpha1ReportJob(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1alpha1ReportJob::OAIGoogleCloudChannelV1alpha1ReportJob() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1alpha1ReportJob::~OAIGoogleCloudChannelV1alpha1ReportJob() {}

void OAIGoogleCloudChannelV1alpha1ReportJob::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_report_status_isSet = false;
    m_report_status_isValid = false;
}

void OAIGoogleCloudChannelV1alpha1ReportJob::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1alpha1ReportJob::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_report_status_isValid = ::OpenAPI::fromJsonValue(m_report_status, json[QString("reportStatus")]);
    m_report_status_isSet = !json[QString("reportStatus")].isNull() && m_report_status_isValid;
}

QString OAIGoogleCloudChannelV1alpha1ReportJob::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1alpha1ReportJob::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_report_status.isSet()) {
        obj.insert(QString("reportStatus"), ::OpenAPI::toJsonValue(m_report_status));
    }
    return obj;
}

QString OAIGoogleCloudChannelV1alpha1ReportJob::getName() const {
    return m_name;
}
void OAIGoogleCloudChannelV1alpha1ReportJob::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudChannelV1alpha1ReportJob::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudChannelV1alpha1ReportJob::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudChannelV1alpha1ReportStatus OAIGoogleCloudChannelV1alpha1ReportJob::getReportStatus() const {
    return m_report_status;
}
void OAIGoogleCloudChannelV1alpha1ReportJob::setReportStatus(const OAIGoogleCloudChannelV1alpha1ReportStatus &report_status) {
    m_report_status = report_status;
    m_report_status_isSet = true;
}

bool OAIGoogleCloudChannelV1alpha1ReportJob::is_report_status_Set() const{
    return m_report_status_isSet;
}

bool OAIGoogleCloudChannelV1alpha1ReportJob::is_report_status_Valid() const{
    return m_report_status_isValid;
}

bool OAIGoogleCloudChannelV1alpha1ReportJob::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1alpha1ReportJob::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
