/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1Entitlement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1Entitlement::OAIGoogleCloudChannelV1Entitlement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1Entitlement::OAIGoogleCloudChannelV1Entitlement() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1Entitlement::~OAIGoogleCloudChannelV1Entitlement() {}

void OAIGoogleCloudChannelV1Entitlement::initializeModel() {

    m_association_info_isSet = false;
    m_association_info_isValid = false;

    m_billing_account_isSet = false;
    m_billing_account_isValid = false;

    m_commitment_settings_isSet = false;
    m_commitment_settings_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_offer_isSet = false;
    m_offer_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_provisioned_service_isSet = false;
    m_provisioned_service_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_purchase_order_id_isSet = false;
    m_purchase_order_id_isValid = false;

    m_suspension_reasons_isSet = false;
    m_suspension_reasons_isValid = false;

    m_trial_settings_isSet = false;
    m_trial_settings_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudChannelV1Entitlement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1Entitlement::fromJsonObject(QJsonObject json) {

    m_association_info_isValid = ::OpenAPI::fromJsonValue(m_association_info, json[QString("associationInfo")]);
    m_association_info_isSet = !json[QString("associationInfo")].isNull() && m_association_info_isValid;

    m_billing_account_isValid = ::OpenAPI::fromJsonValue(m_billing_account, json[QString("billingAccount")]);
    m_billing_account_isSet = !json[QString("billingAccount")].isNull() && m_billing_account_isValid;

    m_commitment_settings_isValid = ::OpenAPI::fromJsonValue(m_commitment_settings, json[QString("commitmentSettings")]);
    m_commitment_settings_isSet = !json[QString("commitmentSettings")].isNull() && m_commitment_settings_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_offer_isValid = ::OpenAPI::fromJsonValue(m_offer, json[QString("offer")]);
    m_offer_isSet = !json[QString("offer")].isNull() && m_offer_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_provisioned_service_isValid = ::OpenAPI::fromJsonValue(m_provisioned_service, json[QString("provisionedService")]);
    m_provisioned_service_isSet = !json[QString("provisionedService")].isNull() && m_provisioned_service_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_purchase_order_id_isValid = ::OpenAPI::fromJsonValue(m_purchase_order_id, json[QString("purchaseOrderId")]);
    m_purchase_order_id_isSet = !json[QString("purchaseOrderId")].isNull() && m_purchase_order_id_isValid;

    m_suspension_reasons_isValid = ::OpenAPI::fromJsonValue(m_suspension_reasons, json[QString("suspensionReasons")]);
    m_suspension_reasons_isSet = !json[QString("suspensionReasons")].isNull() && m_suspension_reasons_isValid;

    m_trial_settings_isValid = ::OpenAPI::fromJsonValue(m_trial_settings, json[QString("trialSettings")]);
    m_trial_settings_isSet = !json[QString("trialSettings")].isNull() && m_trial_settings_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudChannelV1Entitlement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1Entitlement::asJsonObject() const {
    QJsonObject obj;
    if (m_association_info.isSet()) {
        obj.insert(QString("associationInfo"), ::OpenAPI::toJsonValue(m_association_info));
    }
    if (m_billing_account_isSet) {
        obj.insert(QString("billingAccount"), ::OpenAPI::toJsonValue(m_billing_account));
    }
    if (m_commitment_settings.isSet()) {
        obj.insert(QString("commitmentSettings"), ::OpenAPI::toJsonValue(m_commitment_settings));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_offer_isSet) {
        obj.insert(QString("offer"), ::OpenAPI::toJsonValue(m_offer));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_provisioned_service.isSet()) {
        obj.insert(QString("provisionedService"), ::OpenAPI::toJsonValue(m_provisioned_service));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_purchase_order_id_isSet) {
        obj.insert(QString("purchaseOrderId"), ::OpenAPI::toJsonValue(m_purchase_order_id));
    }
    if (m_suspension_reasons.size() > 0) {
        obj.insert(QString("suspensionReasons"), ::OpenAPI::toJsonValue(m_suspension_reasons));
    }
    if (m_trial_settings.isSet()) {
        obj.insert(QString("trialSettings"), ::OpenAPI::toJsonValue(m_trial_settings));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

OAIGoogleCloudChannelV1AssociationInfo OAIGoogleCloudChannelV1Entitlement::getAssociationInfo() const {
    return m_association_info;
}
void OAIGoogleCloudChannelV1Entitlement::setAssociationInfo(const OAIGoogleCloudChannelV1AssociationInfo &association_info) {
    m_association_info = association_info;
    m_association_info_isSet = true;
}

bool OAIGoogleCloudChannelV1Entitlement::is_association_info_Set() const{
    return m_association_info_isSet;
}

bool OAIGoogleCloudChannelV1Entitlement::is_association_info_Valid() const{
    return m_association_info_isValid;
}

QString OAIGoogleCloudChannelV1Entitlement::getBillingAccount() const {
    return m_billing_account;
}
void OAIGoogleCloudChannelV1Entitlement::setBillingAccount(const QString &billing_account) {
    m_billing_account = billing_account;
    m_billing_account_isSet = true;
}

bool OAIGoogleCloudChannelV1Entitlement::is_billing_account_Set() const{
    return m_billing_account_isSet;
}

bool OAIGoogleCloudChannelV1Entitlement::is_billing_account_Valid() const{
    return m_billing_account_isValid;
}

OAIGoogleCloudChannelV1CommitmentSettings OAIGoogleCloudChannelV1Entitlement::getCommitmentSettings() const {
    return m_commitment_settings;
}
void OAIGoogleCloudChannelV1Entitlement::setCommitmentSettings(const OAIGoogleCloudChannelV1CommitmentSettings &commitment_settings) {
    m_commitment_settings = commitment_settings;
    m_commitment_settings_isSet = true;
}

bool OAIGoogleCloudChannelV1Entitlement::is_commitment_settings_Set() const{
    return m_commitment_settings_isSet;
}

bool OAIGoogleCloudChannelV1Entitlement::is_commitment_settings_Valid() const{
    return m_commitment_settings_isValid;
}

QString OAIGoogleCloudChannelV1Entitlement::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudChannelV1Entitlement::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudChannelV1Entitlement::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudChannelV1Entitlement::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudChannelV1Entitlement::getName() const {
    return m_name;
}
void OAIGoogleCloudChannelV1Entitlement::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudChannelV1Entitlement::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudChannelV1Entitlement::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudChannelV1Entitlement::getOffer() const {
    return m_offer;
}
void OAIGoogleCloudChannelV1Entitlement::setOffer(const QString &offer) {
    m_offer = offer;
    m_offer_isSet = true;
}

bool OAIGoogleCloudChannelV1Entitlement::is_offer_Set() const{
    return m_offer_isSet;
}

bool OAIGoogleCloudChannelV1Entitlement::is_offer_Valid() const{
    return m_offer_isValid;
}

QList<OAIGoogleCloudChannelV1Parameter> OAIGoogleCloudChannelV1Entitlement::getParameters() const {
    return m_parameters;
}
void OAIGoogleCloudChannelV1Entitlement::setParameters(const QList<OAIGoogleCloudChannelV1Parameter> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIGoogleCloudChannelV1Entitlement::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIGoogleCloudChannelV1Entitlement::is_parameters_Valid() const{
    return m_parameters_isValid;
}

OAIGoogleCloudChannelV1ProvisionedService OAIGoogleCloudChannelV1Entitlement::getProvisionedService() const {
    return m_provisioned_service;
}
void OAIGoogleCloudChannelV1Entitlement::setProvisionedService(const OAIGoogleCloudChannelV1ProvisionedService &provisioned_service) {
    m_provisioned_service = provisioned_service;
    m_provisioned_service_isSet = true;
}

bool OAIGoogleCloudChannelV1Entitlement::is_provisioned_service_Set() const{
    return m_provisioned_service_isSet;
}

bool OAIGoogleCloudChannelV1Entitlement::is_provisioned_service_Valid() const{
    return m_provisioned_service_isValid;
}

QString OAIGoogleCloudChannelV1Entitlement::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIGoogleCloudChannelV1Entitlement::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIGoogleCloudChannelV1Entitlement::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIGoogleCloudChannelV1Entitlement::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAIGoogleCloudChannelV1Entitlement::getPurchaseOrderId() const {
    return m_purchase_order_id;
}
void OAIGoogleCloudChannelV1Entitlement::setPurchaseOrderId(const QString &purchase_order_id) {
    m_purchase_order_id = purchase_order_id;
    m_purchase_order_id_isSet = true;
}

bool OAIGoogleCloudChannelV1Entitlement::is_purchase_order_id_Set() const{
    return m_purchase_order_id_isSet;
}

bool OAIGoogleCloudChannelV1Entitlement::is_purchase_order_id_Valid() const{
    return m_purchase_order_id_isValid;
}

QList<QString> OAIGoogleCloudChannelV1Entitlement::getSuspensionReasons() const {
    return m_suspension_reasons;
}
void OAIGoogleCloudChannelV1Entitlement::setSuspensionReasons(const QList<QString> &suspension_reasons) {
    m_suspension_reasons = suspension_reasons;
    m_suspension_reasons_isSet = true;
}

bool OAIGoogleCloudChannelV1Entitlement::is_suspension_reasons_Set() const{
    return m_suspension_reasons_isSet;
}

bool OAIGoogleCloudChannelV1Entitlement::is_suspension_reasons_Valid() const{
    return m_suspension_reasons_isValid;
}

OAIGoogleCloudChannelV1TrialSettings OAIGoogleCloudChannelV1Entitlement::getTrialSettings() const {
    return m_trial_settings;
}
void OAIGoogleCloudChannelV1Entitlement::setTrialSettings(const OAIGoogleCloudChannelV1TrialSettings &trial_settings) {
    m_trial_settings = trial_settings;
    m_trial_settings_isSet = true;
}

bool OAIGoogleCloudChannelV1Entitlement::is_trial_settings_Set() const{
    return m_trial_settings_isSet;
}

bool OAIGoogleCloudChannelV1Entitlement::is_trial_settings_Valid() const{
    return m_trial_settings_isValid;
}

QString OAIGoogleCloudChannelV1Entitlement::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudChannelV1Entitlement::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudChannelV1Entitlement::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudChannelV1Entitlement::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudChannelV1Entitlement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_association_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commitment_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioned_service.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suspension_reasons.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_trial_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1Entitlement::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
