/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1Price.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1Price::OAIGoogleCloudChannelV1Price(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1Price::OAIGoogleCloudChannelV1Price() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1Price::~OAIGoogleCloudChannelV1Price() {}

void OAIGoogleCloudChannelV1Price::initializeModel() {

    m_base_price_isSet = false;
    m_base_price_isValid = false;

    m_discount_isSet = false;
    m_discount_isValid = false;

    m_effective_price_isSet = false;
    m_effective_price_isValid = false;

    m_external_price_uri_isSet = false;
    m_external_price_uri_isValid = false;
}

void OAIGoogleCloudChannelV1Price::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1Price::fromJsonObject(QJsonObject json) {

    m_base_price_isValid = ::OpenAPI::fromJsonValue(m_base_price, json[QString("basePrice")]);
    m_base_price_isSet = !json[QString("basePrice")].isNull() && m_base_price_isValid;

    m_discount_isValid = ::OpenAPI::fromJsonValue(m_discount, json[QString("discount")]);
    m_discount_isSet = !json[QString("discount")].isNull() && m_discount_isValid;

    m_effective_price_isValid = ::OpenAPI::fromJsonValue(m_effective_price, json[QString("effectivePrice")]);
    m_effective_price_isSet = !json[QString("effectivePrice")].isNull() && m_effective_price_isValid;

    m_external_price_uri_isValid = ::OpenAPI::fromJsonValue(m_external_price_uri, json[QString("externalPriceUri")]);
    m_external_price_uri_isSet = !json[QString("externalPriceUri")].isNull() && m_external_price_uri_isValid;
}

QString OAIGoogleCloudChannelV1Price::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1Price::asJsonObject() const {
    QJsonObject obj;
    if (m_base_price.isSet()) {
        obj.insert(QString("basePrice"), ::OpenAPI::toJsonValue(m_base_price));
    }
    if (m_discount_isSet) {
        obj.insert(QString("discount"), ::OpenAPI::toJsonValue(m_discount));
    }
    if (m_effective_price.isSet()) {
        obj.insert(QString("effectivePrice"), ::OpenAPI::toJsonValue(m_effective_price));
    }
    if (m_external_price_uri_isSet) {
        obj.insert(QString("externalPriceUri"), ::OpenAPI::toJsonValue(m_external_price_uri));
    }
    return obj;
}

OAIGoogleTypeMoney OAIGoogleCloudChannelV1Price::getBasePrice() const {
    return m_base_price;
}
void OAIGoogleCloudChannelV1Price::setBasePrice(const OAIGoogleTypeMoney &base_price) {
    m_base_price = base_price;
    m_base_price_isSet = true;
}

bool OAIGoogleCloudChannelV1Price::is_base_price_Set() const{
    return m_base_price_isSet;
}

bool OAIGoogleCloudChannelV1Price::is_base_price_Valid() const{
    return m_base_price_isValid;
}

double OAIGoogleCloudChannelV1Price::getDiscount() const {
    return m_discount;
}
void OAIGoogleCloudChannelV1Price::setDiscount(const double &discount) {
    m_discount = discount;
    m_discount_isSet = true;
}

bool OAIGoogleCloudChannelV1Price::is_discount_Set() const{
    return m_discount_isSet;
}

bool OAIGoogleCloudChannelV1Price::is_discount_Valid() const{
    return m_discount_isValid;
}

OAIGoogleTypeMoney OAIGoogleCloudChannelV1Price::getEffectivePrice() const {
    return m_effective_price;
}
void OAIGoogleCloudChannelV1Price::setEffectivePrice(const OAIGoogleTypeMoney &effective_price) {
    m_effective_price = effective_price;
    m_effective_price_isSet = true;
}

bool OAIGoogleCloudChannelV1Price::is_effective_price_Set() const{
    return m_effective_price_isSet;
}

bool OAIGoogleCloudChannelV1Price::is_effective_price_Valid() const{
    return m_effective_price_isValid;
}

QString OAIGoogleCloudChannelV1Price::getExternalPriceUri() const {
    return m_external_price_uri;
}
void OAIGoogleCloudChannelV1Price::setExternalPriceUri(const QString &external_price_uri) {
    m_external_price_uri = external_price_uri;
    m_external_price_uri_isSet = true;
}

bool OAIGoogleCloudChannelV1Price::is_external_price_uri_Set() const{
    return m_external_price_uri_isSet;
}

bool OAIGoogleCloudChannelV1Price::is_external_price_uri_Valid() const{
    return m_external_price_uri_isValid;
}

bool OAIGoogleCloudChannelV1Price::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_base_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_price_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1Price::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
