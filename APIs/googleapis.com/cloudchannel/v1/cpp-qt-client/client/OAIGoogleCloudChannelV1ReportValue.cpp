/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1ReportValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1ReportValue::OAIGoogleCloudChannelV1ReportValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1ReportValue::OAIGoogleCloudChannelV1ReportValue() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1ReportValue::~OAIGoogleCloudChannelV1ReportValue() {}

void OAIGoogleCloudChannelV1ReportValue::initializeModel() {

    m_date_time_value_isSet = false;
    m_date_time_value_isValid = false;

    m_date_value_isSet = false;
    m_date_value_isValid = false;

    m_decimal_value_isSet = false;
    m_decimal_value_isValid = false;

    m_int_value_isSet = false;
    m_int_value_isValid = false;

    m_money_value_isSet = false;
    m_money_value_isValid = false;

    m_string_value_isSet = false;
    m_string_value_isValid = false;
}

void OAIGoogleCloudChannelV1ReportValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1ReportValue::fromJsonObject(QJsonObject json) {

    m_date_time_value_isValid = ::OpenAPI::fromJsonValue(m_date_time_value, json[QString("dateTimeValue")]);
    m_date_time_value_isSet = !json[QString("dateTimeValue")].isNull() && m_date_time_value_isValid;

    m_date_value_isValid = ::OpenAPI::fromJsonValue(m_date_value, json[QString("dateValue")]);
    m_date_value_isSet = !json[QString("dateValue")].isNull() && m_date_value_isValid;

    m_decimal_value_isValid = ::OpenAPI::fromJsonValue(m_decimal_value, json[QString("decimalValue")]);
    m_decimal_value_isSet = !json[QString("decimalValue")].isNull() && m_decimal_value_isValid;

    m_int_value_isValid = ::OpenAPI::fromJsonValue(m_int_value, json[QString("intValue")]);
    m_int_value_isSet = !json[QString("intValue")].isNull() && m_int_value_isValid;

    m_money_value_isValid = ::OpenAPI::fromJsonValue(m_money_value, json[QString("moneyValue")]);
    m_money_value_isSet = !json[QString("moneyValue")].isNull() && m_money_value_isValid;

    m_string_value_isValid = ::OpenAPI::fromJsonValue(m_string_value, json[QString("stringValue")]);
    m_string_value_isSet = !json[QString("stringValue")].isNull() && m_string_value_isValid;
}

QString OAIGoogleCloudChannelV1ReportValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1ReportValue::asJsonObject() const {
    QJsonObject obj;
    if (m_date_time_value.isSet()) {
        obj.insert(QString("dateTimeValue"), ::OpenAPI::toJsonValue(m_date_time_value));
    }
    if (m_date_value.isSet()) {
        obj.insert(QString("dateValue"), ::OpenAPI::toJsonValue(m_date_value));
    }
    if (m_decimal_value.isSet()) {
        obj.insert(QString("decimalValue"), ::OpenAPI::toJsonValue(m_decimal_value));
    }
    if (m_int_value_isSet) {
        obj.insert(QString("intValue"), ::OpenAPI::toJsonValue(m_int_value));
    }
    if (m_money_value.isSet()) {
        obj.insert(QString("moneyValue"), ::OpenAPI::toJsonValue(m_money_value));
    }
    if (m_string_value_isSet) {
        obj.insert(QString("stringValue"), ::OpenAPI::toJsonValue(m_string_value));
    }
    return obj;
}

OAIGoogleTypeDateTime OAIGoogleCloudChannelV1ReportValue::getDateTimeValue() const {
    return m_date_time_value;
}
void OAIGoogleCloudChannelV1ReportValue::setDateTimeValue(const OAIGoogleTypeDateTime &date_time_value) {
    m_date_time_value = date_time_value;
    m_date_time_value_isSet = true;
}

bool OAIGoogleCloudChannelV1ReportValue::is_date_time_value_Set() const{
    return m_date_time_value_isSet;
}

bool OAIGoogleCloudChannelV1ReportValue::is_date_time_value_Valid() const{
    return m_date_time_value_isValid;
}

OAIGoogleTypeDate OAIGoogleCloudChannelV1ReportValue::getDateValue() const {
    return m_date_value;
}
void OAIGoogleCloudChannelV1ReportValue::setDateValue(const OAIGoogleTypeDate &date_value) {
    m_date_value = date_value;
    m_date_value_isSet = true;
}

bool OAIGoogleCloudChannelV1ReportValue::is_date_value_Set() const{
    return m_date_value_isSet;
}

bool OAIGoogleCloudChannelV1ReportValue::is_date_value_Valid() const{
    return m_date_value_isValid;
}

OAIGoogleTypeDecimal OAIGoogleCloudChannelV1ReportValue::getDecimalValue() const {
    return m_decimal_value;
}
void OAIGoogleCloudChannelV1ReportValue::setDecimalValue(const OAIGoogleTypeDecimal &decimal_value) {
    m_decimal_value = decimal_value;
    m_decimal_value_isSet = true;
}

bool OAIGoogleCloudChannelV1ReportValue::is_decimal_value_Set() const{
    return m_decimal_value_isSet;
}

bool OAIGoogleCloudChannelV1ReportValue::is_decimal_value_Valid() const{
    return m_decimal_value_isValid;
}

QString OAIGoogleCloudChannelV1ReportValue::getIntValue() const {
    return m_int_value;
}
void OAIGoogleCloudChannelV1ReportValue::setIntValue(const QString &int_value) {
    m_int_value = int_value;
    m_int_value_isSet = true;
}

bool OAIGoogleCloudChannelV1ReportValue::is_int_value_Set() const{
    return m_int_value_isSet;
}

bool OAIGoogleCloudChannelV1ReportValue::is_int_value_Valid() const{
    return m_int_value_isValid;
}

OAIGoogleTypeMoney OAIGoogleCloudChannelV1ReportValue::getMoneyValue() const {
    return m_money_value;
}
void OAIGoogleCloudChannelV1ReportValue::setMoneyValue(const OAIGoogleTypeMoney &money_value) {
    m_money_value = money_value;
    m_money_value_isSet = true;
}

bool OAIGoogleCloudChannelV1ReportValue::is_money_value_Set() const{
    return m_money_value_isSet;
}

bool OAIGoogleCloudChannelV1ReportValue::is_money_value_Valid() const{
    return m_money_value_isValid;
}

QString OAIGoogleCloudChannelV1ReportValue::getStringValue() const {
    return m_string_value;
}
void OAIGoogleCloudChannelV1ReportValue::setStringValue(const QString &string_value) {
    m_string_value = string_value;
    m_string_value_isSet = true;
}

bool OAIGoogleCloudChannelV1ReportValue::is_string_value_Set() const{
    return m_string_value_isSet;
}

bool OAIGoogleCloudChannelV1ReportValue::is_string_value_Valid() const{
    return m_string_value_isValid;
}

bool OAIGoogleCloudChannelV1ReportValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_time_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_decimal_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_int_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_money_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_string_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1ReportValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
