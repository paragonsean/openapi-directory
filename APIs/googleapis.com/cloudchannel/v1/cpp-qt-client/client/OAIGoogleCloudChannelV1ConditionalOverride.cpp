/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1ConditionalOverride.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1ConditionalOverride::OAIGoogleCloudChannelV1ConditionalOverride(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1ConditionalOverride::OAIGoogleCloudChannelV1ConditionalOverride() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1ConditionalOverride::~OAIGoogleCloudChannelV1ConditionalOverride() {}

void OAIGoogleCloudChannelV1ConditionalOverride::initializeModel() {

    m_adjustment_isSet = false;
    m_adjustment_isValid = false;

    m_rebilling_basis_isSet = false;
    m_rebilling_basis_isValid = false;

    m_repricing_condition_isSet = false;
    m_repricing_condition_isValid = false;
}

void OAIGoogleCloudChannelV1ConditionalOverride::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1ConditionalOverride::fromJsonObject(QJsonObject json) {

    m_adjustment_isValid = ::OpenAPI::fromJsonValue(m_adjustment, json[QString("adjustment")]);
    m_adjustment_isSet = !json[QString("adjustment")].isNull() && m_adjustment_isValid;

    m_rebilling_basis_isValid = ::OpenAPI::fromJsonValue(m_rebilling_basis, json[QString("rebillingBasis")]);
    m_rebilling_basis_isSet = !json[QString("rebillingBasis")].isNull() && m_rebilling_basis_isValid;

    m_repricing_condition_isValid = ::OpenAPI::fromJsonValue(m_repricing_condition, json[QString("repricingCondition")]);
    m_repricing_condition_isSet = !json[QString("repricingCondition")].isNull() && m_repricing_condition_isValid;
}

QString OAIGoogleCloudChannelV1ConditionalOverride::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1ConditionalOverride::asJsonObject() const {
    QJsonObject obj;
    if (m_adjustment.isSet()) {
        obj.insert(QString("adjustment"), ::OpenAPI::toJsonValue(m_adjustment));
    }
    if (m_rebilling_basis_isSet) {
        obj.insert(QString("rebillingBasis"), ::OpenAPI::toJsonValue(m_rebilling_basis));
    }
    if (m_repricing_condition.isSet()) {
        obj.insert(QString("repricingCondition"), ::OpenAPI::toJsonValue(m_repricing_condition));
    }
    return obj;
}

OAIGoogleCloudChannelV1RepricingAdjustment OAIGoogleCloudChannelV1ConditionalOverride::getAdjustment() const {
    return m_adjustment;
}
void OAIGoogleCloudChannelV1ConditionalOverride::setAdjustment(const OAIGoogleCloudChannelV1RepricingAdjustment &adjustment) {
    m_adjustment = adjustment;
    m_adjustment_isSet = true;
}

bool OAIGoogleCloudChannelV1ConditionalOverride::is_adjustment_Set() const{
    return m_adjustment_isSet;
}

bool OAIGoogleCloudChannelV1ConditionalOverride::is_adjustment_Valid() const{
    return m_adjustment_isValid;
}

QString OAIGoogleCloudChannelV1ConditionalOverride::getRebillingBasis() const {
    return m_rebilling_basis;
}
void OAIGoogleCloudChannelV1ConditionalOverride::setRebillingBasis(const QString &rebilling_basis) {
    m_rebilling_basis = rebilling_basis;
    m_rebilling_basis_isSet = true;
}

bool OAIGoogleCloudChannelV1ConditionalOverride::is_rebilling_basis_Set() const{
    return m_rebilling_basis_isSet;
}

bool OAIGoogleCloudChannelV1ConditionalOverride::is_rebilling_basis_Valid() const{
    return m_rebilling_basis_isValid;
}

OAIGoogleCloudChannelV1RepricingCondition OAIGoogleCloudChannelV1ConditionalOverride::getRepricingCondition() const {
    return m_repricing_condition;
}
void OAIGoogleCloudChannelV1ConditionalOverride::setRepricingCondition(const OAIGoogleCloudChannelV1RepricingCondition &repricing_condition) {
    m_repricing_condition = repricing_condition;
    m_repricing_condition_isSet = true;
}

bool OAIGoogleCloudChannelV1ConditionalOverride::is_repricing_condition_Set() const{
    return m_repricing_condition_isSet;
}

bool OAIGoogleCloudChannelV1ConditionalOverride::is_repricing_condition_Valid() const{
    return m_repricing_condition_isValid;
}

bool OAIGoogleCloudChannelV1ConditionalOverride::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_adjustment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rebilling_basis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repricing_condition.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1ConditionalOverride::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
