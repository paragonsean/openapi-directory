/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::~OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest() {}

void OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::initializeModel() {

    m_channel_partner_link_isSet = false;
    m_channel_partner_link_isValid = false;

    m_update_mask_isSet = false;
    m_update_mask_isValid = false;
}

void OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::fromJsonObject(QJsonObject json) {

    m_channel_partner_link_isValid = ::OpenAPI::fromJsonValue(m_channel_partner_link, json[QString("channelPartnerLink")]);
    m_channel_partner_link_isSet = !json[QString("channelPartnerLink")].isNull() && m_channel_partner_link_isValid;

    m_update_mask_isValid = ::OpenAPI::fromJsonValue(m_update_mask, json[QString("updateMask")]);
    m_update_mask_isSet = !json[QString("updateMask")].isNull() && m_update_mask_isValid;
}

QString OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_partner_link.isSet()) {
        obj.insert(QString("channelPartnerLink"), ::OpenAPI::toJsonValue(m_channel_partner_link));
    }
    if (m_update_mask_isSet) {
        obj.insert(QString("updateMask"), ::OpenAPI::toJsonValue(m_update_mask));
    }
    return obj;
}

OAIGoogleCloudChannelV1ChannelPartnerLink OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::getChannelPartnerLink() const {
    return m_channel_partner_link;
}
void OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::setChannelPartnerLink(const OAIGoogleCloudChannelV1ChannelPartnerLink &channel_partner_link) {
    m_channel_partner_link = channel_partner_link;
    m_channel_partner_link_isSet = true;
}

bool OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::is_channel_partner_link_Set() const{
    return m_channel_partner_link_isSet;
}

bool OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::is_channel_partner_link_Valid() const{
    return m_channel_partner_link_isValid;
}

QString OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::getUpdateMask() const {
    return m_update_mask;
}
void OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::setUpdateMask(const QString &update_mask) {
    m_update_mask = update_mask;
    m_update_mask_isSet = true;
}

bool OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::is_update_mask_Set() const{
    return m_update_mask_isSet;
}

bool OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::is_update_mask_Valid() const{
    return m_update_mask_isValid;
}

bool OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_partner_link.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_mask_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1UpdateChannelPartnerLinkRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
