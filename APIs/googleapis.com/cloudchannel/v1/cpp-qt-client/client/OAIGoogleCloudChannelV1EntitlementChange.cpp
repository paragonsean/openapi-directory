/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1EntitlementChange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1EntitlementChange::OAIGoogleCloudChannelV1EntitlementChange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1EntitlementChange::OAIGoogleCloudChannelV1EntitlementChange() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1EntitlementChange::~OAIGoogleCloudChannelV1EntitlementChange() {}

void OAIGoogleCloudChannelV1EntitlementChange::initializeModel() {

    m_activation_reason_isSet = false;
    m_activation_reason_isValid = false;

    m_cancellation_reason_isSet = false;
    m_cancellation_reason_isValid = false;

    m_change_type_isSet = false;
    m_change_type_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_entitlement_isSet = false;
    m_entitlement_isValid = false;

    m_offer_isSet = false;
    m_offer_isValid = false;

    m_r_operator_isSet = false;
    m_r_operator_isValid = false;

    m_operator_type_isSet = false;
    m_operator_type_isValid = false;

    m_other_change_reason_isSet = false;
    m_other_change_reason_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_provisioned_service_isSet = false;
    m_provisioned_service_isValid = false;

    m_suspension_reason_isSet = false;
    m_suspension_reason_isValid = false;
}

void OAIGoogleCloudChannelV1EntitlementChange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1EntitlementChange::fromJsonObject(QJsonObject json) {

    m_activation_reason_isValid = ::OpenAPI::fromJsonValue(m_activation_reason, json[QString("activationReason")]);
    m_activation_reason_isSet = !json[QString("activationReason")].isNull() && m_activation_reason_isValid;

    m_cancellation_reason_isValid = ::OpenAPI::fromJsonValue(m_cancellation_reason, json[QString("cancellationReason")]);
    m_cancellation_reason_isSet = !json[QString("cancellationReason")].isNull() && m_cancellation_reason_isValid;

    m_change_type_isValid = ::OpenAPI::fromJsonValue(m_change_type, json[QString("changeType")]);
    m_change_type_isSet = !json[QString("changeType")].isNull() && m_change_type_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_entitlement_isValid = ::OpenAPI::fromJsonValue(m_entitlement, json[QString("entitlement")]);
    m_entitlement_isSet = !json[QString("entitlement")].isNull() && m_entitlement_isValid;

    m_offer_isValid = ::OpenAPI::fromJsonValue(m_offer, json[QString("offer")]);
    m_offer_isSet = !json[QString("offer")].isNull() && m_offer_isValid;

    m_r_operator_isValid = ::OpenAPI::fromJsonValue(m_r_operator, json[QString("operator")]);
    m_r_operator_isSet = !json[QString("operator")].isNull() && m_r_operator_isValid;

    m_operator_type_isValid = ::OpenAPI::fromJsonValue(m_operator_type, json[QString("operatorType")]);
    m_operator_type_isSet = !json[QString("operatorType")].isNull() && m_operator_type_isValid;

    m_other_change_reason_isValid = ::OpenAPI::fromJsonValue(m_other_change_reason, json[QString("otherChangeReason")]);
    m_other_change_reason_isSet = !json[QString("otherChangeReason")].isNull() && m_other_change_reason_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_provisioned_service_isValid = ::OpenAPI::fromJsonValue(m_provisioned_service, json[QString("provisionedService")]);
    m_provisioned_service_isSet = !json[QString("provisionedService")].isNull() && m_provisioned_service_isValid;

    m_suspension_reason_isValid = ::OpenAPI::fromJsonValue(m_suspension_reason, json[QString("suspensionReason")]);
    m_suspension_reason_isSet = !json[QString("suspensionReason")].isNull() && m_suspension_reason_isValid;
}

QString OAIGoogleCloudChannelV1EntitlementChange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1EntitlementChange::asJsonObject() const {
    QJsonObject obj;
    if (m_activation_reason_isSet) {
        obj.insert(QString("activationReason"), ::OpenAPI::toJsonValue(m_activation_reason));
    }
    if (m_cancellation_reason_isSet) {
        obj.insert(QString("cancellationReason"), ::OpenAPI::toJsonValue(m_cancellation_reason));
    }
    if (m_change_type_isSet) {
        obj.insert(QString("changeType"), ::OpenAPI::toJsonValue(m_change_type));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_entitlement_isSet) {
        obj.insert(QString("entitlement"), ::OpenAPI::toJsonValue(m_entitlement));
    }
    if (m_offer_isSet) {
        obj.insert(QString("offer"), ::OpenAPI::toJsonValue(m_offer));
    }
    if (m_r_operator_isSet) {
        obj.insert(QString("operator"), ::OpenAPI::toJsonValue(m_r_operator));
    }
    if (m_operator_type_isSet) {
        obj.insert(QString("operatorType"), ::OpenAPI::toJsonValue(m_operator_type));
    }
    if (m_other_change_reason_isSet) {
        obj.insert(QString("otherChangeReason"), ::OpenAPI::toJsonValue(m_other_change_reason));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_provisioned_service.isSet()) {
        obj.insert(QString("provisionedService"), ::OpenAPI::toJsonValue(m_provisioned_service));
    }
    if (m_suspension_reason_isSet) {
        obj.insert(QString("suspensionReason"), ::OpenAPI::toJsonValue(m_suspension_reason));
    }
    return obj;
}

QString OAIGoogleCloudChannelV1EntitlementChange::getActivationReason() const {
    return m_activation_reason;
}
void OAIGoogleCloudChannelV1EntitlementChange::setActivationReason(const QString &activation_reason) {
    m_activation_reason = activation_reason;
    m_activation_reason_isSet = true;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_activation_reason_Set() const{
    return m_activation_reason_isSet;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_activation_reason_Valid() const{
    return m_activation_reason_isValid;
}

QString OAIGoogleCloudChannelV1EntitlementChange::getCancellationReason() const {
    return m_cancellation_reason;
}
void OAIGoogleCloudChannelV1EntitlementChange::setCancellationReason(const QString &cancellation_reason) {
    m_cancellation_reason = cancellation_reason;
    m_cancellation_reason_isSet = true;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_cancellation_reason_Set() const{
    return m_cancellation_reason_isSet;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_cancellation_reason_Valid() const{
    return m_cancellation_reason_isValid;
}

QString OAIGoogleCloudChannelV1EntitlementChange::getChangeType() const {
    return m_change_type;
}
void OAIGoogleCloudChannelV1EntitlementChange::setChangeType(const QString &change_type) {
    m_change_type = change_type;
    m_change_type_isSet = true;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_change_type_Set() const{
    return m_change_type_isSet;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_change_type_Valid() const{
    return m_change_type_isValid;
}

QString OAIGoogleCloudChannelV1EntitlementChange::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudChannelV1EntitlementChange::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudChannelV1EntitlementChange::getEntitlement() const {
    return m_entitlement;
}
void OAIGoogleCloudChannelV1EntitlementChange::setEntitlement(const QString &entitlement) {
    m_entitlement = entitlement;
    m_entitlement_isSet = true;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_entitlement_Set() const{
    return m_entitlement_isSet;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_entitlement_Valid() const{
    return m_entitlement_isValid;
}

QString OAIGoogleCloudChannelV1EntitlementChange::getOffer() const {
    return m_offer;
}
void OAIGoogleCloudChannelV1EntitlementChange::setOffer(const QString &offer) {
    m_offer = offer;
    m_offer_isSet = true;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_offer_Set() const{
    return m_offer_isSet;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_offer_Valid() const{
    return m_offer_isValid;
}

QString OAIGoogleCloudChannelV1EntitlementChange::getROperator() const {
    return m_r_operator;
}
void OAIGoogleCloudChannelV1EntitlementChange::setROperator(const QString &r_operator) {
    m_r_operator = r_operator;
    m_r_operator_isSet = true;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_r_operator_Set() const{
    return m_r_operator_isSet;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_r_operator_Valid() const{
    return m_r_operator_isValid;
}

QString OAIGoogleCloudChannelV1EntitlementChange::getOperatorType() const {
    return m_operator_type;
}
void OAIGoogleCloudChannelV1EntitlementChange::setOperatorType(const QString &operator_type) {
    m_operator_type = operator_type;
    m_operator_type_isSet = true;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_operator_type_Set() const{
    return m_operator_type_isSet;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_operator_type_Valid() const{
    return m_operator_type_isValid;
}

QString OAIGoogleCloudChannelV1EntitlementChange::getOtherChangeReason() const {
    return m_other_change_reason;
}
void OAIGoogleCloudChannelV1EntitlementChange::setOtherChangeReason(const QString &other_change_reason) {
    m_other_change_reason = other_change_reason;
    m_other_change_reason_isSet = true;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_other_change_reason_Set() const{
    return m_other_change_reason_isSet;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_other_change_reason_Valid() const{
    return m_other_change_reason_isValid;
}

QList<OAIGoogleCloudChannelV1Parameter> OAIGoogleCloudChannelV1EntitlementChange::getParameters() const {
    return m_parameters;
}
void OAIGoogleCloudChannelV1EntitlementChange::setParameters(const QList<OAIGoogleCloudChannelV1Parameter> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_parameters_Valid() const{
    return m_parameters_isValid;
}

OAIGoogleCloudChannelV1ProvisionedService OAIGoogleCloudChannelV1EntitlementChange::getProvisionedService() const {
    return m_provisioned_service;
}
void OAIGoogleCloudChannelV1EntitlementChange::setProvisionedService(const OAIGoogleCloudChannelV1ProvisionedService &provisioned_service) {
    m_provisioned_service = provisioned_service;
    m_provisioned_service_isSet = true;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_provisioned_service_Set() const{
    return m_provisioned_service_isSet;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_provisioned_service_Valid() const{
    return m_provisioned_service_isValid;
}

QString OAIGoogleCloudChannelV1EntitlementChange::getSuspensionReason() const {
    return m_suspension_reason;
}
void OAIGoogleCloudChannelV1EntitlementChange::setSuspensionReason(const QString &suspension_reason) {
    m_suspension_reason = suspension_reason;
    m_suspension_reason_isSet = true;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_suspension_reason_Set() const{
    return m_suspension_reason_isSet;
}

bool OAIGoogleCloudChannelV1EntitlementChange::is_suspension_reason_Valid() const{
    return m_suspension_reason_isValid;
}

bool OAIGoogleCloudChannelV1EntitlementChange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activation_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancellation_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entitlement_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_operator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operator_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_change_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioned_service.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_suspension_reason_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1EntitlementChange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
