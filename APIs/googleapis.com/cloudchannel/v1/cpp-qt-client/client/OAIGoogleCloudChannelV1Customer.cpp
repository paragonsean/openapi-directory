/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1Customer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1Customer::OAIGoogleCloudChannelV1Customer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1Customer::OAIGoogleCloudChannelV1Customer() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1Customer::~OAIGoogleCloudChannelV1Customer() {}

void OAIGoogleCloudChannelV1Customer::initializeModel() {

    m_alternate_email_isSet = false;
    m_alternate_email_isValid = false;

    m_channel_partner_id_isSet = false;
    m_channel_partner_id_isValid = false;

    m_cloud_identity_id_isSet = false;
    m_cloud_identity_id_isValid = false;

    m_cloud_identity_info_isSet = false;
    m_cloud_identity_info_isValid = false;

    m_correlation_id_isSet = false;
    m_correlation_id_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_domain_isSet = false;
    m_domain_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_org_display_name_isSet = false;
    m_org_display_name_isValid = false;

    m_org_postal_address_isSet = false;
    m_org_postal_address_isValid = false;

    m_primary_contact_info_isSet = false;
    m_primary_contact_info_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudChannelV1Customer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1Customer::fromJsonObject(QJsonObject json) {

    m_alternate_email_isValid = ::OpenAPI::fromJsonValue(m_alternate_email, json[QString("alternateEmail")]);
    m_alternate_email_isSet = !json[QString("alternateEmail")].isNull() && m_alternate_email_isValid;

    m_channel_partner_id_isValid = ::OpenAPI::fromJsonValue(m_channel_partner_id, json[QString("channelPartnerId")]);
    m_channel_partner_id_isSet = !json[QString("channelPartnerId")].isNull() && m_channel_partner_id_isValid;

    m_cloud_identity_id_isValid = ::OpenAPI::fromJsonValue(m_cloud_identity_id, json[QString("cloudIdentityId")]);
    m_cloud_identity_id_isSet = !json[QString("cloudIdentityId")].isNull() && m_cloud_identity_id_isValid;

    m_cloud_identity_info_isValid = ::OpenAPI::fromJsonValue(m_cloud_identity_info, json[QString("cloudIdentityInfo")]);
    m_cloud_identity_info_isSet = !json[QString("cloudIdentityInfo")].isNull() && m_cloud_identity_info_isValid;

    m_correlation_id_isValid = ::OpenAPI::fromJsonValue(m_correlation_id, json[QString("correlationId")]);
    m_correlation_id_isSet = !json[QString("correlationId")].isNull() && m_correlation_id_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_domain_isValid = ::OpenAPI::fromJsonValue(m_domain, json[QString("domain")]);
    m_domain_isSet = !json[QString("domain")].isNull() && m_domain_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_org_display_name_isValid = ::OpenAPI::fromJsonValue(m_org_display_name, json[QString("orgDisplayName")]);
    m_org_display_name_isSet = !json[QString("orgDisplayName")].isNull() && m_org_display_name_isValid;

    m_org_postal_address_isValid = ::OpenAPI::fromJsonValue(m_org_postal_address, json[QString("orgPostalAddress")]);
    m_org_postal_address_isSet = !json[QString("orgPostalAddress")].isNull() && m_org_postal_address_isValid;

    m_primary_contact_info_isValid = ::OpenAPI::fromJsonValue(m_primary_contact_info, json[QString("primaryContactInfo")]);
    m_primary_contact_info_isSet = !json[QString("primaryContactInfo")].isNull() && m_primary_contact_info_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudChannelV1Customer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1Customer::asJsonObject() const {
    QJsonObject obj;
    if (m_alternate_email_isSet) {
        obj.insert(QString("alternateEmail"), ::OpenAPI::toJsonValue(m_alternate_email));
    }
    if (m_channel_partner_id_isSet) {
        obj.insert(QString("channelPartnerId"), ::OpenAPI::toJsonValue(m_channel_partner_id));
    }
    if (m_cloud_identity_id_isSet) {
        obj.insert(QString("cloudIdentityId"), ::OpenAPI::toJsonValue(m_cloud_identity_id));
    }
    if (m_cloud_identity_info.isSet()) {
        obj.insert(QString("cloudIdentityInfo"), ::OpenAPI::toJsonValue(m_cloud_identity_info));
    }
    if (m_correlation_id_isSet) {
        obj.insert(QString("correlationId"), ::OpenAPI::toJsonValue(m_correlation_id));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_domain_isSet) {
        obj.insert(QString("domain"), ::OpenAPI::toJsonValue(m_domain));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_org_display_name_isSet) {
        obj.insert(QString("orgDisplayName"), ::OpenAPI::toJsonValue(m_org_display_name));
    }
    if (m_org_postal_address.isSet()) {
        obj.insert(QString("orgPostalAddress"), ::OpenAPI::toJsonValue(m_org_postal_address));
    }
    if (m_primary_contact_info.isSet()) {
        obj.insert(QString("primaryContactInfo"), ::OpenAPI::toJsonValue(m_primary_contact_info));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudChannelV1Customer::getAlternateEmail() const {
    return m_alternate_email;
}
void OAIGoogleCloudChannelV1Customer::setAlternateEmail(const QString &alternate_email) {
    m_alternate_email = alternate_email;
    m_alternate_email_isSet = true;
}

bool OAIGoogleCloudChannelV1Customer::is_alternate_email_Set() const{
    return m_alternate_email_isSet;
}

bool OAIGoogleCloudChannelV1Customer::is_alternate_email_Valid() const{
    return m_alternate_email_isValid;
}

QString OAIGoogleCloudChannelV1Customer::getChannelPartnerId() const {
    return m_channel_partner_id;
}
void OAIGoogleCloudChannelV1Customer::setChannelPartnerId(const QString &channel_partner_id) {
    m_channel_partner_id = channel_partner_id;
    m_channel_partner_id_isSet = true;
}

bool OAIGoogleCloudChannelV1Customer::is_channel_partner_id_Set() const{
    return m_channel_partner_id_isSet;
}

bool OAIGoogleCloudChannelV1Customer::is_channel_partner_id_Valid() const{
    return m_channel_partner_id_isValid;
}

QString OAIGoogleCloudChannelV1Customer::getCloudIdentityId() const {
    return m_cloud_identity_id;
}
void OAIGoogleCloudChannelV1Customer::setCloudIdentityId(const QString &cloud_identity_id) {
    m_cloud_identity_id = cloud_identity_id;
    m_cloud_identity_id_isSet = true;
}

bool OAIGoogleCloudChannelV1Customer::is_cloud_identity_id_Set() const{
    return m_cloud_identity_id_isSet;
}

bool OAIGoogleCloudChannelV1Customer::is_cloud_identity_id_Valid() const{
    return m_cloud_identity_id_isValid;
}

OAIGoogleCloudChannelV1CloudIdentityInfo OAIGoogleCloudChannelV1Customer::getCloudIdentityInfo() const {
    return m_cloud_identity_info;
}
void OAIGoogleCloudChannelV1Customer::setCloudIdentityInfo(const OAIGoogleCloudChannelV1CloudIdentityInfo &cloud_identity_info) {
    m_cloud_identity_info = cloud_identity_info;
    m_cloud_identity_info_isSet = true;
}

bool OAIGoogleCloudChannelV1Customer::is_cloud_identity_info_Set() const{
    return m_cloud_identity_info_isSet;
}

bool OAIGoogleCloudChannelV1Customer::is_cloud_identity_info_Valid() const{
    return m_cloud_identity_info_isValid;
}

QString OAIGoogleCloudChannelV1Customer::getCorrelationId() const {
    return m_correlation_id;
}
void OAIGoogleCloudChannelV1Customer::setCorrelationId(const QString &correlation_id) {
    m_correlation_id = correlation_id;
    m_correlation_id_isSet = true;
}

bool OAIGoogleCloudChannelV1Customer::is_correlation_id_Set() const{
    return m_correlation_id_isSet;
}

bool OAIGoogleCloudChannelV1Customer::is_correlation_id_Valid() const{
    return m_correlation_id_isValid;
}

QString OAIGoogleCloudChannelV1Customer::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudChannelV1Customer::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudChannelV1Customer::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudChannelV1Customer::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudChannelV1Customer::getDomain() const {
    return m_domain;
}
void OAIGoogleCloudChannelV1Customer::setDomain(const QString &domain) {
    m_domain = domain;
    m_domain_isSet = true;
}

bool OAIGoogleCloudChannelV1Customer::is_domain_Set() const{
    return m_domain_isSet;
}

bool OAIGoogleCloudChannelV1Customer::is_domain_Valid() const{
    return m_domain_isValid;
}

QString OAIGoogleCloudChannelV1Customer::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudChannelV1Customer::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudChannelV1Customer::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudChannelV1Customer::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QString OAIGoogleCloudChannelV1Customer::getName() const {
    return m_name;
}
void OAIGoogleCloudChannelV1Customer::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudChannelV1Customer::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudChannelV1Customer::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudChannelV1Customer::getOrgDisplayName() const {
    return m_org_display_name;
}
void OAIGoogleCloudChannelV1Customer::setOrgDisplayName(const QString &org_display_name) {
    m_org_display_name = org_display_name;
    m_org_display_name_isSet = true;
}

bool OAIGoogleCloudChannelV1Customer::is_org_display_name_Set() const{
    return m_org_display_name_isSet;
}

bool OAIGoogleCloudChannelV1Customer::is_org_display_name_Valid() const{
    return m_org_display_name_isValid;
}

OAIGoogleTypePostalAddress OAIGoogleCloudChannelV1Customer::getOrgPostalAddress() const {
    return m_org_postal_address;
}
void OAIGoogleCloudChannelV1Customer::setOrgPostalAddress(const OAIGoogleTypePostalAddress &org_postal_address) {
    m_org_postal_address = org_postal_address;
    m_org_postal_address_isSet = true;
}

bool OAIGoogleCloudChannelV1Customer::is_org_postal_address_Set() const{
    return m_org_postal_address_isSet;
}

bool OAIGoogleCloudChannelV1Customer::is_org_postal_address_Valid() const{
    return m_org_postal_address_isValid;
}

OAIGoogleCloudChannelV1ContactInfo OAIGoogleCloudChannelV1Customer::getPrimaryContactInfo() const {
    return m_primary_contact_info;
}
void OAIGoogleCloudChannelV1Customer::setPrimaryContactInfo(const OAIGoogleCloudChannelV1ContactInfo &primary_contact_info) {
    m_primary_contact_info = primary_contact_info;
    m_primary_contact_info_isSet = true;
}

bool OAIGoogleCloudChannelV1Customer::is_primary_contact_info_Set() const{
    return m_primary_contact_info_isSet;
}

bool OAIGoogleCloudChannelV1Customer::is_primary_contact_info_Valid() const{
    return m_primary_contact_info_isValid;
}

QString OAIGoogleCloudChannelV1Customer::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudChannelV1Customer::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudChannelV1Customer::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudChannelV1Customer::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudChannelV1Customer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alternate_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel_partner_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_identity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_identity_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_correlation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_org_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_org_postal_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_contact_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1Customer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
