/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1EduData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1EduData::OAIGoogleCloudChannelV1EduData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1EduData::OAIGoogleCloudChannelV1EduData() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1EduData::~OAIGoogleCloudChannelV1EduData() {}

void OAIGoogleCloudChannelV1EduData::initializeModel() {

    m_institute_size_isSet = false;
    m_institute_size_isValid = false;

    m_institute_type_isSet = false;
    m_institute_type_isValid = false;

    m_website_isSet = false;
    m_website_isValid = false;
}

void OAIGoogleCloudChannelV1EduData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1EduData::fromJsonObject(QJsonObject json) {

    m_institute_size_isValid = ::OpenAPI::fromJsonValue(m_institute_size, json[QString("instituteSize")]);
    m_institute_size_isSet = !json[QString("instituteSize")].isNull() && m_institute_size_isValid;

    m_institute_type_isValid = ::OpenAPI::fromJsonValue(m_institute_type, json[QString("instituteType")]);
    m_institute_type_isSet = !json[QString("instituteType")].isNull() && m_institute_type_isValid;

    m_website_isValid = ::OpenAPI::fromJsonValue(m_website, json[QString("website")]);
    m_website_isSet = !json[QString("website")].isNull() && m_website_isValid;
}

QString OAIGoogleCloudChannelV1EduData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1EduData::asJsonObject() const {
    QJsonObject obj;
    if (m_institute_size_isSet) {
        obj.insert(QString("instituteSize"), ::OpenAPI::toJsonValue(m_institute_size));
    }
    if (m_institute_type_isSet) {
        obj.insert(QString("instituteType"), ::OpenAPI::toJsonValue(m_institute_type));
    }
    if (m_website_isSet) {
        obj.insert(QString("website"), ::OpenAPI::toJsonValue(m_website));
    }
    return obj;
}

QString OAIGoogleCloudChannelV1EduData::getInstituteSize() const {
    return m_institute_size;
}
void OAIGoogleCloudChannelV1EduData::setInstituteSize(const QString &institute_size) {
    m_institute_size = institute_size;
    m_institute_size_isSet = true;
}

bool OAIGoogleCloudChannelV1EduData::is_institute_size_Set() const{
    return m_institute_size_isSet;
}

bool OAIGoogleCloudChannelV1EduData::is_institute_size_Valid() const{
    return m_institute_size_isValid;
}

QString OAIGoogleCloudChannelV1EduData::getInstituteType() const {
    return m_institute_type;
}
void OAIGoogleCloudChannelV1EduData::setInstituteType(const QString &institute_type) {
    m_institute_type = institute_type;
    m_institute_type_isSet = true;
}

bool OAIGoogleCloudChannelV1EduData::is_institute_type_Set() const{
    return m_institute_type_isSet;
}

bool OAIGoogleCloudChannelV1EduData::is_institute_type_Valid() const{
    return m_institute_type_isValid;
}

QString OAIGoogleCloudChannelV1EduData::getWebsite() const {
    return m_website;
}
void OAIGoogleCloudChannelV1EduData::setWebsite(const QString &website) {
    m_website = website;
    m_website_isSet = true;
}

bool OAIGoogleCloudChannelV1EduData::is_website_Set() const{
    return m_website_isSet;
}

bool OAIGoogleCloudChannelV1EduData::is_website_Valid() const{
    return m_website_isValid;
}

bool OAIGoogleCloudChannelV1EduData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_institute_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_institute_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1EduData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
