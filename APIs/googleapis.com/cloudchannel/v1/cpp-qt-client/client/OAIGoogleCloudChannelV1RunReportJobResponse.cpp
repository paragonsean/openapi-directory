/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1RunReportJobResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1RunReportJobResponse::OAIGoogleCloudChannelV1RunReportJobResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1RunReportJobResponse::OAIGoogleCloudChannelV1RunReportJobResponse() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1RunReportJobResponse::~OAIGoogleCloudChannelV1RunReportJobResponse() {}

void OAIGoogleCloudChannelV1RunReportJobResponse::initializeModel() {

    m_report_job_isSet = false;
    m_report_job_isValid = false;

    m_report_metadata_isSet = false;
    m_report_metadata_isValid = false;
}

void OAIGoogleCloudChannelV1RunReportJobResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1RunReportJobResponse::fromJsonObject(QJsonObject json) {

    m_report_job_isValid = ::OpenAPI::fromJsonValue(m_report_job, json[QString("reportJob")]);
    m_report_job_isSet = !json[QString("reportJob")].isNull() && m_report_job_isValid;

    m_report_metadata_isValid = ::OpenAPI::fromJsonValue(m_report_metadata, json[QString("reportMetadata")]);
    m_report_metadata_isSet = !json[QString("reportMetadata")].isNull() && m_report_metadata_isValid;
}

QString OAIGoogleCloudChannelV1RunReportJobResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1RunReportJobResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_report_job.isSet()) {
        obj.insert(QString("reportJob"), ::OpenAPI::toJsonValue(m_report_job));
    }
    if (m_report_metadata.isSet()) {
        obj.insert(QString("reportMetadata"), ::OpenAPI::toJsonValue(m_report_metadata));
    }
    return obj;
}

OAIGoogleCloudChannelV1ReportJob OAIGoogleCloudChannelV1RunReportJobResponse::getReportJob() const {
    return m_report_job;
}
void OAIGoogleCloudChannelV1RunReportJobResponse::setReportJob(const OAIGoogleCloudChannelV1ReportJob &report_job) {
    m_report_job = report_job;
    m_report_job_isSet = true;
}

bool OAIGoogleCloudChannelV1RunReportJobResponse::is_report_job_Set() const{
    return m_report_job_isSet;
}

bool OAIGoogleCloudChannelV1RunReportJobResponse::is_report_job_Valid() const{
    return m_report_job_isValid;
}

OAIGoogleCloudChannelV1ReportResultsMetadata OAIGoogleCloudChannelV1RunReportJobResponse::getReportMetadata() const {
    return m_report_metadata;
}
void OAIGoogleCloudChannelV1RunReportJobResponse::setReportMetadata(const OAIGoogleCloudChannelV1ReportResultsMetadata &report_metadata) {
    m_report_metadata = report_metadata;
    m_report_metadata_isSet = true;
}

bool OAIGoogleCloudChannelV1RunReportJobResponse::is_report_metadata_Set() const{
    return m_report_metadata_isSet;
}

bool OAIGoogleCloudChannelV1RunReportJobResponse::is_report_metadata_Valid() const{
    return m_report_metadata_isValid;
}

bool OAIGoogleCloudChannelV1RunReportJobResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_report_job.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1RunReportJobResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
