/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1ParameterDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1ParameterDefinition::OAIGoogleCloudChannelV1ParameterDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1ParameterDefinition::OAIGoogleCloudChannelV1ParameterDefinition() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1ParameterDefinition::~OAIGoogleCloudChannelV1ParameterDefinition() {}

void OAIGoogleCloudChannelV1ParameterDefinition::initializeModel() {

    m_allowed_values_isSet = false;
    m_allowed_values_isValid = false;

    m_max_value_isSet = false;
    m_max_value_isValid = false;

    m_min_value_isSet = false;
    m_min_value_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_optional_isSet = false;
    m_optional_isValid = false;

    m_parameter_type_isSet = false;
    m_parameter_type_isValid = false;
}

void OAIGoogleCloudChannelV1ParameterDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1ParameterDefinition::fromJsonObject(QJsonObject json) {

    m_allowed_values_isValid = ::OpenAPI::fromJsonValue(m_allowed_values, json[QString("allowedValues")]);
    m_allowed_values_isSet = !json[QString("allowedValues")].isNull() && m_allowed_values_isValid;

    m_max_value_isValid = ::OpenAPI::fromJsonValue(m_max_value, json[QString("maxValue")]);
    m_max_value_isSet = !json[QString("maxValue")].isNull() && m_max_value_isValid;

    m_min_value_isValid = ::OpenAPI::fromJsonValue(m_min_value, json[QString("minValue")]);
    m_min_value_isSet = !json[QString("minValue")].isNull() && m_min_value_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_optional_isValid = ::OpenAPI::fromJsonValue(m_optional, json[QString("optional")]);
    m_optional_isSet = !json[QString("optional")].isNull() && m_optional_isValid;

    m_parameter_type_isValid = ::OpenAPI::fromJsonValue(m_parameter_type, json[QString("parameterType")]);
    m_parameter_type_isSet = !json[QString("parameterType")].isNull() && m_parameter_type_isValid;
}

QString OAIGoogleCloudChannelV1ParameterDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1ParameterDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_allowed_values.size() > 0) {
        obj.insert(QString("allowedValues"), ::OpenAPI::toJsonValue(m_allowed_values));
    }
    if (m_max_value.isSet()) {
        obj.insert(QString("maxValue"), ::OpenAPI::toJsonValue(m_max_value));
    }
    if (m_min_value.isSet()) {
        obj.insert(QString("minValue"), ::OpenAPI::toJsonValue(m_min_value));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_optional_isSet) {
        obj.insert(QString("optional"), ::OpenAPI::toJsonValue(m_optional));
    }
    if (m_parameter_type_isSet) {
        obj.insert(QString("parameterType"), ::OpenAPI::toJsonValue(m_parameter_type));
    }
    return obj;
}

QList<OAIGoogleCloudChannelV1Value> OAIGoogleCloudChannelV1ParameterDefinition::getAllowedValues() const {
    return m_allowed_values;
}
void OAIGoogleCloudChannelV1ParameterDefinition::setAllowedValues(const QList<OAIGoogleCloudChannelV1Value> &allowed_values) {
    m_allowed_values = allowed_values;
    m_allowed_values_isSet = true;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::is_allowed_values_Set() const{
    return m_allowed_values_isSet;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::is_allowed_values_Valid() const{
    return m_allowed_values_isValid;
}

OAIGoogleCloudChannelV1Value OAIGoogleCloudChannelV1ParameterDefinition::getMaxValue() const {
    return m_max_value;
}
void OAIGoogleCloudChannelV1ParameterDefinition::setMaxValue(const OAIGoogleCloudChannelV1Value &max_value) {
    m_max_value = max_value;
    m_max_value_isSet = true;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::is_max_value_Set() const{
    return m_max_value_isSet;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::is_max_value_Valid() const{
    return m_max_value_isValid;
}

OAIGoogleCloudChannelV1Value OAIGoogleCloudChannelV1ParameterDefinition::getMinValue() const {
    return m_min_value;
}
void OAIGoogleCloudChannelV1ParameterDefinition::setMinValue(const OAIGoogleCloudChannelV1Value &min_value) {
    m_min_value = min_value;
    m_min_value_isSet = true;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::is_min_value_Set() const{
    return m_min_value_isSet;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::is_min_value_Valid() const{
    return m_min_value_isValid;
}

QString OAIGoogleCloudChannelV1ParameterDefinition::getName() const {
    return m_name;
}
void OAIGoogleCloudChannelV1ParameterDefinition::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::isOptional() const {
    return m_optional;
}
void OAIGoogleCloudChannelV1ParameterDefinition::setOptional(const bool &optional) {
    m_optional = optional;
    m_optional_isSet = true;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::is_optional_Set() const{
    return m_optional_isSet;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::is_optional_Valid() const{
    return m_optional_isValid;
}

QString OAIGoogleCloudChannelV1ParameterDefinition::getParameterType() const {
    return m_parameter_type;
}
void OAIGoogleCloudChannelV1ParameterDefinition::setParameterType(const QString &parameter_type) {
    m_parameter_type = parameter_type;
    m_parameter_type_isSet = true;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::is_parameter_type_Set() const{
    return m_parameter_type_isSet;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::is_parameter_type_Valid() const{
    return m_parameter_type_isValid;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allowed_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_optional_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameter_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1ParameterDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
