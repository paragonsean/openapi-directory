/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1ChannelPartnerLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1ChannelPartnerLink::OAIGoogleCloudChannelV1ChannelPartnerLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1ChannelPartnerLink::OAIGoogleCloudChannelV1ChannelPartnerLink() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1ChannelPartnerLink::~OAIGoogleCloudChannelV1ChannelPartnerLink() {}

void OAIGoogleCloudChannelV1ChannelPartnerLink::initializeModel() {

    m_channel_partner_cloud_identity_info_isSet = false;
    m_channel_partner_cloud_identity_info_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_invite_link_uri_isSet = false;
    m_invite_link_uri_isValid = false;

    m_link_state_isSet = false;
    m_link_state_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_public_id_isSet = false;
    m_public_id_isValid = false;

    m_reseller_cloud_identity_id_isSet = false;
    m_reseller_cloud_identity_id_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudChannelV1ChannelPartnerLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1ChannelPartnerLink::fromJsonObject(QJsonObject json) {

    m_channel_partner_cloud_identity_info_isValid = ::OpenAPI::fromJsonValue(m_channel_partner_cloud_identity_info, json[QString("channelPartnerCloudIdentityInfo")]);
    m_channel_partner_cloud_identity_info_isSet = !json[QString("channelPartnerCloudIdentityInfo")].isNull() && m_channel_partner_cloud_identity_info_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_invite_link_uri_isValid = ::OpenAPI::fromJsonValue(m_invite_link_uri, json[QString("inviteLinkUri")]);
    m_invite_link_uri_isSet = !json[QString("inviteLinkUri")].isNull() && m_invite_link_uri_isValid;

    m_link_state_isValid = ::OpenAPI::fromJsonValue(m_link_state, json[QString("linkState")]);
    m_link_state_isSet = !json[QString("linkState")].isNull() && m_link_state_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_public_id_isValid = ::OpenAPI::fromJsonValue(m_public_id, json[QString("publicId")]);
    m_public_id_isSet = !json[QString("publicId")].isNull() && m_public_id_isValid;

    m_reseller_cloud_identity_id_isValid = ::OpenAPI::fromJsonValue(m_reseller_cloud_identity_id, json[QString("resellerCloudIdentityId")]);
    m_reseller_cloud_identity_id_isSet = !json[QString("resellerCloudIdentityId")].isNull() && m_reseller_cloud_identity_id_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudChannelV1ChannelPartnerLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1ChannelPartnerLink::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_partner_cloud_identity_info.isSet()) {
        obj.insert(QString("channelPartnerCloudIdentityInfo"), ::OpenAPI::toJsonValue(m_channel_partner_cloud_identity_info));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_invite_link_uri_isSet) {
        obj.insert(QString("inviteLinkUri"), ::OpenAPI::toJsonValue(m_invite_link_uri));
    }
    if (m_link_state_isSet) {
        obj.insert(QString("linkState"), ::OpenAPI::toJsonValue(m_link_state));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_public_id_isSet) {
        obj.insert(QString("publicId"), ::OpenAPI::toJsonValue(m_public_id));
    }
    if (m_reseller_cloud_identity_id_isSet) {
        obj.insert(QString("resellerCloudIdentityId"), ::OpenAPI::toJsonValue(m_reseller_cloud_identity_id));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

OAIGoogleCloudChannelV1CloudIdentityInfo OAIGoogleCloudChannelV1ChannelPartnerLink::getChannelPartnerCloudIdentityInfo() const {
    return m_channel_partner_cloud_identity_info;
}
void OAIGoogleCloudChannelV1ChannelPartnerLink::setChannelPartnerCloudIdentityInfo(const OAIGoogleCloudChannelV1CloudIdentityInfo &channel_partner_cloud_identity_info) {
    m_channel_partner_cloud_identity_info = channel_partner_cloud_identity_info;
    m_channel_partner_cloud_identity_info_isSet = true;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_channel_partner_cloud_identity_info_Set() const{
    return m_channel_partner_cloud_identity_info_isSet;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_channel_partner_cloud_identity_info_Valid() const{
    return m_channel_partner_cloud_identity_info_isValid;
}

QString OAIGoogleCloudChannelV1ChannelPartnerLink::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudChannelV1ChannelPartnerLink::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudChannelV1ChannelPartnerLink::getInviteLinkUri() const {
    return m_invite_link_uri;
}
void OAIGoogleCloudChannelV1ChannelPartnerLink::setInviteLinkUri(const QString &invite_link_uri) {
    m_invite_link_uri = invite_link_uri;
    m_invite_link_uri_isSet = true;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_invite_link_uri_Set() const{
    return m_invite_link_uri_isSet;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_invite_link_uri_Valid() const{
    return m_invite_link_uri_isValid;
}

QString OAIGoogleCloudChannelV1ChannelPartnerLink::getLinkState() const {
    return m_link_state;
}
void OAIGoogleCloudChannelV1ChannelPartnerLink::setLinkState(const QString &link_state) {
    m_link_state = link_state;
    m_link_state_isSet = true;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_link_state_Set() const{
    return m_link_state_isSet;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_link_state_Valid() const{
    return m_link_state_isValid;
}

QString OAIGoogleCloudChannelV1ChannelPartnerLink::getName() const {
    return m_name;
}
void OAIGoogleCloudChannelV1ChannelPartnerLink::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudChannelV1ChannelPartnerLink::getPublicId() const {
    return m_public_id;
}
void OAIGoogleCloudChannelV1ChannelPartnerLink::setPublicId(const QString &public_id) {
    m_public_id = public_id;
    m_public_id_isSet = true;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_public_id_Set() const{
    return m_public_id_isSet;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_public_id_Valid() const{
    return m_public_id_isValid;
}

QString OAIGoogleCloudChannelV1ChannelPartnerLink::getResellerCloudIdentityId() const {
    return m_reseller_cloud_identity_id;
}
void OAIGoogleCloudChannelV1ChannelPartnerLink::setResellerCloudIdentityId(const QString &reseller_cloud_identity_id) {
    m_reseller_cloud_identity_id = reseller_cloud_identity_id;
    m_reseller_cloud_identity_id_isSet = true;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_reseller_cloud_identity_id_Set() const{
    return m_reseller_cloud_identity_id_isSet;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_reseller_cloud_identity_id_Valid() const{
    return m_reseller_cloud_identity_id_isValid;
}

QString OAIGoogleCloudChannelV1ChannelPartnerLink::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudChannelV1ChannelPartnerLink::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_partner_cloud_identity_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invite_link_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reseller_cloud_identity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1ChannelPartnerLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
