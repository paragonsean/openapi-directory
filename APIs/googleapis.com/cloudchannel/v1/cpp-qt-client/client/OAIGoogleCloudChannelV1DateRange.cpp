/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1DateRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1DateRange::OAIGoogleCloudChannelV1DateRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1DateRange::OAIGoogleCloudChannelV1DateRange() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1DateRange::~OAIGoogleCloudChannelV1DateRange() {}

void OAIGoogleCloudChannelV1DateRange::initializeModel() {

    m_invoice_end_date_isSet = false;
    m_invoice_end_date_isValid = false;

    m_invoice_start_date_isSet = false;
    m_invoice_start_date_isValid = false;

    m_usage_end_date_time_isSet = false;
    m_usage_end_date_time_isValid = false;

    m_usage_start_date_time_isSet = false;
    m_usage_start_date_time_isValid = false;
}

void OAIGoogleCloudChannelV1DateRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1DateRange::fromJsonObject(QJsonObject json) {

    m_invoice_end_date_isValid = ::OpenAPI::fromJsonValue(m_invoice_end_date, json[QString("invoiceEndDate")]);
    m_invoice_end_date_isSet = !json[QString("invoiceEndDate")].isNull() && m_invoice_end_date_isValid;

    m_invoice_start_date_isValid = ::OpenAPI::fromJsonValue(m_invoice_start_date, json[QString("invoiceStartDate")]);
    m_invoice_start_date_isSet = !json[QString("invoiceStartDate")].isNull() && m_invoice_start_date_isValid;

    m_usage_end_date_time_isValid = ::OpenAPI::fromJsonValue(m_usage_end_date_time, json[QString("usageEndDateTime")]);
    m_usage_end_date_time_isSet = !json[QString("usageEndDateTime")].isNull() && m_usage_end_date_time_isValid;

    m_usage_start_date_time_isValid = ::OpenAPI::fromJsonValue(m_usage_start_date_time, json[QString("usageStartDateTime")]);
    m_usage_start_date_time_isSet = !json[QString("usageStartDateTime")].isNull() && m_usage_start_date_time_isValid;
}

QString OAIGoogleCloudChannelV1DateRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1DateRange::asJsonObject() const {
    QJsonObject obj;
    if (m_invoice_end_date.isSet()) {
        obj.insert(QString("invoiceEndDate"), ::OpenAPI::toJsonValue(m_invoice_end_date));
    }
    if (m_invoice_start_date.isSet()) {
        obj.insert(QString("invoiceStartDate"), ::OpenAPI::toJsonValue(m_invoice_start_date));
    }
    if (m_usage_end_date_time.isSet()) {
        obj.insert(QString("usageEndDateTime"), ::OpenAPI::toJsonValue(m_usage_end_date_time));
    }
    if (m_usage_start_date_time.isSet()) {
        obj.insert(QString("usageStartDateTime"), ::OpenAPI::toJsonValue(m_usage_start_date_time));
    }
    return obj;
}

OAIGoogleTypeDate OAIGoogleCloudChannelV1DateRange::getInvoiceEndDate() const {
    return m_invoice_end_date;
}
void OAIGoogleCloudChannelV1DateRange::setInvoiceEndDate(const OAIGoogleTypeDate &invoice_end_date) {
    m_invoice_end_date = invoice_end_date;
    m_invoice_end_date_isSet = true;
}

bool OAIGoogleCloudChannelV1DateRange::is_invoice_end_date_Set() const{
    return m_invoice_end_date_isSet;
}

bool OAIGoogleCloudChannelV1DateRange::is_invoice_end_date_Valid() const{
    return m_invoice_end_date_isValid;
}

OAIGoogleTypeDate OAIGoogleCloudChannelV1DateRange::getInvoiceStartDate() const {
    return m_invoice_start_date;
}
void OAIGoogleCloudChannelV1DateRange::setInvoiceStartDate(const OAIGoogleTypeDate &invoice_start_date) {
    m_invoice_start_date = invoice_start_date;
    m_invoice_start_date_isSet = true;
}

bool OAIGoogleCloudChannelV1DateRange::is_invoice_start_date_Set() const{
    return m_invoice_start_date_isSet;
}

bool OAIGoogleCloudChannelV1DateRange::is_invoice_start_date_Valid() const{
    return m_invoice_start_date_isValid;
}

OAIGoogleTypeDateTime OAIGoogleCloudChannelV1DateRange::getUsageEndDateTime() const {
    return m_usage_end_date_time;
}
void OAIGoogleCloudChannelV1DateRange::setUsageEndDateTime(const OAIGoogleTypeDateTime &usage_end_date_time) {
    m_usage_end_date_time = usage_end_date_time;
    m_usage_end_date_time_isSet = true;
}

bool OAIGoogleCloudChannelV1DateRange::is_usage_end_date_time_Set() const{
    return m_usage_end_date_time_isSet;
}

bool OAIGoogleCloudChannelV1DateRange::is_usage_end_date_time_Valid() const{
    return m_usage_end_date_time_isValid;
}

OAIGoogleTypeDateTime OAIGoogleCloudChannelV1DateRange::getUsageStartDateTime() const {
    return m_usage_start_date_time;
}
void OAIGoogleCloudChannelV1DateRange::setUsageStartDateTime(const OAIGoogleTypeDateTime &usage_start_date_time) {
    m_usage_start_date_time = usage_start_date_time;
    m_usage_start_date_time_isSet = true;
}

bool OAIGoogleCloudChannelV1DateRange::is_usage_start_date_time_Set() const{
    return m_usage_start_date_time_isSet;
}

bool OAIGoogleCloudChannelV1DateRange::is_usage_start_date_time_Valid() const{
    return m_usage_start_date_time_isValid;
}

bool OAIGoogleCloudChannelV1DateRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_invoice_end_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_start_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_usage_end_date_time.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_usage_start_date_time.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1DateRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
