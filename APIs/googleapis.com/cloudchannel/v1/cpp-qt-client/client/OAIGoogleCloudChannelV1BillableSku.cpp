/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1BillableSku.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1BillableSku::OAIGoogleCloudChannelV1BillableSku(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1BillableSku::OAIGoogleCloudChannelV1BillableSku() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1BillableSku::~OAIGoogleCloudChannelV1BillableSku() {}

void OAIGoogleCloudChannelV1BillableSku::initializeModel() {

    m_service_isSet = false;
    m_service_isValid = false;

    m_service_display_name_isSet = false;
    m_service_display_name_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_sku_display_name_isSet = false;
    m_sku_display_name_isValid = false;
}

void OAIGoogleCloudChannelV1BillableSku::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1BillableSku::fromJsonObject(QJsonObject json) {

    m_service_isValid = ::OpenAPI::fromJsonValue(m_service, json[QString("service")]);
    m_service_isSet = !json[QString("service")].isNull() && m_service_isValid;

    m_service_display_name_isValid = ::OpenAPI::fromJsonValue(m_service_display_name, json[QString("serviceDisplayName")]);
    m_service_display_name_isSet = !json[QString("serviceDisplayName")].isNull() && m_service_display_name_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;

    m_sku_display_name_isValid = ::OpenAPI::fromJsonValue(m_sku_display_name, json[QString("skuDisplayName")]);
    m_sku_display_name_isSet = !json[QString("skuDisplayName")].isNull() && m_sku_display_name_isValid;
}

QString OAIGoogleCloudChannelV1BillableSku::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1BillableSku::asJsonObject() const {
    QJsonObject obj;
    if (m_service_isSet) {
        obj.insert(QString("service"), ::OpenAPI::toJsonValue(m_service));
    }
    if (m_service_display_name_isSet) {
        obj.insert(QString("serviceDisplayName"), ::OpenAPI::toJsonValue(m_service_display_name));
    }
    if (m_sku_isSet) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_sku_display_name_isSet) {
        obj.insert(QString("skuDisplayName"), ::OpenAPI::toJsonValue(m_sku_display_name));
    }
    return obj;
}

QString OAIGoogleCloudChannelV1BillableSku::getService() const {
    return m_service;
}
void OAIGoogleCloudChannelV1BillableSku::setService(const QString &service) {
    m_service = service;
    m_service_isSet = true;
}

bool OAIGoogleCloudChannelV1BillableSku::is_service_Set() const{
    return m_service_isSet;
}

bool OAIGoogleCloudChannelV1BillableSku::is_service_Valid() const{
    return m_service_isValid;
}

QString OAIGoogleCloudChannelV1BillableSku::getServiceDisplayName() const {
    return m_service_display_name;
}
void OAIGoogleCloudChannelV1BillableSku::setServiceDisplayName(const QString &service_display_name) {
    m_service_display_name = service_display_name;
    m_service_display_name_isSet = true;
}

bool OAIGoogleCloudChannelV1BillableSku::is_service_display_name_Set() const{
    return m_service_display_name_isSet;
}

bool OAIGoogleCloudChannelV1BillableSku::is_service_display_name_Valid() const{
    return m_service_display_name_isValid;
}

QString OAIGoogleCloudChannelV1BillableSku::getSku() const {
    return m_sku;
}
void OAIGoogleCloudChannelV1BillableSku::setSku(const QString &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIGoogleCloudChannelV1BillableSku::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIGoogleCloudChannelV1BillableSku::is_sku_Valid() const{
    return m_sku_isValid;
}

QString OAIGoogleCloudChannelV1BillableSku::getSkuDisplayName() const {
    return m_sku_display_name;
}
void OAIGoogleCloudChannelV1BillableSku::setSkuDisplayName(const QString &sku_display_name) {
    m_sku_display_name = sku_display_name;
    m_sku_display_name_isSet = true;
}

bool OAIGoogleCloudChannelV1BillableSku::is_sku_display_name_Set() const{
    return m_sku_display_name_isSet;
}

bool OAIGoogleCloudChannelV1BillableSku::is_sku_display_name_Valid() const{
    return m_sku_display_name_isValid;
}

bool OAIGoogleCloudChannelV1BillableSku::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1BillableSku::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
