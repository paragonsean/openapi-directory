/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudChannelV1CloudIdentityInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudChannelV1CloudIdentityInfo::OAIGoogleCloudChannelV1CloudIdentityInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudChannelV1CloudIdentityInfo::OAIGoogleCloudChannelV1CloudIdentityInfo() {
    this->initializeModel();
}

OAIGoogleCloudChannelV1CloudIdentityInfo::~OAIGoogleCloudChannelV1CloudIdentityInfo() {}

void OAIGoogleCloudChannelV1CloudIdentityInfo::initializeModel() {

    m_admin_console_uri_isSet = false;
    m_admin_console_uri_isValid = false;

    m_alternate_email_isSet = false;
    m_alternate_email_isValid = false;

    m_customer_type_isSet = false;
    m_customer_type_isValid = false;

    m_edu_data_isSet = false;
    m_edu_data_isValid = false;

    m_is_domain_verified_isSet = false;
    m_is_domain_verified_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_primary_domain_isSet = false;
    m_primary_domain_isValid = false;
}

void OAIGoogleCloudChannelV1CloudIdentityInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudChannelV1CloudIdentityInfo::fromJsonObject(QJsonObject json) {

    m_admin_console_uri_isValid = ::OpenAPI::fromJsonValue(m_admin_console_uri, json[QString("adminConsoleUri")]);
    m_admin_console_uri_isSet = !json[QString("adminConsoleUri")].isNull() && m_admin_console_uri_isValid;

    m_alternate_email_isValid = ::OpenAPI::fromJsonValue(m_alternate_email, json[QString("alternateEmail")]);
    m_alternate_email_isSet = !json[QString("alternateEmail")].isNull() && m_alternate_email_isValid;

    m_customer_type_isValid = ::OpenAPI::fromJsonValue(m_customer_type, json[QString("customerType")]);
    m_customer_type_isSet = !json[QString("customerType")].isNull() && m_customer_type_isValid;

    m_edu_data_isValid = ::OpenAPI::fromJsonValue(m_edu_data, json[QString("eduData")]);
    m_edu_data_isSet = !json[QString("eduData")].isNull() && m_edu_data_isValid;

    m_is_domain_verified_isValid = ::OpenAPI::fromJsonValue(m_is_domain_verified, json[QString("isDomainVerified")]);
    m_is_domain_verified_isSet = !json[QString("isDomainVerified")].isNull() && m_is_domain_verified_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phoneNumber")]);
    m_phone_number_isSet = !json[QString("phoneNumber")].isNull() && m_phone_number_isValid;

    m_primary_domain_isValid = ::OpenAPI::fromJsonValue(m_primary_domain, json[QString("primaryDomain")]);
    m_primary_domain_isSet = !json[QString("primaryDomain")].isNull() && m_primary_domain_isValid;
}

QString OAIGoogleCloudChannelV1CloudIdentityInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudChannelV1CloudIdentityInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_console_uri_isSet) {
        obj.insert(QString("adminConsoleUri"), ::OpenAPI::toJsonValue(m_admin_console_uri));
    }
    if (m_alternate_email_isSet) {
        obj.insert(QString("alternateEmail"), ::OpenAPI::toJsonValue(m_alternate_email));
    }
    if (m_customer_type_isSet) {
        obj.insert(QString("customerType"), ::OpenAPI::toJsonValue(m_customer_type));
    }
    if (m_edu_data.isSet()) {
        obj.insert(QString("eduData"), ::OpenAPI::toJsonValue(m_edu_data));
    }
    if (m_is_domain_verified_isSet) {
        obj.insert(QString("isDomainVerified"), ::OpenAPI::toJsonValue(m_is_domain_verified));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_primary_domain_isSet) {
        obj.insert(QString("primaryDomain"), ::OpenAPI::toJsonValue(m_primary_domain));
    }
    return obj;
}

QString OAIGoogleCloudChannelV1CloudIdentityInfo::getAdminConsoleUri() const {
    return m_admin_console_uri;
}
void OAIGoogleCloudChannelV1CloudIdentityInfo::setAdminConsoleUri(const QString &admin_console_uri) {
    m_admin_console_uri = admin_console_uri;
    m_admin_console_uri_isSet = true;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_admin_console_uri_Set() const{
    return m_admin_console_uri_isSet;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_admin_console_uri_Valid() const{
    return m_admin_console_uri_isValid;
}

QString OAIGoogleCloudChannelV1CloudIdentityInfo::getAlternateEmail() const {
    return m_alternate_email;
}
void OAIGoogleCloudChannelV1CloudIdentityInfo::setAlternateEmail(const QString &alternate_email) {
    m_alternate_email = alternate_email;
    m_alternate_email_isSet = true;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_alternate_email_Set() const{
    return m_alternate_email_isSet;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_alternate_email_Valid() const{
    return m_alternate_email_isValid;
}

QString OAIGoogleCloudChannelV1CloudIdentityInfo::getCustomerType() const {
    return m_customer_type;
}
void OAIGoogleCloudChannelV1CloudIdentityInfo::setCustomerType(const QString &customer_type) {
    m_customer_type = customer_type;
    m_customer_type_isSet = true;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_customer_type_Set() const{
    return m_customer_type_isSet;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_customer_type_Valid() const{
    return m_customer_type_isValid;
}

OAIGoogleCloudChannelV1EduData OAIGoogleCloudChannelV1CloudIdentityInfo::getEduData() const {
    return m_edu_data;
}
void OAIGoogleCloudChannelV1CloudIdentityInfo::setEduData(const OAIGoogleCloudChannelV1EduData &edu_data) {
    m_edu_data = edu_data;
    m_edu_data_isSet = true;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_edu_data_Set() const{
    return m_edu_data_isSet;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_edu_data_Valid() const{
    return m_edu_data_isValid;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::isIsDomainVerified() const {
    return m_is_domain_verified;
}
void OAIGoogleCloudChannelV1CloudIdentityInfo::setIsDomainVerified(const bool &is_domain_verified) {
    m_is_domain_verified = is_domain_verified;
    m_is_domain_verified_isSet = true;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_is_domain_verified_Set() const{
    return m_is_domain_verified_isSet;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_is_domain_verified_Valid() const{
    return m_is_domain_verified_isValid;
}

QString OAIGoogleCloudChannelV1CloudIdentityInfo::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudChannelV1CloudIdentityInfo::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QString OAIGoogleCloudChannelV1CloudIdentityInfo::getPhoneNumber() const {
    return m_phone_number;
}
void OAIGoogleCloudChannelV1CloudIdentityInfo::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIGoogleCloudChannelV1CloudIdentityInfo::getPrimaryDomain() const {
    return m_primary_domain;
}
void OAIGoogleCloudChannelV1CloudIdentityInfo::setPrimaryDomain(const QString &primary_domain) {
    m_primary_domain = primary_domain;
    m_primary_domain_isSet = true;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_primary_domain_Set() const{
    return m_primary_domain_isSet;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::is_primary_domain_Valid() const{
    return m_primary_domain_isValid;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_console_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alternate_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_edu_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_domain_verified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_domain_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudChannelV1CloudIdentityInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
