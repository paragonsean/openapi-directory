# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_channel_v1_edu_data import GoogleCloudChannelV1EduData
from openapi_server import util


class GoogleCloudChannelV1CloudIdentityInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_console_uri: str=None, alternate_email: str=None, customer_type: str=None, edu_data: GoogleCloudChannelV1EduData=None, is_domain_verified: bool=None, language_code: str=None, phone_number: str=None, primary_domain: str=None):
        """GoogleCloudChannelV1CloudIdentityInfo - a model defined in OpenAPI

        :param admin_console_uri: The admin_console_uri of this GoogleCloudChannelV1CloudIdentityInfo.
        :param alternate_email: The alternate_email of this GoogleCloudChannelV1CloudIdentityInfo.
        :param customer_type: The customer_type of this GoogleCloudChannelV1CloudIdentityInfo.
        :param edu_data: The edu_data of this GoogleCloudChannelV1CloudIdentityInfo.
        :param is_domain_verified: The is_domain_verified of this GoogleCloudChannelV1CloudIdentityInfo.
        :param language_code: The language_code of this GoogleCloudChannelV1CloudIdentityInfo.
        :param phone_number: The phone_number of this GoogleCloudChannelV1CloudIdentityInfo.
        :param primary_domain: The primary_domain of this GoogleCloudChannelV1CloudIdentityInfo.
        """
        self.openapi_types = {
            'admin_console_uri': str,
            'alternate_email': str,
            'customer_type': str,
            'edu_data': GoogleCloudChannelV1EduData,
            'is_domain_verified': bool,
            'language_code': str,
            'phone_number': str,
            'primary_domain': str
        }

        self.attribute_map = {
            'admin_console_uri': 'adminConsoleUri',
            'alternate_email': 'alternateEmail',
            'customer_type': 'customerType',
            'edu_data': 'eduData',
            'is_domain_verified': 'isDomainVerified',
            'language_code': 'languageCode',
            'phone_number': 'phoneNumber',
            'primary_domain': 'primaryDomain'
        }

        self._admin_console_uri = admin_console_uri
        self._alternate_email = alternate_email
        self._customer_type = customer_type
        self._edu_data = edu_data
        self._is_domain_verified = is_domain_verified
        self._language_code = language_code
        self._phone_number = phone_number
        self._primary_domain = primary_domain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1CloudIdentityInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1CloudIdentityInfo of this GoogleCloudChannelV1CloudIdentityInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_console_uri(self):
        """Gets the admin_console_uri of this GoogleCloudChannelV1CloudIdentityInfo.

        Output only. URI of Customer's Admin console dashboard.

        :return: The admin_console_uri of this GoogleCloudChannelV1CloudIdentityInfo.
        :rtype: str
        """
        return self._admin_console_uri

    @admin_console_uri.setter
    def admin_console_uri(self, admin_console_uri):
        """Sets the admin_console_uri of this GoogleCloudChannelV1CloudIdentityInfo.

        Output only. URI of Customer's Admin console dashboard.

        :param admin_console_uri: The admin_console_uri of this GoogleCloudChannelV1CloudIdentityInfo.
        :type admin_console_uri: str
        """

        self._admin_console_uri = admin_console_uri

    @property
    def alternate_email(self):
        """Gets the alternate_email of this GoogleCloudChannelV1CloudIdentityInfo.

        The alternate email.

        :return: The alternate_email of this GoogleCloudChannelV1CloudIdentityInfo.
        :rtype: str
        """
        return self._alternate_email

    @alternate_email.setter
    def alternate_email(self, alternate_email):
        """Sets the alternate_email of this GoogleCloudChannelV1CloudIdentityInfo.

        The alternate email.

        :param alternate_email: The alternate_email of this GoogleCloudChannelV1CloudIdentityInfo.
        :type alternate_email: str
        """

        self._alternate_email = alternate_email

    @property
    def customer_type(self):
        """Gets the customer_type of this GoogleCloudChannelV1CloudIdentityInfo.

        CustomerType indicates verification type needed for using services.

        :return: The customer_type of this GoogleCloudChannelV1CloudIdentityInfo.
        :rtype: str
        """
        return self._customer_type

    @customer_type.setter
    def customer_type(self, customer_type):
        """Sets the customer_type of this GoogleCloudChannelV1CloudIdentityInfo.

        CustomerType indicates verification type needed for using services.

        :param customer_type: The customer_type of this GoogleCloudChannelV1CloudIdentityInfo.
        :type customer_type: str
        """
        allowed_values = ["CUSTOMER_TYPE_UNSPECIFIED", "DOMAIN", "TEAM"]  # noqa: E501
        if customer_type not in allowed_values:
            raise ValueError(
                "Invalid value for `customer_type` ({0}), must be one of {1}"
                .format(customer_type, allowed_values)
            )

        self._customer_type = customer_type

    @property
    def edu_data(self):
        """Gets the edu_data of this GoogleCloudChannelV1CloudIdentityInfo.


        :return: The edu_data of this GoogleCloudChannelV1CloudIdentityInfo.
        :rtype: GoogleCloudChannelV1EduData
        """
        return self._edu_data

    @edu_data.setter
    def edu_data(self, edu_data):
        """Sets the edu_data of this GoogleCloudChannelV1CloudIdentityInfo.


        :param edu_data: The edu_data of this GoogleCloudChannelV1CloudIdentityInfo.
        :type edu_data: GoogleCloudChannelV1EduData
        """

        self._edu_data = edu_data

    @property
    def is_domain_verified(self):
        """Gets the is_domain_verified of this GoogleCloudChannelV1CloudIdentityInfo.

        Output only. Whether the domain is verified. This field is not returned for a Customer's cloud_identity_info resource. Partners can use the domains.get() method of the Workspace SDK's Directory API, or listen to the PRIMARY_DOMAIN_VERIFIED Pub/Sub event in to track domain verification of their resolve Workspace customers.

        :return: The is_domain_verified of this GoogleCloudChannelV1CloudIdentityInfo.
        :rtype: bool
        """
        return self._is_domain_verified

    @is_domain_verified.setter
    def is_domain_verified(self, is_domain_verified):
        """Sets the is_domain_verified of this GoogleCloudChannelV1CloudIdentityInfo.

        Output only. Whether the domain is verified. This field is not returned for a Customer's cloud_identity_info resource. Partners can use the domains.get() method of the Workspace SDK's Directory API, or listen to the PRIMARY_DOMAIN_VERIFIED Pub/Sub event in to track domain verification of their resolve Workspace customers.

        :param is_domain_verified: The is_domain_verified of this GoogleCloudChannelV1CloudIdentityInfo.
        :type is_domain_verified: bool
        """

        self._is_domain_verified = is_domain_verified

    @property
    def language_code(self):
        """Gets the language_code of this GoogleCloudChannelV1CloudIdentityInfo.

        Language code.

        :return: The language_code of this GoogleCloudChannelV1CloudIdentityInfo.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleCloudChannelV1CloudIdentityInfo.

        Language code.

        :param language_code: The language_code of this GoogleCloudChannelV1CloudIdentityInfo.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def phone_number(self):
        """Gets the phone_number of this GoogleCloudChannelV1CloudIdentityInfo.

        Phone number associated with the Cloud Identity.

        :return: The phone_number of this GoogleCloudChannelV1CloudIdentityInfo.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this GoogleCloudChannelV1CloudIdentityInfo.

        Phone number associated with the Cloud Identity.

        :param phone_number: The phone_number of this GoogleCloudChannelV1CloudIdentityInfo.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def primary_domain(self):
        """Gets the primary_domain of this GoogleCloudChannelV1CloudIdentityInfo.

        Output only. The primary domain name.

        :return: The primary_domain of this GoogleCloudChannelV1CloudIdentityInfo.
        :rtype: str
        """
        return self._primary_domain

    @primary_domain.setter
    def primary_domain(self, primary_domain):
        """Sets the primary_domain of this GoogleCloudChannelV1CloudIdentityInfo.

        Output only. The primary domain name.

        :param primary_domain: The primary_domain of this GoogleCloudChannelV1CloudIdentityInfo.
        :type primary_domain: str
        """

        self._primary_domain = primary_domain
