# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_channel_v1_marketing_info import GoogleCloudChannelV1MarketingInfo
from openapi_server import util


class GoogleCloudChannelV1Product(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, marketing_info: GoogleCloudChannelV1MarketingInfo=None, name: str=None):
        """GoogleCloudChannelV1Product - a model defined in OpenAPI

        :param marketing_info: The marketing_info of this GoogleCloudChannelV1Product.
        :param name: The name of this GoogleCloudChannelV1Product.
        """
        self.openapi_types = {
            'marketing_info': GoogleCloudChannelV1MarketingInfo,
            'name': str
        }

        self.attribute_map = {
            'marketing_info': 'marketingInfo',
            'name': 'name'
        }

        self._marketing_info = marketing_info
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1Product':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1Product of this GoogleCloudChannelV1Product.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def marketing_info(self):
        """Gets the marketing_info of this GoogleCloudChannelV1Product.


        :return: The marketing_info of this GoogleCloudChannelV1Product.
        :rtype: GoogleCloudChannelV1MarketingInfo
        """
        return self._marketing_info

    @marketing_info.setter
    def marketing_info(self, marketing_info):
        """Sets the marketing_info of this GoogleCloudChannelV1Product.


        :param marketing_info: The marketing_info of this GoogleCloudChannelV1Product.
        :type marketing_info: GoogleCloudChannelV1MarketingInfo
        """

        self._marketing_info = marketing_info

    @property
    def name(self):
        """Gets the name of this GoogleCloudChannelV1Product.

        Resource Name of the Product. Format: products/{product_id}

        :return: The name of this GoogleCloudChannelV1Product.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudChannelV1Product.

        Resource Name of the Product. Format: products/{product_id}

        :param name: The name of this GoogleCloudChannelV1Product.
        :type name: str
        """

        self._name = name
