# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_channel_v1_association_info import GoogleCloudChannelV1AssociationInfo
from openapi_server.models.google_cloud_channel_v1_commitment_settings import GoogleCloudChannelV1CommitmentSettings
from openapi_server.models.google_cloud_channel_v1_parameter import GoogleCloudChannelV1Parameter
from openapi_server.models.google_cloud_channel_v1_provisioned_service import GoogleCloudChannelV1ProvisionedService
from openapi_server.models.google_cloud_channel_v1_trial_settings import GoogleCloudChannelV1TrialSettings
from openapi_server import util


class GoogleCloudChannelV1Entitlement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, association_info: GoogleCloudChannelV1AssociationInfo=None, billing_account: str=None, commitment_settings: GoogleCloudChannelV1CommitmentSettings=None, create_time: str=None, name: str=None, offer: str=None, parameters: List[GoogleCloudChannelV1Parameter]=None, provisioned_service: GoogleCloudChannelV1ProvisionedService=None, provisioning_state: str=None, purchase_order_id: str=None, suspension_reasons: List[str]=None, trial_settings: GoogleCloudChannelV1TrialSettings=None, update_time: str=None):
        """GoogleCloudChannelV1Entitlement - a model defined in OpenAPI

        :param association_info: The association_info of this GoogleCloudChannelV1Entitlement.
        :param billing_account: The billing_account of this GoogleCloudChannelV1Entitlement.
        :param commitment_settings: The commitment_settings of this GoogleCloudChannelV1Entitlement.
        :param create_time: The create_time of this GoogleCloudChannelV1Entitlement.
        :param name: The name of this GoogleCloudChannelV1Entitlement.
        :param offer: The offer of this GoogleCloudChannelV1Entitlement.
        :param parameters: The parameters of this GoogleCloudChannelV1Entitlement.
        :param provisioned_service: The provisioned_service of this GoogleCloudChannelV1Entitlement.
        :param provisioning_state: The provisioning_state of this GoogleCloudChannelV1Entitlement.
        :param purchase_order_id: The purchase_order_id of this GoogleCloudChannelV1Entitlement.
        :param suspension_reasons: The suspension_reasons of this GoogleCloudChannelV1Entitlement.
        :param trial_settings: The trial_settings of this GoogleCloudChannelV1Entitlement.
        :param update_time: The update_time of this GoogleCloudChannelV1Entitlement.
        """
        self.openapi_types = {
            'association_info': GoogleCloudChannelV1AssociationInfo,
            'billing_account': str,
            'commitment_settings': GoogleCloudChannelV1CommitmentSettings,
            'create_time': str,
            'name': str,
            'offer': str,
            'parameters': List[GoogleCloudChannelV1Parameter],
            'provisioned_service': GoogleCloudChannelV1ProvisionedService,
            'provisioning_state': str,
            'purchase_order_id': str,
            'suspension_reasons': List[str],
            'trial_settings': GoogleCloudChannelV1TrialSettings,
            'update_time': str
        }

        self.attribute_map = {
            'association_info': 'associationInfo',
            'billing_account': 'billingAccount',
            'commitment_settings': 'commitmentSettings',
            'create_time': 'createTime',
            'name': 'name',
            'offer': 'offer',
            'parameters': 'parameters',
            'provisioned_service': 'provisionedService',
            'provisioning_state': 'provisioningState',
            'purchase_order_id': 'purchaseOrderId',
            'suspension_reasons': 'suspensionReasons',
            'trial_settings': 'trialSettings',
            'update_time': 'updateTime'
        }

        self._association_info = association_info
        self._billing_account = billing_account
        self._commitment_settings = commitment_settings
        self._create_time = create_time
        self._name = name
        self._offer = offer
        self._parameters = parameters
        self._provisioned_service = provisioned_service
        self._provisioning_state = provisioning_state
        self._purchase_order_id = purchase_order_id
        self._suspension_reasons = suspension_reasons
        self._trial_settings = trial_settings
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1Entitlement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1Entitlement of this GoogleCloudChannelV1Entitlement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def association_info(self):
        """Gets the association_info of this GoogleCloudChannelV1Entitlement.


        :return: The association_info of this GoogleCloudChannelV1Entitlement.
        :rtype: GoogleCloudChannelV1AssociationInfo
        """
        return self._association_info

    @association_info.setter
    def association_info(self, association_info):
        """Sets the association_info of this GoogleCloudChannelV1Entitlement.


        :param association_info: The association_info of this GoogleCloudChannelV1Entitlement.
        :type association_info: GoogleCloudChannelV1AssociationInfo
        """

        self._association_info = association_info

    @property
    def billing_account(self):
        """Gets the billing_account of this GoogleCloudChannelV1Entitlement.

        Optional. The billing account resource name that is used to pay for this entitlement.

        :return: The billing_account of this GoogleCloudChannelV1Entitlement.
        :rtype: str
        """
        return self._billing_account

    @billing_account.setter
    def billing_account(self, billing_account):
        """Sets the billing_account of this GoogleCloudChannelV1Entitlement.

        Optional. The billing account resource name that is used to pay for this entitlement.

        :param billing_account: The billing_account of this GoogleCloudChannelV1Entitlement.
        :type billing_account: str
        """

        self._billing_account = billing_account

    @property
    def commitment_settings(self):
        """Gets the commitment_settings of this GoogleCloudChannelV1Entitlement.


        :return: The commitment_settings of this GoogleCloudChannelV1Entitlement.
        :rtype: GoogleCloudChannelV1CommitmentSettings
        """
        return self._commitment_settings

    @commitment_settings.setter
    def commitment_settings(self, commitment_settings):
        """Sets the commitment_settings of this GoogleCloudChannelV1Entitlement.


        :param commitment_settings: The commitment_settings of this GoogleCloudChannelV1Entitlement.
        :type commitment_settings: GoogleCloudChannelV1CommitmentSettings
        """

        self._commitment_settings = commitment_settings

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudChannelV1Entitlement.

        Output only. The time at which the entitlement is created.

        :return: The create_time of this GoogleCloudChannelV1Entitlement.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudChannelV1Entitlement.

        Output only. The time at which the entitlement is created.

        :param create_time: The create_time of this GoogleCloudChannelV1Entitlement.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def name(self):
        """Gets the name of this GoogleCloudChannelV1Entitlement.

        Output only. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}.

        :return: The name of this GoogleCloudChannelV1Entitlement.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudChannelV1Entitlement.

        Output only. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}.

        :param name: The name of this GoogleCloudChannelV1Entitlement.
        :type name: str
        """

        self._name = name

    @property
    def offer(self):
        """Gets the offer of this GoogleCloudChannelV1Entitlement.

        Required. The offer resource name for which the entitlement is to be created. Takes the form: accounts/{account_id}/offers/{offer_id}.

        :return: The offer of this GoogleCloudChannelV1Entitlement.
        :rtype: str
        """
        return self._offer

    @offer.setter
    def offer(self, offer):
        """Sets the offer of this GoogleCloudChannelV1Entitlement.

        Required. The offer resource name for which the entitlement is to be created. Takes the form: accounts/{account_id}/offers/{offer_id}.

        :param offer: The offer of this GoogleCloudChannelV1Entitlement.
        :type offer: str
        """

        self._offer = offer

    @property
    def parameters(self):
        """Gets the parameters of this GoogleCloudChannelV1Entitlement.

        Extended entitlement parameters. When creating an entitlement, valid parameter names and values are defined in the Offer.parameter_definitions. For Google Workspace, the following Parameters may be accepted as input: - max_units: The maximum assignable units for a flexible offer OR - num_units: The total commitment for commitment-based offers The response may additionally include the following output-only Parameters: - assigned_units: The number of licenses assigned to users. For Google Cloud billing subaccounts, the following Parameter may be accepted as input: - display_name: The display name of the billing subaccount.

        :return: The parameters of this GoogleCloudChannelV1Entitlement.
        :rtype: List[GoogleCloudChannelV1Parameter]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleCloudChannelV1Entitlement.

        Extended entitlement parameters. When creating an entitlement, valid parameter names and values are defined in the Offer.parameter_definitions. For Google Workspace, the following Parameters may be accepted as input: - max_units: The maximum assignable units for a flexible offer OR - num_units: The total commitment for commitment-based offers The response may additionally include the following output-only Parameters: - assigned_units: The number of licenses assigned to users. For Google Cloud billing subaccounts, the following Parameter may be accepted as input: - display_name: The display name of the billing subaccount.

        :param parameters: The parameters of this GoogleCloudChannelV1Entitlement.
        :type parameters: List[GoogleCloudChannelV1Parameter]
        """

        self._parameters = parameters

    @property
    def provisioned_service(self):
        """Gets the provisioned_service of this GoogleCloudChannelV1Entitlement.


        :return: The provisioned_service of this GoogleCloudChannelV1Entitlement.
        :rtype: GoogleCloudChannelV1ProvisionedService
        """
        return self._provisioned_service

    @provisioned_service.setter
    def provisioned_service(self, provisioned_service):
        """Sets the provisioned_service of this GoogleCloudChannelV1Entitlement.


        :param provisioned_service: The provisioned_service of this GoogleCloudChannelV1Entitlement.
        :type provisioned_service: GoogleCloudChannelV1ProvisionedService
        """

        self._provisioned_service = provisioned_service

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this GoogleCloudChannelV1Entitlement.

        Output only. Current provisioning state of the entitlement.

        :return: The provisioning_state of this GoogleCloudChannelV1Entitlement.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this GoogleCloudChannelV1Entitlement.

        Output only. Current provisioning state of the entitlement.

        :param provisioning_state: The provisioning_state of this GoogleCloudChannelV1Entitlement.
        :type provisioning_state: str
        """
        allowed_values = ["PROVISIONING_STATE_UNSPECIFIED", "ACTIVE", "SUSPENDED"]  # noqa: E501
        if provisioning_state not in allowed_values:
            raise ValueError(
                "Invalid value for `provisioning_state` ({0}), must be one of {1}"
                .format(provisioning_state, allowed_values)
            )

        self._provisioning_state = provisioning_state

    @property
    def purchase_order_id(self):
        """Gets the purchase_order_id of this GoogleCloudChannelV1Entitlement.

        Optional. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given, it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters. This is only supported for Google Workspace entitlements.

        :return: The purchase_order_id of this GoogleCloudChannelV1Entitlement.
        :rtype: str
        """
        return self._purchase_order_id

    @purchase_order_id.setter
    def purchase_order_id(self, purchase_order_id):
        """Sets the purchase_order_id of this GoogleCloudChannelV1Entitlement.

        Optional. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given, it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters. This is only supported for Google Workspace entitlements.

        :param purchase_order_id: The purchase_order_id of this GoogleCloudChannelV1Entitlement.
        :type purchase_order_id: str
        """

        self._purchase_order_id = purchase_order_id

    @property
    def suspension_reasons(self):
        """Gets the suspension_reasons of this GoogleCloudChannelV1Entitlement.

        Output only. Enumerable of all current suspension reasons for an entitlement.

        :return: The suspension_reasons of this GoogleCloudChannelV1Entitlement.
        :rtype: List[str]
        """
        return self._suspension_reasons

    @suspension_reasons.setter
    def suspension_reasons(self, suspension_reasons):
        """Sets the suspension_reasons of this GoogleCloudChannelV1Entitlement.

        Output only. Enumerable of all current suspension reasons for an entitlement.

        :param suspension_reasons: The suspension_reasons of this GoogleCloudChannelV1Entitlement.
        :type suspension_reasons: List[str]
        """
        allowed_values = ["SUSPENSION_REASON_UNSPECIFIED", "RESELLER_INITIATED", "TRIAL_ENDED", "RENEWAL_WITH_TYPE_CANCEL", "PENDING_TOS_ACCEPTANCE", "OTHER"]  # noqa: E501
        if not set(suspension_reasons).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `suspension_reasons` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(suspension_reasons) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._suspension_reasons = suspension_reasons

    @property
    def trial_settings(self):
        """Gets the trial_settings of this GoogleCloudChannelV1Entitlement.


        :return: The trial_settings of this GoogleCloudChannelV1Entitlement.
        :rtype: GoogleCloudChannelV1TrialSettings
        """
        return self._trial_settings

    @trial_settings.setter
    def trial_settings(self, trial_settings):
        """Sets the trial_settings of this GoogleCloudChannelV1Entitlement.


        :param trial_settings: The trial_settings of this GoogleCloudChannelV1Entitlement.
        :type trial_settings: GoogleCloudChannelV1TrialSettings
        """

        self._trial_settings = trial_settings

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudChannelV1Entitlement.

        Output only. The time at which the entitlement is updated.

        :return: The update_time of this GoogleCloudChannelV1Entitlement.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudChannelV1Entitlement.

        Output only. The time at which the entitlement is updated.

        :param update_time: The update_time of this GoogleCloudChannelV1Entitlement.
        :type update_time: str
        """

        self._update_time = update_time
