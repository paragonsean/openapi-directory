# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudChannelV1EduData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, institute_size: str=None, institute_type: str=None, website: str=None):
        """GoogleCloudChannelV1EduData - a model defined in OpenAPI

        :param institute_size: The institute_size of this GoogleCloudChannelV1EduData.
        :param institute_type: The institute_type of this GoogleCloudChannelV1EduData.
        :param website: The website of this GoogleCloudChannelV1EduData.
        """
        self.openapi_types = {
            'institute_size': str,
            'institute_type': str,
            'website': str
        }

        self.attribute_map = {
            'institute_size': 'instituteSize',
            'institute_type': 'instituteType',
            'website': 'website'
        }

        self._institute_size = institute_size
        self._institute_type = institute_type
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1EduData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1EduData of this GoogleCloudChannelV1EduData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def institute_size(self):
        """Gets the institute_size of this GoogleCloudChannelV1EduData.

        Size of the institute.

        :return: The institute_size of this GoogleCloudChannelV1EduData.
        :rtype: str
        """
        return self._institute_size

    @institute_size.setter
    def institute_size(self, institute_size):
        """Sets the institute_size of this GoogleCloudChannelV1EduData.

        Size of the institute.

        :param institute_size: The institute_size of this GoogleCloudChannelV1EduData.
        :type institute_size: str
        """
        allowed_values = ["INSTITUTE_SIZE_UNSPECIFIED", "SIZE_1_100", "SIZE_101_500", "SIZE_501_1000", "SIZE_1001_2000", "SIZE_2001_5000", "SIZE_5001_10000", "SIZE_10001_OR_MORE"]  # noqa: E501
        if institute_size not in allowed_values:
            raise ValueError(
                "Invalid value for `institute_size` ({0}), must be one of {1}"
                .format(institute_size, allowed_values)
            )

        self._institute_size = institute_size

    @property
    def institute_type(self):
        """Gets the institute_type of this GoogleCloudChannelV1EduData.

        Designated institute type of customer.

        :return: The institute_type of this GoogleCloudChannelV1EduData.
        :rtype: str
        """
        return self._institute_type

    @institute_type.setter
    def institute_type(self, institute_type):
        """Sets the institute_type of this GoogleCloudChannelV1EduData.

        Designated institute type of customer.

        :param institute_type: The institute_type of this GoogleCloudChannelV1EduData.
        :type institute_type: str
        """
        allowed_values = ["INSTITUTE_TYPE_UNSPECIFIED", "K12", "UNIVERSITY"]  # noqa: E501
        if institute_type not in allowed_values:
            raise ValueError(
                "Invalid value for `institute_type` ({0}), must be one of {1}"
                .format(institute_type, allowed_values)
            )

        self._institute_type = institute_type

    @property
    def website(self):
        """Gets the website of this GoogleCloudChannelV1EduData.

        Web address for the edu customer's institution.

        :return: The website of this GoogleCloudChannelV1EduData.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this GoogleCloudChannelV1EduData.

        Web address for the edu customer's institution.

        :param website: The website of this GoogleCloudChannelV1EduData.
        :type website: str
        """

        self._website = website
