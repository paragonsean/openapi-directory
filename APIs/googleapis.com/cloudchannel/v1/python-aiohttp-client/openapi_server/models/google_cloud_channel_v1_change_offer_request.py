# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_channel_v1_parameter import GoogleCloudChannelV1Parameter
from openapi_server import util


class GoogleCloudChannelV1ChangeOfferRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_account: str=None, offer: str=None, parameters: List[GoogleCloudChannelV1Parameter]=None, purchase_order_id: str=None, request_id: str=None):
        """GoogleCloudChannelV1ChangeOfferRequest - a model defined in OpenAPI

        :param billing_account: The billing_account of this GoogleCloudChannelV1ChangeOfferRequest.
        :param offer: The offer of this GoogleCloudChannelV1ChangeOfferRequest.
        :param parameters: The parameters of this GoogleCloudChannelV1ChangeOfferRequest.
        :param purchase_order_id: The purchase_order_id of this GoogleCloudChannelV1ChangeOfferRequest.
        :param request_id: The request_id of this GoogleCloudChannelV1ChangeOfferRequest.
        """
        self.openapi_types = {
            'billing_account': str,
            'offer': str,
            'parameters': List[GoogleCloudChannelV1Parameter],
            'purchase_order_id': str,
            'request_id': str
        }

        self.attribute_map = {
            'billing_account': 'billingAccount',
            'offer': 'offer',
            'parameters': 'parameters',
            'purchase_order_id': 'purchaseOrderId',
            'request_id': 'requestId'
        }

        self._billing_account = billing_account
        self._offer = offer
        self._parameters = parameters
        self._purchase_order_id = purchase_order_id
        self._request_id = request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1ChangeOfferRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1ChangeOfferRequest of this GoogleCloudChannelV1ChangeOfferRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_account(self):
        """Gets the billing_account of this GoogleCloudChannelV1ChangeOfferRequest.

        Optional. The billing account resource name that is used to pay for this entitlement when setting up billing on a trial subscription. This field is only relevant for multi-currency accounts. It should be left empty for single currency accounts.

        :return: The billing_account of this GoogleCloudChannelV1ChangeOfferRequest.
        :rtype: str
        """
        return self._billing_account

    @billing_account.setter
    def billing_account(self, billing_account):
        """Sets the billing_account of this GoogleCloudChannelV1ChangeOfferRequest.

        Optional. The billing account resource name that is used to pay for this entitlement when setting up billing on a trial subscription. This field is only relevant for multi-currency accounts. It should be left empty for single currency accounts.

        :param billing_account: The billing_account of this GoogleCloudChannelV1ChangeOfferRequest.
        :type billing_account: str
        """

        self._billing_account = billing_account

    @property
    def offer(self):
        """Gets the offer of this GoogleCloudChannelV1ChangeOfferRequest.

        Required. New Offer. Format: accounts/{account_id}/offers/{offer_id}.

        :return: The offer of this GoogleCloudChannelV1ChangeOfferRequest.
        :rtype: str
        """
        return self._offer

    @offer.setter
    def offer(self, offer):
        """Sets the offer of this GoogleCloudChannelV1ChangeOfferRequest.

        Required. New Offer. Format: accounts/{account_id}/offers/{offer_id}.

        :param offer: The offer of this GoogleCloudChannelV1ChangeOfferRequest.
        :type offer: str
        """

        self._offer = offer

    @property
    def parameters(self):
        """Gets the parameters of this GoogleCloudChannelV1ChangeOfferRequest.

        Optional. Parameters needed to purchase the Offer. To view the available Parameters refer to the Offer.parameter_definitions from the desired offer.

        :return: The parameters of this GoogleCloudChannelV1ChangeOfferRequest.
        :rtype: List[GoogleCloudChannelV1Parameter]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleCloudChannelV1ChangeOfferRequest.

        Optional. Parameters needed to purchase the Offer. To view the available Parameters refer to the Offer.parameter_definitions from the desired offer.

        :param parameters: The parameters of this GoogleCloudChannelV1ChangeOfferRequest.
        :type parameters: List[GoogleCloudChannelV1Parameter]
        """

        self._parameters = parameters

    @property
    def purchase_order_id(self):
        """Gets the purchase_order_id of this GoogleCloudChannelV1ChangeOfferRequest.

        Optional. Purchase order id provided by the reseller.

        :return: The purchase_order_id of this GoogleCloudChannelV1ChangeOfferRequest.
        :rtype: str
        """
        return self._purchase_order_id

    @purchase_order_id.setter
    def purchase_order_id(self, purchase_order_id):
        """Sets the purchase_order_id of this GoogleCloudChannelV1ChangeOfferRequest.

        Optional. Purchase order id provided by the reseller.

        :param purchase_order_id: The purchase_order_id of this GoogleCloudChannelV1ChangeOfferRequest.
        :type purchase_order_id: str
        """

        self._purchase_order_id = purchase_order_id

    @property
    def request_id(self):
        """Gets the request_id of this GoogleCloudChannelV1ChangeOfferRequest.

        Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).

        :return: The request_id of this GoogleCloudChannelV1ChangeOfferRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this GoogleCloudChannelV1ChangeOfferRequest.

        Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).

        :param request_id: The request_id of this GoogleCloudChannelV1ChangeOfferRequest.
        :type request_id: str
        """

        self._request_id = request_id
