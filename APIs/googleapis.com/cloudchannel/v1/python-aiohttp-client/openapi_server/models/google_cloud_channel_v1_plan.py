# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_channel_v1_period import GoogleCloudChannelV1Period
from openapi_server import util


class GoogleCloudChannelV1Plan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_account: str=None, payment_cycle: GoogleCloudChannelV1Period=None, payment_plan: str=None, payment_type: str=None, trial_period: GoogleCloudChannelV1Period=None):
        """GoogleCloudChannelV1Plan - a model defined in OpenAPI

        :param billing_account: The billing_account of this GoogleCloudChannelV1Plan.
        :param payment_cycle: The payment_cycle of this GoogleCloudChannelV1Plan.
        :param payment_plan: The payment_plan of this GoogleCloudChannelV1Plan.
        :param payment_type: The payment_type of this GoogleCloudChannelV1Plan.
        :param trial_period: The trial_period of this GoogleCloudChannelV1Plan.
        """
        self.openapi_types = {
            'billing_account': str,
            'payment_cycle': GoogleCloudChannelV1Period,
            'payment_plan': str,
            'payment_type': str,
            'trial_period': GoogleCloudChannelV1Period
        }

        self.attribute_map = {
            'billing_account': 'billingAccount',
            'payment_cycle': 'paymentCycle',
            'payment_plan': 'paymentPlan',
            'payment_type': 'paymentType',
            'trial_period': 'trialPeriod'
        }

        self._billing_account = billing_account
        self._payment_cycle = payment_cycle
        self._payment_plan = payment_plan
        self._payment_type = payment_type
        self._trial_period = trial_period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1Plan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1Plan of this GoogleCloudChannelV1Plan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_account(self):
        """Gets the billing_account of this GoogleCloudChannelV1Plan.

        Reseller Billing account to charge after an offer transaction. Only present for Google Cloud offers.

        :return: The billing_account of this GoogleCloudChannelV1Plan.
        :rtype: str
        """
        return self._billing_account

    @billing_account.setter
    def billing_account(self, billing_account):
        """Sets the billing_account of this GoogleCloudChannelV1Plan.

        Reseller Billing account to charge after an offer transaction. Only present for Google Cloud offers.

        :param billing_account: The billing_account of this GoogleCloudChannelV1Plan.
        :type billing_account: str
        """

        self._billing_account = billing_account

    @property
    def payment_cycle(self):
        """Gets the payment_cycle of this GoogleCloudChannelV1Plan.


        :return: The payment_cycle of this GoogleCloudChannelV1Plan.
        :rtype: GoogleCloudChannelV1Period
        """
        return self._payment_cycle

    @payment_cycle.setter
    def payment_cycle(self, payment_cycle):
        """Sets the payment_cycle of this GoogleCloudChannelV1Plan.


        :param payment_cycle: The payment_cycle of this GoogleCloudChannelV1Plan.
        :type payment_cycle: GoogleCloudChannelV1Period
        """

        self._payment_cycle = payment_cycle

    @property
    def payment_plan(self):
        """Gets the payment_plan of this GoogleCloudChannelV1Plan.

        Describes how a reseller will be billed.

        :return: The payment_plan of this GoogleCloudChannelV1Plan.
        :rtype: str
        """
        return self._payment_plan

    @payment_plan.setter
    def payment_plan(self, payment_plan):
        """Sets the payment_plan of this GoogleCloudChannelV1Plan.

        Describes how a reseller will be billed.

        :param payment_plan: The payment_plan of this GoogleCloudChannelV1Plan.
        :type payment_plan: str
        """
        allowed_values = ["PAYMENT_PLAN_UNSPECIFIED", "COMMITMENT", "FLEXIBLE", "FREE", "TRIAL", "OFFLINE"]  # noqa: E501
        if payment_plan not in allowed_values:
            raise ValueError(
                "Invalid value for `payment_plan` ({0}), must be one of {1}"
                .format(payment_plan, allowed_values)
            )

        self._payment_plan = payment_plan

    @property
    def payment_type(self):
        """Gets the payment_type of this GoogleCloudChannelV1Plan.

        Specifies when the payment needs to happen.

        :return: The payment_type of this GoogleCloudChannelV1Plan.
        :rtype: str
        """
        return self._payment_type

    @payment_type.setter
    def payment_type(self, payment_type):
        """Sets the payment_type of this GoogleCloudChannelV1Plan.

        Specifies when the payment needs to happen.

        :param payment_type: The payment_type of this GoogleCloudChannelV1Plan.
        :type payment_type: str
        """
        allowed_values = ["PAYMENT_TYPE_UNSPECIFIED", "PREPAY", "POSTPAY"]  # noqa: E501
        if payment_type not in allowed_values:
            raise ValueError(
                "Invalid value for `payment_type` ({0}), must be one of {1}"
                .format(payment_type, allowed_values)
            )

        self._payment_type = payment_type

    @property
    def trial_period(self):
        """Gets the trial_period of this GoogleCloudChannelV1Plan.


        :return: The trial_period of this GoogleCloudChannelV1Plan.
        :rtype: GoogleCloudChannelV1Period
        """
        return self._trial_period

    @trial_period.setter
    def trial_period(self, trial_period):
        """Sets the trial_period of this GoogleCloudChannelV1Plan.


        :param trial_period: The trial_period of this GoogleCloudChannelV1Plan.
        :type trial_period: GoogleCloudChannelV1Period
        """

        self._trial_period = trial_period
