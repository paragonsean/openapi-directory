# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_channel_v1_entitlement import GoogleCloudChannelV1Entitlement
from openapi_server import util


class GoogleCloudChannelV1CreateEntitlementRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entitlement: GoogleCloudChannelV1Entitlement=None, request_id: str=None):
        """GoogleCloudChannelV1CreateEntitlementRequest - a model defined in OpenAPI

        :param entitlement: The entitlement of this GoogleCloudChannelV1CreateEntitlementRequest.
        :param request_id: The request_id of this GoogleCloudChannelV1CreateEntitlementRequest.
        """
        self.openapi_types = {
            'entitlement': GoogleCloudChannelV1Entitlement,
            'request_id': str
        }

        self.attribute_map = {
            'entitlement': 'entitlement',
            'request_id': 'requestId'
        }

        self._entitlement = entitlement
        self._request_id = request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1CreateEntitlementRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1CreateEntitlementRequest of this GoogleCloudChannelV1CreateEntitlementRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entitlement(self):
        """Gets the entitlement of this GoogleCloudChannelV1CreateEntitlementRequest.


        :return: The entitlement of this GoogleCloudChannelV1CreateEntitlementRequest.
        :rtype: GoogleCloudChannelV1Entitlement
        """
        return self._entitlement

    @entitlement.setter
    def entitlement(self, entitlement):
        """Sets the entitlement of this GoogleCloudChannelV1CreateEntitlementRequest.


        :param entitlement: The entitlement of this GoogleCloudChannelV1CreateEntitlementRequest.
        :type entitlement: GoogleCloudChannelV1Entitlement
        """

        self._entitlement = entitlement

    @property
    def request_id(self):
        """Gets the request_id of this GoogleCloudChannelV1CreateEntitlementRequest.

        Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).

        :return: The request_id of this GoogleCloudChannelV1CreateEntitlementRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this GoogleCloudChannelV1CreateEntitlementRequest.

        Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).

        :param request_id: The request_id of this GoogleCloudChannelV1CreateEntitlementRequest.
        :type request_id: str
        """

        self._request_id = request_id
