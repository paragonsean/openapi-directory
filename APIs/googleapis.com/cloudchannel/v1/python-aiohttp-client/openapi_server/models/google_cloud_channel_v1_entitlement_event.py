# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudChannelV1EntitlementEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entitlement: str=None, event_type: str=None):
        """GoogleCloudChannelV1EntitlementEvent - a model defined in OpenAPI

        :param entitlement: The entitlement of this GoogleCloudChannelV1EntitlementEvent.
        :param event_type: The event_type of this GoogleCloudChannelV1EntitlementEvent.
        """
        self.openapi_types = {
            'entitlement': str,
            'event_type': str
        }

        self.attribute_map = {
            'entitlement': 'entitlement',
            'event_type': 'eventType'
        }

        self._entitlement = entitlement
        self._event_type = event_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1EntitlementEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1EntitlementEvent of this GoogleCloudChannelV1EntitlementEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entitlement(self):
        """Gets the entitlement of this GoogleCloudChannelV1EntitlementEvent.

        Resource name of an entitlement of the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}

        :return: The entitlement of this GoogleCloudChannelV1EntitlementEvent.
        :rtype: str
        """
        return self._entitlement

    @entitlement.setter
    def entitlement(self, entitlement):
        """Sets the entitlement of this GoogleCloudChannelV1EntitlementEvent.

        Resource name of an entitlement of the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}

        :param entitlement: The entitlement of this GoogleCloudChannelV1EntitlementEvent.
        :type entitlement: str
        """

        self._entitlement = entitlement

    @property
    def event_type(self):
        """Gets the event_type of this GoogleCloudChannelV1EntitlementEvent.

        Type of event which happened on the entitlement.

        :return: The event_type of this GoogleCloudChannelV1EntitlementEvent.
        :rtype: str
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type):
        """Sets the event_type of this GoogleCloudChannelV1EntitlementEvent.

        Type of event which happened on the entitlement.

        :param event_type: The event_type of this GoogleCloudChannelV1EntitlementEvent.
        :type event_type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "CREATED", "PRICE_PLAN_SWITCHED", "COMMITMENT_CHANGED", "RENEWED", "SUSPENDED", "ACTIVATED", "CANCELLED", "SKU_CHANGED", "RENEWAL_SETTING_CHANGED", "PAID_SERVICE_STARTED", "LICENSE_ASSIGNMENT_CHANGED", "LICENSE_CAP_CHANGED"]  # noqa: E501
        if event_type not in allowed_values:
            raise ValueError(
                "Invalid value for `event_type` ({0}), must be one of {1}"
                .format(event_type, allowed_values)
            )

        self._event_type = event_type
