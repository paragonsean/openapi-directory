# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudChannelV1alpha1ChannelPartnerEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_partner: str=None, event_type: str=None):
        """GoogleCloudChannelV1alpha1ChannelPartnerEvent - a model defined in OpenAPI

        :param channel_partner: The channel_partner of this GoogleCloudChannelV1alpha1ChannelPartnerEvent.
        :param event_type: The event_type of this GoogleCloudChannelV1alpha1ChannelPartnerEvent.
        """
        self.openapi_types = {
            'channel_partner': str,
            'event_type': str
        }

        self.attribute_map = {
            'channel_partner': 'channelPartner',
            'event_type': 'eventType'
        }

        self._channel_partner = channel_partner
        self._event_type = event_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1alpha1ChannelPartnerEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1alpha1ChannelPartnerEvent of this GoogleCloudChannelV1alpha1ChannelPartnerEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_partner(self):
        """Gets the channel_partner of this GoogleCloudChannelV1alpha1ChannelPartnerEvent.

        Resource name for the Channel Partner Link. Channel_partner uses the format: accounts/{account_id}/channelPartnerLinks/{channel_partner_id}

        :return: The channel_partner of this GoogleCloudChannelV1alpha1ChannelPartnerEvent.
        :rtype: str
        """
        return self._channel_partner

    @channel_partner.setter
    def channel_partner(self, channel_partner):
        """Sets the channel_partner of this GoogleCloudChannelV1alpha1ChannelPartnerEvent.

        Resource name for the Channel Partner Link. Channel_partner uses the format: accounts/{account_id}/channelPartnerLinks/{channel_partner_id}

        :param channel_partner: The channel_partner of this GoogleCloudChannelV1alpha1ChannelPartnerEvent.
        :type channel_partner: str
        """

        self._channel_partner = channel_partner

    @property
    def event_type(self):
        """Gets the event_type of this GoogleCloudChannelV1alpha1ChannelPartnerEvent.

        Type of event performed on the Channel Partner.

        :return: The event_type of this GoogleCloudChannelV1alpha1ChannelPartnerEvent.
        :rtype: str
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type):
        """Sets the event_type of this GoogleCloudChannelV1alpha1ChannelPartnerEvent.

        Type of event performed on the Channel Partner.

        :param event_type: The event_type of this GoogleCloudChannelV1alpha1ChannelPartnerEvent.
        :type event_type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "LINK_STATE_CHANGED", "PARTNER_ADVANTAGE_INFO_CHANGED"]  # noqa: E501
        if event_type not in allowed_values:
            raise ValueError(
                "Invalid value for `event_type` ({0}), must be one of {1}"
                .format(event_type, allowed_values)
            )

        self._event_type = event_type
