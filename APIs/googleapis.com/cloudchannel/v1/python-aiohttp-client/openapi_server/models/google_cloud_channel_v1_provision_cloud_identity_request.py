# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_channel_v1_admin_user import GoogleCloudChannelV1AdminUser
from openapi_server.models.google_cloud_channel_v1_cloud_identity_info import GoogleCloudChannelV1CloudIdentityInfo
from openapi_server import util


class GoogleCloudChannelV1ProvisionCloudIdentityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_identity_info: GoogleCloudChannelV1CloudIdentityInfo=None, user: GoogleCloudChannelV1AdminUser=None, validate_only: bool=None):
        """GoogleCloudChannelV1ProvisionCloudIdentityRequest - a model defined in OpenAPI

        :param cloud_identity_info: The cloud_identity_info of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.
        :param user: The user of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.
        :param validate_only: The validate_only of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.
        """
        self.openapi_types = {
            'cloud_identity_info': GoogleCloudChannelV1CloudIdentityInfo,
            'user': GoogleCloudChannelV1AdminUser,
            'validate_only': bool
        }

        self.attribute_map = {
            'cloud_identity_info': 'cloudIdentityInfo',
            'user': 'user',
            'validate_only': 'validateOnly'
        }

        self._cloud_identity_info = cloud_identity_info
        self._user = user
        self._validate_only = validate_only

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1ProvisionCloudIdentityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1ProvisionCloudIdentityRequest of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_identity_info(self):
        """Gets the cloud_identity_info of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.


        :return: The cloud_identity_info of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.
        :rtype: GoogleCloudChannelV1CloudIdentityInfo
        """
        return self._cloud_identity_info

    @cloud_identity_info.setter
    def cloud_identity_info(self, cloud_identity_info):
        """Sets the cloud_identity_info of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.


        :param cloud_identity_info: The cloud_identity_info of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.
        :type cloud_identity_info: GoogleCloudChannelV1CloudIdentityInfo
        """

        self._cloud_identity_info = cloud_identity_info

    @property
    def user(self):
        """Gets the user of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.


        :return: The user of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.
        :rtype: GoogleCloudChannelV1AdminUser
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.


        :param user: The user of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.
        :type user: GoogleCloudChannelV1AdminUser
        """

        self._user = user

    @property
    def validate_only(self):
        """Gets the validate_only of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.

        Validate the request and preview the review, but do not post it.

        :return: The validate_only of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.
        :rtype: bool
        """
        return self._validate_only

    @validate_only.setter
    def validate_only(self, validate_only):
        """Sets the validate_only of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.

        Validate the request and preview the review, but do not post it.

        :param validate_only: The validate_only of this GoogleCloudChannelV1ProvisionCloudIdentityRequest.
        :type validate_only: bool
        """

        self._validate_only = validate_only
