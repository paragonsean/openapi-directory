# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_channel_v1_price import GoogleCloudChannelV1Price
from openapi_server.models.google_cloud_channel_v1_price_tier import GoogleCloudChannelV1PriceTier
from openapi_server import util


class GoogleCloudChannelV1PricePhase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_period: int=None, last_period: int=None, period_type: str=None, price: GoogleCloudChannelV1Price=None, price_tiers: List[GoogleCloudChannelV1PriceTier]=None):
        """GoogleCloudChannelV1PricePhase - a model defined in OpenAPI

        :param first_period: The first_period of this GoogleCloudChannelV1PricePhase.
        :param last_period: The last_period of this GoogleCloudChannelV1PricePhase.
        :param period_type: The period_type of this GoogleCloudChannelV1PricePhase.
        :param price: The price of this GoogleCloudChannelV1PricePhase.
        :param price_tiers: The price_tiers of this GoogleCloudChannelV1PricePhase.
        """
        self.openapi_types = {
            'first_period': int,
            'last_period': int,
            'period_type': str,
            'price': GoogleCloudChannelV1Price,
            'price_tiers': List[GoogleCloudChannelV1PriceTier]
        }

        self.attribute_map = {
            'first_period': 'firstPeriod',
            'last_period': 'lastPeriod',
            'period_type': 'periodType',
            'price': 'price',
            'price_tiers': 'priceTiers'
        }

        self._first_period = first_period
        self._last_period = last_period
        self._period_type = period_type
        self._price = price
        self._price_tiers = price_tiers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1PricePhase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1PricePhase of this GoogleCloudChannelV1PricePhase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_period(self):
        """Gets the first_period of this GoogleCloudChannelV1PricePhase.

        Defines first period for the phase.

        :return: The first_period of this GoogleCloudChannelV1PricePhase.
        :rtype: int
        """
        return self._first_period

    @first_period.setter
    def first_period(self, first_period):
        """Sets the first_period of this GoogleCloudChannelV1PricePhase.

        Defines first period for the phase.

        :param first_period: The first_period of this GoogleCloudChannelV1PricePhase.
        :type first_period: int
        """

        self._first_period = first_period

    @property
    def last_period(self):
        """Gets the last_period of this GoogleCloudChannelV1PricePhase.

        Defines first period for the phase.

        :return: The last_period of this GoogleCloudChannelV1PricePhase.
        :rtype: int
        """
        return self._last_period

    @last_period.setter
    def last_period(self, last_period):
        """Sets the last_period of this GoogleCloudChannelV1PricePhase.

        Defines first period for the phase.

        :param last_period: The last_period of this GoogleCloudChannelV1PricePhase.
        :type last_period: int
        """

        self._last_period = last_period

    @property
    def period_type(self):
        """Gets the period_type of this GoogleCloudChannelV1PricePhase.

        Defines the phase period type.

        :return: The period_type of this GoogleCloudChannelV1PricePhase.
        :rtype: str
        """
        return self._period_type

    @period_type.setter
    def period_type(self, period_type):
        """Sets the period_type of this GoogleCloudChannelV1PricePhase.

        Defines the phase period type.

        :param period_type: The period_type of this GoogleCloudChannelV1PricePhase.
        :type period_type: str
        """
        allowed_values = ["PERIOD_TYPE_UNSPECIFIED", "DAY", "MONTH", "YEAR"]  # noqa: E501
        if period_type not in allowed_values:
            raise ValueError(
                "Invalid value for `period_type` ({0}), must be one of {1}"
                .format(period_type, allowed_values)
            )

        self._period_type = period_type

    @property
    def price(self):
        """Gets the price of this GoogleCloudChannelV1PricePhase.


        :return: The price of this GoogleCloudChannelV1PricePhase.
        :rtype: GoogleCloudChannelV1Price
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this GoogleCloudChannelV1PricePhase.


        :param price: The price of this GoogleCloudChannelV1PricePhase.
        :type price: GoogleCloudChannelV1Price
        """

        self._price = price

    @property
    def price_tiers(self):
        """Gets the price_tiers of this GoogleCloudChannelV1PricePhase.

        Price by the resource tiers.

        :return: The price_tiers of this GoogleCloudChannelV1PricePhase.
        :rtype: List[GoogleCloudChannelV1PriceTier]
        """
        return self._price_tiers

    @price_tiers.setter
    def price_tiers(self, price_tiers):
        """Sets the price_tiers of this GoogleCloudChannelV1PricePhase.

        Price by the resource tiers.

        :param price_tiers: The price_tiers of this GoogleCloudChannelV1PricePhase.
        :type price_tiers: List[GoogleCloudChannelV1PriceTier]
        """

        self._price_tiers = price_tiers
