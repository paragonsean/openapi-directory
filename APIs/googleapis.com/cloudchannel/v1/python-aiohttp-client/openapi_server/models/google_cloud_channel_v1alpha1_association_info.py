# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudChannelV1alpha1AssociationInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_entitlement: str=None):
        """GoogleCloudChannelV1alpha1AssociationInfo - a model defined in OpenAPI

        :param base_entitlement: The base_entitlement of this GoogleCloudChannelV1alpha1AssociationInfo.
        """
        self.openapi_types = {
            'base_entitlement': str
        }

        self.attribute_map = {
            'base_entitlement': 'baseEntitlement'
        }

        self._base_entitlement = base_entitlement

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1alpha1AssociationInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1alpha1AssociationInfo of this GoogleCloudChannelV1alpha1AssociationInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_entitlement(self):
        """Gets the base_entitlement of this GoogleCloudChannelV1alpha1AssociationInfo.

        The name of the base entitlement, for which this entitlement is an add-on.

        :return: The base_entitlement of this GoogleCloudChannelV1alpha1AssociationInfo.
        :rtype: str
        """
        return self._base_entitlement

    @base_entitlement.setter
    def base_entitlement(self, base_entitlement):
        """Sets the base_entitlement of this GoogleCloudChannelV1alpha1AssociationInfo.

        The name of the base entitlement, for which this entitlement is an add-on.

        :param base_entitlement: The base_entitlement of this GoogleCloudChannelV1alpha1AssociationInfo.
        :type base_entitlement: str
        """

        self._base_entitlement = base_entitlement
