# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_channel_v1alpha1_period import GoogleCloudChannelV1alpha1Period
from openapi_server import util


class GoogleCloudChannelV1alpha1RenewalSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_commitment: bool=None, enable_renewal: bool=None, payment_cycle: GoogleCloudChannelV1alpha1Period=None, payment_option: str=None, payment_plan: str=None, resize_unit_count: bool=None, scheduled_renewal_offer: str=None):
        """GoogleCloudChannelV1alpha1RenewalSettings - a model defined in OpenAPI

        :param disable_commitment: The disable_commitment of this GoogleCloudChannelV1alpha1RenewalSettings.
        :param enable_renewal: The enable_renewal of this GoogleCloudChannelV1alpha1RenewalSettings.
        :param payment_cycle: The payment_cycle of this GoogleCloudChannelV1alpha1RenewalSettings.
        :param payment_option: The payment_option of this GoogleCloudChannelV1alpha1RenewalSettings.
        :param payment_plan: The payment_plan of this GoogleCloudChannelV1alpha1RenewalSettings.
        :param resize_unit_count: The resize_unit_count of this GoogleCloudChannelV1alpha1RenewalSettings.
        :param scheduled_renewal_offer: The scheduled_renewal_offer of this GoogleCloudChannelV1alpha1RenewalSettings.
        """
        self.openapi_types = {
            'disable_commitment': bool,
            'enable_renewal': bool,
            'payment_cycle': GoogleCloudChannelV1alpha1Period,
            'payment_option': str,
            'payment_plan': str,
            'resize_unit_count': bool,
            'scheduled_renewal_offer': str
        }

        self.attribute_map = {
            'disable_commitment': 'disableCommitment',
            'enable_renewal': 'enableRenewal',
            'payment_cycle': 'paymentCycle',
            'payment_option': 'paymentOption',
            'payment_plan': 'paymentPlan',
            'resize_unit_count': 'resizeUnitCount',
            'scheduled_renewal_offer': 'scheduledRenewalOffer'
        }

        self._disable_commitment = disable_commitment
        self._enable_renewal = enable_renewal
        self._payment_cycle = payment_cycle
        self._payment_option = payment_option
        self._payment_plan = payment_plan
        self._resize_unit_count = resize_unit_count
        self._scheduled_renewal_offer = scheduled_renewal_offer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1alpha1RenewalSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1alpha1RenewalSettings of this GoogleCloudChannelV1alpha1RenewalSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_commitment(self):
        """Gets the disable_commitment of this GoogleCloudChannelV1alpha1RenewalSettings.

        If true, disables commitment-based offer on renewal and switches to flexible or pay as you go. Deprecated: Use `payment_plan` instead.

        :return: The disable_commitment of this GoogleCloudChannelV1alpha1RenewalSettings.
        :rtype: bool
        """
        return self._disable_commitment

    @disable_commitment.setter
    def disable_commitment(self, disable_commitment):
        """Sets the disable_commitment of this GoogleCloudChannelV1alpha1RenewalSettings.

        If true, disables commitment-based offer on renewal and switches to flexible or pay as you go. Deprecated: Use `payment_plan` instead.

        :param disable_commitment: The disable_commitment of this GoogleCloudChannelV1alpha1RenewalSettings.
        :type disable_commitment: bool
        """

        self._disable_commitment = disable_commitment

    @property
    def enable_renewal(self):
        """Gets the enable_renewal of this GoogleCloudChannelV1alpha1RenewalSettings.

        If false, the plan will be completed at the end date.

        :return: The enable_renewal of this GoogleCloudChannelV1alpha1RenewalSettings.
        :rtype: bool
        """
        return self._enable_renewal

    @enable_renewal.setter
    def enable_renewal(self, enable_renewal):
        """Sets the enable_renewal of this GoogleCloudChannelV1alpha1RenewalSettings.

        If false, the plan will be completed at the end date.

        :param enable_renewal: The enable_renewal of this GoogleCloudChannelV1alpha1RenewalSettings.
        :type enable_renewal: bool
        """

        self._enable_renewal = enable_renewal

    @property
    def payment_cycle(self):
        """Gets the payment_cycle of this GoogleCloudChannelV1alpha1RenewalSettings.


        :return: The payment_cycle of this GoogleCloudChannelV1alpha1RenewalSettings.
        :rtype: GoogleCloudChannelV1alpha1Period
        """
        return self._payment_cycle

    @payment_cycle.setter
    def payment_cycle(self, payment_cycle):
        """Sets the payment_cycle of this GoogleCloudChannelV1alpha1RenewalSettings.


        :param payment_cycle: The payment_cycle of this GoogleCloudChannelV1alpha1RenewalSettings.
        :type payment_cycle: GoogleCloudChannelV1alpha1Period
        """

        self._payment_cycle = payment_cycle

    @property
    def payment_option(self):
        """Gets the payment_option of this GoogleCloudChannelV1alpha1RenewalSettings.

        Set if enable_renewal=true. Deprecated: Use `payment_cycle` instead.

        :return: The payment_option of this GoogleCloudChannelV1alpha1RenewalSettings.
        :rtype: str
        """
        return self._payment_option

    @payment_option.setter
    def payment_option(self, payment_option):
        """Sets the payment_option of this GoogleCloudChannelV1alpha1RenewalSettings.

        Set if enable_renewal=true. Deprecated: Use `payment_cycle` instead.

        :param payment_option: The payment_option of this GoogleCloudChannelV1alpha1RenewalSettings.
        :type payment_option: str
        """
        allowed_values = ["PAYMENT_OPTION_UNSPECIFIED", "ANNUAL", "MONTHLY"]  # noqa: E501
        if payment_option not in allowed_values:
            raise ValueError(
                "Invalid value for `payment_option` ({0}), must be one of {1}"
                .format(payment_option, allowed_values)
            )

        self._payment_option = payment_option

    @property
    def payment_plan(self):
        """Gets the payment_plan of this GoogleCloudChannelV1alpha1RenewalSettings.

        Describes how a reseller will be billed.

        :return: The payment_plan of this GoogleCloudChannelV1alpha1RenewalSettings.
        :rtype: str
        """
        return self._payment_plan

    @payment_plan.setter
    def payment_plan(self, payment_plan):
        """Sets the payment_plan of this GoogleCloudChannelV1alpha1RenewalSettings.

        Describes how a reseller will be billed.

        :param payment_plan: The payment_plan of this GoogleCloudChannelV1alpha1RenewalSettings.
        :type payment_plan: str
        """
        allowed_values = ["PAYMENT_PLAN_UNSPECIFIED", "COMMITMENT", "FLEXIBLE", "FREE", "TRIAL", "OFFLINE"]  # noqa: E501
        if payment_plan not in allowed_values:
            raise ValueError(
                "Invalid value for `payment_plan` ({0}), must be one of {1}"
                .format(payment_plan, allowed_values)
            )

        self._payment_plan = payment_plan

    @property
    def resize_unit_count(self):
        """Gets the resize_unit_count of this GoogleCloudChannelV1alpha1RenewalSettings.

        If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.

        :return: The resize_unit_count of this GoogleCloudChannelV1alpha1RenewalSettings.
        :rtype: bool
        """
        return self._resize_unit_count

    @resize_unit_count.setter
    def resize_unit_count(self, resize_unit_count):
        """Sets the resize_unit_count of this GoogleCloudChannelV1alpha1RenewalSettings.

        If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.

        :param resize_unit_count: The resize_unit_count of this GoogleCloudChannelV1alpha1RenewalSettings.
        :type resize_unit_count: bool
        """

        self._resize_unit_count = resize_unit_count

    @property
    def scheduled_renewal_offer(self):
        """Gets the scheduled_renewal_offer of this GoogleCloudChannelV1alpha1RenewalSettings.

        Output only. The offer resource name that the entitlement will renew on at the end date. Takes the form: accounts/{account_id}/offers/{offer_id}.

        :return: The scheduled_renewal_offer of this GoogleCloudChannelV1alpha1RenewalSettings.
        :rtype: str
        """
        return self._scheduled_renewal_offer

    @scheduled_renewal_offer.setter
    def scheduled_renewal_offer(self, scheduled_renewal_offer):
        """Sets the scheduled_renewal_offer of this GoogleCloudChannelV1alpha1RenewalSettings.

        Output only. The offer resource name that the entitlement will renew on at the end date. Takes the form: accounts/{account_id}/offers/{offer_id}.

        :param scheduled_renewal_offer: The scheduled_renewal_offer of this GoogleCloudChannelV1alpha1RenewalSettings.
        :type scheduled_renewal_offer: str
        """

        self._scheduled_renewal_offer = scheduled_renewal_offer
