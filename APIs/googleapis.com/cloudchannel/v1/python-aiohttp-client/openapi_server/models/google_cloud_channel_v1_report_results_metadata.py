# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_channel_v1_date_range import GoogleCloudChannelV1DateRange
from openapi_server.models.google_cloud_channel_v1_report import GoogleCloudChannelV1Report
from openapi_server import util


class GoogleCloudChannelV1ReportResultsMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_range: GoogleCloudChannelV1DateRange=None, preceding_date_range: GoogleCloudChannelV1DateRange=None, report: GoogleCloudChannelV1Report=None, row_count: str=None):
        """GoogleCloudChannelV1ReportResultsMetadata - a model defined in OpenAPI

        :param date_range: The date_range of this GoogleCloudChannelV1ReportResultsMetadata.
        :param preceding_date_range: The preceding_date_range of this GoogleCloudChannelV1ReportResultsMetadata.
        :param report: The report of this GoogleCloudChannelV1ReportResultsMetadata.
        :param row_count: The row_count of this GoogleCloudChannelV1ReportResultsMetadata.
        """
        self.openapi_types = {
            'date_range': GoogleCloudChannelV1DateRange,
            'preceding_date_range': GoogleCloudChannelV1DateRange,
            'report': GoogleCloudChannelV1Report,
            'row_count': str
        }

        self.attribute_map = {
            'date_range': 'dateRange',
            'preceding_date_range': 'precedingDateRange',
            'report': 'report',
            'row_count': 'rowCount'
        }

        self._date_range = date_range
        self._preceding_date_range = preceding_date_range
        self._report = report
        self._row_count = row_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1ReportResultsMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1ReportResultsMetadata of this GoogleCloudChannelV1ReportResultsMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_range(self):
        """Gets the date_range of this GoogleCloudChannelV1ReportResultsMetadata.


        :return: The date_range of this GoogleCloudChannelV1ReportResultsMetadata.
        :rtype: GoogleCloudChannelV1DateRange
        """
        return self._date_range

    @date_range.setter
    def date_range(self, date_range):
        """Sets the date_range of this GoogleCloudChannelV1ReportResultsMetadata.


        :param date_range: The date_range of this GoogleCloudChannelV1ReportResultsMetadata.
        :type date_range: GoogleCloudChannelV1DateRange
        """

        self._date_range = date_range

    @property
    def preceding_date_range(self):
        """Gets the preceding_date_range of this GoogleCloudChannelV1ReportResultsMetadata.


        :return: The preceding_date_range of this GoogleCloudChannelV1ReportResultsMetadata.
        :rtype: GoogleCloudChannelV1DateRange
        """
        return self._preceding_date_range

    @preceding_date_range.setter
    def preceding_date_range(self, preceding_date_range):
        """Sets the preceding_date_range of this GoogleCloudChannelV1ReportResultsMetadata.


        :param preceding_date_range: The preceding_date_range of this GoogleCloudChannelV1ReportResultsMetadata.
        :type preceding_date_range: GoogleCloudChannelV1DateRange
        """

        self._preceding_date_range = preceding_date_range

    @property
    def report(self):
        """Gets the report of this GoogleCloudChannelV1ReportResultsMetadata.


        :return: The report of this GoogleCloudChannelV1ReportResultsMetadata.
        :rtype: GoogleCloudChannelV1Report
        """
        return self._report

    @report.setter
    def report(self, report):
        """Sets the report of this GoogleCloudChannelV1ReportResultsMetadata.


        :param report: The report of this GoogleCloudChannelV1ReportResultsMetadata.
        :type report: GoogleCloudChannelV1Report
        """

        self._report = report

    @property
    def row_count(self):
        """Gets the row_count of this GoogleCloudChannelV1ReportResultsMetadata.

        The total number of rows of data in the final report.

        :return: The row_count of this GoogleCloudChannelV1ReportResultsMetadata.
        :rtype: str
        """
        return self._row_count

    @row_count.setter
    def row_count(self, row_count):
        """Sets the row_count of this GoogleCloudChannelV1ReportResultsMetadata.

        The total number of rows of data in the final report.

        :param row_count: The row_count of this GoogleCloudChannelV1ReportResultsMetadata.
        :type row_count: str
        """

        self._row_count = row_count
