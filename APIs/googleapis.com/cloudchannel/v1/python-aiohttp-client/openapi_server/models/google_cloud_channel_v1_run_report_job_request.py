# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_channel_v1_date_range import GoogleCloudChannelV1DateRange
from openapi_server import util


class GoogleCloudChannelV1RunReportJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_range: GoogleCloudChannelV1DateRange=None, filter: str=None, language_code: str=None):
        """GoogleCloudChannelV1RunReportJobRequest - a model defined in OpenAPI

        :param date_range: The date_range of this GoogleCloudChannelV1RunReportJobRequest.
        :param filter: The filter of this GoogleCloudChannelV1RunReportJobRequest.
        :param language_code: The language_code of this GoogleCloudChannelV1RunReportJobRequest.
        """
        self.openapi_types = {
            'date_range': GoogleCloudChannelV1DateRange,
            'filter': str,
            'language_code': str
        }

        self.attribute_map = {
            'date_range': 'dateRange',
            'filter': 'filter',
            'language_code': 'languageCode'
        }

        self._date_range = date_range
        self._filter = filter
        self._language_code = language_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1RunReportJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1RunReportJobRequest of this GoogleCloudChannelV1RunReportJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_range(self):
        """Gets the date_range of this GoogleCloudChannelV1RunReportJobRequest.


        :return: The date_range of this GoogleCloudChannelV1RunReportJobRequest.
        :rtype: GoogleCloudChannelV1DateRange
        """
        return self._date_range

    @date_range.setter
    def date_range(self, date_range):
        """Sets the date_range of this GoogleCloudChannelV1RunReportJobRequest.


        :param date_range: The date_range of this GoogleCloudChannelV1RunReportJobRequest.
        :type date_range: GoogleCloudChannelV1DateRange
        """

        self._date_range = date_range

    @property
    def filter(self):
        """Gets the filter of this GoogleCloudChannelV1RunReportJobRequest.

        Optional. A structured string that defines conditions on dimension columns to restrict the report output. Filters support logical operators (AND, OR, NOT) and conditional operators (=, !=, <, >, <=, and >=) using `column_id` as keys. For example: `(customer:\"accounts/C123abc/customers/S456def\" OR customer:\"accounts/C123abc/customers/S789ghi\") AND invoice_start_date.year >= 2022`

        :return: The filter of this GoogleCloudChannelV1RunReportJobRequest.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this GoogleCloudChannelV1RunReportJobRequest.

        Optional. A structured string that defines conditions on dimension columns to restrict the report output. Filters support logical operators (AND, OR, NOT) and conditional operators (=, !=, <, >, <=, and >=) using `column_id` as keys. For example: `(customer:\"accounts/C123abc/customers/S456def\" OR customer:\"accounts/C123abc/customers/S789ghi\") AND invoice_start_date.year >= 2022`

        :param filter: The filter of this GoogleCloudChannelV1RunReportJobRequest.
        :type filter: str
        """

        self._filter = filter

    @property
    def language_code(self):
        """Gets the language_code of this GoogleCloudChannelV1RunReportJobRequest.

        Optional. The BCP-47 language code, such as \"en-US\". If specified, the response is localized to the corresponding language code if the original data sources support it. Default is \"en-US\".

        :return: The language_code of this GoogleCloudChannelV1RunReportJobRequest.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleCloudChannelV1RunReportJobRequest.

        Optional. The BCP-47 language code, such as \"en-US\". If specified, the response is localized to the corresponding language code if the original data sources support it. Default is \"en-US\".

        :param language_code: The language_code of this GoogleCloudChannelV1RunReportJobRequest.
        :type language_code: str
        """

        self._language_code = language_code
