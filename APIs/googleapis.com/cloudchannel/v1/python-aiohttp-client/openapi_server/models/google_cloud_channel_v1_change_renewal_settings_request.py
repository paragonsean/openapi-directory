# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_channel_v1_renewal_settings import GoogleCloudChannelV1RenewalSettings
from openapi_server import util


class GoogleCloudChannelV1ChangeRenewalSettingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, renewal_settings: GoogleCloudChannelV1RenewalSettings=None, request_id: str=None):
        """GoogleCloudChannelV1ChangeRenewalSettingsRequest - a model defined in OpenAPI

        :param renewal_settings: The renewal_settings of this GoogleCloudChannelV1ChangeRenewalSettingsRequest.
        :param request_id: The request_id of this GoogleCloudChannelV1ChangeRenewalSettingsRequest.
        """
        self.openapi_types = {
            'renewal_settings': GoogleCloudChannelV1RenewalSettings,
            'request_id': str
        }

        self.attribute_map = {
            'renewal_settings': 'renewalSettings',
            'request_id': 'requestId'
        }

        self._renewal_settings = renewal_settings
        self._request_id = request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1ChangeRenewalSettingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1ChangeRenewalSettingsRequest of this GoogleCloudChannelV1ChangeRenewalSettingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def renewal_settings(self):
        """Gets the renewal_settings of this GoogleCloudChannelV1ChangeRenewalSettingsRequest.


        :return: The renewal_settings of this GoogleCloudChannelV1ChangeRenewalSettingsRequest.
        :rtype: GoogleCloudChannelV1RenewalSettings
        """
        return self._renewal_settings

    @renewal_settings.setter
    def renewal_settings(self, renewal_settings):
        """Sets the renewal_settings of this GoogleCloudChannelV1ChangeRenewalSettingsRequest.


        :param renewal_settings: The renewal_settings of this GoogleCloudChannelV1ChangeRenewalSettingsRequest.
        :type renewal_settings: GoogleCloudChannelV1RenewalSettings
        """

        self._renewal_settings = renewal_settings

    @property
    def request_id(self):
        """Gets the request_id of this GoogleCloudChannelV1ChangeRenewalSettingsRequest.

        Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).

        :return: The request_id of this GoogleCloudChannelV1ChangeRenewalSettingsRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this GoogleCloudChannelV1ChangeRenewalSettingsRequest.

        Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).

        :param request_id: The request_id of this GoogleCloudChannelV1ChangeRenewalSettingsRequest.
        :type request_id: str
        """

        self._request_id = request_id
