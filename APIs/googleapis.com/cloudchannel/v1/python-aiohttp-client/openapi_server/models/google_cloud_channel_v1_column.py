# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudChannelV1Column(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column_id: str=None, data_type: str=None, display_name: str=None):
        """GoogleCloudChannelV1Column - a model defined in OpenAPI

        :param column_id: The column_id of this GoogleCloudChannelV1Column.
        :param data_type: The data_type of this GoogleCloudChannelV1Column.
        :param display_name: The display_name of this GoogleCloudChannelV1Column.
        """
        self.openapi_types = {
            'column_id': str,
            'data_type': str,
            'display_name': str
        }

        self.attribute_map = {
            'column_id': 'columnId',
            'data_type': 'dataType',
            'display_name': 'displayName'
        }

        self._column_id = column_id
        self._data_type = data_type
        self._display_name = display_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1Column':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1Column of this GoogleCloudChannelV1Column.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_id(self):
        """Gets the column_id of this GoogleCloudChannelV1Column.

        The unique name of the column (for example, customer_domain, channel_partner, customer_cost). You can use column IDs in RunReportJobRequest.filter. To see all reports and their columns, call CloudChannelReportsService.ListReports.

        :return: The column_id of this GoogleCloudChannelV1Column.
        :rtype: str
        """
        return self._column_id

    @column_id.setter
    def column_id(self, column_id):
        """Sets the column_id of this GoogleCloudChannelV1Column.

        The unique name of the column (for example, customer_domain, channel_partner, customer_cost). You can use column IDs in RunReportJobRequest.filter. To see all reports and their columns, call CloudChannelReportsService.ListReports.

        :param column_id: The column_id of this GoogleCloudChannelV1Column.
        :type column_id: str
        """

        self._column_id = column_id

    @property
    def data_type(self):
        """Gets the data_type of this GoogleCloudChannelV1Column.

        The type of the values for this column.

        :return: The data_type of this GoogleCloudChannelV1Column.
        :rtype: str
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this GoogleCloudChannelV1Column.

        The type of the values for this column.

        :param data_type: The data_type of this GoogleCloudChannelV1Column.
        :type data_type: str
        """
        allowed_values = ["DATA_TYPE_UNSPECIFIED", "STRING", "INT", "DECIMAL", "MONEY", "DATE", "DATE_TIME"]  # noqa: E501
        if data_type not in allowed_values:
            raise ValueError(
                "Invalid value for `data_type` ({0}), must be one of {1}"
                .format(data_type, allowed_values)
            )

        self._data_type = data_type

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudChannelV1Column.

        The column's display name.

        :return: The display_name of this GoogleCloudChannelV1Column.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudChannelV1Column.

        The column's display name.

        :param display_name: The display_name of this GoogleCloudChannelV1Column.
        :type display_name: str
        """

        self._display_name = display_name
