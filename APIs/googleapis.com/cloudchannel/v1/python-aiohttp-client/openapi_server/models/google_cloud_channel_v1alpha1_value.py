# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudChannelV1alpha1Value(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bool_value: bool=None, double_value: float=None, int64_value: str=None, proto_value: Dict[str, object]=None, string_value: str=None):
        """GoogleCloudChannelV1alpha1Value - a model defined in OpenAPI

        :param bool_value: The bool_value of this GoogleCloudChannelV1alpha1Value.
        :param double_value: The double_value of this GoogleCloudChannelV1alpha1Value.
        :param int64_value: The int64_value of this GoogleCloudChannelV1alpha1Value.
        :param proto_value: The proto_value of this GoogleCloudChannelV1alpha1Value.
        :param string_value: The string_value of this GoogleCloudChannelV1alpha1Value.
        """
        self.openapi_types = {
            'bool_value': bool,
            'double_value': float,
            'int64_value': str,
            'proto_value': Dict[str, object],
            'string_value': str
        }

        self.attribute_map = {
            'bool_value': 'boolValue',
            'double_value': 'doubleValue',
            'int64_value': 'int64Value',
            'proto_value': 'protoValue',
            'string_value': 'stringValue'
        }

        self._bool_value = bool_value
        self._double_value = double_value
        self._int64_value = int64_value
        self._proto_value = proto_value
        self._string_value = string_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1alpha1Value':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1alpha1Value of this GoogleCloudChannelV1alpha1Value.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bool_value(self):
        """Gets the bool_value of this GoogleCloudChannelV1alpha1Value.

        Represents a boolean value.

        :return: The bool_value of this GoogleCloudChannelV1alpha1Value.
        :rtype: bool
        """
        return self._bool_value

    @bool_value.setter
    def bool_value(self, bool_value):
        """Sets the bool_value of this GoogleCloudChannelV1alpha1Value.

        Represents a boolean value.

        :param bool_value: The bool_value of this GoogleCloudChannelV1alpha1Value.
        :type bool_value: bool
        """

        self._bool_value = bool_value

    @property
    def double_value(self):
        """Gets the double_value of this GoogleCloudChannelV1alpha1Value.

        Represents a double value.

        :return: The double_value of this GoogleCloudChannelV1alpha1Value.
        :rtype: float
        """
        return self._double_value

    @double_value.setter
    def double_value(self, double_value):
        """Sets the double_value of this GoogleCloudChannelV1alpha1Value.

        Represents a double value.

        :param double_value: The double_value of this GoogleCloudChannelV1alpha1Value.
        :type double_value: float
        """

        self._double_value = double_value

    @property
    def int64_value(self):
        """Gets the int64_value of this GoogleCloudChannelV1alpha1Value.

        Represents an int64 value.

        :return: The int64_value of this GoogleCloudChannelV1alpha1Value.
        :rtype: str
        """
        return self._int64_value

    @int64_value.setter
    def int64_value(self, int64_value):
        """Sets the int64_value of this GoogleCloudChannelV1alpha1Value.

        Represents an int64 value.

        :param int64_value: The int64_value of this GoogleCloudChannelV1alpha1Value.
        :type int64_value: str
        """

        self._int64_value = int64_value

    @property
    def proto_value(self):
        """Gets the proto_value of this GoogleCloudChannelV1alpha1Value.

        Represents an 'Any' proto value.

        :return: The proto_value of this GoogleCloudChannelV1alpha1Value.
        :rtype: Dict[str, object]
        """
        return self._proto_value

    @proto_value.setter
    def proto_value(self, proto_value):
        """Sets the proto_value of this GoogleCloudChannelV1alpha1Value.

        Represents an 'Any' proto value.

        :param proto_value: The proto_value of this GoogleCloudChannelV1alpha1Value.
        :type proto_value: Dict[str, object]
        """

        self._proto_value = proto_value

    @property
    def string_value(self):
        """Gets the string_value of this GoogleCloudChannelV1alpha1Value.

        Represents a string value.

        :return: The string_value of this GoogleCloudChannelV1alpha1Value.
        :rtype: str
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this GoogleCloudChannelV1alpha1Value.

        Represents a string value.

        :param string_value: The string_value of this GoogleCloudChannelV1alpha1Value.
        :type string_value: str
        """

        self._string_value = string_value
