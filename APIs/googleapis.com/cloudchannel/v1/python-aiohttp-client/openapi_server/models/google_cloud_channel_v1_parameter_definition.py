# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_channel_v1_value import GoogleCloudChannelV1Value
from openapi_server import util


class GoogleCloudChannelV1ParameterDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_values: List[GoogleCloudChannelV1Value]=None, max_value: GoogleCloudChannelV1Value=None, min_value: GoogleCloudChannelV1Value=None, name: str=None, optional: bool=None, parameter_type: str=None):
        """GoogleCloudChannelV1ParameterDefinition - a model defined in OpenAPI

        :param allowed_values: The allowed_values of this GoogleCloudChannelV1ParameterDefinition.
        :param max_value: The max_value of this GoogleCloudChannelV1ParameterDefinition.
        :param min_value: The min_value of this GoogleCloudChannelV1ParameterDefinition.
        :param name: The name of this GoogleCloudChannelV1ParameterDefinition.
        :param optional: The optional of this GoogleCloudChannelV1ParameterDefinition.
        :param parameter_type: The parameter_type of this GoogleCloudChannelV1ParameterDefinition.
        """
        self.openapi_types = {
            'allowed_values': List[GoogleCloudChannelV1Value],
            'max_value': GoogleCloudChannelV1Value,
            'min_value': GoogleCloudChannelV1Value,
            'name': str,
            'optional': bool,
            'parameter_type': str
        }

        self.attribute_map = {
            'allowed_values': 'allowedValues',
            'max_value': 'maxValue',
            'min_value': 'minValue',
            'name': 'name',
            'optional': 'optional',
            'parameter_type': 'parameterType'
        }

        self._allowed_values = allowed_values
        self._max_value = max_value
        self._min_value = min_value
        self._name = name
        self._optional = optional
        self._parameter_type = parameter_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudChannelV1ParameterDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudChannelV1ParameterDefinition of this GoogleCloudChannelV1ParameterDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_values(self):
        """Gets the allowed_values of this GoogleCloudChannelV1ParameterDefinition.

        If not empty, parameter values must be drawn from this list. For example, [us-west1, us-west2, ...] Applicable to STRING parameter type.

        :return: The allowed_values of this GoogleCloudChannelV1ParameterDefinition.
        :rtype: List[GoogleCloudChannelV1Value]
        """
        return self._allowed_values

    @allowed_values.setter
    def allowed_values(self, allowed_values):
        """Sets the allowed_values of this GoogleCloudChannelV1ParameterDefinition.

        If not empty, parameter values must be drawn from this list. For example, [us-west1, us-west2, ...] Applicable to STRING parameter type.

        :param allowed_values: The allowed_values of this GoogleCloudChannelV1ParameterDefinition.
        :type allowed_values: List[GoogleCloudChannelV1Value]
        """

        self._allowed_values = allowed_values

    @property
    def max_value(self):
        """Gets the max_value of this GoogleCloudChannelV1ParameterDefinition.


        :return: The max_value of this GoogleCloudChannelV1ParameterDefinition.
        :rtype: GoogleCloudChannelV1Value
        """
        return self._max_value

    @max_value.setter
    def max_value(self, max_value):
        """Sets the max_value of this GoogleCloudChannelV1ParameterDefinition.


        :param max_value: The max_value of this GoogleCloudChannelV1ParameterDefinition.
        :type max_value: GoogleCloudChannelV1Value
        """

        self._max_value = max_value

    @property
    def min_value(self):
        """Gets the min_value of this GoogleCloudChannelV1ParameterDefinition.


        :return: The min_value of this GoogleCloudChannelV1ParameterDefinition.
        :rtype: GoogleCloudChannelV1Value
        """
        return self._min_value

    @min_value.setter
    def min_value(self, min_value):
        """Sets the min_value of this GoogleCloudChannelV1ParameterDefinition.


        :param min_value: The min_value of this GoogleCloudChannelV1ParameterDefinition.
        :type min_value: GoogleCloudChannelV1Value
        """

        self._min_value = min_value

    @property
    def name(self):
        """Gets the name of this GoogleCloudChannelV1ParameterDefinition.

        Name of the parameter.

        :return: The name of this GoogleCloudChannelV1ParameterDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudChannelV1ParameterDefinition.

        Name of the parameter.

        :param name: The name of this GoogleCloudChannelV1ParameterDefinition.
        :type name: str
        """

        self._name = name

    @property
    def optional(self):
        """Gets the optional of this GoogleCloudChannelV1ParameterDefinition.

        If set to true, parameter is optional to purchase this Offer.

        :return: The optional of this GoogleCloudChannelV1ParameterDefinition.
        :rtype: bool
        """
        return self._optional

    @optional.setter
    def optional(self, optional):
        """Sets the optional of this GoogleCloudChannelV1ParameterDefinition.

        If set to true, parameter is optional to purchase this Offer.

        :param optional: The optional of this GoogleCloudChannelV1ParameterDefinition.
        :type optional: bool
        """

        self._optional = optional

    @property
    def parameter_type(self):
        """Gets the parameter_type of this GoogleCloudChannelV1ParameterDefinition.

        Data type of the parameter. Minimal value, Maximum value and allowed values will use specified data type here.

        :return: The parameter_type of this GoogleCloudChannelV1ParameterDefinition.
        :rtype: str
        """
        return self._parameter_type

    @parameter_type.setter
    def parameter_type(self, parameter_type):
        """Sets the parameter_type of this GoogleCloudChannelV1ParameterDefinition.

        Data type of the parameter. Minimal value, Maximum value and allowed values will use specified data type here.

        :param parameter_type: The parameter_type of this GoogleCloudChannelV1ParameterDefinition.
        :type parameter_type: str
        """
        allowed_values = ["PARAMETER_TYPE_UNSPECIFIED", "INT64", "STRING", "DOUBLE", "BOOLEAN"]  # noqa: E501
        if parameter_type not in allowed_values:
            raise ValueError(
                "Invalid value for `parameter_type` ({0}), must be one of {1}"
                .format(parameter_type, allowed_values)
            )

        self._parameter_type = parameter_type
