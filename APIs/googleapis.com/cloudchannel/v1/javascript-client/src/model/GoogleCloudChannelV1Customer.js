/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudChannelV1CloudIdentityInfo from './GoogleCloudChannelV1CloudIdentityInfo';
import GoogleCloudChannelV1ContactInfo from './GoogleCloudChannelV1ContactInfo';
import GoogleTypePostalAddress from './GoogleTypePostalAddress';

/**
 * The GoogleCloudChannelV1Customer model module.
 * @module model/GoogleCloudChannelV1Customer
 * @version v1
 */
class GoogleCloudChannelV1Customer {
    /**
     * Constructs a new <code>GoogleCloudChannelV1Customer</code>.
     * Entity representing a customer of a reseller or distributor.
     * @alias module:model/GoogleCloudChannelV1Customer
     */
    constructor() { 
        
        GoogleCloudChannelV1Customer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudChannelV1Customer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudChannelV1Customer} obj Optional instance to populate.
     * @return {module:model/GoogleCloudChannelV1Customer} The populated <code>GoogleCloudChannelV1Customer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudChannelV1Customer();

            if (data.hasOwnProperty('alternateEmail')) {
                obj['alternateEmail'] = ApiClient.convertToType(data['alternateEmail'], 'String');
            }
            if (data.hasOwnProperty('channelPartnerId')) {
                obj['channelPartnerId'] = ApiClient.convertToType(data['channelPartnerId'], 'String');
            }
            if (data.hasOwnProperty('cloudIdentityId')) {
                obj['cloudIdentityId'] = ApiClient.convertToType(data['cloudIdentityId'], 'String');
            }
            if (data.hasOwnProperty('cloudIdentityInfo')) {
                obj['cloudIdentityInfo'] = GoogleCloudChannelV1CloudIdentityInfo.constructFromObject(data['cloudIdentityInfo']);
            }
            if (data.hasOwnProperty('correlationId')) {
                obj['correlationId'] = ApiClient.convertToType(data['correlationId'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('orgDisplayName')) {
                obj['orgDisplayName'] = ApiClient.convertToType(data['orgDisplayName'], 'String');
            }
            if (data.hasOwnProperty('orgPostalAddress')) {
                obj['orgPostalAddress'] = GoogleTypePostalAddress.constructFromObject(data['orgPostalAddress']);
            }
            if (data.hasOwnProperty('primaryContactInfo')) {
                obj['primaryContactInfo'] = GoogleCloudChannelV1ContactInfo.constructFromObject(data['primaryContactInfo']);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudChannelV1Customer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudChannelV1Customer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['alternateEmail'] && !(typeof data['alternateEmail'] === 'string' || data['alternateEmail'] instanceof String)) {
            throw new Error("Expected the field `alternateEmail` to be a primitive type in the JSON string but got " + data['alternateEmail']);
        }
        // ensure the json data is a string
        if (data['channelPartnerId'] && !(typeof data['channelPartnerId'] === 'string' || data['channelPartnerId'] instanceof String)) {
            throw new Error("Expected the field `channelPartnerId` to be a primitive type in the JSON string but got " + data['channelPartnerId']);
        }
        // ensure the json data is a string
        if (data['cloudIdentityId'] && !(typeof data['cloudIdentityId'] === 'string' || data['cloudIdentityId'] instanceof String)) {
            throw new Error("Expected the field `cloudIdentityId` to be a primitive type in the JSON string but got " + data['cloudIdentityId']);
        }
        // validate the optional field `cloudIdentityInfo`
        if (data['cloudIdentityInfo']) { // data not null
          GoogleCloudChannelV1CloudIdentityInfo.validateJSON(data['cloudIdentityInfo']);
        }
        // ensure the json data is a string
        if (data['correlationId'] && !(typeof data['correlationId'] === 'string' || data['correlationId'] instanceof String)) {
            throw new Error("Expected the field `correlationId` to be a primitive type in the JSON string but got " + data['correlationId']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['domain'] && !(typeof data['domain'] === 'string' || data['domain'] instanceof String)) {
            throw new Error("Expected the field `domain` to be a primitive type in the JSON string but got " + data['domain']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['orgDisplayName'] && !(typeof data['orgDisplayName'] === 'string' || data['orgDisplayName'] instanceof String)) {
            throw new Error("Expected the field `orgDisplayName` to be a primitive type in the JSON string but got " + data['orgDisplayName']);
        }
        // validate the optional field `orgPostalAddress`
        if (data['orgPostalAddress']) { // data not null
          GoogleTypePostalAddress.validateJSON(data['orgPostalAddress']);
        }
        // validate the optional field `primaryContactInfo`
        if (data['primaryContactInfo']) { // data not null
          GoogleCloudChannelV1ContactInfo.validateJSON(data['primaryContactInfo']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
 * @member {String} alternateEmail
 */
GoogleCloudChannelV1Customer.prototype['alternateEmail'] = undefined;

/**
 * Cloud Identity ID of the customer's channel partner. Populated only if a channel partner exists for this customer.
 * @member {String} channelPartnerId
 */
GoogleCloudChannelV1Customer.prototype['channelPartnerId'] = undefined;

/**
 * Output only. The customer's Cloud Identity ID if the customer has a Cloud Identity resource.
 * @member {String} cloudIdentityId
 */
GoogleCloudChannelV1Customer.prototype['cloudIdentityId'] = undefined;

/**
 * @member {module:model/GoogleCloudChannelV1CloudIdentityInfo} cloudIdentityInfo
 */
GoogleCloudChannelV1Customer.prototype['cloudIdentityInfo'] = undefined;

/**
 * Optional. External CRM ID for the customer. Populated only if a CRM ID exists for this customer.
 * @member {String} correlationId
 */
GoogleCloudChannelV1Customer.prototype['correlationId'] = undefined;

/**
 * Output only. Time when the customer was created.
 * @member {String} createTime
 */
GoogleCloudChannelV1Customer.prototype['createTime'] = undefined;

/**
 * Required. The customer's primary domain. Must match the primary contact email's domain.
 * @member {String} domain
 */
GoogleCloudChannelV1Customer.prototype['domain'] = undefined;

/**
 * Optional. The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
 * @member {String} languageCode
 */
GoogleCloudChannelV1Customer.prototype['languageCode'] = undefined;

/**
 * Output only. Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}
 * @member {String} name
 */
GoogleCloudChannelV1Customer.prototype['name'] = undefined;

/**
 * Required. Name of the organization that the customer entity represents.
 * @member {String} orgDisplayName
 */
GoogleCloudChannelV1Customer.prototype['orgDisplayName'] = undefined;

/**
 * @member {module:model/GoogleTypePostalAddress} orgPostalAddress
 */
GoogleCloudChannelV1Customer.prototype['orgPostalAddress'] = undefined;

/**
 * @member {module:model/GoogleCloudChannelV1ContactInfo} primaryContactInfo
 */
GoogleCloudChannelV1Customer.prototype['primaryContactInfo'] = undefined;

/**
 * Output only. Time when the customer was updated.
 * @member {String} updateTime
 */
GoogleCloudChannelV1Customer.prototype['updateTime'] = undefined;






export default GoogleCloudChannelV1Customer;

