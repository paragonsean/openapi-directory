/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudChannelV1alpha1Period from './GoogleCloudChannelV1alpha1Period';

/**
 * The GoogleCloudChannelV1alpha1RenewalSettings model module.
 * @module model/GoogleCloudChannelV1alpha1RenewalSettings
 * @version v1
 */
class GoogleCloudChannelV1alpha1RenewalSettings {
    /**
     * Constructs a new <code>GoogleCloudChannelV1alpha1RenewalSettings</code>.
     * Renewal settings for renewable Offers.
     * @alias module:model/GoogleCloudChannelV1alpha1RenewalSettings
     */
    constructor() { 
        
        GoogleCloudChannelV1alpha1RenewalSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudChannelV1alpha1RenewalSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudChannelV1alpha1RenewalSettings} obj Optional instance to populate.
     * @return {module:model/GoogleCloudChannelV1alpha1RenewalSettings} The populated <code>GoogleCloudChannelV1alpha1RenewalSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudChannelV1alpha1RenewalSettings();

            if (data.hasOwnProperty('disableCommitment')) {
                obj['disableCommitment'] = ApiClient.convertToType(data['disableCommitment'], 'Boolean');
            }
            if (data.hasOwnProperty('enableRenewal')) {
                obj['enableRenewal'] = ApiClient.convertToType(data['enableRenewal'], 'Boolean');
            }
            if (data.hasOwnProperty('paymentCycle')) {
                obj['paymentCycle'] = GoogleCloudChannelV1alpha1Period.constructFromObject(data['paymentCycle']);
            }
            if (data.hasOwnProperty('paymentOption')) {
                obj['paymentOption'] = ApiClient.convertToType(data['paymentOption'], 'String');
            }
            if (data.hasOwnProperty('paymentPlan')) {
                obj['paymentPlan'] = ApiClient.convertToType(data['paymentPlan'], 'String');
            }
            if (data.hasOwnProperty('resizeUnitCount')) {
                obj['resizeUnitCount'] = ApiClient.convertToType(data['resizeUnitCount'], 'Boolean');
            }
            if (data.hasOwnProperty('scheduledRenewalOffer')) {
                obj['scheduledRenewalOffer'] = ApiClient.convertToType(data['scheduledRenewalOffer'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudChannelV1alpha1RenewalSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudChannelV1alpha1RenewalSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `paymentCycle`
        if (data['paymentCycle']) { // data not null
          GoogleCloudChannelV1alpha1Period.validateJSON(data['paymentCycle']);
        }
        // ensure the json data is a string
        if (data['paymentOption'] && !(typeof data['paymentOption'] === 'string' || data['paymentOption'] instanceof String)) {
            throw new Error("Expected the field `paymentOption` to be a primitive type in the JSON string but got " + data['paymentOption']);
        }
        // ensure the json data is a string
        if (data['paymentPlan'] && !(typeof data['paymentPlan'] === 'string' || data['paymentPlan'] instanceof String)) {
            throw new Error("Expected the field `paymentPlan` to be a primitive type in the JSON string but got " + data['paymentPlan']);
        }
        // ensure the json data is a string
        if (data['scheduledRenewalOffer'] && !(typeof data['scheduledRenewalOffer'] === 'string' || data['scheduledRenewalOffer'] instanceof String)) {
            throw new Error("Expected the field `scheduledRenewalOffer` to be a primitive type in the JSON string but got " + data['scheduledRenewalOffer']);
        }

        return true;
    }


}



/**
 * If true, disables commitment-based offer on renewal and switches to flexible or pay as you go. Deprecated: Use `payment_plan` instead.
 * @member {Boolean} disableCommitment
 */
GoogleCloudChannelV1alpha1RenewalSettings.prototype['disableCommitment'] = undefined;

/**
 * If false, the plan will be completed at the end date.
 * @member {Boolean} enableRenewal
 */
GoogleCloudChannelV1alpha1RenewalSettings.prototype['enableRenewal'] = undefined;

/**
 * @member {module:model/GoogleCloudChannelV1alpha1Period} paymentCycle
 */
GoogleCloudChannelV1alpha1RenewalSettings.prototype['paymentCycle'] = undefined;

/**
 * Set if enable_renewal=true. Deprecated: Use `payment_cycle` instead.
 * @member {module:model/GoogleCloudChannelV1alpha1RenewalSettings.PaymentOptionEnum} paymentOption
 */
GoogleCloudChannelV1alpha1RenewalSettings.prototype['paymentOption'] = undefined;

/**
 * Describes how a reseller will be billed.
 * @member {module:model/GoogleCloudChannelV1alpha1RenewalSettings.PaymentPlanEnum} paymentPlan
 */
GoogleCloudChannelV1alpha1RenewalSettings.prototype['paymentPlan'] = undefined;

/**
 * If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.
 * @member {Boolean} resizeUnitCount
 */
GoogleCloudChannelV1alpha1RenewalSettings.prototype['resizeUnitCount'] = undefined;

/**
 * Output only. The offer resource name that the entitlement will renew on at the end date. Takes the form: accounts/{account_id}/offers/{offer_id}.
 * @member {String} scheduledRenewalOffer
 */
GoogleCloudChannelV1alpha1RenewalSettings.prototype['scheduledRenewalOffer'] = undefined;





/**
 * Allowed values for the <code>paymentOption</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudChannelV1alpha1RenewalSettings['PaymentOptionEnum'] = {

    /**
     * value: "PAYMENT_OPTION_UNSPECIFIED"
     * @const
     */
    "PAYMENT_OPTION_UNSPECIFIED": "PAYMENT_OPTION_UNSPECIFIED",

    /**
     * value: "ANNUAL"
     * @const
     */
    "ANNUAL": "ANNUAL",

    /**
     * value: "MONTHLY"
     * @const
     */
    "MONTHLY": "MONTHLY"
};


/**
 * Allowed values for the <code>paymentPlan</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudChannelV1alpha1RenewalSettings['PaymentPlanEnum'] = {

    /**
     * value: "PAYMENT_PLAN_UNSPECIFIED"
     * @const
     */
    "PAYMENT_PLAN_UNSPECIFIED": "PAYMENT_PLAN_UNSPECIFIED",

    /**
     * value: "COMMITMENT"
     * @const
     */
    "COMMITMENT": "COMMITMENT",

    /**
     * value: "FLEXIBLE"
     * @const
     */
    "FLEXIBLE": "FLEXIBLE",

    /**
     * value: "FREE"
     * @const
     */
    "FREE": "FREE",

    /**
     * value: "TRIAL"
     * @const
     */
    "TRIAL": "TRIAL",

    /**
     * value: "OFFLINE"
     * @const
     */
    "OFFLINE": "OFFLINE"
};



export default GoogleCloudChannelV1alpha1RenewalSettings;

