/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudChannelV1ConditionalOverride from './GoogleCloudChannelV1ConditionalOverride';
import GoogleCloudChannelV1RepricingAdjustment from './GoogleCloudChannelV1RepricingAdjustment';
import GoogleCloudChannelV1RepricingConfigEntitlementGranularity from './GoogleCloudChannelV1RepricingConfigEntitlementGranularity';
import GoogleTypeDate from './GoogleTypeDate';

/**
 * The GoogleCloudChannelV1RepricingConfig model module.
 * @module model/GoogleCloudChannelV1RepricingConfig
 * @version v1
 */
class GoogleCloudChannelV1RepricingConfig {
    /**
     * Constructs a new <code>GoogleCloudChannelV1RepricingConfig</code>.
     * Configuration for repricing a Google bill over a period of time.
     * @alias module:model/GoogleCloudChannelV1RepricingConfig
     */
    constructor() { 
        
        GoogleCloudChannelV1RepricingConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudChannelV1RepricingConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudChannelV1RepricingConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudChannelV1RepricingConfig} The populated <code>GoogleCloudChannelV1RepricingConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudChannelV1RepricingConfig();

            if (data.hasOwnProperty('adjustment')) {
                obj['adjustment'] = GoogleCloudChannelV1RepricingAdjustment.constructFromObject(data['adjustment']);
            }
            if (data.hasOwnProperty('channelPartnerGranularity')) {
                obj['channelPartnerGranularity'] = ApiClient.convertToType(data['channelPartnerGranularity'], Object);
            }
            if (data.hasOwnProperty('conditionalOverrides')) {
                obj['conditionalOverrides'] = ApiClient.convertToType(data['conditionalOverrides'], [GoogleCloudChannelV1ConditionalOverride]);
            }
            if (data.hasOwnProperty('effectiveInvoiceMonth')) {
                obj['effectiveInvoiceMonth'] = GoogleTypeDate.constructFromObject(data['effectiveInvoiceMonth']);
            }
            if (data.hasOwnProperty('entitlementGranularity')) {
                obj['entitlementGranularity'] = GoogleCloudChannelV1RepricingConfigEntitlementGranularity.constructFromObject(data['entitlementGranularity']);
            }
            if (data.hasOwnProperty('rebillingBasis')) {
                obj['rebillingBasis'] = ApiClient.convertToType(data['rebillingBasis'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudChannelV1RepricingConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudChannelV1RepricingConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `adjustment`
        if (data['adjustment']) { // data not null
          GoogleCloudChannelV1RepricingAdjustment.validateJSON(data['adjustment']);
        }
        if (data['conditionalOverrides']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conditionalOverrides'])) {
                throw new Error("Expected the field `conditionalOverrides` to be an array in the JSON data but got " + data['conditionalOverrides']);
            }
            // validate the optional field `conditionalOverrides` (array)
            for (const item of data['conditionalOverrides']) {
                GoogleCloudChannelV1ConditionalOverride.validateJSON(item);
            };
        }
        // validate the optional field `effectiveInvoiceMonth`
        if (data['effectiveInvoiceMonth']) { // data not null
          GoogleTypeDate.validateJSON(data['effectiveInvoiceMonth']);
        }
        // validate the optional field `entitlementGranularity`
        if (data['entitlementGranularity']) { // data not null
          GoogleCloudChannelV1RepricingConfigEntitlementGranularity.validateJSON(data['entitlementGranularity']);
        }
        // ensure the json data is a string
        if (data['rebillingBasis'] && !(typeof data['rebillingBasis'] === 'string' || data['rebillingBasis'] instanceof String)) {
            throw new Error("Expected the field `rebillingBasis` to be a primitive type in the JSON string but got " + data['rebillingBasis']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudChannelV1RepricingAdjustment} adjustment
 */
GoogleCloudChannelV1RepricingConfig.prototype['adjustment'] = undefined;

/**
 * Applies the repricing configuration at the channel partner level. The channel partner value is derived from the resource name. Takes an empty json object. Deprecated: This is no longer supported. Use RepricingConfig.EntitlementGranularity instead.
 * @member {Object} channelPartnerGranularity
 */
GoogleCloudChannelV1RepricingConfig.prototype['channelPartnerGranularity'] = undefined;

/**
 * The conditional overrides to apply for this configuration. If you list multiple overrides, only the first valid override is used. If you don't list any overrides, the API uses the normal adjustment and rebilling basis.
 * @member {Array.<module:model/GoogleCloudChannelV1ConditionalOverride>} conditionalOverrides
 */
GoogleCloudChannelV1RepricingConfig.prototype['conditionalOverrides'] = undefined;

/**
 * @member {module:model/GoogleTypeDate} effectiveInvoiceMonth
 */
GoogleCloudChannelV1RepricingConfig.prototype['effectiveInvoiceMonth'] = undefined;

/**
 * @member {module:model/GoogleCloudChannelV1RepricingConfigEntitlementGranularity} entitlementGranularity
 */
GoogleCloudChannelV1RepricingConfig.prototype['entitlementGranularity'] = undefined;

/**
 * Required. The RebillingBasis to use for this bill. Specifies the relative cost based on repricing costs you will apply.
 * @member {module:model/GoogleCloudChannelV1RepricingConfig.RebillingBasisEnum} rebillingBasis
 */
GoogleCloudChannelV1RepricingConfig.prototype['rebillingBasis'] = undefined;





/**
 * Allowed values for the <code>rebillingBasis</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudChannelV1RepricingConfig['RebillingBasisEnum'] = {

    /**
     * value: "REBILLING_BASIS_UNSPECIFIED"
     * @const
     */
    "REBILLING_BASIS_UNSPECIFIED": "REBILLING_BASIS_UNSPECIFIED",

    /**
     * value: "COST_AT_LIST"
     * @const
     */
    "COST_AT_LIST": "COST_AT_LIST",

    /**
     * value: "DIRECT_CUSTOMER_COST"
     * @const
     */
    "DIRECT_CUSTOMER_COST": "DIRECT_CUSTOMER_COST"
};



export default GoogleCloudChannelV1RepricingConfig;

