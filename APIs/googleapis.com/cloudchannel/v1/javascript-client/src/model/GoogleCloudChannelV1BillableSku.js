/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudChannelV1BillableSku model module.
 * @module model/GoogleCloudChannelV1BillableSku
 * @version v1
 */
class GoogleCloudChannelV1BillableSku {
    /**
     * Constructs a new <code>GoogleCloudChannelV1BillableSku</code>.
     * Represents the Billable SKU information.
     * @alias module:model/GoogleCloudChannelV1BillableSku
     */
    constructor() { 
        
        GoogleCloudChannelV1BillableSku.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudChannelV1BillableSku</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudChannelV1BillableSku} obj Optional instance to populate.
     * @return {module:model/GoogleCloudChannelV1BillableSku} The populated <code>GoogleCloudChannelV1BillableSku</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudChannelV1BillableSku();

            if (data.hasOwnProperty('service')) {
                obj['service'] = ApiClient.convertToType(data['service'], 'String');
            }
            if (data.hasOwnProperty('serviceDisplayName')) {
                obj['serviceDisplayName'] = ApiClient.convertToType(data['serviceDisplayName'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('skuDisplayName')) {
                obj['skuDisplayName'] = ApiClient.convertToType(data['skuDisplayName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudChannelV1BillableSku</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudChannelV1BillableSku</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['service'] && !(typeof data['service'] === 'string' || data['service'] instanceof String)) {
            throw new Error("Expected the field `service` to be a primitive type in the JSON string but got " + data['service']);
        }
        // ensure the json data is a string
        if (data['serviceDisplayName'] && !(typeof data['serviceDisplayName'] === 'string' || data['serviceDisplayName'] instanceof String)) {
            throw new Error("Expected the field `serviceDisplayName` to be a primitive type in the JSON string but got " + data['serviceDisplayName']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['skuDisplayName'] && !(typeof data['skuDisplayName'] === 'string' || data['skuDisplayName'] instanceof String)) {
            throw new Error("Expected the field `skuDisplayName` to be a primitive type in the JSON string but got " + data['skuDisplayName']);
        }

        return true;
    }


}



/**
 * Resource name of Service which contains Repricing SKU. Format: services/{service}. Example: \"services/B7D9-FDCB-15D8\".
 * @member {String} service
 */
GoogleCloudChannelV1BillableSku.prototype['service'] = undefined;

/**
 * Unique human readable name for the Service.
 * @member {String} serviceDisplayName
 */
GoogleCloudChannelV1BillableSku.prototype['serviceDisplayName'] = undefined;

/**
 * Resource name of Billable SKU. Format: billableSkus/{sku}. Example: billableSkus/6E1B-6634-470F\".
 * @member {String} sku
 */
GoogleCloudChannelV1BillableSku.prototype['sku'] = undefined;

/**
 * Unique human readable name for the SKU.
 * @member {String} skuDisplayName
 */
GoogleCloudChannelV1BillableSku.prototype['skuDisplayName'] = undefined;






export default GoogleCloudChannelV1BillableSku;

