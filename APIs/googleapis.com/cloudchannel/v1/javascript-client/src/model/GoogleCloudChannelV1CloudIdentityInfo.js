/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudChannelV1EduData from './GoogleCloudChannelV1EduData';

/**
 * The GoogleCloudChannelV1CloudIdentityInfo model module.
 * @module model/GoogleCloudChannelV1CloudIdentityInfo
 * @version v1
 */
class GoogleCloudChannelV1CloudIdentityInfo {
    /**
     * Constructs a new <code>GoogleCloudChannelV1CloudIdentityInfo</code>.
     * Cloud Identity information for the Cloud Channel Customer.
     * @alias module:model/GoogleCloudChannelV1CloudIdentityInfo
     */
    constructor() { 
        
        GoogleCloudChannelV1CloudIdentityInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudChannelV1CloudIdentityInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudChannelV1CloudIdentityInfo} obj Optional instance to populate.
     * @return {module:model/GoogleCloudChannelV1CloudIdentityInfo} The populated <code>GoogleCloudChannelV1CloudIdentityInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudChannelV1CloudIdentityInfo();

            if (data.hasOwnProperty('adminConsoleUri')) {
                obj['adminConsoleUri'] = ApiClient.convertToType(data['adminConsoleUri'], 'String');
            }
            if (data.hasOwnProperty('alternateEmail')) {
                obj['alternateEmail'] = ApiClient.convertToType(data['alternateEmail'], 'String');
            }
            if (data.hasOwnProperty('customerType')) {
                obj['customerType'] = ApiClient.convertToType(data['customerType'], 'String');
            }
            if (data.hasOwnProperty('eduData')) {
                obj['eduData'] = GoogleCloudChannelV1EduData.constructFromObject(data['eduData']);
            }
            if (data.hasOwnProperty('isDomainVerified')) {
                obj['isDomainVerified'] = ApiClient.convertToType(data['isDomainVerified'], 'Boolean');
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
            if (data.hasOwnProperty('primaryDomain')) {
                obj['primaryDomain'] = ApiClient.convertToType(data['primaryDomain'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudChannelV1CloudIdentityInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudChannelV1CloudIdentityInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adminConsoleUri'] && !(typeof data['adminConsoleUri'] === 'string' || data['adminConsoleUri'] instanceof String)) {
            throw new Error("Expected the field `adminConsoleUri` to be a primitive type in the JSON string but got " + data['adminConsoleUri']);
        }
        // ensure the json data is a string
        if (data['alternateEmail'] && !(typeof data['alternateEmail'] === 'string' || data['alternateEmail'] instanceof String)) {
            throw new Error("Expected the field `alternateEmail` to be a primitive type in the JSON string but got " + data['alternateEmail']);
        }
        // ensure the json data is a string
        if (data['customerType'] && !(typeof data['customerType'] === 'string' || data['customerType'] instanceof String)) {
            throw new Error("Expected the field `customerType` to be a primitive type in the JSON string but got " + data['customerType']);
        }
        // validate the optional field `eduData`
        if (data['eduData']) { // data not null
          GoogleCloudChannelV1EduData.validateJSON(data['eduData']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is a string
        if (data['phoneNumber'] && !(typeof data['phoneNumber'] === 'string' || data['phoneNumber'] instanceof String)) {
            throw new Error("Expected the field `phoneNumber` to be a primitive type in the JSON string but got " + data['phoneNumber']);
        }
        // ensure the json data is a string
        if (data['primaryDomain'] && !(typeof data['primaryDomain'] === 'string' || data['primaryDomain'] instanceof String)) {
            throw new Error("Expected the field `primaryDomain` to be a primitive type in the JSON string but got " + data['primaryDomain']);
        }

        return true;
    }


}



/**
 * Output only. URI of Customer's Admin console dashboard.
 * @member {String} adminConsoleUri
 */
GoogleCloudChannelV1CloudIdentityInfo.prototype['adminConsoleUri'] = undefined;

/**
 * The alternate email.
 * @member {String} alternateEmail
 */
GoogleCloudChannelV1CloudIdentityInfo.prototype['alternateEmail'] = undefined;

/**
 * CustomerType indicates verification type needed for using services.
 * @member {module:model/GoogleCloudChannelV1CloudIdentityInfo.CustomerTypeEnum} customerType
 */
GoogleCloudChannelV1CloudIdentityInfo.prototype['customerType'] = undefined;

/**
 * @member {module:model/GoogleCloudChannelV1EduData} eduData
 */
GoogleCloudChannelV1CloudIdentityInfo.prototype['eduData'] = undefined;

/**
 * Output only. Whether the domain is verified. This field is not returned for a Customer's cloud_identity_info resource. Partners can use the domains.get() method of the Workspace SDK's Directory API, or listen to the PRIMARY_DOMAIN_VERIFIED Pub/Sub event in to track domain verification of their resolve Workspace customers.
 * @member {Boolean} isDomainVerified
 */
GoogleCloudChannelV1CloudIdentityInfo.prototype['isDomainVerified'] = undefined;

/**
 * Language code.
 * @member {String} languageCode
 */
GoogleCloudChannelV1CloudIdentityInfo.prototype['languageCode'] = undefined;

/**
 * Phone number associated with the Cloud Identity.
 * @member {String} phoneNumber
 */
GoogleCloudChannelV1CloudIdentityInfo.prototype['phoneNumber'] = undefined;

/**
 * Output only. The primary domain name.
 * @member {String} primaryDomain
 */
GoogleCloudChannelV1CloudIdentityInfo.prototype['primaryDomain'] = undefined;





/**
 * Allowed values for the <code>customerType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudChannelV1CloudIdentityInfo['CustomerTypeEnum'] = {

    /**
     * value: "CUSTOMER_TYPE_UNSPECIFIED"
     * @const
     */
    "CUSTOMER_TYPE_UNSPECIFIED": "CUSTOMER_TYPE_UNSPECIFIED",

    /**
     * value: "DOMAIN"
     * @const
     */
    "DOMAIN": "DOMAIN",

    /**
     * value: "TEAM"
     * @const
     */
    "TEAM": "TEAM"
};



export default GoogleCloudChannelV1CloudIdentityInfo;

