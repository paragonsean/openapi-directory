/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudChannelV1CloudIdentityInfo from './GoogleCloudChannelV1CloudIdentityInfo';

/**
 * The GoogleCloudChannelV1ChannelPartnerLink model module.
 * @module model/GoogleCloudChannelV1ChannelPartnerLink
 * @version v1
 */
class GoogleCloudChannelV1ChannelPartnerLink {
    /**
     * Constructs a new <code>GoogleCloudChannelV1ChannelPartnerLink</code>.
     * Entity representing a link between distributors and their indirect resellers in an n-tier resale channel.
     * @alias module:model/GoogleCloudChannelV1ChannelPartnerLink
     */
    constructor() { 
        
        GoogleCloudChannelV1ChannelPartnerLink.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudChannelV1ChannelPartnerLink</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudChannelV1ChannelPartnerLink} obj Optional instance to populate.
     * @return {module:model/GoogleCloudChannelV1ChannelPartnerLink} The populated <code>GoogleCloudChannelV1ChannelPartnerLink</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudChannelV1ChannelPartnerLink();

            if (data.hasOwnProperty('channelPartnerCloudIdentityInfo')) {
                obj['channelPartnerCloudIdentityInfo'] = GoogleCloudChannelV1CloudIdentityInfo.constructFromObject(data['channelPartnerCloudIdentityInfo']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('inviteLinkUri')) {
                obj['inviteLinkUri'] = ApiClient.convertToType(data['inviteLinkUri'], 'String');
            }
            if (data.hasOwnProperty('linkState')) {
                obj['linkState'] = ApiClient.convertToType(data['linkState'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('publicId')) {
                obj['publicId'] = ApiClient.convertToType(data['publicId'], 'String');
            }
            if (data.hasOwnProperty('resellerCloudIdentityId')) {
                obj['resellerCloudIdentityId'] = ApiClient.convertToType(data['resellerCloudIdentityId'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudChannelV1ChannelPartnerLink</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudChannelV1ChannelPartnerLink</code>.
     */
    static validateJSON(data) {
        // validate the optional field `channelPartnerCloudIdentityInfo`
        if (data['channelPartnerCloudIdentityInfo']) { // data not null
          GoogleCloudChannelV1CloudIdentityInfo.validateJSON(data['channelPartnerCloudIdentityInfo']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['inviteLinkUri'] && !(typeof data['inviteLinkUri'] === 'string' || data['inviteLinkUri'] instanceof String)) {
            throw new Error("Expected the field `inviteLinkUri` to be a primitive type in the JSON string but got " + data['inviteLinkUri']);
        }
        // ensure the json data is a string
        if (data['linkState'] && !(typeof data['linkState'] === 'string' || data['linkState'] instanceof String)) {
            throw new Error("Expected the field `linkState` to be a primitive type in the JSON string but got " + data['linkState']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['publicId'] && !(typeof data['publicId'] === 'string' || data['publicId'] instanceof String)) {
            throw new Error("Expected the field `publicId` to be a primitive type in the JSON string but got " + data['publicId']);
        }
        // ensure the json data is a string
        if (data['resellerCloudIdentityId'] && !(typeof data['resellerCloudIdentityId'] === 'string' || data['resellerCloudIdentityId'] instanceof String)) {
            throw new Error("Expected the field `resellerCloudIdentityId` to be a primitive type in the JSON string but got " + data['resellerCloudIdentityId']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudChannelV1CloudIdentityInfo} channelPartnerCloudIdentityInfo
 */
GoogleCloudChannelV1ChannelPartnerLink.prototype['channelPartnerCloudIdentityInfo'] = undefined;

/**
 * Output only. Timestamp of when the channel partner link is created.
 * @member {String} createTime
 */
GoogleCloudChannelV1ChannelPartnerLink.prototype['createTime'] = undefined;

/**
 * Output only. URI of the web page where partner accepts the link invitation.
 * @member {String} inviteLinkUri
 */
GoogleCloudChannelV1ChannelPartnerLink.prototype['inviteLinkUri'] = undefined;

/**
 * Required. State of the channel partner link.
 * @member {module:model/GoogleCloudChannelV1ChannelPartnerLink.LinkStateEnum} linkState
 */
GoogleCloudChannelV1ChannelPartnerLink.prototype['linkState'] = undefined;

/**
 * Output only. Resource name for the channel partner link, in the format accounts/{account_id}/channelPartnerLinks/{id}.
 * @member {String} name
 */
GoogleCloudChannelV1ChannelPartnerLink.prototype['name'] = undefined;

/**
 * Output only. Public identifier that a customer must use to generate a transfer token to move to this distributor-reseller combination.
 * @member {String} publicId
 */
GoogleCloudChannelV1ChannelPartnerLink.prototype['publicId'] = undefined;

/**
 * Required. Cloud Identity ID of the linked reseller.
 * @member {String} resellerCloudIdentityId
 */
GoogleCloudChannelV1ChannelPartnerLink.prototype['resellerCloudIdentityId'] = undefined;

/**
 * Output only. Timestamp of when the channel partner link is updated.
 * @member {String} updateTime
 */
GoogleCloudChannelV1ChannelPartnerLink.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>linkState</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudChannelV1ChannelPartnerLink['LinkStateEnum'] = {

    /**
     * value: "CHANNEL_PARTNER_LINK_STATE_UNSPECIFIED"
     * @const
     */
    "CHANNEL_PARTNER_LINK_STATE_UNSPECIFIED": "CHANNEL_PARTNER_LINK_STATE_UNSPECIFIED",

    /**
     * value: "INVITED"
     * @const
     */
    "INVITED": "INVITED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "REVOKED"
     * @const
     */
    "REVOKED": "REVOKED",

    /**
     * value: "SUSPENDED"
     * @const
     */
    "SUSPENDED": "SUSPENDED"
};



export default GoogleCloudChannelV1ChannelPartnerLink;

