/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudChannelV1AssociationInfo from './GoogleCloudChannelV1AssociationInfo';
import GoogleCloudChannelV1CommitmentSettings from './GoogleCloudChannelV1CommitmentSettings';
import GoogleCloudChannelV1Parameter from './GoogleCloudChannelV1Parameter';
import GoogleCloudChannelV1ProvisionedService from './GoogleCloudChannelV1ProvisionedService';
import GoogleCloudChannelV1TrialSettings from './GoogleCloudChannelV1TrialSettings';

/**
 * The GoogleCloudChannelV1Entitlement model module.
 * @module model/GoogleCloudChannelV1Entitlement
 * @version v1
 */
class GoogleCloudChannelV1Entitlement {
    /**
     * Constructs a new <code>GoogleCloudChannelV1Entitlement</code>.
     * An entitlement is a representation of a customer&#39;s ability to use a service.
     * @alias module:model/GoogleCloudChannelV1Entitlement
     */
    constructor() { 
        
        GoogleCloudChannelV1Entitlement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudChannelV1Entitlement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudChannelV1Entitlement} obj Optional instance to populate.
     * @return {module:model/GoogleCloudChannelV1Entitlement} The populated <code>GoogleCloudChannelV1Entitlement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudChannelV1Entitlement();

            if (data.hasOwnProperty('associationInfo')) {
                obj['associationInfo'] = GoogleCloudChannelV1AssociationInfo.constructFromObject(data['associationInfo']);
            }
            if (data.hasOwnProperty('billingAccount')) {
                obj['billingAccount'] = ApiClient.convertToType(data['billingAccount'], 'String');
            }
            if (data.hasOwnProperty('commitmentSettings')) {
                obj['commitmentSettings'] = GoogleCloudChannelV1CommitmentSettings.constructFromObject(data['commitmentSettings']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('offer')) {
                obj['offer'] = ApiClient.convertToType(data['offer'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [GoogleCloudChannelV1Parameter]);
            }
            if (data.hasOwnProperty('provisionedService')) {
                obj['provisionedService'] = GoogleCloudChannelV1ProvisionedService.constructFromObject(data['provisionedService']);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('purchaseOrderId')) {
                obj['purchaseOrderId'] = ApiClient.convertToType(data['purchaseOrderId'], 'String');
            }
            if (data.hasOwnProperty('suspensionReasons')) {
                obj['suspensionReasons'] = ApiClient.convertToType(data['suspensionReasons'], ['String']);
            }
            if (data.hasOwnProperty('trialSettings')) {
                obj['trialSettings'] = GoogleCloudChannelV1TrialSettings.constructFromObject(data['trialSettings']);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudChannelV1Entitlement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudChannelV1Entitlement</code>.
     */
    static validateJSON(data) {
        // validate the optional field `associationInfo`
        if (data['associationInfo']) { // data not null
          GoogleCloudChannelV1AssociationInfo.validateJSON(data['associationInfo']);
        }
        // ensure the json data is a string
        if (data['billingAccount'] && !(typeof data['billingAccount'] === 'string' || data['billingAccount'] instanceof String)) {
            throw new Error("Expected the field `billingAccount` to be a primitive type in the JSON string but got " + data['billingAccount']);
        }
        // validate the optional field `commitmentSettings`
        if (data['commitmentSettings']) { // data not null
          GoogleCloudChannelV1CommitmentSettings.validateJSON(data['commitmentSettings']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['offer'] && !(typeof data['offer'] === 'string' || data['offer'] instanceof String)) {
            throw new Error("Expected the field `offer` to be a primitive type in the JSON string but got " + data['offer']);
        }
        if (data['parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameters'])) {
                throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
            }
            // validate the optional field `parameters` (array)
            for (const item of data['parameters']) {
                GoogleCloudChannelV1Parameter.validateJSON(item);
            };
        }
        // validate the optional field `provisionedService`
        if (data['provisionedService']) { // data not null
          GoogleCloudChannelV1ProvisionedService.validateJSON(data['provisionedService']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['purchaseOrderId'] && !(typeof data['purchaseOrderId'] === 'string' || data['purchaseOrderId'] instanceof String)) {
            throw new Error("Expected the field `purchaseOrderId` to be a primitive type in the JSON string but got " + data['purchaseOrderId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['suspensionReasons'])) {
            throw new Error("Expected the field `suspensionReasons` to be an array in the JSON data but got " + data['suspensionReasons']);
        }
        // validate the optional field `trialSettings`
        if (data['trialSettings']) { // data not null
          GoogleCloudChannelV1TrialSettings.validateJSON(data['trialSettings']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudChannelV1AssociationInfo} associationInfo
 */
GoogleCloudChannelV1Entitlement.prototype['associationInfo'] = undefined;

/**
 * Optional. The billing account resource name that is used to pay for this entitlement.
 * @member {String} billingAccount
 */
GoogleCloudChannelV1Entitlement.prototype['billingAccount'] = undefined;

/**
 * @member {module:model/GoogleCloudChannelV1CommitmentSettings} commitmentSettings
 */
GoogleCloudChannelV1Entitlement.prototype['commitmentSettings'] = undefined;

/**
 * Output only. The time at which the entitlement is created.
 * @member {String} createTime
 */
GoogleCloudChannelV1Entitlement.prototype['createTime'] = undefined;

/**
 * Output only. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}.
 * @member {String} name
 */
GoogleCloudChannelV1Entitlement.prototype['name'] = undefined;

/**
 * Required. The offer resource name for which the entitlement is to be created. Takes the form: accounts/{account_id}/offers/{offer_id}.
 * @member {String} offer
 */
GoogleCloudChannelV1Entitlement.prototype['offer'] = undefined;

/**
 * Extended entitlement parameters. When creating an entitlement, valid parameter names and values are defined in the Offer.parameter_definitions. For Google Workspace, the following Parameters may be accepted as input: - max_units: The maximum assignable units for a flexible offer OR - num_units: The total commitment for commitment-based offers The response may additionally include the following output-only Parameters: - assigned_units: The number of licenses assigned to users. For Google Cloud billing subaccounts, the following Parameter may be accepted as input: - display_name: The display name of the billing subaccount.
 * @member {Array.<module:model/GoogleCloudChannelV1Parameter>} parameters
 */
GoogleCloudChannelV1Entitlement.prototype['parameters'] = undefined;

/**
 * @member {module:model/GoogleCloudChannelV1ProvisionedService} provisionedService
 */
GoogleCloudChannelV1Entitlement.prototype['provisionedService'] = undefined;

/**
 * Output only. Current provisioning state of the entitlement.
 * @member {module:model/GoogleCloudChannelV1Entitlement.ProvisioningStateEnum} provisioningState
 */
GoogleCloudChannelV1Entitlement.prototype['provisioningState'] = undefined;

/**
 * Optional. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given, it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters. This is only supported for Google Workspace entitlements.
 * @member {String} purchaseOrderId
 */
GoogleCloudChannelV1Entitlement.prototype['purchaseOrderId'] = undefined;

/**
 * Output only. Enumerable of all current suspension reasons for an entitlement.
 * @member {Array.<module:model/GoogleCloudChannelV1Entitlement.SuspensionReasonsEnum>} suspensionReasons
 */
GoogleCloudChannelV1Entitlement.prototype['suspensionReasons'] = undefined;

/**
 * @member {module:model/GoogleCloudChannelV1TrialSettings} trialSettings
 */
GoogleCloudChannelV1Entitlement.prototype['trialSettings'] = undefined;

/**
 * Output only. The time at which the entitlement is updated.
 * @member {String} updateTime
 */
GoogleCloudChannelV1Entitlement.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudChannelV1Entitlement['ProvisioningStateEnum'] = {

    /**
     * value: "PROVISIONING_STATE_UNSPECIFIED"
     * @const
     */
    "PROVISIONING_STATE_UNSPECIFIED": "PROVISIONING_STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "SUSPENDED"
     * @const
     */
    "SUSPENDED": "SUSPENDED"
};


/**
 * Allowed values for the <code>suspensionReasons</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudChannelV1Entitlement['SuspensionReasonsEnum'] = {

    /**
     * value: "SUSPENSION_REASON_UNSPECIFIED"
     * @const
     */
    "SUSPENSION_REASON_UNSPECIFIED": "SUSPENSION_REASON_UNSPECIFIED",

    /**
     * value: "RESELLER_INITIATED"
     * @const
     */
    "RESELLER_INITIATED": "RESELLER_INITIATED",

    /**
     * value: "TRIAL_ENDED"
     * @const
     */
    "TRIAL_ENDED": "TRIAL_ENDED",

    /**
     * value: "RENEWAL_WITH_TYPE_CANCEL"
     * @const
     */
    "RENEWAL_WITH_TYPE_CANCEL": "RENEWAL_WITH_TYPE_CANCEL",

    /**
     * value: "PENDING_TOS_ACCEPTANCE"
     * @const
     */
    "PENDING_TOS_ACCEPTANCE": "PENDING_TOS_ACCEPTANCE",

    /**
     * value: "OTHER"
     * @const
     */
    "OTHER": "OTHER"
};



export default GoogleCloudChannelV1Entitlement;

