/**
 * Cloud Channel API
 * The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudChannelV1Value from './GoogleCloudChannelV1Value';

/**
 * The GoogleCloudChannelV1ParameterDefinition model module.
 * @module model/GoogleCloudChannelV1ParameterDefinition
 * @version v1
 */
class GoogleCloudChannelV1ParameterDefinition {
    /**
     * Constructs a new <code>GoogleCloudChannelV1ParameterDefinition</code>.
     * Parameter&#39;s definition. Specifies what parameter is required to use the current Offer to purchase.
     * @alias module:model/GoogleCloudChannelV1ParameterDefinition
     */
    constructor() { 
        
        GoogleCloudChannelV1ParameterDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudChannelV1ParameterDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudChannelV1ParameterDefinition} obj Optional instance to populate.
     * @return {module:model/GoogleCloudChannelV1ParameterDefinition} The populated <code>GoogleCloudChannelV1ParameterDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudChannelV1ParameterDefinition();

            if (data.hasOwnProperty('allowedValues')) {
                obj['allowedValues'] = ApiClient.convertToType(data['allowedValues'], [GoogleCloudChannelV1Value]);
            }
            if (data.hasOwnProperty('maxValue')) {
                obj['maxValue'] = GoogleCloudChannelV1Value.constructFromObject(data['maxValue']);
            }
            if (data.hasOwnProperty('minValue')) {
                obj['minValue'] = GoogleCloudChannelV1Value.constructFromObject(data['minValue']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('optional')) {
                obj['optional'] = ApiClient.convertToType(data['optional'], 'Boolean');
            }
            if (data.hasOwnProperty('parameterType')) {
                obj['parameterType'] = ApiClient.convertToType(data['parameterType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudChannelV1ParameterDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudChannelV1ParameterDefinition</code>.
     */
    static validateJSON(data) {
        if (data['allowedValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['allowedValues'])) {
                throw new Error("Expected the field `allowedValues` to be an array in the JSON data but got " + data['allowedValues']);
            }
            // validate the optional field `allowedValues` (array)
            for (const item of data['allowedValues']) {
                GoogleCloudChannelV1Value.validateJSON(item);
            };
        }
        // validate the optional field `maxValue`
        if (data['maxValue']) { // data not null
          GoogleCloudChannelV1Value.validateJSON(data['maxValue']);
        }
        // validate the optional field `minValue`
        if (data['minValue']) { // data not null
          GoogleCloudChannelV1Value.validateJSON(data['minValue']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['parameterType'] && !(typeof data['parameterType'] === 'string' || data['parameterType'] instanceof String)) {
            throw new Error("Expected the field `parameterType` to be a primitive type in the JSON string but got " + data['parameterType']);
        }

        return true;
    }


}



/**
 * If not empty, parameter values must be drawn from this list. For example, [us-west1, us-west2, ...] Applicable to STRING parameter type.
 * @member {Array.<module:model/GoogleCloudChannelV1Value>} allowedValues
 */
GoogleCloudChannelV1ParameterDefinition.prototype['allowedValues'] = undefined;

/**
 * @member {module:model/GoogleCloudChannelV1Value} maxValue
 */
GoogleCloudChannelV1ParameterDefinition.prototype['maxValue'] = undefined;

/**
 * @member {module:model/GoogleCloudChannelV1Value} minValue
 */
GoogleCloudChannelV1ParameterDefinition.prototype['minValue'] = undefined;

/**
 * Name of the parameter.
 * @member {String} name
 */
GoogleCloudChannelV1ParameterDefinition.prototype['name'] = undefined;

/**
 * If set to true, parameter is optional to purchase this Offer.
 * @member {Boolean} optional
 */
GoogleCloudChannelV1ParameterDefinition.prototype['optional'] = undefined;

/**
 * Data type of the parameter. Minimal value, Maximum value and allowed values will use specified data type here.
 * @member {module:model/GoogleCloudChannelV1ParameterDefinition.ParameterTypeEnum} parameterType
 */
GoogleCloudChannelV1ParameterDefinition.prototype['parameterType'] = undefined;





/**
 * Allowed values for the <code>parameterType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudChannelV1ParameterDefinition['ParameterTypeEnum'] = {

    /**
     * value: "PARAMETER_TYPE_UNSPECIFIED"
     * @const
     */
    "PARAMETER_TYPE_UNSPECIFIED": "PARAMETER_TYPE_UNSPECIFIED",

    /**
     * value: "INT64"
     * @const
     */
    "INT64": "INT64",

    /**
     * value: "STRING"
     * @const
     */
    "STRING": "STRING",

    /**
     * value: "DOUBLE"
     * @const
     */
    "DOUBLE": "DOUBLE",

    /**
     * value: "BOOLEAN"
     * @const
     */
    "BOOLEAN": "BOOLEAN"
};



export default GoogleCloudChannelV1ParameterDefinition;

