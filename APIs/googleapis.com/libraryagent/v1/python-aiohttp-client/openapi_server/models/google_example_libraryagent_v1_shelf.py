# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleExampleLibraryagentV1Shelf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, theme: str=None):
        """GoogleExampleLibraryagentV1Shelf - a model defined in OpenAPI

        :param name: The name of this GoogleExampleLibraryagentV1Shelf.
        :param theme: The theme of this GoogleExampleLibraryagentV1Shelf.
        """
        self.openapi_types = {
            'name': str,
            'theme': str
        }

        self.attribute_map = {
            'name': 'name',
            'theme': 'theme'
        }

        self._name = name
        self._theme = theme

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleExampleLibraryagentV1Shelf':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleExampleLibraryagentV1Shelf of this GoogleExampleLibraryagentV1Shelf.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this GoogleExampleLibraryagentV1Shelf.

        Output only. The resource name of the shelf. Shelf names have the form `shelves/{shelf_id}`. The name is ignored when creating a shelf.

        :return: The name of this GoogleExampleLibraryagentV1Shelf.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleExampleLibraryagentV1Shelf.

        Output only. The resource name of the shelf. Shelf names have the form `shelves/{shelf_id}`. The name is ignored when creating a shelf.

        :param name: The name of this GoogleExampleLibraryagentV1Shelf.
        :type name: str
        """

        self._name = name

    @property
    def theme(self):
        """Gets the theme of this GoogleExampleLibraryagentV1Shelf.

        The theme of the shelf

        :return: The theme of this GoogleExampleLibraryagentV1Shelf.
        :rtype: str
        """
        return self._theme

    @theme.setter
    def theme(self, theme):
        """Sets the theme of this GoogleExampleLibraryagentV1Shelf.

        The theme of the shelf

        :param theme: The theme of this GoogleExampleLibraryagentV1Shelf.
        :type theme: str
        """

        self._theme = theme
