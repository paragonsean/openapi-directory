# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleExampleLibraryagentV1Book(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: str=None, name: str=None, read: bool=None, title: str=None):
        """GoogleExampleLibraryagentV1Book - a model defined in OpenAPI

        :param author: The author of this GoogleExampleLibraryagentV1Book.
        :param name: The name of this GoogleExampleLibraryagentV1Book.
        :param read: The read of this GoogleExampleLibraryagentV1Book.
        :param title: The title of this GoogleExampleLibraryagentV1Book.
        """
        self.openapi_types = {
            'author': str,
            'name': str,
            'read': bool,
            'title': str
        }

        self.attribute_map = {
            'author': 'author',
            'name': 'name',
            'read': 'read',
            'title': 'title'
        }

        self._author = author
        self._name = name
        self._read = read
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleExampleLibraryagentV1Book':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleExampleLibraryagentV1Book of this GoogleExampleLibraryagentV1Book.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this GoogleExampleLibraryagentV1Book.

        The name of the book author.

        :return: The author of this GoogleExampleLibraryagentV1Book.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this GoogleExampleLibraryagentV1Book.

        The name of the book author.

        :param author: The author of this GoogleExampleLibraryagentV1Book.
        :type author: str
        """

        self._author = author

    @property
    def name(self):
        """Gets the name of this GoogleExampleLibraryagentV1Book.

        The resource name of the book. Book names have the form `shelves/{shelf_id}/books/{book_id}`. The name is ignored when creating a book.

        :return: The name of this GoogleExampleLibraryagentV1Book.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleExampleLibraryagentV1Book.

        The resource name of the book. Book names have the form `shelves/{shelf_id}/books/{book_id}`. The name is ignored when creating a book.

        :param name: The name of this GoogleExampleLibraryagentV1Book.
        :type name: str
        """

        self._name = name

    @property
    def read(self):
        """Gets the read of this GoogleExampleLibraryagentV1Book.

        Value indicating whether the book has been read.

        :return: The read of this GoogleExampleLibraryagentV1Book.
        :rtype: bool
        """
        return self._read

    @read.setter
    def read(self, read):
        """Sets the read of this GoogleExampleLibraryagentV1Book.

        Value indicating whether the book has been read.

        :param read: The read of this GoogleExampleLibraryagentV1Book.
        :type read: bool
        """

        self._read = read

    @property
    def title(self):
        """Gets the title of this GoogleExampleLibraryagentV1Book.

        The title of the book.

        :return: The title of this GoogleExampleLibraryagentV1Book.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this GoogleExampleLibraryagentV1Book.

        The title of the book.

        :param title: The title of this GoogleExampleLibraryagentV1Book.
        :type title: str
        """

        self._title = title
