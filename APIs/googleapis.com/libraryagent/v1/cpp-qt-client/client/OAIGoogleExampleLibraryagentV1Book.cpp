/**
 * Library Agent API
 * A simple Google Example Library API.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleExampleLibraryagentV1Book.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleExampleLibraryagentV1Book::OAIGoogleExampleLibraryagentV1Book(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleExampleLibraryagentV1Book::OAIGoogleExampleLibraryagentV1Book() {
    this->initializeModel();
}

OAIGoogleExampleLibraryagentV1Book::~OAIGoogleExampleLibraryagentV1Book() {}

void OAIGoogleExampleLibraryagentV1Book::initializeModel() {

    m_author_isSet = false;
    m_author_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_read_isSet = false;
    m_read_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIGoogleExampleLibraryagentV1Book::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleExampleLibraryagentV1Book::fromJsonObject(QJsonObject json) {

    m_author_isValid = ::OpenAPI::fromJsonValue(m_author, json[QString("author")]);
    m_author_isSet = !json[QString("author")].isNull() && m_author_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_read_isValid = ::OpenAPI::fromJsonValue(m_read, json[QString("read")]);
    m_read_isSet = !json[QString("read")].isNull() && m_read_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIGoogleExampleLibraryagentV1Book::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleExampleLibraryagentV1Book::asJsonObject() const {
    QJsonObject obj;
    if (m_author_isSet) {
        obj.insert(QString("author"), ::OpenAPI::toJsonValue(m_author));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_read_isSet) {
        obj.insert(QString("read"), ::OpenAPI::toJsonValue(m_read));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIGoogleExampleLibraryagentV1Book::getAuthor() const {
    return m_author;
}
void OAIGoogleExampleLibraryagentV1Book::setAuthor(const QString &author) {
    m_author = author;
    m_author_isSet = true;
}

bool OAIGoogleExampleLibraryagentV1Book::is_author_Set() const{
    return m_author_isSet;
}

bool OAIGoogleExampleLibraryagentV1Book::is_author_Valid() const{
    return m_author_isValid;
}

QString OAIGoogleExampleLibraryagentV1Book::getName() const {
    return m_name;
}
void OAIGoogleExampleLibraryagentV1Book::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleExampleLibraryagentV1Book::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleExampleLibraryagentV1Book::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleExampleLibraryagentV1Book::isRead() const {
    return m_read;
}
void OAIGoogleExampleLibraryagentV1Book::setRead(const bool &read) {
    m_read = read;
    m_read_isSet = true;
}

bool OAIGoogleExampleLibraryagentV1Book::is_read_Set() const{
    return m_read_isSet;
}

bool OAIGoogleExampleLibraryagentV1Book::is_read_Valid() const{
    return m_read_isValid;
}

QString OAIGoogleExampleLibraryagentV1Book::getTitle() const {
    return m_title;
}
void OAIGoogleExampleLibraryagentV1Book::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIGoogleExampleLibraryagentV1Book::is_title_Set() const{
    return m_title_isSet;
}

bool OAIGoogleExampleLibraryagentV1Book::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIGoogleExampleLibraryagentV1Book::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_author_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_read_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleExampleLibraryagentV1Book::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
