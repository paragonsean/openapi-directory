# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MoveFolderMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_parent: str=None, display_name: str=None, source_parent: str=None):
        """MoveFolderMetadata - a model defined in OpenAPI

        :param destination_parent: The destination_parent of this MoveFolderMetadata.
        :param display_name: The display_name of this MoveFolderMetadata.
        :param source_parent: The source_parent of this MoveFolderMetadata.
        """
        self.openapi_types = {
            'destination_parent': str,
            'display_name': str,
            'source_parent': str
        }

        self.attribute_map = {
            'destination_parent': 'destinationParent',
            'display_name': 'displayName',
            'source_parent': 'sourceParent'
        }

        self._destination_parent = destination_parent
        self._display_name = display_name
        self._source_parent = source_parent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MoveFolderMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MoveFolderMetadata of this MoveFolderMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_parent(self):
        """Gets the destination_parent of this MoveFolderMetadata.

        The resource name of the folder or organization to move the folder to.

        :return: The destination_parent of this MoveFolderMetadata.
        :rtype: str
        """
        return self._destination_parent

    @destination_parent.setter
    def destination_parent(self, destination_parent):
        """Sets the destination_parent of this MoveFolderMetadata.

        The resource name of the folder or organization to move the folder to.

        :param destination_parent: The destination_parent of this MoveFolderMetadata.
        :type destination_parent: str
        """

        self._destination_parent = destination_parent

    @property
    def display_name(self):
        """Gets the display_name of this MoveFolderMetadata.

        The display name of the folder.

        :return: The display_name of this MoveFolderMetadata.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this MoveFolderMetadata.

        The display name of the folder.

        :param display_name: The display_name of this MoveFolderMetadata.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def source_parent(self):
        """Gets the source_parent of this MoveFolderMetadata.

        The resource name of the folder's parent.

        :return: The source_parent of this MoveFolderMetadata.
        :rtype: str
        """
        return self._source_parent

    @source_parent.setter
    def source_parent(self, source_parent):
        """Sets the source_parent of this MoveFolderMetadata.

        The resource name of the folder's parent.

        :param source_parent: The source_parent of this MoveFolderMetadata.
        :type source_parent: str
        """

        self._source_parent = source_parent
