# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchOrganizationsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter: str=None, page_size: int=None, page_token: str=None):
        """SearchOrganizationsRequest - a model defined in OpenAPI

        :param filter: The filter of this SearchOrganizationsRequest.
        :param page_size: The page_size of this SearchOrganizationsRequest.
        :param page_token: The page_token of this SearchOrganizationsRequest.
        """
        self.openapi_types = {
            'filter': str,
            'page_size': int,
            'page_token': str
        }

        self.attribute_map = {
            'filter': 'filter',
            'page_size': 'pageSize',
            'page_token': 'pageToken'
        }

        self._filter = filter
        self._page_size = page_size
        self._page_token = page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchOrganizationsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchOrganizationsRequest of this SearchOrganizationsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter(self):
        """Gets the filter of this SearchOrganizationsRequest.

        An optional query string used to filter the Organizations to return in the response. Filter rules are case-insensitive. Organizations may be filtered by `owner.directoryCustomerId` or by `domain`, where the domain is a G Suite domain, for example: * Filter `owner.directorycustomerid:123456789` returns Organization resources with `owner.directory_customer_id` equal to `123456789`. * Filter `domain:google.com` returns Organization resources corresponding to the domain `google.com`. This field is optional.

        :return: The filter of this SearchOrganizationsRequest.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this SearchOrganizationsRequest.

        An optional query string used to filter the Organizations to return in the response. Filter rules are case-insensitive. Organizations may be filtered by `owner.directoryCustomerId` or by `domain`, where the domain is a G Suite domain, for example: * Filter `owner.directorycustomerid:123456789` returns Organization resources with `owner.directory_customer_id` equal to `123456789`. * Filter `domain:google.com` returns Organization resources corresponding to the domain `google.com`. This field is optional.

        :param filter: The filter of this SearchOrganizationsRequest.
        :type filter: str
        """

        self._filter = filter

    @property
    def page_size(self):
        """Gets the page_size of this SearchOrganizationsRequest.

        The maximum number of Organizations to return in the response. The server can return fewer organizations than requested. If unspecified, server picks an appropriate default.

        :return: The page_size of this SearchOrganizationsRequest.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this SearchOrganizationsRequest.

        The maximum number of Organizations to return in the response. The server can return fewer organizations than requested. If unspecified, server picks an appropriate default.

        :param page_size: The page_size of this SearchOrganizationsRequest.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def page_token(self):
        """Gets the page_token of this SearchOrganizationsRequest.

        A pagination token returned from a previous call to `SearchOrganizations` that indicates from where listing should continue. This field is optional.

        :return: The page_token of this SearchOrganizationsRequest.
        :rtype: str
        """
        return self._page_token

    @page_token.setter
    def page_token(self, page_token):
        """Sets the page_token of this SearchOrganizationsRequest.

        A pagination token returned from a previous call to `SearchOrganizations` that indicates from where listing should continue. This field is optional.

        :param page_token: The page_token of this SearchOrganizationsRequest.
        :type page_token: str
        """

        self._page_token = page_token
