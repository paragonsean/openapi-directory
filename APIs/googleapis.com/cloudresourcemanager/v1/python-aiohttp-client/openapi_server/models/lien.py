# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Lien(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, name: str=None, origin: str=None, parent: str=None, reason: str=None, restrictions: List[str]=None):
        """Lien - a model defined in OpenAPI

        :param create_time: The create_time of this Lien.
        :param name: The name of this Lien.
        :param origin: The origin of this Lien.
        :param parent: The parent of this Lien.
        :param reason: The reason of this Lien.
        :param restrictions: The restrictions of this Lien.
        """
        self.openapi_types = {
            'create_time': str,
            'name': str,
            'origin': str,
            'parent': str,
            'reason': str,
            'restrictions': List[str]
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'name': 'name',
            'origin': 'origin',
            'parent': 'parent',
            'reason': 'reason',
            'restrictions': 'restrictions'
        }

        self._create_time = create_time
        self._name = name
        self._origin = origin
        self._parent = parent
        self._reason = reason
        self._restrictions = restrictions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Lien':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Lien of this Lien.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this Lien.

        The creation time of this Lien.

        :return: The create_time of this Lien.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this Lien.

        The creation time of this Lien.

        :param create_time: The create_time of this Lien.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def name(self):
        """Gets the name of this Lien.

        A system-generated unique identifier for this Lien. Example: `liens/1234abcd`

        :return: The name of this Lien.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Lien.

        A system-generated unique identifier for this Lien. Example: `liens/1234abcd`

        :param name: The name of this Lien.
        :type name: str
        """

        self._name = name

    @property
    def origin(self):
        """Gets the origin of this Lien.

        A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically. Maximum length of 200 characters. Example: 'compute.googleapis.com'

        :return: The origin of this Lien.
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this Lien.

        A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically. Maximum length of 200 characters. Example: 'compute.googleapis.com'

        :param origin: The origin of this Lien.
        :type origin: str
        """

        self._origin = origin

    @property
    def parent(self):
        """Gets the parent of this Lien.

        A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens are supported. Example: `projects/1234`

        :return: The parent of this Lien.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this Lien.

        A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens are supported. Example: `projects/1234`

        :param parent: The parent of this Lien.
        :type parent: str
        """

        self._parent = parent

    @property
    def reason(self):
        """Gets the reason of this Lien.

        Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200 characters. Example: 'Holds production API key'

        :return: The reason of this Lien.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this Lien.

        Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200 characters. Example: 'Holds production API key'

        :param reason: The reason of this Lien.
        :type reason: str
        """

        self._reason = reason

    @property
    def restrictions(self):
        """Gets the restrictions of this Lien.

        The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM permission. The server will validate the permissions against those for which Liens are supported. An empty list is meaningless and will be rejected. Example: ['resourcemanager.projects.delete']

        :return: The restrictions of this Lien.
        :rtype: List[str]
        """
        return self._restrictions

    @restrictions.setter
    def restrictions(self, restrictions):
        """Sets the restrictions of this Lien.

        The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM permission. The server will validate the permissions against those for which Liens are supported. An empty list is meaningless and will be rejected. Example: ['resourcemanager.projects.delete']

        :param restrictions: The restrictions of this Lien.
        :type restrictions: List[str]
        """

        self._restrictions = restrictions
