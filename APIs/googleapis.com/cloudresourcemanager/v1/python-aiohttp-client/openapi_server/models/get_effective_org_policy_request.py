# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetEffectiveOrgPolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, constraint: str=None):
        """GetEffectiveOrgPolicyRequest - a model defined in OpenAPI

        :param constraint: The constraint of this GetEffectiveOrgPolicyRequest.
        """
        self.openapi_types = {
            'constraint': str
        }

        self.attribute_map = {
            'constraint': 'constraint'
        }

        self._constraint = constraint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetEffectiveOrgPolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetEffectiveOrgPolicyRequest of this GetEffectiveOrgPolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def constraint(self):
        """Gets the constraint of this GetEffectiveOrgPolicyRequest.

        The name of the `Constraint` to compute the effective `Policy`.

        :return: The constraint of this GetEffectiveOrgPolicyRequest.
        :rtype: str
        """
        return self._constraint

    @constraint.setter
    def constraint(self, constraint):
        """Sets the constraint of this GetEffectiveOrgPolicyRequest.

        The name of the `Constraint` to compute the effective `Policy`.

        :param constraint: The constraint of this GetEffectiveOrgPolicyRequest.
        :type constraint: str
        """

        self._constraint = constraint
