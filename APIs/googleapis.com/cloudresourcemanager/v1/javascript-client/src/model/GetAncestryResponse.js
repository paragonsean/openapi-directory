/**
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Ancestor from './Ancestor';

/**
 * The GetAncestryResponse model module.
 * @module model/GetAncestryResponse
 * @version v1
 */
class GetAncestryResponse {
    /**
     * Constructs a new <code>GetAncestryResponse</code>.
     * Response from the projects.getAncestry method.
     * @alias module:model/GetAncestryResponse
     */
    constructor() { 
        
        GetAncestryResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetAncestryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetAncestryResponse} obj Optional instance to populate.
     * @return {module:model/GetAncestryResponse} The populated <code>GetAncestryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetAncestryResponse();

            if (data.hasOwnProperty('ancestor')) {
                obj['ancestor'] = ApiClient.convertToType(data['ancestor'], [Ancestor]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetAncestryResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetAncestryResponse</code>.
     */
    static validateJSON(data) {
        if (data['ancestor']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ancestor'])) {
                throw new Error("Expected the field `ancestor` to be an array in the JSON data but got " + data['ancestor']);
            }
            // validate the optional field `ancestor` (array)
            for (const item of data['ancestor']) {
                Ancestor.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Ancestors are ordered from bottom to top of the resource hierarchy. The first ancestor is the project itself, followed by the project's parent, etc..
 * @member {Array.<module:model/Ancestor>} ancestor
 */
GetAncestryResponse.prototype['ancestor'] = undefined;






export default GetAncestryResponse;

