/**
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrganizationOwner from './OrganizationOwner';

/**
 * The Organization model module.
 * @module model/Organization
 * @version v1
 */
class Organization {
    /**
     * Constructs a new <code>Organization</code>.
     * The root node in the resource hierarchy to which a particular entity&#39;s (e.g., company) resources belong.
     * @alias module:model/Organization
     */
    constructor() { 
        
        Organization.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Organization</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Organization} obj Optional instance to populate.
     * @return {module:model/Organization} The populated <code>Organization</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Organization();

            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('lifecycleState')) {
                obj['lifecycleState'] = ApiClient.convertToType(data['lifecycleState'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = OrganizationOwner.constructFromObject(data['owner']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Organization</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Organization</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['creationTime'] && !(typeof data['creationTime'] === 'string' || data['creationTime'] instanceof String)) {
            throw new Error("Expected the field `creationTime` to be a primitive type in the JSON string but got " + data['creationTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['lifecycleState'] && !(typeof data['lifecycleState'] === 'string' || data['lifecycleState'] instanceof String)) {
            throw new Error("Expected the field `lifecycleState` to be a primitive type in the JSON string but got " + data['lifecycleState']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `owner`
        if (data['owner']) { // data not null
          OrganizationOwner.validateJSON(data['owner']);
        }

        return true;
    }


}



/**
 * Timestamp when the Organization was created. Assigned by the server.
 * @member {String} creationTime
 */
Organization.prototype['creationTime'] = undefined;

/**
 * A human-readable string that refers to the Organization in the Google Cloud console. This string is set by the server and cannot be changed. The string will be set to the primary domain (for example, \"google.com\") of the G Suite customer that owns the organization.
 * @member {String} displayName
 */
Organization.prototype['displayName'] = undefined;

/**
 * The organization's current lifecycle state. Assigned by the server.
 * @member {module:model/Organization.LifecycleStateEnum} lifecycleState
 */
Organization.prototype['lifecycleState'] = undefined;

/**
 * Output only. The resource name of the organization. This is the organization's relative path in the API. Its format is \"organizations/[organization_id]\". For example, \"organizations/1234\".
 * @member {String} name
 */
Organization.prototype['name'] = undefined;

/**
 * @member {module:model/OrganizationOwner} owner
 */
Organization.prototype['owner'] = undefined;





/**
 * Allowed values for the <code>lifecycleState</code> property.
 * @enum {String}
 * @readonly
 */
Organization['LifecycleStateEnum'] = {

    /**
     * value: "LIFECYCLE_STATE_UNSPECIFIED"
     * @const
     */
    "LIFECYCLE_STATE_UNSPECIFIED": "LIFECYCLE_STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "DELETE_REQUESTED"
     * @const
     */
    "DELETE_REQUESTED": "DELETE_REQUESTED"
};



export default Organization;

