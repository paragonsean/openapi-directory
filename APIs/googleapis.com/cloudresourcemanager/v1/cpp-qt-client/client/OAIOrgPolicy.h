/**
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgPolicy.h
 *
 * Defines a Cloud Organization &#x60;Policy&#x60; which is used to specify &#x60;Constraints&#x60; for configurations of Cloud Platform resources.
 */

#ifndef OAIOrgPolicy_H
#define OAIOrgPolicy_H

#include <QJsonObject>

#include "OAIBooleanPolicy.h"
#include "OAIListPolicy.h"
#include "OAIObject.h"
#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBooleanPolicy;
class OAIListPolicy;

class OAIOrgPolicy : public OAIObject {
public:
    OAIOrgPolicy();
    OAIOrgPolicy(QString json);
    ~OAIOrgPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBooleanPolicy getBooleanPolicy() const;
    void setBooleanPolicy(const OAIBooleanPolicy &boolean_policy);
    bool is_boolean_policy_Set() const;
    bool is_boolean_policy_Valid() const;

    QString getConstraint() const;
    void setConstraint(const QString &constraint);
    bool is_constraint_Set() const;
    bool is_constraint_Valid() const;

    QByteArray getEtag() const;
    void setEtag(const QByteArray &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    OAIListPolicy getListPolicy() const;
    void setListPolicy(const OAIListPolicy &list_policy);
    bool is_list_policy_Set() const;
    bool is_list_policy_Valid() const;

    OAIObject getRestoreDefault() const;
    void setRestoreDefault(const OAIObject &restore_default);
    bool is_restore_default_Set() const;
    bool is_restore_default_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBooleanPolicy m_boolean_policy;
    bool m_boolean_policy_isSet;
    bool m_boolean_policy_isValid;

    QString m_constraint;
    bool m_constraint_isSet;
    bool m_constraint_isValid;

    QByteArray m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    OAIListPolicy m_list_policy;
    bool m_list_policy_isSet;
    bool m_list_policy_isValid;

    OAIObject m_restore_default;
    bool m_restore_default_isSet;
    bool m_restore_default_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrgPolicy)

#endif // OAIOrgPolicy_H
