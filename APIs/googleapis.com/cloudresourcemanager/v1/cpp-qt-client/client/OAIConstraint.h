/**
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConstraint.h
 *
 * A &#x60;Constraint&#x60; describes a way in which a resource&#39;s configuration can be restricted. For example, it controls which cloud services can be activated across an organization, or whether a Compute Engine instance can have serial port connections established. &#x60;Constraints&#x60; can be configured by the organization&#39;s policy administrator to fit the needs of the organzation by setting Policies for &#x60;Constraints&#x60; at different locations in the organization&#39;s resource hierarchy. Policies are inherited down the resource hierarchy from higher levels, but can also be overridden. For details about the inheritance rules please read about [Policies](/resource-manager/reference/rest/v1/Policy). &#x60;Constraints&#x60; have a default behavior determined by the &#x60;constraint_default&#x60; field, which is the enforcement behavior that is used in the absence of a &#x60;Policy&#x60; being defined or inherited for the resource in question.
 */

#ifndef OAIConstraint_H
#define OAIConstraint_H

#include <QJsonObject>

#include "OAIListConstraint.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListConstraint;

class OAIConstraint : public OAIObject {
public:
    OAIConstraint();
    OAIConstraint(QString json);
    ~OAIConstraint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getBooleanConstraint() const;
    void setBooleanConstraint(const OAIObject &boolean_constraint);
    bool is_boolean_constraint_Set() const;
    bool is_boolean_constraint_Valid() const;

    QString getConstraintDefault() const;
    void setConstraintDefault(const QString &constraint_default);
    bool is_constraint_default_Set() const;
    bool is_constraint_default_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIListConstraint getListConstraint() const;
    void setListConstraint(const OAIListConstraint &list_constraint);
    bool is_list_constraint_Set() const;
    bool is_list_constraint_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_boolean_constraint;
    bool m_boolean_constraint_isSet;
    bool m_boolean_constraint_isValid;

    QString m_constraint_default;
    bool m_constraint_default_isSet;
    bool m_constraint_default_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIListConstraint m_list_constraint;
    bool m_list_constraint_isSet;
    bool m_list_constraint_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConstraint)

#endif // OAIConstraint_H
