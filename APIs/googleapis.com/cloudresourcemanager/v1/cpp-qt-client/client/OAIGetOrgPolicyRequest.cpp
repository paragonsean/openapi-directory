/**
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOrgPolicyRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOrgPolicyRequest::OAIGetOrgPolicyRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOrgPolicyRequest::OAIGetOrgPolicyRequest() {
    this->initializeModel();
}

OAIGetOrgPolicyRequest::~OAIGetOrgPolicyRequest() {}

void OAIGetOrgPolicyRequest::initializeModel() {

    m_constraint_isSet = false;
    m_constraint_isValid = false;
}

void OAIGetOrgPolicyRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOrgPolicyRequest::fromJsonObject(QJsonObject json) {

    m_constraint_isValid = ::OpenAPI::fromJsonValue(m_constraint, json[QString("constraint")]);
    m_constraint_isSet = !json[QString("constraint")].isNull() && m_constraint_isValid;
}

QString OAIGetOrgPolicyRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOrgPolicyRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_constraint_isSet) {
        obj.insert(QString("constraint"), ::OpenAPI::toJsonValue(m_constraint));
    }
    return obj;
}

QString OAIGetOrgPolicyRequest::getConstraint() const {
    return m_constraint;
}
void OAIGetOrgPolicyRequest::setConstraint(const QString &constraint) {
    m_constraint = constraint;
    m_constraint_isSet = true;
}

bool OAIGetOrgPolicyRequest::is_constraint_Set() const{
    return m_constraint_isSet;
}

bool OAIGetOrgPolicyRequest::is_constraint_Valid() const{
    return m_constraint_isValid;
}

bool OAIGetOrgPolicyRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_constraint_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOrgPolicyRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
