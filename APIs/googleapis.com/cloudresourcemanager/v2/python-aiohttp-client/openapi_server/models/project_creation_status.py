# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectCreationStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, gettable: bool=None, ready: bool=None):
        """ProjectCreationStatus - a model defined in OpenAPI

        :param create_time: The create_time of this ProjectCreationStatus.
        :param gettable: The gettable of this ProjectCreationStatus.
        :param ready: The ready of this ProjectCreationStatus.
        """
        self.openapi_types = {
            'create_time': str,
            'gettable': bool,
            'ready': bool
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'gettable': 'gettable',
            'ready': 'ready'
        }

        self._create_time = create_time
        self._gettable = gettable
        self._ready = ready

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectCreationStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectCreationStatus of this ProjectCreationStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this ProjectCreationStatus.

        Creation time of the project creation workflow.

        :return: The create_time of this ProjectCreationStatus.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this ProjectCreationStatus.

        Creation time of the project creation workflow.

        :param create_time: The create_time of this ProjectCreationStatus.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def gettable(self):
        """Gets the gettable of this ProjectCreationStatus.

        True if the project can be retrieved using GetProject. No other operations on the project are guaranteed to work until the project creation is complete.

        :return: The gettable of this ProjectCreationStatus.
        :rtype: bool
        """
        return self._gettable

    @gettable.setter
    def gettable(self, gettable):
        """Sets the gettable of this ProjectCreationStatus.

        True if the project can be retrieved using GetProject. No other operations on the project are guaranteed to work until the project creation is complete.

        :param gettable: The gettable of this ProjectCreationStatus.
        :type gettable: bool
        """

        self._gettable = gettable

    @property
    def ready(self):
        """Gets the ready of this ProjectCreationStatus.

        True if the project creation process is complete.

        :return: The ready of this ProjectCreationStatus.
        :rtype: bool
        """
        return self._ready

    @ready.setter
    def ready(self, ready):
        """Sets the ready of this ProjectCreationStatus.

        True if the project creation process is complete.

        :param ready: The ready of this ProjectCreationStatus.
        :type ready: bool
        """

        self._ready = ready
