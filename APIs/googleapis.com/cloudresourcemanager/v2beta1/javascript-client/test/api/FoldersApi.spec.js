/**
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudResourceManagerApi);
  }
}(this, function(expect, CloudResourceManagerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudResourceManagerApi.FoldersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FoldersApi', function() {
    describe('cloudresourcemanagerFoldersCreate', function() {
      it('should call cloudresourcemanagerFoldersCreate successfully', function(done) {
        //uncomment below and update the code to test cloudresourcemanagerFoldersCreate
        //instance.cloudresourcemanagerFoldersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudresourcemanagerFoldersDelete', function() {
      it('should call cloudresourcemanagerFoldersDelete successfully', function(done) {
        //uncomment below and update the code to test cloudresourcemanagerFoldersDelete
        //instance.cloudresourcemanagerFoldersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudresourcemanagerFoldersGet', function() {
      it('should call cloudresourcemanagerFoldersGet successfully', function(done) {
        //uncomment below and update the code to test cloudresourcemanagerFoldersGet
        //instance.cloudresourcemanagerFoldersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudresourcemanagerFoldersGetIamPolicy', function() {
      it('should call cloudresourcemanagerFoldersGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test cloudresourcemanagerFoldersGetIamPolicy
        //instance.cloudresourcemanagerFoldersGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudresourcemanagerFoldersList', function() {
      it('should call cloudresourcemanagerFoldersList successfully', function(done) {
        //uncomment below and update the code to test cloudresourcemanagerFoldersList
        //instance.cloudresourcemanagerFoldersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudresourcemanagerFoldersMove', function() {
      it('should call cloudresourcemanagerFoldersMove successfully', function(done) {
        //uncomment below and update the code to test cloudresourcemanagerFoldersMove
        //instance.cloudresourcemanagerFoldersMove(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudresourcemanagerFoldersPatch', function() {
      it('should call cloudresourcemanagerFoldersPatch successfully', function(done) {
        //uncomment below and update the code to test cloudresourcemanagerFoldersPatch
        //instance.cloudresourcemanagerFoldersPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudresourcemanagerFoldersSearch', function() {
      it('should call cloudresourcemanagerFoldersSearch successfully', function(done) {
        //uncomment below and update the code to test cloudresourcemanagerFoldersSearch
        //instance.cloudresourcemanagerFoldersSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudresourcemanagerFoldersSetIamPolicy', function() {
      it('should call cloudresourcemanagerFoldersSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test cloudresourcemanagerFoldersSetIamPolicy
        //instance.cloudresourcemanagerFoldersSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudresourcemanagerFoldersTestIamPermissions', function() {
      it('should call cloudresourcemanagerFoldersTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test cloudresourcemanagerFoldersTestIamPermissions
        //instance.cloudresourcemanagerFoldersTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudresourcemanagerFoldersUndelete', function() {
      it('should call cloudresourcemanagerFoldersUndelete successfully', function(done) {
        //uncomment below and update the code to test cloudresourcemanagerFoldersUndelete
        //instance.cloudresourcemanagerFoldersUndelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
