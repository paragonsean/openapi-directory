/**
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Organization from './Organization';

/**
 * The ListOrganizationsResponse model module.
 * @module model/ListOrganizationsResponse
 * @version v1beta1
 */
class ListOrganizationsResponse {
    /**
     * Constructs a new <code>ListOrganizationsResponse</code>.
     * The response returned from the &#x60;ListOrganizations&#x60; method.
     * @alias module:model/ListOrganizationsResponse
     */
    constructor() { 
        
        ListOrganizationsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListOrganizationsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListOrganizationsResponse} obj Optional instance to populate.
     * @return {module:model/ListOrganizationsResponse} The populated <code>ListOrganizationsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListOrganizationsResponse();

            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
            if (data.hasOwnProperty('organizations')) {
                obj['organizations'] = ApiClient.convertToType(data['organizations'], [Organization]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListOrganizationsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListOrganizationsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }
        if (data['organizations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['organizations'])) {
                throw new Error("Expected the field `organizations` to be an array in the JSON data but got " + data['organizations']);
            }
            // validate the optional field `organizations` (array)
            for (const item of data['organizations']) {
                Organization.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A pagination token to be used to retrieve the next page of results. If the result is too large to fit within the page size specified in the request, this field will be set with a token that can be used to fetch the next page of results. If this field is empty, it indicates that this response contains the last page of results.
 * @member {String} nextPageToken
 */
ListOrganizationsResponse.prototype['nextPageToken'] = undefined;

/**
 * The list of Organizations that matched the list query, possibly paginated.
 * @member {Array.<module:model/Organization>} organizations
 */
ListOrganizationsResponse.prototype['organizations'] = undefined;






export default ListOrganizationsResponse;

