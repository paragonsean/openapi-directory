/**
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResourceId from './ResourceId';

/**
 * The Ancestor model module.
 * @module model/Ancestor
 * @version v1beta1
 */
class Ancestor {
    /**
     * Constructs a new <code>Ancestor</code>.
     * Identifying information for a single ancestor of a project.
     * @alias module:model/Ancestor
     */
    constructor() { 
        
        Ancestor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Ancestor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Ancestor} obj Optional instance to populate.
     * @return {module:model/Ancestor} The populated <code>Ancestor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Ancestor();

            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ResourceId.constructFromObject(data['resourceId']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Ancestor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Ancestor</code>.
     */
    static validateJSON(data) {
        // validate the optional field `resourceId`
        if (data['resourceId']) { // data not null
          ResourceId.validateJSON(data['resourceId']);
        }

        return true;
    }


}



/**
 * @member {module:model/ResourceId} resourceId
 */
Ancestor.prototype['resourceId'] = undefined;






export default Ancestor;

