/*
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata describing a long running folder operation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:39.977186-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation {
  public static final String SERIALIZED_NAME_DESTINATION_PARENT = "destinationParent";
  @SerializedName(SERIALIZED_NAME_DESTINATION_PARENT)
  private String destinationParent;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  /**
   * The type of this operation.
   */
  @JsonAdapter(OperationTypeEnum.Adapter.class)
  public enum OperationTypeEnum {
    OPERATION_TYPE_UNSPECIFIED("OPERATION_TYPE_UNSPECIFIED"),
    
    CREATE("CREATE"),
    
    MOVE("MOVE");

    private String value;

    OperationTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OperationTypeEnum fromValue(String value) {
      for (OperationTypeEnum b : OperationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OperationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OperationTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OperationTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OperationTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OperationTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_OPERATION_TYPE = "operationType";
  @SerializedName(SERIALIZED_NAME_OPERATION_TYPE)
  private OperationTypeEnum operationType;

  public static final String SERIALIZED_NAME_SOURCE_PARENT = "sourceParent";
  @SerializedName(SERIALIZED_NAME_SOURCE_PARENT)
  private String sourceParent;

  public CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation() {
  }

  public CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation destinationParent(String destinationParent) {
    this.destinationParent = destinationParent;
    return this;
  }

  /**
   * The resource name of the folder or organization we are either creating the folder under or moving the folder to.
   * @return destinationParent
   */
  @javax.annotation.Nullable
  public String getDestinationParent() {
    return destinationParent;
  }

  public void setDestinationParent(String destinationParent) {
    this.destinationParent = destinationParent;
  }


  public CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The display name of the folder.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation operationType(OperationTypeEnum operationType) {
    this.operationType = operationType;
    return this;
  }

  /**
   * The type of this operation.
   * @return operationType
   */
  @javax.annotation.Nullable
  public OperationTypeEnum getOperationType() {
    return operationType;
  }

  public void setOperationType(OperationTypeEnum operationType) {
    this.operationType = operationType;
  }


  public CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation sourceParent(String sourceParent) {
    this.sourceParent = sourceParent;
    return this;
  }

  /**
   * The resource name of the folder&#39;s parent. Only applicable when the operation_type is MOVE.
   * @return sourceParent
   */
  @javax.annotation.Nullable
  public String getSourceParent() {
    return sourceParent;
  }

  public void setSourceParent(String sourceParent) {
    this.sourceParent = sourceParent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation cloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation = (CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation) o;
    return Objects.equals(this.destinationParent, cloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation.destinationParent) &&
        Objects.equals(this.displayName, cloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation.displayName) &&
        Objects.equals(this.operationType, cloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation.operationType) &&
        Objects.equals(this.sourceParent, cloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation.sourceParent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationParent, displayName, operationType, sourceParent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation {\n");
    sb.append("    destinationParent: ").append(toIndentedString(destinationParent)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    operationType: ").append(toIndentedString(operationType)).append("\n");
    sb.append("    sourceParent: ").append(toIndentedString(sourceParent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("destinationParent");
    openapiFields.add("displayName");
    openapiFields.add("operationType");
    openapiFields.add("sourceParent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation is not found in the empty JSON string", CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("destinationParent") != null && !jsonObj.get("destinationParent").isJsonNull()) && !jsonObj.get("destinationParent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destinationParent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destinationParent").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("operationType") != null && !jsonObj.get("operationType").isJsonNull()) && !jsonObj.get("operationType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operationType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operationType").toString()));
      }
      // validate the optional field `operationType`
      if (jsonObj.get("operationType") != null && !jsonObj.get("operationType").isJsonNull()) {
        OperationTypeEnum.validateJsonElement(jsonObj.get("operationType"));
      }
      if ((jsonObj.get("sourceParent") != null && !jsonObj.get("sourceParent").isJsonNull()) && !jsonObj.get("sourceParent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceParent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceParent").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation.class));

       return (TypeAdapter<T>) new TypeAdapter<CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation>() {
           @Override
           public void write(JsonWriter out, CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation
   * @throws IOException if the JSON string is invalid with respect to CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation
   */
  public static CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation.class);
  }

  /**
   * Convert an instance of CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

