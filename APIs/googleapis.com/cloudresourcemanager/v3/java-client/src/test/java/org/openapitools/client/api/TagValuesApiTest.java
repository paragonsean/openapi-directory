/*
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetIamPolicyRequest;
import org.openapitools.client.model.ListTagHoldsResponse;
import org.openapitools.client.model.ListTagValuesResponse;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.Policy;
import org.openapitools.client.model.SetIamPolicyRequest;
import org.openapitools.client.model.TagHold;
import org.openapitools.client.model.TagValue;
import org.openapitools.client.model.TestIamPermissionsRequest;
import org.openapitools.client.model.TestIamPermissionsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TagValuesApi
 */
@Disabled
public class TagValuesApiTest {

    private final TagValuesApi api = new TagValuesApi();

    /**
     * Creates a TagValue as a child of the specified TagKey. If a another request with the same parameters is sent while the original request is in process the second request will receive an error. A maximum of 1000 TagValues can exist under a TagKey at any given time.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerTagValuesCreateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean validateOnly = null;
        TagValue tagValue = null;
        Operation response = api.cloudresourcemanagerTagValuesCreate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, validateOnly, tagValue);
        // TODO: test validations
    }

    /**
     * Retrieves a TagValue. This method will return &#x60;PERMISSION_DENIED&#x60; if the value does not exist or the user does not have permission to view it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerTagValuesGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        TagValue response = api.cloudresourcemanagerTagValuesGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Gets the access control policy for a TagValue. The returned policy may be empty if no such policy or resource exists. The &#x60;resource&#x60; field should be the TagValue&#39;s resource name. For example: &#x60;tagValues/1234&#x60;. The caller must have the &#x60;cloudresourcemanager.googleapis.com/tagValues.getIamPolicy&#x60; permission on the identified TagValue to get the access control policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerTagValuesGetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GetIamPolicyRequest getIamPolicyRequest = null;
        Policy response = api.cloudresourcemanagerTagValuesGetIamPolicy(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, getIamPolicyRequest);
        // TODO: test validations
    }

    /**
     * Retrieves a TagValue by its namespaced name. This method will return &#x60;PERMISSION_DENIED&#x60; if the value does not exist or the user does not have permission to view it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerTagValuesGetNamespacedTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String name = null;
        TagValue response = api.cloudresourcemanagerTagValuesGetNamespaced($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, name);
        // TODO: test validations
    }

    /**
     * Lists all TagValues for a specific TagKey.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerTagValuesListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String parent = null;
        ListTagValuesResponse response = api.cloudresourcemanagerTagValuesList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, parent);
        // TODO: test validations
    }

    /**
     * Updates the attributes of the TagValue resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerTagValuesPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        Boolean validateOnly = null;
        TagValue tagValue = null;
        Operation response = api.cloudresourcemanagerTagValuesPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, validateOnly, tagValue);
        // TODO: test validations
    }

    /**
     * Sets the access control policy on a TagValue, replacing any existing policy. The &#x60;resource&#x60; field should be the TagValue&#39;s resource name. For example: &#x60;tagValues/1234&#x60;. The caller must have &#x60;resourcemanager.tagValues.setIamPolicy&#x60; permission on the identified tagValue.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerTagValuesSetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SetIamPolicyRequest setIamPolicyRequest = null;
        Policy response = api.cloudresourcemanagerTagValuesSetIamPolicy(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, setIamPolicyRequest);
        // TODO: test validations
    }

    /**
     * Creates a TagHold. Returns ALREADY_EXISTS if a TagHold with the same resource and origin exists under the same TagValue.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerTagValuesTagHoldsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean validateOnly = null;
        TagHold tagHold = null;
        Operation response = api.cloudresourcemanagerTagValuesTagHoldsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, validateOnly, tagHold);
        // TODO: test validations
    }

    /**
     * Deletes a TagHold.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerTagValuesTagHoldsDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean validateOnly = null;
        Operation response = api.cloudresourcemanagerTagValuesTagHoldsDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, validateOnly);
        // TODO: test validations
    }

    /**
     * Lists TagHolds under a TagValue.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerTagValuesTagHoldsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        ListTagHoldsResponse response = api.cloudresourcemanagerTagValuesTagHoldsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Returns permissions that a caller has on the specified TagValue. The &#x60;resource&#x60; field should be the TagValue&#39;s resource name. For example: &#x60;tagValues/1234&#x60;. There are no permissions required for making this API call.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerTagValuesTestIamPermissionsTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        TestIamPermissionsRequest testIamPermissionsRequest = null;
        TestIamPermissionsResponse response = api.cloudresourcemanagerTagValuesTestIamPermissions(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, testIamPermissionsRequest);
        // TODO: test validations
    }

}
