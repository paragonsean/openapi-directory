/*
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListProjectsResponse;
import org.openapitools.client.model.MoveProjectRequest;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.Project;
import org.openapitools.client.model.SearchProjectsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Request that a new project be created. The result is an &#x60;Operation&#x60; which can be used to track the creation process. This process usually takes a few seconds, but can sometimes take much longer. The tracking &#x60;Operation&#x60; is automatically deleted after a few hours, so there is no need to call &#x60;DeleteOperation&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerProjectsCreateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Project project = null;
        Operation response = api.cloudresourcemanagerProjectsCreate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, project);
        // TODO: test validations
    }

    /**
     * Lists projects that are direct children of the specified folder or organization resource. &#x60;list()&#x60; provides a strongly consistent view of the projects underneath the specified parent resource. &#x60;list()&#x60; returns projects sorted based upon the (ascending) lexical ordering of their &#x60;display_name&#x60;. The caller must have &#x60;resourcemanager.projects.list&#x60; permission on the identified parent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerProjectsListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String parent = null;
        Boolean showDeleted = null;
        ListProjectsResponse response = api.cloudresourcemanagerProjectsList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, parent, showDeleted);
        // TODO: test validations
    }

    /**
     * Move a project to another place in your resource hierarchy, under a new resource parent. Returns an operation which can be used to track the process of the project move workflow. Upon success, the &#x60;Operation.response&#x60; field will be populated with the moved project. The caller must have &#x60;resourcemanager.projects.move&#x60; permission on the project, on the project&#39;s current and proposed new parent. If project has no current parent, or it currently does not have an associated organization resource, you will also need the &#x60;resourcemanager.projects.setIamPolicy&#x60; permission in the project. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerProjectsMoveTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        MoveProjectRequest moveProjectRequest = null;
        Operation response = api.cloudresourcemanagerProjectsMove(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, moveProjectRequest);
        // TODO: test validations
    }

    /**
     * Search for projects that the caller has the &#x60;resourcemanager.projects.get&#x60; permission on, and also satisfy the specified query. This method returns projects in an unspecified order. This method is eventually consistent with project mutations; this means that a newly created project may not appear in the results or recent updates to an existing project may not be reflected in the results. To retrieve the latest state of a project, use the GetProject method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerProjectsSearchTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String query = null;
        SearchProjectsResponse response = api.cloudresourcemanagerProjectsSearch($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, query);
        // TODO: test validations
    }

    /**
     * Restores the project identified by the specified &#x60;name&#x60; (for example, &#x60;projects/415104041262&#x60;). You can only use this method for a project that has a lifecycle state of DELETE_REQUESTED. After deletion starts, the project cannot be restored. The caller must have &#x60;resourcemanager.projects.undelete&#x60; permission for this project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerProjectsUndeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Operation response = api.cloudresourcemanagerProjectsUndelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

}
