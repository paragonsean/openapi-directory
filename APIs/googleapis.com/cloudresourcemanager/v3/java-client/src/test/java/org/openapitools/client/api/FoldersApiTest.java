/*
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Folder;
import org.openapitools.client.model.ListFoldersResponse;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.SearchFoldersResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FoldersApi
 */
@Disabled
public class FoldersApiTest {

    private final FoldersApi api = new FoldersApi();

    /**
     * Creates a folder in the resource hierarchy. Returns an &#x60;Operation&#x60; which can be used to track the progress of the folder creation workflow. Upon success, the &#x60;Operation.response&#x60; field will be populated with the created Folder. In order to succeed, the addition of this new folder must not violate the folder naming, height, or fanout constraints. + The folder&#39;s &#x60;display_name&#x60; must be distinct from all other folders that share its parent. + The addition of the folder must not cause the active folder hierarchy to exceed a height of 10. Note, the full active + deleted folder hierarchy is allowed to reach a height of 20; this provides additional headroom when moving folders that contain deleted folders. + The addition of the folder must not cause the total number of folders under its parent to exceed 300. If the operation fails due to a folder constraint violation, some errors may be returned by the &#x60;CreateFolder&#x60; request, with status code &#x60;FAILED_PRECONDITION&#x60; and an error description. Other folder constraint violations will be communicated in the &#x60;Operation&#x60;, with the specific &#x60;PreconditionFailure&#x60; returned in the details list in the &#x60;Operation.error&#x60; field. The caller must have &#x60;resourcemanager.folders.create&#x60; permission on the identified parent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerFoldersCreateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Folder folder = null;
        Operation response = api.cloudresourcemanagerFoldersCreate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, folder);
        // TODO: test validations
    }

    /**
     * Lists the folders that are direct descendants of supplied parent resource. &#x60;list()&#x60; provides a strongly consistent view of the folders underneath the specified parent resource. &#x60;list()&#x60; returns folders sorted based upon the (ascending) lexical ordering of their display_name. The caller must have &#x60;resourcemanager.folders.list&#x60; permission on the identified parent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerFoldersListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String parent = null;
        Boolean showDeleted = null;
        ListFoldersResponse response = api.cloudresourcemanagerFoldersList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, parent, showDeleted);
        // TODO: test validations
    }

    /**
     * Search for folders that match specific filter criteria. &#x60;search()&#x60; provides an eventually consistent view of the folders a user has access to which meet the specified filter criteria. This will only return folders on which the caller has the permission &#x60;resourcemanager.folders.get&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudresourcemanagerFoldersSearchTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String query = null;
        SearchFoldersResponse response = api.cloudresourcemanagerFoldersSearch($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, query);
        // TODO: test validations
    }

}
