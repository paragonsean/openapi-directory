/**
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITagValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITagValue::OAITagValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITagValue::OAITagValue() {
    this->initializeModel();
}

OAITagValue::~OAITagValue() {}

void OAITagValue::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_namespaced_name_isSet = false;
    m_namespaced_name_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_short_name_isSet = false;
    m_short_name_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAITagValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITagValue::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_namespaced_name_isValid = ::OpenAPI::fromJsonValue(m_namespaced_name, json[QString("namespacedName")]);
    m_namespaced_name_isSet = !json[QString("namespacedName")].isNull() && m_namespaced_name_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_short_name_isValid = ::OpenAPI::fromJsonValue(m_short_name, json[QString("shortName")]);
    m_short_name_isSet = !json[QString("shortName")].isNull() && m_short_name_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAITagValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITagValue::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_namespaced_name_isSet) {
        obj.insert(QString("namespacedName"), ::OpenAPI::toJsonValue(m_namespaced_name));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_short_name_isSet) {
        obj.insert(QString("shortName"), ::OpenAPI::toJsonValue(m_short_name));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAITagValue::getCreateTime() const {
    return m_create_time;
}
void OAITagValue::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAITagValue::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAITagValue::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAITagValue::getDescription() const {
    return m_description;
}
void OAITagValue::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITagValue::is_description_Set() const{
    return m_description_isSet;
}

bool OAITagValue::is_description_Valid() const{
    return m_description_isValid;
}

QString OAITagValue::getEtag() const {
    return m_etag;
}
void OAITagValue::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAITagValue::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAITagValue::is_etag_Valid() const{
    return m_etag_isValid;
}

QString OAITagValue::getName() const {
    return m_name;
}
void OAITagValue::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITagValue::is_name_Set() const{
    return m_name_isSet;
}

bool OAITagValue::is_name_Valid() const{
    return m_name_isValid;
}

QString OAITagValue::getNamespacedName() const {
    return m_namespaced_name;
}
void OAITagValue::setNamespacedName(const QString &namespaced_name) {
    m_namespaced_name = namespaced_name;
    m_namespaced_name_isSet = true;
}

bool OAITagValue::is_namespaced_name_Set() const{
    return m_namespaced_name_isSet;
}

bool OAITagValue::is_namespaced_name_Valid() const{
    return m_namespaced_name_isValid;
}

QString OAITagValue::getParent() const {
    return m_parent;
}
void OAITagValue::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAITagValue::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAITagValue::is_parent_Valid() const{
    return m_parent_isValid;
}

QString OAITagValue::getShortName() const {
    return m_short_name;
}
void OAITagValue::setShortName(const QString &short_name) {
    m_short_name = short_name;
    m_short_name_isSet = true;
}

bool OAITagValue::is_short_name_Set() const{
    return m_short_name_isSet;
}

bool OAITagValue::is_short_name_Valid() const{
    return m_short_name_isValid;
}

QString OAITagValue::getUpdateTime() const {
    return m_update_time;
}
void OAITagValue::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAITagValue::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAITagValue::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAITagValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_namespaced_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITagValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
