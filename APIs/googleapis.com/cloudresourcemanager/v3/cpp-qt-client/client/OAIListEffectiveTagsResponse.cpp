/**
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListEffectiveTagsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListEffectiveTagsResponse::OAIListEffectiveTagsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListEffectiveTagsResponse::OAIListEffectiveTagsResponse() {
    this->initializeModel();
}

OAIListEffectiveTagsResponse::~OAIListEffectiveTagsResponse() {}

void OAIListEffectiveTagsResponse::initializeModel() {

    m_effective_tags_isSet = false;
    m_effective_tags_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIListEffectiveTagsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListEffectiveTagsResponse::fromJsonObject(QJsonObject json) {

    m_effective_tags_isValid = ::OpenAPI::fromJsonValue(m_effective_tags, json[QString("effectiveTags")]);
    m_effective_tags_isSet = !json[QString("effectiveTags")].isNull() && m_effective_tags_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIListEffectiveTagsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListEffectiveTagsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_effective_tags.size() > 0) {
        obj.insert(QString("effectiveTags"), ::OpenAPI::toJsonValue(m_effective_tags));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIEffectiveTag> OAIListEffectiveTagsResponse::getEffectiveTags() const {
    return m_effective_tags;
}
void OAIListEffectiveTagsResponse::setEffectiveTags(const QList<OAIEffectiveTag> &effective_tags) {
    m_effective_tags = effective_tags;
    m_effective_tags_isSet = true;
}

bool OAIListEffectiveTagsResponse::is_effective_tags_Set() const{
    return m_effective_tags_isSet;
}

bool OAIListEffectiveTagsResponse::is_effective_tags_Valid() const{
    return m_effective_tags_isValid;
}

QString OAIListEffectiveTagsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListEffectiveTagsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListEffectiveTagsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListEffectiveTagsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIListEffectiveTagsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_effective_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListEffectiveTagsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
