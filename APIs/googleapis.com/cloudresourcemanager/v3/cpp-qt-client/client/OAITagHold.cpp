/**
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITagHold.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITagHold::OAITagHold(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITagHold::OAITagHold() {
    this->initializeModel();
}

OAITagHold::~OAITagHold() {}

void OAITagHold::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_help_link_isSet = false;
    m_help_link_isValid = false;

    m_holder_isSet = false;
    m_holder_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_origin_isSet = false;
    m_origin_isValid = false;
}

void OAITagHold::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITagHold::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_help_link_isValid = ::OpenAPI::fromJsonValue(m_help_link, json[QString("helpLink")]);
    m_help_link_isSet = !json[QString("helpLink")].isNull() && m_help_link_isValid;

    m_holder_isValid = ::OpenAPI::fromJsonValue(m_holder, json[QString("holder")]);
    m_holder_isSet = !json[QString("holder")].isNull() && m_holder_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_origin_isValid = ::OpenAPI::fromJsonValue(m_origin, json[QString("origin")]);
    m_origin_isSet = !json[QString("origin")].isNull() && m_origin_isValid;
}

QString OAITagHold::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITagHold::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_help_link_isSet) {
        obj.insert(QString("helpLink"), ::OpenAPI::toJsonValue(m_help_link));
    }
    if (m_holder_isSet) {
        obj.insert(QString("holder"), ::OpenAPI::toJsonValue(m_holder));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_origin_isSet) {
        obj.insert(QString("origin"), ::OpenAPI::toJsonValue(m_origin));
    }
    return obj;
}

QString OAITagHold::getCreateTime() const {
    return m_create_time;
}
void OAITagHold::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAITagHold::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAITagHold::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAITagHold::getHelpLink() const {
    return m_help_link;
}
void OAITagHold::setHelpLink(const QString &help_link) {
    m_help_link = help_link;
    m_help_link_isSet = true;
}

bool OAITagHold::is_help_link_Set() const{
    return m_help_link_isSet;
}

bool OAITagHold::is_help_link_Valid() const{
    return m_help_link_isValid;
}

QString OAITagHold::getHolder() const {
    return m_holder;
}
void OAITagHold::setHolder(const QString &holder) {
    m_holder = holder;
    m_holder_isSet = true;
}

bool OAITagHold::is_holder_Set() const{
    return m_holder_isSet;
}

bool OAITagHold::is_holder_Valid() const{
    return m_holder_isValid;
}

QString OAITagHold::getName() const {
    return m_name;
}
void OAITagHold::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITagHold::is_name_Set() const{
    return m_name_isSet;
}

bool OAITagHold::is_name_Valid() const{
    return m_name_isValid;
}

QString OAITagHold::getOrigin() const {
    return m_origin;
}
void OAITagHold::setOrigin(const QString &origin) {
    m_origin = origin;
    m_origin_isSet = true;
}

bool OAITagHold::is_origin_Set() const{
    return m_origin_isSet;
}

bool OAITagHold::is_origin_Valid() const{
    return m_origin_isValid;
}

bool OAITagHold::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_help_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_holder_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITagHold::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
