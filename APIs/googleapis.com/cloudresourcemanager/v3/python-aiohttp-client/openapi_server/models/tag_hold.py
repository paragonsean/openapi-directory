# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TagHold(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, help_link: str=None, holder: str=None, name: str=None, origin: str=None):
        """TagHold - a model defined in OpenAPI

        :param create_time: The create_time of this TagHold.
        :param help_link: The help_link of this TagHold.
        :param holder: The holder of this TagHold.
        :param name: The name of this TagHold.
        :param origin: The origin of this TagHold.
        """
        self.openapi_types = {
            'create_time': str,
            'help_link': str,
            'holder': str,
            'name': str,
            'origin': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'help_link': 'helpLink',
            'holder': 'holder',
            'name': 'name',
            'origin': 'origin'
        }

        self._create_time = create_time
        self._help_link = help_link
        self._holder = holder
        self._name = name
        self._origin = origin

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TagHold':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TagHold of this TagHold.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this TagHold.

        Output only. The time this TagHold was created.

        :return: The create_time of this TagHold.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this TagHold.

        Output only. The time this TagHold was created.

        :param create_time: The create_time of this TagHold.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def help_link(self):
        """Gets the help_link of this TagHold.

        Optional. A URL where an end user can learn more about removing this hold. E.g. `https://cloud.google.com/resource-manager/docs/tags/tags-creating-and-managing`

        :return: The help_link of this TagHold.
        :rtype: str
        """
        return self._help_link

    @help_link.setter
    def help_link(self, help_link):
        """Sets the help_link of this TagHold.

        Optional. A URL where an end user can learn more about removing this hold. E.g. `https://cloud.google.com/resource-manager/docs/tags/tags-creating-and-managing`

        :param help_link: The help_link of this TagHold.
        :type help_link: str
        """

        self._help_link = help_link

    @property
    def holder(self):
        """Gets the holder of this TagHold.

        Required. The name of the resource where the TagValue is being used. Must be less than 200 characters. E.g. `//compute.googleapis.com/compute/projects/myproject/regions/us-east-1/instanceGroupManagers/instance-group`

        :return: The holder of this TagHold.
        :rtype: str
        """
        return self._holder

    @holder.setter
    def holder(self, holder):
        """Sets the holder of this TagHold.

        Required. The name of the resource where the TagValue is being used. Must be less than 200 characters. E.g. `//compute.googleapis.com/compute/projects/myproject/regions/us-east-1/instanceGroupManagers/instance-group`

        :param holder: The holder of this TagHold.
        :type holder: str
        """

        self._holder = holder

    @property
    def name(self):
        """Gets the name of this TagHold.

        Output only. The resource name of a TagHold. This is a String of the form: `tagValues/{tag-value-id}/tagHolds/{tag-hold-id}` (e.g. `tagValues/123/tagHolds/456`). This resource name is generated by the server.

        :return: The name of this TagHold.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TagHold.

        Output only. The resource name of a TagHold. This is a String of the form: `tagValues/{tag-value-id}/tagHolds/{tag-hold-id}` (e.g. `tagValues/123/tagHolds/456`). This resource name is generated by the server.

        :param name: The name of this TagHold.
        :type name: str
        """

        self._name = name

    @property
    def origin(self):
        """Gets the origin of this TagHold.

        Optional. An optional string representing the origin of this request. This field should include human-understandable information to distinguish origins from each other. Must be less than 200 characters. E.g. `migs-35678234`

        :return: The origin of this TagHold.
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this TagHold.

        Optional. An optional string representing the origin of this request. This field should include human-understandable information to distinguish origins from each other. Must be less than 200 characters. E.g. `migs-35678234`

        :param origin: The origin of this TagHold.
        :type origin: str
        """

        self._origin = origin
