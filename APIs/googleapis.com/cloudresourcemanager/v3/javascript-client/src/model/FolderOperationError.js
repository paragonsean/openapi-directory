/**
 * Cloud Resource Manager API
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FolderOperationError model module.
 * @module model/FolderOperationError
 * @version v3
 */
class FolderOperationError {
    /**
     * Constructs a new <code>FolderOperationError</code>.
     * A classification of the Folder Operation error.
     * @alias module:model/FolderOperationError
     */
    constructor() { 
        
        FolderOperationError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FolderOperationError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FolderOperationError} obj Optional instance to populate.
     * @return {module:model/FolderOperationError} The populated <code>FolderOperationError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FolderOperationError();

            if (data.hasOwnProperty('errorMessageId')) {
                obj['errorMessageId'] = ApiClient.convertToType(data['errorMessageId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FolderOperationError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FolderOperationError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['errorMessageId'] && !(typeof data['errorMessageId'] === 'string' || data['errorMessageId'] instanceof String)) {
            throw new Error("Expected the field `errorMessageId` to be a primitive type in the JSON string but got " + data['errorMessageId']);
        }

        return true;
    }


}



/**
 * The type of operation error experienced.
 * @member {module:model/FolderOperationError.ErrorMessageIdEnum} errorMessageId
 */
FolderOperationError.prototype['errorMessageId'] = undefined;





/**
 * Allowed values for the <code>errorMessageId</code> property.
 * @enum {String}
 * @readonly
 */
FolderOperationError['ErrorMessageIdEnum'] = {

    /**
     * value: "ERROR_TYPE_UNSPECIFIED"
     * @const
     */
    "ERROR_TYPE_UNSPECIFIED": "ERROR_TYPE_UNSPECIFIED",

    /**
     * value: "ACTIVE_FOLDER_HEIGHT_VIOLATION"
     * @const
     */
    "ACTIVE_FOLDER_HEIGHT_VIOLATION": "ACTIVE_FOLDER_HEIGHT_VIOLATION",

    /**
     * value: "MAX_CHILD_FOLDERS_VIOLATION"
     * @const
     */
    "MAX_CHILD_FOLDERS_VIOLATION": "MAX_CHILD_FOLDERS_VIOLATION",

    /**
     * value: "FOLDER_NAME_UNIQUENESS_VIOLATION"
     * @const
     */
    "FOLDER_NAME_UNIQUENESS_VIOLATION": "FOLDER_NAME_UNIQUENESS_VIOLATION",

    /**
     * value: "RESOURCE_DELETED_VIOLATION"
     * @const
     */
    "RESOURCE_DELETED_VIOLATION": "RESOURCE_DELETED_VIOLATION",

    /**
     * value: "PARENT_DELETED_VIOLATION"
     * @const
     */
    "PARENT_DELETED_VIOLATION": "PARENT_DELETED_VIOLATION",

    /**
     * value: "CYCLE_INTRODUCED_VIOLATION"
     * @const
     */
    "CYCLE_INTRODUCED_VIOLATION": "CYCLE_INTRODUCED_VIOLATION",

    /**
     * value: "FOLDER_BEING_MOVED_VIOLATION"
     * @const
     */
    "FOLDER_BEING_MOVED_VIOLATION": "FOLDER_BEING_MOVED_VIOLATION",

    /**
     * value: "FOLDER_TO_DELETE_NON_EMPTY_VIOLATION"
     * @const
     */
    "FOLDER_TO_DELETE_NON_EMPTY_VIOLATION": "FOLDER_TO_DELETE_NON_EMPTY_VIOLATION",

    /**
     * value: "DELETED_FOLDER_HEIGHT_VIOLATION"
     * @const
     */
    "DELETED_FOLDER_HEIGHT_VIOLATION": "DELETED_FOLDER_HEIGHT_VIOLATION"
};



export default FolderOperationError;

