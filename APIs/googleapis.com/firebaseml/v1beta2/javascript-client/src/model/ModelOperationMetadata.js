/**
 * Firebase ML API
 * Access custom machine learning models hosted via Firebase ML.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelOperationMetadata model module.
 * @module model/ModelOperationMetadata
 * @version v1beta2
 */
class ModelOperationMetadata {
    /**
     * Constructs a new <code>ModelOperationMetadata</code>.
     * This is returned in the longrunning operations for create/update.
     * @alias module:model/ModelOperationMetadata
     */
    constructor() { 
        
        ModelOperationMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelOperationMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelOperationMetadata} obj Optional instance to populate.
     * @return {module:model/ModelOperationMetadata} The populated <code>ModelOperationMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelOperationMetadata();

            if (data.hasOwnProperty('basicOperationStatus')) {
                obj['basicOperationStatus'] = ApiClient.convertToType(data['basicOperationStatus'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelOperationMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelOperationMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['basicOperationStatus'] && !(typeof data['basicOperationStatus'] === 'string' || data['basicOperationStatus'] instanceof String)) {
            throw new Error("Expected the field `basicOperationStatus` to be a primitive type in the JSON string but got " + data['basicOperationStatus']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/ModelOperationMetadata.BasicOperationStatusEnum} basicOperationStatus
 */
ModelOperationMetadata.prototype['basicOperationStatus'] = undefined;

/**
 * The name of the model we are creating/updating The name must have the form `projects/{project_id}/models/{model_id}`
 * @member {String} name
 */
ModelOperationMetadata.prototype['name'] = undefined;





/**
 * Allowed values for the <code>basicOperationStatus</code> property.
 * @enum {String}
 * @readonly
 */
ModelOperationMetadata['BasicOperationStatusEnum'] = {

    /**
     * value: "BASIC_OPERATION_STATUS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "BASIC_OPERATION_STATUS_UNSPECIFIED",

    /**
     * value: "BASIC_OPERATION_STATUS_UPLOADING"
     * @const
     */
    "UPLOADING": "BASIC_OPERATION_STATUS_UPLOADING",

    /**
     * value: "BASIC_OPERATION_STATUS_VERIFYING"
     * @const
     */
    "VERIFYING": "BASIC_OPERATION_STATUS_VERIFYING"
};



export default ModelOperationMetadata;

