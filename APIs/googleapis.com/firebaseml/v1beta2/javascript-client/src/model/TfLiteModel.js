/**
 * Firebase ML API
 * Access custom machine learning models hosted via Firebase ML.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TfLiteModel model module.
 * @module model/TfLiteModel
 * @version v1beta2
 */
class TfLiteModel {
    /**
     * Constructs a new <code>TfLiteModel</code>.
     * Information that is specific to TfLite models.
     * @alias module:model/TfLiteModel
     */
    constructor() { 
        
        TfLiteModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TfLiteModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TfLiteModel} obj Optional instance to populate.
     * @return {module:model/TfLiteModel} The populated <code>TfLiteModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TfLiteModel();

            if (data.hasOwnProperty('automlModel')) {
                obj['automlModel'] = ApiClient.convertToType(data['automlModel'], 'String');
            }
            if (data.hasOwnProperty('gcsTfliteUri')) {
                obj['gcsTfliteUri'] = ApiClient.convertToType(data['gcsTfliteUri'], 'String');
            }
            if (data.hasOwnProperty('sizeBytes')) {
                obj['sizeBytes'] = ApiClient.convertToType(data['sizeBytes'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TfLiteModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TfLiteModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['automlModel'] && !(typeof data['automlModel'] === 'string' || data['automlModel'] instanceof String)) {
            throw new Error("Expected the field `automlModel` to be a primitive type in the JSON string but got " + data['automlModel']);
        }
        // ensure the json data is a string
        if (data['gcsTfliteUri'] && !(typeof data['gcsTfliteUri'] === 'string' || data['gcsTfliteUri'] instanceof String)) {
            throw new Error("Expected the field `gcsTfliteUri` to be a primitive type in the JSON string but got " + data['gcsTfliteUri']);
        }
        // ensure the json data is a string
        if (data['sizeBytes'] && !(typeof data['sizeBytes'] === 'string' || data['sizeBytes'] instanceof String)) {
            throw new Error("Expected the field `sizeBytes` to be a primitive type in the JSON string but got " + data['sizeBytes']);
        }

        return true;
    }


}



/**
 * The AutoML model id referencing a model you created with the AutoML API. The name should have format 'projects//locations//models/' (This is the model resource name returned from the AutoML API)
 * @member {String} automlModel
 */
TfLiteModel.prototype['automlModel'] = undefined;

/**
 * The TfLite file containing the model. (Stored in Google Cloud). The gcs_tflite_uri should have form: gs://some-bucket/some-model.tflite Note: If you update the file in the original location, it is necessary to call UpdateModel for ML to pick up and validate the updated file.
 * @member {String} gcsTfliteUri
 */
TfLiteModel.prototype['gcsTfliteUri'] = undefined;

/**
 * Output only. The size of the TFLite model
 * @member {String} sizeBytes
 */
TfLiteModel.prototype['sizeBytes'] = undefined;






export default TfLiteModel;

