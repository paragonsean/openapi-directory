# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DownloadModelResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, download_uri: str=None, expire_time: str=None, model_format: str=None, size_bytes: str=None):
        """DownloadModelResponse - a model defined in OpenAPI

        :param download_uri: The download_uri of this DownloadModelResponse.
        :param expire_time: The expire_time of this DownloadModelResponse.
        :param model_format: The model_format of this DownloadModelResponse.
        :param size_bytes: The size_bytes of this DownloadModelResponse.
        """
        self.openapi_types = {
            'download_uri': str,
            'expire_time': str,
            'model_format': str,
            'size_bytes': str
        }

        self.attribute_map = {
            'download_uri': 'downloadUri',
            'expire_time': 'expireTime',
            'model_format': 'modelFormat',
            'size_bytes': 'sizeBytes'
        }

        self._download_uri = download_uri
        self._expire_time = expire_time
        self._model_format = model_format
        self._size_bytes = size_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DownloadModelResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DownloadModelResponse of this DownloadModelResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def download_uri(self):
        """Gets the download_uri of this DownloadModelResponse.

        Output only. A download URI for the model/zip file.

        :return: The download_uri of this DownloadModelResponse.
        :rtype: str
        """
        return self._download_uri

    @download_uri.setter
    def download_uri(self, download_uri):
        """Sets the download_uri of this DownloadModelResponse.

        Output only. A download URI for the model/zip file.

        :param download_uri: The download_uri of this DownloadModelResponse.
        :type download_uri: str
        """

        self._download_uri = download_uri

    @property
    def expire_time(self):
        """Gets the expire_time of this DownloadModelResponse.

        Output only. The time that the download URI link expires. If the link has expired, the REST call must be repeated.

        :return: The expire_time of this DownloadModelResponse.
        :rtype: str
        """
        return self._expire_time

    @expire_time.setter
    def expire_time(self, expire_time):
        """Sets the expire_time of this DownloadModelResponse.

        Output only. The time that the download URI link expires. If the link has expired, the REST call must be repeated.

        :param expire_time: The expire_time of this DownloadModelResponse.
        :type expire_time: str
        """

        self._expire_time = expire_time

    @property
    def model_format(self):
        """Gets the model_format of this DownloadModelResponse.

        Output only. The format of the model being downloaded.

        :return: The model_format of this DownloadModelResponse.
        :rtype: str
        """
        return self._model_format

    @model_format.setter
    def model_format(self, model_format):
        """Sets the model_format of this DownloadModelResponse.

        Output only. The format of the model being downloaded.

        :param model_format: The model_format of this DownloadModelResponse.
        :type model_format: str
        """
        allowed_values = ["MODEL_FORMAT_UNSPECIFIED", "TFLITE"]  # noqa: E501
        if model_format not in allowed_values:
            raise ValueError(
                "Invalid value for `model_format` ({0}), must be one of {1}"
                .format(model_format, allowed_values)
            )

        self._model_format = model_format

    @property
    def size_bytes(self):
        """Gets the size_bytes of this DownloadModelResponse.

        Output only. The size of the file(s), if this information is available.

        :return: The size_bytes of this DownloadModelResponse.
        :rtype: str
        """
        return self._size_bytes

    @size_bytes.setter
    def size_bytes(self, size_bytes):
        """Sets the size_bytes of this DownloadModelResponse.

        Output only. The size of the file(s), if this information is available.

        :param size_bytes: The size_bytes of this DownloadModelResponse.
        :type size_bytes: str
        """

        self._size_bytes = size_bytes
