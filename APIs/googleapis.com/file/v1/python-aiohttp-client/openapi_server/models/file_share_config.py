# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.nfs_export_options import NfsExportOptions
from openapi_server import util


class FileShareConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capacity_gb: str=None, name: str=None, nfs_export_options: List[NfsExportOptions]=None, source_backup: str=None):
        """FileShareConfig - a model defined in OpenAPI

        :param capacity_gb: The capacity_gb of this FileShareConfig.
        :param name: The name of this FileShareConfig.
        :param nfs_export_options: The nfs_export_options of this FileShareConfig.
        :param source_backup: The source_backup of this FileShareConfig.
        """
        self.openapi_types = {
            'capacity_gb': str,
            'name': str,
            'nfs_export_options': List[NfsExportOptions],
            'source_backup': str
        }

        self.attribute_map = {
            'capacity_gb': 'capacityGb',
            'name': 'name',
            'nfs_export_options': 'nfsExportOptions',
            'source_backup': 'sourceBackup'
        }

        self._capacity_gb = capacity_gb
        self._name = name
        self._nfs_export_options = nfs_export_options
        self._source_backup = source_backup

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileShareConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileShareConfig of this FileShareConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capacity_gb(self):
        """Gets the capacity_gb of this FileShareConfig.

        File share capacity in gigabytes (GB). Filestore defines 1 GB as 1024^3 bytes.

        :return: The capacity_gb of this FileShareConfig.
        :rtype: str
        """
        return self._capacity_gb

    @capacity_gb.setter
    def capacity_gb(self, capacity_gb):
        """Sets the capacity_gb of this FileShareConfig.

        File share capacity in gigabytes (GB). Filestore defines 1 GB as 1024^3 bytes.

        :param capacity_gb: The capacity_gb of this FileShareConfig.
        :type capacity_gb: str
        """

        self._capacity_gb = capacity_gb

    @property
    def name(self):
        """Gets the name of this FileShareConfig.

        Required. The name of the file share. Must use 1-16 characters for the basic service tier and 1-63 characters for all other service tiers. Must use lowercase letters, numbers, or underscores `[a-z0-9_]`. Must start with a letter. Immutable.

        :return: The name of this FileShareConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FileShareConfig.

        Required. The name of the file share. Must use 1-16 characters for the basic service tier and 1-63 characters for all other service tiers. Must use lowercase letters, numbers, or underscores `[a-z0-9_]`. Must start with a letter. Immutable.

        :param name: The name of this FileShareConfig.
        :type name: str
        """

        self._name = name

    @property
    def nfs_export_options(self):
        """Gets the nfs_export_options of this FileShareConfig.

        Nfs Export Options. There is a limit of 10 export options per file share.

        :return: The nfs_export_options of this FileShareConfig.
        :rtype: List[NfsExportOptions]
        """
        return self._nfs_export_options

    @nfs_export_options.setter
    def nfs_export_options(self, nfs_export_options):
        """Sets the nfs_export_options of this FileShareConfig.

        Nfs Export Options. There is a limit of 10 export options per file share.

        :param nfs_export_options: The nfs_export_options of this FileShareConfig.
        :type nfs_export_options: List[NfsExportOptions]
        """

        self._nfs_export_options = nfs_export_options

    @property
    def source_backup(self):
        """Gets the source_backup of this FileShareConfig.

        The resource name of the backup, in the format `projects/{project_number}/locations/{location_id}/backups/{backup_id}`, that this file share has been restored from.

        :return: The source_backup of this FileShareConfig.
        :rtype: str
        """
        return self._source_backup

    @source_backup.setter
    def source_backup(self, source_backup):
        """Sets the source_backup of this FileShareConfig.

        The resource name of the backup, in the format `projects/{project_number}/locations/{location_id}/backups/{backup_id}`, that this file share has been restored from.

        :param source_backup: The source_backup of this FileShareConfig.
        :type source_backup: str
        """

        self._source_backup = source_backup
