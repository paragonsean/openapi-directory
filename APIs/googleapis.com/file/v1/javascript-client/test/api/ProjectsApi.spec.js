/**
 * Cloud Filestore API
 * The Cloud Filestore API is used for creating and managing cloud file servers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudFilestoreApi);
  }
}(this, function(expect, CloudFilestoreApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudFilestoreApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('fileProjectsLocationsBackupsCreate', function() {
      it('should call fileProjectsLocationsBackupsCreate successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsBackupsCreate
        //instance.fileProjectsLocationsBackupsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileProjectsLocationsBackupsList', function() {
      it('should call fileProjectsLocationsBackupsList successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsBackupsList
        //instance.fileProjectsLocationsBackupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileProjectsLocationsInstancesCreate', function() {
      it('should call fileProjectsLocationsInstancesCreate successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsInstancesCreate
        //instance.fileProjectsLocationsInstancesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileProjectsLocationsInstancesList', function() {
      it('should call fileProjectsLocationsInstancesList successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsInstancesList
        //instance.fileProjectsLocationsInstancesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileProjectsLocationsInstancesRestore', function() {
      it('should call fileProjectsLocationsInstancesRestore successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsInstancesRestore
        //instance.fileProjectsLocationsInstancesRestore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileProjectsLocationsInstancesRevert', function() {
      it('should call fileProjectsLocationsInstancesRevert successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsInstancesRevert
        //instance.fileProjectsLocationsInstancesRevert(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileProjectsLocationsInstancesSnapshotsCreate', function() {
      it('should call fileProjectsLocationsInstancesSnapshotsCreate successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsInstancesSnapshotsCreate
        //instance.fileProjectsLocationsInstancesSnapshotsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileProjectsLocationsInstancesSnapshotsList', function() {
      it('should call fileProjectsLocationsInstancesSnapshotsList successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsInstancesSnapshotsList
        //instance.fileProjectsLocationsInstancesSnapshotsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileProjectsLocationsInstancesSnapshotsPatch', function() {
      it('should call fileProjectsLocationsInstancesSnapshotsPatch successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsInstancesSnapshotsPatch
        //instance.fileProjectsLocationsInstancesSnapshotsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileProjectsLocationsList', function() {
      it('should call fileProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsList
        //instance.fileProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileProjectsLocationsOperationsCancel', function() {
      it('should call fileProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsOperationsCancel
        //instance.fileProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileProjectsLocationsOperationsDelete', function() {
      it('should call fileProjectsLocationsOperationsDelete successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsOperationsDelete
        //instance.fileProjectsLocationsOperationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileProjectsLocationsOperationsGet', function() {
      it('should call fileProjectsLocationsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsOperationsGet
        //instance.fileProjectsLocationsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileProjectsLocationsOperationsList', function() {
      it('should call fileProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test fileProjectsLocationsOperationsList
        //instance.fileProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
