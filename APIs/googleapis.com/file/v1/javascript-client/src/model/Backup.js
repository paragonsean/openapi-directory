/**
 * Cloud Filestore API
 * The Cloud Filestore API is used for creating and managing cloud file servers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Backup model module.
 * @module model/Backup
 * @version v1
 */
class Backup {
    /**
     * Constructs a new <code>Backup</code>.
     * A Filestore backup.
     * @alias module:model/Backup
     */
    constructor() { 
        
        Backup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Backup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Backup} obj Optional instance to populate.
     * @return {module:model/Backup} The populated <code>Backup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Backup();

            if (data.hasOwnProperty('capacityGb')) {
                obj['capacityGb'] = ApiClient.convertToType(data['capacityGb'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('downloadBytes')) {
                obj['downloadBytes'] = ApiClient.convertToType(data['downloadBytes'], 'String');
            }
            if (data.hasOwnProperty('kmsKey')) {
                obj['kmsKey'] = ApiClient.convertToType(data['kmsKey'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('satisfiesPzi')) {
                obj['satisfiesPzi'] = ApiClient.convertToType(data['satisfiesPzi'], 'Boolean');
            }
            if (data.hasOwnProperty('satisfiesPzs')) {
                obj['satisfiesPzs'] = ApiClient.convertToType(data['satisfiesPzs'], 'Boolean');
            }
            if (data.hasOwnProperty('sourceFileShare')) {
                obj['sourceFileShare'] = ApiClient.convertToType(data['sourceFileShare'], 'String');
            }
            if (data.hasOwnProperty('sourceInstance')) {
                obj['sourceInstance'] = ApiClient.convertToType(data['sourceInstance'], 'String');
            }
            if (data.hasOwnProperty('sourceInstanceTier')) {
                obj['sourceInstanceTier'] = ApiClient.convertToType(data['sourceInstanceTier'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('storageBytes')) {
                obj['storageBytes'] = ApiClient.convertToType(data['storageBytes'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Backup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Backup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['capacityGb'] && !(typeof data['capacityGb'] === 'string' || data['capacityGb'] instanceof String)) {
            throw new Error("Expected the field `capacityGb` to be a primitive type in the JSON string but got " + data['capacityGb']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['downloadBytes'] && !(typeof data['downloadBytes'] === 'string' || data['downloadBytes'] instanceof String)) {
            throw new Error("Expected the field `downloadBytes` to be a primitive type in the JSON string but got " + data['downloadBytes']);
        }
        // ensure the json data is a string
        if (data['kmsKey'] && !(typeof data['kmsKey'] === 'string' || data['kmsKey'] instanceof String)) {
            throw new Error("Expected the field `kmsKey` to be a primitive type in the JSON string but got " + data['kmsKey']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['sourceFileShare'] && !(typeof data['sourceFileShare'] === 'string' || data['sourceFileShare'] instanceof String)) {
            throw new Error("Expected the field `sourceFileShare` to be a primitive type in the JSON string but got " + data['sourceFileShare']);
        }
        // ensure the json data is a string
        if (data['sourceInstance'] && !(typeof data['sourceInstance'] === 'string' || data['sourceInstance'] instanceof String)) {
            throw new Error("Expected the field `sourceInstance` to be a primitive type in the JSON string but got " + data['sourceInstance']);
        }
        // ensure the json data is a string
        if (data['sourceInstanceTier'] && !(typeof data['sourceInstanceTier'] === 'string' || data['sourceInstanceTier'] instanceof String)) {
            throw new Error("Expected the field `sourceInstanceTier` to be a primitive type in the JSON string but got " + data['sourceInstanceTier']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['storageBytes'] && !(typeof data['storageBytes'] === 'string' || data['storageBytes'] instanceof String)) {
            throw new Error("Expected the field `storageBytes` to be a primitive type in the JSON string but got " + data['storageBytes']);
        }

        return true;
    }


}



/**
 * Output only. Capacity of the source file share when the backup was created.
 * @member {String} capacityGb
 */
Backup.prototype['capacityGb'] = undefined;

/**
 * Output only. The time when the backup was created.
 * @member {String} createTime
 */
Backup.prototype['createTime'] = undefined;

/**
 * A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.
 * @member {String} description
 */
Backup.prototype['description'] = undefined;

/**
 * Output only. Amount of bytes that will be downloaded if the backup is restored. This may be different than storage bytes, since sequential backups of the same disk will share storage.
 * @member {String} downloadBytes
 */
Backup.prototype['downloadBytes'] = undefined;

/**
 * Immutable. KMS key name used for data encryption.
 * @member {String} kmsKey
 */
Backup.prototype['kmsKey'] = undefined;

/**
 * Resource labels to represent user provided metadata.
 * @member {Object.<String, String>} labels
 */
Backup.prototype['labels'] = undefined;

/**
 * Output only. The resource name of the backup, in the format `projects/{project_number}/locations/{location_id}/backups/{backup_id}`.
 * @member {String} name
 */
Backup.prototype['name'] = undefined;

/**
 * Output only. Reserved for future use.
 * @member {Boolean} satisfiesPzi
 */
Backup.prototype['satisfiesPzi'] = undefined;

/**
 * Output only. Reserved for future use.
 * @member {Boolean} satisfiesPzs
 */
Backup.prototype['satisfiesPzs'] = undefined;

/**
 * Name of the file share in the source Filestore instance that the backup is created from.
 * @member {String} sourceFileShare
 */
Backup.prototype['sourceFileShare'] = undefined;

/**
 * The resource name of the source Filestore instance, in the format `projects/{project_number}/locations/{location_id}/instances/{instance_id}`, used to create this backup.
 * @member {String} sourceInstance
 */
Backup.prototype['sourceInstance'] = undefined;

/**
 * Output only. The service tier of the source Filestore instance that this backup is created from.
 * @member {module:model/Backup.SourceInstanceTierEnum} sourceInstanceTier
 */
Backup.prototype['sourceInstanceTier'] = undefined;

/**
 * Output only. The backup state.
 * @member {module:model/Backup.StateEnum} state
 */
Backup.prototype['state'] = undefined;

/**
 * Output only. The size of the storage used by the backup. As backups share storage, this number is expected to change with backup creation/deletion.
 * @member {String} storageBytes
 */
Backup.prototype['storageBytes'] = undefined;





/**
 * Allowed values for the <code>sourceInstanceTier</code> property.
 * @enum {String}
 * @readonly
 */
Backup['SourceInstanceTierEnum'] = {

    /**
     * value: "TIER_UNSPECIFIED"
     * @const
     */
    "TIER_UNSPECIFIED": "TIER_UNSPECIFIED",

    /**
     * value: "STANDARD"
     * @const
     */
    "STANDARD": "STANDARD",

    /**
     * value: "PREMIUM"
     * @const
     */
    "PREMIUM": "PREMIUM",

    /**
     * value: "BASIC_HDD"
     * @const
     */
    "BASIC_HDD": "BASIC_HDD",

    /**
     * value: "BASIC_SSD"
     * @const
     */
    "BASIC_SSD": "BASIC_SSD",

    /**
     * value: "HIGH_SCALE_SSD"
     * @const
     */
    "HIGH_SCALE_SSD": "HIGH_SCALE_SSD",

    /**
     * value: "ENTERPRISE"
     * @const
     */
    "ENTERPRISE": "ENTERPRISE",

    /**
     * value: "ZONAL"
     * @const
     */
    "ZONAL": "ZONAL",

    /**
     * value: "REGIONAL"
     * @const
     */
    "REGIONAL": "REGIONAL"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Backup['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "FINALIZING"
     * @const
     */
    "FINALIZING": "FINALIZING",

    /**
     * value: "READY"
     * @const
     */
    "READY": "READY",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "INVALID"
     * @const
     */
    "INVALID": "INVALID"
};



export default Backup;

