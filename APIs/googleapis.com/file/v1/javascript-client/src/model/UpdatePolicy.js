/**
 * Cloud Filestore API
 * The Cloud Filestore API is used for creating and managing cloud file servers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DenyMaintenancePeriod from './DenyMaintenancePeriod';
import MaintenanceWindow from './MaintenanceWindow';

/**
 * The UpdatePolicy model module.
 * @module model/UpdatePolicy
 * @version v1
 */
class UpdatePolicy {
    /**
     * Constructs a new <code>UpdatePolicy</code>.
     * Maintenance policy applicable to instance updates.
     * @alias module:model/UpdatePolicy
     */
    constructor() { 
        
        UpdatePolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdatePolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdatePolicy} obj Optional instance to populate.
     * @return {module:model/UpdatePolicy} The populated <code>UpdatePolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatePolicy();

            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('denyMaintenancePeriods')) {
                obj['denyMaintenancePeriods'] = ApiClient.convertToType(data['denyMaintenancePeriods'], [DenyMaintenancePeriod]);
            }
            if (data.hasOwnProperty('window')) {
                obj['window'] = MaintenanceWindow.constructFromObject(data['window']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdatePolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdatePolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['channel'] && !(typeof data['channel'] === 'string' || data['channel'] instanceof String)) {
            throw new Error("Expected the field `channel` to be a primitive type in the JSON string but got " + data['channel']);
        }
        if (data['denyMaintenancePeriods']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['denyMaintenancePeriods'])) {
                throw new Error("Expected the field `denyMaintenancePeriods` to be an array in the JSON data but got " + data['denyMaintenancePeriods']);
            }
            // validate the optional field `denyMaintenancePeriods` (array)
            for (const item of data['denyMaintenancePeriods']) {
                DenyMaintenancePeriod.validateJSON(item);
            };
        }
        // validate the optional field `window`
        if (data['window']) { // data not null
          MaintenanceWindow.validateJSON(data['window']);
        }

        return true;
    }


}



/**
 * Optional. Relative scheduling channel applied to resource.
 * @member {module:model/UpdatePolicy.ChannelEnum} channel
 */
UpdatePolicy.prototype['channel'] = undefined;

/**
 * Deny Maintenance Period that is applied to resource to indicate when maintenance is forbidden. The protocol supports zero-to-many such periods, but the current SLM Rollout implementation only supports zero-to-one.
 * @member {Array.<module:model/DenyMaintenancePeriod>} denyMaintenancePeriods
 */
UpdatePolicy.prototype['denyMaintenancePeriods'] = undefined;

/**
 * @member {module:model/MaintenanceWindow} window
 */
UpdatePolicy.prototype['window'] = undefined;





/**
 * Allowed values for the <code>channel</code> property.
 * @enum {String}
 * @readonly
 */
UpdatePolicy['ChannelEnum'] = {

    /**
     * value: "UPDATE_CHANNEL_UNSPECIFIED"
     * @const
     */
    "UPDATE_CHANNEL_UNSPECIFIED": "UPDATE_CHANNEL_UNSPECIFIED",

    /**
     * value: "EARLIER"
     * @const
     */
    "EARLIER": "EARLIER",

    /**
     * value: "LATER"
     * @const
     */
    "LATER": "LATER",

    /**
     * value: "WEEK1"
     * @const
     */
    "WEEK1": "WEEK1",

    /**
     * value: "WEEK2"
     * @const
     */
    "WEEK2": "WEEK2",

    /**
     * value: "WEEK5"
     * @const
     */
    "WEEK5": "WEEK5"
};



export default UpdatePolicy;

