/**
 * Cloud Filestore API
 * The Cloud Filestore API is used for creating and managing cloud file servers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RestoreInstanceRequest model module.
 * @module model/RestoreInstanceRequest
 * @version v1
 */
class RestoreInstanceRequest {
    /**
     * Constructs a new <code>RestoreInstanceRequest</code>.
     * RestoreInstanceRequest restores an existing instance&#39;s file share from a backup.
     * @alias module:model/RestoreInstanceRequest
     */
    constructor() { 
        
        RestoreInstanceRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RestoreInstanceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RestoreInstanceRequest} obj Optional instance to populate.
     * @return {module:model/RestoreInstanceRequest} The populated <code>RestoreInstanceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RestoreInstanceRequest();

            if (data.hasOwnProperty('fileShare')) {
                obj['fileShare'] = ApiClient.convertToType(data['fileShare'], 'String');
            }
            if (data.hasOwnProperty('sourceBackup')) {
                obj['sourceBackup'] = ApiClient.convertToType(data['sourceBackup'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RestoreInstanceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RestoreInstanceRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fileShare'] && !(typeof data['fileShare'] === 'string' || data['fileShare'] instanceof String)) {
            throw new Error("Expected the field `fileShare` to be a primitive type in the JSON string but got " + data['fileShare']);
        }
        // ensure the json data is a string
        if (data['sourceBackup'] && !(typeof data['sourceBackup'] === 'string' || data['sourceBackup'] instanceof String)) {
            throw new Error("Expected the field `sourceBackup` to be a primitive type in the JSON string but got " + data['sourceBackup']);
        }

        return true;
    }


}



/**
 * Required. Name of the file share in the Filestore instance that the backup is being restored to.
 * @member {String} fileShare
 */
RestoreInstanceRequest.prototype['fileShare'] = undefined;

/**
 * The resource name of the backup, in the format `projects/{project_number}/locations/{location_id}/backups/{backup_id}`.
 * @member {String} sourceBackup
 */
RestoreInstanceRequest.prototype['sourceBackup'] = undefined;






export default RestoreInstanceRequest;

