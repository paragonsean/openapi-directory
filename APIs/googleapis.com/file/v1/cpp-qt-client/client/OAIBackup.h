/**
 * Cloud Filestore API
 * The Cloud Filestore API is used for creating and managing cloud file servers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBackup.h
 *
 * A Filestore backup.
 */

#ifndef OAIBackup_H
#define OAIBackup_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBackup : public OAIObject {
public:
    OAIBackup();
    OAIBackup(QString json);
    ~OAIBackup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCapacityGb() const;
    void setCapacityGb(const QString &capacity_gb);
    bool is_capacity_gb_Set() const;
    bool is_capacity_gb_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDownloadBytes() const;
    void setDownloadBytes(const QString &download_bytes);
    bool is_download_bytes_Set() const;
    bool is_download_bytes_Valid() const;

    QString getKmsKey() const;
    void setKmsKey(const QString &kms_key);
    bool is_kms_key_Set() const;
    bool is_kms_key_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isSatisfiesPzi() const;
    void setSatisfiesPzi(const bool &satisfies_pzi);
    bool is_satisfies_pzi_Set() const;
    bool is_satisfies_pzi_Valid() const;

    bool isSatisfiesPzs() const;
    void setSatisfiesPzs(const bool &satisfies_pzs);
    bool is_satisfies_pzs_Set() const;
    bool is_satisfies_pzs_Valid() const;

    QString getSourceFileShare() const;
    void setSourceFileShare(const QString &source_file_share);
    bool is_source_file_share_Set() const;
    bool is_source_file_share_Valid() const;

    QString getSourceInstance() const;
    void setSourceInstance(const QString &source_instance);
    bool is_source_instance_Set() const;
    bool is_source_instance_Valid() const;

    QString getSourceInstanceTier() const;
    void setSourceInstanceTier(const QString &source_instance_tier);
    bool is_source_instance_tier_Set() const;
    bool is_source_instance_tier_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStorageBytes() const;
    void setStorageBytes(const QString &storage_bytes);
    bool is_storage_bytes_Set() const;
    bool is_storage_bytes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_capacity_gb;
    bool m_capacity_gb_isSet;
    bool m_capacity_gb_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_download_bytes;
    bool m_download_bytes_isSet;
    bool m_download_bytes_isValid;

    QString m_kms_key;
    bool m_kms_key_isSet;
    bool m_kms_key_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_satisfies_pzi;
    bool m_satisfies_pzi_isSet;
    bool m_satisfies_pzi_isValid;

    bool m_satisfies_pzs;
    bool m_satisfies_pzs_isSet;
    bool m_satisfies_pzs_isValid;

    QString m_source_file_share;
    bool m_source_file_share_isSet;
    bool m_source_file_share_isValid;

    QString m_source_instance;
    bool m_source_instance_isSet;
    bool m_source_instance_isValid;

    QString m_source_instance_tier;
    bool m_source_instance_tier_isSet;
    bool m_source_instance_tier_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_storage_bytes;
    bool m_storage_bytes_isSet;
    bool m_storage_bytes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBackup)

#endif // OAIBackup_H
