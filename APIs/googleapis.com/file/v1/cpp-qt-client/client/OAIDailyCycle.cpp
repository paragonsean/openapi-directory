/**
 * Cloud Filestore API
 * The Cloud Filestore API is used for creating and managing cloud file servers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDailyCycle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDailyCycle::OAIDailyCycle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDailyCycle::OAIDailyCycle() {
    this->initializeModel();
}

OAIDailyCycle::~OAIDailyCycle() {}

void OAIDailyCycle::initializeModel() {

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIDailyCycle::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDailyCycle::fromJsonObject(QJsonObject json) {

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIDailyCycle::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDailyCycle::asJsonObject() const {
    QJsonObject obj;
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_start_time.isSet()) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAIDailyCycle::getDuration() const {
    return m_duration;
}
void OAIDailyCycle::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIDailyCycle::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIDailyCycle::is_duration_Valid() const{
    return m_duration_isValid;
}

OAITimeOfDay OAIDailyCycle::getStartTime() const {
    return m_start_time;
}
void OAIDailyCycle::setStartTime(const OAITimeOfDay &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIDailyCycle::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIDailyCycle::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIDailyCycle::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDailyCycle::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
