# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ManagedActiveDirectoryConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, computer: str=None, domain: str=None):
        """ManagedActiveDirectoryConfig - a model defined in OpenAPI

        :param computer: The computer of this ManagedActiveDirectoryConfig.
        :param domain: The domain of this ManagedActiveDirectoryConfig.
        """
        self.openapi_types = {
            'computer': str,
            'domain': str
        }

        self.attribute_map = {
            'computer': 'computer',
            'domain': 'domain'
        }

        self._computer = computer
        self._domain = domain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedActiveDirectoryConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedActiveDirectoryConfig of this ManagedActiveDirectoryConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def computer(self):
        """Gets the computer of this ManagedActiveDirectoryConfig.

        The computer name is used as a prefix to the mount remote target. Example: if the computer_name is `my-computer`, the mount command will look like: `$mount -o vers=4,sec=krb5 my-computer.filestore.:`.

        :return: The computer of this ManagedActiveDirectoryConfig.
        :rtype: str
        """
        return self._computer

    @computer.setter
    def computer(self, computer):
        """Sets the computer of this ManagedActiveDirectoryConfig.

        The computer name is used as a prefix to the mount remote target. Example: if the computer_name is `my-computer`, the mount command will look like: `$mount -o vers=4,sec=krb5 my-computer.filestore.:`.

        :param computer: The computer of this ManagedActiveDirectoryConfig.
        :type computer: str
        """

        self._computer = computer

    @property
    def domain(self):
        """Gets the domain of this ManagedActiveDirectoryConfig.

        Fully qualified domain name.

        :return: The domain of this ManagedActiveDirectoryConfig.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this ManagedActiveDirectoryConfig.

        Fully qualified domain name.

        :param domain: The domain of this ManagedActiveDirectoryConfig.
        :type domain: str
        """

        self._domain = domain
