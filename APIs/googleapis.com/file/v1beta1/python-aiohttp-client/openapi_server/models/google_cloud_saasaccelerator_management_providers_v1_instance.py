# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_saasaccelerator_management_providers_v1_maintenance_schedule import GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule
from openapi_server.models.google_cloud_saasaccelerator_management_providers_v1_maintenance_settings import GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings
from openapi_server.models.google_cloud_saasaccelerator_management_providers_v1_notification_parameter import GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter
from openapi_server.models.google_cloud_saasaccelerator_management_providers_v1_provisioned_resource import GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource
from openapi_server.models.google_cloud_saasaccelerator_management_providers_v1_slo_metadata import GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata
from openapi_server import util


class GoogleCloudSaasacceleratorManagementProvidersV1Instance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consumer_defined_name: str=None, create_time: str=None, instance_type: str=None, labels: Dict[str, str]=None, maintenance_policy_names: Dict[str, str]=None, maintenance_schedules: Dict[str, GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule]=None, maintenance_settings: GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings=None, name: str=None, notification_parameters: Dict[str, GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter]=None, producer_metadata: Dict[str, str]=None, provisioned_resources: List[GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource]=None, slm_instance_template: str=None, slo_metadata: GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata=None, software_versions: Dict[str, str]=None, state: str=None, tenant_project_id: str=None, update_time: str=None):
        """GoogleCloudSaasacceleratorManagementProvidersV1Instance - a model defined in OpenAPI

        :param consumer_defined_name: The consumer_defined_name of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param create_time: The create_time of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param instance_type: The instance_type of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param labels: The labels of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param maintenance_policy_names: The maintenance_policy_names of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param maintenance_schedules: The maintenance_schedules of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param maintenance_settings: The maintenance_settings of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param name: The name of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param notification_parameters: The notification_parameters of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param producer_metadata: The producer_metadata of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param provisioned_resources: The provisioned_resources of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param slm_instance_template: The slm_instance_template of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param slo_metadata: The slo_metadata of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param software_versions: The software_versions of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param state: The state of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param tenant_project_id: The tenant_project_id of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :param update_time: The update_time of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        """
        self.openapi_types = {
            'consumer_defined_name': str,
            'create_time': str,
            'instance_type': str,
            'labels': Dict[str, str],
            'maintenance_policy_names': Dict[str, str],
            'maintenance_schedules': Dict[str, GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule],
            'maintenance_settings': GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings,
            'name': str,
            'notification_parameters': Dict[str, GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter],
            'producer_metadata': Dict[str, str],
            'provisioned_resources': List[GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource],
            'slm_instance_template': str,
            'slo_metadata': GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata,
            'software_versions': Dict[str, str],
            'state': str,
            'tenant_project_id': str,
            'update_time': str
        }

        self.attribute_map = {
            'consumer_defined_name': 'consumerDefinedName',
            'create_time': 'createTime',
            'instance_type': 'instanceType',
            'labels': 'labels',
            'maintenance_policy_names': 'maintenancePolicyNames',
            'maintenance_schedules': 'maintenanceSchedules',
            'maintenance_settings': 'maintenanceSettings',
            'name': 'name',
            'notification_parameters': 'notificationParameters',
            'producer_metadata': 'producerMetadata',
            'provisioned_resources': 'provisionedResources',
            'slm_instance_template': 'slmInstanceTemplate',
            'slo_metadata': 'sloMetadata',
            'software_versions': 'softwareVersions',
            'state': 'state',
            'tenant_project_id': 'tenantProjectId',
            'update_time': 'updateTime'
        }

        self._consumer_defined_name = consumer_defined_name
        self._create_time = create_time
        self._instance_type = instance_type
        self._labels = labels
        self._maintenance_policy_names = maintenance_policy_names
        self._maintenance_schedules = maintenance_schedules
        self._maintenance_settings = maintenance_settings
        self._name = name
        self._notification_parameters = notification_parameters
        self._producer_metadata = producer_metadata
        self._provisioned_resources = provisioned_resources
        self._slm_instance_template = slm_instance_template
        self._slo_metadata = slo_metadata
        self._software_versions = software_versions
        self._state = state
        self._tenant_project_id = tenant_project_id
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudSaasacceleratorManagementProvidersV1Instance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudSaasacceleratorManagementProvidersV1Instance of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consumer_defined_name(self):
        """Gets the consumer_defined_name of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        consumer_defined_name is the name of the instance set by the service consumers. Generally this is different from the `name` field which reperesents the system-assigned id of the instance which the service consumers do not recognize. This is a required field for tenants onboarding to Maintenance Window notifications (go/slm-rollout-maintenance-policies#prerequisites).

        :return: The consumer_defined_name of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: str
        """
        return self._consumer_defined_name

    @consumer_defined_name.setter
    def consumer_defined_name(self, consumer_defined_name):
        """Sets the consumer_defined_name of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        consumer_defined_name is the name of the instance set by the service consumers. Generally this is different from the `name` field which reperesents the system-assigned id of the instance which the service consumers do not recognize. This is a required field for tenants onboarding to Maintenance Window notifications (go/slm-rollout-maintenance-policies#prerequisites).

        :param consumer_defined_name: The consumer_defined_name of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type consumer_defined_name: str
        """

        self._consumer_defined_name = consumer_defined_name

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Output only. Timestamp when the resource was created.

        :return: The create_time of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Output only. Timestamp when the resource was created.

        :param create_time: The create_time of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def instance_type(self):
        """Gets the instance_type of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Optional. The instance_type of this instance of format: projects/{project_number}/locations/{location_id}/instanceTypes/{instance_type_id}. Instance Type represents a high-level tier or SKU of the service that this instance belong to. When enabled(eg: Maintenance Rollout), Rollout uses 'instance_type' along with 'software_versions' to determine whether instance needs an update or not.

        :return: The instance_type of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Optional. The instance_type of this instance of format: projects/{project_number}/locations/{location_id}/instanceTypes/{instance_type_id}. Instance Type represents a high-level tier or SKU of the service that this instance belong to. When enabled(eg: Maintenance Rollout), Rollout uses 'instance_type' along with 'software_versions' to determine whether instance needs an update or not.

        :param instance_type: The instance_type of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type instance_type: str
        """

        self._instance_type = instance_type

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.

        :return: The labels of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.

        :param labels: The labels of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def maintenance_policy_names(self):
        """Gets the maintenance_policy_names of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the referenced policy must define the same policy type. For details, please refer to go/mr-user-guide. Should not be set if maintenance_settings.maintenance_policies is set.

        :return: The maintenance_policy_names of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: Dict[str, str]
        """
        return self._maintenance_policy_names

    @maintenance_policy_names.setter
    def maintenance_policy_names(self, maintenance_policy_names):
        """Sets the maintenance_policy_names of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the referenced policy must define the same policy type. For details, please refer to go/mr-user-guide. Should not be set if maintenance_settings.maintenance_policies is set.

        :param maintenance_policy_names: The maintenance_policy_names of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type maintenance_policy_names: Dict[str, str]
        """

        self._maintenance_policy_names = maintenance_policy_names

    @property
    def maintenance_schedules(self):
        """Gets the maintenance_schedules of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        The MaintenanceSchedule contains the scheduling information of published maintenance schedule with same key as software_versions.

        :return: The maintenance_schedules of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: Dict[str, GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule]
        """
        return self._maintenance_schedules

    @maintenance_schedules.setter
    def maintenance_schedules(self, maintenance_schedules):
        """Sets the maintenance_schedules of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        The MaintenanceSchedule contains the scheduling information of published maintenance schedule with same key as software_versions.

        :param maintenance_schedules: The maintenance_schedules of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type maintenance_schedules: Dict[str, GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule]
        """

        self._maintenance_schedules = maintenance_schedules

    @property
    def maintenance_settings(self):
        """Gets the maintenance_settings of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.


        :return: The maintenance_settings of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings
        """
        return self._maintenance_settings

    @maintenance_settings.setter
    def maintenance_settings(self, maintenance_settings):
        """Sets the maintenance_settings of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.


        :param maintenance_settings: The maintenance_settings of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type maintenance_settings: GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings
        """

        self._maintenance_settings = maintenance_settings

    @property
    def name(self):
        """Gets the name of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Unique name of the resource. It uses the form: `projects/{project_number}/locations/{location_id}/instances/{instance_id}` Note: This name is passed, stored and logged across the rollout system. So use of consumer project_id or any other consumer PII in the name is strongly discouraged for wipeout (go/wipeout) compliance. See go/elysium/project_ids#storage-guidance for more details.

        :return: The name of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Unique name of the resource. It uses the form: `projects/{project_number}/locations/{location_id}/instances/{instance_id}` Note: This name is passed, stored and logged across the rollout system. So use of consumer project_id or any other consumer PII in the name is strongly discouraged for wipeout (go/wipeout) compliance. See go/elysium/project_ids#storage-guidance for more details.

        :param name: The name of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type name: str
        """

        self._name = name

    @property
    def notification_parameters(self):
        """Gets the notification_parameters of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Optional. notification_parameter are information that service producers may like to include that is not relevant to Rollout. This parameter will only be passed to Gamma and Cloud Logging for notification/logging purpose.

        :return: The notification_parameters of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: Dict[str, GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter]
        """
        return self._notification_parameters

    @notification_parameters.setter
    def notification_parameters(self, notification_parameters):
        """Sets the notification_parameters of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Optional. notification_parameter are information that service producers may like to include that is not relevant to Rollout. This parameter will only be passed to Gamma and Cloud Logging for notification/logging purpose.

        :param notification_parameters: The notification_parameters of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type notification_parameters: Dict[str, GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter]
        """

        self._notification_parameters = notification_parameters

    @property
    def producer_metadata(self):
        """Gets the producer_metadata of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Output only. Custom string attributes used primarily to expose producer-specific information in monitoring dashboards. See go/get-instance-metadata.

        :return: The producer_metadata of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: Dict[str, str]
        """
        return self._producer_metadata

    @producer_metadata.setter
    def producer_metadata(self, producer_metadata):
        """Sets the producer_metadata of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Output only. Custom string attributes used primarily to expose producer-specific information in monitoring dashboards. See go/get-instance-metadata.

        :param producer_metadata: The producer_metadata of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type producer_metadata: Dict[str, str]
        """

        self._producer_metadata = producer_metadata

    @property
    def provisioned_resources(self):
        """Gets the provisioned_resources of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Output only. The list of data plane resources provisioned for this instance, e.g. compute VMs. See go/get-instance-metadata.

        :return: The provisioned_resources of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: List[GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource]
        """
        return self._provisioned_resources

    @provisioned_resources.setter
    def provisioned_resources(self, provisioned_resources):
        """Sets the provisioned_resources of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Output only. The list of data plane resources provisioned for this instance, e.g. compute VMs. See go/get-instance-metadata.

        :param provisioned_resources: The provisioned_resources of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type provisioned_resources: List[GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource]
        """

        self._provisioned_resources = provisioned_resources

    @property
    def slm_instance_template(self):
        """Gets the slm_instance_template of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Link to the SLM instance template. Only populated when updating SLM instances via SSA's Actuation service adaptor. Service producers with custom control plane (e.g. Cloud SQL) doesn't need to populate this field. Instead they should use software_versions.

        :return: The slm_instance_template of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: str
        """
        return self._slm_instance_template

    @slm_instance_template.setter
    def slm_instance_template(self, slm_instance_template):
        """Sets the slm_instance_template of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Link to the SLM instance template. Only populated when updating SLM instances via SSA's Actuation service adaptor. Service producers with custom control plane (e.g. Cloud SQL) doesn't need to populate this field. Instead they should use software_versions.

        :param slm_instance_template: The slm_instance_template of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type slm_instance_template: str
        """

        self._slm_instance_template = slm_instance_template

    @property
    def slo_metadata(self):
        """Gets the slo_metadata of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.


        :return: The slo_metadata of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata
        """
        return self._slo_metadata

    @slo_metadata.setter
    def slo_metadata(self, slo_metadata):
        """Sets the slo_metadata of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.


        :param slo_metadata: The slo_metadata of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type slo_metadata: GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata
        """

        self._slo_metadata = slo_metadata

    @property
    def software_versions(self):
        """Gets the software_versions of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Software versions that are used to deploy this instance. This can be mutated by rollout services.

        :return: The software_versions of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: Dict[str, str]
        """
        return self._software_versions

    @software_versions.setter
    def software_versions(self, software_versions):
        """Sets the software_versions of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Software versions that are used to deploy this instance. This can be mutated by rollout services.

        :param software_versions: The software_versions of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type software_versions: Dict[str, str]
        """

        self._software_versions = software_versions

    @property
    def state(self):
        """Gets the state of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Output only. Current lifecycle state of the resource (e.g. if it's being created or ready to use).

        :return: The state of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Output only. Current lifecycle state of the resource (e.g. if it's being created or ready to use).

        :param state: The state of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "CREATING", "READY", "UPDATING", "REPAIRING", "DELETING", "ERROR"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def tenant_project_id(self):
        """Gets the tenant_project_id of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Output only. ID of the associated GCP tenant project. See go/get-instance-metadata.

        :return: The tenant_project_id of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: str
        """
        return self._tenant_project_id

    @tenant_project_id.setter
    def tenant_project_id(self, tenant_project_id):
        """Sets the tenant_project_id of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Output only. ID of the associated GCP tenant project. See go/get-instance-metadata.

        :param tenant_project_id: The tenant_project_id of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type tenant_project_id: str
        """

        self._tenant_project_id = tenant_project_id

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Output only. Timestamp when the resource was last modified.

        :return: The update_time of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.

        Output only. Timestamp when the resource was last modified.

        :param update_time: The update_time of this GoogleCloudSaasacceleratorManagementProvidersV1Instance.
        :type update_time: str
        """

        self._update_time = update_time
