/**
 * Cloud Filestore API
 * The Cloud Filestore API is used for creating and managing cloud file servers.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstance.h
 *
 * A Filestore instance.
 */

#ifndef OAIInstance_H
#define OAIInstance_H

#include <QJsonObject>

#include "OAIDirectoryServicesConfig.h"
#include "OAIFileShareConfig.h"
#include "OAINetworkConfig.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDirectoryServicesConfig;
class OAIFileShareConfig;
class OAINetworkConfig;

class OAIInstance : public OAIObject {
public:
    OAIInstance();
    OAIInstance(QString json);
    ~OAIInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCapacityGb() const;
    void setCapacityGb(const QString &capacity_gb);
    bool is_capacity_gb_Set() const;
    bool is_capacity_gb_Valid() const;

    QString getCapacityStepSizeGb() const;
    void setCapacityStepSizeGb(const QString &capacity_step_size_gb);
    bool is_capacity_step_size_gb_Set() const;
    bool is_capacity_step_size_gb_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIDirectoryServicesConfig getDirectoryServices() const;
    void setDirectoryServices(const OAIDirectoryServicesConfig &directory_services);
    bool is_directory_services_Set() const;
    bool is_directory_services_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QList<OAIFileShareConfig> getFileShares() const;
    void setFileShares(const QList<OAIFileShareConfig> &file_shares);
    bool is_file_shares_Set() const;
    bool is_file_shares_Valid() const;

    QString getKmsKeyName() const;
    void setKmsKeyName(const QString &kms_key_name);
    bool is_kms_key_name_Set() const;
    bool is_kms_key_name_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getMaxCapacityGb() const;
    void setMaxCapacityGb(const QString &max_capacity_gb);
    bool is_max_capacity_gb_Set() const;
    bool is_max_capacity_gb_Valid() const;

    QString getMaxShareCount() const;
    void setMaxShareCount(const QString &max_share_count);
    bool is_max_share_count_Set() const;
    bool is_max_share_count_Valid() const;

    bool isMultiShareEnabled() const;
    void setMultiShareEnabled(const bool &multi_share_enabled);
    bool is_multi_share_enabled_Set() const;
    bool is_multi_share_enabled_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAINetworkConfig> getNetworks() const;
    void setNetworks(const QList<OAINetworkConfig> &networks);
    bool is_networks_Set() const;
    bool is_networks_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    bool isSatisfiesPzi() const;
    void setSatisfiesPzi(const bool &satisfies_pzi);
    bool is_satisfies_pzi_Set() const;
    bool is_satisfies_pzi_Valid() const;

    bool isSatisfiesPzs() const;
    void setSatisfiesPzs(const bool &satisfies_pzs);
    bool is_satisfies_pzs_Set() const;
    bool is_satisfies_pzs_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    QList<QString> getSuspensionReasons() const;
    void setSuspensionReasons(const QList<QString> &suspension_reasons);
    bool is_suspension_reasons_Set() const;
    bool is_suspension_reasons_Valid() const;

    QString getTier() const;
    void setTier(const QString &tier);
    bool is_tier_Set() const;
    bool is_tier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_capacity_gb;
    bool m_capacity_gb_isSet;
    bool m_capacity_gb_isValid;

    QString m_capacity_step_size_gb;
    bool m_capacity_step_size_gb_isSet;
    bool m_capacity_step_size_gb_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIDirectoryServicesConfig m_directory_services;
    bool m_directory_services_isSet;
    bool m_directory_services_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QList<OAIFileShareConfig> m_file_shares;
    bool m_file_shares_isSet;
    bool m_file_shares_isValid;

    QString m_kms_key_name;
    bool m_kms_key_name_isSet;
    bool m_kms_key_name_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_max_capacity_gb;
    bool m_max_capacity_gb_isSet;
    bool m_max_capacity_gb_isValid;

    QString m_max_share_count;
    bool m_max_share_count_isSet;
    bool m_max_share_count_isValid;

    bool m_multi_share_enabled;
    bool m_multi_share_enabled_isSet;
    bool m_multi_share_enabled_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAINetworkConfig> m_networks;
    bool m_networks_isSet;
    bool m_networks_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    bool m_satisfies_pzi;
    bool m_satisfies_pzi_isSet;
    bool m_satisfies_pzi_isValid;

    bool m_satisfies_pzs;
    bool m_satisfies_pzs_isSet;
    bool m_satisfies_pzs_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    QList<QString> m_suspension_reasons;
    bool m_suspension_reasons_isSet;
    bool m_suspension_reasons_isValid;

    QString m_tier;
    bool m_tier_isSet;
    bool m_tier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstance)

#endif // OAIInstance_H
