/**
 * Cloud Filestore API
 * The Cloud Filestore API is used for creating and managing cloud file servers.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDirectoryServicesConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDirectoryServicesConfig::OAIDirectoryServicesConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDirectoryServicesConfig::OAIDirectoryServicesConfig() {
    this->initializeModel();
}

OAIDirectoryServicesConfig::~OAIDirectoryServicesConfig() {}

void OAIDirectoryServicesConfig::initializeModel() {

    m_managed_active_directory_isSet = false;
    m_managed_active_directory_isValid = false;
}

void OAIDirectoryServicesConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDirectoryServicesConfig::fromJsonObject(QJsonObject json) {

    m_managed_active_directory_isValid = ::OpenAPI::fromJsonValue(m_managed_active_directory, json[QString("managedActiveDirectory")]);
    m_managed_active_directory_isSet = !json[QString("managedActiveDirectory")].isNull() && m_managed_active_directory_isValid;
}

QString OAIDirectoryServicesConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDirectoryServicesConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_managed_active_directory.isSet()) {
        obj.insert(QString("managedActiveDirectory"), ::OpenAPI::toJsonValue(m_managed_active_directory));
    }
    return obj;
}

OAIManagedActiveDirectoryConfig OAIDirectoryServicesConfig::getManagedActiveDirectory() const {
    return m_managed_active_directory;
}
void OAIDirectoryServicesConfig::setManagedActiveDirectory(const OAIManagedActiveDirectoryConfig &managed_active_directory) {
    m_managed_active_directory = managed_active_directory;
    m_managed_active_directory_isSet = true;
}

bool OAIDirectoryServicesConfig::is_managed_active_directory_Set() const{
    return m_managed_active_directory_isSet;
}

bool OAIDirectoryServicesConfig::is_managed_active_directory_Valid() const{
    return m_managed_active_directory_isValid;
}

bool OAIDirectoryServicesConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_managed_active_directory.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDirectoryServicesConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
