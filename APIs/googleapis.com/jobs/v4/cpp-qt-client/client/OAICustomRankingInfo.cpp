/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomRankingInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomRankingInfo::OAICustomRankingInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomRankingInfo::OAICustomRankingInfo() {
    this->initializeModel();
}

OAICustomRankingInfo::~OAICustomRankingInfo() {}

void OAICustomRankingInfo::initializeModel() {

    m_importance_level_isSet = false;
    m_importance_level_isValid = false;

    m_ranking_expression_isSet = false;
    m_ranking_expression_isValid = false;
}

void OAICustomRankingInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomRankingInfo::fromJsonObject(QJsonObject json) {

    m_importance_level_isValid = ::OpenAPI::fromJsonValue(m_importance_level, json[QString("importanceLevel")]);
    m_importance_level_isSet = !json[QString("importanceLevel")].isNull() && m_importance_level_isValid;

    m_ranking_expression_isValid = ::OpenAPI::fromJsonValue(m_ranking_expression, json[QString("rankingExpression")]);
    m_ranking_expression_isSet = !json[QString("rankingExpression")].isNull() && m_ranking_expression_isValid;
}

QString OAICustomRankingInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomRankingInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_importance_level_isSet) {
        obj.insert(QString("importanceLevel"), ::OpenAPI::toJsonValue(m_importance_level));
    }
    if (m_ranking_expression_isSet) {
        obj.insert(QString("rankingExpression"), ::OpenAPI::toJsonValue(m_ranking_expression));
    }
    return obj;
}

QString OAICustomRankingInfo::getImportanceLevel() const {
    return m_importance_level;
}
void OAICustomRankingInfo::setImportanceLevel(const QString &importance_level) {
    m_importance_level = importance_level;
    m_importance_level_isSet = true;
}

bool OAICustomRankingInfo::is_importance_level_Set() const{
    return m_importance_level_isSet;
}

bool OAICustomRankingInfo::is_importance_level_Valid() const{
    return m_importance_level_isValid;
}

QString OAICustomRankingInfo::getRankingExpression() const {
    return m_ranking_expression;
}
void OAICustomRankingInfo::setRankingExpression(const QString &ranking_expression) {
    m_ranking_expression = ranking_expression;
    m_ranking_expression_isSet = true;
}

bool OAICustomRankingInfo::is_ranking_expression_Set() const{
    return m_ranking_expression_isSet;
}

bool OAICustomRankingInfo::is_ranking_expression_Valid() const{
    return m_ranking_expression_isValid;
}

bool OAICustomRankingInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_importance_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ranking_expression_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomRankingInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
