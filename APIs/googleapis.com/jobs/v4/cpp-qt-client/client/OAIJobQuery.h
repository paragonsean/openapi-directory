/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobQuery.h
 *
 * The query required to perform a search query.
 */

#ifndef OAIJobQuery_H
#define OAIJobQuery_H

#include <QJsonObject>

#include "OAICommuteFilter.h"
#include "OAICompensationFilter.h"
#include "OAILocationFilter.h"
#include "OAITimestampRange.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICommuteFilter;
class OAICompensationFilter;
class OAILocationFilter;
class OAITimestampRange;

class OAIJobQuery : public OAIObject {
public:
    OAIJobQuery();
    OAIJobQuery(QString json);
    ~OAIJobQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICommuteFilter getCommuteFilter() const;
    void setCommuteFilter(const OAICommuteFilter &commute_filter);
    bool is_commute_filter_Set() const;
    bool is_commute_filter_Valid() const;

    QList<QString> getCompanies() const;
    void setCompanies(const QList<QString> &companies);
    bool is_companies_Set() const;
    bool is_companies_Valid() const;

    QList<QString> getCompanyDisplayNames() const;
    void setCompanyDisplayNames(const QList<QString> &company_display_names);
    bool is_company_display_names_Set() const;
    bool is_company_display_names_Valid() const;

    OAICompensationFilter getCompensationFilter() const;
    void setCompensationFilter(const OAICompensationFilter &compensation_filter);
    bool is_compensation_filter_Set() const;
    bool is_compensation_filter_Valid() const;

    QString getCustomAttributeFilter() const;
    void setCustomAttributeFilter(const QString &custom_attribute_filter);
    bool is_custom_attribute_filter_Set() const;
    bool is_custom_attribute_filter_Valid() const;

    bool isDisableSpellCheck() const;
    void setDisableSpellCheck(const bool &disable_spell_check);
    bool is_disable_spell_check_Set() const;
    bool is_disable_spell_check_Valid() const;

    QList<QString> getEmploymentTypes() const;
    void setEmploymentTypes(const QList<QString> &employment_types);
    bool is_employment_types_Set() const;
    bool is_employment_types_Valid() const;

    QList<QString> getExcludedJobs() const;
    void setExcludedJobs(const QList<QString> &excluded_jobs);
    bool is_excluded_jobs_Set() const;
    bool is_excluded_jobs_Valid() const;

    QList<QString> getJobCategories() const;
    void setJobCategories(const QList<QString> &job_categories);
    bool is_job_categories_Set() const;
    bool is_job_categories_Valid() const;

    QList<QString> getLanguageCodes() const;
    void setLanguageCodes(const QList<QString> &language_codes);
    bool is_language_codes_Set() const;
    bool is_language_codes_Valid() const;

    QList<OAILocationFilter> getLocationFilters() const;
    void setLocationFilters(const QList<OAILocationFilter> &location_filters);
    bool is_location_filters_Set() const;
    bool is_location_filters_Valid() const;

    OAITimestampRange getPublishTimeRange() const;
    void setPublishTimeRange(const OAITimestampRange &publish_time_range);
    bool is_publish_time_range_Set() const;
    bool is_publish_time_range_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    QString getQueryLanguageCode() const;
    void setQueryLanguageCode(const QString &query_language_code);
    bool is_query_language_code_Set() const;
    bool is_query_language_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICommuteFilter m_commute_filter;
    bool m_commute_filter_isSet;
    bool m_commute_filter_isValid;

    QList<QString> m_companies;
    bool m_companies_isSet;
    bool m_companies_isValid;

    QList<QString> m_company_display_names;
    bool m_company_display_names_isSet;
    bool m_company_display_names_isValid;

    OAICompensationFilter m_compensation_filter;
    bool m_compensation_filter_isSet;
    bool m_compensation_filter_isValid;

    QString m_custom_attribute_filter;
    bool m_custom_attribute_filter_isSet;
    bool m_custom_attribute_filter_isValid;

    bool m_disable_spell_check;
    bool m_disable_spell_check_isSet;
    bool m_disable_spell_check_isValid;

    QList<QString> m_employment_types;
    bool m_employment_types_isSet;
    bool m_employment_types_isValid;

    QList<QString> m_excluded_jobs;
    bool m_excluded_jobs_isSet;
    bool m_excluded_jobs_isValid;

    QList<QString> m_job_categories;
    bool m_job_categories_isSet;
    bool m_job_categories_isValid;

    QList<QString> m_language_codes;
    bool m_language_codes_isSet;
    bool m_language_codes_isValid;

    QList<OAILocationFilter> m_location_filters;
    bool m_location_filters_isSet;
    bool m_location_filters_isValid;

    OAITimestampRange m_publish_time_range;
    bool m_publish_time_range_isSet;
    bool m_publish_time_range_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    QString m_query_language_code;
    bool m_query_language_code_isSet;
    bool m_query_language_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobQuery)

#endif // OAIJobQuery_H
