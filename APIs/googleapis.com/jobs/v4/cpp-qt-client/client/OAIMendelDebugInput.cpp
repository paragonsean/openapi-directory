/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMendelDebugInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMendelDebugInput::OAIMendelDebugInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMendelDebugInput::OAIMendelDebugInput() {
    this->initializeModel();
}

OAIMendelDebugInput::~OAIMendelDebugInput() {}

void OAIMendelDebugInput::initializeModel() {

    m_namespaced_debug_input_isSet = false;
    m_namespaced_debug_input_isValid = false;
}

void OAIMendelDebugInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMendelDebugInput::fromJsonObject(QJsonObject json) {

    m_namespaced_debug_input_isValid = ::OpenAPI::fromJsonValue(m_namespaced_debug_input, json[QString("namespacedDebugInput")]);
    m_namespaced_debug_input_isSet = !json[QString("namespacedDebugInput")].isNull() && m_namespaced_debug_input_isValid;
}

QString OAIMendelDebugInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMendelDebugInput::asJsonObject() const {
    QJsonObject obj;
    if (m_namespaced_debug_input.size() > 0) {
        obj.insert(QString("namespacedDebugInput"), ::OpenAPI::toJsonValue(m_namespaced_debug_input));
    }
    return obj;
}

QMap<QString, OAINamespacedDebugInput> OAIMendelDebugInput::getNamespacedDebugInput() const {
    return m_namespaced_debug_input;
}
void OAIMendelDebugInput::setNamespacedDebugInput(const QMap<QString, OAINamespacedDebugInput> &namespaced_debug_input) {
    m_namespaced_debug_input = namespaced_debug_input;
    m_namespaced_debug_input_isSet = true;
}

bool OAIMendelDebugInput::is_namespaced_debug_input_Set() const{
    return m_namespaced_debug_input_isSet;
}

bool OAIMendelDebugInput::is_namespaced_debug_input_Valid() const{
    return m_namespaced_debug_input_isValid;
}

bool OAIMendelDebugInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_namespaced_debug_input.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMendelDebugInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
