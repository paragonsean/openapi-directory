/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobEvent::OAIJobEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobEvent::OAIJobEvent() {
    this->initializeModel();
}

OAIJobEvent::~OAIJobEvent() {}

void OAIJobEvent::initializeModel() {

    m_jobs_isSet = false;
    m_jobs_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIJobEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobEvent::fromJsonObject(QJsonObject json) {

    m_jobs_isValid = ::OpenAPI::fromJsonValue(m_jobs, json[QString("jobs")]);
    m_jobs_isSet = !json[QString("jobs")].isNull() && m_jobs_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIJobEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_jobs.size() > 0) {
        obj.insert(QString("jobs"), ::OpenAPI::toJsonValue(m_jobs));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QList<QString> OAIJobEvent::getJobs() const {
    return m_jobs;
}
void OAIJobEvent::setJobs(const QList<QString> &jobs) {
    m_jobs = jobs;
    m_jobs_isSet = true;
}

bool OAIJobEvent::is_jobs_Set() const{
    return m_jobs_isSet;
}

bool OAIJobEvent::is_jobs_Valid() const{
    return m_jobs_isValid;
}

QString OAIJobEvent::getType() const {
    return m_type;
}
void OAIJobEvent::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIJobEvent::is_type_Set() const{
    return m_type_isSet;
}

bool OAIJobEvent::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIJobEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_jobs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
