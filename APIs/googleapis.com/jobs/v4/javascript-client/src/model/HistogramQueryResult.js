/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HistogramQueryResult model module.
 * @module model/HistogramQueryResult
 * @version v4
 */
class HistogramQueryResult {
    /**
     * Constructs a new <code>HistogramQueryResult</code>.
     * Histogram result that matches HistogramQuery specified in searches.
     * @alias module:model/HistogramQueryResult
     */
    constructor() { 
        
        HistogramQueryResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HistogramQueryResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistogramQueryResult} obj Optional instance to populate.
     * @return {module:model/HistogramQueryResult} The populated <code>HistogramQueryResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistogramQueryResult();

            if (data.hasOwnProperty('histogram')) {
                obj['histogram'] = ApiClient.convertToType(data['histogram'], {'String': 'String'});
            }
            if (data.hasOwnProperty('histogramQuery')) {
                obj['histogramQuery'] = ApiClient.convertToType(data['histogramQuery'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistogramQueryResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistogramQueryResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['histogramQuery'] && !(typeof data['histogramQuery'] === 'string' || data['histogramQuery'] instanceof String)) {
            throw new Error("Expected the field `histogramQuery` to be a primitive type in the JSON string but got " + data['histogramQuery']);
        }

        return true;
    }


}



/**
 * A map from the values of the facet associated with distinct values to the number of matching entries with corresponding value. The key format is: * (for string histogram) string values stored in the field. * (for named numeric bucket) name specified in `bucket()` function, like for `bucket(0, MAX, \"non-negative\")`, the key will be `non-negative`. * (for anonymous numeric bucket) range formatted as `-`, for example, `0-1000`, `MIN-0`, and `0-MAX`.
 * @member {Object.<String, String>} histogram
 */
HistogramQueryResult.prototype['histogram'] = undefined;

/**
 * Requested histogram expression.
 * @member {String} histogramQuery
 */
HistogramQueryResult.prototype['histogramQuery'] = undefined;






export default HistogramQueryResult;

