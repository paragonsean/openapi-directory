/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomRankingInfo model module.
 * @module model/CustomRankingInfo
 * @version v4
 */
class CustomRankingInfo {
    /**
     * Constructs a new <code>CustomRankingInfo</code>.
     * Custom ranking information for SearchJobsRequest.
     * @alias module:model/CustomRankingInfo
     */
    constructor() { 
        
        CustomRankingInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomRankingInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomRankingInfo} obj Optional instance to populate.
     * @return {module:model/CustomRankingInfo} The populated <code>CustomRankingInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomRankingInfo();

            if (data.hasOwnProperty('importanceLevel')) {
                obj['importanceLevel'] = ApiClient.convertToType(data['importanceLevel'], 'String');
            }
            if (data.hasOwnProperty('rankingExpression')) {
                obj['rankingExpression'] = ApiClient.convertToType(data['rankingExpression'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomRankingInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomRankingInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['importanceLevel'] && !(typeof data['importanceLevel'] === 'string' || data['importanceLevel'] instanceof String)) {
            throw new Error("Expected the field `importanceLevel` to be a primitive type in the JSON string but got " + data['importanceLevel']);
        }
        // ensure the json data is a string
        if (data['rankingExpression'] && !(typeof data['rankingExpression'] === 'string' || data['rankingExpression'] instanceof String)) {
            throw new Error("Expected the field `rankingExpression` to be a primitive type in the JSON string but got " + data['rankingExpression']);
        }

        return true;
    }


}



/**
 * Required. Controls over how important the score of CustomRankingInfo.ranking_expression gets applied to job's final ranking position. An error is thrown if not specified.
 * @member {module:model/CustomRankingInfo.ImportanceLevelEnum} importanceLevel
 */
CustomRankingInfo.prototype['importanceLevel'] = undefined;

/**
 * Required. Controls over how job documents get ranked on top of existing relevance score (determined by API algorithm). A combination of the ranking expression and relevance score is used to determine job's final ranking position. The syntax for this expression is a subset of Google SQL syntax. Supported operators are: +, -, *, /, where the left and right side of the operator is either a numeric Job.custom_attributes key, integer/double value or an expression that can be evaluated to a number. Parenthesis are supported to adjust calculation precedence. The expression must be < 200 characters in length. The expression is considered invalid for a job if the expression references custom attributes that are not populated on the job or if the expression results in a divide by zero. If an expression is invalid for a job, that job is demoted to the end of the results. Sample ranking expression (year + 25) * 0.25 - (freshness / 0.5)
 * @member {String} rankingExpression
 */
CustomRankingInfo.prototype['rankingExpression'] = undefined;





/**
 * Allowed values for the <code>importanceLevel</code> property.
 * @enum {String}
 * @readonly
 */
CustomRankingInfo['ImportanceLevelEnum'] = {

    /**
     * value: "IMPORTANCE_LEVEL_UNSPECIFIED"
     * @const
     */
    "IMPORTANCE_LEVEL_UNSPECIFIED": "IMPORTANCE_LEVEL_UNSPECIFIED",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "LOW"
     * @const
     */
    "LOW": "LOW",

    /**
     * value: "MILD"
     * @const
     */
    "MILD": "MILD",

    /**
     * value: "MEDIUM"
     * @const
     */
    "MEDIUM": "MEDIUM",

    /**
     * value: "HIGH"
     * @const
     */
    "HIGH": "HIGH",

    /**
     * value: "EXTREME"
     * @const
     */
    "EXTREME": "EXTREME"
};



export default CustomRankingInfo;

