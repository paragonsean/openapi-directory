/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobEvent model module.
 * @module model/JobEvent
 * @version v4
 */
class JobEvent {
    /**
     * Constructs a new <code>JobEvent</code>.
     * An event issued when a job seeker interacts with the application that implements Cloud Talent Solution.
     * @alias module:model/JobEvent
     */
    constructor() { 
        
        JobEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobEvent} obj Optional instance to populate.
     * @return {module:model/JobEvent} The populated <code>JobEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobEvent();

            if (data.hasOwnProperty('jobs')) {
                obj['jobs'] = ApiClient.convertToType(data['jobs'], ['String']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobEvent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['jobs'])) {
            throw new Error("Expected the field `jobs` to be an array in the JSON data but got " + data['jobs']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Required. The job name(s) associated with this event. For example, if this is an impression event, this field contains the identifiers of all jobs shown to the job seeker. If this was a view event, this field contains the identifier of the viewed job. The format is \"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\", for example, \"projects/foo/tenants/bar/jobs/baz\".
 * @member {Array.<String>} jobs
 */
JobEvent.prototype['jobs'] = undefined;

/**
 * Required. The type of the event (see JobEventType).
 * @member {module:model/JobEvent.TypeEnum} type
 */
JobEvent.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
JobEvent['TypeEnum'] = {

    /**
     * value: "JOB_EVENT_TYPE_UNSPECIFIED"
     * @const
     */
    "JOB_EVENT_TYPE_UNSPECIFIED": "JOB_EVENT_TYPE_UNSPECIFIED",

    /**
     * value: "IMPRESSION"
     * @const
     */
    "IMPRESSION": "IMPRESSION",

    /**
     * value: "VIEW"
     * @const
     */
    "VIEW": "VIEW",

    /**
     * value: "VIEW_REDIRECT"
     * @const
     */
    "VIEW_REDIRECT": "VIEW_REDIRECT",

    /**
     * value: "APPLICATION_START"
     * @const
     */
    "APPLICATION_START": "APPLICATION_START",

    /**
     * value: "APPLICATION_FINISH"
     * @const
     */
    "APPLICATION_FINISH": "APPLICATION_FINISH",

    /**
     * value: "APPLICATION_QUICK_SUBMISSION"
     * @const
     */
    "APPLICATION_QUICK_SUBMISSION": "APPLICATION_QUICK_SUBMISSION",

    /**
     * value: "APPLICATION_REDIRECT"
     * @const
     */
    "APPLICATION_REDIRECT": "APPLICATION_REDIRECT",

    /**
     * value: "APPLICATION_START_FROM_SEARCH"
     * @const
     */
    "APPLICATION_START_FROM_SEARCH": "APPLICATION_START_FROM_SEARCH",

    /**
     * value: "APPLICATION_REDIRECT_FROM_SEARCH"
     * @const
     */
    "APPLICATION_REDIRECT_FROM_SEARCH": "APPLICATION_REDIRECT_FROM_SEARCH",

    /**
     * value: "APPLICATION_COMPANY_SUBMIT"
     * @const
     */
    "APPLICATION_COMPANY_SUBMIT": "APPLICATION_COMPANY_SUBMIT",

    /**
     * value: "BOOKMARK"
     * @const
     */
    "BOOKMARK": "BOOKMARK",

    /**
     * value: "NOTIFICATION"
     * @const
     */
    "NOTIFICATION": "NOTIFICATION",

    /**
     * value: "HIRED"
     * @const
     */
    "HIRED": "HIRED",

    /**
     * value: "SENT_CV"
     * @const
     */
    "SENT_CV": "SENT_CV",

    /**
     * value: "INTERVIEW_GRANTED"
     * @const
     */
    "INTERVIEW_GRANTED": "INTERVIEW_GRANTED"
};



export default JobEvent;

