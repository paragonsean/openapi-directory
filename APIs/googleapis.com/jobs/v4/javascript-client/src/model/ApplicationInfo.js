/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationInfo model module.
 * @module model/ApplicationInfo
 * @version v4
 */
class ApplicationInfo {
    /**
     * Constructs a new <code>ApplicationInfo</code>.
     * Application related details of a job posting.
     * @alias module:model/ApplicationInfo
     */
    constructor() { 
        
        ApplicationInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationInfo} obj Optional instance to populate.
     * @return {module:model/ApplicationInfo} The populated <code>ApplicationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationInfo();

            if (data.hasOwnProperty('emails')) {
                obj['emails'] = ApiClient.convertToType(data['emails'], ['String']);
            }
            if (data.hasOwnProperty('instruction')) {
                obj['instruction'] = ApiClient.convertToType(data['instruction'], 'String');
            }
            if (data.hasOwnProperty('uris')) {
                obj['uris'] = ApiClient.convertToType(data['uris'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['emails'])) {
            throw new Error("Expected the field `emails` to be an array in the JSON data but got " + data['emails']);
        }
        // ensure the json data is a string
        if (data['instruction'] && !(typeof data['instruction'] === 'string' || data['instruction'] instanceof String)) {
            throw new Error("Expected the field `instruction` to be a primitive type in the JSON string but got " + data['instruction']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['uris'])) {
            throw new Error("Expected the field `uris` to be an array in the JSON data but got " + data['uris']);
        }

        return true;
    }


}



/**
 * Use this field to specify email address(es) to which resumes or applications can be sent. The maximum number of allowed characters for each entry is 255.
 * @member {Array.<String>} emails
 */
ApplicationInfo.prototype['emails'] = undefined;

/**
 * Use this field to provide instructions, such as \"Mail your application to ...\", that a candidate can follow to apply for the job. This field accepts and sanitizes HTML input, and also accepts bold, italic, ordered list, and unordered list markup tags. The maximum number of allowed characters is 3,000.
 * @member {String} instruction
 */
ApplicationInfo.prototype['instruction'] = undefined;

/**
 * Use this URI field to direct an applicant to a website, for example to link to an online application form. The maximum number of allowed characters for each entry is 2,000.
 * @member {Array.<String>} uris
 */
ApplicationInfo.prototype['uris'] = undefined;






export default ApplicationInfo;

