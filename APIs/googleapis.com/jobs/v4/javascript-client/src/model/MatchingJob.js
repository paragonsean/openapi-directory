/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommuteInfo from './CommuteInfo';
import Job from './Job';

/**
 * The MatchingJob model module.
 * @module model/MatchingJob
 * @version v4
 */
class MatchingJob {
    /**
     * Constructs a new <code>MatchingJob</code>.
     * Job entry with metadata inside SearchJobsResponse.
     * @alias module:model/MatchingJob
     */
    constructor() { 
        
        MatchingJob.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MatchingJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MatchingJob} obj Optional instance to populate.
     * @return {module:model/MatchingJob} The populated <code>MatchingJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MatchingJob();

            if (data.hasOwnProperty('commuteInfo')) {
                obj['commuteInfo'] = CommuteInfo.constructFromObject(data['commuteInfo']);
            }
            if (data.hasOwnProperty('job')) {
                obj['job'] = Job.constructFromObject(data['job']);
            }
            if (data.hasOwnProperty('jobSummary')) {
                obj['jobSummary'] = ApiClient.convertToType(data['jobSummary'], 'String');
            }
            if (data.hasOwnProperty('jobTitleSnippet')) {
                obj['jobTitleSnippet'] = ApiClient.convertToType(data['jobTitleSnippet'], 'String');
            }
            if (data.hasOwnProperty('searchTextSnippet')) {
                obj['searchTextSnippet'] = ApiClient.convertToType(data['searchTextSnippet'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MatchingJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MatchingJob</code>.
     */
    static validateJSON(data) {
        // validate the optional field `commuteInfo`
        if (data['commuteInfo']) { // data not null
          CommuteInfo.validateJSON(data['commuteInfo']);
        }
        // validate the optional field `job`
        if (data['job']) { // data not null
          Job.validateJSON(data['job']);
        }
        // ensure the json data is a string
        if (data['jobSummary'] && !(typeof data['jobSummary'] === 'string' || data['jobSummary'] instanceof String)) {
            throw new Error("Expected the field `jobSummary` to be a primitive type in the JSON string but got " + data['jobSummary']);
        }
        // ensure the json data is a string
        if (data['jobTitleSnippet'] && !(typeof data['jobTitleSnippet'] === 'string' || data['jobTitleSnippet'] instanceof String)) {
            throw new Error("Expected the field `jobTitleSnippet` to be a primitive type in the JSON string but got " + data['jobTitleSnippet']);
        }
        // ensure the json data is a string
        if (data['searchTextSnippet'] && !(typeof data['searchTextSnippet'] === 'string' || data['searchTextSnippet'] instanceof String)) {
            throw new Error("Expected the field `searchTextSnippet` to be a primitive type in the JSON string but got " + data['searchTextSnippet']);
        }

        return true;
    }


}



/**
 * @member {module:model/CommuteInfo} commuteInfo
 */
MatchingJob.prototype['commuteInfo'] = undefined;

/**
 * @member {module:model/Job} job
 */
MatchingJob.prototype['job'] = undefined;

/**
 * A summary of the job with core information that's displayed on the search results listing page.
 * @member {String} jobSummary
 */
MatchingJob.prototype['jobSummary'] = undefined;

/**
 * Contains snippets of text from the Job.title field most closely matching a search query's keywords, if available. The matching query keywords are enclosed in HTML bold tags.
 * @member {String} jobTitleSnippet
 */
MatchingJob.prototype['jobTitleSnippet'] = undefined;

/**
 * Contains snippets of text from the Job.description and similar fields that most closely match a search query's keywords, if available. All HTML tags in the original fields are stripped when returned in this field, and matching query keywords are enclosed in HTML bold tags.
 * @member {String} searchTextSnippet
 */
MatchingJob.prototype['searchTextSnippet'] = undefined;






export default MatchingJob;

