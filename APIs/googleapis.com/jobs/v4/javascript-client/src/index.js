/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApplicationInfo from './model/ApplicationInfo';
import BatchCreateJobsRequest from './model/BatchCreateJobsRequest';
import BatchCreateJobsResponse from './model/BatchCreateJobsResponse';
import BatchDeleteJobsRequest from './model/BatchDeleteJobsRequest';
import BatchDeleteJobsResponse from './model/BatchDeleteJobsResponse';
import BatchOperationMetadata from './model/BatchOperationMetadata';
import BatchUpdateJobsRequest from './model/BatchUpdateJobsRequest';
import BatchUpdateJobsResponse from './model/BatchUpdateJobsResponse';
import ClientEvent from './model/ClientEvent';
import CommuteFilter from './model/CommuteFilter';
import CommuteInfo from './model/CommuteInfo';
import Company from './model/Company';
import CompanyDerivedInfo from './model/CompanyDerivedInfo';
import CompensationEntry from './model/CompensationEntry';
import CompensationFilter from './model/CompensationFilter';
import CompensationInfo from './model/CompensationInfo';
import CompensationRange from './model/CompensationRange';
import CompleteQueryResponse from './model/CompleteQueryResponse';
import CompletionResult from './model/CompletionResult';
import CustomAttribute from './model/CustomAttribute';
import CustomRankingInfo from './model/CustomRankingInfo';
import DeviceInfo from './model/DeviceInfo';
import HistogramQuery from './model/HistogramQuery';
import HistogramQueryResult from './model/HistogramQueryResult';
import Job from './model/Job';
import JobDerivedInfo from './model/JobDerivedInfo';
import JobEvent from './model/JobEvent';
import JobQuery from './model/JobQuery';
import JobResult from './model/JobResult';
import LatLng from './model/LatLng';
import ListCompaniesResponse from './model/ListCompaniesResponse';
import ListJobsResponse from './model/ListJobsResponse';
import ListTenantsResponse from './model/ListTenantsResponse';
import Location from './model/Location';
import LocationFilter from './model/LocationFilter';
import MatchingJob from './model/MatchingJob';
import MendelDebugInput from './model/MendelDebugInput';
import Money from './model/Money';
import NamespacedDebugInput from './model/NamespacedDebugInput';
import Operation from './model/Operation';
import PostalAddress from './model/PostalAddress';
import ProcessingOptions from './model/ProcessingOptions';
import RequestMetadata from './model/RequestMetadata';
import ResponseMetadata from './model/ResponseMetadata';
import SearchJobsRequest from './model/SearchJobsRequest';
import SearchJobsResponse from './model/SearchJobsResponse';
import SpellingCorrection from './model/SpellingCorrection';
import Status from './model/Status';
import Tenant from './model/Tenant';
import TimeOfDay from './model/TimeOfDay';
import TimestampRange from './model/TimestampRange';
import ProjectsApi from './api/ProjectsApi';


/**
* Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudTalentSolutionApi = require('index'); // See note below*.
* var xxxSvc = new CloudTalentSolutionApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudTalentSolutionApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudTalentSolutionApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudTalentSolutionApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v4
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApplicationInfo model constructor.
     * @property {module:model/ApplicationInfo}
     */
    ApplicationInfo,

    /**
     * The BatchCreateJobsRequest model constructor.
     * @property {module:model/BatchCreateJobsRequest}
     */
    BatchCreateJobsRequest,

    /**
     * The BatchCreateJobsResponse model constructor.
     * @property {module:model/BatchCreateJobsResponse}
     */
    BatchCreateJobsResponse,

    /**
     * The BatchDeleteJobsRequest model constructor.
     * @property {module:model/BatchDeleteJobsRequest}
     */
    BatchDeleteJobsRequest,

    /**
     * The BatchDeleteJobsResponse model constructor.
     * @property {module:model/BatchDeleteJobsResponse}
     */
    BatchDeleteJobsResponse,

    /**
     * The BatchOperationMetadata model constructor.
     * @property {module:model/BatchOperationMetadata}
     */
    BatchOperationMetadata,

    /**
     * The BatchUpdateJobsRequest model constructor.
     * @property {module:model/BatchUpdateJobsRequest}
     */
    BatchUpdateJobsRequest,

    /**
     * The BatchUpdateJobsResponse model constructor.
     * @property {module:model/BatchUpdateJobsResponse}
     */
    BatchUpdateJobsResponse,

    /**
     * The ClientEvent model constructor.
     * @property {module:model/ClientEvent}
     */
    ClientEvent,

    /**
     * The CommuteFilter model constructor.
     * @property {module:model/CommuteFilter}
     */
    CommuteFilter,

    /**
     * The CommuteInfo model constructor.
     * @property {module:model/CommuteInfo}
     */
    CommuteInfo,

    /**
     * The Company model constructor.
     * @property {module:model/Company}
     */
    Company,

    /**
     * The CompanyDerivedInfo model constructor.
     * @property {module:model/CompanyDerivedInfo}
     */
    CompanyDerivedInfo,

    /**
     * The CompensationEntry model constructor.
     * @property {module:model/CompensationEntry}
     */
    CompensationEntry,

    /**
     * The CompensationFilter model constructor.
     * @property {module:model/CompensationFilter}
     */
    CompensationFilter,

    /**
     * The CompensationInfo model constructor.
     * @property {module:model/CompensationInfo}
     */
    CompensationInfo,

    /**
     * The CompensationRange model constructor.
     * @property {module:model/CompensationRange}
     */
    CompensationRange,

    /**
     * The CompleteQueryResponse model constructor.
     * @property {module:model/CompleteQueryResponse}
     */
    CompleteQueryResponse,

    /**
     * The CompletionResult model constructor.
     * @property {module:model/CompletionResult}
     */
    CompletionResult,

    /**
     * The CustomAttribute model constructor.
     * @property {module:model/CustomAttribute}
     */
    CustomAttribute,

    /**
     * The CustomRankingInfo model constructor.
     * @property {module:model/CustomRankingInfo}
     */
    CustomRankingInfo,

    /**
     * The DeviceInfo model constructor.
     * @property {module:model/DeviceInfo}
     */
    DeviceInfo,

    /**
     * The HistogramQuery model constructor.
     * @property {module:model/HistogramQuery}
     */
    HistogramQuery,

    /**
     * The HistogramQueryResult model constructor.
     * @property {module:model/HistogramQueryResult}
     */
    HistogramQueryResult,

    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job,

    /**
     * The JobDerivedInfo model constructor.
     * @property {module:model/JobDerivedInfo}
     */
    JobDerivedInfo,

    /**
     * The JobEvent model constructor.
     * @property {module:model/JobEvent}
     */
    JobEvent,

    /**
     * The JobQuery model constructor.
     * @property {module:model/JobQuery}
     */
    JobQuery,

    /**
     * The JobResult model constructor.
     * @property {module:model/JobResult}
     */
    JobResult,

    /**
     * The LatLng model constructor.
     * @property {module:model/LatLng}
     */
    LatLng,

    /**
     * The ListCompaniesResponse model constructor.
     * @property {module:model/ListCompaniesResponse}
     */
    ListCompaniesResponse,

    /**
     * The ListJobsResponse model constructor.
     * @property {module:model/ListJobsResponse}
     */
    ListJobsResponse,

    /**
     * The ListTenantsResponse model constructor.
     * @property {module:model/ListTenantsResponse}
     */
    ListTenantsResponse,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The LocationFilter model constructor.
     * @property {module:model/LocationFilter}
     */
    LocationFilter,

    /**
     * The MatchingJob model constructor.
     * @property {module:model/MatchingJob}
     */
    MatchingJob,

    /**
     * The MendelDebugInput model constructor.
     * @property {module:model/MendelDebugInput}
     */
    MendelDebugInput,

    /**
     * The Money model constructor.
     * @property {module:model/Money}
     */
    Money,

    /**
     * The NamespacedDebugInput model constructor.
     * @property {module:model/NamespacedDebugInput}
     */
    NamespacedDebugInput,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The PostalAddress model constructor.
     * @property {module:model/PostalAddress}
     */
    PostalAddress,

    /**
     * The ProcessingOptions model constructor.
     * @property {module:model/ProcessingOptions}
     */
    ProcessingOptions,

    /**
     * The RequestMetadata model constructor.
     * @property {module:model/RequestMetadata}
     */
    RequestMetadata,

    /**
     * The ResponseMetadata model constructor.
     * @property {module:model/ResponseMetadata}
     */
    ResponseMetadata,

    /**
     * The SearchJobsRequest model constructor.
     * @property {module:model/SearchJobsRequest}
     */
    SearchJobsRequest,

    /**
     * The SearchJobsResponse model constructor.
     * @property {module:model/SearchJobsResponse}
     */
    SearchJobsResponse,

    /**
     * The SpellingCorrection model constructor.
     * @property {module:model/SpellingCorrection}
     */
    SpellingCorrection,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The Tenant model constructor.
     * @property {module:model/Tenant}
     */
    Tenant,

    /**
     * The TimeOfDay model constructor.
     * @property {module:model/TimeOfDay}
     */
    TimeOfDay,

    /**
     * The TimestampRange model constructor.
     * @property {module:model/TimestampRange}
     */
    TimestampRange,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
