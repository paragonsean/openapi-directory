# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lat_lng import LatLng
from openapi_server.models.postal_address import PostalAddress
from openapi_server import util


class Location(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lat_lng: LatLng=None, location_type: str=None, postal_address: PostalAddress=None, radius_miles: float=None):
        """Location - a model defined in OpenAPI

        :param lat_lng: The lat_lng of this Location.
        :param location_type: The location_type of this Location.
        :param postal_address: The postal_address of this Location.
        :param radius_miles: The radius_miles of this Location.
        """
        self.openapi_types = {
            'lat_lng': LatLng,
            'location_type': str,
            'postal_address': PostalAddress,
            'radius_miles': float
        }

        self.attribute_map = {
            'lat_lng': 'latLng',
            'location_type': 'locationType',
            'postal_address': 'postalAddress',
            'radius_miles': 'radiusMiles'
        }

        self._lat_lng = lat_lng
        self._location_type = location_type
        self._postal_address = postal_address
        self._radius_miles = radius_miles

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Location':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Location of this Location.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lat_lng(self):
        """Gets the lat_lng of this Location.


        :return: The lat_lng of this Location.
        :rtype: LatLng
        """
        return self._lat_lng

    @lat_lng.setter
    def lat_lng(self, lat_lng):
        """Sets the lat_lng of this Location.


        :param lat_lng: The lat_lng of this Location.
        :type lat_lng: LatLng
        """

        self._lat_lng = lat_lng

    @property
    def location_type(self):
        """Gets the location_type of this Location.

        The type of a location, which corresponds to the address lines field of google.type.PostalAddress. For example, \"Downtown, Atlanta, GA, USA\" has a type of LocationType.NEIGHBORHOOD, and \"Kansas City, KS, USA\" has a type of LocationType.LOCALITY.

        :return: The location_type of this Location.
        :rtype: str
        """
        return self._location_type

    @location_type.setter
    def location_type(self, location_type):
        """Sets the location_type of this Location.

        The type of a location, which corresponds to the address lines field of google.type.PostalAddress. For example, \"Downtown, Atlanta, GA, USA\" has a type of LocationType.NEIGHBORHOOD, and \"Kansas City, KS, USA\" has a type of LocationType.LOCALITY.

        :param location_type: The location_type of this Location.
        :type location_type: str
        """
        allowed_values = ["LOCATION_TYPE_UNSPECIFIED", "COUNTRY", "ADMINISTRATIVE_AREA", "SUB_ADMINISTRATIVE_AREA", "LOCALITY", "POSTAL_CODE", "SUB_LOCALITY", "SUB_LOCALITY_1", "SUB_LOCALITY_2", "NEIGHBORHOOD", "STREET_ADDRESS"]  # noqa: E501
        if location_type not in allowed_values:
            raise ValueError(
                "Invalid value for `location_type` ({0}), must be one of {1}"
                .format(location_type, allowed_values)
            )

        self._location_type = location_type

    @property
    def postal_address(self):
        """Gets the postal_address of this Location.


        :return: The postal_address of this Location.
        :rtype: PostalAddress
        """
        return self._postal_address

    @postal_address.setter
    def postal_address(self, postal_address):
        """Sets the postal_address of this Location.


        :param postal_address: The postal_address of this Location.
        :type postal_address: PostalAddress
        """

        self._postal_address = postal_address

    @property
    def radius_miles(self):
        """Gets the radius_miles of this Location.

        Radius in miles of the job location. This value is derived from the location bounding box in which a circle with the specified radius centered from google.type.LatLng covers the area associated with the job location. For example, currently, \"Mountain View, CA, USA\" has a radius of 6.17 miles.

        :return: The radius_miles of this Location.
        :rtype: float
        """
        return self._radius_miles

    @radius_miles.setter
    def radius_miles(self, radius_miles):
        """Sets the radius_miles of this Location.

        Radius in miles of the job location. This value is derived from the location bounding box in which a circle with the specified radius centered from google.type.LatLng covers the area associated with the job location. For example, currently, \"Mountain View, CA, USA\" has a radius of 6.17 miles.

        :param radius_miles: The radius_miles of this Location.
        :type radius_miles: float
        """

        self._radius_miles = radius_miles
