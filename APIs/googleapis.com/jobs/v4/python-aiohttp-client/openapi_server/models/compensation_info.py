# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compensation_entry import CompensationEntry
from openapi_server.models.compensation_range import CompensationRange
from openapi_server import util


class CompensationInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annualized_base_compensation_range: CompensationRange=None, annualized_total_compensation_range: CompensationRange=None, entries: List[CompensationEntry]=None):
        """CompensationInfo - a model defined in OpenAPI

        :param annualized_base_compensation_range: The annualized_base_compensation_range of this CompensationInfo.
        :param annualized_total_compensation_range: The annualized_total_compensation_range of this CompensationInfo.
        :param entries: The entries of this CompensationInfo.
        """
        self.openapi_types = {
            'annualized_base_compensation_range': CompensationRange,
            'annualized_total_compensation_range': CompensationRange,
            'entries': List[CompensationEntry]
        }

        self.attribute_map = {
            'annualized_base_compensation_range': 'annualizedBaseCompensationRange',
            'annualized_total_compensation_range': 'annualizedTotalCompensationRange',
            'entries': 'entries'
        }

        self._annualized_base_compensation_range = annualized_base_compensation_range
        self._annualized_total_compensation_range = annualized_total_compensation_range
        self._entries = entries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompensationInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompensationInfo of this CompensationInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annualized_base_compensation_range(self):
        """Gets the annualized_base_compensation_range of this CompensationInfo.


        :return: The annualized_base_compensation_range of this CompensationInfo.
        :rtype: CompensationRange
        """
        return self._annualized_base_compensation_range

    @annualized_base_compensation_range.setter
    def annualized_base_compensation_range(self, annualized_base_compensation_range):
        """Sets the annualized_base_compensation_range of this CompensationInfo.


        :param annualized_base_compensation_range: The annualized_base_compensation_range of this CompensationInfo.
        :type annualized_base_compensation_range: CompensationRange
        """

        self._annualized_base_compensation_range = annualized_base_compensation_range

    @property
    def annualized_total_compensation_range(self):
        """Gets the annualized_total_compensation_range of this CompensationInfo.


        :return: The annualized_total_compensation_range of this CompensationInfo.
        :rtype: CompensationRange
        """
        return self._annualized_total_compensation_range

    @annualized_total_compensation_range.setter
    def annualized_total_compensation_range(self, annualized_total_compensation_range):
        """Sets the annualized_total_compensation_range of this CompensationInfo.


        :param annualized_total_compensation_range: The annualized_total_compensation_range of this CompensationInfo.
        :type annualized_total_compensation_range: CompensationRange
        """

        self._annualized_total_compensation_range = annualized_total_compensation_range

    @property
    def entries(self):
        """Gets the entries of this CompensationInfo.

        Job compensation information. At most one entry can be of type CompensationInfo.CompensationType.BASE, which is referred as **base compensation entry** for the job.

        :return: The entries of this CompensationInfo.
        :rtype: List[CompensationEntry]
        """
        return self._entries

    @entries.setter
    def entries(self, entries):
        """Sets the entries of this CompensationInfo.

        Job compensation information. At most one entry can be of type CompensationInfo.CompensationType.BASE, which is referred as **base compensation entry** for the job.

        :param entries: The entries of this CompensationInfo.
        :type entries: List[CompensationEntry]
        """

        self._entries = entries
