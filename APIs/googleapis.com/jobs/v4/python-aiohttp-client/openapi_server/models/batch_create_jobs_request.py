# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job import Job
from openapi_server import util


class BatchCreateJobsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, jobs: List[Job]=None):
        """BatchCreateJobsRequest - a model defined in OpenAPI

        :param jobs: The jobs of this BatchCreateJobsRequest.
        """
        self.openapi_types = {
            'jobs': List[Job]
        }

        self.attribute_map = {
            'jobs': 'jobs'
        }

        self._jobs = jobs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchCreateJobsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchCreateJobsRequest of this BatchCreateJobsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jobs(self):
        """Gets the jobs of this BatchCreateJobsRequest.

        Required. The jobs to be created. A maximum of 200 jobs can be created in a batch.

        :return: The jobs of this BatchCreateJobsRequest.
        :rtype: List[Job]
        """
        return self._jobs

    @jobs.setter
    def jobs(self, jobs):
        """Sets the jobs of this BatchCreateJobsRequest.

        Required. The jobs to be created. A maximum of 200 jobs can be created in a batch.

        :param jobs: The jobs of this BatchCreateJobsRequest.
        :type jobs: List[Job]
        """

        self._jobs = jobs
