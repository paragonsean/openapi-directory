# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Tenant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_id: str=None, name: str=None):
        """Tenant - a model defined in OpenAPI

        :param external_id: The external_id of this Tenant.
        :param name: The name of this Tenant.
        """
        self.openapi_types = {
            'external_id': str,
            'name': str
        }

        self.attribute_map = {
            'external_id': 'externalId',
            'name': 'name'
        }

        self._external_id = external_id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Tenant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tenant of this Tenant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_id(self):
        """Gets the external_id of this Tenant.

        Required. Client side tenant identifier, used to uniquely identify the tenant. The maximum number of allowed characters is 255.

        :return: The external_id of this Tenant.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this Tenant.

        Required. Client side tenant identifier, used to uniquely identify the tenant. The maximum number of allowed characters is 255.

        :param external_id: The external_id of this Tenant.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def name(self):
        """Gets the name of this Tenant.

        Required during tenant update. The resource name for a tenant. This is generated by the service when a tenant is created. The format is \"projects/{project_id}/tenants/{tenant_id}\", for example, \"projects/foo/tenants/bar\".

        :return: The name of this Tenant.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Tenant.

        Required during tenant update. The resource name for a tenant. This is generated by the service when a tenant is created. The format is \"projects/{project_id}/tenants/{tenant_id}\", for example, \"projects/foo/tenants/bar\".

        :param name: The name of this Tenant.
        :type name: str
        """

        self._name = name
