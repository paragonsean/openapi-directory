/*
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BatchDeleteJobsRequest;
import org.openapitools.client.model.ClientEvent;
import org.openapitools.client.model.Company;
import org.openapitools.client.model.CompleteQueryResponse;
import org.openapitools.client.model.CreateClientEventRequest;
import org.openapitools.client.model.CreateCompanyRequest;
import org.openapitools.client.model.CreateJobRequest;
import org.openapitools.client.model.Job;
import org.openapitools.client.model.ListCompaniesResponse;
import org.openapitools.client.model.ListJobsResponse;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.SearchJobsRequest;
import org.openapitools.client.model.SearchJobsResponse;
import org.openapitools.client.model.UpdateJobRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Report events issued when end user interacts with customer&#39;s application that uses Cloud Talent Solution. You may inspect the created events in [self service tools](https://console.cloud.google.com/talent-solution/overview). [Learn more](https://cloud.google.com/talent-solution/docs/management-tools) about self service tools.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsProjectsClientEventsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        CreateClientEventRequest createClientEventRequest = null;
        ClientEvent response = api.jobsProjectsClientEventsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, createClientEventRequest);
        // TODO: test validations
    }

    /**
     * Creates a new company entity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsProjectsCompaniesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        CreateCompanyRequest createCompanyRequest = null;
        Company response = api.jobsProjectsCompaniesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, createCompanyRequest);
        // TODO: test validations
    }

    /**
     * Lists all companies associated with the service account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsProjectsCompaniesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        Boolean requireOpenJobs = null;
        ListCompaniesResponse response = api.jobsProjectsCompaniesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, requireOpenJobs);
        // TODO: test validations
    }

    /**
     * Completes the specified prefix with keyword suggestions. Intended for use by a job search auto-complete search box.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsProjectsCompleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String companyName = null;
        String languageCode = null;
        List<String> languageCodes = null;
        Integer pageSize = null;
        String query = null;
        String scope = null;
        String type = null;
        CompleteQueryResponse response = api.jobsProjectsComplete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, companyName, languageCode, languageCodes, pageSize, query, scope, type);
        // TODO: test validations
    }

    /**
     * Deletes a list of Jobs by filter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsProjectsJobsBatchDeleteTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        BatchDeleteJobsRequest batchDeleteJobsRequest = null;
        Object response = api.jobsProjectsJobsBatchDelete(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, batchDeleteJobsRequest);
        // TODO: test validations
    }

    /**
     * Creates a new job. Typically, the job becomes searchable within 10 seconds, but it may take up to 5 minutes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsProjectsJobsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        CreateJobRequest createJobRequest = null;
        Job response = api.jobsProjectsJobsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, createJobRequest);
        // TODO: test validations
    }

    /**
     * Deletes the specified job. Typically, the job becomes unsearchable within 10 seconds, but it may take up to 5 minutes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsProjectsJobsDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.jobsProjectsJobsDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Lists jobs by filter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsProjectsJobsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String jobView = null;
        Integer pageSize = null;
        String pageToken = null;
        ListJobsResponse response = api.jobsProjectsJobsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, jobView, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates specified job. Typically, updated contents become visible in search results within 10 seconds, but it may take up to 5 minutes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsProjectsJobsPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        UpdateJobRequest updateJobRequest = null;
        Job response = api.jobsProjectsJobsPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateJobRequest);
        // TODO: test validations
    }

    /**
     * Searches for jobs using the provided SearchJobsRequest. This call constrains the visibility of jobs present in the database, and only returns jobs that the caller has permission to search against.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsProjectsJobsSearchTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SearchJobsRequest searchJobsRequest = null;
        SearchJobsResponse response = api.jobsProjectsJobsSearch(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, searchJobsRequest);
        // TODO: test validations
    }

    /**
     * Searches for jobs using the provided SearchJobsRequest. This API call is intended for the use case of targeting passive job seekers (for example, job seekers who have signed up to receive email alerts about potential job opportunities), and has different algorithmic adjustments that are targeted to passive job seekers. This call constrains the visibility of jobs present in the database, and only returns jobs the caller has permission to search against.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsProjectsJobsSearchForAlertTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SearchJobsRequest searchJobsRequest = null;
        SearchJobsResponse response = api.jobsProjectsJobsSearchForAlert(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, searchJobsRequest);
        // TODO: test validations
    }

    /**
     * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsProjectsOperationsGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Operation response = api.jobsProjectsOperationsGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

}
