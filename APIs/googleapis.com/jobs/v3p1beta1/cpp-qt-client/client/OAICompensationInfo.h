/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICompensationInfo.h
 *
 * Job compensation details.
 */

#ifndef OAICompensationInfo_H
#define OAICompensationInfo_H

#include <QJsonObject>

#include "OAICompensationEntry.h"
#include "OAICompensationRange.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICompensationRange;
class OAICompensationEntry;

class OAICompensationInfo : public OAIObject {
public:
    OAICompensationInfo();
    OAICompensationInfo(QString json);
    ~OAICompensationInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICompensationRange getAnnualizedBaseCompensationRange() const;
    void setAnnualizedBaseCompensationRange(const OAICompensationRange &annualized_base_compensation_range);
    bool is_annualized_base_compensation_range_Set() const;
    bool is_annualized_base_compensation_range_Valid() const;

    OAICompensationRange getAnnualizedTotalCompensationRange() const;
    void setAnnualizedTotalCompensationRange(const OAICompensationRange &annualized_total_compensation_range);
    bool is_annualized_total_compensation_range_Set() const;
    bool is_annualized_total_compensation_range_Valid() const;

    QList<OAICompensationEntry> getEntries() const;
    void setEntries(const QList<OAICompensationEntry> &entries);
    bool is_entries_Set() const;
    bool is_entries_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICompensationRange m_annualized_base_compensation_range;
    bool m_annualized_base_compensation_range_isSet;
    bool m_annualized_base_compensation_range_isValid;

    OAICompensationRange m_annualized_total_compensation_range;
    bool m_annualized_total_compensation_range_isSet;
    bool m_annualized_total_compensation_range_isValid;

    QList<OAICompensationEntry> m_entries;
    bool m_entries_isSet;
    bool m_entries_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICompensationInfo)

#endif // OAICompensationInfo_H
