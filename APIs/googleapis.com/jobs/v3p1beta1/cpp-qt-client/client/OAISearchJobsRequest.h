/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchJobsRequest.h
 *
 * Input only. The Request body of the &#x60;SearchJobs&#x60; call.
 */

#ifndef OAISearchJobsRequest_H
#define OAISearchJobsRequest_H

#include <QJsonObject>

#include "OAICustomRankingInfo.h"
#include "OAIHistogramFacets.h"
#include "OAIHistogramQuery.h"
#include "OAIJobQuery.h"
#include "OAIRequestMetadata.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomRankingInfo;
class OAIHistogramFacets;
class OAIHistogramQuery;
class OAIJobQuery;
class OAIRequestMetadata;

class OAISearchJobsRequest : public OAIObject {
public:
    OAISearchJobsRequest();
    OAISearchJobsRequest(QString json);
    ~OAISearchJobsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICustomRankingInfo getCustomRankingInfo() const;
    void setCustomRankingInfo(const OAICustomRankingInfo &custom_ranking_info);
    bool is_custom_ranking_info_Set() const;
    bool is_custom_ranking_info_Valid() const;

    bool isDisableKeywordMatch() const;
    void setDisableKeywordMatch(const bool &disable_keyword_match);
    bool is_disable_keyword_match_Set() const;
    bool is_disable_keyword_match_Valid() const;

    QString getDiversificationLevel() const;
    void setDiversificationLevel(const QString &diversification_level);
    bool is_diversification_level_Set() const;
    bool is_diversification_level_Valid() const;

    bool isEnableBroadening() const;
    void setEnableBroadening(const bool &enable_broadening);
    bool is_enable_broadening_Set() const;
    bool is_enable_broadening_Valid() const;

    OAIHistogramFacets getHistogramFacets() const;
    void setHistogramFacets(const OAIHistogramFacets &histogram_facets);
    bool is_histogram_facets_Set() const;
    bool is_histogram_facets_Valid() const;

    QList<OAIHistogramQuery> getHistogramQueries() const;
    void setHistogramQueries(const QList<OAIHistogramQuery> &histogram_queries);
    bool is_histogram_queries_Set() const;
    bool is_histogram_queries_Valid() const;

    OAIJobQuery getJobQuery() const;
    void setJobQuery(const OAIJobQuery &job_query);
    bool is_job_query_Set() const;
    bool is_job_query_Valid() const;

    QString getJobView() const;
    void setJobView(const QString &job_view);
    bool is_job_view_Set() const;
    bool is_job_view_Valid() const;

    qint32 getOffset() const;
    void setOffset(const qint32 &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    QString getOrderBy() const;
    void setOrderBy(const QString &order_by);
    bool is_order_by_Set() const;
    bool is_order_by_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getPageToken() const;
    void setPageToken(const QString &page_token);
    bool is_page_token_Set() const;
    bool is_page_token_Valid() const;

    OAIRequestMetadata getRequestMetadata() const;
    void setRequestMetadata(const OAIRequestMetadata &request_metadata);
    bool is_request_metadata_Set() const;
    bool is_request_metadata_Valid() const;

    Q_DECL_DEPRECATED bool isRequirePreciseResultSize() const;
    Q_DECL_DEPRECATED void setRequirePreciseResultSize(const bool &require_precise_result_size);
    Q_DECL_DEPRECATED bool is_require_precise_result_size_Set() const;
    Q_DECL_DEPRECATED bool is_require_precise_result_size_Valid() const;

    QString getSearchMode() const;
    void setSearchMode(const QString &search_mode);
    bool is_search_mode_Set() const;
    bool is_search_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICustomRankingInfo m_custom_ranking_info;
    bool m_custom_ranking_info_isSet;
    bool m_custom_ranking_info_isValid;

    bool m_disable_keyword_match;
    bool m_disable_keyword_match_isSet;
    bool m_disable_keyword_match_isValid;

    QString m_diversification_level;
    bool m_diversification_level_isSet;
    bool m_diversification_level_isValid;

    bool m_enable_broadening;
    bool m_enable_broadening_isSet;
    bool m_enable_broadening_isValid;

    OAIHistogramFacets m_histogram_facets;
    bool m_histogram_facets_isSet;
    bool m_histogram_facets_isValid;

    QList<OAIHistogramQuery> m_histogram_queries;
    bool m_histogram_queries_isSet;
    bool m_histogram_queries_isValid;

    OAIJobQuery m_job_query;
    bool m_job_query_isSet;
    bool m_job_query_isValid;

    QString m_job_view;
    bool m_job_view_isSet;
    bool m_job_view_isValid;

    qint32 m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    QString m_order_by;
    bool m_order_by_isSet;
    bool m_order_by_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_page_token;
    bool m_page_token_isSet;
    bool m_page_token_isValid;

    OAIRequestMetadata m_request_metadata;
    bool m_request_metadata_isSet;
    bool m_request_metadata_isValid;

    bool m_require_precise_result_size;
    bool m_require_precise_result_size_isSet;
    bool m_require_precise_result_size_isValid;

    QString m_search_mode;
    bool m_search_mode_isSet;
    bool m_search_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchJobsRequest)

#endif // OAISearchJobsRequest_H
