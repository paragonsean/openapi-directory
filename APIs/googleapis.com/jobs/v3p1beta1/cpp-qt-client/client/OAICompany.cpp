/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompany.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompany::OAICompany(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompany::OAICompany() {
    this->initializeModel();
}

OAICompany::~OAICompany() {}

void OAICompany::initializeModel() {

    m_career_site_uri_isSet = false;
    m_career_site_uri_isValid = false;

    m_derived_info_isSet = false;
    m_derived_info_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_eeo_text_isSet = false;
    m_eeo_text_isValid = false;

    m_external_id_isSet = false;
    m_external_id_isValid = false;

    m_headquarters_address_isSet = false;
    m_headquarters_address_isValid = false;

    m_hiring_agency_isSet = false;
    m_hiring_agency_isValid = false;

    m_image_uri_isSet = false;
    m_image_uri_isValid = false;

    m_keyword_searchable_job_custom_attributes_isSet = false;
    m_keyword_searchable_job_custom_attributes_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;

    m_suspended_isSet = false;
    m_suspended_isValid = false;

    m_website_uri_isSet = false;
    m_website_uri_isValid = false;
}

void OAICompany::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompany::fromJsonObject(QJsonObject json) {

    m_career_site_uri_isValid = ::OpenAPI::fromJsonValue(m_career_site_uri, json[QString("careerSiteUri")]);
    m_career_site_uri_isSet = !json[QString("careerSiteUri")].isNull() && m_career_site_uri_isValid;

    m_derived_info_isValid = ::OpenAPI::fromJsonValue(m_derived_info, json[QString("derivedInfo")]);
    m_derived_info_isSet = !json[QString("derivedInfo")].isNull() && m_derived_info_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_eeo_text_isValid = ::OpenAPI::fromJsonValue(m_eeo_text, json[QString("eeoText")]);
    m_eeo_text_isSet = !json[QString("eeoText")].isNull() && m_eeo_text_isValid;

    m_external_id_isValid = ::OpenAPI::fromJsonValue(m_external_id, json[QString("externalId")]);
    m_external_id_isSet = !json[QString("externalId")].isNull() && m_external_id_isValid;

    m_headquarters_address_isValid = ::OpenAPI::fromJsonValue(m_headquarters_address, json[QString("headquartersAddress")]);
    m_headquarters_address_isSet = !json[QString("headquartersAddress")].isNull() && m_headquarters_address_isValid;

    m_hiring_agency_isValid = ::OpenAPI::fromJsonValue(m_hiring_agency, json[QString("hiringAgency")]);
    m_hiring_agency_isSet = !json[QString("hiringAgency")].isNull() && m_hiring_agency_isValid;

    m_image_uri_isValid = ::OpenAPI::fromJsonValue(m_image_uri, json[QString("imageUri")]);
    m_image_uri_isSet = !json[QString("imageUri")].isNull() && m_image_uri_isValid;

    m_keyword_searchable_job_custom_attributes_isValid = ::OpenAPI::fromJsonValue(m_keyword_searchable_job_custom_attributes, json[QString("keywordSearchableJobCustomAttributes")]);
    m_keyword_searchable_job_custom_attributes_isSet = !json[QString("keywordSearchableJobCustomAttributes")].isNull() && m_keyword_searchable_job_custom_attributes_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;

    m_suspended_isValid = ::OpenAPI::fromJsonValue(m_suspended, json[QString("suspended")]);
    m_suspended_isSet = !json[QString("suspended")].isNull() && m_suspended_isValid;

    m_website_uri_isValid = ::OpenAPI::fromJsonValue(m_website_uri, json[QString("websiteUri")]);
    m_website_uri_isSet = !json[QString("websiteUri")].isNull() && m_website_uri_isValid;
}

QString OAICompany::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompany::asJsonObject() const {
    QJsonObject obj;
    if (m_career_site_uri_isSet) {
        obj.insert(QString("careerSiteUri"), ::OpenAPI::toJsonValue(m_career_site_uri));
    }
    if (m_derived_info.isSet()) {
        obj.insert(QString("derivedInfo"), ::OpenAPI::toJsonValue(m_derived_info));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_eeo_text_isSet) {
        obj.insert(QString("eeoText"), ::OpenAPI::toJsonValue(m_eeo_text));
    }
    if (m_external_id_isSet) {
        obj.insert(QString("externalId"), ::OpenAPI::toJsonValue(m_external_id));
    }
    if (m_headquarters_address_isSet) {
        obj.insert(QString("headquartersAddress"), ::OpenAPI::toJsonValue(m_headquarters_address));
    }
    if (m_hiring_agency_isSet) {
        obj.insert(QString("hiringAgency"), ::OpenAPI::toJsonValue(m_hiring_agency));
    }
    if (m_image_uri_isSet) {
        obj.insert(QString("imageUri"), ::OpenAPI::toJsonValue(m_image_uri));
    }
    if (m_keyword_searchable_job_custom_attributes.size() > 0) {
        obj.insert(QString("keywordSearchableJobCustomAttributes"), ::OpenAPI::toJsonValue(m_keyword_searchable_job_custom_attributes));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    if (m_suspended_isSet) {
        obj.insert(QString("suspended"), ::OpenAPI::toJsonValue(m_suspended));
    }
    if (m_website_uri_isSet) {
        obj.insert(QString("websiteUri"), ::OpenAPI::toJsonValue(m_website_uri));
    }
    return obj;
}

QString OAICompany::getCareerSiteUri() const {
    return m_career_site_uri;
}
void OAICompany::setCareerSiteUri(const QString &career_site_uri) {
    m_career_site_uri = career_site_uri;
    m_career_site_uri_isSet = true;
}

bool OAICompany::is_career_site_uri_Set() const{
    return m_career_site_uri_isSet;
}

bool OAICompany::is_career_site_uri_Valid() const{
    return m_career_site_uri_isValid;
}

OAICompanyDerivedInfo OAICompany::getDerivedInfo() const {
    return m_derived_info;
}
void OAICompany::setDerivedInfo(const OAICompanyDerivedInfo &derived_info) {
    m_derived_info = derived_info;
    m_derived_info_isSet = true;
}

bool OAICompany::is_derived_info_Set() const{
    return m_derived_info_isSet;
}

bool OAICompany::is_derived_info_Valid() const{
    return m_derived_info_isValid;
}

QString OAICompany::getDisplayName() const {
    return m_display_name;
}
void OAICompany::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAICompany::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAICompany::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAICompany::getEeoText() const {
    return m_eeo_text;
}
void OAICompany::setEeoText(const QString &eeo_text) {
    m_eeo_text = eeo_text;
    m_eeo_text_isSet = true;
}

bool OAICompany::is_eeo_text_Set() const{
    return m_eeo_text_isSet;
}

bool OAICompany::is_eeo_text_Valid() const{
    return m_eeo_text_isValid;
}

QString OAICompany::getExternalId() const {
    return m_external_id;
}
void OAICompany::setExternalId(const QString &external_id) {
    m_external_id = external_id;
    m_external_id_isSet = true;
}

bool OAICompany::is_external_id_Set() const{
    return m_external_id_isSet;
}

bool OAICompany::is_external_id_Valid() const{
    return m_external_id_isValid;
}

QString OAICompany::getHeadquartersAddress() const {
    return m_headquarters_address;
}
void OAICompany::setHeadquartersAddress(const QString &headquarters_address) {
    m_headquarters_address = headquarters_address;
    m_headquarters_address_isSet = true;
}

bool OAICompany::is_headquarters_address_Set() const{
    return m_headquarters_address_isSet;
}

bool OAICompany::is_headquarters_address_Valid() const{
    return m_headquarters_address_isValid;
}

bool OAICompany::isHiringAgency() const {
    return m_hiring_agency;
}
void OAICompany::setHiringAgency(const bool &hiring_agency) {
    m_hiring_agency = hiring_agency;
    m_hiring_agency_isSet = true;
}

bool OAICompany::is_hiring_agency_Set() const{
    return m_hiring_agency_isSet;
}

bool OAICompany::is_hiring_agency_Valid() const{
    return m_hiring_agency_isValid;
}

QString OAICompany::getImageUri() const {
    return m_image_uri;
}
void OAICompany::setImageUri(const QString &image_uri) {
    m_image_uri = image_uri;
    m_image_uri_isSet = true;
}

bool OAICompany::is_image_uri_Set() const{
    return m_image_uri_isSet;
}

bool OAICompany::is_image_uri_Valid() const{
    return m_image_uri_isValid;
}

QList<QString> OAICompany::getKeywordSearchableJobCustomAttributes() const {
    return m_keyword_searchable_job_custom_attributes;
}
void OAICompany::setKeywordSearchableJobCustomAttributes(const QList<QString> &keyword_searchable_job_custom_attributes) {
    m_keyword_searchable_job_custom_attributes = keyword_searchable_job_custom_attributes;
    m_keyword_searchable_job_custom_attributes_isSet = true;
}

bool OAICompany::is_keyword_searchable_job_custom_attributes_Set() const{
    return m_keyword_searchable_job_custom_attributes_isSet;
}

bool OAICompany::is_keyword_searchable_job_custom_attributes_Valid() const{
    return m_keyword_searchable_job_custom_attributes_isValid;
}

QString OAICompany::getName() const {
    return m_name;
}
void OAICompany::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICompany::is_name_Set() const{
    return m_name_isSet;
}

bool OAICompany::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICompany::getSize() const {
    return m_size;
}
void OAICompany::setSize(const QString &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAICompany::is_size_Set() const{
    return m_size_isSet;
}

bool OAICompany::is_size_Valid() const{
    return m_size_isValid;
}

bool OAICompany::isSuspended() const {
    return m_suspended;
}
void OAICompany::setSuspended(const bool &suspended) {
    m_suspended = suspended;
    m_suspended_isSet = true;
}

bool OAICompany::is_suspended_Set() const{
    return m_suspended_isSet;
}

bool OAICompany::is_suspended_Valid() const{
    return m_suspended_isValid;
}

QString OAICompany::getWebsiteUri() const {
    return m_website_uri;
}
void OAICompany::setWebsiteUri(const QString &website_uri) {
    m_website_uri = website_uri;
    m_website_uri_isSet = true;
}

bool OAICompany::is_website_uri_Set() const{
    return m_website_uri_isSet;
}

bool OAICompany::is_website_uri_Valid() const{
    return m_website_uri_isValid;
}

bool OAICompany::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_career_site_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_derived_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_eeo_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_headquarters_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hiring_agency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_keyword_searchable_job_custom_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suspended_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompany::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
