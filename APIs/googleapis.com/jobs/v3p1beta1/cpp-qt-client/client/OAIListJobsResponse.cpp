/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListJobsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListJobsResponse::OAIListJobsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListJobsResponse::OAIListJobsResponse() {
    this->initializeModel();
}

OAIListJobsResponse::~OAIListJobsResponse() {}

void OAIListJobsResponse::initializeModel() {

    m_jobs_isSet = false;
    m_jobs_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIListJobsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListJobsResponse::fromJsonObject(QJsonObject json) {

    m_jobs_isValid = ::OpenAPI::fromJsonValue(m_jobs, json[QString("jobs")]);
    m_jobs_isSet = !json[QString("jobs")].isNull() && m_jobs_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIListJobsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListJobsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_jobs.size() > 0) {
        obj.insert(QString("jobs"), ::OpenAPI::toJsonValue(m_jobs));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIJob> OAIListJobsResponse::getJobs() const {
    return m_jobs;
}
void OAIListJobsResponse::setJobs(const QList<OAIJob> &jobs) {
    m_jobs = jobs;
    m_jobs_isSet = true;
}

bool OAIListJobsResponse::is_jobs_Set() const{
    return m_jobs_isSet;
}

bool OAIListJobsResponse::is_jobs_Valid() const{
    return m_jobs_isValid;
}

OAIResponseMetadata OAIListJobsResponse::getMetadata() const {
    return m_metadata;
}
void OAIListJobsResponse::setMetadata(const OAIResponseMetadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIListJobsResponse::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIListJobsResponse::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIListJobsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListJobsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListJobsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListJobsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIListJobsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_jobs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListJobsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
