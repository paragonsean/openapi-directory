# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.company import Company
from openapi_server import util


class UpdateCompanyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company: Company=None, update_mask: str=None):
        """UpdateCompanyRequest - a model defined in OpenAPI

        :param company: The company of this UpdateCompanyRequest.
        :param update_mask: The update_mask of this UpdateCompanyRequest.
        """
        self.openapi_types = {
            'company': Company,
            'update_mask': str
        }

        self.attribute_map = {
            'company': 'company',
            'update_mask': 'updateMask'
        }

        self._company = company
        self._update_mask = update_mask

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCompanyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateCompanyRequest of this UpdateCompanyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company(self):
        """Gets the company of this UpdateCompanyRequest.


        :return: The company of this UpdateCompanyRequest.
        :rtype: Company
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this UpdateCompanyRequest.


        :param company: The company of this UpdateCompanyRequest.
        :type company: Company
        """

        self._company = company

    @property
    def update_mask(self):
        """Gets the update_mask of this UpdateCompanyRequest.

        Optional but strongly recommended for the best service experience. If update_mask is provided, only the specified fields in company are updated. Otherwise all the fields are updated. A field mask to specify the company fields to be updated. Only top level fields of Company are supported.

        :return: The update_mask of this UpdateCompanyRequest.
        :rtype: str
        """
        return self._update_mask

    @update_mask.setter
    def update_mask(self, update_mask):
        """Sets the update_mask of this UpdateCompanyRequest.

        Optional but strongly recommended for the best service experience. If update_mask is provided, only the specified fields in company are updated. Otherwise all the fields are updated. A field mask to specify the company fields to be updated. Only top level fields of Company are supported.

        :param update_mask: The update_mask of this UpdateCompanyRequest.
        :type update_mask: str
        """

        self._update_mask = update_mask
