# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bucket_range import BucketRange
from openapi_server import util


class BucketizedCount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, range: BucketRange=None):
        """BucketizedCount - a model defined in OpenAPI

        :param count: The count of this BucketizedCount.
        :param range: The range of this BucketizedCount.
        """
        self.openapi_types = {
            'count': int,
            'range': BucketRange
        }

        self.attribute_map = {
            'count': 'count',
            'range': 'range'
        }

        self._count = count
        self._range = range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BucketizedCount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BucketizedCount of this BucketizedCount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this BucketizedCount.

        Number of jobs whose numeric field value fall into `range`.

        :return: The count of this BucketizedCount.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this BucketizedCount.

        Number of jobs whose numeric field value fall into `range`.

        :param count: The count of this BucketizedCount.
        :type count: int
        """

        self._count = count

    @property
    def range(self):
        """Gets the range of this BucketizedCount.


        :return: The range of this BucketizedCount.
        :rtype: BucketRange
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this BucketizedCount.


        :param range: The range of this BucketizedCount.
        :type range: BucketRange
        """

        self._range = range
