# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.money import Money
from openapi_server import util


class CompensationRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_compensation: Money=None, min_compensation: Money=None):
        """CompensationRange - a model defined in OpenAPI

        :param max_compensation: The max_compensation of this CompensationRange.
        :param min_compensation: The min_compensation of this CompensationRange.
        """
        self.openapi_types = {
            'max_compensation': Money,
            'min_compensation': Money
        }

        self.attribute_map = {
            'max_compensation': 'maxCompensation',
            'min_compensation': 'minCompensation'
        }

        self._max_compensation = max_compensation
        self._min_compensation = min_compensation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompensationRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompensationRange of this CompensationRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_compensation(self):
        """Gets the max_compensation of this CompensationRange.


        :return: The max_compensation of this CompensationRange.
        :rtype: Money
        """
        return self._max_compensation

    @max_compensation.setter
    def max_compensation(self, max_compensation):
        """Sets the max_compensation of this CompensationRange.


        :param max_compensation: The max_compensation of this CompensationRange.
        :type max_compensation: Money
        """

        self._max_compensation = max_compensation

    @property
    def min_compensation(self):
        """Gets the min_compensation of this CompensationRange.


        :return: The min_compensation of this CompensationRange.
        :rtype: Money
        """
        return self._min_compensation

    @min_compensation.setter
    def min_compensation(self, min_compensation):
        """Sets the min_compensation of this CompensationRange.


        :param min_compensation: The min_compensation of this CompensationRange.
        :type min_compensation: Money
        """

        self._min_compensation = min_compensation
