# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.client_event import ClientEvent
from openapi_server import util


class CreateClientEventRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_event: ClientEvent=None):
        """CreateClientEventRequest - a model defined in OpenAPI

        :param client_event: The client_event of this CreateClientEventRequest.
        """
        self.openapi_types = {
            'client_event': ClientEvent
        }

        self.attribute_map = {
            'client_event': 'clientEvent'
        }

        self._client_event = client_event

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateClientEventRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateClientEventRequest of this CreateClientEventRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_event(self):
        """Gets the client_event of this CreateClientEventRequest.


        :return: The client_event of this CreateClientEventRequest.
        :rtype: ClientEvent
        """
        return self._client_event

    @client_event.setter
    def client_event(self, client_event):
        """Sets the client_event of this CreateClientEventRequest.


        :param client_event: The client_event of this CreateClientEventRequest.
        :type client_event: ClientEvent
        """

        self._client_event = client_event
