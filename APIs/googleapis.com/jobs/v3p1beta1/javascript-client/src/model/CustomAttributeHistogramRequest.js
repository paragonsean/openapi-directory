/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NumericBucketingOption from './NumericBucketingOption';

/**
 * The CustomAttributeHistogramRequest model module.
 * @module model/CustomAttributeHistogramRequest
 * @version v3p1beta1
 */
class CustomAttributeHistogramRequest {
    /**
     * Constructs a new <code>CustomAttributeHistogramRequest</code>.
     * Custom attributes histogram request. An error is thrown if neither string_value_histogram or long_value_histogram_bucketing_option has been defined.
     * @alias module:model/CustomAttributeHistogramRequest
     */
    constructor() { 
        
        CustomAttributeHistogramRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomAttributeHistogramRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomAttributeHistogramRequest} obj Optional instance to populate.
     * @return {module:model/CustomAttributeHistogramRequest} The populated <code>CustomAttributeHistogramRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomAttributeHistogramRequest();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('longValueHistogramBucketingOption')) {
                obj['longValueHistogramBucketingOption'] = NumericBucketingOption.constructFromObject(data['longValueHistogramBucketingOption']);
            }
            if (data.hasOwnProperty('stringValueHistogram')) {
                obj['stringValueHistogram'] = ApiClient.convertToType(data['stringValueHistogram'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomAttributeHistogramRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomAttributeHistogramRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // validate the optional field `longValueHistogramBucketingOption`
        if (data['longValueHistogramBucketingOption']) { // data not null
          NumericBucketingOption.validateJSON(data['longValueHistogramBucketingOption']);
        }

        return true;
    }


}



/**
 * Required. Specifies the custom field key to perform a histogram on. If specified without `long_value_histogram_bucketing_option`, histogram on string values of the given `key` is triggered, otherwise histogram is performed on long values.
 * @member {String} key
 */
CustomAttributeHistogramRequest.prototype['key'] = undefined;

/**
 * @member {module:model/NumericBucketingOption} longValueHistogramBucketingOption
 */
CustomAttributeHistogramRequest.prototype['longValueHistogramBucketingOption'] = undefined;

/**
 * Optional. If set to true, the response includes the histogram value for each key as a string.
 * @member {Boolean} stringValueHistogram
 */
CustomAttributeHistogramRequest.prototype['stringValueHistogram'] = undefined;






export default CustomAttributeHistogramRequest;

