/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NumericBucketingResult from './NumericBucketingResult';

/**
 * The CustomAttributeHistogramResult model module.
 * @module model/CustomAttributeHistogramResult
 * @version v3p1beta1
 */
class CustomAttributeHistogramResult {
    /**
     * Constructs a new <code>CustomAttributeHistogramResult</code>.
     * Output only. Custom attribute histogram result.
     * @alias module:model/CustomAttributeHistogramResult
     */
    constructor() { 
        
        CustomAttributeHistogramResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomAttributeHistogramResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomAttributeHistogramResult} obj Optional instance to populate.
     * @return {module:model/CustomAttributeHistogramResult} The populated <code>CustomAttributeHistogramResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomAttributeHistogramResult();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('longValueHistogramResult')) {
                obj['longValueHistogramResult'] = NumericBucketingResult.constructFromObject(data['longValueHistogramResult']);
            }
            if (data.hasOwnProperty('stringValueHistogramResult')) {
                obj['stringValueHistogramResult'] = ApiClient.convertToType(data['stringValueHistogramResult'], {'String': 'Number'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomAttributeHistogramResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomAttributeHistogramResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // validate the optional field `longValueHistogramResult`
        if (data['longValueHistogramResult']) { // data not null
          NumericBucketingResult.validateJSON(data['longValueHistogramResult']);
        }

        return true;
    }


}



/**
 * Stores the key of custom attribute the histogram is performed on.
 * @member {String} key
 */
CustomAttributeHistogramResult.prototype['key'] = undefined;

/**
 * @member {module:model/NumericBucketingResult} longValueHistogramResult
 */
CustomAttributeHistogramResult.prototype['longValueHistogramResult'] = undefined;

/**
 * Stores a map from the values of string custom field associated with `key` to the number of jobs with that value in this histogram result.
 * @member {Object.<String, Number>} stringValueHistogramResult
 */
CustomAttributeHistogramResult.prototype['stringValueHistogramResult'] = undefined;






export default CustomAttributeHistogramResult;

