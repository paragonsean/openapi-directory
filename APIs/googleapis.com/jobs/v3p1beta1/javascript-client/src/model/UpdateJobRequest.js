/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Job from './Job';

/**
 * The UpdateJobRequest model module.
 * @module model/UpdateJobRequest
 * @version v3p1beta1
 */
class UpdateJobRequest {
    /**
     * Constructs a new <code>UpdateJobRequest</code>.
     * Input only. Update job request.
     * @alias module:model/UpdateJobRequest
     */
    constructor() { 
        
        UpdateJobRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateJobRequest} obj Optional instance to populate.
     * @return {module:model/UpdateJobRequest} The populated <code>UpdateJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateJobRequest();

            if (data.hasOwnProperty('job')) {
                obj['job'] = Job.constructFromObject(data['job']);
            }
            if (data.hasOwnProperty('updateMask')) {
                obj['updateMask'] = ApiClient.convertToType(data['updateMask'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateJobRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `job`
        if (data['job']) { // data not null
          Job.validateJSON(data['job']);
        }
        // ensure the json data is a string
        if (data['updateMask'] && !(typeof data['updateMask'] === 'string' || data['updateMask'] instanceof String)) {
            throw new Error("Expected the field `updateMask` to be a primitive type in the JSON string but got " + data['updateMask']);
        }

        return true;
    }


}



/**
 * @member {module:model/Job} job
 */
UpdateJobRequest.prototype['job'] = undefined;

/**
 * Optional but strongly recommended to be provided for the best service experience. If update_mask is provided, only the specified fields in job are updated. Otherwise all the fields are updated. A field mask to restrict the fields that are updated. Only top level fields of Job are supported.
 * @member {String} updateMask
 */
UpdateJobRequest.prototype['updateMask'] = undefined;






export default UpdateJobRequest;

