/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudTalentSolutionApi);
  }
}(this, function(expect, CloudTalentSolutionApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudTalentSolutionApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('jobsProjectsClientEventsCreate', function() {
      it('should call jobsProjectsClientEventsCreate successfully', function(done) {
        //uncomment below and update the code to test jobsProjectsClientEventsCreate
        //instance.jobsProjectsClientEventsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jobsProjectsCompaniesCreate', function() {
      it('should call jobsProjectsCompaniesCreate successfully', function(done) {
        //uncomment below and update the code to test jobsProjectsCompaniesCreate
        //instance.jobsProjectsCompaniesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jobsProjectsCompaniesList', function() {
      it('should call jobsProjectsCompaniesList successfully', function(done) {
        //uncomment below and update the code to test jobsProjectsCompaniesList
        //instance.jobsProjectsCompaniesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jobsProjectsComplete', function() {
      it('should call jobsProjectsComplete successfully', function(done) {
        //uncomment below and update the code to test jobsProjectsComplete
        //instance.jobsProjectsComplete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jobsProjectsJobsBatchDelete', function() {
      it('should call jobsProjectsJobsBatchDelete successfully', function(done) {
        //uncomment below and update the code to test jobsProjectsJobsBatchDelete
        //instance.jobsProjectsJobsBatchDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jobsProjectsJobsCreate', function() {
      it('should call jobsProjectsJobsCreate successfully', function(done) {
        //uncomment below and update the code to test jobsProjectsJobsCreate
        //instance.jobsProjectsJobsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jobsProjectsJobsDelete', function() {
      it('should call jobsProjectsJobsDelete successfully', function(done) {
        //uncomment below and update the code to test jobsProjectsJobsDelete
        //instance.jobsProjectsJobsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jobsProjectsJobsList', function() {
      it('should call jobsProjectsJobsList successfully', function(done) {
        //uncomment below and update the code to test jobsProjectsJobsList
        //instance.jobsProjectsJobsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jobsProjectsJobsPatch', function() {
      it('should call jobsProjectsJobsPatch successfully', function(done) {
        //uncomment below and update the code to test jobsProjectsJobsPatch
        //instance.jobsProjectsJobsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jobsProjectsJobsSearch', function() {
      it('should call jobsProjectsJobsSearch successfully', function(done) {
        //uncomment below and update the code to test jobsProjectsJobsSearch
        //instance.jobsProjectsJobsSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jobsProjectsJobsSearchForAlert', function() {
      it('should call jobsProjectsJobsSearchForAlert successfully', function(done) {
        //uncomment below and update the code to test jobsProjectsJobsSearchForAlert
        //instance.jobsProjectsJobsSearchForAlert(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jobsProjectsOperationsGet', function() {
      it('should call jobsProjectsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test jobsProjectsOperationsGet
        //instance.jobsProjectsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
