# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.location import Location
from openapi_server import util


class CompanyDerivedInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, headquarters_location: Location=None):
        """CompanyDerivedInfo - a model defined in OpenAPI

        :param headquarters_location: The headquarters_location of this CompanyDerivedInfo.
        """
        self.openapi_types = {
            'headquarters_location': Location
        }

        self.attribute_map = {
            'headquarters_location': 'headquartersLocation'
        }

        self._headquarters_location = headquarters_location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyDerivedInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanyDerivedInfo of this CompanyDerivedInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def headquarters_location(self):
        """Gets the headquarters_location of this CompanyDerivedInfo.


        :return: The headquarters_location of this CompanyDerivedInfo.
        :rtype: Location
        """
        return self._headquarters_location

    @headquarters_location.setter
    def headquarters_location(self, headquarters_location):
        """Sets the headquarters_location of this CompanyDerivedInfo.


        :param headquarters_location: The headquarters_location of this CompanyDerivedInfo.
        :type headquarters_location: Location
        """

        self._headquarters_location = headquarters_location
