# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.namespaced_debug_input import NamespacedDebugInput
from openapi_server import util


class MendelDebugInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, namespaced_debug_input: Dict[str, NamespacedDebugInput]=None):
        """MendelDebugInput - a model defined in OpenAPI

        :param namespaced_debug_input: The namespaced_debug_input of this MendelDebugInput.
        """
        self.openapi_types = {
            'namespaced_debug_input': Dict[str, NamespacedDebugInput]
        }

        self.attribute_map = {
            'namespaced_debug_input': 'namespacedDebugInput'
        }

        self._namespaced_debug_input = namespaced_debug_input

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MendelDebugInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MendelDebugInput of this MendelDebugInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def namespaced_debug_input(self):
        """Gets the namespaced_debug_input of this MendelDebugInput.

        When a request spans multiple servers, a MendelDebugInput may travel with the request and take effect in all the servers. This field is a map of namespaces to NamespacedMendelDebugInput protos. In a single server, up to two NamespacedMendelDebugInput protos are applied: 1. NamespacedMendelDebugInput with the global namespace (key == \"\"). 2. NamespacedMendelDebugInput with the server's namespace. When both NamespacedMendelDebugInput protos are present, they are merged. See go/mendel-debug-forcing for more details.

        :return: The namespaced_debug_input of this MendelDebugInput.
        :rtype: Dict[str, NamespacedDebugInput]
        """
        return self._namespaced_debug_input

    @namespaced_debug_input.setter
    def namespaced_debug_input(self, namespaced_debug_input):
        """Sets the namespaced_debug_input of this MendelDebugInput.

        When a request spans multiple servers, a MendelDebugInput may travel with the request and take effect in all the servers. This field is a map of namespaces to NamespacedMendelDebugInput protos. In a single server, up to two NamespacedMendelDebugInput protos are applied: 1. NamespacedMendelDebugInput with the global namespace (key == \"\"). 2. NamespacedMendelDebugInput with the server's namespace. When both NamespacedMendelDebugInput protos are present, they are merged. See go/mendel-debug-forcing for more details.

        :param namespaced_debug_input: The namespaced_debug_input of this MendelDebugInput.
        :type namespaced_debug_input: Dict[str, NamespacedDebugInput]
        """

        self._namespaced_debug_input = namespaced_debug_input
