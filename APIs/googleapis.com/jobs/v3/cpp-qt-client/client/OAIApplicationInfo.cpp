/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationInfo::OAIApplicationInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationInfo::OAIApplicationInfo() {
    this->initializeModel();
}

OAIApplicationInfo::~OAIApplicationInfo() {}

void OAIApplicationInfo::initializeModel() {

    m_emails_isSet = false;
    m_emails_isValid = false;

    m_instruction_isSet = false;
    m_instruction_isValid = false;

    m_uris_isSet = false;
    m_uris_isValid = false;
}

void OAIApplicationInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationInfo::fromJsonObject(QJsonObject json) {

    m_emails_isValid = ::OpenAPI::fromJsonValue(m_emails, json[QString("emails")]);
    m_emails_isSet = !json[QString("emails")].isNull() && m_emails_isValid;

    m_instruction_isValid = ::OpenAPI::fromJsonValue(m_instruction, json[QString("instruction")]);
    m_instruction_isSet = !json[QString("instruction")].isNull() && m_instruction_isValid;

    m_uris_isValid = ::OpenAPI::fromJsonValue(m_uris, json[QString("uris")]);
    m_uris_isSet = !json[QString("uris")].isNull() && m_uris_isValid;
}

QString OAIApplicationInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_emails.size() > 0) {
        obj.insert(QString("emails"), ::OpenAPI::toJsonValue(m_emails));
    }
    if (m_instruction_isSet) {
        obj.insert(QString("instruction"), ::OpenAPI::toJsonValue(m_instruction));
    }
    if (m_uris.size() > 0) {
        obj.insert(QString("uris"), ::OpenAPI::toJsonValue(m_uris));
    }
    return obj;
}

QList<QString> OAIApplicationInfo::getEmails() const {
    return m_emails;
}
void OAIApplicationInfo::setEmails(const QList<QString> &emails) {
    m_emails = emails;
    m_emails_isSet = true;
}

bool OAIApplicationInfo::is_emails_Set() const{
    return m_emails_isSet;
}

bool OAIApplicationInfo::is_emails_Valid() const{
    return m_emails_isValid;
}

QString OAIApplicationInfo::getInstruction() const {
    return m_instruction;
}
void OAIApplicationInfo::setInstruction(const QString &instruction) {
    m_instruction = instruction;
    m_instruction_isSet = true;
}

bool OAIApplicationInfo::is_instruction_Set() const{
    return m_instruction_isSet;
}

bool OAIApplicationInfo::is_instruction_Valid() const{
    return m_instruction_isValid;
}

QList<QString> OAIApplicationInfo::getUris() const {
    return m_uris;
}
void OAIApplicationInfo::setUris(const QList<QString> &uris) {
    m_uris = uris;
    m_uris_isSet = true;
}

bool OAIApplicationInfo::is_uris_Set() const{
    return m_uris_isSet;
}

bool OAIApplicationInfo::is_uris_Valid() const{
    return m_uris_isValid;
}

bool OAIApplicationInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_emails.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_instruction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uris.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
