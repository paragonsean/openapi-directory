/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMatchingJob.h
 *
 * Output only. Job entry with metadata inside SearchJobsResponse.
 */

#ifndef OAIMatchingJob_H
#define OAIMatchingJob_H

#include <QJsonObject>

#include "OAICommuteInfo.h"
#include "OAIJob.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICommuteInfo;
class OAIJob;

class OAIMatchingJob : public OAIObject {
public:
    OAIMatchingJob();
    OAIMatchingJob(QString json);
    ~OAIMatchingJob() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICommuteInfo getCommuteInfo() const;
    void setCommuteInfo(const OAICommuteInfo &commute_info);
    bool is_commute_info_Set() const;
    bool is_commute_info_Valid() const;

    OAIJob getJob() const;
    void setJob(const OAIJob &job);
    bool is_job_Set() const;
    bool is_job_Valid() const;

    QString getJobSummary() const;
    void setJobSummary(const QString &job_summary);
    bool is_job_summary_Set() const;
    bool is_job_summary_Valid() const;

    QString getJobTitleSnippet() const;
    void setJobTitleSnippet(const QString &job_title_snippet);
    bool is_job_title_snippet_Set() const;
    bool is_job_title_snippet_Valid() const;

    QString getSearchTextSnippet() const;
    void setSearchTextSnippet(const QString &search_text_snippet);
    bool is_search_text_snippet_Set() const;
    bool is_search_text_snippet_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICommuteInfo m_commute_info;
    bool m_commute_info_isSet;
    bool m_commute_info_isValid;

    OAIJob m_job;
    bool m_job_isSet;
    bool m_job_isValid;

    QString m_job_summary;
    bool m_job_summary_isSet;
    bool m_job_summary_isValid;

    QString m_job_title_snippet;
    bool m_job_title_snippet_isSet;
    bool m_job_title_snippet_isValid;

    QString m_search_text_snippet;
    bool m_search_text_snippet_isSet;
    bool m_search_text_snippet_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMatchingJob)

#endif // OAIMatchingJob_H
