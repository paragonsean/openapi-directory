/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchJobsResponse.h
 *
 * Output only. Response for SearchJob method.
 */

#ifndef OAISearchJobsResponse_H
#define OAISearchJobsResponse_H

#include <QJsonObject>

#include "OAIHistogramResults.h"
#include "OAILocation.h"
#include "OAIMatchingJob.h"
#include "OAIResponseMetadata.h"
#include "OAISpellingCorrection.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHistogramResults;
class OAILocation;
class OAIMatchingJob;
class OAIResponseMetadata;
class OAISpellingCorrection;

class OAISearchJobsResponse : public OAIObject {
public:
    OAISearchJobsResponse();
    OAISearchJobsResponse(QString json);
    ~OAISearchJobsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBroadenedQueryJobsCount() const;
    void setBroadenedQueryJobsCount(const qint32 &broadened_query_jobs_count);
    bool is_broadened_query_jobs_count_Set() const;
    bool is_broadened_query_jobs_count_Valid() const;

    qint32 getEstimatedTotalSize() const;
    void setEstimatedTotalSize(const qint32 &estimated_total_size);
    bool is_estimated_total_size_Set() const;
    bool is_estimated_total_size_Valid() const;

    OAIHistogramResults getHistogramResults() const;
    void setHistogramResults(const OAIHistogramResults &histogram_results);
    bool is_histogram_results_Set() const;
    bool is_histogram_results_Valid() const;

    QList<OAILocation> getLocationFilters() const;
    void setLocationFilters(const QList<OAILocation> &location_filters);
    bool is_location_filters_Set() const;
    bool is_location_filters_Valid() const;

    QList<OAIMatchingJob> getMatchingJobs() const;
    void setMatchingJobs(const QList<OAIMatchingJob> &matching_jobs);
    bool is_matching_jobs_Set() const;
    bool is_matching_jobs_Valid() const;

    OAIResponseMetadata getMetadata() const;
    void setMetadata(const OAIResponseMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    OAISpellingCorrection getSpellCorrection() const;
    void setSpellCorrection(const OAISpellingCorrection &spell_correction);
    bool is_spell_correction_Set() const;
    bool is_spell_correction_Valid() const;

    qint32 getTotalSize() const;
    void setTotalSize(const qint32 &total_size);
    bool is_total_size_Set() const;
    bool is_total_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_broadened_query_jobs_count;
    bool m_broadened_query_jobs_count_isSet;
    bool m_broadened_query_jobs_count_isValid;

    qint32 m_estimated_total_size;
    bool m_estimated_total_size_isSet;
    bool m_estimated_total_size_isValid;

    OAIHistogramResults m_histogram_results;
    bool m_histogram_results_isSet;
    bool m_histogram_results_isValid;

    QList<OAILocation> m_location_filters;
    bool m_location_filters_isSet;
    bool m_location_filters_isValid;

    QList<OAIMatchingJob> m_matching_jobs;
    bool m_matching_jobs_isSet;
    bool m_matching_jobs_isValid;

    OAIResponseMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    OAISpellingCorrection m_spell_correction;
    bool m_spell_correction_isSet;
    bool m_spell_correction_isValid;

    qint32 m_total_size;
    bool m_total_size_isSet;
    bool m_total_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchJobsResponse)

#endif // OAISearchJobsResponse_H
