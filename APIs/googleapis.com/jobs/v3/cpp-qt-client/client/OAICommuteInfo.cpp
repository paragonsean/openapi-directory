/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommuteInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommuteInfo::OAICommuteInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommuteInfo::OAICommuteInfo() {
    this->initializeModel();
}

OAICommuteInfo::~OAICommuteInfo() {}

void OAICommuteInfo::initializeModel() {

    m_job_location_isSet = false;
    m_job_location_isValid = false;

    m_travel_duration_isSet = false;
    m_travel_duration_isValid = false;
}

void OAICommuteInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommuteInfo::fromJsonObject(QJsonObject json) {

    m_job_location_isValid = ::OpenAPI::fromJsonValue(m_job_location, json[QString("jobLocation")]);
    m_job_location_isSet = !json[QString("jobLocation")].isNull() && m_job_location_isValid;

    m_travel_duration_isValid = ::OpenAPI::fromJsonValue(m_travel_duration, json[QString("travelDuration")]);
    m_travel_duration_isSet = !json[QString("travelDuration")].isNull() && m_travel_duration_isValid;
}

QString OAICommuteInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommuteInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_job_location.isSet()) {
        obj.insert(QString("jobLocation"), ::OpenAPI::toJsonValue(m_job_location));
    }
    if (m_travel_duration_isSet) {
        obj.insert(QString("travelDuration"), ::OpenAPI::toJsonValue(m_travel_duration));
    }
    return obj;
}

OAILocation OAICommuteInfo::getJobLocation() const {
    return m_job_location;
}
void OAICommuteInfo::setJobLocation(const OAILocation &job_location) {
    m_job_location = job_location;
    m_job_location_isSet = true;
}

bool OAICommuteInfo::is_job_location_Set() const{
    return m_job_location_isSet;
}

bool OAICommuteInfo::is_job_location_Valid() const{
    return m_job_location_isValid;
}

QString OAICommuteInfo::getTravelDuration() const {
    return m_travel_duration;
}
void OAICommuteInfo::setTravelDuration(const QString &travel_duration) {
    m_travel_duration = travel_duration;
    m_travel_duration_isSet = true;
}

bool OAICommuteInfo::is_travel_duration_Set() const{
    return m_travel_duration_isSet;
}

bool OAICommuteInfo::is_travel_duration_Valid() const{
    return m_travel_duration_isValid;
}

bool OAICommuteInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_travel_duration_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommuteInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
