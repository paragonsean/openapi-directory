/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompletionResult from './CompletionResult';
import ResponseMetadata from './ResponseMetadata';

/**
 * The CompleteQueryResponse model module.
 * @module model/CompleteQueryResponse
 * @version v3
 */
class CompleteQueryResponse {
    /**
     * Constructs a new <code>CompleteQueryResponse</code>.
     * Output only. Response of auto-complete query.
     * @alias module:model/CompleteQueryResponse
     */
    constructor() { 
        
        CompleteQueryResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompleteQueryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompleteQueryResponse} obj Optional instance to populate.
     * @return {module:model/CompleteQueryResponse} The populated <code>CompleteQueryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompleteQueryResponse();

            if (data.hasOwnProperty('completionResults')) {
                obj['completionResults'] = ApiClient.convertToType(data['completionResults'], [CompletionResult]);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ResponseMetadata.constructFromObject(data['metadata']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompleteQueryResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompleteQueryResponse</code>.
     */
    static validateJSON(data) {
        if (data['completionResults']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['completionResults'])) {
                throw new Error("Expected the field `completionResults` to be an array in the JSON data but got " + data['completionResults']);
            }
            // validate the optional field `completionResults` (array)
            for (const item of data['completionResults']) {
                CompletionResult.validateJSON(item);
            };
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          ResponseMetadata.validateJSON(data['metadata']);
        }

        return true;
    }


}



/**
 * Results of the matching job/company candidates.
 * @member {Array.<module:model/CompletionResult>} completionResults
 */
CompleteQueryResponse.prototype['completionResults'] = undefined;

/**
 * @member {module:model/ResponseMetadata} metadata
 */
CompleteQueryResponse.prototype['metadata'] = undefined;






export default CompleteQueryResponse;

