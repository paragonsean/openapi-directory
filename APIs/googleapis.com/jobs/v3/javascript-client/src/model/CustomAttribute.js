/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomAttribute model module.
 * @module model/CustomAttribute
 * @version v3
 */
class CustomAttribute {
    /**
     * Constructs a new <code>CustomAttribute</code>.
     * Custom attribute values that are either filterable or non-filterable.
     * @alias module:model/CustomAttribute
     */
    constructor() { 
        
        CustomAttribute.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomAttribute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomAttribute} obj Optional instance to populate.
     * @return {module:model/CustomAttribute} The populated <code>CustomAttribute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomAttribute();

            if (data.hasOwnProperty('filterable')) {
                obj['filterable'] = ApiClient.convertToType(data['filterable'], 'Boolean');
            }
            if (data.hasOwnProperty('longValues')) {
                obj['longValues'] = ApiClient.convertToType(data['longValues'], ['String']);
            }
            if (data.hasOwnProperty('stringValues')) {
                obj['stringValues'] = ApiClient.convertToType(data['stringValues'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomAttribute</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomAttribute</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['longValues'])) {
            throw new Error("Expected the field `longValues` to be an array in the JSON data but got " + data['longValues']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['stringValues'])) {
            throw new Error("Expected the field `stringValues` to be an array in the JSON data but got " + data['stringValues']);
        }

        return true;
    }


}



/**
 * Optional. If the `filterable` flag is true, the custom field values may be used for custom attribute filters JobQuery.custom_attribute_filter. If false, these values may not be used for custom attribute filters. Default is false.
 * @member {Boolean} filterable
 */
CustomAttribute.prototype['filterable'] = undefined;

/**
 * Optional but exactly one of string_values or long_values must be specified. This field is used to perform number range search. (`EQ`, `GT`, `GE`, `LE`, `LT`) over filterable `long_value`. Currently at most 1 long_values is supported.
 * @member {Array.<String>} longValues
 */
CustomAttribute.prototype['longValues'] = undefined;

/**
 * Optional but exactly one of string_values or long_values must be specified. This field is used to perform a string match (`CASE_SENSITIVE_MATCH` or `CASE_INSENSITIVE_MATCH`) search. For filterable `string_value`s, a maximum total number of 200 values is allowed, with each `string_value` has a byte size of no more than 500B. For unfilterable `string_values`, the maximum total byte size of unfilterable `string_values` is 50KB. Empty string is not allowed.
 * @member {Array.<String>} stringValues
 */
CustomAttribute.prototype['stringValues'] = undefined;






export default CustomAttribute;

