/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompensationHistogramResult from './CompensationHistogramResult';
import CustomAttributeHistogramResult from './CustomAttributeHistogramResult';
import HistogramResult from './HistogramResult';

/**
 * The HistogramResults model module.
 * @module model/HistogramResults
 * @version v3
 */
class HistogramResults {
    /**
     * Constructs a new <code>HistogramResults</code>.
     * Output only. Histogram results that match HistogramFacets specified in SearchJobsRequest.
     * @alias module:model/HistogramResults
     */
    constructor() { 
        
        HistogramResults.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HistogramResults</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistogramResults} obj Optional instance to populate.
     * @return {module:model/HistogramResults} The populated <code>HistogramResults</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistogramResults();

            if (data.hasOwnProperty('compensationHistogramResults')) {
                obj['compensationHistogramResults'] = ApiClient.convertToType(data['compensationHistogramResults'], [CompensationHistogramResult]);
            }
            if (data.hasOwnProperty('customAttributeHistogramResults')) {
                obj['customAttributeHistogramResults'] = ApiClient.convertToType(data['customAttributeHistogramResults'], [CustomAttributeHistogramResult]);
            }
            if (data.hasOwnProperty('simpleHistogramResults')) {
                obj['simpleHistogramResults'] = ApiClient.convertToType(data['simpleHistogramResults'], [HistogramResult]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistogramResults</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistogramResults</code>.
     */
    static validateJSON(data) {
        if (data['compensationHistogramResults']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['compensationHistogramResults'])) {
                throw new Error("Expected the field `compensationHistogramResults` to be an array in the JSON data but got " + data['compensationHistogramResults']);
            }
            // validate the optional field `compensationHistogramResults` (array)
            for (const item of data['compensationHistogramResults']) {
                CompensationHistogramResult.validateJSON(item);
            };
        }
        if (data['customAttributeHistogramResults']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['customAttributeHistogramResults'])) {
                throw new Error("Expected the field `customAttributeHistogramResults` to be an array in the JSON data but got " + data['customAttributeHistogramResults']);
            }
            // validate the optional field `customAttributeHistogramResults` (array)
            for (const item of data['customAttributeHistogramResults']) {
                CustomAttributeHistogramResult.validateJSON(item);
            };
        }
        if (data['simpleHistogramResults']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['simpleHistogramResults'])) {
                throw new Error("Expected the field `simpleHistogramResults` to be an array in the JSON data but got " + data['simpleHistogramResults']);
            }
            // validate the optional field `simpleHistogramResults` (array)
            for (const item of data['simpleHistogramResults']) {
                HistogramResult.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Specifies compensation field-based histogram results that match HistogramFacets.compensation_histogram_requests.
 * @member {Array.<module:model/CompensationHistogramResult>} compensationHistogramResults
 */
HistogramResults.prototype['compensationHistogramResults'] = undefined;

/**
 * Specifies histogram results for custom attributes that match HistogramFacets.custom_attribute_histogram_facets.
 * @member {Array.<module:model/CustomAttributeHistogramResult>} customAttributeHistogramResults
 */
HistogramResults.prototype['customAttributeHistogramResults'] = undefined;

/**
 * Specifies histogram results that matches HistogramFacets.simple_histogram_facets.
 * @member {Array.<module:model/HistogramResult>} simpleHistogramResults
 */
HistogramResults.prototype['simpleHistogramResults'] = undefined;






export default HistogramResults;

