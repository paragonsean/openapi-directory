/**
 * Cloud Talent Solution API
 * Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HistogramResult model module.
 * @module model/HistogramResult
 * @version v3
 */
class HistogramResult {
    /**
     * Constructs a new <code>HistogramResult</code>.
     * Output only. Result of a histogram call. The response contains the histogram map for the search type specified by HistogramResult.field. The response is a map of each filter value to the corresponding count of jobs for that filter.
     * @alias module:model/HistogramResult
     */
    constructor() { 
        
        HistogramResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HistogramResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistogramResult} obj Optional instance to populate.
     * @return {module:model/HistogramResult} The populated <code>HistogramResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistogramResult();

            if (data.hasOwnProperty('searchType')) {
                obj['searchType'] = ApiClient.convertToType(data['searchType'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], {'String': 'Number'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistogramResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistogramResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['searchType'] && !(typeof data['searchType'] === 'string' || data['searchType'] instanceof String)) {
            throw new Error("Expected the field `searchType` to be a primitive type in the JSON string but got " + data['searchType']);
        }

        return true;
    }


}



/**
 * The Histogram search filters.
 * @member {module:model/HistogramResult.SearchTypeEnum} searchType
 */
HistogramResult.prototype['searchType'] = undefined;

/**
 * A map from the values of field to the number of jobs with that value in this search result. Key: search type (filter names, such as the companyName). Values: the count of jobs that match the filter for this search.
 * @member {Object.<String, Number>} values
 */
HistogramResult.prototype['values'] = undefined;





/**
 * Allowed values for the <code>searchType</code> property.
 * @enum {String}
 * @readonly
 */
HistogramResult['SearchTypeEnum'] = {

    /**
     * value: "SEARCH_TYPE_UNSPECIFIED"
     * @const
     */
    "SEARCH_TYPE_UNSPECIFIED": "SEARCH_TYPE_UNSPECIFIED",

    /**
     * value: "COMPANY_ID"
     * @const
     */
    "COMPANY_ID": "COMPANY_ID",

    /**
     * value: "EMPLOYMENT_TYPE"
     * @const
     */
    "EMPLOYMENT_TYPE": "EMPLOYMENT_TYPE",

    /**
     * value: "COMPANY_SIZE"
     * @const
     */
    "COMPANY_SIZE": "COMPANY_SIZE",

    /**
     * value: "DATE_PUBLISHED"
     * @const
     */
    "DATE_PUBLISHED": "DATE_PUBLISHED",

    /**
     * value: "EDUCATION_LEVEL"
     * @const
     */
    "EDUCATION_LEVEL": "EDUCATION_LEVEL",

    /**
     * value: "EXPERIENCE_LEVEL"
     * @const
     */
    "EXPERIENCE_LEVEL": "EXPERIENCE_LEVEL",

    /**
     * value: "ADMIN_1"
     * @const
     */
    "ADMIN_1": "ADMIN_1",

    /**
     * value: "COUNTRY"
     * @const
     */
    "COUNTRY": "COUNTRY",

    /**
     * value: "CITY"
     * @const
     */
    "CITY": "CITY",

    /**
     * value: "LOCALE"
     * @const
     */
    "LOCALE": "LOCALE",

    /**
     * value: "LANGUAGE"
     * @const
     */
    "LANGUAGE": "LANGUAGE",

    /**
     * value: "CATEGORY"
     * @const
     */
    "CATEGORY": "CATEGORY",

    /**
     * value: "CITY_COORDINATE"
     * @const
     */
    "CITY_COORDINATE": "CITY_COORDINATE",

    /**
     * value: "ADMIN_1_COUNTRY"
     * @const
     */
    "ADMIN_1_COUNTRY": "ADMIN_1_COUNTRY",

    /**
     * value: "COMPANY_DISPLAY_NAME"
     * @const
     */
    "COMPANY_DISPLAY_NAME": "COMPANY_DISPLAY_NAME",

    /**
     * value: "BASE_COMPENSATION_UNIT"
     * @const
     */
    "BASE_COMPENSATION_UNIT": "BASE_COMPENSATION_UNIT"
};



export default HistogramResult;

