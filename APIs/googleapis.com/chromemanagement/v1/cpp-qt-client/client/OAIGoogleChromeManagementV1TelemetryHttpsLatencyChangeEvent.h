/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent.h
 *
 * Https latency routine is run periodically and &#x60;TelemetryHttpsLatencyChangeEvent&#x60; is triggered if a latency problem was detected or if the device has recovered from a latency problem. * Granular permission needed: TELEMETRY_API_NETWORK_REPORT
 */

#ifndef OAIGoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent_H
#define OAIGoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent_H

#include <QJsonObject>

#include "OAIGoogleChromeManagementV1HttpsLatencyRoutineData.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromeManagementV1HttpsLatencyRoutineData;

class OAIGoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent : public OAIObject {
public:
    OAIGoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent();
    OAIGoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent(QString json);
    ~OAIGoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleChromeManagementV1HttpsLatencyRoutineData getHttpsLatencyRoutineData() const;
    void setHttpsLatencyRoutineData(const OAIGoogleChromeManagementV1HttpsLatencyRoutineData &https_latency_routine_data);
    bool is_https_latency_routine_data_Set() const;
    bool is_https_latency_routine_data_Valid() const;

    QString getHttpsLatencyState() const;
    void setHttpsLatencyState(const QString &https_latency_state);
    bool is_https_latency_state_Set() const;
    bool is_https_latency_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleChromeManagementV1HttpsLatencyRoutineData m_https_latency_routine_data;
    bool m_https_latency_routine_data_isSet;
    bool m_https_latency_routine_data_isValid;

    QString m_https_latency_state;
    bool m_https_latency_state_isSet;
    bool m_https_latency_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent)

#endif // OAIGoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent_H
