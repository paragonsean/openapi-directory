/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1CountChromeVersionsResponse.h
 *
 * Response containing requested browser versions details and counts.
 */

#ifndef OAIGoogleChromeManagementV1CountChromeVersionsResponse_H
#define OAIGoogleChromeManagementV1CountChromeVersionsResponse_H

#include <QJsonObject>

#include "OAIGoogleChromeManagementV1BrowserVersion.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromeManagementV1BrowserVersion;

class OAIGoogleChromeManagementV1CountChromeVersionsResponse : public OAIObject {
public:
    OAIGoogleChromeManagementV1CountChromeVersionsResponse();
    OAIGoogleChromeManagementV1CountChromeVersionsResponse(QString json);
    ~OAIGoogleChromeManagementV1CountChromeVersionsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleChromeManagementV1BrowserVersion> getBrowserVersions() const;
    void setBrowserVersions(const QList<OAIGoogleChromeManagementV1BrowserVersion> &browser_versions);
    bool is_browser_versions_Set() const;
    bool is_browser_versions_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    qint32 getTotalSize() const;
    void setTotalSize(const qint32 &total_size);
    bool is_total_size_Set() const;
    bool is_total_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleChromeManagementV1BrowserVersion> m_browser_versions;
    bool m_browser_versions_isSet;
    bool m_browser_versions_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    qint32 m_total_size;
    bool m_total_size_isSet;
    bool m_total_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1CountChromeVersionsResponse)

#endif // OAIGoogleChromeManagementV1CountChromeVersionsResponse_H
