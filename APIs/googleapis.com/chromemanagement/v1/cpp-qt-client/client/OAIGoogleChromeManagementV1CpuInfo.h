/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1CpuInfo.h
 *
 * CPU specifications for the device * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_CPU_INFO
 */

#ifndef OAIGoogleChromeManagementV1CpuInfo_H
#define OAIGoogleChromeManagementV1CpuInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleChromeManagementV1CpuInfo : public OAIObject {
public:
    OAIGoogleChromeManagementV1CpuInfo();
    OAIGoogleChromeManagementV1CpuInfo(QString json);
    ~OAIGoogleChromeManagementV1CpuInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArchitecture() const;
    void setArchitecture(const QString &architecture);
    bool is_architecture_Set() const;
    bool is_architecture_Valid() const;

    bool isKeylockerConfigured() const;
    void setKeylockerConfigured(const bool &keylocker_configured);
    bool is_keylocker_configured_Set() const;
    bool is_keylocker_configured_Valid() const;

    bool isKeylockerSupported() const;
    void setKeylockerSupported(const bool &keylocker_supported);
    bool is_keylocker_supported_Set() const;
    bool is_keylocker_supported_Valid() const;

    qint32 getMaxClockSpeed() const;
    void setMaxClockSpeed(const qint32 &max_clock_speed);
    bool is_max_clock_speed_Set() const;
    bool is_max_clock_speed_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_architecture;
    bool m_architecture_isSet;
    bool m_architecture_isValid;

    bool m_keylocker_configured;
    bool m_keylocker_configured_isSet;
    bool m_keylocker_configured_isValid;

    bool m_keylocker_supported;
    bool m_keylocker_supported_isSet;
    bool m_keylocker_supported_isValid;

    qint32 m_max_clock_speed;
    bool m_max_clock_speed_isSet;
    bool m_max_clock_speed_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1CpuInfo)

#endif // OAIGoogleChromeManagementV1CpuInfo_H
