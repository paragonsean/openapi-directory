/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1BootPerformanceReport.h
 *
 * Boot performance report of a device. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceBootMode](https://chromeenterprise.google/policies/#ReportDeviceBootMode) * Data Collection Frequency: On every boot up event * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_OS_REPORT
 */

#ifndef OAIGoogleChromeManagementV1BootPerformanceReport_H
#define OAIGoogleChromeManagementV1BootPerformanceReport_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleChromeManagementV1BootPerformanceReport : public OAIObject {
public:
    OAIGoogleChromeManagementV1BootPerformanceReport();
    OAIGoogleChromeManagementV1BootPerformanceReport(QString json);
    ~OAIGoogleChromeManagementV1BootPerformanceReport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBootUpDuration() const;
    void setBootUpDuration(const QString &boot_up_duration);
    bool is_boot_up_duration_Set() const;
    bool is_boot_up_duration_Valid() const;

    QString getBootUpTime() const;
    void setBootUpTime(const QString &boot_up_time);
    bool is_boot_up_time_Set() const;
    bool is_boot_up_time_Valid() const;

    QString getReportTime() const;
    void setReportTime(const QString &report_time);
    bool is_report_time_Set() const;
    bool is_report_time_Valid() const;

    QString getShutdownDuration() const;
    void setShutdownDuration(const QString &shutdown_duration);
    bool is_shutdown_duration_Set() const;
    bool is_shutdown_duration_Valid() const;

    QString getShutdownReason() const;
    void setShutdownReason(const QString &shutdown_reason);
    bool is_shutdown_reason_Set() const;
    bool is_shutdown_reason_Valid() const;

    QString getShutdownTime() const;
    void setShutdownTime(const QString &shutdown_time);
    bool is_shutdown_time_Set() const;
    bool is_shutdown_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_boot_up_duration;
    bool m_boot_up_duration_isSet;
    bool m_boot_up_duration_isValid;

    QString m_boot_up_time;
    bool m_boot_up_time_isSet;
    bool m_boot_up_time_isValid;

    QString m_report_time;
    bool m_report_time_isSet;
    bool m_report_time_isValid;

    QString m_shutdown_duration;
    bool m_shutdown_duration_isSet;
    bool m_shutdown_duration_isValid;

    QString m_shutdown_reason;
    bool m_shutdown_reason_isSet;
    bool m_shutdown_reason_isValid;

    QString m_shutdown_time;
    bool m_shutdown_time_isSet;
    bool m_shutdown_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1BootPerformanceReport)

#endif // OAIGoogleChromeManagementV1BootPerformanceReport_H
