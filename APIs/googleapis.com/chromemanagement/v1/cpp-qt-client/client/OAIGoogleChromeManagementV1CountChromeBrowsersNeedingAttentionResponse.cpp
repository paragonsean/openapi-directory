/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse() {
    this->initializeModel();
}

OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::~OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse() {}

void OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::initializeModel() {

    m_no_recent_activity_count_isSet = false;
    m_no_recent_activity_count_isValid = false;

    m_pending_browser_update_count_isSet = false;
    m_pending_browser_update_count_isValid = false;

    m_recently_enrolled_count_isSet = false;
    m_recently_enrolled_count_isValid = false;
}

void OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::fromJsonObject(QJsonObject json) {

    m_no_recent_activity_count_isValid = ::OpenAPI::fromJsonValue(m_no_recent_activity_count, json[QString("noRecentActivityCount")]);
    m_no_recent_activity_count_isSet = !json[QString("noRecentActivityCount")].isNull() && m_no_recent_activity_count_isValid;

    m_pending_browser_update_count_isValid = ::OpenAPI::fromJsonValue(m_pending_browser_update_count, json[QString("pendingBrowserUpdateCount")]);
    m_pending_browser_update_count_isSet = !json[QString("pendingBrowserUpdateCount")].isNull() && m_pending_browser_update_count_isValid;

    m_recently_enrolled_count_isValid = ::OpenAPI::fromJsonValue(m_recently_enrolled_count, json[QString("recentlyEnrolledCount")]);
    m_recently_enrolled_count_isSet = !json[QString("recentlyEnrolledCount")].isNull() && m_recently_enrolled_count_isValid;
}

QString OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_no_recent_activity_count_isSet) {
        obj.insert(QString("noRecentActivityCount"), ::OpenAPI::toJsonValue(m_no_recent_activity_count));
    }
    if (m_pending_browser_update_count_isSet) {
        obj.insert(QString("pendingBrowserUpdateCount"), ::OpenAPI::toJsonValue(m_pending_browser_update_count));
    }
    if (m_recently_enrolled_count_isSet) {
        obj.insert(QString("recentlyEnrolledCount"), ::OpenAPI::toJsonValue(m_recently_enrolled_count));
    }
    return obj;
}

QString OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::getNoRecentActivityCount() const {
    return m_no_recent_activity_count;
}
void OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::setNoRecentActivityCount(const QString &no_recent_activity_count) {
    m_no_recent_activity_count = no_recent_activity_count;
    m_no_recent_activity_count_isSet = true;
}

bool OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::is_no_recent_activity_count_Set() const{
    return m_no_recent_activity_count_isSet;
}

bool OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::is_no_recent_activity_count_Valid() const{
    return m_no_recent_activity_count_isValid;
}

QString OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::getPendingBrowserUpdateCount() const {
    return m_pending_browser_update_count;
}
void OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::setPendingBrowserUpdateCount(const QString &pending_browser_update_count) {
    m_pending_browser_update_count = pending_browser_update_count;
    m_pending_browser_update_count_isSet = true;
}

bool OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::is_pending_browser_update_count_Set() const{
    return m_pending_browser_update_count_isSet;
}

bool OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::is_pending_browser_update_count_Valid() const{
    return m_pending_browser_update_count_isValid;
}

QString OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::getRecentlyEnrolledCount() const {
    return m_recently_enrolled_count;
}
void OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::setRecentlyEnrolledCount(const QString &recently_enrolled_count) {
    m_recently_enrolled_count = recently_enrolled_count;
    m_recently_enrolled_count_isSet = true;
}

bool OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::is_recently_enrolled_count_Set() const{
    return m_recently_enrolled_count_isSet;
}

bool OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::is_recently_enrolled_count_Valid() const{
    return m_recently_enrolled_count_isValid;
}

bool OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_no_recent_activity_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pending_browser_update_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recently_enrolled_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
