/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromeManagementV1ChromeAppRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromeManagementV1ChromeAppRequest::OAIGoogleChromeManagementV1ChromeAppRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromeManagementV1ChromeAppRequest::OAIGoogleChromeManagementV1ChromeAppRequest() {
    this->initializeModel();
}

OAIGoogleChromeManagementV1ChromeAppRequest::~OAIGoogleChromeManagementV1ChromeAppRequest() {}

void OAIGoogleChromeManagementV1ChromeAppRequest::initializeModel() {

    m_app_details_isSet = false;
    m_app_details_isValid = false;

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_detail_uri_isSet = false;
    m_detail_uri_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_icon_uri_isSet = false;
    m_icon_uri_isValid = false;

    m_latest_request_time_isSet = false;
    m_latest_request_time_isValid = false;

    m_request_count_isSet = false;
    m_request_count_isValid = false;
}

void OAIGoogleChromeManagementV1ChromeAppRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromeManagementV1ChromeAppRequest::fromJsonObject(QJsonObject json) {

    m_app_details_isValid = ::OpenAPI::fromJsonValue(m_app_details, json[QString("appDetails")]);
    m_app_details_isSet = !json[QString("appDetails")].isNull() && m_app_details_isValid;

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("appId")]);
    m_app_id_isSet = !json[QString("appId")].isNull() && m_app_id_isValid;

    m_detail_uri_isValid = ::OpenAPI::fromJsonValue(m_detail_uri, json[QString("detailUri")]);
    m_detail_uri_isSet = !json[QString("detailUri")].isNull() && m_detail_uri_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_icon_uri_isValid = ::OpenAPI::fromJsonValue(m_icon_uri, json[QString("iconUri")]);
    m_icon_uri_isSet = !json[QString("iconUri")].isNull() && m_icon_uri_isValid;

    m_latest_request_time_isValid = ::OpenAPI::fromJsonValue(m_latest_request_time, json[QString("latestRequestTime")]);
    m_latest_request_time_isSet = !json[QString("latestRequestTime")].isNull() && m_latest_request_time_isValid;

    m_request_count_isValid = ::OpenAPI::fromJsonValue(m_request_count, json[QString("requestCount")]);
    m_request_count_isSet = !json[QString("requestCount")].isNull() && m_request_count_isValid;
}

QString OAIGoogleChromeManagementV1ChromeAppRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromeManagementV1ChromeAppRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_app_details_isSet) {
        obj.insert(QString("appDetails"), ::OpenAPI::toJsonValue(m_app_details));
    }
    if (m_app_id_isSet) {
        obj.insert(QString("appId"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_detail_uri_isSet) {
        obj.insert(QString("detailUri"), ::OpenAPI::toJsonValue(m_detail_uri));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_icon_uri_isSet) {
        obj.insert(QString("iconUri"), ::OpenAPI::toJsonValue(m_icon_uri));
    }
    if (m_latest_request_time_isSet) {
        obj.insert(QString("latestRequestTime"), ::OpenAPI::toJsonValue(m_latest_request_time));
    }
    if (m_request_count_isSet) {
        obj.insert(QString("requestCount"), ::OpenAPI::toJsonValue(m_request_count));
    }
    return obj;
}

QString OAIGoogleChromeManagementV1ChromeAppRequest::getAppDetails() const {
    return m_app_details;
}
void OAIGoogleChromeManagementV1ChromeAppRequest::setAppDetails(const QString &app_details) {
    m_app_details = app_details;
    m_app_details_isSet = true;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_app_details_Set() const{
    return m_app_details_isSet;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_app_details_Valid() const{
    return m_app_details_isValid;
}

QString OAIGoogleChromeManagementV1ChromeAppRequest::getAppId() const {
    return m_app_id;
}
void OAIGoogleChromeManagementV1ChromeAppRequest::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_app_id_Valid() const{
    return m_app_id_isValid;
}

QString OAIGoogleChromeManagementV1ChromeAppRequest::getDetailUri() const {
    return m_detail_uri;
}
void OAIGoogleChromeManagementV1ChromeAppRequest::setDetailUri(const QString &detail_uri) {
    m_detail_uri = detail_uri;
    m_detail_uri_isSet = true;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_detail_uri_Set() const{
    return m_detail_uri_isSet;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_detail_uri_Valid() const{
    return m_detail_uri_isValid;
}

QString OAIGoogleChromeManagementV1ChromeAppRequest::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleChromeManagementV1ChromeAppRequest::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleChromeManagementV1ChromeAppRequest::getIconUri() const {
    return m_icon_uri;
}
void OAIGoogleChromeManagementV1ChromeAppRequest::setIconUri(const QString &icon_uri) {
    m_icon_uri = icon_uri;
    m_icon_uri_isSet = true;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_icon_uri_Set() const{
    return m_icon_uri_isSet;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_icon_uri_Valid() const{
    return m_icon_uri_isValid;
}

QString OAIGoogleChromeManagementV1ChromeAppRequest::getLatestRequestTime() const {
    return m_latest_request_time;
}
void OAIGoogleChromeManagementV1ChromeAppRequest::setLatestRequestTime(const QString &latest_request_time) {
    m_latest_request_time = latest_request_time;
    m_latest_request_time_isSet = true;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_latest_request_time_Set() const{
    return m_latest_request_time_isSet;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_latest_request_time_Valid() const{
    return m_latest_request_time_isValid;
}

QString OAIGoogleChromeManagementV1ChromeAppRequest::getRequestCount() const {
    return m_request_count;
}
void OAIGoogleChromeManagementV1ChromeAppRequest::setRequestCount(const QString &request_count) {
    m_request_count = request_count;
    m_request_count_isSet = true;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_request_count_Set() const{
    return m_request_count_isSet;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::is_request_count_Valid() const{
    return m_request_count_isValid;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_detail_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_icon_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_request_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromeManagementV1ChromeAppRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
