/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1UsbPeripheralReport.h
 *
 * USB connected peripheral report.
 */

#ifndef OAIGoogleChromeManagementV1UsbPeripheralReport_H
#define OAIGoogleChromeManagementV1UsbPeripheralReport_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleChromeManagementV1UsbPeripheralReport : public OAIObject {
public:
    OAIGoogleChromeManagementV1UsbPeripheralReport();
    OAIGoogleChromeManagementV1UsbPeripheralReport(QString json);
    ~OAIGoogleChromeManagementV1UsbPeripheralReport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCategories() const;
    void setCategories(const QList<QString> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    qint32 getClassId() const;
    void setClassId(const qint32 &class_id);
    bool is_class_id_Set() const;
    bool is_class_id_Valid() const;

    QString getFirmwareVersion() const;
    void setFirmwareVersion(const QString &firmware_version);
    bool is_firmware_version_Set() const;
    bool is_firmware_version_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPid() const;
    void setPid(const qint32 &pid);
    bool is_pid_Set() const;
    bool is_pid_Valid() const;

    qint32 getSubclassId() const;
    void setSubclassId(const qint32 &subclass_id);
    bool is_subclass_id_Set() const;
    bool is_subclass_id_Valid() const;

    QString getVendor() const;
    void setVendor(const QString &vendor);
    bool is_vendor_Set() const;
    bool is_vendor_Valid() const;

    qint32 getVid() const;
    void setVid(const qint32 &vid);
    bool is_vid_Set() const;
    bool is_vid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    qint32 m_class_id;
    bool m_class_id_isSet;
    bool m_class_id_isValid;

    QString m_firmware_version;
    bool m_firmware_version_isSet;
    bool m_firmware_version_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_pid;
    bool m_pid_isSet;
    bool m_pid_isValid;

    qint32 m_subclass_id;
    bool m_subclass_id_isSet;
    bool m_subclass_id_isValid;

    QString m_vendor;
    bool m_vendor_isSet;
    bool m_vendor_isValid;

    qint32 m_vid;
    bool m_vid_isSet;
    bool m_vid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1UsbPeripheralReport)

#endif // OAIGoogleChromeManagementV1UsbPeripheralReport_H
