/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1TotalMemoryEncryptionInfo.h
 *
 * Memory encryption information of a device. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A
 */

#ifndef OAIGoogleChromeManagementV1TotalMemoryEncryptionInfo_H
#define OAIGoogleChromeManagementV1TotalMemoryEncryptionInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleChromeManagementV1TotalMemoryEncryptionInfo : public OAIObject {
public:
    OAIGoogleChromeManagementV1TotalMemoryEncryptionInfo();
    OAIGoogleChromeManagementV1TotalMemoryEncryptionInfo(QString json);
    ~OAIGoogleChromeManagementV1TotalMemoryEncryptionInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEncryptionAlgorithm() const;
    void setEncryptionAlgorithm(const QString &encryption_algorithm);
    bool is_encryption_algorithm_Set() const;
    bool is_encryption_algorithm_Valid() const;

    QString getEncryptionState() const;
    void setEncryptionState(const QString &encryption_state);
    bool is_encryption_state_Set() const;
    bool is_encryption_state_Valid() const;

    QString getKeyLength() const;
    void setKeyLength(const QString &key_length);
    bool is_key_length_Set() const;
    bool is_key_length_Valid() const;

    QString getMaxKeys() const;
    void setMaxKeys(const QString &max_keys);
    bool is_max_keys_Set() const;
    bool is_max_keys_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_encryption_algorithm;
    bool m_encryption_algorithm_isSet;
    bool m_encryption_algorithm_isValid;

    QString m_encryption_state;
    bool m_encryption_state_isSet;
    bool m_encryption_state_isValid;

    QString m_key_length;
    bool m_key_length_isSet;
    bool m_key_length_isValid;

    QString m_max_keys;
    bool m_max_keys_isSet;
    bool m_max_keys_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1TotalMemoryEncryptionInfo)

#endif // OAIGoogleChromeManagementV1TotalMemoryEncryptionInfo_H
