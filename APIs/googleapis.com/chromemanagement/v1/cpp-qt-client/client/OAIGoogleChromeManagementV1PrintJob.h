/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1PrintJob.h
 *
 * Represents a request to print a document that has been submitted to a printer.
 */

#ifndef OAIGoogleChromeManagementV1PrintJob_H
#define OAIGoogleChromeManagementV1PrintJob_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleChromeManagementV1PrintJob : public OAIObject {
public:
    OAIGoogleChromeManagementV1PrintJob();
    OAIGoogleChromeManagementV1PrintJob(QString json);
    ~OAIGoogleChromeManagementV1PrintJob() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getColorMode() const;
    void setColorMode(const QString &color_mode);
    bool is_color_mode_Set() const;
    bool is_color_mode_Valid() const;

    QString getCompleteTime() const;
    void setCompleteTime(const QString &complete_time);
    bool is_complete_time_Set() const;
    bool is_complete_time_Valid() const;

    qint32 getCopyCount() const;
    void setCopyCount(const qint32 &copy_count);
    bool is_copy_count_Set() const;
    bool is_copy_count_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    qint32 getDocumentPageCount() const;
    void setDocumentPageCount(const qint32 &document_page_count);
    bool is_document_page_count_Set() const;
    bool is_document_page_count_Valid() const;

    QString getDuplexMode() const;
    void setDuplexMode(const QString &duplex_mode);
    bool is_duplex_mode_Set() const;
    bool is_duplex_mode_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getPrinter() const;
    void setPrinter(const QString &printer);
    bool is_printer_Set() const;
    bool is_printer_Valid() const;

    QString getPrinterId() const;
    void setPrinterId(const QString &printer_id);
    bool is_printer_id_Set() const;
    bool is_printer_id_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUserEmail() const;
    void setUserEmail(const QString &user_email);
    bool is_user_email_Set() const;
    bool is_user_email_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_color_mode;
    bool m_color_mode_isSet;
    bool m_color_mode_isValid;

    QString m_complete_time;
    bool m_complete_time_isSet;
    bool m_complete_time_isValid;

    qint32 m_copy_count;
    bool m_copy_count_isSet;
    bool m_copy_count_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    qint32 m_document_page_count;
    bool m_document_page_count_isSet;
    bool m_document_page_count_isValid;

    QString m_duplex_mode;
    bool m_duplex_mode_isSet;
    bool m_duplex_mode_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_printer;
    bool m_printer_isSet;
    bool m_printer_isValid;

    QString m_printer_id;
    bool m_printer_id_isSet;
    bool m_printer_id_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_user_email;
    bool m_user_email_isSet;
    bool m_user_email_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1PrintJob)

#endif // OAIGoogleChromeManagementV1PrintJob_H
