/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromeManagementV1OsUpdateStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromeManagementV1OsUpdateStatus::OAIGoogleChromeManagementV1OsUpdateStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromeManagementV1OsUpdateStatus::OAIGoogleChromeManagementV1OsUpdateStatus() {
    this->initializeModel();
}

OAIGoogleChromeManagementV1OsUpdateStatus::~OAIGoogleChromeManagementV1OsUpdateStatus() {}

void OAIGoogleChromeManagementV1OsUpdateStatus::initializeModel() {

    m_last_reboot_time_isSet = false;
    m_last_reboot_time_isValid = false;

    m_last_update_check_time_isSet = false;
    m_last_update_check_time_isValid = false;

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_new_platform_version_isSet = false;
    m_new_platform_version_isValid = false;

    m_new_requested_platform_version_isSet = false;
    m_new_requested_platform_version_isValid = false;

    m_update_state_isSet = false;
    m_update_state_isValid = false;
}

void OAIGoogleChromeManagementV1OsUpdateStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromeManagementV1OsUpdateStatus::fromJsonObject(QJsonObject json) {

    m_last_reboot_time_isValid = ::OpenAPI::fromJsonValue(m_last_reboot_time, json[QString("lastRebootTime")]);
    m_last_reboot_time_isSet = !json[QString("lastRebootTime")].isNull() && m_last_reboot_time_isValid;

    m_last_update_check_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_check_time, json[QString("lastUpdateCheckTime")]);
    m_last_update_check_time_isSet = !json[QString("lastUpdateCheckTime")].isNull() && m_last_update_check_time_isValid;

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("lastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("lastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_new_platform_version_isValid = ::OpenAPI::fromJsonValue(m_new_platform_version, json[QString("newPlatformVersion")]);
    m_new_platform_version_isSet = !json[QString("newPlatformVersion")].isNull() && m_new_platform_version_isValid;

    m_new_requested_platform_version_isValid = ::OpenAPI::fromJsonValue(m_new_requested_platform_version, json[QString("newRequestedPlatformVersion")]);
    m_new_requested_platform_version_isSet = !json[QString("newRequestedPlatformVersion")].isNull() && m_new_requested_platform_version_isValid;

    m_update_state_isValid = ::OpenAPI::fromJsonValue(m_update_state, json[QString("updateState")]);
    m_update_state_isSet = !json[QString("updateState")].isNull() && m_update_state_isValid;
}

QString OAIGoogleChromeManagementV1OsUpdateStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromeManagementV1OsUpdateStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_last_reboot_time_isSet) {
        obj.insert(QString("lastRebootTime"), ::OpenAPI::toJsonValue(m_last_reboot_time));
    }
    if (m_last_update_check_time_isSet) {
        obj.insert(QString("lastUpdateCheckTime"), ::OpenAPI::toJsonValue(m_last_update_check_time));
    }
    if (m_last_update_time_isSet) {
        obj.insert(QString("lastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_new_platform_version_isSet) {
        obj.insert(QString("newPlatformVersion"), ::OpenAPI::toJsonValue(m_new_platform_version));
    }
    if (m_new_requested_platform_version_isSet) {
        obj.insert(QString("newRequestedPlatformVersion"), ::OpenAPI::toJsonValue(m_new_requested_platform_version));
    }
    if (m_update_state_isSet) {
        obj.insert(QString("updateState"), ::OpenAPI::toJsonValue(m_update_state));
    }
    return obj;
}

QString OAIGoogleChromeManagementV1OsUpdateStatus::getLastRebootTime() const {
    return m_last_reboot_time;
}
void OAIGoogleChromeManagementV1OsUpdateStatus::setLastRebootTime(const QString &last_reboot_time) {
    m_last_reboot_time = last_reboot_time;
    m_last_reboot_time_isSet = true;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::is_last_reboot_time_Set() const{
    return m_last_reboot_time_isSet;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::is_last_reboot_time_Valid() const{
    return m_last_reboot_time_isValid;
}

QString OAIGoogleChromeManagementV1OsUpdateStatus::getLastUpdateCheckTime() const {
    return m_last_update_check_time;
}
void OAIGoogleChromeManagementV1OsUpdateStatus::setLastUpdateCheckTime(const QString &last_update_check_time) {
    m_last_update_check_time = last_update_check_time;
    m_last_update_check_time_isSet = true;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::is_last_update_check_time_Set() const{
    return m_last_update_check_time_isSet;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::is_last_update_check_time_Valid() const{
    return m_last_update_check_time_isValid;
}

QString OAIGoogleChromeManagementV1OsUpdateStatus::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAIGoogleChromeManagementV1OsUpdateStatus::setLastUpdateTime(const QString &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

QString OAIGoogleChromeManagementV1OsUpdateStatus::getNewPlatformVersion() const {
    return m_new_platform_version;
}
void OAIGoogleChromeManagementV1OsUpdateStatus::setNewPlatformVersion(const QString &new_platform_version) {
    m_new_platform_version = new_platform_version;
    m_new_platform_version_isSet = true;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::is_new_platform_version_Set() const{
    return m_new_platform_version_isSet;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::is_new_platform_version_Valid() const{
    return m_new_platform_version_isValid;
}

QString OAIGoogleChromeManagementV1OsUpdateStatus::getNewRequestedPlatformVersion() const {
    return m_new_requested_platform_version;
}
void OAIGoogleChromeManagementV1OsUpdateStatus::setNewRequestedPlatformVersion(const QString &new_requested_platform_version) {
    m_new_requested_platform_version = new_requested_platform_version;
    m_new_requested_platform_version_isSet = true;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::is_new_requested_platform_version_Set() const{
    return m_new_requested_platform_version_isSet;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::is_new_requested_platform_version_Valid() const{
    return m_new_requested_platform_version_isValid;
}

QString OAIGoogleChromeManagementV1OsUpdateStatus::getUpdateState() const {
    return m_update_state;
}
void OAIGoogleChromeManagementV1OsUpdateStatus::setUpdateState(const QString &update_state) {
    m_update_state = update_state;
    m_update_state_isSet = true;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::is_update_state_Set() const{
    return m_update_state_isSet;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::is_update_state_Valid() const{
    return m_update_state_isValid;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_reboot_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_check_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_platform_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_requested_platform_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromeManagementV1OsUpdateStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
