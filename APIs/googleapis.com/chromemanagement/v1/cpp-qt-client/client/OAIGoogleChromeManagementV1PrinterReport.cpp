/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromeManagementV1PrinterReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromeManagementV1PrinterReport::OAIGoogleChromeManagementV1PrinterReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromeManagementV1PrinterReport::OAIGoogleChromeManagementV1PrinterReport() {
    this->initializeModel();
}

OAIGoogleChromeManagementV1PrinterReport::~OAIGoogleChromeManagementV1PrinterReport() {}

void OAIGoogleChromeManagementV1PrinterReport::initializeModel() {

    m_device_count_isSet = false;
    m_device_count_isValid = false;

    m_job_count_isSet = false;
    m_job_count_isValid = false;

    m_printer_isSet = false;
    m_printer_isValid = false;

    m_printer_id_isSet = false;
    m_printer_id_isValid = false;

    m_printer_model_isSet = false;
    m_printer_model_isValid = false;

    m_user_count_isSet = false;
    m_user_count_isValid = false;
}

void OAIGoogleChromeManagementV1PrinterReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromeManagementV1PrinterReport::fromJsonObject(QJsonObject json) {

    m_device_count_isValid = ::OpenAPI::fromJsonValue(m_device_count, json[QString("deviceCount")]);
    m_device_count_isSet = !json[QString("deviceCount")].isNull() && m_device_count_isValid;

    m_job_count_isValid = ::OpenAPI::fromJsonValue(m_job_count, json[QString("jobCount")]);
    m_job_count_isSet = !json[QString("jobCount")].isNull() && m_job_count_isValid;

    m_printer_isValid = ::OpenAPI::fromJsonValue(m_printer, json[QString("printer")]);
    m_printer_isSet = !json[QString("printer")].isNull() && m_printer_isValid;

    m_printer_id_isValid = ::OpenAPI::fromJsonValue(m_printer_id, json[QString("printerId")]);
    m_printer_id_isSet = !json[QString("printerId")].isNull() && m_printer_id_isValid;

    m_printer_model_isValid = ::OpenAPI::fromJsonValue(m_printer_model, json[QString("printerModel")]);
    m_printer_model_isSet = !json[QString("printerModel")].isNull() && m_printer_model_isValid;

    m_user_count_isValid = ::OpenAPI::fromJsonValue(m_user_count, json[QString("userCount")]);
    m_user_count_isSet = !json[QString("userCount")].isNull() && m_user_count_isValid;
}

QString OAIGoogleChromeManagementV1PrinterReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromeManagementV1PrinterReport::asJsonObject() const {
    QJsonObject obj;
    if (m_device_count_isSet) {
        obj.insert(QString("deviceCount"), ::OpenAPI::toJsonValue(m_device_count));
    }
    if (m_job_count_isSet) {
        obj.insert(QString("jobCount"), ::OpenAPI::toJsonValue(m_job_count));
    }
    if (m_printer_isSet) {
        obj.insert(QString("printer"), ::OpenAPI::toJsonValue(m_printer));
    }
    if (m_printer_id_isSet) {
        obj.insert(QString("printerId"), ::OpenAPI::toJsonValue(m_printer_id));
    }
    if (m_printer_model_isSet) {
        obj.insert(QString("printerModel"), ::OpenAPI::toJsonValue(m_printer_model));
    }
    if (m_user_count_isSet) {
        obj.insert(QString("userCount"), ::OpenAPI::toJsonValue(m_user_count));
    }
    return obj;
}

QString OAIGoogleChromeManagementV1PrinterReport::getDeviceCount() const {
    return m_device_count;
}
void OAIGoogleChromeManagementV1PrinterReport::setDeviceCount(const QString &device_count) {
    m_device_count = device_count;
    m_device_count_isSet = true;
}

bool OAIGoogleChromeManagementV1PrinterReport::is_device_count_Set() const{
    return m_device_count_isSet;
}

bool OAIGoogleChromeManagementV1PrinterReport::is_device_count_Valid() const{
    return m_device_count_isValid;
}

QString OAIGoogleChromeManagementV1PrinterReport::getJobCount() const {
    return m_job_count;
}
void OAIGoogleChromeManagementV1PrinterReport::setJobCount(const QString &job_count) {
    m_job_count = job_count;
    m_job_count_isSet = true;
}

bool OAIGoogleChromeManagementV1PrinterReport::is_job_count_Set() const{
    return m_job_count_isSet;
}

bool OAIGoogleChromeManagementV1PrinterReport::is_job_count_Valid() const{
    return m_job_count_isValid;
}

QString OAIGoogleChromeManagementV1PrinterReport::getPrinter() const {
    return m_printer;
}
void OAIGoogleChromeManagementV1PrinterReport::setPrinter(const QString &printer) {
    m_printer = printer;
    m_printer_isSet = true;
}

bool OAIGoogleChromeManagementV1PrinterReport::is_printer_Set() const{
    return m_printer_isSet;
}

bool OAIGoogleChromeManagementV1PrinterReport::is_printer_Valid() const{
    return m_printer_isValid;
}

QString OAIGoogleChromeManagementV1PrinterReport::getPrinterId() const {
    return m_printer_id;
}
void OAIGoogleChromeManagementV1PrinterReport::setPrinterId(const QString &printer_id) {
    m_printer_id = printer_id;
    m_printer_id_isSet = true;
}

bool OAIGoogleChromeManagementV1PrinterReport::is_printer_id_Set() const{
    return m_printer_id_isSet;
}

bool OAIGoogleChromeManagementV1PrinterReport::is_printer_id_Valid() const{
    return m_printer_id_isValid;
}

QString OAIGoogleChromeManagementV1PrinterReport::getPrinterModel() const {
    return m_printer_model;
}
void OAIGoogleChromeManagementV1PrinterReport::setPrinterModel(const QString &printer_model) {
    m_printer_model = printer_model;
    m_printer_model_isSet = true;
}

bool OAIGoogleChromeManagementV1PrinterReport::is_printer_model_Set() const{
    return m_printer_model_isSet;
}

bool OAIGoogleChromeManagementV1PrinterReport::is_printer_model_Valid() const{
    return m_printer_model_isValid;
}

QString OAIGoogleChromeManagementV1PrinterReport::getUserCount() const {
    return m_user_count;
}
void OAIGoogleChromeManagementV1PrinterReport::setUserCount(const QString &user_count) {
    m_user_count = user_count;
    m_user_count_isSet = true;
}

bool OAIGoogleChromeManagementV1PrinterReport::is_user_count_Set() const{
    return m_user_count_isSet;
}

bool OAIGoogleChromeManagementV1PrinterReport::is_user_count_Valid() const{
    return m_user_count_isValid;
}

bool OAIGoogleChromeManagementV1PrinterReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_device_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_printer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_printer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_printer_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromeManagementV1PrinterReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
