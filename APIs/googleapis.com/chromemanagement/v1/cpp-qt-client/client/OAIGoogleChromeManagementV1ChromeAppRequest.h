/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1ChromeAppRequest.h
 *
 * Details of an app installation request.
 */

#ifndef OAIGoogleChromeManagementV1ChromeAppRequest_H
#define OAIGoogleChromeManagementV1ChromeAppRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleChromeManagementV1ChromeAppRequest : public OAIObject {
public:
    OAIGoogleChromeManagementV1ChromeAppRequest();
    OAIGoogleChromeManagementV1ChromeAppRequest(QString json);
    ~OAIGoogleChromeManagementV1ChromeAppRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppDetails() const;
    void setAppDetails(const QString &app_details);
    bool is_app_details_Set() const;
    bool is_app_details_Valid() const;

    QString getAppId() const;
    void setAppId(const QString &app_id);
    bool is_app_id_Set() const;
    bool is_app_id_Valid() const;

    QString getDetailUri() const;
    void setDetailUri(const QString &detail_uri);
    bool is_detail_uri_Set() const;
    bool is_detail_uri_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getIconUri() const;
    void setIconUri(const QString &icon_uri);
    bool is_icon_uri_Set() const;
    bool is_icon_uri_Valid() const;

    QString getLatestRequestTime() const;
    void setLatestRequestTime(const QString &latest_request_time);
    bool is_latest_request_time_Set() const;
    bool is_latest_request_time_Valid() const;

    QString getRequestCount() const;
    void setRequestCount(const QString &request_count);
    bool is_request_count_Set() const;
    bool is_request_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_details;
    bool m_app_details_isSet;
    bool m_app_details_isValid;

    QString m_app_id;
    bool m_app_id_isSet;
    bool m_app_id_isValid;

    QString m_detail_uri;
    bool m_detail_uri_isSet;
    bool m_detail_uri_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_icon_uri;
    bool m_icon_uri_isSet;
    bool m_icon_uri_isValid;

    QString m_latest_request_time;
    bool m_latest_request_time_isSet;
    bool m_latest_request_time_isValid;

    QString m_request_count;
    bool m_request_count_isSet;
    bool m_request_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1ChromeAppRequest)

#endif // OAIGoogleChromeManagementV1ChromeAppRequest_H
