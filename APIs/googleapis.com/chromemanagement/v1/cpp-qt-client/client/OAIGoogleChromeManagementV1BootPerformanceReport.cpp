/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromeManagementV1BootPerformanceReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromeManagementV1BootPerformanceReport::OAIGoogleChromeManagementV1BootPerformanceReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromeManagementV1BootPerformanceReport::OAIGoogleChromeManagementV1BootPerformanceReport() {
    this->initializeModel();
}

OAIGoogleChromeManagementV1BootPerformanceReport::~OAIGoogleChromeManagementV1BootPerformanceReport() {}

void OAIGoogleChromeManagementV1BootPerformanceReport::initializeModel() {

    m_boot_up_duration_isSet = false;
    m_boot_up_duration_isValid = false;

    m_boot_up_time_isSet = false;
    m_boot_up_time_isValid = false;

    m_report_time_isSet = false;
    m_report_time_isValid = false;

    m_shutdown_duration_isSet = false;
    m_shutdown_duration_isValid = false;

    m_shutdown_reason_isSet = false;
    m_shutdown_reason_isValid = false;

    m_shutdown_time_isSet = false;
    m_shutdown_time_isValid = false;
}

void OAIGoogleChromeManagementV1BootPerformanceReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromeManagementV1BootPerformanceReport::fromJsonObject(QJsonObject json) {

    m_boot_up_duration_isValid = ::OpenAPI::fromJsonValue(m_boot_up_duration, json[QString("bootUpDuration")]);
    m_boot_up_duration_isSet = !json[QString("bootUpDuration")].isNull() && m_boot_up_duration_isValid;

    m_boot_up_time_isValid = ::OpenAPI::fromJsonValue(m_boot_up_time, json[QString("bootUpTime")]);
    m_boot_up_time_isSet = !json[QString("bootUpTime")].isNull() && m_boot_up_time_isValid;

    m_report_time_isValid = ::OpenAPI::fromJsonValue(m_report_time, json[QString("reportTime")]);
    m_report_time_isSet = !json[QString("reportTime")].isNull() && m_report_time_isValid;

    m_shutdown_duration_isValid = ::OpenAPI::fromJsonValue(m_shutdown_duration, json[QString("shutdownDuration")]);
    m_shutdown_duration_isSet = !json[QString("shutdownDuration")].isNull() && m_shutdown_duration_isValid;

    m_shutdown_reason_isValid = ::OpenAPI::fromJsonValue(m_shutdown_reason, json[QString("shutdownReason")]);
    m_shutdown_reason_isSet = !json[QString("shutdownReason")].isNull() && m_shutdown_reason_isValid;

    m_shutdown_time_isValid = ::OpenAPI::fromJsonValue(m_shutdown_time, json[QString("shutdownTime")]);
    m_shutdown_time_isSet = !json[QString("shutdownTime")].isNull() && m_shutdown_time_isValid;
}

QString OAIGoogleChromeManagementV1BootPerformanceReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromeManagementV1BootPerformanceReport::asJsonObject() const {
    QJsonObject obj;
    if (m_boot_up_duration_isSet) {
        obj.insert(QString("bootUpDuration"), ::OpenAPI::toJsonValue(m_boot_up_duration));
    }
    if (m_boot_up_time_isSet) {
        obj.insert(QString("bootUpTime"), ::OpenAPI::toJsonValue(m_boot_up_time));
    }
    if (m_report_time_isSet) {
        obj.insert(QString("reportTime"), ::OpenAPI::toJsonValue(m_report_time));
    }
    if (m_shutdown_duration_isSet) {
        obj.insert(QString("shutdownDuration"), ::OpenAPI::toJsonValue(m_shutdown_duration));
    }
    if (m_shutdown_reason_isSet) {
        obj.insert(QString("shutdownReason"), ::OpenAPI::toJsonValue(m_shutdown_reason));
    }
    if (m_shutdown_time_isSet) {
        obj.insert(QString("shutdownTime"), ::OpenAPI::toJsonValue(m_shutdown_time));
    }
    return obj;
}

QString OAIGoogleChromeManagementV1BootPerformanceReport::getBootUpDuration() const {
    return m_boot_up_duration;
}
void OAIGoogleChromeManagementV1BootPerformanceReport::setBootUpDuration(const QString &boot_up_duration) {
    m_boot_up_duration = boot_up_duration;
    m_boot_up_duration_isSet = true;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::is_boot_up_duration_Set() const{
    return m_boot_up_duration_isSet;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::is_boot_up_duration_Valid() const{
    return m_boot_up_duration_isValid;
}

QString OAIGoogleChromeManagementV1BootPerformanceReport::getBootUpTime() const {
    return m_boot_up_time;
}
void OAIGoogleChromeManagementV1BootPerformanceReport::setBootUpTime(const QString &boot_up_time) {
    m_boot_up_time = boot_up_time;
    m_boot_up_time_isSet = true;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::is_boot_up_time_Set() const{
    return m_boot_up_time_isSet;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::is_boot_up_time_Valid() const{
    return m_boot_up_time_isValid;
}

QString OAIGoogleChromeManagementV1BootPerformanceReport::getReportTime() const {
    return m_report_time;
}
void OAIGoogleChromeManagementV1BootPerformanceReport::setReportTime(const QString &report_time) {
    m_report_time = report_time;
    m_report_time_isSet = true;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::is_report_time_Set() const{
    return m_report_time_isSet;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::is_report_time_Valid() const{
    return m_report_time_isValid;
}

QString OAIGoogleChromeManagementV1BootPerformanceReport::getShutdownDuration() const {
    return m_shutdown_duration;
}
void OAIGoogleChromeManagementV1BootPerformanceReport::setShutdownDuration(const QString &shutdown_duration) {
    m_shutdown_duration = shutdown_duration;
    m_shutdown_duration_isSet = true;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::is_shutdown_duration_Set() const{
    return m_shutdown_duration_isSet;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::is_shutdown_duration_Valid() const{
    return m_shutdown_duration_isValid;
}

QString OAIGoogleChromeManagementV1BootPerformanceReport::getShutdownReason() const {
    return m_shutdown_reason;
}
void OAIGoogleChromeManagementV1BootPerformanceReport::setShutdownReason(const QString &shutdown_reason) {
    m_shutdown_reason = shutdown_reason;
    m_shutdown_reason_isSet = true;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::is_shutdown_reason_Set() const{
    return m_shutdown_reason_isSet;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::is_shutdown_reason_Valid() const{
    return m_shutdown_reason_isValid;
}

QString OAIGoogleChromeManagementV1BootPerformanceReport::getShutdownTime() const {
    return m_shutdown_time;
}
void OAIGoogleChromeManagementV1BootPerformanceReport::setShutdownTime(const QString &shutdown_time) {
    m_shutdown_time = shutdown_time;
    m_shutdown_time_isSet = true;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::is_shutdown_time_Set() const{
    return m_shutdown_time_isSet;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::is_shutdown_time_Valid() const{
    return m_shutdown_time_isValid;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_boot_up_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_boot_up_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shutdown_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shutdown_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shutdown_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromeManagementV1BootPerformanceReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
