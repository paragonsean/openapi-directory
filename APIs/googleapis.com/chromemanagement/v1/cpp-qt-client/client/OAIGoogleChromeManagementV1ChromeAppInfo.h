/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1ChromeAppInfo.h
 *
 * Chrome Web Store app information.
 */

#ifndef OAIGoogleChromeManagementV1ChromeAppInfo_H
#define OAIGoogleChromeManagementV1ChromeAppInfo_H

#include <QJsonObject>

#include "OAIGoogleChromeManagementV1ChromeAppPermission.h"
#include "OAIGoogleChromeManagementV1ChromeAppSiteAccess.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromeManagementV1ChromeAppPermission;
class OAIGoogleChromeManagementV1ChromeAppSiteAccess;

class OAIGoogleChromeManagementV1ChromeAppInfo : public OAIObject {
public:
    OAIGoogleChromeManagementV1ChromeAppInfo();
    OAIGoogleChromeManagementV1ChromeAppInfo(QString json);
    ~OAIGoogleChromeManagementV1ChromeAppInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isGoogleOwned() const;
    void setGoogleOwned(const bool &google_owned);
    bool is_google_owned_Set() const;
    bool is_google_owned_Valid() const;

    bool isIsCwsHosted() const;
    void setIsCwsHosted(const bool &is_cws_hosted);
    bool is_is_cws_hosted_Set() const;
    bool is_is_cws_hosted_Valid() const;

    bool isIsExtensionPolicySupported() const;
    void setIsExtensionPolicySupported(const bool &is_extension_policy_supported);
    bool is_is_extension_policy_supported_Set() const;
    bool is_is_extension_policy_supported_Valid() const;

    bool isIsKioskOnly() const;
    void setIsKioskOnly(const bool &is_kiosk_only);
    bool is_is_kiosk_only_Set() const;
    bool is_is_kiosk_only_Valid() const;

    bool isIsTheme() const;
    void setIsTheme(const bool &is_theme);
    bool is_is_theme_Set() const;
    bool is_is_theme_Valid() const;

    bool isKioskEnabled() const;
    void setKioskEnabled(const bool &kiosk_enabled);
    bool is_kiosk_enabled_Set() const;
    bool is_kiosk_enabled_Valid() const;

    qint32 getMinUserCount() const;
    void setMinUserCount(const qint32 &min_user_count);
    bool is_min_user_count_Set() const;
    bool is_min_user_count_Valid() const;

    QList<OAIGoogleChromeManagementV1ChromeAppPermission> getPermissions() const;
    void setPermissions(const QList<OAIGoogleChromeManagementV1ChromeAppPermission> &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    QList<OAIGoogleChromeManagementV1ChromeAppSiteAccess> getSiteAccess() const;
    void setSiteAccess(const QList<OAIGoogleChromeManagementV1ChromeAppSiteAccess> &site_access);
    bool is_site_access_Set() const;
    bool is_site_access_Valid() const;

    bool isSupportEnabled() const;
    void setSupportEnabled(const bool &support_enabled);
    bool is_support_enabled_Set() const;
    bool is_support_enabled_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_google_owned;
    bool m_google_owned_isSet;
    bool m_google_owned_isValid;

    bool m_is_cws_hosted;
    bool m_is_cws_hosted_isSet;
    bool m_is_cws_hosted_isValid;

    bool m_is_extension_policy_supported;
    bool m_is_extension_policy_supported_isSet;
    bool m_is_extension_policy_supported_isValid;

    bool m_is_kiosk_only;
    bool m_is_kiosk_only_isSet;
    bool m_is_kiosk_only_isValid;

    bool m_is_theme;
    bool m_is_theme_isSet;
    bool m_is_theme_isValid;

    bool m_kiosk_enabled;
    bool m_kiosk_enabled_isSet;
    bool m_kiosk_enabled_isValid;

    qint32 m_min_user_count;
    bool m_min_user_count_isSet;
    bool m_min_user_count_isValid;

    QList<OAIGoogleChromeManagementV1ChromeAppPermission> m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    QList<OAIGoogleChromeManagementV1ChromeAppSiteAccess> m_site_access;
    bool m_site_access_isSet;
    bool m_site_access_isValid;

    bool m_support_enabled;
    bool m_support_enabled_isSet;
    bool m_support_enabled_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1ChromeAppInfo)

#endif // OAIGoogleChromeManagementV1ChromeAppInfo_H
