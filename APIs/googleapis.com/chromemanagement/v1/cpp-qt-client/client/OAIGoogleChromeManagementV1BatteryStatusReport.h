/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1BatteryStatusReport.h
 *
 * Status data for battery. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_BATTERY_REPORT
 */

#ifndef OAIGoogleChromeManagementV1BatteryStatusReport_H
#define OAIGoogleChromeManagementV1BatteryStatusReport_H

#include <QJsonObject>

#include "OAIGoogleChromeManagementV1BatterySampleReport.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromeManagementV1BatterySampleReport;

class OAIGoogleChromeManagementV1BatteryStatusReport : public OAIObject {
public:
    OAIGoogleChromeManagementV1BatteryStatusReport();
    OAIGoogleChromeManagementV1BatteryStatusReport(QString json);
    ~OAIGoogleChromeManagementV1BatteryStatusReport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBatteryHealth() const;
    void setBatteryHealth(const QString &battery_health);
    bool is_battery_health_Set() const;
    bool is_battery_health_Valid() const;

    qint32 getCycleCount() const;
    void setCycleCount(const qint32 &cycle_count);
    bool is_cycle_count_Set() const;
    bool is_cycle_count_Valid() const;

    QString getFullChargeCapacity() const;
    void setFullChargeCapacity(const QString &full_charge_capacity);
    bool is_full_charge_capacity_Set() const;
    bool is_full_charge_capacity_Valid() const;

    QString getReportTime() const;
    void setReportTime(const QString &report_time);
    bool is_report_time_Set() const;
    bool is_report_time_Valid() const;

    QList<OAIGoogleChromeManagementV1BatterySampleReport> getSample() const;
    void setSample(const QList<OAIGoogleChromeManagementV1BatterySampleReport> &sample);
    bool is_sample_Set() const;
    bool is_sample_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_battery_health;
    bool m_battery_health_isSet;
    bool m_battery_health_isValid;

    qint32 m_cycle_count;
    bool m_cycle_count_isSet;
    bool m_cycle_count_isValid;

    QString m_full_charge_capacity;
    bool m_full_charge_capacity_isSet;
    bool m_full_charge_capacity_isValid;

    QString m_report_time;
    bool m_report_time_isSet;
    bool m_report_time_isValid;

    QList<OAIGoogleChromeManagementV1BatterySampleReport> m_sample;
    bool m_sample_isSet;
    bool m_sample_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1BatteryStatusReport)

#endif // OAIGoogleChromeManagementV1BatteryStatusReport_H
