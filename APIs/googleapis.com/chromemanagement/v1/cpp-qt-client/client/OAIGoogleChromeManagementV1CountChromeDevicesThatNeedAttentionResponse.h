/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse.h
 *
 * Response containing counts for devices that need attention.
 */

#ifndef OAIGoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse_H
#define OAIGoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse : public OAIObject {
public:
    OAIGoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse();
    OAIGoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse(QString json);
    ~OAIGoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNoRecentPolicySyncCount() const;
    void setNoRecentPolicySyncCount(const QString &no_recent_policy_sync_count);
    bool is_no_recent_policy_sync_count_Set() const;
    bool is_no_recent_policy_sync_count_Valid() const;

    QString getNoRecentUserActivityCount() const;
    void setNoRecentUserActivityCount(const QString &no_recent_user_activity_count);
    bool is_no_recent_user_activity_count_Set() const;
    bool is_no_recent_user_activity_count_Valid() const;

    QString getOsVersionNotCompliantCount() const;
    void setOsVersionNotCompliantCount(const QString &os_version_not_compliant_count);
    bool is_os_version_not_compliant_count_Set() const;
    bool is_os_version_not_compliant_count_Valid() const;

    QString getPendingUpdate() const;
    void setPendingUpdate(const QString &pending_update);
    bool is_pending_update_Set() const;
    bool is_pending_update_Valid() const;

    QString getUnsupportedPolicyCount() const;
    void setUnsupportedPolicyCount(const QString &unsupported_policy_count);
    bool is_unsupported_policy_count_Set() const;
    bool is_unsupported_policy_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_no_recent_policy_sync_count;
    bool m_no_recent_policy_sync_count_isSet;
    bool m_no_recent_policy_sync_count_isValid;

    QString m_no_recent_user_activity_count;
    bool m_no_recent_user_activity_count_isSet;
    bool m_no_recent_user_activity_count_isValid;

    QString m_os_version_not_compliant_count;
    bool m_os_version_not_compliant_count_isSet;
    bool m_os_version_not_compliant_count_isValid;

    QString m_pending_update;
    bool m_pending_update_isSet;
    bool m_pending_update_isValid;

    QString m_unsupported_policy_count;
    bool m_unsupported_policy_count_isSet;
    bool m_unsupported_policy_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse)

#endif // OAIGoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse_H
