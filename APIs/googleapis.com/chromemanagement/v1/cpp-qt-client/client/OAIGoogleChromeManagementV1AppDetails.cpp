/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromeManagementV1AppDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromeManagementV1AppDetails::OAIGoogleChromeManagementV1AppDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromeManagementV1AppDetails::OAIGoogleChromeManagementV1AppDetails() {
    this->initializeModel();
}

OAIGoogleChromeManagementV1AppDetails::~OAIGoogleChromeManagementV1AppDetails() {}

void OAIGoogleChromeManagementV1AppDetails::initializeModel() {

    m_android_app_info_isSet = false;
    m_android_app_info_isValid = false;

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_chrome_app_info_isSet = false;
    m_chrome_app_info_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_detail_uri_isSet = false;
    m_detail_uri_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_first_publish_time_isSet = false;
    m_first_publish_time_isValid = false;

    m_homepage_uri_isSet = false;
    m_homepage_uri_isValid = false;

    m_icon_uri_isSet = false;
    m_icon_uri_isValid = false;

    m_is_paid_app_isSet = false;
    m_is_paid_app_isValid = false;

    m_latest_publish_time_isSet = false;
    m_latest_publish_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_privacy_policy_uri_isSet = false;
    m_privacy_policy_uri_isValid = false;

    m_publisher_isSet = false;
    m_publisher_isValid = false;

    m_review_number_isSet = false;
    m_review_number_isValid = false;

    m_review_rating_isSet = false;
    m_review_rating_isValid = false;

    m_revision_id_isSet = false;
    m_revision_id_isValid = false;

    m_service_error_isSet = false;
    m_service_error_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleChromeManagementV1AppDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromeManagementV1AppDetails::fromJsonObject(QJsonObject json) {

    m_android_app_info_isValid = ::OpenAPI::fromJsonValue(m_android_app_info, json[QString("androidAppInfo")]);
    m_android_app_info_isSet = !json[QString("androidAppInfo")].isNull() && m_android_app_info_isValid;

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("appId")]);
    m_app_id_isSet = !json[QString("appId")].isNull() && m_app_id_isValid;

    m_chrome_app_info_isValid = ::OpenAPI::fromJsonValue(m_chrome_app_info, json[QString("chromeAppInfo")]);
    m_chrome_app_info_isSet = !json[QString("chromeAppInfo")].isNull() && m_chrome_app_info_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_detail_uri_isValid = ::OpenAPI::fromJsonValue(m_detail_uri, json[QString("detailUri")]);
    m_detail_uri_isSet = !json[QString("detailUri")].isNull() && m_detail_uri_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_first_publish_time_isValid = ::OpenAPI::fromJsonValue(m_first_publish_time, json[QString("firstPublishTime")]);
    m_first_publish_time_isSet = !json[QString("firstPublishTime")].isNull() && m_first_publish_time_isValid;

    m_homepage_uri_isValid = ::OpenAPI::fromJsonValue(m_homepage_uri, json[QString("homepageUri")]);
    m_homepage_uri_isSet = !json[QString("homepageUri")].isNull() && m_homepage_uri_isValid;

    m_icon_uri_isValid = ::OpenAPI::fromJsonValue(m_icon_uri, json[QString("iconUri")]);
    m_icon_uri_isSet = !json[QString("iconUri")].isNull() && m_icon_uri_isValid;

    m_is_paid_app_isValid = ::OpenAPI::fromJsonValue(m_is_paid_app, json[QString("isPaidApp")]);
    m_is_paid_app_isSet = !json[QString("isPaidApp")].isNull() && m_is_paid_app_isValid;

    m_latest_publish_time_isValid = ::OpenAPI::fromJsonValue(m_latest_publish_time, json[QString("latestPublishTime")]);
    m_latest_publish_time_isSet = !json[QString("latestPublishTime")].isNull() && m_latest_publish_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_privacy_policy_uri_isValid = ::OpenAPI::fromJsonValue(m_privacy_policy_uri, json[QString("privacyPolicyUri")]);
    m_privacy_policy_uri_isSet = !json[QString("privacyPolicyUri")].isNull() && m_privacy_policy_uri_isValid;

    m_publisher_isValid = ::OpenAPI::fromJsonValue(m_publisher, json[QString("publisher")]);
    m_publisher_isSet = !json[QString("publisher")].isNull() && m_publisher_isValid;

    m_review_number_isValid = ::OpenAPI::fromJsonValue(m_review_number, json[QString("reviewNumber")]);
    m_review_number_isSet = !json[QString("reviewNumber")].isNull() && m_review_number_isValid;

    m_review_rating_isValid = ::OpenAPI::fromJsonValue(m_review_rating, json[QString("reviewRating")]);
    m_review_rating_isSet = !json[QString("reviewRating")].isNull() && m_review_rating_isValid;

    m_revision_id_isValid = ::OpenAPI::fromJsonValue(m_revision_id, json[QString("revisionId")]);
    m_revision_id_isSet = !json[QString("revisionId")].isNull() && m_revision_id_isValid;

    m_service_error_isValid = ::OpenAPI::fromJsonValue(m_service_error, json[QString("serviceError")]);
    m_service_error_isSet = !json[QString("serviceError")].isNull() && m_service_error_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromeManagementV1AppDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_android_app_info.isSet()) {
        obj.insert(QString("androidAppInfo"), ::OpenAPI::toJsonValue(m_android_app_info));
    }
    if (m_app_id_isSet) {
        obj.insert(QString("appId"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_chrome_app_info.isSet()) {
        obj.insert(QString("chromeAppInfo"), ::OpenAPI::toJsonValue(m_chrome_app_info));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_detail_uri_isSet) {
        obj.insert(QString("detailUri"), ::OpenAPI::toJsonValue(m_detail_uri));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_first_publish_time_isSet) {
        obj.insert(QString("firstPublishTime"), ::OpenAPI::toJsonValue(m_first_publish_time));
    }
    if (m_homepage_uri_isSet) {
        obj.insert(QString("homepageUri"), ::OpenAPI::toJsonValue(m_homepage_uri));
    }
    if (m_icon_uri_isSet) {
        obj.insert(QString("iconUri"), ::OpenAPI::toJsonValue(m_icon_uri));
    }
    if (m_is_paid_app_isSet) {
        obj.insert(QString("isPaidApp"), ::OpenAPI::toJsonValue(m_is_paid_app));
    }
    if (m_latest_publish_time_isSet) {
        obj.insert(QString("latestPublishTime"), ::OpenAPI::toJsonValue(m_latest_publish_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_privacy_policy_uri_isSet) {
        obj.insert(QString("privacyPolicyUri"), ::OpenAPI::toJsonValue(m_privacy_policy_uri));
    }
    if (m_publisher_isSet) {
        obj.insert(QString("publisher"), ::OpenAPI::toJsonValue(m_publisher));
    }
    if (m_review_number_isSet) {
        obj.insert(QString("reviewNumber"), ::OpenAPI::toJsonValue(m_review_number));
    }
    if (m_review_rating_isSet) {
        obj.insert(QString("reviewRating"), ::OpenAPI::toJsonValue(m_review_rating));
    }
    if (m_revision_id_isSet) {
        obj.insert(QString("revisionId"), ::OpenAPI::toJsonValue(m_revision_id));
    }
    if (m_service_error.isSet()) {
        obj.insert(QString("serviceError"), ::OpenAPI::toJsonValue(m_service_error));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIGoogleChromeManagementV1AndroidAppInfo OAIGoogleChromeManagementV1AppDetails::getAndroidAppInfo() const {
    return m_android_app_info;
}
void OAIGoogleChromeManagementV1AppDetails::setAndroidAppInfo(const OAIGoogleChromeManagementV1AndroidAppInfo &android_app_info) {
    m_android_app_info = android_app_info;
    m_android_app_info_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_android_app_info_Set() const{
    return m_android_app_info_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_android_app_info_Valid() const{
    return m_android_app_info_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getAppId() const {
    return m_app_id;
}
void OAIGoogleChromeManagementV1AppDetails::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_app_id_Valid() const{
    return m_app_id_isValid;
}

OAIGoogleChromeManagementV1ChromeAppInfo OAIGoogleChromeManagementV1AppDetails::getChromeAppInfo() const {
    return m_chrome_app_info;
}
void OAIGoogleChromeManagementV1AppDetails::setChromeAppInfo(const OAIGoogleChromeManagementV1ChromeAppInfo &chrome_app_info) {
    m_chrome_app_info = chrome_app_info;
    m_chrome_app_info_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_chrome_app_info_Set() const{
    return m_chrome_app_info_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_chrome_app_info_Valid() const{
    return m_chrome_app_info_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getDescription() const {
    return m_description;
}
void OAIGoogleChromeManagementV1AppDetails::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getDetailUri() const {
    return m_detail_uri;
}
void OAIGoogleChromeManagementV1AppDetails::setDetailUri(const QString &detail_uri) {
    m_detail_uri = detail_uri;
    m_detail_uri_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_detail_uri_Set() const{
    return m_detail_uri_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_detail_uri_Valid() const{
    return m_detail_uri_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleChromeManagementV1AppDetails::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getFirstPublishTime() const {
    return m_first_publish_time;
}
void OAIGoogleChromeManagementV1AppDetails::setFirstPublishTime(const QString &first_publish_time) {
    m_first_publish_time = first_publish_time;
    m_first_publish_time_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_first_publish_time_Set() const{
    return m_first_publish_time_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_first_publish_time_Valid() const{
    return m_first_publish_time_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getHomepageUri() const {
    return m_homepage_uri;
}
void OAIGoogleChromeManagementV1AppDetails::setHomepageUri(const QString &homepage_uri) {
    m_homepage_uri = homepage_uri;
    m_homepage_uri_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_homepage_uri_Set() const{
    return m_homepage_uri_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_homepage_uri_Valid() const{
    return m_homepage_uri_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getIconUri() const {
    return m_icon_uri;
}
void OAIGoogleChromeManagementV1AppDetails::setIconUri(const QString &icon_uri) {
    m_icon_uri = icon_uri;
    m_icon_uri_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_icon_uri_Set() const{
    return m_icon_uri_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_icon_uri_Valid() const{
    return m_icon_uri_isValid;
}

bool OAIGoogleChromeManagementV1AppDetails::isIsPaidApp() const {
    return m_is_paid_app;
}
void OAIGoogleChromeManagementV1AppDetails::setIsPaidApp(const bool &is_paid_app) {
    m_is_paid_app = is_paid_app;
    m_is_paid_app_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_is_paid_app_Set() const{
    return m_is_paid_app_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_is_paid_app_Valid() const{
    return m_is_paid_app_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getLatestPublishTime() const {
    return m_latest_publish_time;
}
void OAIGoogleChromeManagementV1AppDetails::setLatestPublishTime(const QString &latest_publish_time) {
    m_latest_publish_time = latest_publish_time;
    m_latest_publish_time_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_latest_publish_time_Set() const{
    return m_latest_publish_time_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_latest_publish_time_Valid() const{
    return m_latest_publish_time_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getName() const {
    return m_name;
}
void OAIGoogleChromeManagementV1AppDetails::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getPrivacyPolicyUri() const {
    return m_privacy_policy_uri;
}
void OAIGoogleChromeManagementV1AppDetails::setPrivacyPolicyUri(const QString &privacy_policy_uri) {
    m_privacy_policy_uri = privacy_policy_uri;
    m_privacy_policy_uri_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_privacy_policy_uri_Set() const{
    return m_privacy_policy_uri_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_privacy_policy_uri_Valid() const{
    return m_privacy_policy_uri_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getPublisher() const {
    return m_publisher;
}
void OAIGoogleChromeManagementV1AppDetails::setPublisher(const QString &publisher) {
    m_publisher = publisher;
    m_publisher_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_publisher_Set() const{
    return m_publisher_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_publisher_Valid() const{
    return m_publisher_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getReviewNumber() const {
    return m_review_number;
}
void OAIGoogleChromeManagementV1AppDetails::setReviewNumber(const QString &review_number) {
    m_review_number = review_number;
    m_review_number_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_review_number_Set() const{
    return m_review_number_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_review_number_Valid() const{
    return m_review_number_isValid;
}

float OAIGoogleChromeManagementV1AppDetails::getReviewRating() const {
    return m_review_rating;
}
void OAIGoogleChromeManagementV1AppDetails::setReviewRating(const float &review_rating) {
    m_review_rating = review_rating;
    m_review_rating_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_review_rating_Set() const{
    return m_review_rating_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_review_rating_Valid() const{
    return m_review_rating_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getRevisionId() const {
    return m_revision_id;
}
void OAIGoogleChromeManagementV1AppDetails::setRevisionId(const QString &revision_id) {
    m_revision_id = revision_id;
    m_revision_id_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_revision_id_Set() const{
    return m_revision_id_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_revision_id_Valid() const{
    return m_revision_id_isValid;
}

OAIGoogleRpcStatus OAIGoogleChromeManagementV1AppDetails::getServiceError() const {
    return m_service_error;
}
void OAIGoogleChromeManagementV1AppDetails::setServiceError(const OAIGoogleRpcStatus &service_error) {
    m_service_error = service_error;
    m_service_error_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_service_error_Set() const{
    return m_service_error_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_service_error_Valid() const{
    return m_service_error_isValid;
}

QString OAIGoogleChromeManagementV1AppDetails::getType() const {
    return m_type;
}
void OAIGoogleChromeManagementV1AppDetails::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleChromeManagementV1AppDetails::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleChromeManagementV1AppDetails::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleChromeManagementV1AppDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_android_app_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_chrome_app_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_detail_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_publish_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_homepage_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_icon_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_paid_app_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_publish_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_privacy_policy_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_review_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_review_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromeManagementV1AppDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
