/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1CpuTemperatureInfo.h
 *
 * CPU temperature of a device. Sampled per CPU core in Celsius. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Every 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A
 */

#ifndef OAIGoogleChromeManagementV1CpuTemperatureInfo_H
#define OAIGoogleChromeManagementV1CpuTemperatureInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleChromeManagementV1CpuTemperatureInfo : public OAIObject {
public:
    OAIGoogleChromeManagementV1CpuTemperatureInfo();
    OAIGoogleChromeManagementV1CpuTemperatureInfo(QString json);
    ~OAIGoogleChromeManagementV1CpuTemperatureInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    qint32 getTemperatureCelsius() const;
    void setTemperatureCelsius(const qint32 &temperature_celsius);
    bool is_temperature_celsius_Set() const;
    bool is_temperature_celsius_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    qint32 m_temperature_celsius;
    bool m_temperature_celsius_isSet;
    bool m_temperature_celsius_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1CpuTemperatureInfo)

#endif // OAIGoogleChromeManagementV1CpuTemperatureInfo_H
