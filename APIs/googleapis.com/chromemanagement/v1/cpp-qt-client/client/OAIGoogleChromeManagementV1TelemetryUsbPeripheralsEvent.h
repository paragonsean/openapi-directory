/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1TelemetryUsbPeripheralsEvent.h
 *
 * &#x60;TelemetryUsbPeripheralsEvent&#x60; is triggered USB devices are either added or removed. * Granular permission needed: TELEMETRY_API_PERIPHERALS_REPORT
 */

#ifndef OAIGoogleChromeManagementV1TelemetryUsbPeripheralsEvent_H
#define OAIGoogleChromeManagementV1TelemetryUsbPeripheralsEvent_H

#include <QJsonObject>

#include "OAIGoogleChromeManagementV1UsbPeripheralReport.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromeManagementV1UsbPeripheralReport;

class OAIGoogleChromeManagementV1TelemetryUsbPeripheralsEvent : public OAIObject {
public:
    OAIGoogleChromeManagementV1TelemetryUsbPeripheralsEvent();
    OAIGoogleChromeManagementV1TelemetryUsbPeripheralsEvent(QString json);
    ~OAIGoogleChromeManagementV1TelemetryUsbPeripheralsEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleChromeManagementV1UsbPeripheralReport> getUsbPeripheralReport() const;
    void setUsbPeripheralReport(const QList<OAIGoogleChromeManagementV1UsbPeripheralReport> &usb_peripheral_report);
    bool is_usb_peripheral_report_Set() const;
    bool is_usb_peripheral_report_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleChromeManagementV1UsbPeripheralReport> m_usb_peripheral_report;
    bool m_usb_peripheral_report_isSet;
    bool m_usb_peripheral_report_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1TelemetryUsbPeripheralsEvent)

#endif // OAIGoogleChromeManagementV1TelemetryUsbPeripheralsEvent_H
