/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1TouchScreenDevice.h
 *
 * Information of an internal touch screen device.
 */

#ifndef OAIGoogleChromeManagementV1TouchScreenDevice_H
#define OAIGoogleChromeManagementV1TouchScreenDevice_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleChromeManagementV1TouchScreenDevice : public OAIObject {
public:
    OAIGoogleChromeManagementV1TouchScreenDevice();
    OAIGoogleChromeManagementV1TouchScreenDevice(QString json);
    ~OAIGoogleChromeManagementV1TouchScreenDevice() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    bool isStylusCapable() const;
    void setStylusCapable(const bool &stylus_capable);
    bool is_stylus_capable_Set() const;
    bool is_stylus_capable_Valid() const;

    qint32 getTouchPointCount() const;
    void setTouchPointCount(const qint32 &touch_point_count);
    bool is_touch_point_count_Set() const;
    bool is_touch_point_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    bool m_stylus_capable;
    bool m_stylus_capable_isSet;
    bool m_stylus_capable_isValid;

    qint32 m_touch_point_count;
    bool m_touch_point_count_isSet;
    bool m_touch_point_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1TouchScreenDevice)

#endif // OAIGoogleChromeManagementV1TouchScreenDevice_H
