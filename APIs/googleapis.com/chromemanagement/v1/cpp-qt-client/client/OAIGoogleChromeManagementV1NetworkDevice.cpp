/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromeManagementV1NetworkDevice.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromeManagementV1NetworkDevice::OAIGoogleChromeManagementV1NetworkDevice(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromeManagementV1NetworkDevice::OAIGoogleChromeManagementV1NetworkDevice() {
    this->initializeModel();
}

OAIGoogleChromeManagementV1NetworkDevice::~OAIGoogleChromeManagementV1NetworkDevice() {}

void OAIGoogleChromeManagementV1NetworkDevice::initializeModel() {

    m_iccid_isSet = false;
    m_iccid_isValid = false;

    m_imei_isSet = false;
    m_imei_isValid = false;

    m_mac_address_isSet = false;
    m_mac_address_isValid = false;

    m_mdn_isSet = false;
    m_mdn_isValid = false;

    m_meid_isSet = false;
    m_meid_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleChromeManagementV1NetworkDevice::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromeManagementV1NetworkDevice::fromJsonObject(QJsonObject json) {

    m_iccid_isValid = ::OpenAPI::fromJsonValue(m_iccid, json[QString("iccid")]);
    m_iccid_isSet = !json[QString("iccid")].isNull() && m_iccid_isValid;

    m_imei_isValid = ::OpenAPI::fromJsonValue(m_imei, json[QString("imei")]);
    m_imei_isSet = !json[QString("imei")].isNull() && m_imei_isValid;

    m_mac_address_isValid = ::OpenAPI::fromJsonValue(m_mac_address, json[QString("macAddress")]);
    m_mac_address_isSet = !json[QString("macAddress")].isNull() && m_mac_address_isValid;

    m_mdn_isValid = ::OpenAPI::fromJsonValue(m_mdn, json[QString("mdn")]);
    m_mdn_isSet = !json[QString("mdn")].isNull() && m_mdn_isValid;

    m_meid_isValid = ::OpenAPI::fromJsonValue(m_meid, json[QString("meid")]);
    m_meid_isSet = !json[QString("meid")].isNull() && m_meid_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleChromeManagementV1NetworkDevice::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromeManagementV1NetworkDevice::asJsonObject() const {
    QJsonObject obj;
    if (m_iccid_isSet) {
        obj.insert(QString("iccid"), ::OpenAPI::toJsonValue(m_iccid));
    }
    if (m_imei_isSet) {
        obj.insert(QString("imei"), ::OpenAPI::toJsonValue(m_imei));
    }
    if (m_mac_address_isSet) {
        obj.insert(QString("macAddress"), ::OpenAPI::toJsonValue(m_mac_address));
    }
    if (m_mdn_isSet) {
        obj.insert(QString("mdn"), ::OpenAPI::toJsonValue(m_mdn));
    }
    if (m_meid_isSet) {
        obj.insert(QString("meid"), ::OpenAPI::toJsonValue(m_meid));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIGoogleChromeManagementV1NetworkDevice::getIccid() const {
    return m_iccid;
}
void OAIGoogleChromeManagementV1NetworkDevice::setIccid(const QString &iccid) {
    m_iccid = iccid;
    m_iccid_isSet = true;
}

bool OAIGoogleChromeManagementV1NetworkDevice::is_iccid_Set() const{
    return m_iccid_isSet;
}

bool OAIGoogleChromeManagementV1NetworkDevice::is_iccid_Valid() const{
    return m_iccid_isValid;
}

QString OAIGoogleChromeManagementV1NetworkDevice::getImei() const {
    return m_imei;
}
void OAIGoogleChromeManagementV1NetworkDevice::setImei(const QString &imei) {
    m_imei = imei;
    m_imei_isSet = true;
}

bool OAIGoogleChromeManagementV1NetworkDevice::is_imei_Set() const{
    return m_imei_isSet;
}

bool OAIGoogleChromeManagementV1NetworkDevice::is_imei_Valid() const{
    return m_imei_isValid;
}

QString OAIGoogleChromeManagementV1NetworkDevice::getMacAddress() const {
    return m_mac_address;
}
void OAIGoogleChromeManagementV1NetworkDevice::setMacAddress(const QString &mac_address) {
    m_mac_address = mac_address;
    m_mac_address_isSet = true;
}

bool OAIGoogleChromeManagementV1NetworkDevice::is_mac_address_Set() const{
    return m_mac_address_isSet;
}

bool OAIGoogleChromeManagementV1NetworkDevice::is_mac_address_Valid() const{
    return m_mac_address_isValid;
}

QString OAIGoogleChromeManagementV1NetworkDevice::getMdn() const {
    return m_mdn;
}
void OAIGoogleChromeManagementV1NetworkDevice::setMdn(const QString &mdn) {
    m_mdn = mdn;
    m_mdn_isSet = true;
}

bool OAIGoogleChromeManagementV1NetworkDevice::is_mdn_Set() const{
    return m_mdn_isSet;
}

bool OAIGoogleChromeManagementV1NetworkDevice::is_mdn_Valid() const{
    return m_mdn_isValid;
}

QString OAIGoogleChromeManagementV1NetworkDevice::getMeid() const {
    return m_meid;
}
void OAIGoogleChromeManagementV1NetworkDevice::setMeid(const QString &meid) {
    m_meid = meid;
    m_meid_isSet = true;
}

bool OAIGoogleChromeManagementV1NetworkDevice::is_meid_Set() const{
    return m_meid_isSet;
}

bool OAIGoogleChromeManagementV1NetworkDevice::is_meid_Valid() const{
    return m_meid_isValid;
}

QString OAIGoogleChromeManagementV1NetworkDevice::getType() const {
    return m_type;
}
void OAIGoogleChromeManagementV1NetworkDevice::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleChromeManagementV1NetworkDevice::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleChromeManagementV1NetworkDevice::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleChromeManagementV1NetworkDevice::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_iccid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_imei_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mac_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mdn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_meid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromeManagementV1NetworkDevice::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
