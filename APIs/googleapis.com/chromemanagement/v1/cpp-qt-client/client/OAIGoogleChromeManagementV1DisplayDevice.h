/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1DisplayDevice.h
 *
 * Information of a display device.
 */

#ifndef OAIGoogleChromeManagementV1DisplayDevice_H
#define OAIGoogleChromeManagementV1DisplayDevice_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleChromeManagementV1DisplayDevice : public OAIObject {
public:
    OAIGoogleChromeManagementV1DisplayDevice();
    OAIGoogleChromeManagementV1DisplayDevice(QString json);
    ~OAIGoogleChromeManagementV1DisplayDevice() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDisplayHeightMm() const;
    void setDisplayHeightMm(const qint32 &display_height_mm);
    bool is_display_height_mm_Set() const;
    bool is_display_height_mm_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    qint32 getDisplayWidthMm() const;
    void setDisplayWidthMm(const qint32 &display_width_mm);
    bool is_display_width_mm_Set() const;
    bool is_display_width_mm_Valid() const;

    bool isInternal() const;
    void setInternal(const bool &internal);
    bool is_internal_Set() const;
    bool is_internal_Valid() const;

    qint32 getManufactureYear() const;
    void setManufactureYear(const qint32 &manufacture_year);
    bool is_manufacture_year_Set() const;
    bool is_manufacture_year_Valid() const;

    QString getManufacturerId() const;
    void setManufacturerId(const QString &manufacturer_id);
    bool is_manufacturer_id_Set() const;
    bool is_manufacturer_id_Valid() const;

    qint32 getModelId() const;
    void setModelId(const qint32 &model_id);
    bool is_model_id_Set() const;
    bool is_model_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_display_height_mm;
    bool m_display_height_mm_isSet;
    bool m_display_height_mm_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    qint32 m_display_width_mm;
    bool m_display_width_mm_isSet;
    bool m_display_width_mm_isValid;

    bool m_internal;
    bool m_internal_isSet;
    bool m_internal_isValid;

    qint32 m_manufacture_year;
    bool m_manufacture_year_isSet;
    bool m_manufacture_year_isValid;

    QString m_manufacturer_id;
    bool m_manufacturer_id_isSet;
    bool m_manufacturer_id_isValid;

    qint32 m_model_id;
    bool m_model_id_isSet;
    bool m_model_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1DisplayDevice)

#endif // OAIGoogleChromeManagementV1DisplayDevice_H
