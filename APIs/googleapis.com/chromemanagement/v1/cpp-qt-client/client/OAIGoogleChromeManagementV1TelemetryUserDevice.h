/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1TelemetryUserDevice.h
 *
 * Telemetry data collected for a managed user and device. * Granular permission needed: TELEMETRY_API_DEVICE
 */

#ifndef OAIGoogleChromeManagementV1TelemetryUserDevice_H
#define OAIGoogleChromeManagementV1TelemetryUserDevice_H

#include <QJsonObject>

#include "OAIGoogleChromeManagementV1AudioStatusReport.h"
#include "OAIGoogleChromeManagementV1DeviceActivityReport.h"
#include "OAIGoogleChromeManagementV1NetworkBandwidthReport.h"
#include "OAIGoogleChromeManagementV1PeripheralsReport.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromeManagementV1AudioStatusReport;
class OAIGoogleChromeManagementV1DeviceActivityReport;
class OAIGoogleChromeManagementV1NetworkBandwidthReport;
class OAIGoogleChromeManagementV1PeripheralsReport;

class OAIGoogleChromeManagementV1TelemetryUserDevice : public OAIObject {
public:
    OAIGoogleChromeManagementV1TelemetryUserDevice();
    OAIGoogleChromeManagementV1TelemetryUserDevice(QString json);
    ~OAIGoogleChromeManagementV1TelemetryUserDevice() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleChromeManagementV1AudioStatusReport> getAudioStatusReport() const;
    void setAudioStatusReport(const QList<OAIGoogleChromeManagementV1AudioStatusReport> &audio_status_report);
    bool is_audio_status_report_Set() const;
    bool is_audio_status_report_Valid() const;

    QList<OAIGoogleChromeManagementV1DeviceActivityReport> getDeviceActivityReport() const;
    void setDeviceActivityReport(const QList<OAIGoogleChromeManagementV1DeviceActivityReport> &device_activity_report);
    bool is_device_activity_report_Set() const;
    bool is_device_activity_report_Valid() const;

    QString getDeviceId() const;
    void setDeviceId(const QString &device_id);
    bool is_device_id_Set() const;
    bool is_device_id_Valid() const;

    QList<OAIGoogleChromeManagementV1NetworkBandwidthReport> getNetworkBandwidthReport() const;
    void setNetworkBandwidthReport(const QList<OAIGoogleChromeManagementV1NetworkBandwidthReport> &network_bandwidth_report);
    bool is_network_bandwidth_report_Set() const;
    bool is_network_bandwidth_report_Valid() const;

    QList<OAIGoogleChromeManagementV1PeripheralsReport> getPeripheralsReport() const;
    void setPeripheralsReport(const QList<OAIGoogleChromeManagementV1PeripheralsReport> &peripherals_report);
    bool is_peripherals_report_Set() const;
    bool is_peripherals_report_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleChromeManagementV1AudioStatusReport> m_audio_status_report;
    bool m_audio_status_report_isSet;
    bool m_audio_status_report_isValid;

    QList<OAIGoogleChromeManagementV1DeviceActivityReport> m_device_activity_report;
    bool m_device_activity_report_isSet;
    bool m_device_activity_report_isValid;

    QString m_device_id;
    bool m_device_id_isSet;
    bool m_device_id_isValid;

    QList<OAIGoogleChromeManagementV1NetworkBandwidthReport> m_network_bandwidth_report;
    bool m_network_bandwidth_report_isSet;
    bool m_network_bandwidth_report_isValid;

    QList<OAIGoogleChromeManagementV1PeripheralsReport> m_peripherals_report;
    bool m_peripherals_report_isSet;
    bool m_peripherals_report_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1TelemetryUserDevice)

#endif // OAIGoogleChromeManagementV1TelemetryUserDevice_H
