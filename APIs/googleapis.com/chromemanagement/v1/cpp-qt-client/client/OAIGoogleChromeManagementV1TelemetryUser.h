/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1TelemetryUser.h
 *
 * Telemetry data collected from a managed user. * Granular permission needed: TELEMETRY_API_USER
 */

#ifndef OAIGoogleChromeManagementV1TelemetryUser_H
#define OAIGoogleChromeManagementV1TelemetryUser_H

#include <QJsonObject>

#include "OAIGoogleChromeManagementV1TelemetryUserDevice.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromeManagementV1TelemetryUserDevice;

class OAIGoogleChromeManagementV1TelemetryUser : public OAIObject {
public:
    OAIGoogleChromeManagementV1TelemetryUser();
    OAIGoogleChromeManagementV1TelemetryUser(QString json);
    ~OAIGoogleChromeManagementV1TelemetryUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCustomer() const;
    void setCustomer(const QString &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOrgUnitId() const;
    void setOrgUnitId(const QString &org_unit_id);
    bool is_org_unit_id_Set() const;
    bool is_org_unit_id_Valid() const;

    QList<OAIGoogleChromeManagementV1TelemetryUserDevice> getUserDevice() const;
    void setUserDevice(const QList<OAIGoogleChromeManagementV1TelemetryUserDevice> &user_device);
    bool is_user_device_Set() const;
    bool is_user_device_Valid() const;

    QString getUserEmail() const;
    void setUserEmail(const QString &user_email);
    bool is_user_email_Set() const;
    bool is_user_email_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_org_unit_id;
    bool m_org_unit_id_isSet;
    bool m_org_unit_id_isValid;

    QList<OAIGoogleChromeManagementV1TelemetryUserDevice> m_user_device;
    bool m_user_device_isSet;
    bool m_user_device_isValid;

    QString m_user_email;
    bool m_user_email_isSet;
    bool m_user_email_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1TelemetryUser)

#endif // OAIGoogleChromeManagementV1TelemetryUser_H
