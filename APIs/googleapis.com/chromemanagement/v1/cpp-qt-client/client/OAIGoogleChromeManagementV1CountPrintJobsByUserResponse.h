/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1CountPrintJobsByUserResponse.h
 *
 * Response containing a summary printing report for each user that has initiated a print job with a printer from the specified organizational unit during the requested time interval.
 */

#ifndef OAIGoogleChromeManagementV1CountPrintJobsByUserResponse_H
#define OAIGoogleChromeManagementV1CountPrintJobsByUserResponse_H

#include <QJsonObject>

#include "OAIGoogleChromeManagementV1UserPrintReport.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromeManagementV1UserPrintReport;

class OAIGoogleChromeManagementV1CountPrintJobsByUserResponse : public OAIObject {
public:
    OAIGoogleChromeManagementV1CountPrintJobsByUserResponse();
    OAIGoogleChromeManagementV1CountPrintJobsByUserResponse(QString json);
    ~OAIGoogleChromeManagementV1CountPrintJobsByUserResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QString getTotalSize() const;
    void setTotalSize(const QString &total_size);
    bool is_total_size_Set() const;
    bool is_total_size_Valid() const;

    QList<OAIGoogleChromeManagementV1UserPrintReport> getUserPrintReports() const;
    void setUserPrintReports(const QList<OAIGoogleChromeManagementV1UserPrintReport> &user_print_reports);
    bool is_user_print_reports_Set() const;
    bool is_user_print_reports_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QString m_total_size;
    bool m_total_size_isSet;
    bool m_total_size_isValid;

    QList<OAIGoogleChromeManagementV1UserPrintReport> m_user_print_reports;
    bool m_user_print_reports_isSet;
    bool m_user_print_reports_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1CountPrintJobsByUserResponse)

#endif // OAIGoogleChromeManagementV1CountPrintJobsByUserResponse_H
