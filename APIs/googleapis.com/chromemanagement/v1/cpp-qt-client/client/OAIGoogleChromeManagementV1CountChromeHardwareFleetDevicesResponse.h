/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.h
 *
 * Response containing a list of devices with a specific type of hardware specification from the requested hardware type.
 */

#ifndef OAIGoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse_H
#define OAIGoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse_H

#include <QJsonObject>

#include "OAIGoogleChromeManagementV1DeviceHardwareCountReport.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromeManagementV1DeviceHardwareCountReport;

class OAIGoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse : public OAIObject {
public:
    OAIGoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse();
    OAIGoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse(QString json);
    ~OAIGoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleChromeManagementV1DeviceHardwareCountReport> getCpuReports() const;
    void setCpuReports(const QList<OAIGoogleChromeManagementV1DeviceHardwareCountReport> &cpu_reports);
    bool is_cpu_reports_Set() const;
    bool is_cpu_reports_Valid() const;

    QList<OAIGoogleChromeManagementV1DeviceHardwareCountReport> getMemoryReports() const;
    void setMemoryReports(const QList<OAIGoogleChromeManagementV1DeviceHardwareCountReport> &memory_reports);
    bool is_memory_reports_Set() const;
    bool is_memory_reports_Valid() const;

    QList<OAIGoogleChromeManagementV1DeviceHardwareCountReport> getModelReports() const;
    void setModelReports(const QList<OAIGoogleChromeManagementV1DeviceHardwareCountReport> &model_reports);
    bool is_model_reports_Set() const;
    bool is_model_reports_Valid() const;

    QList<OAIGoogleChromeManagementV1DeviceHardwareCountReport> getStorageReports() const;
    void setStorageReports(const QList<OAIGoogleChromeManagementV1DeviceHardwareCountReport> &storage_reports);
    bool is_storage_reports_Set() const;
    bool is_storage_reports_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleChromeManagementV1DeviceHardwareCountReport> m_cpu_reports;
    bool m_cpu_reports_isSet;
    bool m_cpu_reports_isValid;

    QList<OAIGoogleChromeManagementV1DeviceHardwareCountReport> m_memory_reports;
    bool m_memory_reports_isSet;
    bool m_memory_reports_isValid;

    QList<OAIGoogleChromeManagementV1DeviceHardwareCountReport> m_model_reports;
    bool m_model_reports_isSet;
    bool m_model_reports_isValid;

    QList<OAIGoogleChromeManagementV1DeviceHardwareCountReport> m_storage_reports;
    bool m_storage_reports_isSet;
    bool m_storage_reports_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse)

#endif // OAIGoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse_H
