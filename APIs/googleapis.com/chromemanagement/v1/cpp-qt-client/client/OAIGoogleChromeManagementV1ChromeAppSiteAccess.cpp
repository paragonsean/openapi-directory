/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromeManagementV1ChromeAppSiteAccess.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromeManagementV1ChromeAppSiteAccess::OAIGoogleChromeManagementV1ChromeAppSiteAccess(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromeManagementV1ChromeAppSiteAccess::OAIGoogleChromeManagementV1ChromeAppSiteAccess() {
    this->initializeModel();
}

OAIGoogleChromeManagementV1ChromeAppSiteAccess::~OAIGoogleChromeManagementV1ChromeAppSiteAccess() {}

void OAIGoogleChromeManagementV1ChromeAppSiteAccess::initializeModel() {

    m_host_match_isSet = false;
    m_host_match_isValid = false;
}

void OAIGoogleChromeManagementV1ChromeAppSiteAccess::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromeManagementV1ChromeAppSiteAccess::fromJsonObject(QJsonObject json) {

    m_host_match_isValid = ::OpenAPI::fromJsonValue(m_host_match, json[QString("hostMatch")]);
    m_host_match_isSet = !json[QString("hostMatch")].isNull() && m_host_match_isValid;
}

QString OAIGoogleChromeManagementV1ChromeAppSiteAccess::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromeManagementV1ChromeAppSiteAccess::asJsonObject() const {
    QJsonObject obj;
    if (m_host_match_isSet) {
        obj.insert(QString("hostMatch"), ::OpenAPI::toJsonValue(m_host_match));
    }
    return obj;
}

QString OAIGoogleChromeManagementV1ChromeAppSiteAccess::getHostMatch() const {
    return m_host_match;
}
void OAIGoogleChromeManagementV1ChromeAppSiteAccess::setHostMatch(const QString &host_match) {
    m_host_match = host_match;
    m_host_match_isSet = true;
}

bool OAIGoogleChromeManagementV1ChromeAppSiteAccess::is_host_match_Set() const{
    return m_host_match_isSet;
}

bool OAIGoogleChromeManagementV1ChromeAppSiteAccess::is_host_match_Valid() const{
    return m_host_match_isValid;
}

bool OAIGoogleChromeManagementV1ChromeAppSiteAccess::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_host_match_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromeManagementV1ChromeAppSiteAccess::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
