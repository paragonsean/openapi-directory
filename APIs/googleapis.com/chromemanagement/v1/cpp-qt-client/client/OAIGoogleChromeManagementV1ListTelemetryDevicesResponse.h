/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromeManagementV1ListTelemetryDevicesResponse.h
 *
 * 
 */

#ifndef OAIGoogleChromeManagementV1ListTelemetryDevicesResponse_H
#define OAIGoogleChromeManagementV1ListTelemetryDevicesResponse_H

#include <QJsonObject>

#include "OAIGoogleChromeManagementV1TelemetryDevice.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromeManagementV1TelemetryDevice;

class OAIGoogleChromeManagementV1ListTelemetryDevicesResponse : public OAIObject {
public:
    OAIGoogleChromeManagementV1ListTelemetryDevicesResponse();
    OAIGoogleChromeManagementV1ListTelemetryDevicesResponse(QString json);
    ~OAIGoogleChromeManagementV1ListTelemetryDevicesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleChromeManagementV1TelemetryDevice> getDevices() const;
    void setDevices(const QList<OAIGoogleChromeManagementV1TelemetryDevice> &devices);
    bool is_devices_Set() const;
    bool is_devices_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleChromeManagementV1TelemetryDevice> m_devices;
    bool m_devices_isSet;
    bool m_devices_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromeManagementV1ListTelemetryDevicesResponse)

#endif // OAIGoogleChromeManagementV1ListTelemetryDevicesResponse_H
