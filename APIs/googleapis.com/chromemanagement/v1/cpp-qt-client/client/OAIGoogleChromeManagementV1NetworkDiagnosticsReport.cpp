/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromeManagementV1NetworkDiagnosticsReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromeManagementV1NetworkDiagnosticsReport::OAIGoogleChromeManagementV1NetworkDiagnosticsReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromeManagementV1NetworkDiagnosticsReport::OAIGoogleChromeManagementV1NetworkDiagnosticsReport() {
    this->initializeModel();
}

OAIGoogleChromeManagementV1NetworkDiagnosticsReport::~OAIGoogleChromeManagementV1NetworkDiagnosticsReport() {}

void OAIGoogleChromeManagementV1NetworkDiagnosticsReport::initializeModel() {

    m_https_latency_data_isSet = false;
    m_https_latency_data_isValid = false;

    m_report_time_isSet = false;
    m_report_time_isValid = false;
}

void OAIGoogleChromeManagementV1NetworkDiagnosticsReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromeManagementV1NetworkDiagnosticsReport::fromJsonObject(QJsonObject json) {

    m_https_latency_data_isValid = ::OpenAPI::fromJsonValue(m_https_latency_data, json[QString("httpsLatencyData")]);
    m_https_latency_data_isSet = !json[QString("httpsLatencyData")].isNull() && m_https_latency_data_isValid;

    m_report_time_isValid = ::OpenAPI::fromJsonValue(m_report_time, json[QString("reportTime")]);
    m_report_time_isSet = !json[QString("reportTime")].isNull() && m_report_time_isValid;
}

QString OAIGoogleChromeManagementV1NetworkDiagnosticsReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromeManagementV1NetworkDiagnosticsReport::asJsonObject() const {
    QJsonObject obj;
    if (m_https_latency_data.isSet()) {
        obj.insert(QString("httpsLatencyData"), ::OpenAPI::toJsonValue(m_https_latency_data));
    }
    if (m_report_time_isSet) {
        obj.insert(QString("reportTime"), ::OpenAPI::toJsonValue(m_report_time));
    }
    return obj;
}

OAIGoogleChromeManagementV1HttpsLatencyRoutineData OAIGoogleChromeManagementV1NetworkDiagnosticsReport::getHttpsLatencyData() const {
    return m_https_latency_data;
}
void OAIGoogleChromeManagementV1NetworkDiagnosticsReport::setHttpsLatencyData(const OAIGoogleChromeManagementV1HttpsLatencyRoutineData &https_latency_data) {
    m_https_latency_data = https_latency_data;
    m_https_latency_data_isSet = true;
}

bool OAIGoogleChromeManagementV1NetworkDiagnosticsReport::is_https_latency_data_Set() const{
    return m_https_latency_data_isSet;
}

bool OAIGoogleChromeManagementV1NetworkDiagnosticsReport::is_https_latency_data_Valid() const{
    return m_https_latency_data_isValid;
}

QString OAIGoogleChromeManagementV1NetworkDiagnosticsReport::getReportTime() const {
    return m_report_time;
}
void OAIGoogleChromeManagementV1NetworkDiagnosticsReport::setReportTime(const QString &report_time) {
    m_report_time = report_time;
    m_report_time_isSet = true;
}

bool OAIGoogleChromeManagementV1NetworkDiagnosticsReport::is_report_time_Set() const{
    return m_report_time_isSet;
}

bool OAIGoogleChromeManagementV1NetworkDiagnosticsReport::is_report_time_Valid() const{
    return m_report_time_isValid;
}

bool OAIGoogleChromeManagementV1NetworkDiagnosticsReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_https_latency_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromeManagementV1NetworkDiagnosticsReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
