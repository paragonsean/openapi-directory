/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromeManagementV1UserPrintReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromeManagementV1UserPrintReport::OAIGoogleChromeManagementV1UserPrintReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromeManagementV1UserPrintReport::OAIGoogleChromeManagementV1UserPrintReport() {
    this->initializeModel();
}

OAIGoogleChromeManagementV1UserPrintReport::~OAIGoogleChromeManagementV1UserPrintReport() {}

void OAIGoogleChromeManagementV1UserPrintReport::initializeModel() {

    m_device_count_isSet = false;
    m_device_count_isValid = false;

    m_job_count_isSet = false;
    m_job_count_isValid = false;

    m_printer_count_isSet = false;
    m_printer_count_isValid = false;

    m_user_email_isSet = false;
    m_user_email_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAIGoogleChromeManagementV1UserPrintReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromeManagementV1UserPrintReport::fromJsonObject(QJsonObject json) {

    m_device_count_isValid = ::OpenAPI::fromJsonValue(m_device_count, json[QString("deviceCount")]);
    m_device_count_isSet = !json[QString("deviceCount")].isNull() && m_device_count_isValid;

    m_job_count_isValid = ::OpenAPI::fromJsonValue(m_job_count, json[QString("jobCount")]);
    m_job_count_isSet = !json[QString("jobCount")].isNull() && m_job_count_isValid;

    m_printer_count_isValid = ::OpenAPI::fromJsonValue(m_printer_count, json[QString("printerCount")]);
    m_printer_count_isSet = !json[QString("printerCount")].isNull() && m_printer_count_isValid;

    m_user_email_isValid = ::OpenAPI::fromJsonValue(m_user_email, json[QString("userEmail")]);
    m_user_email_isSet = !json[QString("userEmail")].isNull() && m_user_email_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;
}

QString OAIGoogleChromeManagementV1UserPrintReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromeManagementV1UserPrintReport::asJsonObject() const {
    QJsonObject obj;
    if (m_device_count_isSet) {
        obj.insert(QString("deviceCount"), ::OpenAPI::toJsonValue(m_device_count));
    }
    if (m_job_count_isSet) {
        obj.insert(QString("jobCount"), ::OpenAPI::toJsonValue(m_job_count));
    }
    if (m_printer_count_isSet) {
        obj.insert(QString("printerCount"), ::OpenAPI::toJsonValue(m_printer_count));
    }
    if (m_user_email_isSet) {
        obj.insert(QString("userEmail"), ::OpenAPI::toJsonValue(m_user_email));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

QString OAIGoogleChromeManagementV1UserPrintReport::getDeviceCount() const {
    return m_device_count;
}
void OAIGoogleChromeManagementV1UserPrintReport::setDeviceCount(const QString &device_count) {
    m_device_count = device_count;
    m_device_count_isSet = true;
}

bool OAIGoogleChromeManagementV1UserPrintReport::is_device_count_Set() const{
    return m_device_count_isSet;
}

bool OAIGoogleChromeManagementV1UserPrintReport::is_device_count_Valid() const{
    return m_device_count_isValid;
}

QString OAIGoogleChromeManagementV1UserPrintReport::getJobCount() const {
    return m_job_count;
}
void OAIGoogleChromeManagementV1UserPrintReport::setJobCount(const QString &job_count) {
    m_job_count = job_count;
    m_job_count_isSet = true;
}

bool OAIGoogleChromeManagementV1UserPrintReport::is_job_count_Set() const{
    return m_job_count_isSet;
}

bool OAIGoogleChromeManagementV1UserPrintReport::is_job_count_Valid() const{
    return m_job_count_isValid;
}

QString OAIGoogleChromeManagementV1UserPrintReport::getPrinterCount() const {
    return m_printer_count;
}
void OAIGoogleChromeManagementV1UserPrintReport::setPrinterCount(const QString &printer_count) {
    m_printer_count = printer_count;
    m_printer_count_isSet = true;
}

bool OAIGoogleChromeManagementV1UserPrintReport::is_printer_count_Set() const{
    return m_printer_count_isSet;
}

bool OAIGoogleChromeManagementV1UserPrintReport::is_printer_count_Valid() const{
    return m_printer_count_isValid;
}

QString OAIGoogleChromeManagementV1UserPrintReport::getUserEmail() const {
    return m_user_email;
}
void OAIGoogleChromeManagementV1UserPrintReport::setUserEmail(const QString &user_email) {
    m_user_email = user_email;
    m_user_email_isSet = true;
}

bool OAIGoogleChromeManagementV1UserPrintReport::is_user_email_Set() const{
    return m_user_email_isSet;
}

bool OAIGoogleChromeManagementV1UserPrintReport::is_user_email_Valid() const{
    return m_user_email_isValid;
}

QString OAIGoogleChromeManagementV1UserPrintReport::getUserId() const {
    return m_user_id;
}
void OAIGoogleChromeManagementV1UserPrintReport::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIGoogleChromeManagementV1UserPrintReport::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIGoogleChromeManagementV1UserPrintReport::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAIGoogleChromeManagementV1UserPrintReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_device_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_printer_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromeManagementV1UserPrintReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
