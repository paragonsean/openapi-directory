# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChromeManagementV1OsUpdateStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_reboot_time: str=None, last_update_check_time: str=None, last_update_time: str=None, new_platform_version: str=None, new_requested_platform_version: str=None, update_state: str=None):
        """GoogleChromeManagementV1OsUpdateStatus - a model defined in OpenAPI

        :param last_reboot_time: The last_reboot_time of this GoogleChromeManagementV1OsUpdateStatus.
        :param last_update_check_time: The last_update_check_time of this GoogleChromeManagementV1OsUpdateStatus.
        :param last_update_time: The last_update_time of this GoogleChromeManagementV1OsUpdateStatus.
        :param new_platform_version: The new_platform_version of this GoogleChromeManagementV1OsUpdateStatus.
        :param new_requested_platform_version: The new_requested_platform_version of this GoogleChromeManagementV1OsUpdateStatus.
        :param update_state: The update_state of this GoogleChromeManagementV1OsUpdateStatus.
        """
        self.openapi_types = {
            'last_reboot_time': str,
            'last_update_check_time': str,
            'last_update_time': str,
            'new_platform_version': str,
            'new_requested_platform_version': str,
            'update_state': str
        }

        self.attribute_map = {
            'last_reboot_time': 'lastRebootTime',
            'last_update_check_time': 'lastUpdateCheckTime',
            'last_update_time': 'lastUpdateTime',
            'new_platform_version': 'newPlatformVersion',
            'new_requested_platform_version': 'newRequestedPlatformVersion',
            'update_state': 'updateState'
        }

        self._last_reboot_time = last_reboot_time
        self._last_update_check_time = last_update_check_time
        self._last_update_time = last_update_time
        self._new_platform_version = new_platform_version
        self._new_requested_platform_version = new_requested_platform_version
        self._update_state = update_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1OsUpdateStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1OsUpdateStatus of this GoogleChromeManagementV1OsUpdateStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_reboot_time(self):
        """Gets the last_reboot_time of this GoogleChromeManagementV1OsUpdateStatus.

        Output only. Timestamp of the last reboot.

        :return: The last_reboot_time of this GoogleChromeManagementV1OsUpdateStatus.
        :rtype: str
        """
        return self._last_reboot_time

    @last_reboot_time.setter
    def last_reboot_time(self, last_reboot_time):
        """Sets the last_reboot_time of this GoogleChromeManagementV1OsUpdateStatus.

        Output only. Timestamp of the last reboot.

        :param last_reboot_time: The last_reboot_time of this GoogleChromeManagementV1OsUpdateStatus.
        :type last_reboot_time: str
        """

        self._last_reboot_time = last_reboot_time

    @property
    def last_update_check_time(self):
        """Gets the last_update_check_time of this GoogleChromeManagementV1OsUpdateStatus.

        Output only. Timestamp of the last update check.

        :return: The last_update_check_time of this GoogleChromeManagementV1OsUpdateStatus.
        :rtype: str
        """
        return self._last_update_check_time

    @last_update_check_time.setter
    def last_update_check_time(self, last_update_check_time):
        """Sets the last_update_check_time of this GoogleChromeManagementV1OsUpdateStatus.

        Output only. Timestamp of the last update check.

        :param last_update_check_time: The last_update_check_time of this GoogleChromeManagementV1OsUpdateStatus.
        :type last_update_check_time: str
        """

        self._last_update_check_time = last_update_check_time

    @property
    def last_update_time(self):
        """Gets the last_update_time of this GoogleChromeManagementV1OsUpdateStatus.

        Output only. Timestamp of the last successful update.

        :return: The last_update_time of this GoogleChromeManagementV1OsUpdateStatus.
        :rtype: str
        """
        return self._last_update_time

    @last_update_time.setter
    def last_update_time(self, last_update_time):
        """Sets the last_update_time of this GoogleChromeManagementV1OsUpdateStatus.

        Output only. Timestamp of the last successful update.

        :param last_update_time: The last_update_time of this GoogleChromeManagementV1OsUpdateStatus.
        :type last_update_time: str
        """

        self._last_update_time = last_update_time

    @property
    def new_platform_version(self):
        """Gets the new_platform_version of this GoogleChromeManagementV1OsUpdateStatus.

        Output only. New platform version of the os image being downloaded and applied. It is only set when update status is OS_IMAGE_DOWNLOAD_IN_PROGRESS or OS_UPDATE_NEED_REBOOT. Note this could be a dummy \"0.0.0.0\" for OS_UPDATE_NEED_REBOOT status for some edge cases, e.g. update engine is restarted without a reboot.

        :return: The new_platform_version of this GoogleChromeManagementV1OsUpdateStatus.
        :rtype: str
        """
        return self._new_platform_version

    @new_platform_version.setter
    def new_platform_version(self, new_platform_version):
        """Sets the new_platform_version of this GoogleChromeManagementV1OsUpdateStatus.

        Output only. New platform version of the os image being downloaded and applied. It is only set when update status is OS_IMAGE_DOWNLOAD_IN_PROGRESS or OS_UPDATE_NEED_REBOOT. Note this could be a dummy \"0.0.0.0\" for OS_UPDATE_NEED_REBOOT status for some edge cases, e.g. update engine is restarted without a reboot.

        :param new_platform_version: The new_platform_version of this GoogleChromeManagementV1OsUpdateStatus.
        :type new_platform_version: str
        """

        self._new_platform_version = new_platform_version

    @property
    def new_requested_platform_version(self):
        """Gets the new_requested_platform_version of this GoogleChromeManagementV1OsUpdateStatus.

        Output only. New requested platform version from the pending updated kiosk app.

        :return: The new_requested_platform_version of this GoogleChromeManagementV1OsUpdateStatus.
        :rtype: str
        """
        return self._new_requested_platform_version

    @new_requested_platform_version.setter
    def new_requested_platform_version(self, new_requested_platform_version):
        """Sets the new_requested_platform_version of this GoogleChromeManagementV1OsUpdateStatus.

        Output only. New requested platform version from the pending updated kiosk app.

        :param new_requested_platform_version: The new_requested_platform_version of this GoogleChromeManagementV1OsUpdateStatus.
        :type new_requested_platform_version: str
        """

        self._new_requested_platform_version = new_requested_platform_version

    @property
    def update_state(self):
        """Gets the update_state of this GoogleChromeManagementV1OsUpdateStatus.

        Output only. Current state of the os update.

        :return: The update_state of this GoogleChromeManagementV1OsUpdateStatus.
        :rtype: str
        """
        return self._update_state

    @update_state.setter
    def update_state(self, update_state):
        """Sets the update_state of this GoogleChromeManagementV1OsUpdateStatus.

        Output only. Current state of the os update.

        :param update_state: The update_state of this GoogleChromeManagementV1OsUpdateStatus.
        :type update_state: str
        """
        allowed_values = ["UPDATE_STATE_UNSPECIFIED", "OS_IMAGE_DOWNLOAD_NOT_STARTED", "OS_IMAGE_DOWNLOAD_IN_PROGRESS", "OS_UPDATE_NEED_REBOOT"]  # noqa: E501
        if update_state not in allowed_values:
            raise ValueError(
                "Invalid value for `update_state` ({0}), must be one of {1}"
                .format(update_state, allowed_values)
            )

        self._update_state = update_state
