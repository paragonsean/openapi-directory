# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChromeManagementV1PrinterReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_count: str=None, job_count: str=None, printer: str=None, printer_id: str=None, printer_model: str=None, user_count: str=None):
        """GoogleChromeManagementV1PrinterReport - a model defined in OpenAPI

        :param device_count: The device_count of this GoogleChromeManagementV1PrinterReport.
        :param job_count: The job_count of this GoogleChromeManagementV1PrinterReport.
        :param printer: The printer of this GoogleChromeManagementV1PrinterReport.
        :param printer_id: The printer_id of this GoogleChromeManagementV1PrinterReport.
        :param printer_model: The printer_model of this GoogleChromeManagementV1PrinterReport.
        :param user_count: The user_count of this GoogleChromeManagementV1PrinterReport.
        """
        self.openapi_types = {
            'device_count': str,
            'job_count': str,
            'printer': str,
            'printer_id': str,
            'printer_model': str,
            'user_count': str
        }

        self.attribute_map = {
            'device_count': 'deviceCount',
            'job_count': 'jobCount',
            'printer': 'printer',
            'printer_id': 'printerId',
            'printer_model': 'printerModel',
            'user_count': 'userCount'
        }

        self._device_count = device_count
        self._job_count = job_count
        self._printer = printer
        self._printer_id = printer_id
        self._printer_model = printer_model
        self._user_count = user_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1PrinterReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1PrinterReport of this GoogleChromeManagementV1PrinterReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_count(self):
        """Gets the device_count of this GoogleChromeManagementV1PrinterReport.

        Number of chrome devices that have been used to send print jobs to the specified printer.

        :return: The device_count of this GoogleChromeManagementV1PrinterReport.
        :rtype: str
        """
        return self._device_count

    @device_count.setter
    def device_count(self, device_count):
        """Sets the device_count of this GoogleChromeManagementV1PrinterReport.

        Number of chrome devices that have been used to send print jobs to the specified printer.

        :param device_count: The device_count of this GoogleChromeManagementV1PrinterReport.
        :type device_count: str
        """

        self._device_count = device_count

    @property
    def job_count(self):
        """Gets the job_count of this GoogleChromeManagementV1PrinterReport.

        Number of print jobs sent to the printer.

        :return: The job_count of this GoogleChromeManagementV1PrinterReport.
        :rtype: str
        """
        return self._job_count

    @job_count.setter
    def job_count(self, job_count):
        """Sets the job_count of this GoogleChromeManagementV1PrinterReport.

        Number of print jobs sent to the printer.

        :param job_count: The job_count of this GoogleChromeManagementV1PrinterReport.
        :type job_count: str
        """

        self._job_count = job_count

    @property
    def printer(self):
        """Gets the printer of this GoogleChromeManagementV1PrinterReport.

        Printer name.

        :return: The printer of this GoogleChromeManagementV1PrinterReport.
        :rtype: str
        """
        return self._printer

    @printer.setter
    def printer(self, printer):
        """Sets the printer of this GoogleChromeManagementV1PrinterReport.

        Printer name.

        :param printer: The printer of this GoogleChromeManagementV1PrinterReport.
        :type printer: str
        """

        self._printer = printer

    @property
    def printer_id(self):
        """Gets the printer_id of this GoogleChromeManagementV1PrinterReport.

        Printer API ID.

        :return: The printer_id of this GoogleChromeManagementV1PrinterReport.
        :rtype: str
        """
        return self._printer_id

    @printer_id.setter
    def printer_id(self, printer_id):
        """Sets the printer_id of this GoogleChromeManagementV1PrinterReport.

        Printer API ID.

        :param printer_id: The printer_id of this GoogleChromeManagementV1PrinterReport.
        :type printer_id: str
        """

        self._printer_id = printer_id

    @property
    def printer_model(self):
        """Gets the printer_model of this GoogleChromeManagementV1PrinterReport.

        Printer model.

        :return: The printer_model of this GoogleChromeManagementV1PrinterReport.
        :rtype: str
        """
        return self._printer_model

    @printer_model.setter
    def printer_model(self, printer_model):
        """Sets the printer_model of this GoogleChromeManagementV1PrinterReport.

        Printer model.

        :param printer_model: The printer_model of this GoogleChromeManagementV1PrinterReport.
        :type printer_model: str
        """

        self._printer_model = printer_model

    @property
    def user_count(self):
        """Gets the user_count of this GoogleChromeManagementV1PrinterReport.

        Number of users that have sent print jobs to the printer.

        :return: The user_count of this GoogleChromeManagementV1PrinterReport.
        :rtype: str
        """
        return self._user_count

    @user_count.setter
    def user_count(self, user_count):
        """Sets the user_count of this GoogleChromeManagementV1PrinterReport.

        Number of users that have sent print jobs to the printer.

        :param user_count: The user_count of this GoogleChromeManagementV1PrinterReport.
        :type user_count: str
        """

        self._user_count = user_count
