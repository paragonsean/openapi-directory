# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_chrome_management_v1_telemetry_device import GoogleChromeManagementV1TelemetryDevice
from openapi_server import util


class GoogleChromeManagementV1ListTelemetryDevicesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, devices: List[GoogleChromeManagementV1TelemetryDevice]=None, next_page_token: str=None):
        """GoogleChromeManagementV1ListTelemetryDevicesResponse - a model defined in OpenAPI

        :param devices: The devices of this GoogleChromeManagementV1ListTelemetryDevicesResponse.
        :param next_page_token: The next_page_token of this GoogleChromeManagementV1ListTelemetryDevicesResponse.
        """
        self.openapi_types = {
            'devices': List[GoogleChromeManagementV1TelemetryDevice],
            'next_page_token': str
        }

        self.attribute_map = {
            'devices': 'devices',
            'next_page_token': 'nextPageToken'
        }

        self._devices = devices
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1ListTelemetryDevicesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1ListTelemetryDevicesResponse of this GoogleChromeManagementV1ListTelemetryDevicesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def devices(self):
        """Gets the devices of this GoogleChromeManagementV1ListTelemetryDevicesResponse.

        Telemetry devices returned in the response.

        :return: The devices of this GoogleChromeManagementV1ListTelemetryDevicesResponse.
        :rtype: List[GoogleChromeManagementV1TelemetryDevice]
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """Sets the devices of this GoogleChromeManagementV1ListTelemetryDevicesResponse.

        Telemetry devices returned in the response.

        :param devices: The devices of this GoogleChromeManagementV1ListTelemetryDevicesResponse.
        :type devices: List[GoogleChromeManagementV1TelemetryDevice]
        """

        self._devices = devices

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GoogleChromeManagementV1ListTelemetryDevicesResponse.

        Token to specify next page in the list.

        :return: The next_page_token of this GoogleChromeManagementV1ListTelemetryDevicesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GoogleChromeManagementV1ListTelemetryDevicesResponse.

        Token to specify next page in the list.

        :param next_page_token: The next_page_token of this GoogleChromeManagementV1ListTelemetryDevicesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
