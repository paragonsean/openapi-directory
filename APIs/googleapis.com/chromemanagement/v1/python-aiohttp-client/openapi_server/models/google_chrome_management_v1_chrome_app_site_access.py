# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChromeManagementV1ChromeAppSiteAccess(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_match: str=None):
        """GoogleChromeManagementV1ChromeAppSiteAccess - a model defined in OpenAPI

        :param host_match: The host_match of this GoogleChromeManagementV1ChromeAppSiteAccess.
        """
        self.openapi_types = {
            'host_match': str
        }

        self.attribute_map = {
            'host_match': 'hostMatch'
        }

        self._host_match = host_match

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1ChromeAppSiteAccess':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1ChromeAppSiteAccess of this GoogleChromeManagementV1ChromeAppSiteAccess.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_match(self):
        """Gets the host_match of this GoogleChromeManagementV1ChromeAppSiteAccess.

        Output only. This can contain very specific hosts, or patterns like \"*.com\" for instance.

        :return: The host_match of this GoogleChromeManagementV1ChromeAppSiteAccess.
        :rtype: str
        """
        return self._host_match

    @host_match.setter
    def host_match(self, host_match):
        """Sets the host_match of this GoogleChromeManagementV1ChromeAppSiteAccess.

        Output only. This can contain very specific hosts, or patterns like \"*.com\" for instance.

        :param host_match: The host_match of this GoogleChromeManagementV1ChromeAppSiteAccess.
        :type host_match: str
        """

        self._host_match = host_match
