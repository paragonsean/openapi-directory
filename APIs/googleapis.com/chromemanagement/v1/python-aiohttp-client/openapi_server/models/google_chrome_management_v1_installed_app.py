# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChromeManagementV1InstalledApp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: str=None, app_install_type: str=None, app_source: str=None, app_type: str=None, browser_device_count: str=None, description: str=None, disabled: bool=None, display_name: str=None, homepage_uri: str=None, os_user_count: str=None, permissions: List[str]=None):
        """GoogleChromeManagementV1InstalledApp - a model defined in OpenAPI

        :param app_id: The app_id of this GoogleChromeManagementV1InstalledApp.
        :param app_install_type: The app_install_type of this GoogleChromeManagementV1InstalledApp.
        :param app_source: The app_source of this GoogleChromeManagementV1InstalledApp.
        :param app_type: The app_type of this GoogleChromeManagementV1InstalledApp.
        :param browser_device_count: The browser_device_count of this GoogleChromeManagementV1InstalledApp.
        :param description: The description of this GoogleChromeManagementV1InstalledApp.
        :param disabled: The disabled of this GoogleChromeManagementV1InstalledApp.
        :param display_name: The display_name of this GoogleChromeManagementV1InstalledApp.
        :param homepage_uri: The homepage_uri of this GoogleChromeManagementV1InstalledApp.
        :param os_user_count: The os_user_count of this GoogleChromeManagementV1InstalledApp.
        :param permissions: The permissions of this GoogleChromeManagementV1InstalledApp.
        """
        self.openapi_types = {
            'app_id': str,
            'app_install_type': str,
            'app_source': str,
            'app_type': str,
            'browser_device_count': str,
            'description': str,
            'disabled': bool,
            'display_name': str,
            'homepage_uri': str,
            'os_user_count': str,
            'permissions': List[str]
        }

        self.attribute_map = {
            'app_id': 'appId',
            'app_install_type': 'appInstallType',
            'app_source': 'appSource',
            'app_type': 'appType',
            'browser_device_count': 'browserDeviceCount',
            'description': 'description',
            'disabled': 'disabled',
            'display_name': 'displayName',
            'homepage_uri': 'homepageUri',
            'os_user_count': 'osUserCount',
            'permissions': 'permissions'
        }

        self._app_id = app_id
        self._app_install_type = app_install_type
        self._app_source = app_source
        self._app_type = app_type
        self._browser_device_count = browser_device_count
        self._description = description
        self._disabled = disabled
        self._display_name = display_name
        self._homepage_uri = homepage_uri
        self._os_user_count = os_user_count
        self._permissions = permissions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1InstalledApp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1InstalledApp of this GoogleChromeManagementV1InstalledApp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this GoogleChromeManagementV1InstalledApp.

        Output only. Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g. com.evernote).

        :return: The app_id of this GoogleChromeManagementV1InstalledApp.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this GoogleChromeManagementV1InstalledApp.

        Output only. Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g. com.evernote).

        :param app_id: The app_id of this GoogleChromeManagementV1InstalledApp.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def app_install_type(self):
        """Gets the app_install_type of this GoogleChromeManagementV1InstalledApp.

        Output only. How the app was installed.

        :return: The app_install_type of this GoogleChromeManagementV1InstalledApp.
        :rtype: str
        """
        return self._app_install_type

    @app_install_type.setter
    def app_install_type(self, app_install_type):
        """Sets the app_install_type of this GoogleChromeManagementV1InstalledApp.

        Output only. How the app was installed.

        :param app_install_type: The app_install_type of this GoogleChromeManagementV1InstalledApp.
        :type app_install_type: str
        """
        allowed_values = ["APP_INSTALL_TYPE_UNSPECIFIED", "MULTIPLE", "NORMAL", "ADMIN", "DEVELOPMENT", "SIDELOAD", "OTHER"]  # noqa: E501
        if app_install_type not in allowed_values:
            raise ValueError(
                "Invalid value for `app_install_type` ({0}), must be one of {1}"
                .format(app_install_type, allowed_values)
            )

        self._app_install_type = app_install_type

    @property
    def app_source(self):
        """Gets the app_source of this GoogleChromeManagementV1InstalledApp.

        Output only. Source of the installed app.

        :return: The app_source of this GoogleChromeManagementV1InstalledApp.
        :rtype: str
        """
        return self._app_source

    @app_source.setter
    def app_source(self, app_source):
        """Sets the app_source of this GoogleChromeManagementV1InstalledApp.

        Output only. Source of the installed app.

        :param app_source: The app_source of this GoogleChromeManagementV1InstalledApp.
        :type app_source: str
        """
        allowed_values = ["APP_SOURCE_UNSPECIFIED", "CHROME_WEBSTORE", "PLAY_STORE"]  # noqa: E501
        if app_source not in allowed_values:
            raise ValueError(
                "Invalid value for `app_source` ({0}), must be one of {1}"
                .format(app_source, allowed_values)
            )

        self._app_source = app_source

    @property
    def app_type(self):
        """Gets the app_type of this GoogleChromeManagementV1InstalledApp.

        Output only. Type of the app.

        :return: The app_type of this GoogleChromeManagementV1InstalledApp.
        :rtype: str
        """
        return self._app_type

    @app_type.setter
    def app_type(self, app_type):
        """Sets the app_type of this GoogleChromeManagementV1InstalledApp.

        Output only. Type of the app.

        :param app_type: The app_type of this GoogleChromeManagementV1InstalledApp.
        :type app_type: str
        """
        allowed_values = ["APP_TYPE_UNSPECIFIED", "EXTENSION", "APP", "THEME", "HOSTED_APP", "ANDROID_APP"]  # noqa: E501
        if app_type not in allowed_values:
            raise ValueError(
                "Invalid value for `app_type` ({0}), must be one of {1}"
                .format(app_type, allowed_values)
            )

        self._app_type = app_type

    @property
    def browser_device_count(self):
        """Gets the browser_device_count of this GoogleChromeManagementV1InstalledApp.

        Output only. Count of browser devices with this app installed.

        :return: The browser_device_count of this GoogleChromeManagementV1InstalledApp.
        :rtype: str
        """
        return self._browser_device_count

    @browser_device_count.setter
    def browser_device_count(self, browser_device_count):
        """Sets the browser_device_count of this GoogleChromeManagementV1InstalledApp.

        Output only. Count of browser devices with this app installed.

        :param browser_device_count: The browser_device_count of this GoogleChromeManagementV1InstalledApp.
        :type browser_device_count: str
        """

        self._browser_device_count = browser_device_count

    @property
    def description(self):
        """Gets the description of this GoogleChromeManagementV1InstalledApp.

        Output only. Description of the installed app.

        :return: The description of this GoogleChromeManagementV1InstalledApp.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleChromeManagementV1InstalledApp.

        Output only. Description of the installed app.

        :param description: The description of this GoogleChromeManagementV1InstalledApp.
        :type description: str
        """

        self._description = description

    @property
    def disabled(self):
        """Gets the disabled of this GoogleChromeManagementV1InstalledApp.

        Output only. Whether the app is disabled.

        :return: The disabled of this GoogleChromeManagementV1InstalledApp.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this GoogleChromeManagementV1InstalledApp.

        Output only. Whether the app is disabled.

        :param disabled: The disabled of this GoogleChromeManagementV1InstalledApp.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def display_name(self):
        """Gets the display_name of this GoogleChromeManagementV1InstalledApp.

        Output only. Name of the installed app.

        :return: The display_name of this GoogleChromeManagementV1InstalledApp.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleChromeManagementV1InstalledApp.

        Output only. Name of the installed app.

        :param display_name: The display_name of this GoogleChromeManagementV1InstalledApp.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def homepage_uri(self):
        """Gets the homepage_uri of this GoogleChromeManagementV1InstalledApp.

        Output only. Homepage uri of the installed app.

        :return: The homepage_uri of this GoogleChromeManagementV1InstalledApp.
        :rtype: str
        """
        return self._homepage_uri

    @homepage_uri.setter
    def homepage_uri(self, homepage_uri):
        """Sets the homepage_uri of this GoogleChromeManagementV1InstalledApp.

        Output only. Homepage uri of the installed app.

        :param homepage_uri: The homepage_uri of this GoogleChromeManagementV1InstalledApp.
        :type homepage_uri: str
        """

        self._homepage_uri = homepage_uri

    @property
    def os_user_count(self):
        """Gets the os_user_count of this GoogleChromeManagementV1InstalledApp.

        Output only. Count of ChromeOS users with this app installed.

        :return: The os_user_count of this GoogleChromeManagementV1InstalledApp.
        :rtype: str
        """
        return self._os_user_count

    @os_user_count.setter
    def os_user_count(self, os_user_count):
        """Sets the os_user_count of this GoogleChromeManagementV1InstalledApp.

        Output only. Count of ChromeOS users with this app installed.

        :param os_user_count: The os_user_count of this GoogleChromeManagementV1InstalledApp.
        :type os_user_count: str
        """

        self._os_user_count = os_user_count

    @property
    def permissions(self):
        """Gets the permissions of this GoogleChromeManagementV1InstalledApp.

        Output only. Permissions of the installed app.

        :return: The permissions of this GoogleChromeManagementV1InstalledApp.
        :rtype: List[str]
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this GoogleChromeManagementV1InstalledApp.

        Output only. Permissions of the installed app.

        :param permissions: The permissions of this GoogleChromeManagementV1InstalledApp.
        :type permissions: List[str]
        """

        self._permissions = permissions
