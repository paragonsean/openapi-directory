# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_type_date import GoogleTypeDate
from openapi_server import util


class GoogleChromeManagementV1BatteryInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, design_capacity: str=None, design_min_voltage: int=None, manufacture_date: GoogleTypeDate=None, manufacturer: str=None, serial_number: str=None, technology: str=None):
        """GoogleChromeManagementV1BatteryInfo - a model defined in OpenAPI

        :param design_capacity: The design_capacity of this GoogleChromeManagementV1BatteryInfo.
        :param design_min_voltage: The design_min_voltage of this GoogleChromeManagementV1BatteryInfo.
        :param manufacture_date: The manufacture_date of this GoogleChromeManagementV1BatteryInfo.
        :param manufacturer: The manufacturer of this GoogleChromeManagementV1BatteryInfo.
        :param serial_number: The serial_number of this GoogleChromeManagementV1BatteryInfo.
        :param technology: The technology of this GoogleChromeManagementV1BatteryInfo.
        """
        self.openapi_types = {
            'design_capacity': str,
            'design_min_voltage': int,
            'manufacture_date': GoogleTypeDate,
            'manufacturer': str,
            'serial_number': str,
            'technology': str
        }

        self.attribute_map = {
            'design_capacity': 'designCapacity',
            'design_min_voltage': 'designMinVoltage',
            'manufacture_date': 'manufactureDate',
            'manufacturer': 'manufacturer',
            'serial_number': 'serialNumber',
            'technology': 'technology'
        }

        self._design_capacity = design_capacity
        self._design_min_voltage = design_min_voltage
        self._manufacture_date = manufacture_date
        self._manufacturer = manufacturer
        self._serial_number = serial_number
        self._technology = technology

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1BatteryInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1BatteryInfo of this GoogleChromeManagementV1BatteryInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def design_capacity(self):
        """Gets the design_capacity of this GoogleChromeManagementV1BatteryInfo.

        Output only. Design capacity (mAmpere-hours).

        :return: The design_capacity of this GoogleChromeManagementV1BatteryInfo.
        :rtype: str
        """
        return self._design_capacity

    @design_capacity.setter
    def design_capacity(self, design_capacity):
        """Sets the design_capacity of this GoogleChromeManagementV1BatteryInfo.

        Output only. Design capacity (mAmpere-hours).

        :param design_capacity: The design_capacity of this GoogleChromeManagementV1BatteryInfo.
        :type design_capacity: str
        """

        self._design_capacity = design_capacity

    @property
    def design_min_voltage(self):
        """Gets the design_min_voltage of this GoogleChromeManagementV1BatteryInfo.

        Output only. Designed minimum output voltage (mV)

        :return: The design_min_voltage of this GoogleChromeManagementV1BatteryInfo.
        :rtype: int
        """
        return self._design_min_voltage

    @design_min_voltage.setter
    def design_min_voltage(self, design_min_voltage):
        """Sets the design_min_voltage of this GoogleChromeManagementV1BatteryInfo.

        Output only. Designed minimum output voltage (mV)

        :param design_min_voltage: The design_min_voltage of this GoogleChromeManagementV1BatteryInfo.
        :type design_min_voltage: int
        """

        self._design_min_voltage = design_min_voltage

    @property
    def manufacture_date(self):
        """Gets the manufacture_date of this GoogleChromeManagementV1BatteryInfo.


        :return: The manufacture_date of this GoogleChromeManagementV1BatteryInfo.
        :rtype: GoogleTypeDate
        """
        return self._manufacture_date

    @manufacture_date.setter
    def manufacture_date(self, manufacture_date):
        """Sets the manufacture_date of this GoogleChromeManagementV1BatteryInfo.


        :param manufacture_date: The manufacture_date of this GoogleChromeManagementV1BatteryInfo.
        :type manufacture_date: GoogleTypeDate
        """

        self._manufacture_date = manufacture_date

    @property
    def manufacturer(self):
        """Gets the manufacturer of this GoogleChromeManagementV1BatteryInfo.

        Output only. Battery manufacturer.

        :return: The manufacturer of this GoogleChromeManagementV1BatteryInfo.
        :rtype: str
        """
        return self._manufacturer

    @manufacturer.setter
    def manufacturer(self, manufacturer):
        """Sets the manufacturer of this GoogleChromeManagementV1BatteryInfo.

        Output only. Battery manufacturer.

        :param manufacturer: The manufacturer of this GoogleChromeManagementV1BatteryInfo.
        :type manufacturer: str
        """

        self._manufacturer = manufacturer

    @property
    def serial_number(self):
        """Gets the serial_number of this GoogleChromeManagementV1BatteryInfo.

        Output only. Battery serial number.

        :return: The serial_number of this GoogleChromeManagementV1BatteryInfo.
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this GoogleChromeManagementV1BatteryInfo.

        Output only. Battery serial number.

        :param serial_number: The serial_number of this GoogleChromeManagementV1BatteryInfo.
        :type serial_number: str
        """

        self._serial_number = serial_number

    @property
    def technology(self):
        """Gets the technology of this GoogleChromeManagementV1BatteryInfo.

        Output only. Technology of the battery. Example: Li-ion

        :return: The technology of this GoogleChromeManagementV1BatteryInfo.
        :rtype: str
        """
        return self._technology

    @technology.setter
    def technology(self, technology):
        """Sets the technology of this GoogleChromeManagementV1BatteryInfo.

        Output only. Technology of the battery. Example: Li-ion

        :param technology: The technology of this GoogleChromeManagementV1BatteryInfo.
        :type technology: str
        """

        self._technology = technology
