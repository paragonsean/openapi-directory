# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChromeManagementV1BootPerformanceReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, boot_up_duration: str=None, boot_up_time: str=None, report_time: str=None, shutdown_duration: str=None, shutdown_reason: str=None, shutdown_time: str=None):
        """GoogleChromeManagementV1BootPerformanceReport - a model defined in OpenAPI

        :param boot_up_duration: The boot_up_duration of this GoogleChromeManagementV1BootPerformanceReport.
        :param boot_up_time: The boot_up_time of this GoogleChromeManagementV1BootPerformanceReport.
        :param report_time: The report_time of this GoogleChromeManagementV1BootPerformanceReport.
        :param shutdown_duration: The shutdown_duration of this GoogleChromeManagementV1BootPerformanceReport.
        :param shutdown_reason: The shutdown_reason of this GoogleChromeManagementV1BootPerformanceReport.
        :param shutdown_time: The shutdown_time of this GoogleChromeManagementV1BootPerformanceReport.
        """
        self.openapi_types = {
            'boot_up_duration': str,
            'boot_up_time': str,
            'report_time': str,
            'shutdown_duration': str,
            'shutdown_reason': str,
            'shutdown_time': str
        }

        self.attribute_map = {
            'boot_up_duration': 'bootUpDuration',
            'boot_up_time': 'bootUpTime',
            'report_time': 'reportTime',
            'shutdown_duration': 'shutdownDuration',
            'shutdown_reason': 'shutdownReason',
            'shutdown_time': 'shutdownTime'
        }

        self._boot_up_duration = boot_up_duration
        self._boot_up_time = boot_up_time
        self._report_time = report_time
        self._shutdown_duration = shutdown_duration
        self._shutdown_reason = shutdown_reason
        self._shutdown_time = shutdown_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1BootPerformanceReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1BootPerformanceReport of this GoogleChromeManagementV1BootPerformanceReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def boot_up_duration(self):
        """Gets the boot_up_duration of this GoogleChromeManagementV1BootPerformanceReport.

        Total time to boot up.

        :return: The boot_up_duration of this GoogleChromeManagementV1BootPerformanceReport.
        :rtype: str
        """
        return self._boot_up_duration

    @boot_up_duration.setter
    def boot_up_duration(self, boot_up_duration):
        """Sets the boot_up_duration of this GoogleChromeManagementV1BootPerformanceReport.

        Total time to boot up.

        :param boot_up_duration: The boot_up_duration of this GoogleChromeManagementV1BootPerformanceReport.
        :type boot_up_duration: str
        """

        self._boot_up_duration = boot_up_duration

    @property
    def boot_up_time(self):
        """Gets the boot_up_time of this GoogleChromeManagementV1BootPerformanceReport.

        The timestamp when power came on.

        :return: The boot_up_time of this GoogleChromeManagementV1BootPerformanceReport.
        :rtype: str
        """
        return self._boot_up_time

    @boot_up_time.setter
    def boot_up_time(self, boot_up_time):
        """Sets the boot_up_time of this GoogleChromeManagementV1BootPerformanceReport.

        The timestamp when power came on.

        :param boot_up_time: The boot_up_time of this GoogleChromeManagementV1BootPerformanceReport.
        :type boot_up_time: str
        """

        self._boot_up_time = boot_up_time

    @property
    def report_time(self):
        """Gets the report_time of this GoogleChromeManagementV1BootPerformanceReport.

        Timestamp when the report was collected.

        :return: The report_time of this GoogleChromeManagementV1BootPerformanceReport.
        :rtype: str
        """
        return self._report_time

    @report_time.setter
    def report_time(self, report_time):
        """Sets the report_time of this GoogleChromeManagementV1BootPerformanceReport.

        Timestamp when the report was collected.

        :param report_time: The report_time of this GoogleChromeManagementV1BootPerformanceReport.
        :type report_time: str
        """

        self._report_time = report_time

    @property
    def shutdown_duration(self):
        """Gets the shutdown_duration of this GoogleChromeManagementV1BootPerformanceReport.

        Total time since shutdown start to power off.

        :return: The shutdown_duration of this GoogleChromeManagementV1BootPerformanceReport.
        :rtype: str
        """
        return self._shutdown_duration

    @shutdown_duration.setter
    def shutdown_duration(self, shutdown_duration):
        """Sets the shutdown_duration of this GoogleChromeManagementV1BootPerformanceReport.

        Total time since shutdown start to power off.

        :param shutdown_duration: The shutdown_duration of this GoogleChromeManagementV1BootPerformanceReport.
        :type shutdown_duration: str
        """

        self._shutdown_duration = shutdown_duration

    @property
    def shutdown_reason(self):
        """Gets the shutdown_reason of this GoogleChromeManagementV1BootPerformanceReport.

        The shutdown reason.

        :return: The shutdown_reason of this GoogleChromeManagementV1BootPerformanceReport.
        :rtype: str
        """
        return self._shutdown_reason

    @shutdown_reason.setter
    def shutdown_reason(self, shutdown_reason):
        """Sets the shutdown_reason of this GoogleChromeManagementV1BootPerformanceReport.

        The shutdown reason.

        :param shutdown_reason: The shutdown_reason of this GoogleChromeManagementV1BootPerformanceReport.
        :type shutdown_reason: str
        """
        allowed_values = ["SHUTDOWN_REASON_UNSPECIFIED", "USER_REQUEST", "SYSTEM_UPDATE", "LOW_BATTERY", "OTHER"]  # noqa: E501
        if shutdown_reason not in allowed_values:
            raise ValueError(
                "Invalid value for `shutdown_reason` ({0}), must be one of {1}"
                .format(shutdown_reason, allowed_values)
            )

        self._shutdown_reason = shutdown_reason

    @property
    def shutdown_time(self):
        """Gets the shutdown_time of this GoogleChromeManagementV1BootPerformanceReport.

        The timestamp when shutdown.

        :return: The shutdown_time of this GoogleChromeManagementV1BootPerformanceReport.
        :rtype: str
        """
        return self._shutdown_time

    @shutdown_time.setter
    def shutdown_time(self, shutdown_time):
        """Sets the shutdown_time of this GoogleChromeManagementV1BootPerformanceReport.

        The timestamp when shutdown.

        :param shutdown_time: The shutdown_time of this GoogleChromeManagementV1BootPerformanceReport.
        :type shutdown_time: str
        """

        self._shutdown_time = shutdown_time
