# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_chrome_management_v1_device_hardware_count_report import GoogleChromeManagementV1DeviceHardwareCountReport
from openapi_server import util


class GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cpu_reports: List[GoogleChromeManagementV1DeviceHardwareCountReport]=None, memory_reports: List[GoogleChromeManagementV1DeviceHardwareCountReport]=None, model_reports: List[GoogleChromeManagementV1DeviceHardwareCountReport]=None, storage_reports: List[GoogleChromeManagementV1DeviceHardwareCountReport]=None):
        """GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse - a model defined in OpenAPI

        :param cpu_reports: The cpu_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.
        :param memory_reports: The memory_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.
        :param model_reports: The model_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.
        :param storage_reports: The storage_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.
        """
        self.openapi_types = {
            'cpu_reports': List[GoogleChromeManagementV1DeviceHardwareCountReport],
            'memory_reports': List[GoogleChromeManagementV1DeviceHardwareCountReport],
            'model_reports': List[GoogleChromeManagementV1DeviceHardwareCountReport],
            'storage_reports': List[GoogleChromeManagementV1DeviceHardwareCountReport]
        }

        self.attribute_map = {
            'cpu_reports': 'cpuReports',
            'memory_reports': 'memoryReports',
            'model_reports': 'modelReports',
            'storage_reports': 'storageReports'
        }

        self._cpu_reports = cpu_reports
        self._memory_reports = memory_reports
        self._model_reports = model_reports
        self._storage_reports = storage_reports

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cpu_reports(self):
        """Gets the cpu_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.

        The DeviceHardwareCountReport for device cpu type (for example Intel(R) Core(TM) i7-10610U CPU @ 1.80GHz).

        :return: The cpu_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.
        :rtype: List[GoogleChromeManagementV1DeviceHardwareCountReport]
        """
        return self._cpu_reports

    @cpu_reports.setter
    def cpu_reports(self, cpu_reports):
        """Sets the cpu_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.

        The DeviceHardwareCountReport for device cpu type (for example Intel(R) Core(TM) i7-10610U CPU @ 1.80GHz).

        :param cpu_reports: The cpu_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.
        :type cpu_reports: List[GoogleChromeManagementV1DeviceHardwareCountReport]
        """

        self._cpu_reports = cpu_reports

    @property
    def memory_reports(self):
        """Gets the memory_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.

        The DeviceHardwareCountReport for device memory amount in gigabytes (for example 16).

        :return: The memory_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.
        :rtype: List[GoogleChromeManagementV1DeviceHardwareCountReport]
        """
        return self._memory_reports

    @memory_reports.setter
    def memory_reports(self, memory_reports):
        """Sets the memory_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.

        The DeviceHardwareCountReport for device memory amount in gigabytes (for example 16).

        :param memory_reports: The memory_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.
        :type memory_reports: List[GoogleChromeManagementV1DeviceHardwareCountReport]
        """

        self._memory_reports = memory_reports

    @property
    def model_reports(self):
        """Gets the model_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.

        The DeviceHardwareCountReport for device model type (for example Acer C7 Chromebook).

        :return: The model_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.
        :rtype: List[GoogleChromeManagementV1DeviceHardwareCountReport]
        """
        return self._model_reports

    @model_reports.setter
    def model_reports(self, model_reports):
        """Sets the model_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.

        The DeviceHardwareCountReport for device model type (for example Acer C7 Chromebook).

        :param model_reports: The model_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.
        :type model_reports: List[GoogleChromeManagementV1DeviceHardwareCountReport]
        """

        self._model_reports = model_reports

    @property
    def storage_reports(self):
        """Gets the storage_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.

        The DeviceHardwareCountReport for device storage amount in gigabytes (for example 128).

        :return: The storage_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.
        :rtype: List[GoogleChromeManagementV1DeviceHardwareCountReport]
        """
        return self._storage_reports

    @storage_reports.setter
    def storage_reports(self, storage_reports):
        """Sets the storage_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.

        The DeviceHardwareCountReport for device storage amount in gigabytes (for example 128).

        :param storage_reports: The storage_reports of this GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.
        :type storage_reports: List[GoogleChromeManagementV1DeviceHardwareCountReport]
        """

        self._storage_reports = storage_reports
