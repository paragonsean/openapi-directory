# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChromeManagementV1DeviceAueCountReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aue_month: str=None, aue_year: str=None, count: str=None, expired: bool=None, model: str=None):
        """GoogleChromeManagementV1DeviceAueCountReport - a model defined in OpenAPI

        :param aue_month: The aue_month of this GoogleChromeManagementV1DeviceAueCountReport.
        :param aue_year: The aue_year of this GoogleChromeManagementV1DeviceAueCountReport.
        :param count: The count of this GoogleChromeManagementV1DeviceAueCountReport.
        :param expired: The expired of this GoogleChromeManagementV1DeviceAueCountReport.
        :param model: The model of this GoogleChromeManagementV1DeviceAueCountReport.
        """
        self.openapi_types = {
            'aue_month': str,
            'aue_year': str,
            'count': str,
            'expired': bool,
            'model': str
        }

        self.attribute_map = {
            'aue_month': 'aueMonth',
            'aue_year': 'aueYear',
            'count': 'count',
            'expired': 'expired',
            'model': 'model'
        }

        self._aue_month = aue_month
        self._aue_year = aue_year
        self._count = count
        self._expired = expired
        self._model = model

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1DeviceAueCountReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1DeviceAueCountReport of this GoogleChromeManagementV1DeviceAueCountReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aue_month(self):
        """Gets the aue_month of this GoogleChromeManagementV1DeviceAueCountReport.

        Enum value of month corresponding to the auto update expiration date in UTC time zone. If the device is already expired, this field is empty.

        :return: The aue_month of this GoogleChromeManagementV1DeviceAueCountReport.
        :rtype: str
        """
        return self._aue_month

    @aue_month.setter
    def aue_month(self, aue_month):
        """Sets the aue_month of this GoogleChromeManagementV1DeviceAueCountReport.

        Enum value of month corresponding to the auto update expiration date in UTC time zone. If the device is already expired, this field is empty.

        :param aue_month: The aue_month of this GoogleChromeManagementV1DeviceAueCountReport.
        :type aue_month: str
        """
        allowed_values = ["MONTH_UNSPECIFIED", "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER"]  # noqa: E501
        if aue_month not in allowed_values:
            raise ValueError(
                "Invalid value for `aue_month` ({0}), must be one of {1}"
                .format(aue_month, allowed_values)
            )

        self._aue_month = aue_month

    @property
    def aue_year(self):
        """Gets the aue_year of this GoogleChromeManagementV1DeviceAueCountReport.

        Int value of year corresponding to the Auto Update Expiration date in UTC time zone. If the device is already expired, this field is empty.

        :return: The aue_year of this GoogleChromeManagementV1DeviceAueCountReport.
        :rtype: str
        """
        return self._aue_year

    @aue_year.setter
    def aue_year(self, aue_year):
        """Sets the aue_year of this GoogleChromeManagementV1DeviceAueCountReport.

        Int value of year corresponding to the Auto Update Expiration date in UTC time zone. If the device is already expired, this field is empty.

        :param aue_year: The aue_year of this GoogleChromeManagementV1DeviceAueCountReport.
        :type aue_year: str
        """

        self._aue_year = aue_year

    @property
    def count(self):
        """Gets the count of this GoogleChromeManagementV1DeviceAueCountReport.

        Count of devices of this model.

        :return: The count of this GoogleChromeManagementV1DeviceAueCountReport.
        :rtype: str
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this GoogleChromeManagementV1DeviceAueCountReport.

        Count of devices of this model.

        :param count: The count of this GoogleChromeManagementV1DeviceAueCountReport.
        :type count: str
        """

        self._count = count

    @property
    def expired(self):
        """Gets the expired of this GoogleChromeManagementV1DeviceAueCountReport.

        Boolean value for whether or not the device has already expired.

        :return: The expired of this GoogleChromeManagementV1DeviceAueCountReport.
        :rtype: bool
        """
        return self._expired

    @expired.setter
    def expired(self, expired):
        """Sets the expired of this GoogleChromeManagementV1DeviceAueCountReport.

        Boolean value for whether or not the device has already expired.

        :param expired: The expired of this GoogleChromeManagementV1DeviceAueCountReport.
        :type expired: bool
        """

        self._expired = expired

    @property
    def model(self):
        """Gets the model of this GoogleChromeManagementV1DeviceAueCountReport.

        Public model name of the devices.

        :return: The model of this GoogleChromeManagementV1DeviceAueCountReport.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this GoogleChromeManagementV1DeviceAueCountReport.

        Public model name of the devices.

        :param model: The model of this GoogleChromeManagementV1DeviceAueCountReport.
        :type model: str
        """

        self._model = model
