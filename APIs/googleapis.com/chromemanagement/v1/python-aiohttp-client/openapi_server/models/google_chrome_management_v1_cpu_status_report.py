# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_chrome_management_v1_cpu_temperature_info import GoogleChromeManagementV1CpuTemperatureInfo
from openapi_server import util


class GoogleChromeManagementV1CpuStatusReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cpu_temperature_info: List[GoogleChromeManagementV1CpuTemperatureInfo]=None, cpu_utilization_pct: int=None, report_time: str=None, sample_frequency: str=None):
        """GoogleChromeManagementV1CpuStatusReport - a model defined in OpenAPI

        :param cpu_temperature_info: The cpu_temperature_info of this GoogleChromeManagementV1CpuStatusReport.
        :param cpu_utilization_pct: The cpu_utilization_pct of this GoogleChromeManagementV1CpuStatusReport.
        :param report_time: The report_time of this GoogleChromeManagementV1CpuStatusReport.
        :param sample_frequency: The sample_frequency of this GoogleChromeManagementV1CpuStatusReport.
        """
        self.openapi_types = {
            'cpu_temperature_info': List[GoogleChromeManagementV1CpuTemperatureInfo],
            'cpu_utilization_pct': int,
            'report_time': str,
            'sample_frequency': str
        }

        self.attribute_map = {
            'cpu_temperature_info': 'cpuTemperatureInfo',
            'cpu_utilization_pct': 'cpuUtilizationPct',
            'report_time': 'reportTime',
            'sample_frequency': 'sampleFrequency'
        }

        self._cpu_temperature_info = cpu_temperature_info
        self._cpu_utilization_pct = cpu_utilization_pct
        self._report_time = report_time
        self._sample_frequency = sample_frequency

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1CpuStatusReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1CpuStatusReport of this GoogleChromeManagementV1CpuStatusReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cpu_temperature_info(self):
        """Gets the cpu_temperature_info of this GoogleChromeManagementV1CpuStatusReport.

        Output only. CPU temperature sample info per CPU core in Celsius

        :return: The cpu_temperature_info of this GoogleChromeManagementV1CpuStatusReport.
        :rtype: List[GoogleChromeManagementV1CpuTemperatureInfo]
        """
        return self._cpu_temperature_info

    @cpu_temperature_info.setter
    def cpu_temperature_info(self, cpu_temperature_info):
        """Sets the cpu_temperature_info of this GoogleChromeManagementV1CpuStatusReport.

        Output only. CPU temperature sample info per CPU core in Celsius

        :param cpu_temperature_info: The cpu_temperature_info of this GoogleChromeManagementV1CpuStatusReport.
        :type cpu_temperature_info: List[GoogleChromeManagementV1CpuTemperatureInfo]
        """

        self._cpu_temperature_info = cpu_temperature_info

    @property
    def cpu_utilization_pct(self):
        """Gets the cpu_utilization_pct of this GoogleChromeManagementV1CpuStatusReport.

        Output only. Sample of CPU utilization (0-100 percent).

        :return: The cpu_utilization_pct of this GoogleChromeManagementV1CpuStatusReport.
        :rtype: int
        """
        return self._cpu_utilization_pct

    @cpu_utilization_pct.setter
    def cpu_utilization_pct(self, cpu_utilization_pct):
        """Sets the cpu_utilization_pct of this GoogleChromeManagementV1CpuStatusReport.

        Output only. Sample of CPU utilization (0-100 percent).

        :param cpu_utilization_pct: The cpu_utilization_pct of this GoogleChromeManagementV1CpuStatusReport.
        :type cpu_utilization_pct: int
        """

        self._cpu_utilization_pct = cpu_utilization_pct

    @property
    def report_time(self):
        """Gets the report_time of this GoogleChromeManagementV1CpuStatusReport.

        Output only. The timestamp in milliseconds representing time at which this report was sampled.

        :return: The report_time of this GoogleChromeManagementV1CpuStatusReport.
        :rtype: str
        """
        return self._report_time

    @report_time.setter
    def report_time(self, report_time):
        """Sets the report_time of this GoogleChromeManagementV1CpuStatusReport.

        Output only. The timestamp in milliseconds representing time at which this report was sampled.

        :param report_time: The report_time of this GoogleChromeManagementV1CpuStatusReport.
        :type report_time: str
        """

        self._report_time = report_time

    @property
    def sample_frequency(self):
        """Gets the sample_frequency of this GoogleChromeManagementV1CpuStatusReport.

        Output only. Frequency the report is sampled.

        :return: The sample_frequency of this GoogleChromeManagementV1CpuStatusReport.
        :rtype: str
        """
        return self._sample_frequency

    @sample_frequency.setter
    def sample_frequency(self, sample_frequency):
        """Sets the sample_frequency of this GoogleChromeManagementV1CpuStatusReport.

        Output only. Frequency the report is sampled.

        :param sample_frequency: The sample_frequency of this GoogleChromeManagementV1CpuStatusReport.
        :type sample_frequency: str
        """

        self._sample_frequency = sample_frequency
