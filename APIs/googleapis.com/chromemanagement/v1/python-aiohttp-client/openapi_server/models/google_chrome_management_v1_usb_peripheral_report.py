# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChromeManagementV1UsbPeripheralReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categories: List[str]=None, class_id: int=None, firmware_version: str=None, name: str=None, pid: int=None, subclass_id: int=None, vendor: str=None, vid: int=None):
        """GoogleChromeManagementV1UsbPeripheralReport - a model defined in OpenAPI

        :param categories: The categories of this GoogleChromeManagementV1UsbPeripheralReport.
        :param class_id: The class_id of this GoogleChromeManagementV1UsbPeripheralReport.
        :param firmware_version: The firmware_version of this GoogleChromeManagementV1UsbPeripheralReport.
        :param name: The name of this GoogleChromeManagementV1UsbPeripheralReport.
        :param pid: The pid of this GoogleChromeManagementV1UsbPeripheralReport.
        :param subclass_id: The subclass_id of this GoogleChromeManagementV1UsbPeripheralReport.
        :param vendor: The vendor of this GoogleChromeManagementV1UsbPeripheralReport.
        :param vid: The vid of this GoogleChromeManagementV1UsbPeripheralReport.
        """
        self.openapi_types = {
            'categories': List[str],
            'class_id': int,
            'firmware_version': str,
            'name': str,
            'pid': int,
            'subclass_id': int,
            'vendor': str,
            'vid': int
        }

        self.attribute_map = {
            'categories': 'categories',
            'class_id': 'classId',
            'firmware_version': 'firmwareVersion',
            'name': 'name',
            'pid': 'pid',
            'subclass_id': 'subclassId',
            'vendor': 'vendor',
            'vid': 'vid'
        }

        self._categories = categories
        self._class_id = class_id
        self._firmware_version = firmware_version
        self._name = name
        self._pid = pid
        self._subclass_id = subclass_id
        self._vendor = vendor
        self._vid = vid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1UsbPeripheralReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1UsbPeripheralReport of this GoogleChromeManagementV1UsbPeripheralReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categories(self):
        """Gets the categories of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Categories the device belongs to https://www.usb.org/defined-class-codes

        :return: The categories of this GoogleChromeManagementV1UsbPeripheralReport.
        :rtype: List[str]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Categories the device belongs to https://www.usb.org/defined-class-codes

        :param categories: The categories of this GoogleChromeManagementV1UsbPeripheralReport.
        :type categories: List[str]
        """

        self._categories = categories

    @property
    def class_id(self):
        """Gets the class_id of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Class ID https://www.usb.org/defined-class-codes

        :return: The class_id of this GoogleChromeManagementV1UsbPeripheralReport.
        :rtype: int
        """
        return self._class_id

    @class_id.setter
    def class_id(self, class_id):
        """Sets the class_id of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Class ID https://www.usb.org/defined-class-codes

        :param class_id: The class_id of this GoogleChromeManagementV1UsbPeripheralReport.
        :type class_id: int
        """

        self._class_id = class_id

    @property
    def firmware_version(self):
        """Gets the firmware_version of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Firmware version

        :return: The firmware_version of this GoogleChromeManagementV1UsbPeripheralReport.
        :rtype: str
        """
        return self._firmware_version

    @firmware_version.setter
    def firmware_version(self, firmware_version):
        """Sets the firmware_version of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Firmware version

        :param firmware_version: The firmware_version of this GoogleChromeManagementV1UsbPeripheralReport.
        :type firmware_version: str
        """

        self._firmware_version = firmware_version

    @property
    def name(self):
        """Gets the name of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Device name, model name, or product name

        :return: The name of this GoogleChromeManagementV1UsbPeripheralReport.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Device name, model name, or product name

        :param name: The name of this GoogleChromeManagementV1UsbPeripheralReport.
        :type name: str
        """

        self._name = name

    @property
    def pid(self):
        """Gets the pid of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Product ID

        :return: The pid of this GoogleChromeManagementV1UsbPeripheralReport.
        :rtype: int
        """
        return self._pid

    @pid.setter
    def pid(self, pid):
        """Sets the pid of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Product ID

        :param pid: The pid of this GoogleChromeManagementV1UsbPeripheralReport.
        :type pid: int
        """

        self._pid = pid

    @property
    def subclass_id(self):
        """Gets the subclass_id of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Subclass ID https://www.usb.org/defined-class-codes

        :return: The subclass_id of this GoogleChromeManagementV1UsbPeripheralReport.
        :rtype: int
        """
        return self._subclass_id

    @subclass_id.setter
    def subclass_id(self, subclass_id):
        """Sets the subclass_id of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Subclass ID https://www.usb.org/defined-class-codes

        :param subclass_id: The subclass_id of this GoogleChromeManagementV1UsbPeripheralReport.
        :type subclass_id: int
        """

        self._subclass_id = subclass_id

    @property
    def vendor(self):
        """Gets the vendor of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Vendor name

        :return: The vendor of this GoogleChromeManagementV1UsbPeripheralReport.
        :rtype: str
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Vendor name

        :param vendor: The vendor of this GoogleChromeManagementV1UsbPeripheralReport.
        :type vendor: str
        """

        self._vendor = vendor

    @property
    def vid(self):
        """Gets the vid of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Vendor ID

        :return: The vid of this GoogleChromeManagementV1UsbPeripheralReport.
        :rtype: int
        """
        return self._vid

    @vid.setter
    def vid(self, vid):
        """Sets the vid of this GoogleChromeManagementV1UsbPeripheralReport.

        Output only. Vendor ID

        :param vid: The vid of this GoogleChromeManagementV1UsbPeripheralReport.
        :type vid: int
        """

        self._vid = vid
