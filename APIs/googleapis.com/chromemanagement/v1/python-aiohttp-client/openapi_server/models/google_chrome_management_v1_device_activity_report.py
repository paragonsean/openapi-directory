# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChromeManagementV1DeviceActivityReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_activity_state: str=None, report_time: str=None):
        """GoogleChromeManagementV1DeviceActivityReport - a model defined in OpenAPI

        :param device_activity_state: The device_activity_state of this GoogleChromeManagementV1DeviceActivityReport.
        :param report_time: The report_time of this GoogleChromeManagementV1DeviceActivityReport.
        """
        self.openapi_types = {
            'device_activity_state': str,
            'report_time': str
        }

        self.attribute_map = {
            'device_activity_state': 'deviceActivityState',
            'report_time': 'reportTime'
        }

        self._device_activity_state = device_activity_state
        self._report_time = report_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1DeviceActivityReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1DeviceActivityReport of this GoogleChromeManagementV1DeviceActivityReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_activity_state(self):
        """Gets the device_activity_state of this GoogleChromeManagementV1DeviceActivityReport.

        Output only. Device activity state.

        :return: The device_activity_state of this GoogleChromeManagementV1DeviceActivityReport.
        :rtype: str
        """
        return self._device_activity_state

    @device_activity_state.setter
    def device_activity_state(self, device_activity_state):
        """Sets the device_activity_state of this GoogleChromeManagementV1DeviceActivityReport.

        Output only. Device activity state.

        :param device_activity_state: The device_activity_state of this GoogleChromeManagementV1DeviceActivityReport.
        :type device_activity_state: str
        """
        allowed_values = ["DEVICE_ACTIVITY_STATE_UNSPECIFIED", "ACTIVE", "IDLE", "LOCKED"]  # noqa: E501
        if device_activity_state not in allowed_values:
            raise ValueError(
                "Invalid value for `device_activity_state` ({0}), must be one of {1}"
                .format(device_activity_state, allowed_values)
            )

        self._device_activity_state = device_activity_state

    @property
    def report_time(self):
        """Gets the report_time of this GoogleChromeManagementV1DeviceActivityReport.

        Output only. Timestamp of when the report was collected.

        :return: The report_time of this GoogleChromeManagementV1DeviceActivityReport.
        :rtype: str
        """
        return self._report_time

    @report_time.setter
    def report_time(self, report_time):
        """Sets the report_time of this GoogleChromeManagementV1DeviceActivityReport.

        Output only. Timestamp of when the report was collected.

        :param report_time: The report_time of this GoogleChromeManagementV1DeviceActivityReport.
        :type report_time: str
        """

        self._report_time = report_time
