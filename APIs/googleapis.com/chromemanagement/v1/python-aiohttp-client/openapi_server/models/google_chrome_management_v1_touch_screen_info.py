# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_chrome_management_v1_touch_screen_device import GoogleChromeManagementV1TouchScreenDevice
from openapi_server import util


class GoogleChromeManagementV1TouchScreenInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, devices: List[GoogleChromeManagementV1TouchScreenDevice]=None, touchpad_library: str=None):
        """GoogleChromeManagementV1TouchScreenInfo - a model defined in OpenAPI

        :param devices: The devices of this GoogleChromeManagementV1TouchScreenInfo.
        :param touchpad_library: The touchpad_library of this GoogleChromeManagementV1TouchScreenInfo.
        """
        self.openapi_types = {
            'devices': List[GoogleChromeManagementV1TouchScreenDevice],
            'touchpad_library': str
        }

        self.attribute_map = {
            'devices': 'devices',
            'touchpad_library': 'touchpadLibrary'
        }

        self._devices = devices
        self._touchpad_library = touchpad_library

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1TouchScreenInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1TouchScreenInfo of this GoogleChromeManagementV1TouchScreenInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def devices(self):
        """Gets the devices of this GoogleChromeManagementV1TouchScreenInfo.

        Output only. List of the internal touch screen devices.

        :return: The devices of this GoogleChromeManagementV1TouchScreenInfo.
        :rtype: List[GoogleChromeManagementV1TouchScreenDevice]
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """Sets the devices of this GoogleChromeManagementV1TouchScreenInfo.

        Output only. List of the internal touch screen devices.

        :param devices: The devices of this GoogleChromeManagementV1TouchScreenInfo.
        :type devices: List[GoogleChromeManagementV1TouchScreenDevice]
        """

        self._devices = devices

    @property
    def touchpad_library(self):
        """Gets the touchpad_library of this GoogleChromeManagementV1TouchScreenInfo.

        Output only. Touchpad library name used by the input stack.

        :return: The touchpad_library of this GoogleChromeManagementV1TouchScreenInfo.
        :rtype: str
        """
        return self._touchpad_library

    @touchpad_library.setter
    def touchpad_library(self, touchpad_library):
        """Sets the touchpad_library of this GoogleChromeManagementV1TouchScreenInfo.

        Output only. Touchpad library name used by the input stack.

        :param touchpad_library: The touchpad_library of this GoogleChromeManagementV1TouchScreenInfo.
        :type touchpad_library: str
        """

        self._touchpad_library = touchpad_library
