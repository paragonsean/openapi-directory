# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChromeManagementV1NetworkStatusReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_state: str=None, connection_type: str=None, encryption_on: bool=None, gateway_ip_address: str=None, guid: str=None, lan_ip_address: str=None, receiving_bit_rate_mbps: str=None, report_time: str=None, sample_frequency: str=None, signal_strength_dbm: int=None, transmission_bit_rate_mbps: str=None, transmission_power_dbm: int=None, wifi_link_quality: str=None, wifi_power_management_enabled: bool=None):
        """GoogleChromeManagementV1NetworkStatusReport - a model defined in OpenAPI

        :param connection_state: The connection_state of this GoogleChromeManagementV1NetworkStatusReport.
        :param connection_type: The connection_type of this GoogleChromeManagementV1NetworkStatusReport.
        :param encryption_on: The encryption_on of this GoogleChromeManagementV1NetworkStatusReport.
        :param gateway_ip_address: The gateway_ip_address of this GoogleChromeManagementV1NetworkStatusReport.
        :param guid: The guid of this GoogleChromeManagementV1NetworkStatusReport.
        :param lan_ip_address: The lan_ip_address of this GoogleChromeManagementV1NetworkStatusReport.
        :param receiving_bit_rate_mbps: The receiving_bit_rate_mbps of this GoogleChromeManagementV1NetworkStatusReport.
        :param report_time: The report_time of this GoogleChromeManagementV1NetworkStatusReport.
        :param sample_frequency: The sample_frequency of this GoogleChromeManagementV1NetworkStatusReport.
        :param signal_strength_dbm: The signal_strength_dbm of this GoogleChromeManagementV1NetworkStatusReport.
        :param transmission_bit_rate_mbps: The transmission_bit_rate_mbps of this GoogleChromeManagementV1NetworkStatusReport.
        :param transmission_power_dbm: The transmission_power_dbm of this GoogleChromeManagementV1NetworkStatusReport.
        :param wifi_link_quality: The wifi_link_quality of this GoogleChromeManagementV1NetworkStatusReport.
        :param wifi_power_management_enabled: The wifi_power_management_enabled of this GoogleChromeManagementV1NetworkStatusReport.
        """
        self.openapi_types = {
            'connection_state': str,
            'connection_type': str,
            'encryption_on': bool,
            'gateway_ip_address': str,
            'guid': str,
            'lan_ip_address': str,
            'receiving_bit_rate_mbps': str,
            'report_time': str,
            'sample_frequency': str,
            'signal_strength_dbm': int,
            'transmission_bit_rate_mbps': str,
            'transmission_power_dbm': int,
            'wifi_link_quality': str,
            'wifi_power_management_enabled': bool
        }

        self.attribute_map = {
            'connection_state': 'connectionState',
            'connection_type': 'connectionType',
            'encryption_on': 'encryptionOn',
            'gateway_ip_address': 'gatewayIpAddress',
            'guid': 'guid',
            'lan_ip_address': 'lanIpAddress',
            'receiving_bit_rate_mbps': 'receivingBitRateMbps',
            'report_time': 'reportTime',
            'sample_frequency': 'sampleFrequency',
            'signal_strength_dbm': 'signalStrengthDbm',
            'transmission_bit_rate_mbps': 'transmissionBitRateMbps',
            'transmission_power_dbm': 'transmissionPowerDbm',
            'wifi_link_quality': 'wifiLinkQuality',
            'wifi_power_management_enabled': 'wifiPowerManagementEnabled'
        }

        self._connection_state = connection_state
        self._connection_type = connection_type
        self._encryption_on = encryption_on
        self._gateway_ip_address = gateway_ip_address
        self._guid = guid
        self._lan_ip_address = lan_ip_address
        self._receiving_bit_rate_mbps = receiving_bit_rate_mbps
        self._report_time = report_time
        self._sample_frequency = sample_frequency
        self._signal_strength_dbm = signal_strength_dbm
        self._transmission_bit_rate_mbps = transmission_bit_rate_mbps
        self._transmission_power_dbm = transmission_power_dbm
        self._wifi_link_quality = wifi_link_quality
        self._wifi_power_management_enabled = wifi_power_management_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1NetworkStatusReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1NetworkStatusReport of this GoogleChromeManagementV1NetworkStatusReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_state(self):
        """Gets the connection_state of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Current connection state of the network.

        :return: The connection_state of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: str
        """
        return self._connection_state

    @connection_state.setter
    def connection_state(self, connection_state):
        """Sets the connection_state of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Current connection state of the network.

        :param connection_state: The connection_state of this GoogleChromeManagementV1NetworkStatusReport.
        :type connection_state: str
        """
        allowed_values = ["NETWORK_CONNECTION_STATE_UNSPECIFIED", "ONLINE", "CONNECTED", "PORTAL", "CONNECTING", "NOT_CONNECTED"]  # noqa: E501
        if connection_state not in allowed_values:
            raise ValueError(
                "Invalid value for `connection_state` ({0}), must be one of {1}"
                .format(connection_state, allowed_values)
            )

        self._connection_state = connection_state

    @property
    def connection_type(self):
        """Gets the connection_type of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Network connection type.

        :return: The connection_type of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: str
        """
        return self._connection_type

    @connection_type.setter
    def connection_type(self, connection_type):
        """Sets the connection_type of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Network connection type.

        :param connection_type: The connection_type of this GoogleChromeManagementV1NetworkStatusReport.
        :type connection_type: str
        """
        allowed_values = ["NETWORK_TYPE_UNSPECIFIED", "CELLULAR", "ETHERNET", "TETHER", "VPN", "WIFI"]  # noqa: E501
        if connection_type not in allowed_values:
            raise ValueError(
                "Invalid value for `connection_type` ({0}), must be one of {1}"
                .format(connection_type, allowed_values)
            )

        self._connection_type = connection_type

    @property
    def encryption_on(self):
        """Gets the encryption_on of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Whether the wifi encryption key is turned off.

        :return: The encryption_on of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: bool
        """
        return self._encryption_on

    @encryption_on.setter
    def encryption_on(self, encryption_on):
        """Sets the encryption_on of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Whether the wifi encryption key is turned off.

        :param encryption_on: The encryption_on of this GoogleChromeManagementV1NetworkStatusReport.
        :type encryption_on: bool
        """

        self._encryption_on = encryption_on

    @property
    def gateway_ip_address(self):
        """Gets the gateway_ip_address of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Gateway IP address.

        :return: The gateway_ip_address of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: str
        """
        return self._gateway_ip_address

    @gateway_ip_address.setter
    def gateway_ip_address(self, gateway_ip_address):
        """Sets the gateway_ip_address of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Gateway IP address.

        :param gateway_ip_address: The gateway_ip_address of this GoogleChromeManagementV1NetworkStatusReport.
        :type gateway_ip_address: str
        """

        self._gateway_ip_address = gateway_ip_address

    @property
    def guid(self):
        """Gets the guid of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Network connection guid.

        :return: The guid of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Network connection guid.

        :param guid: The guid of this GoogleChromeManagementV1NetworkStatusReport.
        :type guid: str
        """

        self._guid = guid

    @property
    def lan_ip_address(self):
        """Gets the lan_ip_address of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. LAN IP address.

        :return: The lan_ip_address of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: str
        """
        return self._lan_ip_address

    @lan_ip_address.setter
    def lan_ip_address(self, lan_ip_address):
        """Sets the lan_ip_address of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. LAN IP address.

        :param lan_ip_address: The lan_ip_address of this GoogleChromeManagementV1NetworkStatusReport.
        :type lan_ip_address: str
        """

        self._lan_ip_address = lan_ip_address

    @property
    def receiving_bit_rate_mbps(self):
        """Gets the receiving_bit_rate_mbps of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Receiving bit rate measured in Megabits per second.

        :return: The receiving_bit_rate_mbps of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: str
        """
        return self._receiving_bit_rate_mbps

    @receiving_bit_rate_mbps.setter
    def receiving_bit_rate_mbps(self, receiving_bit_rate_mbps):
        """Sets the receiving_bit_rate_mbps of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Receiving bit rate measured in Megabits per second.

        :param receiving_bit_rate_mbps: The receiving_bit_rate_mbps of this GoogleChromeManagementV1NetworkStatusReport.
        :type receiving_bit_rate_mbps: str
        """

        self._receiving_bit_rate_mbps = receiving_bit_rate_mbps

    @property
    def report_time(self):
        """Gets the report_time of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Time at which the network state was reported.

        :return: The report_time of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: str
        """
        return self._report_time

    @report_time.setter
    def report_time(self, report_time):
        """Sets the report_time of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Time at which the network state was reported.

        :param report_time: The report_time of this GoogleChromeManagementV1NetworkStatusReport.
        :type report_time: str
        """

        self._report_time = report_time

    @property
    def sample_frequency(self):
        """Gets the sample_frequency of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Frequency the report is sampled.

        :return: The sample_frequency of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: str
        """
        return self._sample_frequency

    @sample_frequency.setter
    def sample_frequency(self, sample_frequency):
        """Sets the sample_frequency of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Frequency the report is sampled.

        :param sample_frequency: The sample_frequency of this GoogleChromeManagementV1NetworkStatusReport.
        :type sample_frequency: str
        """

        self._sample_frequency = sample_frequency

    @property
    def signal_strength_dbm(self):
        """Gets the signal_strength_dbm of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Signal strength for wireless networks measured in decibels.

        :return: The signal_strength_dbm of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: int
        """
        return self._signal_strength_dbm

    @signal_strength_dbm.setter
    def signal_strength_dbm(self, signal_strength_dbm):
        """Sets the signal_strength_dbm of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Signal strength for wireless networks measured in decibels.

        :param signal_strength_dbm: The signal_strength_dbm of this GoogleChromeManagementV1NetworkStatusReport.
        :type signal_strength_dbm: int
        """

        self._signal_strength_dbm = signal_strength_dbm

    @property
    def transmission_bit_rate_mbps(self):
        """Gets the transmission_bit_rate_mbps of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Transmission bit rate measured in Megabits per second.

        :return: The transmission_bit_rate_mbps of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: str
        """
        return self._transmission_bit_rate_mbps

    @transmission_bit_rate_mbps.setter
    def transmission_bit_rate_mbps(self, transmission_bit_rate_mbps):
        """Sets the transmission_bit_rate_mbps of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Transmission bit rate measured in Megabits per second.

        :param transmission_bit_rate_mbps: The transmission_bit_rate_mbps of this GoogleChromeManagementV1NetworkStatusReport.
        :type transmission_bit_rate_mbps: str
        """

        self._transmission_bit_rate_mbps = transmission_bit_rate_mbps

    @property
    def transmission_power_dbm(self):
        """Gets the transmission_power_dbm of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Transmission power measured in decibels.

        :return: The transmission_power_dbm of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: int
        """
        return self._transmission_power_dbm

    @transmission_power_dbm.setter
    def transmission_power_dbm(self, transmission_power_dbm):
        """Sets the transmission_power_dbm of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Transmission power measured in decibels.

        :param transmission_power_dbm: The transmission_power_dbm of this GoogleChromeManagementV1NetworkStatusReport.
        :type transmission_power_dbm: int
        """

        self._transmission_power_dbm = transmission_power_dbm

    @property
    def wifi_link_quality(self):
        """Gets the wifi_link_quality of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Wifi link quality. Value ranges from [0, 70]. 0 indicates no signal and 70 indicates a strong signal.

        :return: The wifi_link_quality of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: str
        """
        return self._wifi_link_quality

    @wifi_link_quality.setter
    def wifi_link_quality(self, wifi_link_quality):
        """Sets the wifi_link_quality of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Wifi link quality. Value ranges from [0, 70]. 0 indicates no signal and 70 indicates a strong signal.

        :param wifi_link_quality: The wifi_link_quality of this GoogleChromeManagementV1NetworkStatusReport.
        :type wifi_link_quality: str
        """

        self._wifi_link_quality = wifi_link_quality

    @property
    def wifi_power_management_enabled(self):
        """Gets the wifi_power_management_enabled of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Wifi power management enabled

        :return: The wifi_power_management_enabled of this GoogleChromeManagementV1NetworkStatusReport.
        :rtype: bool
        """
        return self._wifi_power_management_enabled

    @wifi_power_management_enabled.setter
    def wifi_power_management_enabled(self, wifi_power_management_enabled):
        """Sets the wifi_power_management_enabled of this GoogleChromeManagementV1NetworkStatusReport.

        Output only. Wifi power management enabled

        :param wifi_power_management_enabled: The wifi_power_management_enabled of this GoogleChromeManagementV1NetworkStatusReport.
        :type wifi_power_management_enabled: bool
        """

        self._wifi_power_management_enabled = wifi_power_management_enabled
