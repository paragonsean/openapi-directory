# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChromeManagementV1DisplayInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_id: str=None, display_name: str=None, is_internal: bool=None, refresh_rate: int=None, resolution_height: int=None, resolution_width: int=None):
        """GoogleChromeManagementV1DisplayInfo - a model defined in OpenAPI

        :param device_id: The device_id of this GoogleChromeManagementV1DisplayInfo.
        :param display_name: The display_name of this GoogleChromeManagementV1DisplayInfo.
        :param is_internal: The is_internal of this GoogleChromeManagementV1DisplayInfo.
        :param refresh_rate: The refresh_rate of this GoogleChromeManagementV1DisplayInfo.
        :param resolution_height: The resolution_height of this GoogleChromeManagementV1DisplayInfo.
        :param resolution_width: The resolution_width of this GoogleChromeManagementV1DisplayInfo.
        """
        self.openapi_types = {
            'device_id': str,
            'display_name': str,
            'is_internal': bool,
            'refresh_rate': int,
            'resolution_height': int,
            'resolution_width': int
        }

        self.attribute_map = {
            'device_id': 'deviceId',
            'display_name': 'displayName',
            'is_internal': 'isInternal',
            'refresh_rate': 'refreshRate',
            'resolution_height': 'resolutionHeight',
            'resolution_width': 'resolutionWidth'
        }

        self._device_id = device_id
        self._display_name = display_name
        self._is_internal = is_internal
        self._refresh_rate = refresh_rate
        self._resolution_height = resolution_height
        self._resolution_width = resolution_width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1DisplayInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1DisplayInfo of this GoogleChromeManagementV1DisplayInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_id(self):
        """Gets the device_id of this GoogleChromeManagementV1DisplayInfo.

        Output only. Represents the graphics card device id.

        :return: The device_id of this GoogleChromeManagementV1DisplayInfo.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this GoogleChromeManagementV1DisplayInfo.

        Output only. Represents the graphics card device id.

        :param device_id: The device_id of this GoogleChromeManagementV1DisplayInfo.
        :type device_id: str
        """

        self._device_id = device_id

    @property
    def display_name(self):
        """Gets the display_name of this GoogleChromeManagementV1DisplayInfo.

        Output only. Display device name.

        :return: The display_name of this GoogleChromeManagementV1DisplayInfo.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleChromeManagementV1DisplayInfo.

        Output only. Display device name.

        :param display_name: The display_name of this GoogleChromeManagementV1DisplayInfo.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def is_internal(self):
        """Gets the is_internal of this GoogleChromeManagementV1DisplayInfo.

        Output only. Indicates if display is internal or not.

        :return: The is_internal of this GoogleChromeManagementV1DisplayInfo.
        :rtype: bool
        """
        return self._is_internal

    @is_internal.setter
    def is_internal(self, is_internal):
        """Sets the is_internal of this GoogleChromeManagementV1DisplayInfo.

        Output only. Indicates if display is internal or not.

        :param is_internal: The is_internal of this GoogleChromeManagementV1DisplayInfo.
        :type is_internal: bool
        """

        self._is_internal = is_internal

    @property
    def refresh_rate(self):
        """Gets the refresh_rate of this GoogleChromeManagementV1DisplayInfo.

        Output only. Refresh rate in Hz.

        :return: The refresh_rate of this GoogleChromeManagementV1DisplayInfo.
        :rtype: int
        """
        return self._refresh_rate

    @refresh_rate.setter
    def refresh_rate(self, refresh_rate):
        """Sets the refresh_rate of this GoogleChromeManagementV1DisplayInfo.

        Output only. Refresh rate in Hz.

        :param refresh_rate: The refresh_rate of this GoogleChromeManagementV1DisplayInfo.
        :type refresh_rate: int
        """

        self._refresh_rate = refresh_rate

    @property
    def resolution_height(self):
        """Gets the resolution_height of this GoogleChromeManagementV1DisplayInfo.

        Output only. Resolution height in pixels.

        :return: The resolution_height of this GoogleChromeManagementV1DisplayInfo.
        :rtype: int
        """
        return self._resolution_height

    @resolution_height.setter
    def resolution_height(self, resolution_height):
        """Sets the resolution_height of this GoogleChromeManagementV1DisplayInfo.

        Output only. Resolution height in pixels.

        :param resolution_height: The resolution_height of this GoogleChromeManagementV1DisplayInfo.
        :type resolution_height: int
        """

        self._resolution_height = resolution_height

    @property
    def resolution_width(self):
        """Gets the resolution_width of this GoogleChromeManagementV1DisplayInfo.

        Output only. Resolution width in pixels.

        :return: The resolution_width of this GoogleChromeManagementV1DisplayInfo.
        :rtype: int
        """
        return self._resolution_width

    @resolution_width.setter
    def resolution_width(self, resolution_width):
        """Sets the resolution_width of this GoogleChromeManagementV1DisplayInfo.

        Output only. Resolution width in pixels.

        :param resolution_width: The resolution_width of this GoogleChromeManagementV1DisplayInfo.
        :type resolution_width: int
        """

        self._resolution_width = resolution_width
