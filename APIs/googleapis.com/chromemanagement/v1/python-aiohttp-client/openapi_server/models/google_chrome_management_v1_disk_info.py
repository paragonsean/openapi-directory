# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChromeManagementV1DiskInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bytes_read_this_session: str=None, bytes_written_this_session: str=None, discard_time_this_session: str=None, health: str=None, io_time_this_session: str=None, manufacturer: str=None, model: str=None, read_time_this_session: str=None, serial_number: str=None, size_bytes: str=None, type: str=None, volume_ids: List[str]=None, write_time_this_session: str=None):
        """GoogleChromeManagementV1DiskInfo - a model defined in OpenAPI

        :param bytes_read_this_session: The bytes_read_this_session of this GoogleChromeManagementV1DiskInfo.
        :param bytes_written_this_session: The bytes_written_this_session of this GoogleChromeManagementV1DiskInfo.
        :param discard_time_this_session: The discard_time_this_session of this GoogleChromeManagementV1DiskInfo.
        :param health: The health of this GoogleChromeManagementV1DiskInfo.
        :param io_time_this_session: The io_time_this_session of this GoogleChromeManagementV1DiskInfo.
        :param manufacturer: The manufacturer of this GoogleChromeManagementV1DiskInfo.
        :param model: The model of this GoogleChromeManagementV1DiskInfo.
        :param read_time_this_session: The read_time_this_session of this GoogleChromeManagementV1DiskInfo.
        :param serial_number: The serial_number of this GoogleChromeManagementV1DiskInfo.
        :param size_bytes: The size_bytes of this GoogleChromeManagementV1DiskInfo.
        :param type: The type of this GoogleChromeManagementV1DiskInfo.
        :param volume_ids: The volume_ids of this GoogleChromeManagementV1DiskInfo.
        :param write_time_this_session: The write_time_this_session of this GoogleChromeManagementV1DiskInfo.
        """
        self.openapi_types = {
            'bytes_read_this_session': str,
            'bytes_written_this_session': str,
            'discard_time_this_session': str,
            'health': str,
            'io_time_this_session': str,
            'manufacturer': str,
            'model': str,
            'read_time_this_session': str,
            'serial_number': str,
            'size_bytes': str,
            'type': str,
            'volume_ids': List[str],
            'write_time_this_session': str
        }

        self.attribute_map = {
            'bytes_read_this_session': 'bytesReadThisSession',
            'bytes_written_this_session': 'bytesWrittenThisSession',
            'discard_time_this_session': 'discardTimeThisSession',
            'health': 'health',
            'io_time_this_session': 'ioTimeThisSession',
            'manufacturer': 'manufacturer',
            'model': 'model',
            'read_time_this_session': 'readTimeThisSession',
            'serial_number': 'serialNumber',
            'size_bytes': 'sizeBytes',
            'type': 'type',
            'volume_ids': 'volumeIds',
            'write_time_this_session': 'writeTimeThisSession'
        }

        self._bytes_read_this_session = bytes_read_this_session
        self._bytes_written_this_session = bytes_written_this_session
        self._discard_time_this_session = discard_time_this_session
        self._health = health
        self._io_time_this_session = io_time_this_session
        self._manufacturer = manufacturer
        self._model = model
        self._read_time_this_session = read_time_this_session
        self._serial_number = serial_number
        self._size_bytes = size_bytes
        self._type = type
        self._volume_ids = volume_ids
        self._write_time_this_session = write_time_this_session

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1DiskInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1DiskInfo of this GoogleChromeManagementV1DiskInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bytes_read_this_session(self):
        """Gets the bytes_read_this_session of this GoogleChromeManagementV1DiskInfo.

        Output only. Number of bytes read since last boot.

        :return: The bytes_read_this_session of this GoogleChromeManagementV1DiskInfo.
        :rtype: str
        """
        return self._bytes_read_this_session

    @bytes_read_this_session.setter
    def bytes_read_this_session(self, bytes_read_this_session):
        """Sets the bytes_read_this_session of this GoogleChromeManagementV1DiskInfo.

        Output only. Number of bytes read since last boot.

        :param bytes_read_this_session: The bytes_read_this_session of this GoogleChromeManagementV1DiskInfo.
        :type bytes_read_this_session: str
        """

        self._bytes_read_this_session = bytes_read_this_session

    @property
    def bytes_written_this_session(self):
        """Gets the bytes_written_this_session of this GoogleChromeManagementV1DiskInfo.

        Output only. Number of bytes written since last boot.

        :return: The bytes_written_this_session of this GoogleChromeManagementV1DiskInfo.
        :rtype: str
        """
        return self._bytes_written_this_session

    @bytes_written_this_session.setter
    def bytes_written_this_session(self, bytes_written_this_session):
        """Sets the bytes_written_this_session of this GoogleChromeManagementV1DiskInfo.

        Output only. Number of bytes written since last boot.

        :param bytes_written_this_session: The bytes_written_this_session of this GoogleChromeManagementV1DiskInfo.
        :type bytes_written_this_session: str
        """

        self._bytes_written_this_session = bytes_written_this_session

    @property
    def discard_time_this_session(self):
        """Gets the discard_time_this_session of this GoogleChromeManagementV1DiskInfo.

        Output only. Time spent discarding since last boot. Discarding is writing to clear blocks which are no longer in use. Supported on kernels 4.18+.

        :return: The discard_time_this_session of this GoogleChromeManagementV1DiskInfo.
        :rtype: str
        """
        return self._discard_time_this_session

    @discard_time_this_session.setter
    def discard_time_this_session(self, discard_time_this_session):
        """Sets the discard_time_this_session of this GoogleChromeManagementV1DiskInfo.

        Output only. Time spent discarding since last boot. Discarding is writing to clear blocks which are no longer in use. Supported on kernels 4.18+.

        :param discard_time_this_session: The discard_time_this_session of this GoogleChromeManagementV1DiskInfo.
        :type discard_time_this_session: str
        """

        self._discard_time_this_session = discard_time_this_session

    @property
    def health(self):
        """Gets the health of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk health.

        :return: The health of this GoogleChromeManagementV1DiskInfo.
        :rtype: str
        """
        return self._health

    @health.setter
    def health(self, health):
        """Sets the health of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk health.

        :param health: The health of this GoogleChromeManagementV1DiskInfo.
        :type health: str
        """

        self._health = health

    @property
    def io_time_this_session(self):
        """Gets the io_time_this_session of this GoogleChromeManagementV1DiskInfo.

        Output only. Counts the time the disk and queue were busy, so unlike the fields above, parallel requests are not counted multiple times.

        :return: The io_time_this_session of this GoogleChromeManagementV1DiskInfo.
        :rtype: str
        """
        return self._io_time_this_session

    @io_time_this_session.setter
    def io_time_this_session(self, io_time_this_session):
        """Sets the io_time_this_session of this GoogleChromeManagementV1DiskInfo.

        Output only. Counts the time the disk and queue were busy, so unlike the fields above, parallel requests are not counted multiple times.

        :param io_time_this_session: The io_time_this_session of this GoogleChromeManagementV1DiskInfo.
        :type io_time_this_session: str
        """

        self._io_time_this_session = io_time_this_session

    @property
    def manufacturer(self):
        """Gets the manufacturer of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk manufacturer.

        :return: The manufacturer of this GoogleChromeManagementV1DiskInfo.
        :rtype: str
        """
        return self._manufacturer

    @manufacturer.setter
    def manufacturer(self, manufacturer):
        """Sets the manufacturer of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk manufacturer.

        :param manufacturer: The manufacturer of this GoogleChromeManagementV1DiskInfo.
        :type manufacturer: str
        """

        self._manufacturer = manufacturer

    @property
    def model(self):
        """Gets the model of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk model.

        :return: The model of this GoogleChromeManagementV1DiskInfo.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk model.

        :param model: The model of this GoogleChromeManagementV1DiskInfo.
        :type model: str
        """

        self._model = model

    @property
    def read_time_this_session(self):
        """Gets the read_time_this_session of this GoogleChromeManagementV1DiskInfo.

        Output only. Time spent reading from disk since last boot.

        :return: The read_time_this_session of this GoogleChromeManagementV1DiskInfo.
        :rtype: str
        """
        return self._read_time_this_session

    @read_time_this_session.setter
    def read_time_this_session(self, read_time_this_session):
        """Sets the read_time_this_session of this GoogleChromeManagementV1DiskInfo.

        Output only. Time spent reading from disk since last boot.

        :param read_time_this_session: The read_time_this_session of this GoogleChromeManagementV1DiskInfo.
        :type read_time_this_session: str
        """

        self._read_time_this_session = read_time_this_session

    @property
    def serial_number(self):
        """Gets the serial_number of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk serial number.

        :return: The serial_number of this GoogleChromeManagementV1DiskInfo.
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk serial number.

        :param serial_number: The serial_number of this GoogleChromeManagementV1DiskInfo.
        :type serial_number: str
        """

        self._serial_number = serial_number

    @property
    def size_bytes(self):
        """Gets the size_bytes of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk size.

        :return: The size_bytes of this GoogleChromeManagementV1DiskInfo.
        :rtype: str
        """
        return self._size_bytes

    @size_bytes.setter
    def size_bytes(self, size_bytes):
        """Sets the size_bytes of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk size.

        :param size_bytes: The size_bytes of this GoogleChromeManagementV1DiskInfo.
        :type size_bytes: str
        """

        self._size_bytes = size_bytes

    @property
    def type(self):
        """Gets the type of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk type: eMMC / NVMe / ATA / SCSI.

        :return: The type of this GoogleChromeManagementV1DiskInfo.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk type: eMMC / NVMe / ATA / SCSI.

        :param type: The type of this GoogleChromeManagementV1DiskInfo.
        :type type: str
        """

        self._type = type

    @property
    def volume_ids(self):
        """Gets the volume_ids of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk volumes.

        :return: The volume_ids of this GoogleChromeManagementV1DiskInfo.
        :rtype: List[str]
        """
        return self._volume_ids

    @volume_ids.setter
    def volume_ids(self, volume_ids):
        """Sets the volume_ids of this GoogleChromeManagementV1DiskInfo.

        Output only. Disk volumes.

        :param volume_ids: The volume_ids of this GoogleChromeManagementV1DiskInfo.
        :type volume_ids: List[str]
        """

        self._volume_ids = volume_ids

    @property
    def write_time_this_session(self):
        """Gets the write_time_this_session of this GoogleChromeManagementV1DiskInfo.

        Output only. Time spent writing to disk since last boot.

        :return: The write_time_this_session of this GoogleChromeManagementV1DiskInfo.
        :rtype: str
        """
        return self._write_time_this_session

    @write_time_this_session.setter
    def write_time_this_session(self, write_time_this_session):
        """Sets the write_time_this_session of this GoogleChromeManagementV1DiskInfo.

        Output only. Time spent writing to disk since last boot.

        :param write_time_this_session: The write_time_this_session of this GoogleChromeManagementV1DiskInfo.
        :type write_time_this_session: str
        """

        self._write_time_this_session = write_time_this_session
