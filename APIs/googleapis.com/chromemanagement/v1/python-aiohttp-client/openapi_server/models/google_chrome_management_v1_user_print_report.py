# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChromeManagementV1UserPrintReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_count: str=None, job_count: str=None, printer_count: str=None, user_email: str=None, user_id: str=None):
        """GoogleChromeManagementV1UserPrintReport - a model defined in OpenAPI

        :param device_count: The device_count of this GoogleChromeManagementV1UserPrintReport.
        :param job_count: The job_count of this GoogleChromeManagementV1UserPrintReport.
        :param printer_count: The printer_count of this GoogleChromeManagementV1UserPrintReport.
        :param user_email: The user_email of this GoogleChromeManagementV1UserPrintReport.
        :param user_id: The user_id of this GoogleChromeManagementV1UserPrintReport.
        """
        self.openapi_types = {
            'device_count': str,
            'job_count': str,
            'printer_count': str,
            'user_email': str,
            'user_id': str
        }

        self.attribute_map = {
            'device_count': 'deviceCount',
            'job_count': 'jobCount',
            'printer_count': 'printerCount',
            'user_email': 'userEmail',
            'user_id': 'userId'
        }

        self._device_count = device_count
        self._job_count = job_count
        self._printer_count = printer_count
        self._user_email = user_email
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromeManagementV1UserPrintReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromeManagementV1UserPrintReport of this GoogleChromeManagementV1UserPrintReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_count(self):
        """Gets the device_count of this GoogleChromeManagementV1UserPrintReport.

        Number of chrome devices that have been used to initiate print jobs by the user.

        :return: The device_count of this GoogleChromeManagementV1UserPrintReport.
        :rtype: str
        """
        return self._device_count

    @device_count.setter
    def device_count(self, device_count):
        """Sets the device_count of this GoogleChromeManagementV1UserPrintReport.

        Number of chrome devices that have been used to initiate print jobs by the user.

        :param device_count: The device_count of this GoogleChromeManagementV1UserPrintReport.
        :type device_count: str
        """

        self._device_count = device_count

    @property
    def job_count(self):
        """Gets the job_count of this GoogleChromeManagementV1UserPrintReport.

        Number of print jobs initiated by the user.

        :return: The job_count of this GoogleChromeManagementV1UserPrintReport.
        :rtype: str
        """
        return self._job_count

    @job_count.setter
    def job_count(self, job_count):
        """Sets the job_count of this GoogleChromeManagementV1UserPrintReport.

        Number of print jobs initiated by the user.

        :param job_count: The job_count of this GoogleChromeManagementV1UserPrintReport.
        :type job_count: str
        """

        self._job_count = job_count

    @property
    def printer_count(self):
        """Gets the printer_count of this GoogleChromeManagementV1UserPrintReport.

        Number of printers used by the user.

        :return: The printer_count of this GoogleChromeManagementV1UserPrintReport.
        :rtype: str
        """
        return self._printer_count

    @printer_count.setter
    def printer_count(self, printer_count):
        """Sets the printer_count of this GoogleChromeManagementV1UserPrintReport.

        Number of printers used by the user.

        :param printer_count: The printer_count of this GoogleChromeManagementV1UserPrintReport.
        :type printer_count: str
        """

        self._printer_count = printer_count

    @property
    def user_email(self):
        """Gets the user_email of this GoogleChromeManagementV1UserPrintReport.

        The primary e-mail address of the user.

        :return: The user_email of this GoogleChromeManagementV1UserPrintReport.
        :rtype: str
        """
        return self._user_email

    @user_email.setter
    def user_email(self, user_email):
        """Sets the user_email of this GoogleChromeManagementV1UserPrintReport.

        The primary e-mail address of the user.

        :param user_email: The user_email of this GoogleChromeManagementV1UserPrintReport.
        :type user_email: str
        """

        self._user_email = user_email

    @property
    def user_id(self):
        """Gets the user_id of this GoogleChromeManagementV1UserPrintReport.

        The unique Directory API ID of the user.

        :return: The user_id of this GoogleChromeManagementV1UserPrintReport.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this GoogleChromeManagementV1UserPrintReport.

        The unique Directory API ID of the user.

        :param user_id: The user_id of this GoogleChromeManagementV1UserPrintReport.
        :type user_id: str
        """

        self._user_id = user_id
