/*
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleChromeManagementV1AndroidAppInfo;
import org.openapitools.client.model.GoogleChromeManagementV1ChromeAppInfo;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Resource representing app details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:04.349803-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleChromeManagementV1AppDetails {
  public static final String SERIALIZED_NAME_ANDROID_APP_INFO = "androidAppInfo";
  @SerializedName(SERIALIZED_NAME_ANDROID_APP_INFO)
  private GoogleChromeManagementV1AndroidAppInfo androidAppInfo;

  public static final String SERIALIZED_NAME_APP_ID = "appId";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  public static final String SERIALIZED_NAME_CHROME_APP_INFO = "chromeAppInfo";
  @SerializedName(SERIALIZED_NAME_CHROME_APP_INFO)
  private GoogleChromeManagementV1ChromeAppInfo chromeAppInfo;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DETAIL_URI = "detailUri";
  @SerializedName(SERIALIZED_NAME_DETAIL_URI)
  private String detailUri;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_FIRST_PUBLISH_TIME = "firstPublishTime";
  @SerializedName(SERIALIZED_NAME_FIRST_PUBLISH_TIME)
  private String firstPublishTime;

  public static final String SERIALIZED_NAME_HOMEPAGE_URI = "homepageUri";
  @SerializedName(SERIALIZED_NAME_HOMEPAGE_URI)
  private String homepageUri;

  public static final String SERIALIZED_NAME_ICON_URI = "iconUri";
  @SerializedName(SERIALIZED_NAME_ICON_URI)
  private String iconUri;

  public static final String SERIALIZED_NAME_IS_PAID_APP = "isPaidApp";
  @SerializedName(SERIALIZED_NAME_IS_PAID_APP)
  private Boolean isPaidApp;

  public static final String SERIALIZED_NAME_LATEST_PUBLISH_TIME = "latestPublishTime";
  @SerializedName(SERIALIZED_NAME_LATEST_PUBLISH_TIME)
  private String latestPublishTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRIVACY_POLICY_URI = "privacyPolicyUri";
  @SerializedName(SERIALIZED_NAME_PRIVACY_POLICY_URI)
  private String privacyPolicyUri;

  public static final String SERIALIZED_NAME_PUBLISHER = "publisher";
  @SerializedName(SERIALIZED_NAME_PUBLISHER)
  private String publisher;

  public static final String SERIALIZED_NAME_REVIEW_NUMBER = "reviewNumber";
  @SerializedName(SERIALIZED_NAME_REVIEW_NUMBER)
  private String reviewNumber;

  public static final String SERIALIZED_NAME_REVIEW_RATING = "reviewRating";
  @SerializedName(SERIALIZED_NAME_REVIEW_RATING)
  private Float reviewRating;

  public static final String SERIALIZED_NAME_REVISION_ID = "revisionId";
  @SerializedName(SERIALIZED_NAME_REVISION_ID)
  private String revisionId;

  public static final String SERIALIZED_NAME_SERVICE_ERROR = "serviceError";
  @SerializedName(SERIALIZED_NAME_SERVICE_ERROR)
  private GoogleRpcStatus serviceError;

  /**
   * Output only. App type.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    APP_ITEM_TYPE_UNSPECIFIED("APP_ITEM_TYPE_UNSPECIFIED"),
    
    CHROME("CHROME"),
    
    ANDROID("ANDROID"),
    
    WEB("WEB");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public GoogleChromeManagementV1AppDetails() {
  }

  public GoogleChromeManagementV1AppDetails(
     String appId, 
     String description, 
     String detailUri, 
     String displayName, 
     String firstPublishTime, 
     String homepageUri, 
     String iconUri, 
     Boolean isPaidApp, 
     String latestPublishTime, 
     String name, 
     String privacyPolicyUri, 
     String publisher, 
     String reviewNumber, 
     Float reviewRating, 
     String revisionId, 
     TypeEnum type
  ) {
    this();
    this.appId = appId;
    this.description = description;
    this.detailUri = detailUri;
    this.displayName = displayName;
    this.firstPublishTime = firstPublishTime;
    this.homepageUri = homepageUri;
    this.iconUri = iconUri;
    this.isPaidApp = isPaidApp;
    this.latestPublishTime = latestPublishTime;
    this.name = name;
    this.privacyPolicyUri = privacyPolicyUri;
    this.publisher = publisher;
    this.reviewNumber = reviewNumber;
    this.reviewRating = reviewRating;
    this.revisionId = revisionId;
    this.type = type;
  }

  public GoogleChromeManagementV1AppDetails androidAppInfo(GoogleChromeManagementV1AndroidAppInfo androidAppInfo) {
    this.androidAppInfo = androidAppInfo;
    return this;
  }

  /**
   * Get androidAppInfo
   * @return androidAppInfo
   */
  @javax.annotation.Nullable
  public GoogleChromeManagementV1AndroidAppInfo getAndroidAppInfo() {
    return androidAppInfo;
  }

  public void setAndroidAppInfo(GoogleChromeManagementV1AndroidAppInfo androidAppInfo) {
    this.androidAppInfo = androidAppInfo;
  }


  /**
   * Output only. Unique store identifier for the item. Examples: \&quot;gmbmikajjgmnabiglmofipeabaddhgne\&quot; for the Save to Google Drive Chrome extension, \&quot;com.google.android.apps.docs\&quot; for the Google Drive Android app.
   * @return appId
   */
  @javax.annotation.Nullable
  public String getAppId() {
    return appId;
  }



  public GoogleChromeManagementV1AppDetails chromeAppInfo(GoogleChromeManagementV1ChromeAppInfo chromeAppInfo) {
    this.chromeAppInfo = chromeAppInfo;
    return this;
  }

  /**
   * Get chromeAppInfo
   * @return chromeAppInfo
   */
  @javax.annotation.Nullable
  public GoogleChromeManagementV1ChromeAppInfo getChromeAppInfo() {
    return chromeAppInfo;
  }

  public void setChromeAppInfo(GoogleChromeManagementV1ChromeAppInfo chromeAppInfo) {
    this.chromeAppInfo = chromeAppInfo;
  }


  /**
   * Output only. App&#39;s description.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }



  /**
   * Output only. The uri for the detail page of the item.
   * @return detailUri
   */
  @javax.annotation.Nullable
  public String getDetailUri() {
    return detailUri;
  }



  /**
   * Output only. App&#39;s display name.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }



  /**
   * Output only. First published time.
   * @return firstPublishTime
   */
  @javax.annotation.Nullable
  public String getFirstPublishTime() {
    return firstPublishTime;
  }



  /**
   * Output only. Home page or Website uri.
   * @return homepageUri
   */
  @javax.annotation.Nullable
  public String getHomepageUri() {
    return homepageUri;
  }



  /**
   * Output only. A link to an image that can be used as an icon for the product.
   * @return iconUri
   */
  @javax.annotation.Nullable
  public String getIconUri() {
    return iconUri;
  }



  /**
   * Output only. Indicates if the app has to be paid for OR has paid content.
   * @return isPaidApp
   */
  @javax.annotation.Nullable
  public Boolean getIsPaidApp() {
    return isPaidApp;
  }



  /**
   * Output only. Latest published time.
   * @return latestPublishTime
   */
  @javax.annotation.Nullable
  public String getLatestPublishTime() {
    return latestPublishTime;
  }



  /**
   * Output only. Format: name&#x3D;customers/{customer_id}/apps/{chrome|android|web}/{app_id}@{version}
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. The URI pointing to the privacy policy of the app, if it was provided by the developer. Version-specific field that will only be set when the requested app version is found.
   * @return privacyPolicyUri
   */
  @javax.annotation.Nullable
  public String getPrivacyPolicyUri() {
    return privacyPolicyUri;
  }



  /**
   * Output only. The publisher of the item.
   * @return publisher
   */
  @javax.annotation.Nullable
  public String getPublisher() {
    return publisher;
  }



  /**
   * Output only. Number of reviews received. Chrome Web Store review information will always be for the latest version of an app.
   * @return reviewNumber
   */
  @javax.annotation.Nullable
  public String getReviewNumber() {
    return reviewNumber;
  }



  /**
   * Output only. The rating of the app (on 5 stars). Chrome Web Store review information will always be for the latest version of an app.
   * @return reviewRating
   */
  @javax.annotation.Nullable
  public Float getReviewRating() {
    return reviewRating;
  }



  /**
   * Output only. App version. A new revision is committed whenever a new version of the app is published.
   * @return revisionId
   */
  @javax.annotation.Nullable
  public String getRevisionId() {
    return revisionId;
  }



  public GoogleChromeManagementV1AppDetails serviceError(GoogleRpcStatus serviceError) {
    this.serviceError = serviceError;
    return this;
  }

  /**
   * Get serviceError
   * @return serviceError
   */
  @javax.annotation.Nullable
  public GoogleRpcStatus getServiceError() {
    return serviceError;
  }

  public void setServiceError(GoogleRpcStatus serviceError) {
    this.serviceError = serviceError;
  }


  /**
   * Output only. App type.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleChromeManagementV1AppDetails googleChromeManagementV1AppDetails = (GoogleChromeManagementV1AppDetails) o;
    return Objects.equals(this.androidAppInfo, googleChromeManagementV1AppDetails.androidAppInfo) &&
        Objects.equals(this.appId, googleChromeManagementV1AppDetails.appId) &&
        Objects.equals(this.chromeAppInfo, googleChromeManagementV1AppDetails.chromeAppInfo) &&
        Objects.equals(this.description, googleChromeManagementV1AppDetails.description) &&
        Objects.equals(this.detailUri, googleChromeManagementV1AppDetails.detailUri) &&
        Objects.equals(this.displayName, googleChromeManagementV1AppDetails.displayName) &&
        Objects.equals(this.firstPublishTime, googleChromeManagementV1AppDetails.firstPublishTime) &&
        Objects.equals(this.homepageUri, googleChromeManagementV1AppDetails.homepageUri) &&
        Objects.equals(this.iconUri, googleChromeManagementV1AppDetails.iconUri) &&
        Objects.equals(this.isPaidApp, googleChromeManagementV1AppDetails.isPaidApp) &&
        Objects.equals(this.latestPublishTime, googleChromeManagementV1AppDetails.latestPublishTime) &&
        Objects.equals(this.name, googleChromeManagementV1AppDetails.name) &&
        Objects.equals(this.privacyPolicyUri, googleChromeManagementV1AppDetails.privacyPolicyUri) &&
        Objects.equals(this.publisher, googleChromeManagementV1AppDetails.publisher) &&
        Objects.equals(this.reviewNumber, googleChromeManagementV1AppDetails.reviewNumber) &&
        Objects.equals(this.reviewRating, googleChromeManagementV1AppDetails.reviewRating) &&
        Objects.equals(this.revisionId, googleChromeManagementV1AppDetails.revisionId) &&
        Objects.equals(this.serviceError, googleChromeManagementV1AppDetails.serviceError) &&
        Objects.equals(this.type, googleChromeManagementV1AppDetails.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(androidAppInfo, appId, chromeAppInfo, description, detailUri, displayName, firstPublishTime, homepageUri, iconUri, isPaidApp, latestPublishTime, name, privacyPolicyUri, publisher, reviewNumber, reviewRating, revisionId, serviceError, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleChromeManagementV1AppDetails {\n");
    sb.append("    androidAppInfo: ").append(toIndentedString(androidAppInfo)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    chromeAppInfo: ").append(toIndentedString(chromeAppInfo)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    detailUri: ").append(toIndentedString(detailUri)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    firstPublishTime: ").append(toIndentedString(firstPublishTime)).append("\n");
    sb.append("    homepageUri: ").append(toIndentedString(homepageUri)).append("\n");
    sb.append("    iconUri: ").append(toIndentedString(iconUri)).append("\n");
    sb.append("    isPaidApp: ").append(toIndentedString(isPaidApp)).append("\n");
    sb.append("    latestPublishTime: ").append(toIndentedString(latestPublishTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    privacyPolicyUri: ").append(toIndentedString(privacyPolicyUri)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    reviewNumber: ").append(toIndentedString(reviewNumber)).append("\n");
    sb.append("    reviewRating: ").append(toIndentedString(reviewRating)).append("\n");
    sb.append("    revisionId: ").append(toIndentedString(revisionId)).append("\n");
    sb.append("    serviceError: ").append(toIndentedString(serviceError)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("androidAppInfo");
    openapiFields.add("appId");
    openapiFields.add("chromeAppInfo");
    openapiFields.add("description");
    openapiFields.add("detailUri");
    openapiFields.add("displayName");
    openapiFields.add("firstPublishTime");
    openapiFields.add("homepageUri");
    openapiFields.add("iconUri");
    openapiFields.add("isPaidApp");
    openapiFields.add("latestPublishTime");
    openapiFields.add("name");
    openapiFields.add("privacyPolicyUri");
    openapiFields.add("publisher");
    openapiFields.add("reviewNumber");
    openapiFields.add("reviewRating");
    openapiFields.add("revisionId");
    openapiFields.add("serviceError");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleChromeManagementV1AppDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleChromeManagementV1AppDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleChromeManagementV1AppDetails is not found in the empty JSON string", GoogleChromeManagementV1AppDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleChromeManagementV1AppDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleChromeManagementV1AppDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `androidAppInfo`
      if (jsonObj.get("androidAppInfo") != null && !jsonObj.get("androidAppInfo").isJsonNull()) {
        GoogleChromeManagementV1AndroidAppInfo.validateJsonElement(jsonObj.get("androidAppInfo"));
      }
      if ((jsonObj.get("appId") != null && !jsonObj.get("appId").isJsonNull()) && !jsonObj.get("appId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appId").toString()));
      }
      // validate the optional field `chromeAppInfo`
      if (jsonObj.get("chromeAppInfo") != null && !jsonObj.get("chromeAppInfo").isJsonNull()) {
        GoogleChromeManagementV1ChromeAppInfo.validateJsonElement(jsonObj.get("chromeAppInfo"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("detailUri") != null && !jsonObj.get("detailUri").isJsonNull()) && !jsonObj.get("detailUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `detailUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("detailUri").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("firstPublishTime") != null && !jsonObj.get("firstPublishTime").isJsonNull()) && !jsonObj.get("firstPublishTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstPublishTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstPublishTime").toString()));
      }
      if ((jsonObj.get("homepageUri") != null && !jsonObj.get("homepageUri").isJsonNull()) && !jsonObj.get("homepageUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homepageUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homepageUri").toString()));
      }
      if ((jsonObj.get("iconUri") != null && !jsonObj.get("iconUri").isJsonNull()) && !jsonObj.get("iconUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iconUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iconUri").toString()));
      }
      if ((jsonObj.get("latestPublishTime") != null && !jsonObj.get("latestPublishTime").isJsonNull()) && !jsonObj.get("latestPublishTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latestPublishTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latestPublishTime").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("privacyPolicyUri") != null && !jsonObj.get("privacyPolicyUri").isJsonNull()) && !jsonObj.get("privacyPolicyUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privacyPolicyUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privacyPolicyUri").toString()));
      }
      if ((jsonObj.get("publisher") != null && !jsonObj.get("publisher").isJsonNull()) && !jsonObj.get("publisher").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisher` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisher").toString()));
      }
      if ((jsonObj.get("reviewNumber") != null && !jsonObj.get("reviewNumber").isJsonNull()) && !jsonObj.get("reviewNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reviewNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reviewNumber").toString()));
      }
      if ((jsonObj.get("revisionId") != null && !jsonObj.get("revisionId").isJsonNull()) && !jsonObj.get("revisionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revisionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revisionId").toString()));
      }
      // validate the optional field `serviceError`
      if (jsonObj.get("serviceError") != null && !jsonObj.get("serviceError").isJsonNull()) {
        GoogleRpcStatus.validateJsonElement(jsonObj.get("serviceError"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleChromeManagementV1AppDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleChromeManagementV1AppDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleChromeManagementV1AppDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleChromeManagementV1AppDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleChromeManagementV1AppDetails>() {
           @Override
           public void write(JsonWriter out, GoogleChromeManagementV1AppDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleChromeManagementV1AppDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleChromeManagementV1AppDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleChromeManagementV1AppDetails
   * @throws IOException if the JSON string is invalid with respect to GoogleChromeManagementV1AppDetails
   */
  public static GoogleChromeManagementV1AppDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleChromeManagementV1AppDetails.class);
  }

  /**
   * Convert an instance of GoogleChromeManagementV1AppDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

