/*
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Details of an app installation request.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:04.349803-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleChromeManagementV1ChromeAppRequest {
  public static final String SERIALIZED_NAME_APP_DETAILS = "appDetails";
  @SerializedName(SERIALIZED_NAME_APP_DETAILS)
  private String appDetails;

  public static final String SERIALIZED_NAME_APP_ID = "appId";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  public static final String SERIALIZED_NAME_DETAIL_URI = "detailUri";
  @SerializedName(SERIALIZED_NAME_DETAIL_URI)
  private String detailUri;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ICON_URI = "iconUri";
  @SerializedName(SERIALIZED_NAME_ICON_URI)
  private String iconUri;

  public static final String SERIALIZED_NAME_LATEST_REQUEST_TIME = "latestRequestTime";
  @SerializedName(SERIALIZED_NAME_LATEST_REQUEST_TIME)
  private String latestRequestTime;

  public static final String SERIALIZED_NAME_REQUEST_COUNT = "requestCount";
  @SerializedName(SERIALIZED_NAME_REQUEST_COUNT)
  private String requestCount;

  public GoogleChromeManagementV1ChromeAppRequest() {
  }

  public GoogleChromeManagementV1ChromeAppRequest(
     String appDetails, 
     String appId, 
     String detailUri, 
     String displayName, 
     String iconUri, 
     String latestRequestTime, 
     String requestCount
  ) {
    this();
    this.appDetails = appDetails;
    this.appId = appId;
    this.detailUri = detailUri;
    this.displayName = displayName;
    this.iconUri = iconUri;
    this.latestRequestTime = latestRequestTime;
    this.requestCount = requestCount;
  }

  /**
   * Output only. Format: app_details&#x3D;customers/{customer_id}/apps/chrome/{app_id}
   * @return appDetails
   */
  @javax.annotation.Nullable
  public String getAppDetails() {
    return appDetails;
  }



  /**
   * Output only. Unique store identifier for the app. Example: \&quot;gmbmikajjgmnabiglmofipeabaddhgne\&quot; for the Save to Google Drive Chrome extension.
   * @return appId
   */
  @javax.annotation.Nullable
  public String getAppId() {
    return appId;
  }



  /**
   * Output only. The uri for the detail page of the item.
   * @return detailUri
   */
  @javax.annotation.Nullable
  public String getDetailUri() {
    return detailUri;
  }



  /**
   * Output only. App&#39;s display name.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }



  /**
   * Output only. A link to an image that can be used as an icon for the product.
   * @return iconUri
   */
  @javax.annotation.Nullable
  public String getIconUri() {
    return iconUri;
  }



  /**
   * Output only. The timestamp of the most recently made request for this app.
   * @return latestRequestTime
   */
  @javax.annotation.Nullable
  public String getLatestRequestTime() {
    return latestRequestTime;
  }



  /**
   * Output only. Total count of requests for this app.
   * @return requestCount
   */
  @javax.annotation.Nullable
  public String getRequestCount() {
    return requestCount;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleChromeManagementV1ChromeAppRequest googleChromeManagementV1ChromeAppRequest = (GoogleChromeManagementV1ChromeAppRequest) o;
    return Objects.equals(this.appDetails, googleChromeManagementV1ChromeAppRequest.appDetails) &&
        Objects.equals(this.appId, googleChromeManagementV1ChromeAppRequest.appId) &&
        Objects.equals(this.detailUri, googleChromeManagementV1ChromeAppRequest.detailUri) &&
        Objects.equals(this.displayName, googleChromeManagementV1ChromeAppRequest.displayName) &&
        Objects.equals(this.iconUri, googleChromeManagementV1ChromeAppRequest.iconUri) &&
        Objects.equals(this.latestRequestTime, googleChromeManagementV1ChromeAppRequest.latestRequestTime) &&
        Objects.equals(this.requestCount, googleChromeManagementV1ChromeAppRequest.requestCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appDetails, appId, detailUri, displayName, iconUri, latestRequestTime, requestCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleChromeManagementV1ChromeAppRequest {\n");
    sb.append("    appDetails: ").append(toIndentedString(appDetails)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    detailUri: ").append(toIndentedString(detailUri)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    iconUri: ").append(toIndentedString(iconUri)).append("\n");
    sb.append("    latestRequestTime: ").append(toIndentedString(latestRequestTime)).append("\n");
    sb.append("    requestCount: ").append(toIndentedString(requestCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appDetails");
    openapiFields.add("appId");
    openapiFields.add("detailUri");
    openapiFields.add("displayName");
    openapiFields.add("iconUri");
    openapiFields.add("latestRequestTime");
    openapiFields.add("requestCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleChromeManagementV1ChromeAppRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleChromeManagementV1ChromeAppRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleChromeManagementV1ChromeAppRequest is not found in the empty JSON string", GoogleChromeManagementV1ChromeAppRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleChromeManagementV1ChromeAppRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleChromeManagementV1ChromeAppRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("appDetails") != null && !jsonObj.get("appDetails").isJsonNull()) && !jsonObj.get("appDetails").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appDetails` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appDetails").toString()));
      }
      if ((jsonObj.get("appId") != null && !jsonObj.get("appId").isJsonNull()) && !jsonObj.get("appId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appId").toString()));
      }
      if ((jsonObj.get("detailUri") != null && !jsonObj.get("detailUri").isJsonNull()) && !jsonObj.get("detailUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `detailUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("detailUri").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("iconUri") != null && !jsonObj.get("iconUri").isJsonNull()) && !jsonObj.get("iconUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iconUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iconUri").toString()));
      }
      if ((jsonObj.get("latestRequestTime") != null && !jsonObj.get("latestRequestTime").isJsonNull()) && !jsonObj.get("latestRequestTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latestRequestTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latestRequestTime").toString()));
      }
      if ((jsonObj.get("requestCount") != null && !jsonObj.get("requestCount").isJsonNull()) && !jsonObj.get("requestCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestCount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleChromeManagementV1ChromeAppRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleChromeManagementV1ChromeAppRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleChromeManagementV1ChromeAppRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleChromeManagementV1ChromeAppRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleChromeManagementV1ChromeAppRequest>() {
           @Override
           public void write(JsonWriter out, GoogleChromeManagementV1ChromeAppRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleChromeManagementV1ChromeAppRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleChromeManagementV1ChromeAppRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleChromeManagementV1ChromeAppRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleChromeManagementV1ChromeAppRequest
   */
  public static GoogleChromeManagementV1ChromeAppRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleChromeManagementV1ChromeAppRequest.class);
  }

  /**
   * Convert an instance of GoogleChromeManagementV1ChromeAppRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

