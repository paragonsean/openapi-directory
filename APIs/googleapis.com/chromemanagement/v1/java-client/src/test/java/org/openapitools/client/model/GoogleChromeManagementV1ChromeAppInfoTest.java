/*
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleChromeManagementV1ChromeAppPermission;
import org.openapitools.client.model.GoogleChromeManagementV1ChromeAppSiteAccess;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleChromeManagementV1ChromeAppInfo
 */
public class GoogleChromeManagementV1ChromeAppInfoTest {
    private final GoogleChromeManagementV1ChromeAppInfo model = new GoogleChromeManagementV1ChromeAppInfo();

    /**
     * Model tests for GoogleChromeManagementV1ChromeAppInfo
     */
    @Test
    public void testGoogleChromeManagementV1ChromeAppInfo() {
        // TODO: test GoogleChromeManagementV1ChromeAppInfo
    }

    /**
     * Test the property 'googleOwned'
     */
    @Test
    public void googleOwnedTest() {
        // TODO: test googleOwned
    }

    /**
     * Test the property 'isCwsHosted'
     */
    @Test
    public void isCwsHostedTest() {
        // TODO: test isCwsHosted
    }

    /**
     * Test the property 'isExtensionPolicySupported'
     */
    @Test
    public void isExtensionPolicySupportedTest() {
        // TODO: test isExtensionPolicySupported
    }

    /**
     * Test the property 'isKioskOnly'
     */
    @Test
    public void isKioskOnlyTest() {
        // TODO: test isKioskOnly
    }

    /**
     * Test the property 'isTheme'
     */
    @Test
    public void isThemeTest() {
        // TODO: test isTheme
    }

    /**
     * Test the property 'kioskEnabled'
     */
    @Test
    public void kioskEnabledTest() {
        // TODO: test kioskEnabled
    }

    /**
     * Test the property 'minUserCount'
     */
    @Test
    public void minUserCountTest() {
        // TODO: test minUserCount
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property 'siteAccess'
     */
    @Test
    public void siteAccessTest() {
        // TODO: test siteAccess
    }

    /**
     * Test the property 'supportEnabled'
     */
    @Test
    public void supportEnabledTest() {
        // TODO: test supportEnabled
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
