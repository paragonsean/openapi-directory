/*
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleChromeManagementV1AudioStatusReport;
import org.openapitools.client.model.GoogleChromeManagementV1BatteryInfo;
import org.openapitools.client.model.GoogleChromeManagementV1BatteryStatusReport;
import org.openapitools.client.model.GoogleChromeManagementV1BootPerformanceReport;
import org.openapitools.client.model.GoogleChromeManagementV1CpuInfo;
import org.openapitools.client.model.GoogleChromeManagementV1CpuStatusReport;
import org.openapitools.client.model.GoogleChromeManagementV1GraphicsInfo;
import org.openapitools.client.model.GoogleChromeManagementV1GraphicsStatusReport;
import org.openapitools.client.model.GoogleChromeManagementV1HeartbeatStatusReport;
import org.openapitools.client.model.GoogleChromeManagementV1KioskAppStatusReport;
import org.openapitools.client.model.GoogleChromeManagementV1MemoryInfo;
import org.openapitools.client.model.GoogleChromeManagementV1MemoryStatusReport;
import org.openapitools.client.model.GoogleChromeManagementV1NetworkBandwidthReport;
import org.openapitools.client.model.GoogleChromeManagementV1NetworkDiagnosticsReport;
import org.openapitools.client.model.GoogleChromeManagementV1NetworkInfo;
import org.openapitools.client.model.GoogleChromeManagementV1NetworkStatusReport;
import org.openapitools.client.model.GoogleChromeManagementV1OsUpdateStatus;
import org.openapitools.client.model.GoogleChromeManagementV1PeripheralsReport;
import org.openapitools.client.model.GoogleChromeManagementV1RuntimeCountersReport;
import org.openapitools.client.model.GoogleChromeManagementV1StorageInfo;
import org.openapitools.client.model.GoogleChromeManagementV1StorageStatusReport;
import org.openapitools.client.model.GoogleChromeManagementV1ThunderboltInfo;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleChromeManagementV1TelemetryDevice
 */
public class GoogleChromeManagementV1TelemetryDeviceTest {
    private final GoogleChromeManagementV1TelemetryDevice model = new GoogleChromeManagementV1TelemetryDevice();

    /**
     * Model tests for GoogleChromeManagementV1TelemetryDevice
     */
    @Test
    public void testGoogleChromeManagementV1TelemetryDevice() {
        // TODO: test GoogleChromeManagementV1TelemetryDevice
    }

    /**
     * Test the property 'audioStatusReport'
     */
    @Test
    public void audioStatusReportTest() {
        // TODO: test audioStatusReport
    }

    /**
     * Test the property 'batteryInfo'
     */
    @Test
    public void batteryInfoTest() {
        // TODO: test batteryInfo
    }

    /**
     * Test the property 'batteryStatusReport'
     */
    @Test
    public void batteryStatusReportTest() {
        // TODO: test batteryStatusReport
    }

    /**
     * Test the property 'bootPerformanceReport'
     */
    @Test
    public void bootPerformanceReportTest() {
        // TODO: test bootPerformanceReport
    }

    /**
     * Test the property 'cpuInfo'
     */
    @Test
    public void cpuInfoTest() {
        // TODO: test cpuInfo
    }

    /**
     * Test the property 'cpuStatusReport'
     */
    @Test
    public void cpuStatusReportTest() {
        // TODO: test cpuStatusReport
    }

    /**
     * Test the property 'customer'
     */
    @Test
    public void customerTest() {
        // TODO: test customer
    }

    /**
     * Test the property 'deviceId'
     */
    @Test
    public void deviceIdTest() {
        // TODO: test deviceId
    }

    /**
     * Test the property 'graphicsInfo'
     */
    @Test
    public void graphicsInfoTest() {
        // TODO: test graphicsInfo
    }

    /**
     * Test the property 'graphicsStatusReport'
     */
    @Test
    public void graphicsStatusReportTest() {
        // TODO: test graphicsStatusReport
    }

    /**
     * Test the property 'heartbeatStatusReport'
     */
    @Test
    public void heartbeatStatusReportTest() {
        // TODO: test heartbeatStatusReport
    }

    /**
     * Test the property 'kioskAppStatusReport'
     */
    @Test
    public void kioskAppStatusReportTest() {
        // TODO: test kioskAppStatusReport
    }

    /**
     * Test the property 'memoryInfo'
     */
    @Test
    public void memoryInfoTest() {
        // TODO: test memoryInfo
    }

    /**
     * Test the property 'memoryStatusReport'
     */
    @Test
    public void memoryStatusReportTest() {
        // TODO: test memoryStatusReport
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'networkBandwidthReport'
     */
    @Test
    public void networkBandwidthReportTest() {
        // TODO: test networkBandwidthReport
    }

    /**
     * Test the property 'networkDiagnosticsReport'
     */
    @Test
    public void networkDiagnosticsReportTest() {
        // TODO: test networkDiagnosticsReport
    }

    /**
     * Test the property 'networkInfo'
     */
    @Test
    public void networkInfoTest() {
        // TODO: test networkInfo
    }

    /**
     * Test the property 'networkStatusReport'
     */
    @Test
    public void networkStatusReportTest() {
        // TODO: test networkStatusReport
    }

    /**
     * Test the property 'orgUnitId'
     */
    @Test
    public void orgUnitIdTest() {
        // TODO: test orgUnitId
    }

    /**
     * Test the property 'osUpdateStatus'
     */
    @Test
    public void osUpdateStatusTest() {
        // TODO: test osUpdateStatus
    }

    /**
     * Test the property 'peripheralsReport'
     */
    @Test
    public void peripheralsReportTest() {
        // TODO: test peripheralsReport
    }

    /**
     * Test the property 'runtimeCountersReport'
     */
    @Test
    public void runtimeCountersReportTest() {
        // TODO: test runtimeCountersReport
    }

    /**
     * Test the property 'serialNumber'
     */
    @Test
    public void serialNumberTest() {
        // TODO: test serialNumber
    }

    /**
     * Test the property 'storageInfo'
     */
    @Test
    public void storageInfoTest() {
        // TODO: test storageInfo
    }

    /**
     * Test the property 'storageStatusReport'
     */
    @Test
    public void storageStatusReportTest() {
        // TODO: test storageStatusReport
    }

    /**
     * Test the property 'thunderboltInfo'
     */
    @Test
    public void thunderboltInfoTest() {
        // TODO: test thunderboltInfo
    }

}
