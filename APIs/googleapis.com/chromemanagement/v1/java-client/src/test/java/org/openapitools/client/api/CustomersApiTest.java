/*
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleChromeManagementV1CountChromeAppRequestsResponse;
import org.openapitools.client.model.GoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse;
import org.openapitools.client.model.GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse;
import org.openapitools.client.model.GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse;
import org.openapitools.client.model.GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse;
import org.openapitools.client.model.GoogleChromeManagementV1CountChromeVersionsResponse;
import org.openapitools.client.model.GoogleChromeManagementV1CountInstalledAppsResponse;
import org.openapitools.client.model.GoogleChromeManagementV1CountPrintJobsByPrinterResponse;
import org.openapitools.client.model.GoogleChromeManagementV1CountPrintJobsByUserResponse;
import org.openapitools.client.model.GoogleChromeManagementV1EnumeratePrintJobsResponse;
import org.openapitools.client.model.GoogleChromeManagementV1FindInstalledAppDevicesResponse;
import org.openapitools.client.model.GoogleChromeManagementV1ListTelemetryDevicesResponse;
import org.openapitools.client.model.GoogleChromeManagementV1ListTelemetryEventsResponse;
import org.openapitools.client.model.GoogleChromeManagementV1ListTelemetryNotificationConfigsResponse;
import org.openapitools.client.model.GoogleChromeManagementV1ListTelemetryUsersResponse;
import org.openapitools.client.model.GoogleChromeManagementV1TelemetryNotificationConfig;
import org.openapitools.client.model.GoogleChromeManagementV1TelemetryUser;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomersApi
 */
@Disabled
public class CustomersApiTest {

    private final CustomersApi api = new CustomersApi();

    /**
     * Generate summary of app installation requests.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersAppsCountChromeAppRequestsTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String orderBy = null;
        String orgUnitId = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleChromeManagementV1CountChromeAppRequestsResponse response = api.chromemanagementCustomersAppsCountChromeAppRequests(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, orderBy, orgUnitId, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Count of Chrome Browsers that have been recently enrolled, have new policy to be synced, or have no recent activity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersReportsCountChromeBrowsersNeedingAttentionTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String orgUnitId = null;
        GoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse response = api.chromemanagementCustomersReportsCountChromeBrowsersNeedingAttention(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, orgUnitId);
        // TODO: test validations
    }

    /**
     * Generate report of the number of devices expiring in each month of the selected time frame. Devices are grouped by auto update expiration date and model. Further information can be found [here](https://support.google.com/chrome/a/answer/10564947).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersReportsCountChromeDevicesReachingAutoExpirationDateTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String maxAueDate = null;
        String minAueDate = null;
        String orgUnitId = null;
        GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse response = api.chromemanagementCustomersReportsCountChromeDevicesReachingAutoExpirationDate(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, maxAueDate, minAueDate, orgUnitId);
        // TODO: test validations
    }

    /**
     * Counts of ChromeOS devices that have not synced policies or have lacked user activity in the past 28 days, are out of date, or are not complaint. Further information can be found here https://support.google.com/chrome/a/answer/10564947
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersReportsCountChromeDevicesThatNeedAttentionTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String orgUnitId = null;
        String readMask = null;
        GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse response = api.chromemanagementCustomersReportsCountChromeDevicesThatNeedAttention(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, orgUnitId, readMask);
        // TODO: test validations
    }

    /**
     * Counts of devices with a specific hardware specification from the requested hardware type (for example model name, processor type). Further information can be found here https://support.google.com/chrome/a/answer/10564947
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersReportsCountChromeHardwareFleetDevicesTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String orgUnitId = null;
        String readMask = null;
        GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse response = api.chromemanagementCustomersReportsCountChromeHardwareFleetDevices(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, orgUnitId, readMask);
        // TODO: test validations
    }

    /**
     * Generate report of installed Chrome versions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersReportsCountChromeVersionsTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orgUnitId = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleChromeManagementV1CountChromeVersionsResponse response = api.chromemanagementCustomersReportsCountChromeVersions(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orgUnitId, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Generate report of app installations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersReportsCountInstalledAppsTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        String orgUnitId = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleChromeManagementV1CountInstalledAppsResponse response = api.chromemanagementCustomersReportsCountInstalledApps(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, orgUnitId, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Get a summary of printing done by each printer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersReportsCountPrintJobsByPrinterTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String printerOrgUnitId = null;
        GoogleChromeManagementV1CountPrintJobsByPrinterResponse response = api.chromemanagementCustomersReportsCountPrintJobsByPrinter(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, printerOrgUnitId);
        // TODO: test validations
    }

    /**
     * Get a summary of printing done by each user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersReportsCountPrintJobsByUserTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String printerOrgUnitId = null;
        GoogleChromeManagementV1CountPrintJobsByUserResponse response = api.chromemanagementCustomersReportsCountPrintJobsByUser(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, printerOrgUnitId);
        // TODO: test validations
    }

    /**
     * Get a list of print jobs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersReportsEnumeratePrintJobsTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String printerOrgUnitId = null;
        GoogleChromeManagementV1EnumeratePrintJobsResponse response = api.chromemanagementCustomersReportsEnumeratePrintJobs(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, printerOrgUnitId);
        // TODO: test validations
    }

    /**
     * Generate report of managed Chrome browser devices that have a specified app installed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersReportsFindInstalledAppDevicesTest() throws ApiException {
        String customer = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String appId = null;
        String appType = null;
        String filter = null;
        String orderBy = null;
        String orgUnitId = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleChromeManagementV1FindInstalledAppDevicesResponse response = api.chromemanagementCustomersReportsFindInstalledAppDevices(customer, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, appId, appType, filter, orderBy, orgUnitId, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * List all telemetry devices.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersTelemetryDevicesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleChromeManagementV1ListTelemetryDevicesResponse response = api.chromemanagementCustomersTelemetryDevicesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * List telemetry events.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersTelemetryEventsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleChromeManagementV1ListTelemetryEventsResponse response = api.chromemanagementCustomersTelemetryEventsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Create a telemetry notification config.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersTelemetryNotificationConfigsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleChromeManagementV1TelemetryNotificationConfig googleChromeManagementV1TelemetryNotificationConfig = null;
        GoogleChromeManagementV1TelemetryNotificationConfig response = api.chromemanagementCustomersTelemetryNotificationConfigsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleChromeManagementV1TelemetryNotificationConfig);
        // TODO: test validations
    }

    /**
     * Delete a telemetry notification config.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersTelemetryNotificationConfigsDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.chromemanagementCustomersTelemetryNotificationConfigsDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * List all telemetry notification configs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersTelemetryNotificationConfigsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleChromeManagementV1ListTelemetryNotificationConfigsResponse response = api.chromemanagementCustomersTelemetryNotificationConfigsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Get telemetry user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersTelemetryUsersGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String readMask = null;
        GoogleChromeManagementV1TelemetryUser response = api.chromemanagementCustomersTelemetryUsersGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, readMask);
        // TODO: test validations
    }

    /**
     * List all telemetry users.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromemanagementCustomersTelemetryUsersListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleChromeManagementV1ListTelemetryUsersResponse response = api.chromemanagementCustomersTelemetryUsersList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

}
