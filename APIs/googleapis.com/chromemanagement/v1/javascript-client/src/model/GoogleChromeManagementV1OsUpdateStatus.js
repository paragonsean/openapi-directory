/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleChromeManagementV1OsUpdateStatus model module.
 * @module model/GoogleChromeManagementV1OsUpdateStatus
 * @version v1
 */
class GoogleChromeManagementV1OsUpdateStatus {
    /**
     * Constructs a new <code>GoogleChromeManagementV1OsUpdateStatus</code>.
     * Contains information regarding the current OS update status. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceOsUpdateStatus](https://chromeenterprise.google/policies/#ReportDeviceOsUpdateStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_OS_REPORT
     * @alias module:model/GoogleChromeManagementV1OsUpdateStatus
     */
    constructor() { 
        
        GoogleChromeManagementV1OsUpdateStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromeManagementV1OsUpdateStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromeManagementV1OsUpdateStatus} obj Optional instance to populate.
     * @return {module:model/GoogleChromeManagementV1OsUpdateStatus} The populated <code>GoogleChromeManagementV1OsUpdateStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromeManagementV1OsUpdateStatus();

            if (data.hasOwnProperty('lastRebootTime')) {
                obj['lastRebootTime'] = ApiClient.convertToType(data['lastRebootTime'], 'String');
            }
            if (data.hasOwnProperty('lastUpdateCheckTime')) {
                obj['lastUpdateCheckTime'] = ApiClient.convertToType(data['lastUpdateCheckTime'], 'String');
            }
            if (data.hasOwnProperty('lastUpdateTime')) {
                obj['lastUpdateTime'] = ApiClient.convertToType(data['lastUpdateTime'], 'String');
            }
            if (data.hasOwnProperty('newPlatformVersion')) {
                obj['newPlatformVersion'] = ApiClient.convertToType(data['newPlatformVersion'], 'String');
            }
            if (data.hasOwnProperty('newRequestedPlatformVersion')) {
                obj['newRequestedPlatformVersion'] = ApiClient.convertToType(data['newRequestedPlatformVersion'], 'String');
            }
            if (data.hasOwnProperty('updateState')) {
                obj['updateState'] = ApiClient.convertToType(data['updateState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromeManagementV1OsUpdateStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromeManagementV1OsUpdateStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['lastRebootTime'] && !(typeof data['lastRebootTime'] === 'string' || data['lastRebootTime'] instanceof String)) {
            throw new Error("Expected the field `lastRebootTime` to be a primitive type in the JSON string but got " + data['lastRebootTime']);
        }
        // ensure the json data is a string
        if (data['lastUpdateCheckTime'] && !(typeof data['lastUpdateCheckTime'] === 'string' || data['lastUpdateCheckTime'] instanceof String)) {
            throw new Error("Expected the field `lastUpdateCheckTime` to be a primitive type in the JSON string but got " + data['lastUpdateCheckTime']);
        }
        // ensure the json data is a string
        if (data['lastUpdateTime'] && !(typeof data['lastUpdateTime'] === 'string' || data['lastUpdateTime'] instanceof String)) {
            throw new Error("Expected the field `lastUpdateTime` to be a primitive type in the JSON string but got " + data['lastUpdateTime']);
        }
        // ensure the json data is a string
        if (data['newPlatformVersion'] && !(typeof data['newPlatformVersion'] === 'string' || data['newPlatformVersion'] instanceof String)) {
            throw new Error("Expected the field `newPlatformVersion` to be a primitive type in the JSON string but got " + data['newPlatformVersion']);
        }
        // ensure the json data is a string
        if (data['newRequestedPlatformVersion'] && !(typeof data['newRequestedPlatformVersion'] === 'string' || data['newRequestedPlatformVersion'] instanceof String)) {
            throw new Error("Expected the field `newRequestedPlatformVersion` to be a primitive type in the JSON string but got " + data['newRequestedPlatformVersion']);
        }
        // ensure the json data is a string
        if (data['updateState'] && !(typeof data['updateState'] === 'string' || data['updateState'] instanceof String)) {
            throw new Error("Expected the field `updateState` to be a primitive type in the JSON string but got " + data['updateState']);
        }

        return true;
    }


}



/**
 * Output only. Timestamp of the last reboot.
 * @member {String} lastRebootTime
 */
GoogleChromeManagementV1OsUpdateStatus.prototype['lastRebootTime'] = undefined;

/**
 * Output only. Timestamp of the last update check.
 * @member {String} lastUpdateCheckTime
 */
GoogleChromeManagementV1OsUpdateStatus.prototype['lastUpdateCheckTime'] = undefined;

/**
 * Output only. Timestamp of the last successful update.
 * @member {String} lastUpdateTime
 */
GoogleChromeManagementV1OsUpdateStatus.prototype['lastUpdateTime'] = undefined;

/**
 * Output only. New platform version of the os image being downloaded and applied. It is only set when update status is OS_IMAGE_DOWNLOAD_IN_PROGRESS or OS_UPDATE_NEED_REBOOT. Note this could be a dummy \"0.0.0.0\" for OS_UPDATE_NEED_REBOOT status for some edge cases, e.g. update engine is restarted without a reboot.
 * @member {String} newPlatformVersion
 */
GoogleChromeManagementV1OsUpdateStatus.prototype['newPlatformVersion'] = undefined;

/**
 * Output only. New requested platform version from the pending updated kiosk app.
 * @member {String} newRequestedPlatformVersion
 */
GoogleChromeManagementV1OsUpdateStatus.prototype['newRequestedPlatformVersion'] = undefined;

/**
 * Output only. Current state of the os update.
 * @member {module:model/GoogleChromeManagementV1OsUpdateStatus.UpdateStateEnum} updateState
 */
GoogleChromeManagementV1OsUpdateStatus.prototype['updateState'] = undefined;





/**
 * Allowed values for the <code>updateState</code> property.
 * @enum {String}
 * @readonly
 */
GoogleChromeManagementV1OsUpdateStatus['UpdateStateEnum'] = {

    /**
     * value: "UPDATE_STATE_UNSPECIFIED"
     * @const
     */
    "UPDATE_STATE_UNSPECIFIED": "UPDATE_STATE_UNSPECIFIED",

    /**
     * value: "OS_IMAGE_DOWNLOAD_NOT_STARTED"
     * @const
     */
    "OS_IMAGE_DOWNLOAD_NOT_STARTED": "OS_IMAGE_DOWNLOAD_NOT_STARTED",

    /**
     * value: "OS_IMAGE_DOWNLOAD_IN_PROGRESS"
     * @const
     */
    "OS_IMAGE_DOWNLOAD_IN_PROGRESS": "OS_IMAGE_DOWNLOAD_IN_PROGRESS",

    /**
     * value: "OS_UPDATE_NEED_REBOOT"
     * @const
     */
    "OS_UPDATE_NEED_REBOOT": "OS_UPDATE_NEED_REBOOT"
};



export default GoogleChromeManagementV1OsUpdateStatus;

