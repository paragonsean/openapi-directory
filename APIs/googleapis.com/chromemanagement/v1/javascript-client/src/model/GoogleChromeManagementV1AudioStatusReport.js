/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleChromeManagementV1AudioStatusReport model module.
 * @module model/GoogleChromeManagementV1AudioStatusReport
 * @version v1
 */
class GoogleChromeManagementV1AudioStatusReport {
    /**
     * Constructs a new <code>GoogleChromeManagementV1AudioStatusReport</code>.
     * Status data for storage. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceAudioStatus](https://chromeenterprise.google/policies/#ReportDeviceAudioStatus) * Data Collection Frequency: 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_AUDIO_REPORT
     * @alias module:model/GoogleChromeManagementV1AudioStatusReport
     */
    constructor() { 
        
        GoogleChromeManagementV1AudioStatusReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromeManagementV1AudioStatusReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromeManagementV1AudioStatusReport} obj Optional instance to populate.
     * @return {module:model/GoogleChromeManagementV1AudioStatusReport} The populated <code>GoogleChromeManagementV1AudioStatusReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromeManagementV1AudioStatusReport();

            if (data.hasOwnProperty('inputDevice')) {
                obj['inputDevice'] = ApiClient.convertToType(data['inputDevice'], 'String');
            }
            if (data.hasOwnProperty('inputGain')) {
                obj['inputGain'] = ApiClient.convertToType(data['inputGain'], 'Number');
            }
            if (data.hasOwnProperty('inputMute')) {
                obj['inputMute'] = ApiClient.convertToType(data['inputMute'], 'Boolean');
            }
            if (data.hasOwnProperty('outputDevice')) {
                obj['outputDevice'] = ApiClient.convertToType(data['outputDevice'], 'String');
            }
            if (data.hasOwnProperty('outputMute')) {
                obj['outputMute'] = ApiClient.convertToType(data['outputMute'], 'Boolean');
            }
            if (data.hasOwnProperty('outputVolume')) {
                obj['outputVolume'] = ApiClient.convertToType(data['outputVolume'], 'Number');
            }
            if (data.hasOwnProperty('reportTime')) {
                obj['reportTime'] = ApiClient.convertToType(data['reportTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromeManagementV1AudioStatusReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromeManagementV1AudioStatusReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['inputDevice'] && !(typeof data['inputDevice'] === 'string' || data['inputDevice'] instanceof String)) {
            throw new Error("Expected the field `inputDevice` to be a primitive type in the JSON string but got " + data['inputDevice']);
        }
        // ensure the json data is a string
        if (data['outputDevice'] && !(typeof data['outputDevice'] === 'string' || data['outputDevice'] instanceof String)) {
            throw new Error("Expected the field `outputDevice` to be a primitive type in the JSON string but got " + data['outputDevice']);
        }
        // ensure the json data is a string
        if (data['reportTime'] && !(typeof data['reportTime'] === 'string' || data['reportTime'] instanceof String)) {
            throw new Error("Expected the field `reportTime` to be a primitive type in the JSON string but got " + data['reportTime']);
        }

        return true;
    }


}



/**
 * Output only. Active input device's name.
 * @member {String} inputDevice
 */
GoogleChromeManagementV1AudioStatusReport.prototype['inputDevice'] = undefined;

/**
 * Output only. Active input device's gain in [0, 100].
 * @member {Number} inputGain
 */
GoogleChromeManagementV1AudioStatusReport.prototype['inputGain'] = undefined;

/**
 * Output only. Is active input device mute or not.
 * @member {Boolean} inputMute
 */
GoogleChromeManagementV1AudioStatusReport.prototype['inputMute'] = undefined;

/**
 * Output only. Active output device's name.
 * @member {String} outputDevice
 */
GoogleChromeManagementV1AudioStatusReport.prototype['outputDevice'] = undefined;

/**
 * Output only. Is active output device mute or not.
 * @member {Boolean} outputMute
 */
GoogleChromeManagementV1AudioStatusReport.prototype['outputMute'] = undefined;

/**
 * Output only. Active output device's volume in [0, 100].
 * @member {Number} outputVolume
 */
GoogleChromeManagementV1AudioStatusReport.prototype['outputVolume'] = undefined;

/**
 * Output only. Timestamp of when the sample was collected on device.
 * @member {String} reportTime
 */
GoogleChromeManagementV1AudioStatusReport.prototype['reportTime'] = undefined;






export default GoogleChromeManagementV1AudioStatusReport;

