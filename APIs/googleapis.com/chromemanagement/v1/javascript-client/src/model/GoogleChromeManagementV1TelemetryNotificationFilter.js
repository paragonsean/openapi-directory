/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleChromeManagementV1TelemetryEventNotificationFilter from './GoogleChromeManagementV1TelemetryEventNotificationFilter';

/**
 * The GoogleChromeManagementV1TelemetryNotificationFilter model module.
 * @module model/GoogleChromeManagementV1TelemetryNotificationFilter
 * @version v1
 */
class GoogleChromeManagementV1TelemetryNotificationFilter {
    /**
     * Constructs a new <code>GoogleChromeManagementV1TelemetryNotificationFilter</code>.
     * Configures how the telemetry data should be filtered.
     * @alias module:model/GoogleChromeManagementV1TelemetryNotificationFilter
     */
    constructor() { 
        
        GoogleChromeManagementV1TelemetryNotificationFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromeManagementV1TelemetryNotificationFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromeManagementV1TelemetryNotificationFilter} obj Optional instance to populate.
     * @return {module:model/GoogleChromeManagementV1TelemetryNotificationFilter} The populated <code>GoogleChromeManagementV1TelemetryNotificationFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromeManagementV1TelemetryNotificationFilter();

            if (data.hasOwnProperty('deviceId')) {
                obj['deviceId'] = ApiClient.convertToType(data['deviceId'], 'String');
            }
            if (data.hasOwnProperty('deviceOrgUnitId')) {
                obj['deviceOrgUnitId'] = ApiClient.convertToType(data['deviceOrgUnitId'], 'String');
            }
            if (data.hasOwnProperty('telemetryEventNotificationFilter')) {
                obj['telemetryEventNotificationFilter'] = GoogleChromeManagementV1TelemetryEventNotificationFilter.constructFromObject(data['telemetryEventNotificationFilter']);
            }
            if (data.hasOwnProperty('userEmail')) {
                obj['userEmail'] = ApiClient.convertToType(data['userEmail'], 'String');
            }
            if (data.hasOwnProperty('userOrgUnitId')) {
                obj['userOrgUnitId'] = ApiClient.convertToType(data['userOrgUnitId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromeManagementV1TelemetryNotificationFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromeManagementV1TelemetryNotificationFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deviceId'] && !(typeof data['deviceId'] === 'string' || data['deviceId'] instanceof String)) {
            throw new Error("Expected the field `deviceId` to be a primitive type in the JSON string but got " + data['deviceId']);
        }
        // ensure the json data is a string
        if (data['deviceOrgUnitId'] && !(typeof data['deviceOrgUnitId'] === 'string' || data['deviceOrgUnitId'] instanceof String)) {
            throw new Error("Expected the field `deviceOrgUnitId` to be a primitive type in the JSON string but got " + data['deviceOrgUnitId']);
        }
        // validate the optional field `telemetryEventNotificationFilter`
        if (data['telemetryEventNotificationFilter']) { // data not null
          GoogleChromeManagementV1TelemetryEventNotificationFilter.validateJSON(data['telemetryEventNotificationFilter']);
        }
        // ensure the json data is a string
        if (data['userEmail'] && !(typeof data['userEmail'] === 'string' || data['userEmail'] instanceof String)) {
            throw new Error("Expected the field `userEmail` to be a primitive type in the JSON string but got " + data['userEmail']);
        }
        // ensure the json data is a string
        if (data['userOrgUnitId'] && !(typeof data['userOrgUnitId'] === 'string' || data['userOrgUnitId'] instanceof String)) {
            throw new Error("Expected the field `userOrgUnitId` to be a primitive type in the JSON string but got " + data['userOrgUnitId']);
        }

        return true;
    }


}



/**
 * If set, only sends notifications for telemetry data coming from this device.
 * @member {String} deviceId
 */
GoogleChromeManagementV1TelemetryNotificationFilter.prototype['deviceId'] = undefined;

/**
 * If set, only sends notifications for telemetry data coming from devices in this org unit.
 * @member {String} deviceOrgUnitId
 */
GoogleChromeManagementV1TelemetryNotificationFilter.prototype['deviceOrgUnitId'] = undefined;

/**
 * @member {module:model/GoogleChromeManagementV1TelemetryEventNotificationFilter} telemetryEventNotificationFilter
 */
GoogleChromeManagementV1TelemetryNotificationFilter.prototype['telemetryEventNotificationFilter'] = undefined;

/**
 * If set, only sends notifications for telemetry data coming from devices owned by this user.
 * @member {String} userEmail
 */
GoogleChromeManagementV1TelemetryNotificationFilter.prototype['userEmail'] = undefined;

/**
 * If set, only sends notifications for telemetry data coming from devices owned by users in this org unit.
 * @member {String} userOrgUnitId
 */
GoogleChromeManagementV1TelemetryNotificationFilter.prototype['userOrgUnitId'] = undefined;






export default GoogleChromeManagementV1TelemetryNotificationFilter;

