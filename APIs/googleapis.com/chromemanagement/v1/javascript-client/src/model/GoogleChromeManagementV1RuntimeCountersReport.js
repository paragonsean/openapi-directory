/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleChromeManagementV1RuntimeCountersReport model module.
 * @module model/GoogleChromeManagementV1RuntimeCountersReport
 * @version v1
 */
class GoogleChromeManagementV1RuntimeCountersReport {
    /**
     * Constructs a new <code>GoogleChromeManagementV1RuntimeCountersReport</code>.
     * Runtime counters retrieved from CPU. Currently the runtime counters telemetry is only supported by Intel vPro PSR on Gen 14+.
     * @alias module:model/GoogleChromeManagementV1RuntimeCountersReport
     */
    constructor() { 
        
        GoogleChromeManagementV1RuntimeCountersReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromeManagementV1RuntimeCountersReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromeManagementV1RuntimeCountersReport} obj Optional instance to populate.
     * @return {module:model/GoogleChromeManagementV1RuntimeCountersReport} The populated <code>GoogleChromeManagementV1RuntimeCountersReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromeManagementV1RuntimeCountersReport();

            if (data.hasOwnProperty('enterHibernationCount')) {
                obj['enterHibernationCount'] = ApiClient.convertToType(data['enterHibernationCount'], 'String');
            }
            if (data.hasOwnProperty('enterPoweroffCount')) {
                obj['enterPoweroffCount'] = ApiClient.convertToType(data['enterPoweroffCount'], 'String');
            }
            if (data.hasOwnProperty('enterSleepCount')) {
                obj['enterSleepCount'] = ApiClient.convertToType(data['enterSleepCount'], 'String');
            }
            if (data.hasOwnProperty('reportTime')) {
                obj['reportTime'] = ApiClient.convertToType(data['reportTime'], 'String');
            }
            if (data.hasOwnProperty('uptimeRuntimeDuration')) {
                obj['uptimeRuntimeDuration'] = ApiClient.convertToType(data['uptimeRuntimeDuration'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromeManagementV1RuntimeCountersReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromeManagementV1RuntimeCountersReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['enterHibernationCount'] && !(typeof data['enterHibernationCount'] === 'string' || data['enterHibernationCount'] instanceof String)) {
            throw new Error("Expected the field `enterHibernationCount` to be a primitive type in the JSON string but got " + data['enterHibernationCount']);
        }
        // ensure the json data is a string
        if (data['enterPoweroffCount'] && !(typeof data['enterPoweroffCount'] === 'string' || data['enterPoweroffCount'] instanceof String)) {
            throw new Error("Expected the field `enterPoweroffCount` to be a primitive type in the JSON string but got " + data['enterPoweroffCount']);
        }
        // ensure the json data is a string
        if (data['enterSleepCount'] && !(typeof data['enterSleepCount'] === 'string' || data['enterSleepCount'] instanceof String)) {
            throw new Error("Expected the field `enterSleepCount` to be a primitive type in the JSON string but got " + data['enterSleepCount']);
        }
        // ensure the json data is a string
        if (data['reportTime'] && !(typeof data['reportTime'] === 'string' || data['reportTime'] instanceof String)) {
            throw new Error("Expected the field `reportTime` to be a primitive type in the JSON string but got " + data['reportTime']);
        }
        // ensure the json data is a string
        if (data['uptimeRuntimeDuration'] && !(typeof data['uptimeRuntimeDuration'] === 'string' || data['uptimeRuntimeDuration'] instanceof String)) {
            throw new Error("Expected the field `uptimeRuntimeDuration` to be a primitive type in the JSON string but got " + data['uptimeRuntimeDuration']);
        }

        return true;
    }


}



/**
 * Number of times that the device has entered into the hibernation state. Currently obtained via the PSR, count from S0->S4.
 * @member {String} enterHibernationCount
 */
GoogleChromeManagementV1RuntimeCountersReport.prototype['enterHibernationCount'] = undefined;

/**
 * Number of times that the device has entered into the power-off state. Currently obtained via the PSR, count from S0->S5.
 * @member {String} enterPoweroffCount
 */
GoogleChromeManagementV1RuntimeCountersReport.prototype['enterPoweroffCount'] = undefined;

/**
 * Number of times that the device has entered into the sleep state. Currently obtained via the PSR, count from S0->S3.
 * @member {String} enterSleepCount
 */
GoogleChromeManagementV1RuntimeCountersReport.prototype['enterSleepCount'] = undefined;

/**
 * Timestamp when the report was collected.
 * @member {String} reportTime
 */
GoogleChromeManagementV1RuntimeCountersReport.prototype['reportTime'] = undefined;

/**
 * Total lifetime runtime. Currently always S0 runtime from Intel vPro PSR.
 * @member {String} uptimeRuntimeDuration
 */
GoogleChromeManagementV1RuntimeCountersReport.prototype['uptimeRuntimeDuration'] = undefined;






export default GoogleChromeManagementV1RuntimeCountersReport;

