/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleChromeManagementV1BrowserVersion model module.
 * @module model/GoogleChromeManagementV1BrowserVersion
 * @version v1
 */
class GoogleChromeManagementV1BrowserVersion {
    /**
     * Constructs a new <code>GoogleChromeManagementV1BrowserVersion</code>.
     * Describes a browser version and its install count.
     * @alias module:model/GoogleChromeManagementV1BrowserVersion
     */
    constructor() { 
        
        GoogleChromeManagementV1BrowserVersion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromeManagementV1BrowserVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromeManagementV1BrowserVersion} obj Optional instance to populate.
     * @return {module:model/GoogleChromeManagementV1BrowserVersion} The populated <code>GoogleChromeManagementV1BrowserVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromeManagementV1BrowserVersion();

            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'String');
            }
            if (data.hasOwnProperty('deviceOsVersion')) {
                obj['deviceOsVersion'] = ApiClient.convertToType(data['deviceOsVersion'], 'String');
            }
            if (data.hasOwnProperty('system')) {
                obj['system'] = ApiClient.convertToType(data['system'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromeManagementV1BrowserVersion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromeManagementV1BrowserVersion</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['channel'] && !(typeof data['channel'] === 'string' || data['channel'] instanceof String)) {
            throw new Error("Expected the field `channel` to be a primitive type in the JSON string but got " + data['channel']);
        }
        // ensure the json data is a string
        if (data['count'] && !(typeof data['count'] === 'string' || data['count'] instanceof String)) {
            throw new Error("Expected the field `count` to be a primitive type in the JSON string but got " + data['count']);
        }
        // ensure the json data is a string
        if (data['deviceOsVersion'] && !(typeof data['deviceOsVersion'] === 'string' || data['deviceOsVersion'] instanceof String)) {
            throw new Error("Expected the field `deviceOsVersion` to be a primitive type in the JSON string but got " + data['deviceOsVersion']);
        }
        // ensure the json data is a string
        if (data['system'] && !(typeof data['system'] === 'string' || data['system'] instanceof String)) {
            throw new Error("Expected the field `system` to be a primitive type in the JSON string but got " + data['system']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * Output only. The release channel of the installed browser.
 * @member {module:model/GoogleChromeManagementV1BrowserVersion.ChannelEnum} channel
 */
GoogleChromeManagementV1BrowserVersion.prototype['channel'] = undefined;

/**
 * Output only. Count grouped by device_system and major version
 * @member {String} count
 */
GoogleChromeManagementV1BrowserVersion.prototype['count'] = undefined;

/**
 * Output only. Version of the system-specified operating system.
 * @member {String} deviceOsVersion
 */
GoogleChromeManagementV1BrowserVersion.prototype['deviceOsVersion'] = undefined;

/**
 * Output only. The device operating system.
 * @member {module:model/GoogleChromeManagementV1BrowserVersion.SystemEnum} system
 */
GoogleChromeManagementV1BrowserVersion.prototype['system'] = undefined;

/**
 * Output only. The full version of the installed browser.
 * @member {String} version
 */
GoogleChromeManagementV1BrowserVersion.prototype['version'] = undefined;





/**
 * Allowed values for the <code>channel</code> property.
 * @enum {String}
 * @readonly
 */
GoogleChromeManagementV1BrowserVersion['ChannelEnum'] = {

    /**
     * value: "RELEASE_CHANNEL_UNSPECIFIED"
     * @const
     */
    "RELEASE_CHANNEL_UNSPECIFIED": "RELEASE_CHANNEL_UNSPECIFIED",

    /**
     * value: "CANARY"
     * @const
     */
    "CANARY": "CANARY",

    /**
     * value: "DEV"
     * @const
     */
    "DEV": "DEV",

    /**
     * value: "BETA"
     * @const
     */
    "BETA": "BETA",

    /**
     * value: "STABLE"
     * @const
     */
    "STABLE": "STABLE"
};


/**
 * Allowed values for the <code>system</code> property.
 * @enum {String}
 * @readonly
 */
GoogleChromeManagementV1BrowserVersion['SystemEnum'] = {

    /**
     * value: "DEVICE_SYSTEM_UNSPECIFIED"
     * @const
     */
    "DEVICE_SYSTEM_UNSPECIFIED": "DEVICE_SYSTEM_UNSPECIFIED",

    /**
     * value: "SYSTEM_OTHER"
     * @const
     */
    "SYSTEM_OTHER": "SYSTEM_OTHER",

    /**
     * value: "SYSTEM_ANDROID"
     * @const
     */
    "SYSTEM_ANDROID": "SYSTEM_ANDROID",

    /**
     * value: "SYSTEM_IOS"
     * @const
     */
    "SYSTEM_IOS": "SYSTEM_IOS",

    /**
     * value: "SYSTEM_CROS"
     * @const
     */
    "SYSTEM_CROS": "SYSTEM_CROS",

    /**
     * value: "SYSTEM_WINDOWS"
     * @const
     */
    "SYSTEM_WINDOWS": "SYSTEM_WINDOWS",

    /**
     * value: "SYSTEM_MAC"
     * @const
     */
    "SYSTEM_MAC": "SYSTEM_MAC",

    /**
     * value: "SYSTEM_LINUX"
     * @const
     */
    "SYSTEM_LINUX": "SYSTEM_LINUX"
};



export default GoogleChromeManagementV1BrowserVersion;

