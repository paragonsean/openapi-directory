/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleChromeManagementV1DeviceActivityReport model module.
 * @module model/GoogleChromeManagementV1DeviceActivityReport
 * @version v1
 */
class GoogleChromeManagementV1DeviceActivityReport {
    /**
     * Constructs a new <code>GoogleChromeManagementV1DeviceActivityReport</code>.
     * Device activity report. * Granular permission needed: TELEMETRY_API_DEVICE_ACTIVITY_REPORT
     * @alias module:model/GoogleChromeManagementV1DeviceActivityReport
     */
    constructor() { 
        
        GoogleChromeManagementV1DeviceActivityReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromeManagementV1DeviceActivityReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromeManagementV1DeviceActivityReport} obj Optional instance to populate.
     * @return {module:model/GoogleChromeManagementV1DeviceActivityReport} The populated <code>GoogleChromeManagementV1DeviceActivityReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromeManagementV1DeviceActivityReport();

            if (data.hasOwnProperty('deviceActivityState')) {
                obj['deviceActivityState'] = ApiClient.convertToType(data['deviceActivityState'], 'String');
            }
            if (data.hasOwnProperty('reportTime')) {
                obj['reportTime'] = ApiClient.convertToType(data['reportTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromeManagementV1DeviceActivityReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromeManagementV1DeviceActivityReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deviceActivityState'] && !(typeof data['deviceActivityState'] === 'string' || data['deviceActivityState'] instanceof String)) {
            throw new Error("Expected the field `deviceActivityState` to be a primitive type in the JSON string but got " + data['deviceActivityState']);
        }
        // ensure the json data is a string
        if (data['reportTime'] && !(typeof data['reportTime'] === 'string' || data['reportTime'] instanceof String)) {
            throw new Error("Expected the field `reportTime` to be a primitive type in the JSON string but got " + data['reportTime']);
        }

        return true;
    }


}



/**
 * Output only. Device activity state.
 * @member {module:model/GoogleChromeManagementV1DeviceActivityReport.DeviceActivityStateEnum} deviceActivityState
 */
GoogleChromeManagementV1DeviceActivityReport.prototype['deviceActivityState'] = undefined;

/**
 * Output only. Timestamp of when the report was collected.
 * @member {String} reportTime
 */
GoogleChromeManagementV1DeviceActivityReport.prototype['reportTime'] = undefined;





/**
 * Allowed values for the <code>deviceActivityState</code> property.
 * @enum {String}
 * @readonly
 */
GoogleChromeManagementV1DeviceActivityReport['DeviceActivityStateEnum'] = {

    /**
     * value: "DEVICE_ACTIVITY_STATE_UNSPECIFIED"
     * @const
     */
    "DEVICE_ACTIVITY_STATE_UNSPECIFIED": "DEVICE_ACTIVITY_STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "IDLE"
     * @const
     */
    "IDLE": "IDLE",

    /**
     * value: "LOCKED"
     * @const
     */
    "LOCKED": "LOCKED"
};



export default GoogleChromeManagementV1DeviceActivityReport;

