/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleChromeManagementV1Device model module.
 * @module model/GoogleChromeManagementV1Device
 * @version v1
 */
class GoogleChromeManagementV1Device {
    /**
     * Constructs a new <code>GoogleChromeManagementV1Device</code>.
     * Describes a device reporting Chrome browser information.
     * @alias module:model/GoogleChromeManagementV1Device
     */
    constructor() { 
        
        GoogleChromeManagementV1Device.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromeManagementV1Device</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromeManagementV1Device} obj Optional instance to populate.
     * @return {module:model/GoogleChromeManagementV1Device} The populated <code>GoogleChromeManagementV1Device</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromeManagementV1Device();

            if (data.hasOwnProperty('deviceId')) {
                obj['deviceId'] = ApiClient.convertToType(data['deviceId'], 'String');
            }
            if (data.hasOwnProperty('machine')) {
                obj['machine'] = ApiClient.convertToType(data['machine'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromeManagementV1Device</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromeManagementV1Device</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deviceId'] && !(typeof data['deviceId'] === 'string' || data['deviceId'] instanceof String)) {
            throw new Error("Expected the field `deviceId` to be a primitive type in the JSON string but got " + data['deviceId']);
        }
        // ensure the json data is a string
        if (data['machine'] && !(typeof data['machine'] === 'string' || data['machine'] instanceof String)) {
            throw new Error("Expected the field `machine` to be a primitive type in the JSON string but got " + data['machine']);
        }

        return true;
    }


}



/**
 * Output only. The ID of the device that reported this Chrome browser information.
 * @member {String} deviceId
 */
GoogleChromeManagementV1Device.prototype['deviceId'] = undefined;

/**
 * Output only. The name of the machine within its local network.
 * @member {String} machine
 */
GoogleChromeManagementV1Device.prototype['machine'] = undefined;






export default GoogleChromeManagementV1Device;

