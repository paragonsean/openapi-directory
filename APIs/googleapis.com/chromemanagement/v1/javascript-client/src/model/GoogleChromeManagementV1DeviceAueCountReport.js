/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleChromeManagementV1DeviceAueCountReport model module.
 * @module model/GoogleChromeManagementV1DeviceAueCountReport
 * @version v1
 */
class GoogleChromeManagementV1DeviceAueCountReport {
    /**
     * Constructs a new <code>GoogleChromeManagementV1DeviceAueCountReport</code>.
     * Report for CountChromeDevicesPerAueDateResponse, contains the count of devices of a specific model and auto update expiration range.
     * @alias module:model/GoogleChromeManagementV1DeviceAueCountReport
     */
    constructor() { 
        
        GoogleChromeManagementV1DeviceAueCountReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromeManagementV1DeviceAueCountReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromeManagementV1DeviceAueCountReport} obj Optional instance to populate.
     * @return {module:model/GoogleChromeManagementV1DeviceAueCountReport} The populated <code>GoogleChromeManagementV1DeviceAueCountReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromeManagementV1DeviceAueCountReport();

            if (data.hasOwnProperty('aueMonth')) {
                obj['aueMonth'] = ApiClient.convertToType(data['aueMonth'], 'String');
            }
            if (data.hasOwnProperty('aueYear')) {
                obj['aueYear'] = ApiClient.convertToType(data['aueYear'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'String');
            }
            if (data.hasOwnProperty('expired')) {
                obj['expired'] = ApiClient.convertToType(data['expired'], 'Boolean');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromeManagementV1DeviceAueCountReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromeManagementV1DeviceAueCountReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['aueMonth'] && !(typeof data['aueMonth'] === 'string' || data['aueMonth'] instanceof String)) {
            throw new Error("Expected the field `aueMonth` to be a primitive type in the JSON string but got " + data['aueMonth']);
        }
        // ensure the json data is a string
        if (data['aueYear'] && !(typeof data['aueYear'] === 'string' || data['aueYear'] instanceof String)) {
            throw new Error("Expected the field `aueYear` to be a primitive type in the JSON string but got " + data['aueYear']);
        }
        // ensure the json data is a string
        if (data['count'] && !(typeof data['count'] === 'string' || data['count'] instanceof String)) {
            throw new Error("Expected the field `count` to be a primitive type in the JSON string but got " + data['count']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }

        return true;
    }


}



/**
 * Enum value of month corresponding to the auto update expiration date in UTC time zone. If the device is already expired, this field is empty.
 * @member {module:model/GoogleChromeManagementV1DeviceAueCountReport.AueMonthEnum} aueMonth
 */
GoogleChromeManagementV1DeviceAueCountReport.prototype['aueMonth'] = undefined;

/**
 * Int value of year corresponding to the Auto Update Expiration date in UTC time zone. If the device is already expired, this field is empty.
 * @member {String} aueYear
 */
GoogleChromeManagementV1DeviceAueCountReport.prototype['aueYear'] = undefined;

/**
 * Count of devices of this model.
 * @member {String} count
 */
GoogleChromeManagementV1DeviceAueCountReport.prototype['count'] = undefined;

/**
 * Boolean value for whether or not the device has already expired.
 * @member {Boolean} expired
 */
GoogleChromeManagementV1DeviceAueCountReport.prototype['expired'] = undefined;

/**
 * Public model name of the devices.
 * @member {String} model
 */
GoogleChromeManagementV1DeviceAueCountReport.prototype['model'] = undefined;





/**
 * Allowed values for the <code>aueMonth</code> property.
 * @enum {String}
 * @readonly
 */
GoogleChromeManagementV1DeviceAueCountReport['AueMonthEnum'] = {

    /**
     * value: "MONTH_UNSPECIFIED"
     * @const
     */
    "MONTH_UNSPECIFIED": "MONTH_UNSPECIFIED",

    /**
     * value: "JANUARY"
     * @const
     */
    "JANUARY": "JANUARY",

    /**
     * value: "FEBRUARY"
     * @const
     */
    "FEBRUARY": "FEBRUARY",

    /**
     * value: "MARCH"
     * @const
     */
    "MARCH": "MARCH",

    /**
     * value: "APRIL"
     * @const
     */
    "APRIL": "APRIL",

    /**
     * value: "MAY"
     * @const
     */
    "MAY": "MAY",

    /**
     * value: "JUNE"
     * @const
     */
    "JUNE": "JUNE",

    /**
     * value: "JULY"
     * @const
     */
    "JULY": "JULY",

    /**
     * value: "AUGUST"
     * @const
     */
    "AUGUST": "AUGUST",

    /**
     * value: "SEPTEMBER"
     * @const
     */
    "SEPTEMBER": "SEPTEMBER",

    /**
     * value: "OCTOBER"
     * @const
     */
    "OCTOBER": "OCTOBER",

    /**
     * value: "NOVEMBER"
     * @const
     */
    "NOVEMBER": "NOVEMBER",

    /**
     * value: "DECEMBER"
     * @const
     */
    "DECEMBER": "DECEMBER"
};



export default GoogleChromeManagementV1DeviceAueCountReport;

