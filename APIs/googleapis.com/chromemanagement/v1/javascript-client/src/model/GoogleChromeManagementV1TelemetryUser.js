/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleChromeManagementV1TelemetryUserDevice from './GoogleChromeManagementV1TelemetryUserDevice';

/**
 * The GoogleChromeManagementV1TelemetryUser model module.
 * @module model/GoogleChromeManagementV1TelemetryUser
 * @version v1
 */
class GoogleChromeManagementV1TelemetryUser {
    /**
     * Constructs a new <code>GoogleChromeManagementV1TelemetryUser</code>.
     * Telemetry data collected from a managed user. * Granular permission needed: TELEMETRY_API_USER
     * @alias module:model/GoogleChromeManagementV1TelemetryUser
     */
    constructor() { 
        
        GoogleChromeManagementV1TelemetryUser.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromeManagementV1TelemetryUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromeManagementV1TelemetryUser} obj Optional instance to populate.
     * @return {module:model/GoogleChromeManagementV1TelemetryUser} The populated <code>GoogleChromeManagementV1TelemetryUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromeManagementV1TelemetryUser();

            if (data.hasOwnProperty('customer')) {
                obj['customer'] = ApiClient.convertToType(data['customer'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('orgUnitId')) {
                obj['orgUnitId'] = ApiClient.convertToType(data['orgUnitId'], 'String');
            }
            if (data.hasOwnProperty('userDevice')) {
                obj['userDevice'] = ApiClient.convertToType(data['userDevice'], [GoogleChromeManagementV1TelemetryUserDevice]);
            }
            if (data.hasOwnProperty('userEmail')) {
                obj['userEmail'] = ApiClient.convertToType(data['userEmail'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromeManagementV1TelemetryUser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromeManagementV1TelemetryUser</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customer'] && !(typeof data['customer'] === 'string' || data['customer'] instanceof String)) {
            throw new Error("Expected the field `customer` to be a primitive type in the JSON string but got " + data['customer']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['orgUnitId'] && !(typeof data['orgUnitId'] === 'string' || data['orgUnitId'] instanceof String)) {
            throw new Error("Expected the field `orgUnitId` to be a primitive type in the JSON string but got " + data['orgUnitId']);
        }
        if (data['userDevice']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['userDevice'])) {
                throw new Error("Expected the field `userDevice` to be an array in the JSON data but got " + data['userDevice']);
            }
            // validate the optional field `userDevice` (array)
            for (const item of data['userDevice']) {
                GoogleChromeManagementV1TelemetryUserDevice.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['userEmail'] && !(typeof data['userEmail'] === 'string' || data['userEmail'] instanceof String)) {
            throw new Error("Expected the field `userEmail` to be a primitive type in the JSON string but got " + data['userEmail']);
        }
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }

        return true;
    }


}



/**
 * G Suite Customer whose enterprise enrolled the device.
 * @member {String} customer
 */
GoogleChromeManagementV1TelemetryUser.prototype['customer'] = undefined;

/**
 * Resource name of the user.
 * @member {String} name
 */
GoogleChromeManagementV1TelemetryUser.prototype['name'] = undefined;

/**
 * Organization unit of the user.
 * @member {String} orgUnitId
 */
GoogleChromeManagementV1TelemetryUser.prototype['orgUnitId'] = undefined;

/**
 * Telemetry data collected from a managed user and device.
 * @member {Array.<module:model/GoogleChromeManagementV1TelemetryUserDevice>} userDevice
 */
GoogleChromeManagementV1TelemetryUser.prototype['userDevice'] = undefined;

/**
 * Email address of the user.
 * @member {String} userEmail
 */
GoogleChromeManagementV1TelemetryUser.prototype['userEmail'] = undefined;

/**
 * Directory ID of the user.
 * @member {String} userId
 */
GoogleChromeManagementV1TelemetryUser.prototype['userId'] = undefined;






export default GoogleChromeManagementV1TelemetryUser;

