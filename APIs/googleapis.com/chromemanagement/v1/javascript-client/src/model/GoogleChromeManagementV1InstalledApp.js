/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleChromeManagementV1InstalledApp model module.
 * @module model/GoogleChromeManagementV1InstalledApp
 * @version v1
 */
class GoogleChromeManagementV1InstalledApp {
    /**
     * Constructs a new <code>GoogleChromeManagementV1InstalledApp</code>.
     * Describes an installed app.
     * @alias module:model/GoogleChromeManagementV1InstalledApp
     */
    constructor() { 
        
        GoogleChromeManagementV1InstalledApp.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromeManagementV1InstalledApp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromeManagementV1InstalledApp} obj Optional instance to populate.
     * @return {module:model/GoogleChromeManagementV1InstalledApp} The populated <code>GoogleChromeManagementV1InstalledApp</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromeManagementV1InstalledApp();

            if (data.hasOwnProperty('appId')) {
                obj['appId'] = ApiClient.convertToType(data['appId'], 'String');
            }
            if (data.hasOwnProperty('appInstallType')) {
                obj['appInstallType'] = ApiClient.convertToType(data['appInstallType'], 'String');
            }
            if (data.hasOwnProperty('appSource')) {
                obj['appSource'] = ApiClient.convertToType(data['appSource'], 'String');
            }
            if (data.hasOwnProperty('appType')) {
                obj['appType'] = ApiClient.convertToType(data['appType'], 'String');
            }
            if (data.hasOwnProperty('browserDeviceCount')) {
                obj['browserDeviceCount'] = ApiClient.convertToType(data['browserDeviceCount'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('disabled')) {
                obj['disabled'] = ApiClient.convertToType(data['disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('homepageUri')) {
                obj['homepageUri'] = ApiClient.convertToType(data['homepageUri'], 'String');
            }
            if (data.hasOwnProperty('osUserCount')) {
                obj['osUserCount'] = ApiClient.convertToType(data['osUserCount'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromeManagementV1InstalledApp</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromeManagementV1InstalledApp</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['appId'] && !(typeof data['appId'] === 'string' || data['appId'] instanceof String)) {
            throw new Error("Expected the field `appId` to be a primitive type in the JSON string but got " + data['appId']);
        }
        // ensure the json data is a string
        if (data['appInstallType'] && !(typeof data['appInstallType'] === 'string' || data['appInstallType'] instanceof String)) {
            throw new Error("Expected the field `appInstallType` to be a primitive type in the JSON string but got " + data['appInstallType']);
        }
        // ensure the json data is a string
        if (data['appSource'] && !(typeof data['appSource'] === 'string' || data['appSource'] instanceof String)) {
            throw new Error("Expected the field `appSource` to be a primitive type in the JSON string but got " + data['appSource']);
        }
        // ensure the json data is a string
        if (data['appType'] && !(typeof data['appType'] === 'string' || data['appType'] instanceof String)) {
            throw new Error("Expected the field `appType` to be a primitive type in the JSON string but got " + data['appType']);
        }
        // ensure the json data is a string
        if (data['browserDeviceCount'] && !(typeof data['browserDeviceCount'] === 'string' || data['browserDeviceCount'] instanceof String)) {
            throw new Error("Expected the field `browserDeviceCount` to be a primitive type in the JSON string but got " + data['browserDeviceCount']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['homepageUri'] && !(typeof data['homepageUri'] === 'string' || data['homepageUri'] instanceof String)) {
            throw new Error("Expected the field `homepageUri` to be a primitive type in the JSON string but got " + data['homepageUri']);
        }
        // ensure the json data is a string
        if (data['osUserCount'] && !(typeof data['osUserCount'] === 'string' || data['osUserCount'] instanceof String)) {
            throw new Error("Expected the field `osUserCount` to be a primitive type in the JSON string but got " + data['osUserCount']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['permissions'])) {
            throw new Error("Expected the field `permissions` to be an array in the JSON data but got " + data['permissions']);
        }

        return true;
    }


}



/**
 * Output only. Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g. com.evernote).
 * @member {String} appId
 */
GoogleChromeManagementV1InstalledApp.prototype['appId'] = undefined;

/**
 * Output only. How the app was installed.
 * @member {module:model/GoogleChromeManagementV1InstalledApp.AppInstallTypeEnum} appInstallType
 */
GoogleChromeManagementV1InstalledApp.prototype['appInstallType'] = undefined;

/**
 * Output only. Source of the installed app.
 * @member {module:model/GoogleChromeManagementV1InstalledApp.AppSourceEnum} appSource
 */
GoogleChromeManagementV1InstalledApp.prototype['appSource'] = undefined;

/**
 * Output only. Type of the app.
 * @member {module:model/GoogleChromeManagementV1InstalledApp.AppTypeEnum} appType
 */
GoogleChromeManagementV1InstalledApp.prototype['appType'] = undefined;

/**
 * Output only. Count of browser devices with this app installed.
 * @member {String} browserDeviceCount
 */
GoogleChromeManagementV1InstalledApp.prototype['browserDeviceCount'] = undefined;

/**
 * Output only. Description of the installed app.
 * @member {String} description
 */
GoogleChromeManagementV1InstalledApp.prototype['description'] = undefined;

/**
 * Output only. Whether the app is disabled.
 * @member {Boolean} disabled
 */
GoogleChromeManagementV1InstalledApp.prototype['disabled'] = undefined;

/**
 * Output only. Name of the installed app.
 * @member {String} displayName
 */
GoogleChromeManagementV1InstalledApp.prototype['displayName'] = undefined;

/**
 * Output only. Homepage uri of the installed app.
 * @member {String} homepageUri
 */
GoogleChromeManagementV1InstalledApp.prototype['homepageUri'] = undefined;

/**
 * Output only. Count of ChromeOS users with this app installed.
 * @member {String} osUserCount
 */
GoogleChromeManagementV1InstalledApp.prototype['osUserCount'] = undefined;

/**
 * Output only. Permissions of the installed app.
 * @member {Array.<String>} permissions
 */
GoogleChromeManagementV1InstalledApp.prototype['permissions'] = undefined;





/**
 * Allowed values for the <code>appInstallType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleChromeManagementV1InstalledApp['AppInstallTypeEnum'] = {

    /**
     * value: "APP_INSTALL_TYPE_UNSPECIFIED"
     * @const
     */
    "APP_INSTALL_TYPE_UNSPECIFIED": "APP_INSTALL_TYPE_UNSPECIFIED",

    /**
     * value: "MULTIPLE"
     * @const
     */
    "MULTIPLE": "MULTIPLE",

    /**
     * value: "NORMAL"
     * @const
     */
    "NORMAL": "NORMAL",

    /**
     * value: "ADMIN"
     * @const
     */
    "ADMIN": "ADMIN",

    /**
     * value: "DEVELOPMENT"
     * @const
     */
    "DEVELOPMENT": "DEVELOPMENT",

    /**
     * value: "SIDELOAD"
     * @const
     */
    "SIDELOAD": "SIDELOAD",

    /**
     * value: "OTHER"
     * @const
     */
    "OTHER": "OTHER"
};


/**
 * Allowed values for the <code>appSource</code> property.
 * @enum {String}
 * @readonly
 */
GoogleChromeManagementV1InstalledApp['AppSourceEnum'] = {

    /**
     * value: "APP_SOURCE_UNSPECIFIED"
     * @const
     */
    "APP_SOURCE_UNSPECIFIED": "APP_SOURCE_UNSPECIFIED",

    /**
     * value: "CHROME_WEBSTORE"
     * @const
     */
    "CHROME_WEBSTORE": "CHROME_WEBSTORE",

    /**
     * value: "PLAY_STORE"
     * @const
     */
    "PLAY_STORE": "PLAY_STORE"
};


/**
 * Allowed values for the <code>appType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleChromeManagementV1InstalledApp['AppTypeEnum'] = {

    /**
     * value: "APP_TYPE_UNSPECIFIED"
     * @const
     */
    "APP_TYPE_UNSPECIFIED": "APP_TYPE_UNSPECIFIED",

    /**
     * value: "EXTENSION"
     * @const
     */
    "EXTENSION": "EXTENSION",

    /**
     * value: "APP"
     * @const
     */
    "APP": "APP",

    /**
     * value: "THEME"
     * @const
     */
    "THEME": "THEME",

    /**
     * value: "HOSTED_APP"
     * @const
     */
    "HOSTED_APP": "HOSTED_APP",

    /**
     * value: "ANDROID_APP"
     * @const
     */
    "ANDROID_APP": "ANDROID_APP"
};



export default GoogleChromeManagementV1InstalledApp;

