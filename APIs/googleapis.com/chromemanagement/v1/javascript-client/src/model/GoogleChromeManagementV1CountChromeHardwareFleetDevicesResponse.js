/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleChromeManagementV1DeviceHardwareCountReport from './GoogleChromeManagementV1DeviceHardwareCountReport';

/**
 * The GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse model module.
 * @module model/GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse
 * @version v1
 */
class GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse {
    /**
     * Constructs a new <code>GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse</code>.
     * Response containing a list of devices with a specific type of hardware specification from the requested hardware type.
     * @alias module:model/GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse
     */
    constructor() { 
        
        GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse} obj Optional instance to populate.
     * @return {module:model/GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse} The populated <code>GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse();

            if (data.hasOwnProperty('cpuReports')) {
                obj['cpuReports'] = ApiClient.convertToType(data['cpuReports'], [GoogleChromeManagementV1DeviceHardwareCountReport]);
            }
            if (data.hasOwnProperty('memoryReports')) {
                obj['memoryReports'] = ApiClient.convertToType(data['memoryReports'], [GoogleChromeManagementV1DeviceHardwareCountReport]);
            }
            if (data.hasOwnProperty('modelReports')) {
                obj['modelReports'] = ApiClient.convertToType(data['modelReports'], [GoogleChromeManagementV1DeviceHardwareCountReport]);
            }
            if (data.hasOwnProperty('storageReports')) {
                obj['storageReports'] = ApiClient.convertToType(data['storageReports'], [GoogleChromeManagementV1DeviceHardwareCountReport]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse</code>.
     */
    static validateJSON(data) {
        if (data['cpuReports']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['cpuReports'])) {
                throw new Error("Expected the field `cpuReports` to be an array in the JSON data but got " + data['cpuReports']);
            }
            // validate the optional field `cpuReports` (array)
            for (const item of data['cpuReports']) {
                GoogleChromeManagementV1DeviceHardwareCountReport.validateJSON(item);
            };
        }
        if (data['memoryReports']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['memoryReports'])) {
                throw new Error("Expected the field `memoryReports` to be an array in the JSON data but got " + data['memoryReports']);
            }
            // validate the optional field `memoryReports` (array)
            for (const item of data['memoryReports']) {
                GoogleChromeManagementV1DeviceHardwareCountReport.validateJSON(item);
            };
        }
        if (data['modelReports']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['modelReports'])) {
                throw new Error("Expected the field `modelReports` to be an array in the JSON data but got " + data['modelReports']);
            }
            // validate the optional field `modelReports` (array)
            for (const item of data['modelReports']) {
                GoogleChromeManagementV1DeviceHardwareCountReport.validateJSON(item);
            };
        }
        if (data['storageReports']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['storageReports'])) {
                throw new Error("Expected the field `storageReports` to be an array in the JSON data but got " + data['storageReports']);
            }
            // validate the optional field `storageReports` (array)
            for (const item of data['storageReports']) {
                GoogleChromeManagementV1DeviceHardwareCountReport.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The DeviceHardwareCountReport for device cpu type (for example Intel(R) Core(TM) i7-10610U CPU @ 1.80GHz).
 * @member {Array.<module:model/GoogleChromeManagementV1DeviceHardwareCountReport>} cpuReports
 */
GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.prototype['cpuReports'] = undefined;

/**
 * The DeviceHardwareCountReport for device memory amount in gigabytes (for example 16).
 * @member {Array.<module:model/GoogleChromeManagementV1DeviceHardwareCountReport>} memoryReports
 */
GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.prototype['memoryReports'] = undefined;

/**
 * The DeviceHardwareCountReport for device model type (for example Acer C7 Chromebook).
 * @member {Array.<module:model/GoogleChromeManagementV1DeviceHardwareCountReport>} modelReports
 */
GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.prototype['modelReports'] = undefined;

/**
 * The DeviceHardwareCountReport for device storage amount in gigabytes (for example 128).
 * @member {Array.<module:model/GoogleChromeManagementV1DeviceHardwareCountReport>} storageReports
 */
GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.prototype['storageReports'] = undefined;






export default GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse;

