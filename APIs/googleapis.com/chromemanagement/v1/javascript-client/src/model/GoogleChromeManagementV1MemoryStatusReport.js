/**
 * Chrome Management API
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleChromeManagementV1MemoryStatusReport model module.
 * @module model/GoogleChromeManagementV1MemoryStatusReport
 * @version v1
 */
class GoogleChromeManagementV1MemoryStatusReport {
    /**
     * Constructs a new <code>GoogleChromeManagementV1MemoryStatusReport</code>.
     * Contains samples of memory status reports. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: Only at upload, SystemRamFreeByes is collected every 10 minutes * Default Data Reporting Frequency: Every 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_MEMORY_REPORT
     * @alias module:model/GoogleChromeManagementV1MemoryStatusReport
     */
    constructor() { 
        
        GoogleChromeManagementV1MemoryStatusReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromeManagementV1MemoryStatusReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromeManagementV1MemoryStatusReport} obj Optional instance to populate.
     * @return {module:model/GoogleChromeManagementV1MemoryStatusReport} The populated <code>GoogleChromeManagementV1MemoryStatusReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromeManagementV1MemoryStatusReport();

            if (data.hasOwnProperty('pageFaults')) {
                obj['pageFaults'] = ApiClient.convertToType(data['pageFaults'], 'Number');
            }
            if (data.hasOwnProperty('reportTime')) {
                obj['reportTime'] = ApiClient.convertToType(data['reportTime'], 'String');
            }
            if (data.hasOwnProperty('sampleFrequency')) {
                obj['sampleFrequency'] = ApiClient.convertToType(data['sampleFrequency'], 'String');
            }
            if (data.hasOwnProperty('systemRamFreeBytes')) {
                obj['systemRamFreeBytes'] = ApiClient.convertToType(data['systemRamFreeBytes'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromeManagementV1MemoryStatusReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromeManagementV1MemoryStatusReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['reportTime'] && !(typeof data['reportTime'] === 'string' || data['reportTime'] instanceof String)) {
            throw new Error("Expected the field `reportTime` to be a primitive type in the JSON string but got " + data['reportTime']);
        }
        // ensure the json data is a string
        if (data['sampleFrequency'] && !(typeof data['sampleFrequency'] === 'string' || data['sampleFrequency'] instanceof String)) {
            throw new Error("Expected the field `sampleFrequency` to be a primitive type in the JSON string but got " + data['sampleFrequency']);
        }
        // ensure the json data is a string
        if (data['systemRamFreeBytes'] && !(typeof data['systemRamFreeBytes'] === 'string' || data['systemRamFreeBytes'] instanceof String)) {
            throw new Error("Expected the field `systemRamFreeBytes` to be a primitive type in the JSON string but got " + data['systemRamFreeBytes']);
        }

        return true;
    }


}



/**
 * Output only. Number of page faults during this collection
 * @member {Number} pageFaults
 */
GoogleChromeManagementV1MemoryStatusReport.prototype['pageFaults'] = undefined;

/**
 * Output only. The timestamp in milliseconds representing time at which this report was sampled.
 * @member {String} reportTime
 */
GoogleChromeManagementV1MemoryStatusReport.prototype['reportTime'] = undefined;

/**
 * Output only. Frequency the report is sampled.
 * @member {String} sampleFrequency
 */
GoogleChromeManagementV1MemoryStatusReport.prototype['sampleFrequency'] = undefined;

/**
 * Output only. Amount of free RAM in bytes (unreliable due to Garbage Collection).
 * @member {String} systemRamFreeBytes
 */
GoogleChromeManagementV1MemoryStatusReport.prototype['systemRamFreeBytes'] = undefined;






export default GoogleChromeManagementV1MemoryStatusReport;

