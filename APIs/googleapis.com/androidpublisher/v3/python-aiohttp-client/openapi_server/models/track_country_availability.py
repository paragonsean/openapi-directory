# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.track_targeted_country import TrackTargetedCountry
from openapi_server import util


class TrackCountryAvailability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, countries: List[TrackTargetedCountry]=None, rest_of_world: bool=None, sync_with_production: bool=None):
        """TrackCountryAvailability - a model defined in OpenAPI

        :param countries: The countries of this TrackCountryAvailability.
        :param rest_of_world: The rest_of_world of this TrackCountryAvailability.
        :param sync_with_production: The sync_with_production of this TrackCountryAvailability.
        """
        self.openapi_types = {
            'countries': List[TrackTargetedCountry],
            'rest_of_world': bool,
            'sync_with_production': bool
        }

        self.attribute_map = {
            'countries': 'countries',
            'rest_of_world': 'restOfWorld',
            'sync_with_production': 'syncWithProduction'
        }

        self._countries = countries
        self._rest_of_world = rest_of_world
        self._sync_with_production = sync_with_production

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrackCountryAvailability':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrackCountryAvailability of this TrackCountryAvailability.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def countries(self):
        """Gets the countries of this TrackCountryAvailability.

        A list of one or more countries where artifacts in this track are available. This list includes all countries that are targeted by the track, even if only specific carriers are targeted in that country.

        :return: The countries of this TrackCountryAvailability.
        :rtype: List[TrackTargetedCountry]
        """
        return self._countries

    @countries.setter
    def countries(self, countries):
        """Sets the countries of this TrackCountryAvailability.

        A list of one or more countries where artifacts in this track are available. This list includes all countries that are targeted by the track, even if only specific carriers are targeted in that country.

        :param countries: The countries of this TrackCountryAvailability.
        :type countries: List[TrackTargetedCountry]
        """

        self._countries = countries

    @property
    def rest_of_world(self):
        """Gets the rest_of_world of this TrackCountryAvailability.

        Whether artifacts in this track are available to \"rest of the world\" countries.

        :return: The rest_of_world of this TrackCountryAvailability.
        :rtype: bool
        """
        return self._rest_of_world

    @rest_of_world.setter
    def rest_of_world(self, rest_of_world):
        """Sets the rest_of_world of this TrackCountryAvailability.

        Whether artifacts in this track are available to \"rest of the world\" countries.

        :param rest_of_world: The rest_of_world of this TrackCountryAvailability.
        :type rest_of_world: bool
        """

        self._rest_of_world = rest_of_world

    @property
    def sync_with_production(self):
        """Gets the sync_with_production of this TrackCountryAvailability.

        Whether this track's availability is synced with the default production track. See https://support.google.com/googleplay/android-developer/answer/7550024 for more information on syncing country availability with production. Note that if this is true, the returned \"countries\" and \"rest_of_world\" fields will reflect the values for the default production track.

        :return: The sync_with_production of this TrackCountryAvailability.
        :rtype: bool
        """
        return self._sync_with_production

    @sync_with_production.setter
    def sync_with_production(self, sync_with_production):
        """Sets the sync_with_production of this TrackCountryAvailability.

        Whether this track's availability is synced with the default production track. See https://support.google.com/googleplay/android-developer/answer/7550024 for more information on syncing country availability with production. Note that if this is true, the returned \"countries\" and \"rest_of_world\" fields will reflect the values for the default production track.

        :param sync_with_production: The sync_with_production of this TrackCountryAvailability.
        :type sync_with_production: bool
        """

        self._sync_with_production = sync_with_production
