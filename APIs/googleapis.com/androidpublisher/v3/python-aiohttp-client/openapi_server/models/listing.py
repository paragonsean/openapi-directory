# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Listing(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, full_description: str=None, language: str=None, short_description: str=None, title: str=None, video: str=None):
        """Listing - a model defined in OpenAPI

        :param full_description: The full_description of this Listing.
        :param language: The language of this Listing.
        :param short_description: The short_description of this Listing.
        :param title: The title of this Listing.
        :param video: The video of this Listing.
        """
        self.openapi_types = {
            'full_description': str,
            'language': str,
            'short_description': str,
            'title': str,
            'video': str
        }

        self.attribute_map = {
            'full_description': 'fullDescription',
            'language': 'language',
            'short_description': 'shortDescription',
            'title': 'title',
            'video': 'video'
        }

        self._full_description = full_description
        self._language = language
        self._short_description = short_description
        self._title = title
        self._video = video

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Listing':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Listing of this Listing.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def full_description(self):
        """Gets the full_description of this Listing.

        Full description of the app.

        :return: The full_description of this Listing.
        :rtype: str
        """
        return self._full_description

    @full_description.setter
    def full_description(self, full_description):
        """Sets the full_description of this Listing.

        Full description of the app.

        :param full_description: The full_description of this Listing.
        :type full_description: str
        """

        self._full_description = full_description

    @property
    def language(self):
        """Gets the language of this Listing.

        Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).

        :return: The language of this Listing.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this Listing.

        Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).

        :param language: The language of this Listing.
        :type language: str
        """

        self._language = language

    @property
    def short_description(self):
        """Gets the short_description of this Listing.

        Short description of the app.

        :return: The short_description of this Listing.
        :rtype: str
        """
        return self._short_description

    @short_description.setter
    def short_description(self, short_description):
        """Sets the short_description of this Listing.

        Short description of the app.

        :param short_description: The short_description of this Listing.
        :type short_description: str
        """

        self._short_description = short_description

    @property
    def title(self):
        """Gets the title of this Listing.

        Localized title of the app.

        :return: The title of this Listing.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Listing.

        Localized title of the app.

        :param title: The title of this Listing.
        :type title: str
        """

        self._title = title

    @property
    def video(self):
        """Gets the video of this Listing.

        URL of a promotional YouTube video for the app.

        :return: The video of this Listing.
        :rtype: str
        """
        return self._video

    @video.setter
    def video(self, video):
        """Sets the video of this Listing.

        URL of a promotional YouTube video for the app.

        :param video: The video of this Listing.
        :type video: str
        """

        self._video = video
