# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppVersionRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, version_code_end: str=None, version_code_start: str=None):
        """AppVersionRange - a model defined in OpenAPI

        :param version_code_end: The version_code_end of this AppVersionRange.
        :param version_code_start: The version_code_start of this AppVersionRange.
        """
        self.openapi_types = {
            'version_code_end': str,
            'version_code_start': str
        }

        self.attribute_map = {
            'version_code_end': 'versionCodeEnd',
            'version_code_start': 'versionCodeStart'
        }

        self._version_code_end = version_code_end
        self._version_code_start = version_code_start

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppVersionRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppVersionRange of this AppVersionRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def version_code_end(self):
        """Gets the version_code_end of this AppVersionRange.

        Highest app version in the range, inclusive.

        :return: The version_code_end of this AppVersionRange.
        :rtype: str
        """
        return self._version_code_end

    @version_code_end.setter
    def version_code_end(self, version_code_end):
        """Sets the version_code_end of this AppVersionRange.

        Highest app version in the range, inclusive.

        :param version_code_end: The version_code_end of this AppVersionRange.
        :type version_code_end: str
        """

        self._version_code_end = version_code_end

    @property
    def version_code_start(self):
        """Gets the version_code_start of this AppVersionRange.

        Lowest app version in the range, inclusive.

        :return: The version_code_start of this AppVersionRange.
        :rtype: str
        """
        return self._version_code_start

    @version_code_start.setter
    def version_code_start(self, version_code_start):
        """Sets the version_code_start of this AppVersionRange.

        Lowest app version in the range, inclusive.

        :param version_code_start: The version_code_start of this AppVersionRange.
        :type version_code_start: str
        """

        self._version_code_start = version_code_start
