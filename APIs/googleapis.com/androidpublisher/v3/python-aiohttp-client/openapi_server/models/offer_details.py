# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OfferDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_plan_id: str=None, offer_id: str=None, offer_tags: List[str]=None):
        """OfferDetails - a model defined in OpenAPI

        :param base_plan_id: The base_plan_id of this OfferDetails.
        :param offer_id: The offer_id of this OfferDetails.
        :param offer_tags: The offer_tags of this OfferDetails.
        """
        self.openapi_types = {
            'base_plan_id': str,
            'offer_id': str,
            'offer_tags': List[str]
        }

        self.attribute_map = {
            'base_plan_id': 'basePlanId',
            'offer_id': 'offerId',
            'offer_tags': 'offerTags'
        }

        self._base_plan_id = base_plan_id
        self._offer_id = offer_id
        self._offer_tags = offer_tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OfferDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OfferDetails of this OfferDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_plan_id(self):
        """Gets the base_plan_id of this OfferDetails.

        The base plan ID. Present for all base plan and offers.

        :return: The base_plan_id of this OfferDetails.
        :rtype: str
        """
        return self._base_plan_id

    @base_plan_id.setter
    def base_plan_id(self, base_plan_id):
        """Sets the base_plan_id of this OfferDetails.

        The base plan ID. Present for all base plan and offers.

        :param base_plan_id: The base_plan_id of this OfferDetails.
        :type base_plan_id: str
        """

        self._base_plan_id = base_plan_id

    @property
    def offer_id(self):
        """Gets the offer_id of this OfferDetails.

        The offer ID. Only present for discounted offers.

        :return: The offer_id of this OfferDetails.
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this OfferDetails.

        The offer ID. Only present for discounted offers.

        :param offer_id: The offer_id of this OfferDetails.
        :type offer_id: str
        """

        self._offer_id = offer_id

    @property
    def offer_tags(self):
        """Gets the offer_tags of this OfferDetails.

        The latest offer tags associated with the offer. It includes tags inherited from the base plan.

        :return: The offer_tags of this OfferDetails.
        :rtype: List[str]
        """
        return self._offer_tags

    @offer_tags.setter
    def offer_tags(self, offer_tags):
        """Sets the offer_tags of this OfferDetails.

        The latest offer tags associated with the offer. It includes tags inherited from the base plan.

        :param offer_tags: The offer_tags of this OfferDetails.
        :type offer_tags: List[str]
        """

        self._offer_tags = offer_tags
