# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScreenDensity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, density_alias: str=None, density_dpi: int=None):
        """ScreenDensity - a model defined in OpenAPI

        :param density_alias: The density_alias of this ScreenDensity.
        :param density_dpi: The density_dpi of this ScreenDensity.
        """
        self.openapi_types = {
            'density_alias': str,
            'density_dpi': int
        }

        self.attribute_map = {
            'density_alias': 'densityAlias',
            'density_dpi': 'densityDpi'
        }

        self._density_alias = density_alias
        self._density_dpi = density_dpi

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScreenDensity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScreenDensity of this ScreenDensity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def density_alias(self):
        """Gets the density_alias of this ScreenDensity.

        Alias for a screen density.

        :return: The density_alias of this ScreenDensity.
        :rtype: str
        """
        return self._density_alias

    @density_alias.setter
    def density_alias(self, density_alias):
        """Sets the density_alias of this ScreenDensity.

        Alias for a screen density.

        :param density_alias: The density_alias of this ScreenDensity.
        :type density_alias: str
        """
        allowed_values = ["DENSITY_UNSPECIFIED", "NODPI", "LDPI", "MDPI", "TVDPI", "HDPI", "XHDPI", "XXHDPI", "XXXHDPI"]  # noqa: E501
        if density_alias not in allowed_values:
            raise ValueError(
                "Invalid value for `density_alias` ({0}), must be one of {1}"
                .format(density_alias, allowed_values)
            )

        self._density_alias = density_alias

    @property
    def density_dpi(self):
        """Gets the density_dpi of this ScreenDensity.

        Value for density dpi.

        :return: The density_dpi of this ScreenDensity.
        :rtype: int
        """
        return self._density_dpi

    @density_dpi.setter
    def density_dpi(self, density_dpi):
        """Sets the density_dpi of this ScreenDensity.

        Value for density dpi.

        :param density_dpi: The density_dpi of this ScreenDensity.
        :type density_dpi: int
        """

        self._density_dpi = density_dpi
