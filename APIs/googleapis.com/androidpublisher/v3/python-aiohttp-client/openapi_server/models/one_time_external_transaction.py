# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OneTimeExternalTransaction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_transaction_token: str=None):
        """OneTimeExternalTransaction - a model defined in OpenAPI

        :param external_transaction_token: The external_transaction_token of this OneTimeExternalTransaction.
        """
        self.openapi_types = {
            'external_transaction_token': str
        }

        self.attribute_map = {
            'external_transaction_token': 'externalTransactionToken'
        }

        self._external_transaction_token = external_transaction_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OneTimeExternalTransaction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OneTimeExternalTransaction of this OneTimeExternalTransaction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_transaction_token(self):
        """Gets the external_transaction_token of this OneTimeExternalTransaction.

        Input only. Provided during the call to Create. Retrieved from the client when the alternative billing flow is launched.

        :return: The external_transaction_token of this OneTimeExternalTransaction.
        :rtype: str
        """
        return self._external_transaction_token

    @external_transaction_token.setter
    def external_transaction_token(self, external_transaction_token):
        """Sets the external_transaction_token of this OneTimeExternalTransaction.

        Input only. Provided during the call to Create. Retrieved from the client when the alternative billing flow is launched.

        :param external_transaction_token: The external_transaction_token of this OneTimeExternalTransaction.
        :type external_transaction_token: str
        """

        self._external_transaction_token = external_transaction_token
