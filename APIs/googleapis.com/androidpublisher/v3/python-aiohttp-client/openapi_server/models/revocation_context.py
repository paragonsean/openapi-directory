# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RevocationContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prorated_refund: object=None):
        """RevocationContext - a model defined in OpenAPI

        :param prorated_refund: The prorated_refund of this RevocationContext.
        """
        self.openapi_types = {
            'prorated_refund': object
        }

        self.attribute_map = {
            'prorated_refund': 'proratedRefund'
        }

        self._prorated_refund = prorated_refund

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RevocationContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RevocationContext of this RevocationContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prorated_refund(self):
        """Gets the prorated_refund of this RevocationContext.

        Used to determine if the refund type in the RevocationContext is a prorated refund.

        :return: The prorated_refund of this RevocationContext.
        :rtype: object
        """
        return self._prorated_refund

    @prorated_refund.setter
    def prorated_refund(self, prorated_refund):
        """Sets the prorated_refund of this RevocationContext.

        Used to determine if the refund type in the RevocationContext is a prorated refund.

        :param prorated_refund: The prorated_refund of this RevocationContext.
        :type prorated_refund: object
        """

        self._prorated_refund = prorated_refund
