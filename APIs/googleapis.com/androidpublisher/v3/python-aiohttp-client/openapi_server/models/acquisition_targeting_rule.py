# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.targeting_rule_scope import TargetingRuleScope
from openapi_server import util


class AcquisitionTargetingRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scope: TargetingRuleScope=None):
        """AcquisitionTargetingRule - a model defined in OpenAPI

        :param scope: The scope of this AcquisitionTargetingRule.
        """
        self.openapi_types = {
            'scope': TargetingRuleScope
        }

        self.attribute_map = {
            'scope': 'scope'
        }

        self._scope = scope

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AcquisitionTargetingRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AcquisitionTargetingRule of this AcquisitionTargetingRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scope(self):
        """Gets the scope of this AcquisitionTargetingRule.


        :return: The scope of this AcquisitionTargetingRule.
        :rtype: TargetingRuleScope
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this AcquisitionTargetingRule.


        :param scope: The scope of this AcquisitionTargetingRule.
        :type scope: TargetingRuleScope
        """

        self._scope = scope
