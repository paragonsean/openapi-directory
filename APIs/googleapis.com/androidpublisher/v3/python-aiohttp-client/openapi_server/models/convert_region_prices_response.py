# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.converted_other_regions_price import ConvertedOtherRegionsPrice
from openapi_server.models.converted_region_price import ConvertedRegionPrice
from openapi_server import util


class ConvertRegionPricesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, converted_other_regions_price: ConvertedOtherRegionsPrice=None, converted_region_prices: Dict[str, ConvertedRegionPrice]=None):
        """ConvertRegionPricesResponse - a model defined in OpenAPI

        :param converted_other_regions_price: The converted_other_regions_price of this ConvertRegionPricesResponse.
        :param converted_region_prices: The converted_region_prices of this ConvertRegionPricesResponse.
        """
        self.openapi_types = {
            'converted_other_regions_price': ConvertedOtherRegionsPrice,
            'converted_region_prices': Dict[str, ConvertedRegionPrice]
        }

        self.attribute_map = {
            'converted_other_regions_price': 'convertedOtherRegionsPrice',
            'converted_region_prices': 'convertedRegionPrices'
        }

        self._converted_other_regions_price = converted_other_regions_price
        self._converted_region_prices = converted_region_prices

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConvertRegionPricesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConvertRegionPricesResponse of this ConvertRegionPricesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def converted_other_regions_price(self):
        """Gets the converted_other_regions_price of this ConvertRegionPricesResponse.


        :return: The converted_other_regions_price of this ConvertRegionPricesResponse.
        :rtype: ConvertedOtherRegionsPrice
        """
        return self._converted_other_regions_price

    @converted_other_regions_price.setter
    def converted_other_regions_price(self, converted_other_regions_price):
        """Sets the converted_other_regions_price of this ConvertRegionPricesResponse.


        :param converted_other_regions_price: The converted_other_regions_price of this ConvertRegionPricesResponse.
        :type converted_other_regions_price: ConvertedOtherRegionsPrice
        """

        self._converted_other_regions_price = converted_other_regions_price

    @property
    def converted_region_prices(self):
        """Gets the converted_region_prices of this ConvertRegionPricesResponse.

        Map from region code to converted region price.

        :return: The converted_region_prices of this ConvertRegionPricesResponse.
        :rtype: Dict[str, ConvertedRegionPrice]
        """
        return self._converted_region_prices

    @converted_region_prices.setter
    def converted_region_prices(self, converted_region_prices):
        """Sets the converted_region_prices of this ConvertRegionPricesResponse.

        Map from region code to converted region price.

        :param converted_region_prices: The converted_region_prices of this ConvertRegionPricesResponse.
        :type converted_region_prices: Dict[str, ConvertedRegionPrice]
        """

        self._converted_region_prices = converted_region_prices
