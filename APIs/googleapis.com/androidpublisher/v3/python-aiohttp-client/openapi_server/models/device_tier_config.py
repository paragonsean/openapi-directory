# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_group import DeviceGroup
from openapi_server.models.device_tier_set import DeviceTierSet
from openapi_server.models.user_country_set import UserCountrySet
from openapi_server import util


class DeviceTierConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_groups: List[DeviceGroup]=None, device_tier_config_id: str=None, device_tier_set: DeviceTierSet=None, user_country_sets: List[UserCountrySet]=None):
        """DeviceTierConfig - a model defined in OpenAPI

        :param device_groups: The device_groups of this DeviceTierConfig.
        :param device_tier_config_id: The device_tier_config_id of this DeviceTierConfig.
        :param device_tier_set: The device_tier_set of this DeviceTierConfig.
        :param user_country_sets: The user_country_sets of this DeviceTierConfig.
        """
        self.openapi_types = {
            'device_groups': List[DeviceGroup],
            'device_tier_config_id': str,
            'device_tier_set': DeviceTierSet,
            'user_country_sets': List[UserCountrySet]
        }

        self.attribute_map = {
            'device_groups': 'deviceGroups',
            'device_tier_config_id': 'deviceTierConfigId',
            'device_tier_set': 'deviceTierSet',
            'user_country_sets': 'userCountrySets'
        }

        self._device_groups = device_groups
        self._device_tier_config_id = device_tier_config_id
        self._device_tier_set = device_tier_set
        self._user_country_sets = user_country_sets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceTierConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceTierConfig of this DeviceTierConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_groups(self):
        """Gets the device_groups of this DeviceTierConfig.

        Definition of device groups for the app.

        :return: The device_groups of this DeviceTierConfig.
        :rtype: List[DeviceGroup]
        """
        return self._device_groups

    @device_groups.setter
    def device_groups(self, device_groups):
        """Sets the device_groups of this DeviceTierConfig.

        Definition of device groups for the app.

        :param device_groups: The device_groups of this DeviceTierConfig.
        :type device_groups: List[DeviceGroup]
        """

        self._device_groups = device_groups

    @property
    def device_tier_config_id(self):
        """Gets the device_tier_config_id of this DeviceTierConfig.

        Output only. The device tier config ID.

        :return: The device_tier_config_id of this DeviceTierConfig.
        :rtype: str
        """
        return self._device_tier_config_id

    @device_tier_config_id.setter
    def device_tier_config_id(self, device_tier_config_id):
        """Sets the device_tier_config_id of this DeviceTierConfig.

        Output only. The device tier config ID.

        :param device_tier_config_id: The device_tier_config_id of this DeviceTierConfig.
        :type device_tier_config_id: str
        """

        self._device_tier_config_id = device_tier_config_id

    @property
    def device_tier_set(self):
        """Gets the device_tier_set of this DeviceTierConfig.


        :return: The device_tier_set of this DeviceTierConfig.
        :rtype: DeviceTierSet
        """
        return self._device_tier_set

    @device_tier_set.setter
    def device_tier_set(self, device_tier_set):
        """Sets the device_tier_set of this DeviceTierConfig.


        :param device_tier_set: The device_tier_set of this DeviceTierConfig.
        :type device_tier_set: DeviceTierSet
        """

        self._device_tier_set = device_tier_set

    @property
    def user_country_sets(self):
        """Gets the user_country_sets of this DeviceTierConfig.

        Definition of user country sets for the app.

        :return: The user_country_sets of this DeviceTierConfig.
        :rtype: List[UserCountrySet]
        """
        return self._user_country_sets

    @user_country_sets.setter
    def user_country_sets(self, user_country_sets):
        """Sets the user_country_sets of this DeviceTierConfig.

        Definition of user country sets for the app.

        :param user_country_sets: The user_country_sets of this DeviceTierConfig.
        :type user_country_sets: List[UserCountrySet]
        """

        self._user_country_sets = user_country_sets
