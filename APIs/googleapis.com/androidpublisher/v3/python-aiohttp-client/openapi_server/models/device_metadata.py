# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cpu_make: str=None, cpu_model: str=None, device_class: str=None, gl_es_version: int=None, manufacturer: str=None, native_platform: str=None, product_name: str=None, ram_mb: int=None, screen_density_dpi: int=None, screen_height_px: int=None, screen_width_px: int=None):
        """DeviceMetadata - a model defined in OpenAPI

        :param cpu_make: The cpu_make of this DeviceMetadata.
        :param cpu_model: The cpu_model of this DeviceMetadata.
        :param device_class: The device_class of this DeviceMetadata.
        :param gl_es_version: The gl_es_version of this DeviceMetadata.
        :param manufacturer: The manufacturer of this DeviceMetadata.
        :param native_platform: The native_platform of this DeviceMetadata.
        :param product_name: The product_name of this DeviceMetadata.
        :param ram_mb: The ram_mb of this DeviceMetadata.
        :param screen_density_dpi: The screen_density_dpi of this DeviceMetadata.
        :param screen_height_px: The screen_height_px of this DeviceMetadata.
        :param screen_width_px: The screen_width_px of this DeviceMetadata.
        """
        self.openapi_types = {
            'cpu_make': str,
            'cpu_model': str,
            'device_class': str,
            'gl_es_version': int,
            'manufacturer': str,
            'native_platform': str,
            'product_name': str,
            'ram_mb': int,
            'screen_density_dpi': int,
            'screen_height_px': int,
            'screen_width_px': int
        }

        self.attribute_map = {
            'cpu_make': 'cpuMake',
            'cpu_model': 'cpuModel',
            'device_class': 'deviceClass',
            'gl_es_version': 'glEsVersion',
            'manufacturer': 'manufacturer',
            'native_platform': 'nativePlatform',
            'product_name': 'productName',
            'ram_mb': 'ramMb',
            'screen_density_dpi': 'screenDensityDpi',
            'screen_height_px': 'screenHeightPx',
            'screen_width_px': 'screenWidthPx'
        }

        self._cpu_make = cpu_make
        self._cpu_model = cpu_model
        self._device_class = device_class
        self._gl_es_version = gl_es_version
        self._manufacturer = manufacturer
        self._native_platform = native_platform
        self._product_name = product_name
        self._ram_mb = ram_mb
        self._screen_density_dpi = screen_density_dpi
        self._screen_height_px = screen_height_px
        self._screen_width_px = screen_width_px

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceMetadata of this DeviceMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cpu_make(self):
        """Gets the cpu_make of this DeviceMetadata.

        Device CPU make, e.g. \"Qualcomm\"

        :return: The cpu_make of this DeviceMetadata.
        :rtype: str
        """
        return self._cpu_make

    @cpu_make.setter
    def cpu_make(self, cpu_make):
        """Sets the cpu_make of this DeviceMetadata.

        Device CPU make, e.g. \"Qualcomm\"

        :param cpu_make: The cpu_make of this DeviceMetadata.
        :type cpu_make: str
        """

        self._cpu_make = cpu_make

    @property
    def cpu_model(self):
        """Gets the cpu_model of this DeviceMetadata.

        Device CPU model, e.g. \"MSM8974\"

        :return: The cpu_model of this DeviceMetadata.
        :rtype: str
        """
        return self._cpu_model

    @cpu_model.setter
    def cpu_model(self, cpu_model):
        """Sets the cpu_model of this DeviceMetadata.

        Device CPU model, e.g. \"MSM8974\"

        :param cpu_model: The cpu_model of this DeviceMetadata.
        :type cpu_model: str
        """

        self._cpu_model = cpu_model

    @property
    def device_class(self):
        """Gets the device_class of this DeviceMetadata.

        Device class (e.g. tablet)

        :return: The device_class of this DeviceMetadata.
        :rtype: str
        """
        return self._device_class

    @device_class.setter
    def device_class(self, device_class):
        """Sets the device_class of this DeviceMetadata.

        Device class (e.g. tablet)

        :param device_class: The device_class of this DeviceMetadata.
        :type device_class: str
        """

        self._device_class = device_class

    @property
    def gl_es_version(self):
        """Gets the gl_es_version of this DeviceMetadata.

        OpenGL version

        :return: The gl_es_version of this DeviceMetadata.
        :rtype: int
        """
        return self._gl_es_version

    @gl_es_version.setter
    def gl_es_version(self, gl_es_version):
        """Sets the gl_es_version of this DeviceMetadata.

        OpenGL version

        :param gl_es_version: The gl_es_version of this DeviceMetadata.
        :type gl_es_version: int
        """

        self._gl_es_version = gl_es_version

    @property
    def manufacturer(self):
        """Gets the manufacturer of this DeviceMetadata.

        Device manufacturer (e.g. Motorola)

        :return: The manufacturer of this DeviceMetadata.
        :rtype: str
        """
        return self._manufacturer

    @manufacturer.setter
    def manufacturer(self, manufacturer):
        """Sets the manufacturer of this DeviceMetadata.

        Device manufacturer (e.g. Motorola)

        :param manufacturer: The manufacturer of this DeviceMetadata.
        :type manufacturer: str
        """

        self._manufacturer = manufacturer

    @property
    def native_platform(self):
        """Gets the native_platform of this DeviceMetadata.

        Comma separated list of native platforms (e.g. \"arm\", \"arm7\")

        :return: The native_platform of this DeviceMetadata.
        :rtype: str
        """
        return self._native_platform

    @native_platform.setter
    def native_platform(self, native_platform):
        """Sets the native_platform of this DeviceMetadata.

        Comma separated list of native platforms (e.g. \"arm\", \"arm7\")

        :param native_platform: The native_platform of this DeviceMetadata.
        :type native_platform: str
        """

        self._native_platform = native_platform

    @property
    def product_name(self):
        """Gets the product_name of this DeviceMetadata.

        Device model name (e.g. Droid)

        :return: The product_name of this DeviceMetadata.
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this DeviceMetadata.

        Device model name (e.g. Droid)

        :param product_name: The product_name of this DeviceMetadata.
        :type product_name: str
        """

        self._product_name = product_name

    @property
    def ram_mb(self):
        """Gets the ram_mb of this DeviceMetadata.

        Device RAM in Megabytes, e.g. \"2048\"

        :return: The ram_mb of this DeviceMetadata.
        :rtype: int
        """
        return self._ram_mb

    @ram_mb.setter
    def ram_mb(self, ram_mb):
        """Sets the ram_mb of this DeviceMetadata.

        Device RAM in Megabytes, e.g. \"2048\"

        :param ram_mb: The ram_mb of this DeviceMetadata.
        :type ram_mb: int
        """

        self._ram_mb = ram_mb

    @property
    def screen_density_dpi(self):
        """Gets the screen_density_dpi of this DeviceMetadata.

        Screen density in DPI

        :return: The screen_density_dpi of this DeviceMetadata.
        :rtype: int
        """
        return self._screen_density_dpi

    @screen_density_dpi.setter
    def screen_density_dpi(self, screen_density_dpi):
        """Sets the screen_density_dpi of this DeviceMetadata.

        Screen density in DPI

        :param screen_density_dpi: The screen_density_dpi of this DeviceMetadata.
        :type screen_density_dpi: int
        """

        self._screen_density_dpi = screen_density_dpi

    @property
    def screen_height_px(self):
        """Gets the screen_height_px of this DeviceMetadata.

        Screen height in pixels

        :return: The screen_height_px of this DeviceMetadata.
        :rtype: int
        """
        return self._screen_height_px

    @screen_height_px.setter
    def screen_height_px(self, screen_height_px):
        """Sets the screen_height_px of this DeviceMetadata.

        Screen height in pixels

        :param screen_height_px: The screen_height_px of this DeviceMetadata.
        :type screen_height_px: int
        """

        self._screen_height_px = screen_height_px

    @property
    def screen_width_px(self):
        """Gets the screen_width_px of this DeviceMetadata.

        Screen width in pixels

        :return: The screen_width_px of this DeviceMetadata.
        :rtype: int
        """
        return self._screen_width_px

    @screen_width_px.setter
    def screen_width_px(self, screen_width_px):
        """Sets the screen_width_px of this DeviceMetadata.

        Screen width in pixels

        :param screen_width_px: The screen_width_px of this DeviceMetadata.
        :type screen_width_px: int
        """

        self._screen_width_px = screen_width_px
