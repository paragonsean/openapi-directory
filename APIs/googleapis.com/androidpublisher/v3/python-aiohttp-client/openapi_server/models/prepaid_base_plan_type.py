# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PrepaidBasePlanType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_period_duration: str=None, time_extension: str=None):
        """PrepaidBasePlanType - a model defined in OpenAPI

        :param billing_period_duration: The billing_period_duration of this PrepaidBasePlanType.
        :param time_extension: The time_extension of this PrepaidBasePlanType.
        """
        self.openapi_types = {
            'billing_period_duration': str,
            'time_extension': str
        }

        self.attribute_map = {
            'billing_period_duration': 'billingPeriodDuration',
            'time_extension': 'timeExtension'
        }

        self._billing_period_duration = billing_period_duration
        self._time_extension = time_extension

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrepaidBasePlanType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrepaidBasePlanType of this PrepaidBasePlanType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_period_duration(self):
        """Gets the billing_period_duration of this PrepaidBasePlanType.

        Required. Subscription period, specified in ISO 8601 format. For a list of acceptable billing periods, refer to the help center.

        :return: The billing_period_duration of this PrepaidBasePlanType.
        :rtype: str
        """
        return self._billing_period_duration

    @billing_period_duration.setter
    def billing_period_duration(self, billing_period_duration):
        """Sets the billing_period_duration of this PrepaidBasePlanType.

        Required. Subscription period, specified in ISO 8601 format. For a list of acceptable billing periods, refer to the help center.

        :param billing_period_duration: The billing_period_duration of this PrepaidBasePlanType.
        :type billing_period_duration: str
        """

        self._billing_period_duration = billing_period_duration

    @property
    def time_extension(self):
        """Gets the time_extension of this PrepaidBasePlanType.

        Whether users should be able to extend this prepaid base plan in Google Play surfaces. Defaults to TIME_EXTENSION_ACTIVE if not specified.

        :return: The time_extension of this PrepaidBasePlanType.
        :rtype: str
        """
        return self._time_extension

    @time_extension.setter
    def time_extension(self, time_extension):
        """Sets the time_extension of this PrepaidBasePlanType.

        Whether users should be able to extend this prepaid base plan in Google Play surfaces. Defaults to TIME_EXTENSION_ACTIVE if not specified.

        :param time_extension: The time_extension of this PrepaidBasePlanType.
        :type time_extension: str
        """
        allowed_values = ["TIME_EXTENSION_UNSPECIFIED", "TIME_EXTENSION_ACTIVE", "TIME_EXTENSION_INACTIVE"]  # noqa: E501
        if time_extension not in allowed_values:
            raise ValueError(
                "Invalid value for `time_extension` ({0}), must be one of {1}"
                .format(time_extension, allowed_values)
            )

        self._time_extension = time_extension
