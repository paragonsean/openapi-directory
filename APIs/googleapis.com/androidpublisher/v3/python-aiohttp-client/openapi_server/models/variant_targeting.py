# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.abi_targeting import AbiTargeting
from openapi_server.models.multi_abi_targeting import MultiAbiTargeting
from openapi_server.models.screen_density_targeting import ScreenDensityTargeting
from openapi_server.models.sdk_version_targeting import SdkVersionTargeting
from openapi_server.models.texture_compression_format_targeting import TextureCompressionFormatTargeting
from openapi_server import util


class VariantTargeting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abi_targeting: AbiTargeting=None, multi_abi_targeting: MultiAbiTargeting=None, screen_density_targeting: ScreenDensityTargeting=None, sdk_version_targeting: SdkVersionTargeting=None, texture_compression_format_targeting: TextureCompressionFormatTargeting=None):
        """VariantTargeting - a model defined in OpenAPI

        :param abi_targeting: The abi_targeting of this VariantTargeting.
        :param multi_abi_targeting: The multi_abi_targeting of this VariantTargeting.
        :param screen_density_targeting: The screen_density_targeting of this VariantTargeting.
        :param sdk_version_targeting: The sdk_version_targeting of this VariantTargeting.
        :param texture_compression_format_targeting: The texture_compression_format_targeting of this VariantTargeting.
        """
        self.openapi_types = {
            'abi_targeting': AbiTargeting,
            'multi_abi_targeting': MultiAbiTargeting,
            'screen_density_targeting': ScreenDensityTargeting,
            'sdk_version_targeting': SdkVersionTargeting,
            'texture_compression_format_targeting': TextureCompressionFormatTargeting
        }

        self.attribute_map = {
            'abi_targeting': 'abiTargeting',
            'multi_abi_targeting': 'multiAbiTargeting',
            'screen_density_targeting': 'screenDensityTargeting',
            'sdk_version_targeting': 'sdkVersionTargeting',
            'texture_compression_format_targeting': 'textureCompressionFormatTargeting'
        }

        self._abi_targeting = abi_targeting
        self._multi_abi_targeting = multi_abi_targeting
        self._screen_density_targeting = screen_density_targeting
        self._sdk_version_targeting = sdk_version_targeting
        self._texture_compression_format_targeting = texture_compression_format_targeting

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VariantTargeting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VariantTargeting of this VariantTargeting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abi_targeting(self):
        """Gets the abi_targeting of this VariantTargeting.


        :return: The abi_targeting of this VariantTargeting.
        :rtype: AbiTargeting
        """
        return self._abi_targeting

    @abi_targeting.setter
    def abi_targeting(self, abi_targeting):
        """Sets the abi_targeting of this VariantTargeting.


        :param abi_targeting: The abi_targeting of this VariantTargeting.
        :type abi_targeting: AbiTargeting
        """

        self._abi_targeting = abi_targeting

    @property
    def multi_abi_targeting(self):
        """Gets the multi_abi_targeting of this VariantTargeting.


        :return: The multi_abi_targeting of this VariantTargeting.
        :rtype: MultiAbiTargeting
        """
        return self._multi_abi_targeting

    @multi_abi_targeting.setter
    def multi_abi_targeting(self, multi_abi_targeting):
        """Sets the multi_abi_targeting of this VariantTargeting.


        :param multi_abi_targeting: The multi_abi_targeting of this VariantTargeting.
        :type multi_abi_targeting: MultiAbiTargeting
        """

        self._multi_abi_targeting = multi_abi_targeting

    @property
    def screen_density_targeting(self):
        """Gets the screen_density_targeting of this VariantTargeting.


        :return: The screen_density_targeting of this VariantTargeting.
        :rtype: ScreenDensityTargeting
        """
        return self._screen_density_targeting

    @screen_density_targeting.setter
    def screen_density_targeting(self, screen_density_targeting):
        """Sets the screen_density_targeting of this VariantTargeting.


        :param screen_density_targeting: The screen_density_targeting of this VariantTargeting.
        :type screen_density_targeting: ScreenDensityTargeting
        """

        self._screen_density_targeting = screen_density_targeting

    @property
    def sdk_version_targeting(self):
        """Gets the sdk_version_targeting of this VariantTargeting.


        :return: The sdk_version_targeting of this VariantTargeting.
        :rtype: SdkVersionTargeting
        """
        return self._sdk_version_targeting

    @sdk_version_targeting.setter
    def sdk_version_targeting(self, sdk_version_targeting):
        """Sets the sdk_version_targeting of this VariantTargeting.


        :param sdk_version_targeting: The sdk_version_targeting of this VariantTargeting.
        :type sdk_version_targeting: SdkVersionTargeting
        """

        self._sdk_version_targeting = sdk_version_targeting

    @property
    def texture_compression_format_targeting(self):
        """Gets the texture_compression_format_targeting of this VariantTargeting.


        :return: The texture_compression_format_targeting of this VariantTargeting.
        :rtype: TextureCompressionFormatTargeting
        """
        return self._texture_compression_format_targeting

    @texture_compression_format_targeting.setter
    def texture_compression_format_targeting(self, texture_compression_format_targeting):
        """Sets the texture_compression_format_targeting of this VariantTargeting.


        :param texture_compression_format_targeting: The texture_compression_format_targeting of this VariantTargeting.
        :type texture_compression_format_targeting: TextureCompressionFormatTargeting
        """

        self._texture_compression_format_targeting = texture_compression_format_targeting
