# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AllUsers(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_all_users_requested: bool=None):
        """AllUsers - a model defined in OpenAPI

        :param is_all_users_requested: The is_all_users_requested of this AllUsers.
        """
        self.openapi_types = {
            'is_all_users_requested': bool
        }

        self.attribute_map = {
            'is_all_users_requested': 'isAllUsersRequested'
        }

        self._is_all_users_requested = is_all_users_requested

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AllUsers':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AllUsers of this AllUsers.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_all_users_requested(self):
        """Gets the is_all_users_requested of this AllUsers.

        Required. Set to true if all set of users are needed.

        :return: The is_all_users_requested of this AllUsers.
        :rtype: bool
        """
        return self._is_all_users_requested

    @is_all_users_requested.setter
    def is_all_users_requested(self, is_all_users_requested):
        """Sets the is_all_users_requested of this AllUsers.

        Required. Set to true if all set of users are needed.

        :param is_all_users_requested: The is_all_users_requested of this AllUsers.
        :type is_all_users_requested: bool
        """

        self._is_all_users_requested = is_all_users_requested
