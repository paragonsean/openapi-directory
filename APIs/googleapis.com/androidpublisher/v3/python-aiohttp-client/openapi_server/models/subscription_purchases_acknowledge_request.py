# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubscriptionPurchasesAcknowledgeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, developer_payload: str=None):
        """SubscriptionPurchasesAcknowledgeRequest - a model defined in OpenAPI

        :param developer_payload: The developer_payload of this SubscriptionPurchasesAcknowledgeRequest.
        """
        self.openapi_types = {
            'developer_payload': str
        }

        self.attribute_map = {
            'developer_payload': 'developerPayload'
        }

        self._developer_payload = developer_payload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionPurchasesAcknowledgeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionPurchasesAcknowledgeRequest of this SubscriptionPurchasesAcknowledgeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def developer_payload(self):
        """Gets the developer_payload of this SubscriptionPurchasesAcknowledgeRequest.

        Payload to attach to the purchase.

        :return: The developer_payload of this SubscriptionPurchasesAcknowledgeRequest.
        :rtype: str
        """
        return self._developer_payload

    @developer_payload.setter
    def developer_payload(self, developer_payload):
        """Sets the developer_payload of this SubscriptionPurchasesAcknowledgeRequest.

        Payload to attach to the purchase.

        :param developer_payload: The developer_payload of this SubscriptionPurchasesAcknowledgeRequest.
        :type developer_payload: str
        """

        self._developer_payload = developer_payload
