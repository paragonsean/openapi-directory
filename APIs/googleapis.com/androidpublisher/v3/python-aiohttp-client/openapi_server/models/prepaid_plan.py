# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PrepaidPlan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_extend_after_time: str=None):
        """PrepaidPlan - a model defined in OpenAPI

        :param allow_extend_after_time: The allow_extend_after_time of this PrepaidPlan.
        """
        self.openapi_types = {
            'allow_extend_after_time': str
        }

        self.attribute_map = {
            'allow_extend_after_time': 'allowExtendAfterTime'
        }

        self._allow_extend_after_time = allow_extend_after_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrepaidPlan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrepaidPlan of this PrepaidPlan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_extend_after_time(self):
        """Gets the allow_extend_after_time of this PrepaidPlan.

        If present, this is the time after which top up purchases are allowed for the prepaid plan. Will not be present for expired prepaid plans.

        :return: The allow_extend_after_time of this PrepaidPlan.
        :rtype: str
        """
        return self._allow_extend_after_time

    @allow_extend_after_time.setter
    def allow_extend_after_time(self, allow_extend_after_time):
        """Sets the allow_extend_after_time of this PrepaidPlan.

        If present, this is the time after which top up purchases are allowed for the prepaid plan. Will not be present for expired prepaid plans.

        :param allow_extend_after_time: The allow_extend_after_time of this PrepaidPlan.
        :type allow_extend_after_time: str
        """

        self._allow_extend_after_time = allow_extend_after_time
