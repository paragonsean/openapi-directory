# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_spec import DeviceSpec
from openapi_server.models.system_apk_options import SystemApkOptions
from openapi_server import util


class Variant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_spec: DeviceSpec=None, options: SystemApkOptions=None, variant_id: int=None):
        """Variant - a model defined in OpenAPI

        :param device_spec: The device_spec of this Variant.
        :param options: The options of this Variant.
        :param variant_id: The variant_id of this Variant.
        """
        self.openapi_types = {
            'device_spec': DeviceSpec,
            'options': SystemApkOptions,
            'variant_id': int
        }

        self.attribute_map = {
            'device_spec': 'deviceSpec',
            'options': 'options',
            'variant_id': 'variantId'
        }

        self._device_spec = device_spec
        self._options = options
        self._variant_id = variant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Variant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Variant of this Variant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_spec(self):
        """Gets the device_spec of this Variant.


        :return: The device_spec of this Variant.
        :rtype: DeviceSpec
        """
        return self._device_spec

    @device_spec.setter
    def device_spec(self, device_spec):
        """Sets the device_spec of this Variant.


        :param device_spec: The device_spec of this Variant.
        :type device_spec: DeviceSpec
        """

        self._device_spec = device_spec

    @property
    def options(self):
        """Gets the options of this Variant.


        :return: The options of this Variant.
        :rtype: SystemApkOptions
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this Variant.


        :param options: The options of this Variant.
        :type options: SystemApkOptions
        """

        self._options = options

    @property
    def variant_id(self):
        """Gets the variant_id of this Variant.

        Output only. The ID of a previously created system APK variant.

        :return: The variant_id of this Variant.
        :rtype: int
        """
        return self._variant_id

    @variant_id.setter
    def variant_id(self, variant_id):
        """Sets the variant_id of this Variant.

        Output only. The ID of a previously created system APK variant.

        :param variant_id: The variant_id of this Variant.
        :type variant_id: int
        """

        self._variant_id = variant_id
