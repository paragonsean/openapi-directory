# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asset_slice_set import AssetSliceSet
from openapi_server.models.split_apk_variant import SplitApkVariant
from openapi_server import util


class TargetingInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_slice_set: List[AssetSliceSet]=None, package_name: str=None, variant: List[SplitApkVariant]=None):
        """TargetingInfo - a model defined in OpenAPI

        :param asset_slice_set: The asset_slice_set of this TargetingInfo.
        :param package_name: The package_name of this TargetingInfo.
        :param variant: The variant of this TargetingInfo.
        """
        self.openapi_types = {
            'asset_slice_set': List[AssetSliceSet],
            'package_name': str,
            'variant': List[SplitApkVariant]
        }

        self.attribute_map = {
            'asset_slice_set': 'assetSliceSet',
            'package_name': 'packageName',
            'variant': 'variant'
        }

        self._asset_slice_set = asset_slice_set
        self._package_name = package_name
        self._variant = variant

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TargetingInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TargetingInfo of this TargetingInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_slice_set(self):
        """Gets the asset_slice_set of this TargetingInfo.

        List of created asset slices.

        :return: The asset_slice_set of this TargetingInfo.
        :rtype: List[AssetSliceSet]
        """
        return self._asset_slice_set

    @asset_slice_set.setter
    def asset_slice_set(self, asset_slice_set):
        """Sets the asset_slice_set of this TargetingInfo.

        List of created asset slices.

        :param asset_slice_set: The asset_slice_set of this TargetingInfo.
        :type asset_slice_set: List[AssetSliceSet]
        """

        self._asset_slice_set = asset_slice_set

    @property
    def package_name(self):
        """Gets the package_name of this TargetingInfo.

        The package name of this app.

        :return: The package_name of this TargetingInfo.
        :rtype: str
        """
        return self._package_name

    @package_name.setter
    def package_name(self, package_name):
        """Sets the package_name of this TargetingInfo.

        The package name of this app.

        :param package_name: The package_name of this TargetingInfo.
        :type package_name: str
        """

        self._package_name = package_name

    @property
    def variant(self):
        """Gets the variant of this TargetingInfo.

        List of the created variants.

        :return: The variant of this TargetingInfo.
        :rtype: List[SplitApkVariant]
        """
        return self._variant

    @variant.setter
    def variant(self, variant):
        """Sets the variant of this TargetingInfo.

        List of the created variants.

        :param variant: The variant of this TargetingInfo.
        :type variant: List[SplitApkVariant]
        """

        self._variant = variant
