# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.track_release import TrackRelease
from openapi_server import util


class Track(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, releases: List[TrackRelease]=None, track: str=None):
        """Track - a model defined in OpenAPI

        :param releases: The releases of this Track.
        :param track: The track of this Track.
        """
        self.openapi_types = {
            'releases': List[TrackRelease],
            'track': str
        }

        self.attribute_map = {
            'releases': 'releases',
            'track': 'track'
        }

        self._releases = releases
        self._track = track

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Track':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Track of this Track.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def releases(self):
        """Gets the releases of this Track.

        In a read request, represents all active releases in the track. In an update request, represents desired changes.

        :return: The releases of this Track.
        :rtype: List[TrackRelease]
        """
        return self._releases

    @releases.setter
    def releases(self, releases):
        """Sets the releases of this Track.

        In a read request, represents all active releases in the track. In an update request, represents desired changes.

        :param releases: The releases of this Track.
        :type releases: List[TrackRelease]
        """

        self._releases = releases

    @property
    def track(self):
        """Gets the track of this Track.

        Identifier of the track. Form factor tracks have a special prefix as an identifier, for example `wear:production`, `automotive:production`. [More on track name](https://developers.google.com/android-publisher/tracks#ff-track-name)

        :return: The track of this Track.
        :rtype: str
        """
        return self._track

    @track.setter
    def track(self, track):
        """Sets the track of this Track.

        Identifier of the track. Form factor tracks have a special prefix as an identifier, for example `wear:production`, `automotive:production`. [More on track name](https://developers.google.com/android-publisher/tracks#ff-track-name)

        :param track: The track of this Track.
        :type track: str
        """

        self._track = track
