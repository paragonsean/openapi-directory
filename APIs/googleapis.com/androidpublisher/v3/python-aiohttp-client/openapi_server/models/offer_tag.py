# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OfferTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tag: str=None):
        """OfferTag - a model defined in OpenAPI

        :param tag: The tag of this OfferTag.
        """
        self.openapi_types = {
            'tag': str
        }

        self.attribute_map = {
            'tag': 'tag'
        }

        self._tag = tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OfferTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OfferTag of this OfferTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tag(self):
        """Gets the tag of this OfferTag.

        Must conform with RFC-1034. That is, this string can only contain lower-case letters (a-z), numbers (0-9), and hyphens (-), and be at most 20 characters.

        :return: The tag of this OfferTag.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this OfferTag.

        Must conform with RFC-1034. That is, this string can only contain lower-case letters (a-z), numbers (0-9), and hyphens (-), and be at most 20 characters.

        :param tag: The tag of this OfferTag.
        :type tag: str
        """

        self._tag = tag
