# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.apk_description import ApkDescription
from openapi_server.models.module_metadata import ModuleMetadata
from openapi_server import util


class ApkSet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apk_description: List[ApkDescription]=None, module_metadata: ModuleMetadata=None):
        """ApkSet - a model defined in OpenAPI

        :param apk_description: The apk_description of this ApkSet.
        :param module_metadata: The module_metadata of this ApkSet.
        """
        self.openapi_types = {
            'apk_description': List[ApkDescription],
            'module_metadata': ModuleMetadata
        }

        self.attribute_map = {
            'apk_description': 'apkDescription',
            'module_metadata': 'moduleMetadata'
        }

        self._apk_description = apk_description
        self._module_metadata = module_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApkSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApkSet of this ApkSet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apk_description(self):
        """Gets the apk_description of this ApkSet.

        Description of the generated apks.

        :return: The apk_description of this ApkSet.
        :rtype: List[ApkDescription]
        """
        return self._apk_description

    @apk_description.setter
    def apk_description(self, apk_description):
        """Sets the apk_description of this ApkSet.

        Description of the generated apks.

        :param apk_description: The apk_description of this ApkSet.
        :type apk_description: List[ApkDescription]
        """

        self._apk_description = apk_description

    @property
    def module_metadata(self):
        """Gets the module_metadata of this ApkSet.


        :return: The module_metadata of this ApkSet.
        :rtype: ModuleMetadata
        """
        return self._module_metadata

    @module_metadata.setter
    def module_metadata(self, module_metadata):
        """Sets the module_metadata of this ApkSet.


        :param module_metadata: The module_metadata of this ApkSet.
        :type module_metadata: ModuleMetadata
        """

        self._module_metadata = module_metadata
