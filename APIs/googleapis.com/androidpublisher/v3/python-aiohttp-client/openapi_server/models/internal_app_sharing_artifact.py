# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InternalAppSharingArtifact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate_fingerprint: str=None, download_url: str=None, sha256: str=None):
        """InternalAppSharingArtifact - a model defined in OpenAPI

        :param certificate_fingerprint: The certificate_fingerprint of this InternalAppSharingArtifact.
        :param download_url: The download_url of this InternalAppSharingArtifact.
        :param sha256: The sha256 of this InternalAppSharingArtifact.
        """
        self.openapi_types = {
            'certificate_fingerprint': str,
            'download_url': str,
            'sha256': str
        }

        self.attribute_map = {
            'certificate_fingerprint': 'certificateFingerprint',
            'download_url': 'downloadUrl',
            'sha256': 'sha256'
        }

        self._certificate_fingerprint = certificate_fingerprint
        self._download_url = download_url
        self._sha256 = sha256

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InternalAppSharingArtifact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InternalAppSharingArtifact of this InternalAppSharingArtifact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate_fingerprint(self):
        """Gets the certificate_fingerprint of this InternalAppSharingArtifact.

        The sha256 fingerprint of the certificate used to sign the generated artifact.

        :return: The certificate_fingerprint of this InternalAppSharingArtifact.
        :rtype: str
        """
        return self._certificate_fingerprint

    @certificate_fingerprint.setter
    def certificate_fingerprint(self, certificate_fingerprint):
        """Sets the certificate_fingerprint of this InternalAppSharingArtifact.

        The sha256 fingerprint of the certificate used to sign the generated artifact.

        :param certificate_fingerprint: The certificate_fingerprint of this InternalAppSharingArtifact.
        :type certificate_fingerprint: str
        """

        self._certificate_fingerprint = certificate_fingerprint

    @property
    def download_url(self):
        """Gets the download_url of this InternalAppSharingArtifact.

        The download URL generated for the uploaded artifact. Users that are authorized to download can follow the link to the Play Store app to install it.

        :return: The download_url of this InternalAppSharingArtifact.
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this InternalAppSharingArtifact.

        The download URL generated for the uploaded artifact. Users that are authorized to download can follow the link to the Play Store app to install it.

        :param download_url: The download_url of this InternalAppSharingArtifact.
        :type download_url: str
        """

        self._download_url = download_url

    @property
    def sha256(self):
        """Gets the sha256 of this InternalAppSharingArtifact.

        The sha256 hash of the artifact represented as a lowercase hexadecimal number, matching the output of the sha256sum command.

        :return: The sha256 of this InternalAppSharingArtifact.
        :rtype: str
        """
        return self._sha256

    @sha256.setter
    def sha256(self, sha256):
        """Sets the sha256 of this InternalAppSharingArtifact.

        The sha256 hash of the artifact represented as a lowercase hexadecimal number, matching the output of the sha256sum command.

        :param sha256: The sha256 of this InternalAppSharingArtifact.
        :type sha256: str
        """

        self._sha256 = sha256
