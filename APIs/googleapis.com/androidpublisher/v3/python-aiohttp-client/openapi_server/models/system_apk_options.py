# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SystemApkOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rotated: bool=None, uncompressed_dex_files: bool=None, uncompressed_native_libraries: bool=None):
        """SystemApkOptions - a model defined in OpenAPI

        :param rotated: The rotated of this SystemApkOptions.
        :param uncompressed_dex_files: The uncompressed_dex_files of this SystemApkOptions.
        :param uncompressed_native_libraries: The uncompressed_native_libraries of this SystemApkOptions.
        """
        self.openapi_types = {
            'rotated': bool,
            'uncompressed_dex_files': bool,
            'uncompressed_native_libraries': bool
        }

        self.attribute_map = {
            'rotated': 'rotated',
            'uncompressed_dex_files': 'uncompressedDexFiles',
            'uncompressed_native_libraries': 'uncompressedNativeLibraries'
        }

        self._rotated = rotated
        self._uncompressed_dex_files = uncompressed_dex_files
        self._uncompressed_native_libraries = uncompressed_native_libraries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SystemApkOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SystemApkOptions of this SystemApkOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rotated(self):
        """Gets the rotated of this SystemApkOptions.

        Whether to use the rotated key for signing the system APK.

        :return: The rotated of this SystemApkOptions.
        :rtype: bool
        """
        return self._rotated

    @rotated.setter
    def rotated(self, rotated):
        """Sets the rotated of this SystemApkOptions.

        Whether to use the rotated key for signing the system APK.

        :param rotated: The rotated of this SystemApkOptions.
        :type rotated: bool
        """

        self._rotated = rotated

    @property
    def uncompressed_dex_files(self):
        """Gets the uncompressed_dex_files of this SystemApkOptions.

        Whether system APK was generated with uncompressed dex files.

        :return: The uncompressed_dex_files of this SystemApkOptions.
        :rtype: bool
        """
        return self._uncompressed_dex_files

    @uncompressed_dex_files.setter
    def uncompressed_dex_files(self, uncompressed_dex_files):
        """Sets the uncompressed_dex_files of this SystemApkOptions.

        Whether system APK was generated with uncompressed dex files.

        :param uncompressed_dex_files: The uncompressed_dex_files of this SystemApkOptions.
        :type uncompressed_dex_files: bool
        """

        self._uncompressed_dex_files = uncompressed_dex_files

    @property
    def uncompressed_native_libraries(self):
        """Gets the uncompressed_native_libraries of this SystemApkOptions.

        Whether system APK was generated with uncompressed native libraries.

        :return: The uncompressed_native_libraries of this SystemApkOptions.
        :rtype: bool
        """
        return self._uncompressed_native_libraries

    @uncompressed_native_libraries.setter
    def uncompressed_native_libraries(self, uncompressed_native_libraries):
        """Sets the uncompressed_native_libraries of this SystemApkOptions.

        Whether system APK was generated with uncompressed native libraries.

        :param uncompressed_native_libraries: The uncompressed_native_libraries of this SystemApkOptions.
        :type uncompressed_native_libraries: bool
        """

        self._uncompressed_native_libraries = uncompressed_native_libraries
