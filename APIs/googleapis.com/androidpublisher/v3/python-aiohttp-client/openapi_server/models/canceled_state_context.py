# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_initiated_cancellation import UserInitiatedCancellation
from openapi_server import util


class CanceledStateContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, developer_initiated_cancellation: object=None, replacement_cancellation: object=None, system_initiated_cancellation: object=None, user_initiated_cancellation: UserInitiatedCancellation=None):
        """CanceledStateContext - a model defined in OpenAPI

        :param developer_initiated_cancellation: The developer_initiated_cancellation of this CanceledStateContext.
        :param replacement_cancellation: The replacement_cancellation of this CanceledStateContext.
        :param system_initiated_cancellation: The system_initiated_cancellation of this CanceledStateContext.
        :param user_initiated_cancellation: The user_initiated_cancellation of this CanceledStateContext.
        """
        self.openapi_types = {
            'developer_initiated_cancellation': object,
            'replacement_cancellation': object,
            'system_initiated_cancellation': object,
            'user_initiated_cancellation': UserInitiatedCancellation
        }

        self.attribute_map = {
            'developer_initiated_cancellation': 'developerInitiatedCancellation',
            'replacement_cancellation': 'replacementCancellation',
            'system_initiated_cancellation': 'systemInitiatedCancellation',
            'user_initiated_cancellation': 'userInitiatedCancellation'
        }

        self._developer_initiated_cancellation = developer_initiated_cancellation
        self._replacement_cancellation = replacement_cancellation
        self._system_initiated_cancellation = system_initiated_cancellation
        self._user_initiated_cancellation = user_initiated_cancellation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CanceledStateContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CanceledStateContext of this CanceledStateContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def developer_initiated_cancellation(self):
        """Gets the developer_initiated_cancellation of this CanceledStateContext.

        Information specific to cancellations initiated by developers.

        :return: The developer_initiated_cancellation of this CanceledStateContext.
        :rtype: object
        """
        return self._developer_initiated_cancellation

    @developer_initiated_cancellation.setter
    def developer_initiated_cancellation(self, developer_initiated_cancellation):
        """Sets the developer_initiated_cancellation of this CanceledStateContext.

        Information specific to cancellations initiated by developers.

        :param developer_initiated_cancellation: The developer_initiated_cancellation of this CanceledStateContext.
        :type developer_initiated_cancellation: object
        """

        self._developer_initiated_cancellation = developer_initiated_cancellation

    @property
    def replacement_cancellation(self):
        """Gets the replacement_cancellation of this CanceledStateContext.

        Information specific to cancellations caused by subscription replacement.

        :return: The replacement_cancellation of this CanceledStateContext.
        :rtype: object
        """
        return self._replacement_cancellation

    @replacement_cancellation.setter
    def replacement_cancellation(self, replacement_cancellation):
        """Sets the replacement_cancellation of this CanceledStateContext.

        Information specific to cancellations caused by subscription replacement.

        :param replacement_cancellation: The replacement_cancellation of this CanceledStateContext.
        :type replacement_cancellation: object
        """

        self._replacement_cancellation = replacement_cancellation

    @property
    def system_initiated_cancellation(self):
        """Gets the system_initiated_cancellation of this CanceledStateContext.

        Information specific to cancellations initiated by Google system.

        :return: The system_initiated_cancellation of this CanceledStateContext.
        :rtype: object
        """
        return self._system_initiated_cancellation

    @system_initiated_cancellation.setter
    def system_initiated_cancellation(self, system_initiated_cancellation):
        """Sets the system_initiated_cancellation of this CanceledStateContext.

        Information specific to cancellations initiated by Google system.

        :param system_initiated_cancellation: The system_initiated_cancellation of this CanceledStateContext.
        :type system_initiated_cancellation: object
        """

        self._system_initiated_cancellation = system_initiated_cancellation

    @property
    def user_initiated_cancellation(self):
        """Gets the user_initiated_cancellation of this CanceledStateContext.


        :return: The user_initiated_cancellation of this CanceledStateContext.
        :rtype: UserInitiatedCancellation
        """
        return self._user_initiated_cancellation

    @user_initiated_cancellation.setter
    def user_initiated_cancellation(self, user_initiated_cancellation):
        """Sets the user_initiated_cancellation of this CanceledStateContext.


        :param user_initiated_cancellation: The user_initiated_cancellation of this CanceledStateContext.
        :type user_initiated_cancellation: UserInitiatedCancellation
        """

        self._user_initiated_cancellation = user_initiated_cancellation
