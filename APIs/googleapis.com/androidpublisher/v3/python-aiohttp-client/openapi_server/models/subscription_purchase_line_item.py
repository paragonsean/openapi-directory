# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_renewing_plan import AutoRenewingPlan
from openapi_server.models.deferred_item_replacement import DeferredItemReplacement
from openapi_server.models.offer_details import OfferDetails
from openapi_server.models.prepaid_plan import PrepaidPlan
from openapi_server import util


class SubscriptionPurchaseLineItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_renewing_plan: AutoRenewingPlan=None, deferred_item_replacement: DeferredItemReplacement=None, expiry_time: str=None, offer_details: OfferDetails=None, prepaid_plan: PrepaidPlan=None, product_id: str=None):
        """SubscriptionPurchaseLineItem - a model defined in OpenAPI

        :param auto_renewing_plan: The auto_renewing_plan of this SubscriptionPurchaseLineItem.
        :param deferred_item_replacement: The deferred_item_replacement of this SubscriptionPurchaseLineItem.
        :param expiry_time: The expiry_time of this SubscriptionPurchaseLineItem.
        :param offer_details: The offer_details of this SubscriptionPurchaseLineItem.
        :param prepaid_plan: The prepaid_plan of this SubscriptionPurchaseLineItem.
        :param product_id: The product_id of this SubscriptionPurchaseLineItem.
        """
        self.openapi_types = {
            'auto_renewing_plan': AutoRenewingPlan,
            'deferred_item_replacement': DeferredItemReplacement,
            'expiry_time': str,
            'offer_details': OfferDetails,
            'prepaid_plan': PrepaidPlan,
            'product_id': str
        }

        self.attribute_map = {
            'auto_renewing_plan': 'autoRenewingPlan',
            'deferred_item_replacement': 'deferredItemReplacement',
            'expiry_time': 'expiryTime',
            'offer_details': 'offerDetails',
            'prepaid_plan': 'prepaidPlan',
            'product_id': 'productId'
        }

        self._auto_renewing_plan = auto_renewing_plan
        self._deferred_item_replacement = deferred_item_replacement
        self._expiry_time = expiry_time
        self._offer_details = offer_details
        self._prepaid_plan = prepaid_plan
        self._product_id = product_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionPurchaseLineItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionPurchaseLineItem of this SubscriptionPurchaseLineItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_renewing_plan(self):
        """Gets the auto_renewing_plan of this SubscriptionPurchaseLineItem.


        :return: The auto_renewing_plan of this SubscriptionPurchaseLineItem.
        :rtype: AutoRenewingPlan
        """
        return self._auto_renewing_plan

    @auto_renewing_plan.setter
    def auto_renewing_plan(self, auto_renewing_plan):
        """Sets the auto_renewing_plan of this SubscriptionPurchaseLineItem.


        :param auto_renewing_plan: The auto_renewing_plan of this SubscriptionPurchaseLineItem.
        :type auto_renewing_plan: AutoRenewingPlan
        """

        self._auto_renewing_plan = auto_renewing_plan

    @property
    def deferred_item_replacement(self):
        """Gets the deferred_item_replacement of this SubscriptionPurchaseLineItem.


        :return: The deferred_item_replacement of this SubscriptionPurchaseLineItem.
        :rtype: DeferredItemReplacement
        """
        return self._deferred_item_replacement

    @deferred_item_replacement.setter
    def deferred_item_replacement(self, deferred_item_replacement):
        """Sets the deferred_item_replacement of this SubscriptionPurchaseLineItem.


        :param deferred_item_replacement: The deferred_item_replacement of this SubscriptionPurchaseLineItem.
        :type deferred_item_replacement: DeferredItemReplacement
        """

        self._deferred_item_replacement = deferred_item_replacement

    @property
    def expiry_time(self):
        """Gets the expiry_time of this SubscriptionPurchaseLineItem.

        Time at which the subscription expired or will expire unless the access is extended (ex. renews).

        :return: The expiry_time of this SubscriptionPurchaseLineItem.
        :rtype: str
        """
        return self._expiry_time

    @expiry_time.setter
    def expiry_time(self, expiry_time):
        """Sets the expiry_time of this SubscriptionPurchaseLineItem.

        Time at which the subscription expired or will expire unless the access is extended (ex. renews).

        :param expiry_time: The expiry_time of this SubscriptionPurchaseLineItem.
        :type expiry_time: str
        """

        self._expiry_time = expiry_time

    @property
    def offer_details(self):
        """Gets the offer_details of this SubscriptionPurchaseLineItem.


        :return: The offer_details of this SubscriptionPurchaseLineItem.
        :rtype: OfferDetails
        """
        return self._offer_details

    @offer_details.setter
    def offer_details(self, offer_details):
        """Sets the offer_details of this SubscriptionPurchaseLineItem.


        :param offer_details: The offer_details of this SubscriptionPurchaseLineItem.
        :type offer_details: OfferDetails
        """

        self._offer_details = offer_details

    @property
    def prepaid_plan(self):
        """Gets the prepaid_plan of this SubscriptionPurchaseLineItem.


        :return: The prepaid_plan of this SubscriptionPurchaseLineItem.
        :rtype: PrepaidPlan
        """
        return self._prepaid_plan

    @prepaid_plan.setter
    def prepaid_plan(self, prepaid_plan):
        """Sets the prepaid_plan of this SubscriptionPurchaseLineItem.


        :param prepaid_plan: The prepaid_plan of this SubscriptionPurchaseLineItem.
        :type prepaid_plan: PrepaidPlan
        """

        self._prepaid_plan = prepaid_plan

    @property
    def product_id(self):
        """Gets the product_id of this SubscriptionPurchaseLineItem.

        The purchased product ID (for example, 'monthly001').

        :return: The product_id of this SubscriptionPurchaseLineItem.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this SubscriptionPurchaseLineItem.

        The purchased product ID (for example, 'monthly001').

        :param product_id: The product_id of this SubscriptionPurchaseLineItem.
        :type product_id: str
        """

        self._product_id = product_id
