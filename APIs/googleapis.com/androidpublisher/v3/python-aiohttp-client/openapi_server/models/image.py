# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Image(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, sha1: str=None, sha256: str=None, url: str=None):
        """Image - a model defined in OpenAPI

        :param id: The id of this Image.
        :param sha1: The sha1 of this Image.
        :param sha256: The sha256 of this Image.
        :param url: The url of this Image.
        """
        self.openapi_types = {
            'id': str,
            'sha1': str,
            'sha256': str,
            'url': str
        }

        self.attribute_map = {
            'id': 'id',
            'sha1': 'sha1',
            'sha256': 'sha256',
            'url': 'url'
        }

        self._id = id
        self._sha1 = sha1
        self._sha256 = sha256
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Image':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Image of this Image.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Image.

        A unique id representing this image.

        :return: The id of this Image.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Image.

        A unique id representing this image.

        :param id: The id of this Image.
        :type id: str
        """

        self._id = id

    @property
    def sha1(self):
        """Gets the sha1 of this Image.

        A sha1 hash of the image.

        :return: The sha1 of this Image.
        :rtype: str
        """
        return self._sha1

    @sha1.setter
    def sha1(self, sha1):
        """Sets the sha1 of this Image.

        A sha1 hash of the image.

        :param sha1: The sha1 of this Image.
        :type sha1: str
        """

        self._sha1 = sha1

    @property
    def sha256(self):
        """Gets the sha256 of this Image.

        A sha256 hash of the image.

        :return: The sha256 of this Image.
        :rtype: str
        """
        return self._sha256

    @sha256.setter
    def sha256(self, sha256):
        """Sets the sha256 of this Image.

        A sha256 hash of the image.

        :param sha256: The sha256 of this Image.
        :type sha256: str
        """

        self._sha256 = sha256

    @property
    def url(self):
        """Gets the url of this Image.

        A URL that will serve a preview of the image.

        :return: The url of this Image.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Image.

        A URL that will serve a preview of the image.

        :param url: The url of this Image.
        :type url: str
        """

        self._url = url
