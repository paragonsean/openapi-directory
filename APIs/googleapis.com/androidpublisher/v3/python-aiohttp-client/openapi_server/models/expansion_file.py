# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExpansionFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_size: str=None, references_version: int=None):
        """ExpansionFile - a model defined in OpenAPI

        :param file_size: The file_size of this ExpansionFile.
        :param references_version: The references_version of this ExpansionFile.
        """
        self.openapi_types = {
            'file_size': str,
            'references_version': int
        }

        self.attribute_map = {
            'file_size': 'fileSize',
            'references_version': 'referencesVersion'
        }

        self._file_size = file_size
        self._references_version = references_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExpansionFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExpansionFile of this ExpansionFile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_size(self):
        """Gets the file_size of this ExpansionFile.

        If set, this field indicates that this APK has an expansion file uploaded to it: this APK does not reference another APK's expansion file. The field's value is the size of the uploaded expansion file in bytes.

        :return: The file_size of this ExpansionFile.
        :rtype: str
        """
        return self._file_size

    @file_size.setter
    def file_size(self, file_size):
        """Sets the file_size of this ExpansionFile.

        If set, this field indicates that this APK has an expansion file uploaded to it: this APK does not reference another APK's expansion file. The field's value is the size of the uploaded expansion file in bytes.

        :param file_size: The file_size of this ExpansionFile.
        :type file_size: str
        """

        self._file_size = file_size

    @property
    def references_version(self):
        """Gets the references_version of this ExpansionFile.

        If set, this APK's expansion file references another APK's expansion file. The file_size field will not be set.

        :return: The references_version of this ExpansionFile.
        :rtype: int
        """
        return self._references_version

    @references_version.setter
    def references_version(self, references_version):
        """Sets the references_version of this ExpansionFile.

        If set, this APK's expansion file references another APK's expansion file. The file_size field will not be set.

        :param references_version: The references_version of this ExpansionFile.
        :type references_version: int
        """

        self._references_version = references_version
