# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RemoteInAppUpdateDataPerBundle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recovered_device_count: str=None, total_device_count: str=None, version_code: str=None):
        """RemoteInAppUpdateDataPerBundle - a model defined in OpenAPI

        :param recovered_device_count: The recovered_device_count of this RemoteInAppUpdateDataPerBundle.
        :param total_device_count: The total_device_count of this RemoteInAppUpdateDataPerBundle.
        :param version_code: The version_code of this RemoteInAppUpdateDataPerBundle.
        """
        self.openapi_types = {
            'recovered_device_count': str,
            'total_device_count': str,
            'version_code': str
        }

        self.attribute_map = {
            'recovered_device_count': 'recoveredDeviceCount',
            'total_device_count': 'totalDeviceCount',
            'version_code': 'versionCode'
        }

        self._recovered_device_count = recovered_device_count
        self._total_device_count = total_device_count
        self._version_code = version_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoteInAppUpdateDataPerBundle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoteInAppUpdateDataPerBundle of this RemoteInAppUpdateDataPerBundle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recovered_device_count(self):
        """Gets the recovered_device_count of this RemoteInAppUpdateDataPerBundle.

        Total number of devices which have been rescued.

        :return: The recovered_device_count of this RemoteInAppUpdateDataPerBundle.
        :rtype: str
        """
        return self._recovered_device_count

    @recovered_device_count.setter
    def recovered_device_count(self, recovered_device_count):
        """Sets the recovered_device_count of this RemoteInAppUpdateDataPerBundle.

        Total number of devices which have been rescued.

        :param recovered_device_count: The recovered_device_count of this RemoteInAppUpdateDataPerBundle.
        :type recovered_device_count: str
        """

        self._recovered_device_count = recovered_device_count

    @property
    def total_device_count(self):
        """Gets the total_device_count of this RemoteInAppUpdateDataPerBundle.

        Total number of devices affected by this recovery action associated with bundle of the app.

        :return: The total_device_count of this RemoteInAppUpdateDataPerBundle.
        :rtype: str
        """
        return self._total_device_count

    @total_device_count.setter
    def total_device_count(self, total_device_count):
        """Sets the total_device_count of this RemoteInAppUpdateDataPerBundle.

        Total number of devices affected by this recovery action associated with bundle of the app.

        :param total_device_count: The total_device_count of this RemoteInAppUpdateDataPerBundle.
        :type total_device_count: str
        """

        self._total_device_count = total_device_count

    @property
    def version_code(self):
        """Gets the version_code of this RemoteInAppUpdateDataPerBundle.

        Version Code corresponding to the target bundle.

        :return: The version_code of this RemoteInAppUpdateDataPerBundle.
        :rtype: str
        """
        return self._version_code

    @version_code.setter
    def version_code(self, version_code):
        """Sets the version_code of this RemoteInAppUpdateDataPerBundle.

        Version Code corresponding to the target bundle.

        :param version_code: The version_code of this RemoteInAppUpdateDataPerBundle.
        :type version_code: str
        """

        self._version_code = version_code
