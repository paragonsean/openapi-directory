# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_feature import DeviceFeature
from openapi_server import util


class DeviceFeatureTargeting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, required_feature: DeviceFeature=None):
        """DeviceFeatureTargeting - a model defined in OpenAPI

        :param required_feature: The required_feature of this DeviceFeatureTargeting.
        """
        self.openapi_types = {
            'required_feature': DeviceFeature
        }

        self.attribute_map = {
            'required_feature': 'requiredFeature'
        }

        self._required_feature = required_feature

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceFeatureTargeting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceFeatureTargeting of this DeviceFeatureTargeting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def required_feature(self):
        """Gets the required_feature of this DeviceFeatureTargeting.


        :return: The required_feature of this DeviceFeatureTargeting.
        :rtype: DeviceFeature
        """
        return self._required_feature

    @required_feature.setter
    def required_feature(self, required_feature):
        """Sets the required_feature of this DeviceFeatureTargeting.


        :param required_feature: The required_feature of this DeviceFeatureTargeting.
        :type required_feature: DeviceFeature
        """

        self._required_feature = required_feature
