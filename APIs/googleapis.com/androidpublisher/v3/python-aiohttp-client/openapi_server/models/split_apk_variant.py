# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.apk_set import ApkSet
from openapi_server.models.variant_targeting import VariantTargeting
from openapi_server import util


class SplitApkVariant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apk_set: List[ApkSet]=None, targeting: VariantTargeting=None, variant_number: int=None):
        """SplitApkVariant - a model defined in OpenAPI

        :param apk_set: The apk_set of this SplitApkVariant.
        :param targeting: The targeting of this SplitApkVariant.
        :param variant_number: The variant_number of this SplitApkVariant.
        """
        self.openapi_types = {
            'apk_set': List[ApkSet],
            'targeting': VariantTargeting,
            'variant_number': int
        }

        self.attribute_map = {
            'apk_set': 'apkSet',
            'targeting': 'targeting',
            'variant_number': 'variantNumber'
        }

        self._apk_set = apk_set
        self._targeting = targeting
        self._variant_number = variant_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SplitApkVariant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SplitApkVariant of this SplitApkVariant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apk_set(self):
        """Gets the apk_set of this SplitApkVariant.

        Set of APKs, one set per module.

        :return: The apk_set of this SplitApkVariant.
        :rtype: List[ApkSet]
        """
        return self._apk_set

    @apk_set.setter
    def apk_set(self, apk_set):
        """Sets the apk_set of this SplitApkVariant.

        Set of APKs, one set per module.

        :param apk_set: The apk_set of this SplitApkVariant.
        :type apk_set: List[ApkSet]
        """

        self._apk_set = apk_set

    @property
    def targeting(self):
        """Gets the targeting of this SplitApkVariant.


        :return: The targeting of this SplitApkVariant.
        :rtype: VariantTargeting
        """
        return self._targeting

    @targeting.setter
    def targeting(self, targeting):
        """Sets the targeting of this SplitApkVariant.


        :param targeting: The targeting of this SplitApkVariant.
        :type targeting: VariantTargeting
        """

        self._targeting = targeting

    @property
    def variant_number(self):
        """Gets the variant_number of this SplitApkVariant.

        Number of the variant, starting at 0 (unless overridden). A device will receive APKs from the first variant that matches the device configuration, with higher variant numbers having priority over lower variant numbers.

        :return: The variant_number of this SplitApkVariant.
        :rtype: int
        """
        return self._variant_number

    @variant_number.setter
    def variant_number(self, variant_number):
        """Sets the variant_number of this SplitApkVariant.

        Number of the variant, starting at 0 (unless overridden). A device will receive APKs from the first variant that matches the device configuration, with higher variant numbers having priority over lower variant numbers.

        :param variant_number: The variant_number of this SplitApkVariant.
        :type variant_number: int
        """

        self._variant_number = variant_number
