# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TargetingRuleScope(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, specific_subscription_in_app: str=None):
        """TargetingRuleScope - a model defined in OpenAPI

        :param specific_subscription_in_app: The specific_subscription_in_app of this TargetingRuleScope.
        """
        self.openapi_types = {
            'specific_subscription_in_app': str
        }

        self.attribute_map = {
            'specific_subscription_in_app': 'specificSubscriptionInApp'
        }

        self._specific_subscription_in_app = specific_subscription_in_app

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TargetingRuleScope':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TargetingRuleScope of this TargetingRuleScope.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def specific_subscription_in_app(self):
        """Gets the specific_subscription_in_app of this TargetingRuleScope.

        The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app.

        :return: The specific_subscription_in_app of this TargetingRuleScope.
        :rtype: str
        """
        return self._specific_subscription_in_app

    @specific_subscription_in_app.setter
    def specific_subscription_in_app(self, specific_subscription_in_app):
        """Sets the specific_subscription_in_app of this TargetingRuleScope.

        The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app.

        :param specific_subscription_in_app: The specific_subscription_in_app of this TargetingRuleScope.
        :type specific_subscription_in_app: str
        """

        self._specific_subscription_in_app = specific_subscription_in_app
