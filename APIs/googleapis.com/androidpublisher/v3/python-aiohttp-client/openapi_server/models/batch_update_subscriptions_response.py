# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.subscription import Subscription
from openapi_server import util


class BatchUpdateSubscriptionsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subscriptions: List[Subscription]=None):
        """BatchUpdateSubscriptionsResponse - a model defined in OpenAPI

        :param subscriptions: The subscriptions of this BatchUpdateSubscriptionsResponse.
        """
        self.openapi_types = {
            'subscriptions': List[Subscription]
        }

        self.attribute_map = {
            'subscriptions': 'subscriptions'
        }

        self._subscriptions = subscriptions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchUpdateSubscriptionsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchUpdateSubscriptionsResponse of this BatchUpdateSubscriptionsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subscriptions(self):
        """Gets the subscriptions of this BatchUpdateSubscriptionsResponse.

        The updated subscriptions list.

        :return: The subscriptions of this BatchUpdateSubscriptionsResponse.
        :rtype: List[Subscription]
        """
        return self._subscriptions

    @subscriptions.setter
    def subscriptions(self, subscriptions):
        """Sets the subscriptions of this BatchUpdateSubscriptionsResponse.

        The updated subscriptions list.

        :param subscriptions: The subscriptions of this BatchUpdateSubscriptionsResponse.
        :type subscriptions: List[Subscription]
        """

        self._subscriptions = subscriptions
