# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.subscription_deferral_info import SubscriptionDeferralInfo
from openapi_server import util


class SubscriptionPurchasesDeferRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deferral_info: SubscriptionDeferralInfo=None):
        """SubscriptionPurchasesDeferRequest - a model defined in OpenAPI

        :param deferral_info: The deferral_info of this SubscriptionPurchasesDeferRequest.
        """
        self.openapi_types = {
            'deferral_info': SubscriptionDeferralInfo
        }

        self.attribute_map = {
            'deferral_info': 'deferralInfo'
        }

        self._deferral_info = deferral_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionPurchasesDeferRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionPurchasesDeferRequest of this SubscriptionPurchasesDeferRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deferral_info(self):
        """Gets the deferral_info of this SubscriptionPurchasesDeferRequest.


        :return: The deferral_info of this SubscriptionPurchasesDeferRequest.
        :rtype: SubscriptionDeferralInfo
        """
        return self._deferral_info

    @deferral_info.setter
    def deferral_info(self, deferral_info):
        """Sets the deferral_info of this SubscriptionPurchasesDeferRequest.


        :param deferral_info: The deferral_info of this SubscriptionPurchasesDeferRequest.
        :type deferral_info: SubscriptionDeferralInfo
        """

        self._deferral_info = deferral_info
