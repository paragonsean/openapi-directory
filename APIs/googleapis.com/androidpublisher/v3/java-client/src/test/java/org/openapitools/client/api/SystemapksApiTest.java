/*
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SystemApksListResponse;
import org.openapitools.client.model.Variant;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SystemapksApi
 */
@Disabled
public class SystemapksApiTest {

    private final SystemapksApi api = new SystemapksApi();

    /**
     * Creates an APK which is suitable for inclusion in a system image from an already uploaded Android App Bundle.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherSystemapksVariantsCreateTest() throws ApiException {
        String packageName = null;
        String versionCode = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Variant variant = null;
        Variant response = api.androidpublisherSystemapksVariantsCreate(packageName, versionCode, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, variant);
        // TODO: test validations
    }

    /**
     * Downloads a previously created system APK which is suitable for inclusion in a system image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherSystemapksVariantsDownloadTest() throws ApiException {
        String packageName = null;
        String versionCode = null;
        Integer variantId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        api.androidpublisherSystemapksVariantsDownload(packageName, versionCode, variantId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Returns a previously created system APK variant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherSystemapksVariantsGetTest() throws ApiException {
        String packageName = null;
        String versionCode = null;
        Integer variantId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Variant response = api.androidpublisherSystemapksVariantsGet(packageName, versionCode, variantId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Returns the list of previously created system APK variants.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherSystemapksVariantsListTest() throws ApiException {
        String packageName = null;
        String versionCode = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SystemApksListResponse response = api.androidpublisherSystemapksVariantsList(packageName, versionCode, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

}
