/*
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InAppProduct;
import org.openapitools.client.model.InappproductsBatchDeleteRequest;
import org.openapitools.client.model.InappproductsBatchGetResponse;
import org.openapitools.client.model.InappproductsBatchUpdateRequest;
import org.openapitools.client.model.InappproductsBatchUpdateResponse;
import org.openapitools.client.model.InappproductsListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InappproductsApi
 */
@Disabled
public class InappproductsApiTest {

    private final InappproductsApi api = new InappproductsApi();

    /**
     * Deletes in-app products (managed products or subscriptions). Set the latencyTolerance field on nested requests to PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT to achieve maximum update throughput. This method should not be used to delete subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsBatchDeleteTest() throws ApiException {
        String packageName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        InappproductsBatchDeleteRequest inappproductsBatchDeleteRequest = null;
        api.androidpublisherInappproductsBatchDelete(packageName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, inappproductsBatchDeleteRequest);
        // TODO: test validations
    }

    /**
     * Reads multiple in-app products, which can be managed products or subscriptions. This method should not be used to retrieve subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsBatchGetTest() throws ApiException {
        String packageName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        List<String> sku = null;
        InappproductsBatchGetResponse response = api.androidpublisherInappproductsBatchGet(packageName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, sku);
        // TODO: test validations
    }

    /**
     * Updates or inserts one or more in-app products (managed products or subscriptions). Set the latencyTolerance field on nested requests to PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT to achieve maximum update throughput. This method should no longer be used to update subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsBatchUpdateTest() throws ApiException {
        String packageName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        InappproductsBatchUpdateRequest inappproductsBatchUpdateRequest = null;
        InappproductsBatchUpdateResponse response = api.androidpublisherInappproductsBatchUpdate(packageName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, inappproductsBatchUpdateRequest);
        // TODO: test validations
    }

    /**
     * Deletes an in-app product (a managed product or a subscription). This method should no longer be used to delete subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsDeleteTest() throws ApiException {
        String packageName = null;
        String sku = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String latencyTolerance = null;
        api.androidpublisherInappproductsDelete(packageName, sku, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, latencyTolerance);
        // TODO: test validations
    }

    /**
     * Gets an in-app product, which can be a managed product or a subscription. This method should no longer be used to retrieve subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsGetTest() throws ApiException {
        String packageName = null;
        String sku = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        InAppProduct response = api.androidpublisherInappproductsGet(packageName, sku, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Creates an in-app product (a managed product or a subscription). This method should no longer be used to create subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsInsertTest() throws ApiException {
        String packageName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean autoConvertMissingPrices = null;
        InAppProduct inAppProduct = null;
        InAppProduct response = api.androidpublisherInappproductsInsert(packageName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, autoConvertMissingPrices, inAppProduct);
        // TODO: test validations
    }

    /**
     * Lists all in-app products - both managed products and subscriptions. If an app has a large number of in-app products, the response may be paginated. In this case the response field &#x60;tokenPagination.nextPageToken&#x60; will be set and the caller should provide its value as a &#x60;token&#x60; request parameter to retrieve the next page. This method should no longer be used to retrieve subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsListTest() throws ApiException {
        String packageName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer maxResults = null;
        Integer startIndex = null;
        String token = null;
        InappproductsListResponse response = api.androidpublisherInappproductsList(packageName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, maxResults, startIndex, token);
        // TODO: test validations
    }

    /**
     * Patches an in-app product (a managed product or a subscription). This method should no longer be used to update subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsPatchTest() throws ApiException {
        String packageName = null;
        String sku = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean autoConvertMissingPrices = null;
        String latencyTolerance = null;
        InAppProduct inAppProduct = null;
        InAppProduct response = api.androidpublisherInappproductsPatch(packageName, sku, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, autoConvertMissingPrices, latencyTolerance, inAppProduct);
        // TODO: test validations
    }

    /**
     * Updates an in-app product (a managed product or a subscription). This method should no longer be used to update subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsUpdateTest() throws ApiException {
        String packageName = null;
        String sku = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean allowMissing = null;
        Boolean autoConvertMissingPrices = null;
        String latencyTolerance = null;
        InAppProduct inAppProduct = null;
        InAppProduct response = api.androidpublisherInappproductsUpdate(packageName, sku, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, allowMissing, autoConvertMissingPrices, latencyTolerance, inAppProduct);
        // TODO: test validations
    }

}
