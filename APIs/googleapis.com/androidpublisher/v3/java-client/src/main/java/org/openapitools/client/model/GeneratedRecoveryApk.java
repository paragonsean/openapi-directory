/*
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Download metadata for an app recovery module.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:32.125268-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GeneratedRecoveryApk {
  public static final String SERIALIZED_NAME_DOWNLOAD_ID = "downloadId";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_ID)
  private String downloadId;

  public static final String SERIALIZED_NAME_MODULE_NAME = "moduleName";
  @SerializedName(SERIALIZED_NAME_MODULE_NAME)
  private String moduleName;

  public static final String SERIALIZED_NAME_RECOVERY_ID = "recoveryId";
  @SerializedName(SERIALIZED_NAME_RECOVERY_ID)
  private String recoveryId;

  /**
   * The status of the recovery action corresponding to the recovery apk.
   */
  @JsonAdapter(RecoveryStatusEnum.Adapter.class)
  public enum RecoveryStatusEnum {
    UNSPECIFIED("RECOVERY_STATUS_UNSPECIFIED"),
    
    ACTIVE("RECOVERY_STATUS_ACTIVE"),
    
    CANCELED("RECOVERY_STATUS_CANCELED"),
    
    DRAFT("RECOVERY_STATUS_DRAFT"),
    
    GENERATION_IN_PROGRESS("RECOVERY_STATUS_GENERATION_IN_PROGRESS"),
    
    GENERATION_FAILED("RECOVERY_STATUS_GENERATION_FAILED");

    private String value;

    RecoveryStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RecoveryStatusEnum fromValue(String value) {
      for (RecoveryStatusEnum b : RecoveryStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RecoveryStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RecoveryStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RecoveryStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RecoveryStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RecoveryStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RECOVERY_STATUS = "recoveryStatus";
  @SerializedName(SERIALIZED_NAME_RECOVERY_STATUS)
  private RecoveryStatusEnum recoveryStatus;

  public GeneratedRecoveryApk() {
  }

  public GeneratedRecoveryApk downloadId(String downloadId) {
    this.downloadId = downloadId;
    return this;
  }

  /**
   * Download ID, which uniquely identifies the APK to download. Should be supplied to &#x60;generatedapks.download&#x60; method.
   * @return downloadId
   */
  @javax.annotation.Nullable
  public String getDownloadId() {
    return downloadId;
  }

  public void setDownloadId(String downloadId) {
    this.downloadId = downloadId;
  }


  public GeneratedRecoveryApk moduleName(String moduleName) {
    this.moduleName = moduleName;
    return this;
  }

  /**
   * Name of the module which recovery apk belongs to.
   * @return moduleName
   */
  @javax.annotation.Nullable
  public String getModuleName() {
    return moduleName;
  }

  public void setModuleName(String moduleName) {
    this.moduleName = moduleName;
  }


  public GeneratedRecoveryApk recoveryId(String recoveryId) {
    this.recoveryId = recoveryId;
    return this;
  }

  /**
   * ID of the recovery action.
   * @return recoveryId
   */
  @javax.annotation.Nullable
  public String getRecoveryId() {
    return recoveryId;
  }

  public void setRecoveryId(String recoveryId) {
    this.recoveryId = recoveryId;
  }


  public GeneratedRecoveryApk recoveryStatus(RecoveryStatusEnum recoveryStatus) {
    this.recoveryStatus = recoveryStatus;
    return this;
  }

  /**
   * The status of the recovery action corresponding to the recovery apk.
   * @return recoveryStatus
   */
  @javax.annotation.Nullable
  public RecoveryStatusEnum getRecoveryStatus() {
    return recoveryStatus;
  }

  public void setRecoveryStatus(RecoveryStatusEnum recoveryStatus) {
    this.recoveryStatus = recoveryStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeneratedRecoveryApk generatedRecoveryApk = (GeneratedRecoveryApk) o;
    return Objects.equals(this.downloadId, generatedRecoveryApk.downloadId) &&
        Objects.equals(this.moduleName, generatedRecoveryApk.moduleName) &&
        Objects.equals(this.recoveryId, generatedRecoveryApk.recoveryId) &&
        Objects.equals(this.recoveryStatus, generatedRecoveryApk.recoveryStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(downloadId, moduleName, recoveryId, recoveryStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeneratedRecoveryApk {\n");
    sb.append("    downloadId: ").append(toIndentedString(downloadId)).append("\n");
    sb.append("    moduleName: ").append(toIndentedString(moduleName)).append("\n");
    sb.append("    recoveryId: ").append(toIndentedString(recoveryId)).append("\n");
    sb.append("    recoveryStatus: ").append(toIndentedString(recoveryStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("downloadId");
    openapiFields.add("moduleName");
    openapiFields.add("recoveryId");
    openapiFields.add("recoveryStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GeneratedRecoveryApk
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GeneratedRecoveryApk.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GeneratedRecoveryApk is not found in the empty JSON string", GeneratedRecoveryApk.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GeneratedRecoveryApk.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GeneratedRecoveryApk` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("downloadId") != null && !jsonObj.get("downloadId").isJsonNull()) && !jsonObj.get("downloadId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `downloadId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("downloadId").toString()));
      }
      if ((jsonObj.get("moduleName") != null && !jsonObj.get("moduleName").isJsonNull()) && !jsonObj.get("moduleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `moduleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("moduleName").toString()));
      }
      if ((jsonObj.get("recoveryId") != null && !jsonObj.get("recoveryId").isJsonNull()) && !jsonObj.get("recoveryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryId").toString()));
      }
      if ((jsonObj.get("recoveryStatus") != null && !jsonObj.get("recoveryStatus").isJsonNull()) && !jsonObj.get("recoveryStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryStatus").toString()));
      }
      // validate the optional field `recoveryStatus`
      if (jsonObj.get("recoveryStatus") != null && !jsonObj.get("recoveryStatus").isJsonNull()) {
        RecoveryStatusEnum.validateJsonElement(jsonObj.get("recoveryStatus"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GeneratedRecoveryApk.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GeneratedRecoveryApk' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GeneratedRecoveryApk> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GeneratedRecoveryApk.class));

       return (TypeAdapter<T>) new TypeAdapter<GeneratedRecoveryApk>() {
           @Override
           public void write(JsonWriter out, GeneratedRecoveryApk value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GeneratedRecoveryApk read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GeneratedRecoveryApk given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GeneratedRecoveryApk
   * @throws IOException if the JSON string is invalid with respect to GeneratedRecoveryApk
   */
  public static GeneratedRecoveryApk fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GeneratedRecoveryApk.class);
  }

  /**
   * Convert an instance of GeneratedRecoveryApk to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

