/*
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A ProductPurchase resource indicates the status of a user&#39;s inapp product purchase.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:32.125268-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProductPurchase {
  public static final String SERIALIZED_NAME_ACKNOWLEDGEMENT_STATE = "acknowledgementState";
  @SerializedName(SERIALIZED_NAME_ACKNOWLEDGEMENT_STATE)
  private Integer acknowledgementState;

  public static final String SERIALIZED_NAME_CONSUMPTION_STATE = "consumptionState";
  @SerializedName(SERIALIZED_NAME_CONSUMPTION_STATE)
  private Integer consumptionState;

  public static final String SERIALIZED_NAME_DEVELOPER_PAYLOAD = "developerPayload";
  @SerializedName(SERIALIZED_NAME_DEVELOPER_PAYLOAD)
  private String developerPayload;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_OBFUSCATED_EXTERNAL_ACCOUNT_ID = "obfuscatedExternalAccountId";
  @SerializedName(SERIALIZED_NAME_OBFUSCATED_EXTERNAL_ACCOUNT_ID)
  private String obfuscatedExternalAccountId;

  public static final String SERIALIZED_NAME_OBFUSCATED_EXTERNAL_PROFILE_ID = "obfuscatedExternalProfileId";
  @SerializedName(SERIALIZED_NAME_OBFUSCATED_EXTERNAL_PROFILE_ID)
  private String obfuscatedExternalProfileId;

  public static final String SERIALIZED_NAME_ORDER_ID = "orderId";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "productId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_PURCHASE_STATE = "purchaseState";
  @SerializedName(SERIALIZED_NAME_PURCHASE_STATE)
  private Integer purchaseState;

  public static final String SERIALIZED_NAME_PURCHASE_TIME_MILLIS = "purchaseTimeMillis";
  @SerializedName(SERIALIZED_NAME_PURCHASE_TIME_MILLIS)
  private String purchaseTimeMillis;

  public static final String SERIALIZED_NAME_PURCHASE_TOKEN = "purchaseToken";
  @SerializedName(SERIALIZED_NAME_PURCHASE_TOKEN)
  private String purchaseToken;

  public static final String SERIALIZED_NAME_PURCHASE_TYPE = "purchaseType";
  @SerializedName(SERIALIZED_NAME_PURCHASE_TYPE)
  private Integer purchaseType;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_REGION_CODE = "regionCode";
  @SerializedName(SERIALIZED_NAME_REGION_CODE)
  private String regionCode;

  public ProductPurchase() {
  }

  public ProductPurchase acknowledgementState(Integer acknowledgementState) {
    this.acknowledgementState = acknowledgementState;
    return this;
  }

  /**
   * The acknowledgement state of the inapp product. Possible values are: 0. Yet to be acknowledged 1. Acknowledged
   * @return acknowledgementState
   */
  @javax.annotation.Nullable
  public Integer getAcknowledgementState() {
    return acknowledgementState;
  }

  public void setAcknowledgementState(Integer acknowledgementState) {
    this.acknowledgementState = acknowledgementState;
  }


  public ProductPurchase consumptionState(Integer consumptionState) {
    this.consumptionState = consumptionState;
    return this;
  }

  /**
   * The consumption state of the inapp product. Possible values are: 0. Yet to be consumed 1. Consumed
   * @return consumptionState
   */
  @javax.annotation.Nullable
  public Integer getConsumptionState() {
    return consumptionState;
  }

  public void setConsumptionState(Integer consumptionState) {
    this.consumptionState = consumptionState;
  }


  public ProductPurchase developerPayload(String developerPayload) {
    this.developerPayload = developerPayload;
    return this;
  }

  /**
   * A developer-specified string that contains supplemental information about an order.
   * @return developerPayload
   */
  @javax.annotation.Nullable
  public String getDeveloperPayload() {
    return developerPayload;
  }

  public void setDeveloperPayload(String developerPayload) {
    this.developerPayload = developerPayload;
  }


  public ProductPurchase kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * This kind represents an inappPurchase object in the androidpublisher service.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public ProductPurchase obfuscatedExternalAccountId(String obfuscatedExternalAccountId) {
    this.obfuscatedExternalAccountId = obfuscatedExternalAccountId;
    return this;
  }

  /**
   * An obfuscated version of the id that is uniquely associated with the user&#39;s account in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made.
   * @return obfuscatedExternalAccountId
   */
  @javax.annotation.Nullable
  public String getObfuscatedExternalAccountId() {
    return obfuscatedExternalAccountId;
  }

  public void setObfuscatedExternalAccountId(String obfuscatedExternalAccountId) {
    this.obfuscatedExternalAccountId = obfuscatedExternalAccountId;
  }


  public ProductPurchase obfuscatedExternalProfileId(String obfuscatedExternalProfileId) {
    this.obfuscatedExternalProfileId = obfuscatedExternalProfileId;
    return this;
  }

  /**
   * An obfuscated version of the id that is uniquely associated with the user&#39;s profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made.
   * @return obfuscatedExternalProfileId
   */
  @javax.annotation.Nullable
  public String getObfuscatedExternalProfileId() {
    return obfuscatedExternalProfileId;
  }

  public void setObfuscatedExternalProfileId(String obfuscatedExternalProfileId) {
    this.obfuscatedExternalProfileId = obfuscatedExternalProfileId;
  }


  public ProductPurchase orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * The order id associated with the purchase of the inapp product.
   * @return orderId
   */
  @javax.annotation.Nullable
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public ProductPurchase productId(String productId) {
    this.productId = productId;
    return this;
  }

  /**
   * The inapp product SKU. May not be present.
   * @return productId
   */
  @javax.annotation.Nullable
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }


  public ProductPurchase purchaseState(Integer purchaseState) {
    this.purchaseState = purchaseState;
    return this;
  }

  /**
   * The purchase state of the order. Possible values are: 0. Purchased 1. Canceled 2. Pending
   * @return purchaseState
   */
  @javax.annotation.Nullable
  public Integer getPurchaseState() {
    return purchaseState;
  }

  public void setPurchaseState(Integer purchaseState) {
    this.purchaseState = purchaseState;
  }


  public ProductPurchase purchaseTimeMillis(String purchaseTimeMillis) {
    this.purchaseTimeMillis = purchaseTimeMillis;
    return this;
  }

  /**
   * The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970).
   * @return purchaseTimeMillis
   */
  @javax.annotation.Nullable
  public String getPurchaseTimeMillis() {
    return purchaseTimeMillis;
  }

  public void setPurchaseTimeMillis(String purchaseTimeMillis) {
    this.purchaseTimeMillis = purchaseTimeMillis;
  }


  public ProductPurchase purchaseToken(String purchaseToken) {
    this.purchaseToken = purchaseToken;
    return this;
  }

  /**
   * The purchase token generated to identify this purchase. May not be present.
   * @return purchaseToken
   */
  @javax.annotation.Nullable
  public String getPurchaseToken() {
    return purchaseToken;
  }

  public void setPurchaseToken(String purchaseToken) {
    this.purchaseToken = purchaseToken;
  }


  public ProductPurchase purchaseType(Integer purchaseType) {
    this.purchaseType = purchaseType;
    return this;
  }

  /**
   * The type of purchase of the inapp product. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are: 0. Test (i.e. purchased from a license testing account) 1. Promo (i.e. purchased using a promo code) 2. Rewarded (i.e. from watching a video ad instead of paying)
   * @return purchaseType
   */
  @javax.annotation.Nullable
  public Integer getPurchaseType() {
    return purchaseType;
  }

  public void setPurchaseType(Integer purchaseType) {
    this.purchaseType = purchaseType;
  }


  public ProductPurchase quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * The quantity associated with the purchase of the inapp product. If not present, the quantity is 1.
   * @return quantity
   */
  @javax.annotation.Nullable
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public ProductPurchase regionCode(String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  /**
   * ISO 3166-1 alpha-2 billing region code of the user at the time the product was granted.
   * @return regionCode
   */
  @javax.annotation.Nullable
  public String getRegionCode() {
    return regionCode;
  }

  public void setRegionCode(String regionCode) {
    this.regionCode = regionCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductPurchase productPurchase = (ProductPurchase) o;
    return Objects.equals(this.acknowledgementState, productPurchase.acknowledgementState) &&
        Objects.equals(this.consumptionState, productPurchase.consumptionState) &&
        Objects.equals(this.developerPayload, productPurchase.developerPayload) &&
        Objects.equals(this.kind, productPurchase.kind) &&
        Objects.equals(this.obfuscatedExternalAccountId, productPurchase.obfuscatedExternalAccountId) &&
        Objects.equals(this.obfuscatedExternalProfileId, productPurchase.obfuscatedExternalProfileId) &&
        Objects.equals(this.orderId, productPurchase.orderId) &&
        Objects.equals(this.productId, productPurchase.productId) &&
        Objects.equals(this.purchaseState, productPurchase.purchaseState) &&
        Objects.equals(this.purchaseTimeMillis, productPurchase.purchaseTimeMillis) &&
        Objects.equals(this.purchaseToken, productPurchase.purchaseToken) &&
        Objects.equals(this.purchaseType, productPurchase.purchaseType) &&
        Objects.equals(this.quantity, productPurchase.quantity) &&
        Objects.equals(this.regionCode, productPurchase.regionCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acknowledgementState, consumptionState, developerPayload, kind, obfuscatedExternalAccountId, obfuscatedExternalProfileId, orderId, productId, purchaseState, purchaseTimeMillis, purchaseToken, purchaseType, quantity, regionCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductPurchase {\n");
    sb.append("    acknowledgementState: ").append(toIndentedString(acknowledgementState)).append("\n");
    sb.append("    consumptionState: ").append(toIndentedString(consumptionState)).append("\n");
    sb.append("    developerPayload: ").append(toIndentedString(developerPayload)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    obfuscatedExternalAccountId: ").append(toIndentedString(obfuscatedExternalAccountId)).append("\n");
    sb.append("    obfuscatedExternalProfileId: ").append(toIndentedString(obfuscatedExternalProfileId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    purchaseState: ").append(toIndentedString(purchaseState)).append("\n");
    sb.append("    purchaseTimeMillis: ").append(toIndentedString(purchaseTimeMillis)).append("\n");
    sb.append("    purchaseToken: ").append(toIndentedString(purchaseToken)).append("\n");
    sb.append("    purchaseType: ").append(toIndentedString(purchaseType)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    regionCode: ").append(toIndentedString(regionCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("acknowledgementState");
    openapiFields.add("consumptionState");
    openapiFields.add("developerPayload");
    openapiFields.add("kind");
    openapiFields.add("obfuscatedExternalAccountId");
    openapiFields.add("obfuscatedExternalProfileId");
    openapiFields.add("orderId");
    openapiFields.add("productId");
    openapiFields.add("purchaseState");
    openapiFields.add("purchaseTimeMillis");
    openapiFields.add("purchaseToken");
    openapiFields.add("purchaseType");
    openapiFields.add("quantity");
    openapiFields.add("regionCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductPurchase
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductPurchase.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductPurchase is not found in the empty JSON string", ProductPurchase.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductPurchase.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductPurchase` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("developerPayload") != null && !jsonObj.get("developerPayload").isJsonNull()) && !jsonObj.get("developerPayload").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `developerPayload` to be a primitive type in the JSON string but got `%s`", jsonObj.get("developerPayload").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      if ((jsonObj.get("obfuscatedExternalAccountId") != null && !jsonObj.get("obfuscatedExternalAccountId").isJsonNull()) && !jsonObj.get("obfuscatedExternalAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `obfuscatedExternalAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("obfuscatedExternalAccountId").toString()));
      }
      if ((jsonObj.get("obfuscatedExternalProfileId") != null && !jsonObj.get("obfuscatedExternalProfileId").isJsonNull()) && !jsonObj.get("obfuscatedExternalProfileId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `obfuscatedExternalProfileId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("obfuscatedExternalProfileId").toString()));
      }
      if ((jsonObj.get("orderId") != null && !jsonObj.get("orderId").isJsonNull()) && !jsonObj.get("orderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderId").toString()));
      }
      if ((jsonObj.get("productId") != null && !jsonObj.get("productId").isJsonNull()) && !jsonObj.get("productId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productId").toString()));
      }
      if ((jsonObj.get("purchaseTimeMillis") != null && !jsonObj.get("purchaseTimeMillis").isJsonNull()) && !jsonObj.get("purchaseTimeMillis").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchaseTimeMillis` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchaseTimeMillis").toString()));
      }
      if ((jsonObj.get("purchaseToken") != null && !jsonObj.get("purchaseToken").isJsonNull()) && !jsonObj.get("purchaseToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchaseToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchaseToken").toString()));
      }
      if ((jsonObj.get("regionCode") != null && !jsonObj.get("regionCode").isJsonNull()) && !jsonObj.get("regionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `regionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("regionCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductPurchase.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductPurchase' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductPurchase> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductPurchase.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductPurchase>() {
           @Override
           public void write(JsonWriter out, ProductPurchase value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductPurchase read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductPurchase given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductPurchase
   * @throws IOException if the JSON string is invalid with respect to ProductPurchase
   */
  public static ProductPurchase fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductPurchase.class);
  }

  /**
   * Convert an instance of ProductPurchase to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

