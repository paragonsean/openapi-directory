/*
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GeneratedAssetPackSlice;
import org.openapitools.client.model.GeneratedRecoveryApk;
import org.openapitools.client.model.GeneratedSplitApk;
import org.openapitools.client.model.GeneratedStandaloneApk;
import org.openapitools.client.model.GeneratedUniversalApk;
import org.openapitools.client.model.TargetingInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Download metadata for split, standalone and universal APKs, as well as asset pack slices, signed with a given key.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:32.125268-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GeneratedApksPerSigningKey {
  public static final String SERIALIZED_NAME_CERTIFICATE_SHA256_HASH = "certificateSha256Hash";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_SHA256_HASH)
  private String certificateSha256Hash;

  public static final String SERIALIZED_NAME_GENERATED_ASSET_PACK_SLICES = "generatedAssetPackSlices";
  @SerializedName(SERIALIZED_NAME_GENERATED_ASSET_PACK_SLICES)
  private List<GeneratedAssetPackSlice> generatedAssetPackSlices = new ArrayList<>();

  public static final String SERIALIZED_NAME_GENERATED_RECOVERY_MODULES = "generatedRecoveryModules";
  @SerializedName(SERIALIZED_NAME_GENERATED_RECOVERY_MODULES)
  private List<GeneratedRecoveryApk> generatedRecoveryModules = new ArrayList<>();

  public static final String SERIALIZED_NAME_GENERATED_SPLIT_APKS = "generatedSplitApks";
  @SerializedName(SERIALIZED_NAME_GENERATED_SPLIT_APKS)
  private List<GeneratedSplitApk> generatedSplitApks = new ArrayList<>();

  public static final String SERIALIZED_NAME_GENERATED_STANDALONE_APKS = "generatedStandaloneApks";
  @SerializedName(SERIALIZED_NAME_GENERATED_STANDALONE_APKS)
  private List<GeneratedStandaloneApk> generatedStandaloneApks = new ArrayList<>();

  public static final String SERIALIZED_NAME_GENERATED_UNIVERSAL_APK = "generatedUniversalApk";
  @SerializedName(SERIALIZED_NAME_GENERATED_UNIVERSAL_APK)
  private GeneratedUniversalApk generatedUniversalApk;

  public static final String SERIALIZED_NAME_TARGETING_INFO = "targetingInfo";
  @SerializedName(SERIALIZED_NAME_TARGETING_INFO)
  private TargetingInfo targetingInfo;

  public GeneratedApksPerSigningKey() {
  }

  public GeneratedApksPerSigningKey certificateSha256Hash(String certificateSha256Hash) {
    this.certificateSha256Hash = certificateSha256Hash;
    return this;
  }

  /**
   * SHA256 hash of the APK signing public key certificate.
   * @return certificateSha256Hash
   */
  @javax.annotation.Nullable
  public String getCertificateSha256Hash() {
    return certificateSha256Hash;
  }

  public void setCertificateSha256Hash(String certificateSha256Hash) {
    this.certificateSha256Hash = certificateSha256Hash;
  }


  public GeneratedApksPerSigningKey generatedAssetPackSlices(List<GeneratedAssetPackSlice> generatedAssetPackSlices) {
    this.generatedAssetPackSlices = generatedAssetPackSlices;
    return this;
  }

  public GeneratedApksPerSigningKey addGeneratedAssetPackSlicesItem(GeneratedAssetPackSlice generatedAssetPackSlicesItem) {
    if (this.generatedAssetPackSlices == null) {
      this.generatedAssetPackSlices = new ArrayList<>();
    }
    this.generatedAssetPackSlices.add(generatedAssetPackSlicesItem);
    return this;
  }

  /**
   * List of asset pack slices which will be served for this app bundle, signed with a key corresponding to certificate_sha256_hash.
   * @return generatedAssetPackSlices
   */
  @javax.annotation.Nullable
  public List<GeneratedAssetPackSlice> getGeneratedAssetPackSlices() {
    return generatedAssetPackSlices;
  }

  public void setGeneratedAssetPackSlices(List<GeneratedAssetPackSlice> generatedAssetPackSlices) {
    this.generatedAssetPackSlices = generatedAssetPackSlices;
  }


  public GeneratedApksPerSigningKey generatedRecoveryModules(List<GeneratedRecoveryApk> generatedRecoveryModules) {
    this.generatedRecoveryModules = generatedRecoveryModules;
    return this;
  }

  public GeneratedApksPerSigningKey addGeneratedRecoveryModulesItem(GeneratedRecoveryApk generatedRecoveryModulesItem) {
    if (this.generatedRecoveryModules == null) {
      this.generatedRecoveryModules = new ArrayList<>();
    }
    this.generatedRecoveryModules.add(generatedRecoveryModulesItem);
    return this;
  }

  /**
   * Generated recovery apks for recovery actions signed with a key corresponding to certificate_sha256_hash. This includes all generated recovery APKs, also those in draft or cancelled state. This field is not set if no recovery actions were created for this signing key.
   * @return generatedRecoveryModules
   */
  @javax.annotation.Nullable
  public List<GeneratedRecoveryApk> getGeneratedRecoveryModules() {
    return generatedRecoveryModules;
  }

  public void setGeneratedRecoveryModules(List<GeneratedRecoveryApk> generatedRecoveryModules) {
    this.generatedRecoveryModules = generatedRecoveryModules;
  }


  public GeneratedApksPerSigningKey generatedSplitApks(List<GeneratedSplitApk> generatedSplitApks) {
    this.generatedSplitApks = generatedSplitApks;
    return this;
  }

  public GeneratedApksPerSigningKey addGeneratedSplitApksItem(GeneratedSplitApk generatedSplitApksItem) {
    if (this.generatedSplitApks == null) {
      this.generatedSplitApks = new ArrayList<>();
    }
    this.generatedSplitApks.add(generatedSplitApksItem);
    return this;
  }

  /**
   * List of generated split APKs, signed with a key corresponding to certificate_sha256_hash.
   * @return generatedSplitApks
   */
  @javax.annotation.Nullable
  public List<GeneratedSplitApk> getGeneratedSplitApks() {
    return generatedSplitApks;
  }

  public void setGeneratedSplitApks(List<GeneratedSplitApk> generatedSplitApks) {
    this.generatedSplitApks = generatedSplitApks;
  }


  public GeneratedApksPerSigningKey generatedStandaloneApks(List<GeneratedStandaloneApk> generatedStandaloneApks) {
    this.generatedStandaloneApks = generatedStandaloneApks;
    return this;
  }

  public GeneratedApksPerSigningKey addGeneratedStandaloneApksItem(GeneratedStandaloneApk generatedStandaloneApksItem) {
    if (this.generatedStandaloneApks == null) {
      this.generatedStandaloneApks = new ArrayList<>();
    }
    this.generatedStandaloneApks.add(generatedStandaloneApksItem);
    return this;
  }

  /**
   * List of generated standalone APKs, signed with a key corresponding to certificate_sha256_hash.
   * @return generatedStandaloneApks
   */
  @javax.annotation.Nullable
  public List<GeneratedStandaloneApk> getGeneratedStandaloneApks() {
    return generatedStandaloneApks;
  }

  public void setGeneratedStandaloneApks(List<GeneratedStandaloneApk> generatedStandaloneApks) {
    this.generatedStandaloneApks = generatedStandaloneApks;
  }


  public GeneratedApksPerSigningKey generatedUniversalApk(GeneratedUniversalApk generatedUniversalApk) {
    this.generatedUniversalApk = generatedUniversalApk;
    return this;
  }

  /**
   * Get generatedUniversalApk
   * @return generatedUniversalApk
   */
  @javax.annotation.Nullable
  public GeneratedUniversalApk getGeneratedUniversalApk() {
    return generatedUniversalApk;
  }

  public void setGeneratedUniversalApk(GeneratedUniversalApk generatedUniversalApk) {
    this.generatedUniversalApk = generatedUniversalApk;
  }


  public GeneratedApksPerSigningKey targetingInfo(TargetingInfo targetingInfo) {
    this.targetingInfo = targetingInfo;
    return this;
  }

  /**
   * Get targetingInfo
   * @return targetingInfo
   */
  @javax.annotation.Nullable
  public TargetingInfo getTargetingInfo() {
    return targetingInfo;
  }

  public void setTargetingInfo(TargetingInfo targetingInfo) {
    this.targetingInfo = targetingInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeneratedApksPerSigningKey generatedApksPerSigningKey = (GeneratedApksPerSigningKey) o;
    return Objects.equals(this.certificateSha256Hash, generatedApksPerSigningKey.certificateSha256Hash) &&
        Objects.equals(this.generatedAssetPackSlices, generatedApksPerSigningKey.generatedAssetPackSlices) &&
        Objects.equals(this.generatedRecoveryModules, generatedApksPerSigningKey.generatedRecoveryModules) &&
        Objects.equals(this.generatedSplitApks, generatedApksPerSigningKey.generatedSplitApks) &&
        Objects.equals(this.generatedStandaloneApks, generatedApksPerSigningKey.generatedStandaloneApks) &&
        Objects.equals(this.generatedUniversalApk, generatedApksPerSigningKey.generatedUniversalApk) &&
        Objects.equals(this.targetingInfo, generatedApksPerSigningKey.targetingInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificateSha256Hash, generatedAssetPackSlices, generatedRecoveryModules, generatedSplitApks, generatedStandaloneApks, generatedUniversalApk, targetingInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeneratedApksPerSigningKey {\n");
    sb.append("    certificateSha256Hash: ").append(toIndentedString(certificateSha256Hash)).append("\n");
    sb.append("    generatedAssetPackSlices: ").append(toIndentedString(generatedAssetPackSlices)).append("\n");
    sb.append("    generatedRecoveryModules: ").append(toIndentedString(generatedRecoveryModules)).append("\n");
    sb.append("    generatedSplitApks: ").append(toIndentedString(generatedSplitApks)).append("\n");
    sb.append("    generatedStandaloneApks: ").append(toIndentedString(generatedStandaloneApks)).append("\n");
    sb.append("    generatedUniversalApk: ").append(toIndentedString(generatedUniversalApk)).append("\n");
    sb.append("    targetingInfo: ").append(toIndentedString(targetingInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("certificateSha256Hash");
    openapiFields.add("generatedAssetPackSlices");
    openapiFields.add("generatedRecoveryModules");
    openapiFields.add("generatedSplitApks");
    openapiFields.add("generatedStandaloneApks");
    openapiFields.add("generatedUniversalApk");
    openapiFields.add("targetingInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GeneratedApksPerSigningKey
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GeneratedApksPerSigningKey.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GeneratedApksPerSigningKey is not found in the empty JSON string", GeneratedApksPerSigningKey.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GeneratedApksPerSigningKey.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GeneratedApksPerSigningKey` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("certificateSha256Hash") != null && !jsonObj.get("certificateSha256Hash").isJsonNull()) && !jsonObj.get("certificateSha256Hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateSha256Hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateSha256Hash").toString()));
      }
      if (jsonObj.get("generatedAssetPackSlices") != null && !jsonObj.get("generatedAssetPackSlices").isJsonNull()) {
        JsonArray jsonArraygeneratedAssetPackSlices = jsonObj.getAsJsonArray("generatedAssetPackSlices");
        if (jsonArraygeneratedAssetPackSlices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("generatedAssetPackSlices").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `generatedAssetPackSlices` to be an array in the JSON string but got `%s`", jsonObj.get("generatedAssetPackSlices").toString()));
          }

          // validate the optional field `generatedAssetPackSlices` (array)
          for (int i = 0; i < jsonArraygeneratedAssetPackSlices.size(); i++) {
            GeneratedAssetPackSlice.validateJsonElement(jsonArraygeneratedAssetPackSlices.get(i));
          };
        }
      }
      if (jsonObj.get("generatedRecoveryModules") != null && !jsonObj.get("generatedRecoveryModules").isJsonNull()) {
        JsonArray jsonArraygeneratedRecoveryModules = jsonObj.getAsJsonArray("generatedRecoveryModules");
        if (jsonArraygeneratedRecoveryModules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("generatedRecoveryModules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `generatedRecoveryModules` to be an array in the JSON string but got `%s`", jsonObj.get("generatedRecoveryModules").toString()));
          }

          // validate the optional field `generatedRecoveryModules` (array)
          for (int i = 0; i < jsonArraygeneratedRecoveryModules.size(); i++) {
            GeneratedRecoveryApk.validateJsonElement(jsonArraygeneratedRecoveryModules.get(i));
          };
        }
      }
      if (jsonObj.get("generatedSplitApks") != null && !jsonObj.get("generatedSplitApks").isJsonNull()) {
        JsonArray jsonArraygeneratedSplitApks = jsonObj.getAsJsonArray("generatedSplitApks");
        if (jsonArraygeneratedSplitApks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("generatedSplitApks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `generatedSplitApks` to be an array in the JSON string but got `%s`", jsonObj.get("generatedSplitApks").toString()));
          }

          // validate the optional field `generatedSplitApks` (array)
          for (int i = 0; i < jsonArraygeneratedSplitApks.size(); i++) {
            GeneratedSplitApk.validateJsonElement(jsonArraygeneratedSplitApks.get(i));
          };
        }
      }
      if (jsonObj.get("generatedStandaloneApks") != null && !jsonObj.get("generatedStandaloneApks").isJsonNull()) {
        JsonArray jsonArraygeneratedStandaloneApks = jsonObj.getAsJsonArray("generatedStandaloneApks");
        if (jsonArraygeneratedStandaloneApks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("generatedStandaloneApks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `generatedStandaloneApks` to be an array in the JSON string but got `%s`", jsonObj.get("generatedStandaloneApks").toString()));
          }

          // validate the optional field `generatedStandaloneApks` (array)
          for (int i = 0; i < jsonArraygeneratedStandaloneApks.size(); i++) {
            GeneratedStandaloneApk.validateJsonElement(jsonArraygeneratedStandaloneApks.get(i));
          };
        }
      }
      // validate the optional field `generatedUniversalApk`
      if (jsonObj.get("generatedUniversalApk") != null && !jsonObj.get("generatedUniversalApk").isJsonNull()) {
        GeneratedUniversalApk.validateJsonElement(jsonObj.get("generatedUniversalApk"));
      }
      // validate the optional field `targetingInfo`
      if (jsonObj.get("targetingInfo") != null && !jsonObj.get("targetingInfo").isJsonNull()) {
        TargetingInfo.validateJsonElement(jsonObj.get("targetingInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GeneratedApksPerSigningKey.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GeneratedApksPerSigningKey' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GeneratedApksPerSigningKey> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GeneratedApksPerSigningKey.class));

       return (TypeAdapter<T>) new TypeAdapter<GeneratedApksPerSigningKey>() {
           @Override
           public void write(JsonWriter out, GeneratedApksPerSigningKey value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GeneratedApksPerSigningKey read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GeneratedApksPerSigningKey given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GeneratedApksPerSigningKey
   * @throws IOException if the JSON string is invalid with respect to GeneratedApksPerSigningKey
   */
  public static GeneratedApksPerSigningKey fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GeneratedApksPerSigningKey.class);
  }

  /**
   * Convert an instance of GeneratedApksPerSigningKey to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

