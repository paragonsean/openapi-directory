/*
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A VoidedPurchase resource indicates a purchase that was either canceled/refunded/charged-back.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:32.125268-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VoidedPurchase {
  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_ORDER_ID = "orderId";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_PURCHASE_TIME_MILLIS = "purchaseTimeMillis";
  @SerializedName(SERIALIZED_NAME_PURCHASE_TIME_MILLIS)
  private String purchaseTimeMillis;

  public static final String SERIALIZED_NAME_PURCHASE_TOKEN = "purchaseToken";
  @SerializedName(SERIALIZED_NAME_PURCHASE_TOKEN)
  private String purchaseToken;

  public static final String SERIALIZED_NAME_VOIDED_REASON = "voidedReason";
  @SerializedName(SERIALIZED_NAME_VOIDED_REASON)
  private Integer voidedReason;

  public static final String SERIALIZED_NAME_VOIDED_SOURCE = "voidedSource";
  @SerializedName(SERIALIZED_NAME_VOIDED_SOURCE)
  private Integer voidedSource;

  public static final String SERIALIZED_NAME_VOIDED_TIME_MILLIS = "voidedTimeMillis";
  @SerializedName(SERIALIZED_NAME_VOIDED_TIME_MILLIS)
  private String voidedTimeMillis;

  public VoidedPurchase() {
  }

  public VoidedPurchase kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * This kind represents a voided purchase object in the androidpublisher service.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public VoidedPurchase orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * The order id which uniquely identifies a one-time purchase, subscription purchase, or subscription renewal.
   * @return orderId
   */
  @javax.annotation.Nullable
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public VoidedPurchase purchaseTimeMillis(String purchaseTimeMillis) {
    this.purchaseTimeMillis = purchaseTimeMillis;
    return this;
  }

  /**
   * The time at which the purchase was made, in milliseconds since the epoch (Jan 1, 1970).
   * @return purchaseTimeMillis
   */
  @javax.annotation.Nullable
  public String getPurchaseTimeMillis() {
    return purchaseTimeMillis;
  }

  public void setPurchaseTimeMillis(String purchaseTimeMillis) {
    this.purchaseTimeMillis = purchaseTimeMillis;
  }


  public VoidedPurchase purchaseToken(String purchaseToken) {
    this.purchaseToken = purchaseToken;
    return this;
  }

  /**
   * The token which uniquely identifies a one-time purchase or subscription. To uniquely identify subscription renewals use order_id (available starting from version 3 of the API).
   * @return purchaseToken
   */
  @javax.annotation.Nullable
  public String getPurchaseToken() {
    return purchaseToken;
  }

  public void setPurchaseToken(String purchaseToken) {
    this.purchaseToken = purchaseToken;
  }


  public VoidedPurchase voidedReason(Integer voidedReason) {
    this.voidedReason = voidedReason;
    return this;
  }

  /**
   * The reason why the purchase was voided, possible values are: 0. Other 1. Remorse 2. Not_received 3. Defective 4. Accidental_purchase 5. Fraud 6. Friendly_fraud 7. Chargeback
   * @return voidedReason
   */
  @javax.annotation.Nullable
  public Integer getVoidedReason() {
    return voidedReason;
  }

  public void setVoidedReason(Integer voidedReason) {
    this.voidedReason = voidedReason;
  }


  public VoidedPurchase voidedSource(Integer voidedSource) {
    this.voidedSource = voidedSource;
    return this;
  }

  /**
   * The initiator of voided purchase, possible values are: 0. User 1. Developer 2. Google
   * @return voidedSource
   */
  @javax.annotation.Nullable
  public Integer getVoidedSource() {
    return voidedSource;
  }

  public void setVoidedSource(Integer voidedSource) {
    this.voidedSource = voidedSource;
  }


  public VoidedPurchase voidedTimeMillis(String voidedTimeMillis) {
    this.voidedTimeMillis = voidedTimeMillis;
    return this;
  }

  /**
   * The time at which the purchase was canceled/refunded/charged-back, in milliseconds since the epoch (Jan 1, 1970).
   * @return voidedTimeMillis
   */
  @javax.annotation.Nullable
  public String getVoidedTimeMillis() {
    return voidedTimeMillis;
  }

  public void setVoidedTimeMillis(String voidedTimeMillis) {
    this.voidedTimeMillis = voidedTimeMillis;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VoidedPurchase voidedPurchase = (VoidedPurchase) o;
    return Objects.equals(this.kind, voidedPurchase.kind) &&
        Objects.equals(this.orderId, voidedPurchase.orderId) &&
        Objects.equals(this.purchaseTimeMillis, voidedPurchase.purchaseTimeMillis) &&
        Objects.equals(this.purchaseToken, voidedPurchase.purchaseToken) &&
        Objects.equals(this.voidedReason, voidedPurchase.voidedReason) &&
        Objects.equals(this.voidedSource, voidedPurchase.voidedSource) &&
        Objects.equals(this.voidedTimeMillis, voidedPurchase.voidedTimeMillis);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kind, orderId, purchaseTimeMillis, purchaseToken, voidedReason, voidedSource, voidedTimeMillis);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VoidedPurchase {\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    purchaseTimeMillis: ").append(toIndentedString(purchaseTimeMillis)).append("\n");
    sb.append("    purchaseToken: ").append(toIndentedString(purchaseToken)).append("\n");
    sb.append("    voidedReason: ").append(toIndentedString(voidedReason)).append("\n");
    sb.append("    voidedSource: ").append(toIndentedString(voidedSource)).append("\n");
    sb.append("    voidedTimeMillis: ").append(toIndentedString(voidedTimeMillis)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("kind");
    openapiFields.add("orderId");
    openapiFields.add("purchaseTimeMillis");
    openapiFields.add("purchaseToken");
    openapiFields.add("voidedReason");
    openapiFields.add("voidedSource");
    openapiFields.add("voidedTimeMillis");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VoidedPurchase
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VoidedPurchase.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VoidedPurchase is not found in the empty JSON string", VoidedPurchase.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VoidedPurchase.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VoidedPurchase` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      if ((jsonObj.get("orderId") != null && !jsonObj.get("orderId").isJsonNull()) && !jsonObj.get("orderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderId").toString()));
      }
      if ((jsonObj.get("purchaseTimeMillis") != null && !jsonObj.get("purchaseTimeMillis").isJsonNull()) && !jsonObj.get("purchaseTimeMillis").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchaseTimeMillis` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchaseTimeMillis").toString()));
      }
      if ((jsonObj.get("purchaseToken") != null && !jsonObj.get("purchaseToken").isJsonNull()) && !jsonObj.get("purchaseToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchaseToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchaseToken").toString()));
      }
      if ((jsonObj.get("voidedTimeMillis") != null && !jsonObj.get("voidedTimeMillis").isJsonNull()) && !jsonObj.get("voidedTimeMillis").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voidedTimeMillis` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voidedTimeMillis").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VoidedPurchase.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VoidedPurchase' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VoidedPurchase> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VoidedPurchase.class));

       return (TypeAdapter<T>) new TypeAdapter<VoidedPurchase>() {
           @Override
           public void write(JsonWriter out, VoidedPurchase value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VoidedPurchase read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VoidedPurchase given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VoidedPurchase
   * @throws IOException if the JSON string is invalid with respect to VoidedPurchase
   */
  public static VoidedPurchase fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VoidedPurchase.class);
  }

  /**
   * Convert an instance of VoidedPurchase to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

