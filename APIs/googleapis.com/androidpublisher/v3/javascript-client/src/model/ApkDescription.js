/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApkTargeting from './ApkTargeting';
import SplitApkMetadata from './SplitApkMetadata';
import StandaloneApkMetadata from './StandaloneApkMetadata';

/**
 * The ApkDescription model module.
 * @module model/ApkDescription
 * @version v3
 */
class ApkDescription {
    /**
     * Constructs a new <code>ApkDescription</code>.
     * Description of the created apks.
     * @alias module:model/ApkDescription
     */
    constructor() { 
        
        ApkDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApkDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApkDescription} obj Optional instance to populate.
     * @return {module:model/ApkDescription} The populated <code>ApkDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApkDescription();

            if (data.hasOwnProperty('assetSliceMetadata')) {
                obj['assetSliceMetadata'] = SplitApkMetadata.constructFromObject(data['assetSliceMetadata']);
            }
            if (data.hasOwnProperty('instantApkMetadata')) {
                obj['instantApkMetadata'] = SplitApkMetadata.constructFromObject(data['instantApkMetadata']);
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('splitApkMetadata')) {
                obj['splitApkMetadata'] = SplitApkMetadata.constructFromObject(data['splitApkMetadata']);
            }
            if (data.hasOwnProperty('standaloneApkMetadata')) {
                obj['standaloneApkMetadata'] = StandaloneApkMetadata.constructFromObject(data['standaloneApkMetadata']);
            }
            if (data.hasOwnProperty('targeting')) {
                obj['targeting'] = ApkTargeting.constructFromObject(data['targeting']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApkDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApkDescription</code>.
     */
    static validateJSON(data) {
        // validate the optional field `assetSliceMetadata`
        if (data['assetSliceMetadata']) { // data not null
          SplitApkMetadata.validateJSON(data['assetSliceMetadata']);
        }
        // validate the optional field `instantApkMetadata`
        if (data['instantApkMetadata']) { // data not null
          SplitApkMetadata.validateJSON(data['instantApkMetadata']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // validate the optional field `splitApkMetadata`
        if (data['splitApkMetadata']) { // data not null
          SplitApkMetadata.validateJSON(data['splitApkMetadata']);
        }
        // validate the optional field `standaloneApkMetadata`
        if (data['standaloneApkMetadata']) { // data not null
          StandaloneApkMetadata.validateJSON(data['standaloneApkMetadata']);
        }
        // validate the optional field `targeting`
        if (data['targeting']) { // data not null
          ApkTargeting.validateJSON(data['targeting']);
        }

        return true;
    }


}



/**
 * @member {module:model/SplitApkMetadata} assetSliceMetadata
 */
ApkDescription.prototype['assetSliceMetadata'] = undefined;

/**
 * @member {module:model/SplitApkMetadata} instantApkMetadata
 */
ApkDescription.prototype['instantApkMetadata'] = undefined;

/**
 * Path of the Apk, will be in the following format: .apk where DownloadId is the ID used to download the apk using GeneratedApks.Download API.
 * @member {String} path
 */
ApkDescription.prototype['path'] = undefined;

/**
 * @member {module:model/SplitApkMetadata} splitApkMetadata
 */
ApkDescription.prototype['splitApkMetadata'] = undefined;

/**
 * @member {module:model/StandaloneApkMetadata} standaloneApkMetadata
 */
ApkDescription.prototype['standaloneApkMetadata'] = undefined;

/**
 * @member {module:model/ApkTargeting} targeting
 */
ApkDescription.prototype['targeting'] = undefined;






export default ApkDescription;

