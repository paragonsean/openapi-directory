/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OtherRegionsSubscriptionOfferPhasePrices from './OtherRegionsSubscriptionOfferPhasePrices';

/**
 * The OtherRegionsSubscriptionOfferPhaseConfig model module.
 * @module model/OtherRegionsSubscriptionOfferPhaseConfig
 * @version v3
 */
class OtherRegionsSubscriptionOfferPhaseConfig {
    /**
     * Constructs a new <code>OtherRegionsSubscriptionOfferPhaseConfig</code>.
     * Configuration for any new locations Play may launch in for a single offer phase.
     * @alias module:model/OtherRegionsSubscriptionOfferPhaseConfig
     */
    constructor() { 
        
        OtherRegionsSubscriptionOfferPhaseConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OtherRegionsSubscriptionOfferPhaseConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OtherRegionsSubscriptionOfferPhaseConfig} obj Optional instance to populate.
     * @return {module:model/OtherRegionsSubscriptionOfferPhaseConfig} The populated <code>OtherRegionsSubscriptionOfferPhaseConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OtherRegionsSubscriptionOfferPhaseConfig();

            if (data.hasOwnProperty('absoluteDiscounts')) {
                obj['absoluteDiscounts'] = OtherRegionsSubscriptionOfferPhasePrices.constructFromObject(data['absoluteDiscounts']);
            }
            if (data.hasOwnProperty('otherRegionsPrices')) {
                obj['otherRegionsPrices'] = OtherRegionsSubscriptionOfferPhasePrices.constructFromObject(data['otherRegionsPrices']);
            }
            if (data.hasOwnProperty('relativeDiscount')) {
                obj['relativeDiscount'] = ApiClient.convertToType(data['relativeDiscount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OtherRegionsSubscriptionOfferPhaseConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OtherRegionsSubscriptionOfferPhaseConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `absoluteDiscounts`
        if (data['absoluteDiscounts']) { // data not null
          OtherRegionsSubscriptionOfferPhasePrices.validateJSON(data['absoluteDiscounts']);
        }
        // validate the optional field `otherRegionsPrices`
        if (data['otherRegionsPrices']) { // data not null
          OtherRegionsSubscriptionOfferPhasePrices.validateJSON(data['otherRegionsPrices']);
        }

        return true;
    }


}



/**
 * @member {module:model/OtherRegionsSubscriptionOfferPhasePrices} absoluteDiscounts
 */
OtherRegionsSubscriptionOfferPhaseConfig.prototype['absoluteDiscounts'] = undefined;

/**
 * @member {module:model/OtherRegionsSubscriptionOfferPhasePrices} otherRegionsPrices
 */
OtherRegionsSubscriptionOfferPhaseConfig.prototype['otherRegionsPrices'] = undefined;

/**
 * The fraction of the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a 50% discount for a phase of a duration of 3 months would correspond to a price of $1.50. The discount must be specified as a fraction strictly larger than 0 and strictly smaller than 1. The resulting price will be rounded to the nearest billable unit (e.g. cents for USD). The relative discount is considered invalid if the discounted price ends up being smaller than the minimum price allowed in any new locations Play may launch in.
 * @member {Number} relativeDiscount
 */
OtherRegionsSubscriptionOfferPhaseConfig.prototype['relativeDiscount'] = undefined;






export default OtherRegionsSubscriptionOfferPhaseConfig;

