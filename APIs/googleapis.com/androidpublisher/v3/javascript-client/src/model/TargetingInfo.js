/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetSliceSet from './AssetSliceSet';
import SplitApkVariant from './SplitApkVariant';

/**
 * The TargetingInfo model module.
 * @module model/TargetingInfo
 * @version v3
 */
class TargetingInfo {
    /**
     * Constructs a new <code>TargetingInfo</code>.
     * Targeting information about the generated apks.
     * @alias module:model/TargetingInfo
     */
    constructor() { 
        
        TargetingInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TargetingInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TargetingInfo} obj Optional instance to populate.
     * @return {module:model/TargetingInfo} The populated <code>TargetingInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TargetingInfo();

            if (data.hasOwnProperty('assetSliceSet')) {
                obj['assetSliceSet'] = ApiClient.convertToType(data['assetSliceSet'], [AssetSliceSet]);
            }
            if (data.hasOwnProperty('packageName')) {
                obj['packageName'] = ApiClient.convertToType(data['packageName'], 'String');
            }
            if (data.hasOwnProperty('variant')) {
                obj['variant'] = ApiClient.convertToType(data['variant'], [SplitApkVariant]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TargetingInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TargetingInfo</code>.
     */
    static validateJSON(data) {
        if (data['assetSliceSet']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['assetSliceSet'])) {
                throw new Error("Expected the field `assetSliceSet` to be an array in the JSON data but got " + data['assetSliceSet']);
            }
            // validate the optional field `assetSliceSet` (array)
            for (const item of data['assetSliceSet']) {
                AssetSliceSet.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['packageName'] && !(typeof data['packageName'] === 'string' || data['packageName'] instanceof String)) {
            throw new Error("Expected the field `packageName` to be a primitive type in the JSON string but got " + data['packageName']);
        }
        if (data['variant']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['variant'])) {
                throw new Error("Expected the field `variant` to be an array in the JSON data but got " + data['variant']);
            }
            // validate the optional field `variant` (array)
            for (const item of data['variant']) {
                SplitApkVariant.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of created asset slices.
 * @member {Array.<module:model/AssetSliceSet>} assetSliceSet
 */
TargetingInfo.prototype['assetSliceSet'] = undefined;

/**
 * The package name of this app.
 * @member {String} packageName
 */
TargetingInfo.prototype['packageName'] = undefined;

/**
 * List of the created variants.
 * @member {Array.<module:model/SplitApkVariant>} variant
 */
TargetingInfo.prototype['variant'] = undefined;






export default TargetingInfo;

