/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OtherRegionsSubscriptionOfferPhaseConfig from './OtherRegionsSubscriptionOfferPhaseConfig';
import RegionalSubscriptionOfferPhaseConfig from './RegionalSubscriptionOfferPhaseConfig';

/**
 * The SubscriptionOfferPhase model module.
 * @module model/SubscriptionOfferPhase
 * @version v3
 */
class SubscriptionOfferPhase {
    /**
     * Constructs a new <code>SubscriptionOfferPhase</code>.
     * A single phase of a subscription offer.
     * @alias module:model/SubscriptionOfferPhase
     */
    constructor() { 
        
        SubscriptionOfferPhase.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionOfferPhase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionOfferPhase} obj Optional instance to populate.
     * @return {module:model/SubscriptionOfferPhase} The populated <code>SubscriptionOfferPhase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionOfferPhase();

            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('otherRegionsConfig')) {
                obj['otherRegionsConfig'] = OtherRegionsSubscriptionOfferPhaseConfig.constructFromObject(data['otherRegionsConfig']);
            }
            if (data.hasOwnProperty('recurrenceCount')) {
                obj['recurrenceCount'] = ApiClient.convertToType(data['recurrenceCount'], 'Number');
            }
            if (data.hasOwnProperty('regionalConfigs')) {
                obj['regionalConfigs'] = ApiClient.convertToType(data['regionalConfigs'], [RegionalSubscriptionOfferPhaseConfig]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionOfferPhase</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionOfferPhase</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['duration'] && !(typeof data['duration'] === 'string' || data['duration'] instanceof String)) {
            throw new Error("Expected the field `duration` to be a primitive type in the JSON string but got " + data['duration']);
        }
        // validate the optional field `otherRegionsConfig`
        if (data['otherRegionsConfig']) { // data not null
          OtherRegionsSubscriptionOfferPhaseConfig.validateJSON(data['otherRegionsConfig']);
        }
        if (data['regionalConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['regionalConfigs'])) {
                throw new Error("Expected the field `regionalConfigs` to be an array in the JSON data but got " + data['regionalConfigs']);
            }
            // validate the optional field `regionalConfigs` (array)
            for (const item of data['regionalConfigs']) {
                RegionalSubscriptionOfferPhaseConfig.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Required. The duration of a single recurrence of this phase. Specified in ISO 8601 format.
 * @member {String} duration
 */
SubscriptionOfferPhase.prototype['duration'] = undefined;

/**
 * @member {module:model/OtherRegionsSubscriptionOfferPhaseConfig} otherRegionsConfig
 */
SubscriptionOfferPhase.prototype['otherRegionsConfig'] = undefined;

/**
 * Required. The number of times this phase repeats. If this offer phase is not free, each recurrence charges the user the price of this offer phase.
 * @member {Number} recurrenceCount
 */
SubscriptionOfferPhase.prototype['recurrenceCount'] = undefined;

/**
 * Required. The region-specific configuration of this offer phase. This list must contain exactly one entry for each region for which the subscription offer has a regional config.
 * @member {Array.<module:model/RegionalSubscriptionOfferPhaseConfig>} regionalConfigs
 */
SubscriptionOfferPhase.prototype['regionalConfigs'] = undefined;






export default SubscriptionOfferPhase;

