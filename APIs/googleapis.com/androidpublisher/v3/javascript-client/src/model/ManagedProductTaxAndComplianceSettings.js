/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RegionalTaxRateInfo from './RegionalTaxRateInfo';

/**
 * The ManagedProductTaxAndComplianceSettings model module.
 * @module model/ManagedProductTaxAndComplianceSettings
 * @version v3
 */
class ManagedProductTaxAndComplianceSettings {
    /**
     * Constructs a new <code>ManagedProductTaxAndComplianceSettings</code>.
     * Details about taxation and legal compliance for managed products.
     * @alias module:model/ManagedProductTaxAndComplianceSettings
     */
    constructor() { 
        
        ManagedProductTaxAndComplianceSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagedProductTaxAndComplianceSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagedProductTaxAndComplianceSettings} obj Optional instance to populate.
     * @return {module:model/ManagedProductTaxAndComplianceSettings} The populated <code>ManagedProductTaxAndComplianceSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagedProductTaxAndComplianceSettings();

            if (data.hasOwnProperty('eeaWithdrawalRightType')) {
                obj['eeaWithdrawalRightType'] = ApiClient.convertToType(data['eeaWithdrawalRightType'], 'String');
            }
            if (data.hasOwnProperty('isTokenizedDigitalAsset')) {
                obj['isTokenizedDigitalAsset'] = ApiClient.convertToType(data['isTokenizedDigitalAsset'], 'Boolean');
            }
            if (data.hasOwnProperty('taxRateInfoByRegionCode')) {
                obj['taxRateInfoByRegionCode'] = ApiClient.convertToType(data['taxRateInfoByRegionCode'], {'String': RegionalTaxRateInfo});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagedProductTaxAndComplianceSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagedProductTaxAndComplianceSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['eeaWithdrawalRightType'] && !(typeof data['eeaWithdrawalRightType'] === 'string' || data['eeaWithdrawalRightType'] instanceof String)) {
            throw new Error("Expected the field `eeaWithdrawalRightType` to be a primitive type in the JSON string but got " + data['eeaWithdrawalRightType']);
        }

        return true;
    }


}



/**
 * Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the [Help Center article](https://support.google.com/googleplay/android-developer/answer/10463498) for more information.
 * @member {module:model/ManagedProductTaxAndComplianceSettings.EeaWithdrawalRightTypeEnum} eeaWithdrawalRightType
 */
ManagedProductTaxAndComplianceSettings.prototype['eeaWithdrawalRightType'] = undefined;

/**
 * Whether this in-app product is declared as a product representing a tokenized digital asset.
 * @member {Boolean} isTokenizedDigitalAsset
 */
ManagedProductTaxAndComplianceSettings.prototype['isTokenizedDigitalAsset'] = undefined;

/**
 * A mapping from region code to tax rate details. The keys are region codes as defined by Unicode's \"CLDR\".
 * @member {Object.<String, module:model/RegionalTaxRateInfo>} taxRateInfoByRegionCode
 */
ManagedProductTaxAndComplianceSettings.prototype['taxRateInfoByRegionCode'] = undefined;





/**
 * Allowed values for the <code>eeaWithdrawalRightType</code> property.
 * @enum {String}
 * @readonly
 */
ManagedProductTaxAndComplianceSettings['EeaWithdrawalRightTypeEnum'] = {

    /**
     * value: "WITHDRAWAL_RIGHT_TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "WITHDRAWAL_RIGHT_TYPE_UNSPECIFIED",

    /**
     * value: "WITHDRAWAL_RIGHT_DIGITAL_CONTENT"
     * @const
     */
    "DIGITAL_CONTENT": "WITHDRAWAL_RIGHT_DIGITAL_CONTENT",

    /**
     * value: "WITHDRAWAL_RIGHT_SERVICE"
     * @const
     */
    "SERVICE": "WITHDRAWAL_RIGHT_SERVICE"
};



export default ManagedProductTaxAndComplianceSettings;

