/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Grant from './Grant';

/**
 * The User model module.
 * @module model/User
 * @version v3
 */
class User {
    /**
     * Constructs a new <code>User</code>.
     * A user resource.
     * @alias module:model/User
     */
    constructor() { 
        
        User.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/User} obj Optional instance to populate.
     * @return {module:model/User} The populated <code>User</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new User();

            if (data.hasOwnProperty('accessState')) {
                obj['accessState'] = ApiClient.convertToType(data['accessState'], 'String');
            }
            if (data.hasOwnProperty('developerAccountPermissions')) {
                obj['developerAccountPermissions'] = ApiClient.convertToType(data['developerAccountPermissions'], ['String']);
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('expirationTime')) {
                obj['expirationTime'] = ApiClient.convertToType(data['expirationTime'], 'String');
            }
            if (data.hasOwnProperty('grants')) {
                obj['grants'] = ApiClient.convertToType(data['grants'], [Grant]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('partial')) {
                obj['partial'] = ApiClient.convertToType(data['partial'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>User</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>User</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accessState'] && !(typeof data['accessState'] === 'string' || data['accessState'] instanceof String)) {
            throw new Error("Expected the field `accessState` to be a primitive type in the JSON string but got " + data['accessState']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['developerAccountPermissions'])) {
            throw new Error("Expected the field `developerAccountPermissions` to be an array in the JSON data but got " + data['developerAccountPermissions']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['expirationTime'] && !(typeof data['expirationTime'] === 'string' || data['expirationTime'] instanceof String)) {
            throw new Error("Expected the field `expirationTime` to be a primitive type in the JSON string but got " + data['expirationTime']);
        }
        if (data['grants']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['grants'])) {
                throw new Error("Expected the field `grants` to be an array in the JSON data but got " + data['grants']);
            }
            // validate the optional field `grants` (array)
            for (const item of data['grants']) {
                Grant.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Output only. The state of the user's access to the Play Console.
 * @member {module:model/User.AccessStateEnum} accessState
 */
User.prototype['accessState'] = undefined;

/**
 * Permissions for the user which apply across the developer account.
 * @member {Array.<module:model/User.DeveloperAccountPermissionsEnum>} developerAccountPermissions
 */
User.prototype['developerAccountPermissions'] = undefined;

/**
 * Immutable. The user's email address.
 * @member {String} email
 */
User.prototype['email'] = undefined;

/**
 * The time at which the user's access expires, if set. When setting this value, it must always be in the future.
 * @member {String} expirationTime
 */
User.prototype['expirationTime'] = undefined;

/**
 * Output only. Per-app permissions for the user.
 * @member {Array.<module:model/Grant>} grants
 */
User.prototype['grants'] = undefined;

/**
 * Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\".
 * @member {String} name
 */
User.prototype['name'] = undefined;

/**
 * Output only. Whether there are more permissions for the user that are not represented here. This can happen if the caller does not have permission to manage all apps in the account. This is also `true` if this user is the account owner. If this field is `true`, it should be taken as a signal that this user cannot be fully managed via the API. That is, the API caller is not be able to manage all of the permissions this user holds, either because it doesn't know about them or because the user is the account owner.
 * @member {Boolean} partial
 */
User.prototype['partial'] = undefined;





/**
 * Allowed values for the <code>accessState</code> property.
 * @enum {String}
 * @readonly
 */
User['AccessStateEnum'] = {

    /**
     * value: "ACCESS_STATE_UNSPECIFIED"
     * @const
     */
    "ACCESS_STATE_UNSPECIFIED": "ACCESS_STATE_UNSPECIFIED",

    /**
     * value: "INVITED"
     * @const
     */
    "INVITED": "INVITED",

    /**
     * value: "INVITATION_EXPIRED"
     * @const
     */
    "INVITATION_EXPIRED": "INVITATION_EXPIRED",

    /**
     * value: "ACCESS_GRANTED"
     * @const
     */
    "ACCESS_GRANTED": "ACCESS_GRANTED",

    /**
     * value: "ACCESS_EXPIRED"
     * @const
     */
    "ACCESS_EXPIRED": "ACCESS_EXPIRED"
};


/**
 * Allowed values for the <code>developerAccountPermissions</code> property.
 * @enum {String}
 * @readonly
 */
User['DeveloperAccountPermissionsEnum'] = {

    /**
     * value: "DEVELOPER_LEVEL_PERMISSION_UNSPECIFIED"
     * @const
     */
    "DEVELOPER_LEVEL_PERMISSION_UNSPECIFIED": "DEVELOPER_LEVEL_PERMISSION_UNSPECIFIED",

    /**
     * value: "CAN_SEE_ALL_APPS"
     * @const
     */
    "CAN_SEE_ALL_APPS": "CAN_SEE_ALL_APPS",

    /**
     * value: "CAN_VIEW_FINANCIAL_DATA_GLOBAL"
     * @const
     */
    "CAN_VIEW_FINANCIAL_DATA_GLOBAL": "CAN_VIEW_FINANCIAL_DATA_GLOBAL",

    /**
     * value: "CAN_MANAGE_PERMISSIONS_GLOBAL"
     * @const
     */
    "CAN_MANAGE_PERMISSIONS_GLOBAL": "CAN_MANAGE_PERMISSIONS_GLOBAL",

    /**
     * value: "CAN_EDIT_GAMES_GLOBAL"
     * @const
     */
    "CAN_EDIT_GAMES_GLOBAL": "CAN_EDIT_GAMES_GLOBAL",

    /**
     * value: "CAN_PUBLISH_GAMES_GLOBAL"
     * @const
     */
    "CAN_PUBLISH_GAMES_GLOBAL": "CAN_PUBLISH_GAMES_GLOBAL",

    /**
     * value: "CAN_REPLY_TO_REVIEWS_GLOBAL"
     * @const
     */
    "CAN_REPLY_TO_REVIEWS_GLOBAL": "CAN_REPLY_TO_REVIEWS_GLOBAL",

    /**
     * value: "CAN_MANAGE_PUBLIC_APKS_GLOBAL"
     * @const
     */
    "CAN_MANAGE_PUBLIC_APKS_GLOBAL": "CAN_MANAGE_PUBLIC_APKS_GLOBAL",

    /**
     * value: "CAN_MANAGE_TRACK_APKS_GLOBAL"
     * @const
     */
    "CAN_MANAGE_TRACK_APKS_GLOBAL": "CAN_MANAGE_TRACK_APKS_GLOBAL",

    /**
     * value: "CAN_MANAGE_TRACK_USERS_GLOBAL"
     * @const
     */
    "CAN_MANAGE_TRACK_USERS_GLOBAL": "CAN_MANAGE_TRACK_USERS_GLOBAL",

    /**
     * value: "CAN_MANAGE_PUBLIC_LISTING_GLOBAL"
     * @const
     */
    "CAN_MANAGE_PUBLIC_LISTING_GLOBAL": "CAN_MANAGE_PUBLIC_LISTING_GLOBAL",

    /**
     * value: "CAN_MANAGE_DRAFT_APPS_GLOBAL"
     * @const
     */
    "CAN_MANAGE_DRAFT_APPS_GLOBAL": "CAN_MANAGE_DRAFT_APPS_GLOBAL",

    /**
     * value: "CAN_CREATE_MANAGED_PLAY_APPS_GLOBAL"
     * @const
     */
    "CAN_CREATE_MANAGED_PLAY_APPS_GLOBAL": "CAN_CREATE_MANAGED_PLAY_APPS_GLOBAL",

    /**
     * value: "CAN_CHANGE_MANAGED_PLAY_SETTING_GLOBAL"
     * @const
     */
    "CAN_CHANGE_MANAGED_PLAY_SETTING_GLOBAL": "CAN_CHANGE_MANAGED_PLAY_SETTING_GLOBAL",

    /**
     * value: "CAN_MANAGE_ORDERS_GLOBAL"
     * @const
     */
    "CAN_MANAGE_ORDERS_GLOBAL": "CAN_MANAGE_ORDERS_GLOBAL",

    /**
     * value: "CAN_MANAGE_APP_CONTENT_GLOBAL"
     * @const
     */
    "CAN_MANAGE_APP_CONTENT_GLOBAL": "CAN_MANAGE_APP_CONTENT_GLOBAL",

    /**
     * value: "CAN_VIEW_NON_FINANCIAL_DATA_GLOBAL"
     * @const
     */
    "CAN_VIEW_NON_FINANCIAL_DATA_GLOBAL": "CAN_VIEW_NON_FINANCIAL_DATA_GLOBAL",

    /**
     * value: "CAN_VIEW_APP_QUALITY_GLOBAL"
     * @const
     */
    "CAN_VIEW_APP_QUALITY_GLOBAL": "CAN_VIEW_APP_QUALITY_GLOBAL"
};



export default User;

