/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Abi model module.
 * @module model/Abi
 * @version v3
 */
class Abi {
    /**
     * Constructs a new <code>Abi</code>.
     * Represents an Abi.
     * @alias module:model/Abi
     */
    constructor() { 
        
        Abi.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Abi</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Abi} obj Optional instance to populate.
     * @return {module:model/Abi} The populated <code>Abi</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Abi();

            if (data.hasOwnProperty('alias')) {
                obj['alias'] = ApiClient.convertToType(data['alias'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Abi</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Abi</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['alias'] && !(typeof data['alias'] === 'string' || data['alias'] instanceof String)) {
            throw new Error("Expected the field `alias` to be a primitive type in the JSON string but got " + data['alias']);
        }

        return true;
    }


}



/**
 * Alias for an abi.
 * @member {module:model/Abi.AliasEnum} alias
 */
Abi.prototype['alias'] = undefined;





/**
 * Allowed values for the <code>alias</code> property.
 * @enum {String}
 * @readonly
 */
Abi['AliasEnum'] = {

    /**
     * value: "UNSPECIFIED_CPU_ARCHITECTURE"
     * @const
     */
    "UNSPECIFIED_CPU_ARCHITECTURE": "UNSPECIFIED_CPU_ARCHITECTURE",

    /**
     * value: "ARMEABI"
     * @const
     */
    "ARMEABI": "ARMEABI",

    /**
     * value: "ARMEABI_V7A"
     * @const
     */
    "ARMEABI_V7A": "ARMEABI_V7A",

    /**
     * value: "ARM64_V8A"
     * @const
     */
    "ARM64_V8A": "ARM64_V8A",

    /**
     * value: "X86"
     * @const
     */
    "X86": "X86",

    /**
     * value: "X86_64"
     * @const
     */
    "X86_64": "X86_64",

    /**
     * value: "RISCV64"
     * @const
     */
    "RISCV64": "RISCV64"
};



export default Abi;

