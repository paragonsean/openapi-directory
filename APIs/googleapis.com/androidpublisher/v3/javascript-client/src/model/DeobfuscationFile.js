/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeobfuscationFile model module.
 * @module model/DeobfuscationFile
 * @version v3
 */
class DeobfuscationFile {
    /**
     * Constructs a new <code>DeobfuscationFile</code>.
     * Represents a deobfuscation file.
     * @alias module:model/DeobfuscationFile
     */
    constructor() { 
        
        DeobfuscationFile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeobfuscationFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeobfuscationFile} obj Optional instance to populate.
     * @return {module:model/DeobfuscationFile} The populated <code>DeobfuscationFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeobfuscationFile();

            if (data.hasOwnProperty('symbolType')) {
                obj['symbolType'] = ApiClient.convertToType(data['symbolType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeobfuscationFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeobfuscationFile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['symbolType'] && !(typeof data['symbolType'] === 'string' || data['symbolType'] instanceof String)) {
            throw new Error("Expected the field `symbolType` to be a primitive type in the JSON string but got " + data['symbolType']);
        }

        return true;
    }


}



/**
 * The type of the deobfuscation file.
 * @member {module:model/DeobfuscationFile.SymbolTypeEnum} symbolType
 */
DeobfuscationFile.prototype['symbolType'] = undefined;





/**
 * Allowed values for the <code>symbolType</code> property.
 * @enum {String}
 * @readonly
 */
DeobfuscationFile['SymbolTypeEnum'] = {

    /**
     * value: "deobfuscationFileTypeUnspecified"
     * @const
     */
    "deobfuscationFileTypeUnspecified": "deobfuscationFileTypeUnspecified",

    /**
     * value: "proguard"
     * @const
     */
    "proguard": "proguard",

    /**
     * value: "nativeCode"
     * @const
     */
    "nativeCode": "nativeCode"
};



export default DeobfuscationFile;

