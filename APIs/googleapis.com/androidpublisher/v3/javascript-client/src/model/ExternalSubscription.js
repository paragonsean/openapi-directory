/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExternalSubscription model module.
 * @module model/ExternalSubscription
 * @version v3
 */
class ExternalSubscription {
    /**
     * Constructs a new <code>ExternalSubscription</code>.
     * Details of an external subscription.
     * @alias module:model/ExternalSubscription
     */
    constructor() { 
        
        ExternalSubscription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExternalSubscription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExternalSubscription} obj Optional instance to populate.
     * @return {module:model/ExternalSubscription} The populated <code>ExternalSubscription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExternalSubscription();

            if (data.hasOwnProperty('subscriptionType')) {
                obj['subscriptionType'] = ApiClient.convertToType(data['subscriptionType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExternalSubscription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExternalSubscription</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['subscriptionType'] && !(typeof data['subscriptionType'] === 'string' || data['subscriptionType'] instanceof String)) {
            throw new Error("Expected the field `subscriptionType` to be a primitive type in the JSON string but got " + data['subscriptionType']);
        }

        return true;
    }


}



/**
 * Required. The type of the external subscription.
 * @member {module:model/ExternalSubscription.SubscriptionTypeEnum} subscriptionType
 */
ExternalSubscription.prototype['subscriptionType'] = undefined;





/**
 * Allowed values for the <code>subscriptionType</code> property.
 * @enum {String}
 * @readonly
 */
ExternalSubscription['SubscriptionTypeEnum'] = {

    /**
     * value: "SUBSCRIPTION_TYPE_UNSPECIFIED"
     * @const
     */
    "SUBSCRIPTION_TYPE_UNSPECIFIED": "SUBSCRIPTION_TYPE_UNSPECIFIED",

    /**
     * value: "RECURRING"
     * @const
     */
    "RECURRING": "RECURRING",

    /**
     * value: "PREPAID"
     * @const
     */
    "PREPAID": "PREPAID"
};



export default ExternalSubscription;

