/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PartialRefund from './PartialRefund';

/**
 * The RefundExternalTransactionRequest model module.
 * @module model/RefundExternalTransactionRequest
 * @version v3
 */
class RefundExternalTransactionRequest {
    /**
     * Constructs a new <code>RefundExternalTransactionRequest</code>.
     * A request to refund an existing external transaction.
     * @alias module:model/RefundExternalTransactionRequest
     */
    constructor() { 
        
        RefundExternalTransactionRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RefundExternalTransactionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RefundExternalTransactionRequest} obj Optional instance to populate.
     * @return {module:model/RefundExternalTransactionRequest} The populated <code>RefundExternalTransactionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RefundExternalTransactionRequest();

            if (data.hasOwnProperty('fullRefund')) {
                obj['fullRefund'] = ApiClient.convertToType(data['fullRefund'], Object);
            }
            if (data.hasOwnProperty('partialRefund')) {
                obj['partialRefund'] = PartialRefund.constructFromObject(data['partialRefund']);
            }
            if (data.hasOwnProperty('refundTime')) {
                obj['refundTime'] = ApiClient.convertToType(data['refundTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RefundExternalTransactionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RefundExternalTransactionRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `partialRefund`
        if (data['partialRefund']) { // data not null
          PartialRefund.validateJSON(data['partialRefund']);
        }
        // ensure the json data is a string
        if (data['refundTime'] && !(typeof data['refundTime'] === 'string' || data['refundTime'] instanceof String)) {
            throw new Error("Expected the field `refundTime` to be a primitive type in the JSON string but got " + data['refundTime']);
        }

        return true;
    }


}



/**
 * A full refund of the remaining amount of a transaction.
 * @member {Object} fullRefund
 */
RefundExternalTransactionRequest.prototype['fullRefund'] = undefined;

/**
 * @member {module:model/PartialRefund} partialRefund
 */
RefundExternalTransactionRequest.prototype['partialRefund'] = undefined;

/**
 * Required. The time that the transaction was refunded.
 * @member {String} refundTime
 */
RefundExternalTransactionRequest.prototype['refundTime'] = undefined;






export default RefundExternalTransactionRequest;

