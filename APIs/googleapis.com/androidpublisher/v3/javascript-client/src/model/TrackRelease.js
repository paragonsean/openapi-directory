/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CountryTargeting from './CountryTargeting';
import LocalizedText from './LocalizedText';

/**
 * The TrackRelease model module.
 * @module model/TrackRelease
 * @version v3
 */
class TrackRelease {
    /**
     * Constructs a new <code>TrackRelease</code>.
     * A release within a track.
     * @alias module:model/TrackRelease
     */
    constructor() { 
        
        TrackRelease.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TrackRelease</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TrackRelease} obj Optional instance to populate.
     * @return {module:model/TrackRelease} The populated <code>TrackRelease</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrackRelease();

            if (data.hasOwnProperty('countryTargeting')) {
                obj['countryTargeting'] = CountryTargeting.constructFromObject(data['countryTargeting']);
            }
            if (data.hasOwnProperty('inAppUpdatePriority')) {
                obj['inAppUpdatePriority'] = ApiClient.convertToType(data['inAppUpdatePriority'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('releaseNotes')) {
                obj['releaseNotes'] = ApiClient.convertToType(data['releaseNotes'], [LocalizedText]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('userFraction')) {
                obj['userFraction'] = ApiClient.convertToType(data['userFraction'], 'Number');
            }
            if (data.hasOwnProperty('versionCodes')) {
                obj['versionCodes'] = ApiClient.convertToType(data['versionCodes'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TrackRelease</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TrackRelease</code>.
     */
    static validateJSON(data) {
        // validate the optional field `countryTargeting`
        if (data['countryTargeting']) { // data not null
          CountryTargeting.validateJSON(data['countryTargeting']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['releaseNotes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['releaseNotes'])) {
                throw new Error("Expected the field `releaseNotes` to be an array in the JSON data but got " + data['releaseNotes']);
            }
            // validate the optional field `releaseNotes` (array)
            for (const item of data['releaseNotes']) {
                LocalizedText.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['versionCodes'])) {
            throw new Error("Expected the field `versionCodes` to be an array in the JSON data but got " + data['versionCodes']);
        }

        return true;
    }


}



/**
 * @member {module:model/CountryTargeting} countryTargeting
 */
TrackRelease.prototype['countryTargeting'] = undefined;

/**
 * In-app update priority of the release. All newly added APKs in the release will be considered at this priority. Can take values in the range [0, 5], with 5 the highest priority. Defaults to 0. in_app_update_priority can not be updated once the release is rolled out. See https://developer.android.com/guide/playcore/in-app-updates.
 * @member {Number} inAppUpdatePriority
 */
TrackRelease.prototype['inAppUpdatePriority'] = undefined;

/**
 * The release name. Not required to be unique. If not set, the name is generated from the APK's version_name. If the release contains multiple APKs, the name is generated from the date.
 * @member {String} name
 */
TrackRelease.prototype['name'] = undefined;

/**
 * A description of what is new in this release.
 * @member {Array.<module:model/LocalizedText>} releaseNotes
 */
TrackRelease.prototype['releaseNotes'] = undefined;

/**
 * The status of the release.
 * @member {module:model/TrackRelease.StatusEnum} status
 */
TrackRelease.prototype['status'] = undefined;

/**
 * Fraction of users who are eligible for a staged release. 0 < fraction < 1. Can only be set when status is \"inProgress\" or \"halted\".
 * @member {Number} userFraction
 */
TrackRelease.prototype['userFraction'] = undefined;

/**
 * Version codes of all APKs in the release. Must include version codes to retain from previous releases.
 * @member {Array.<String>} versionCodes
 */
TrackRelease.prototype['versionCodes'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
TrackRelease['StatusEnum'] = {

    /**
     * value: "statusUnspecified"
     * @const
     */
    "statusUnspecified": "statusUnspecified",

    /**
     * value: "draft"
     * @const
     */
    "draft": "draft",

    /**
     * value: "inProgress"
     * @const
     */
    "inProgress": "inProgress",

    /**
     * value: "halted"
     * @const
     */
    "halted": "halted",

    /**
     * value: "completed"
     * @const
     */
    "completed": "completed"
};



export default TrackRelease;

