/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TokenPagination model module.
 * @module model/TokenPagination
 * @version v3
 */
class TokenPagination {
    /**
     * Constructs a new <code>TokenPagination</code>.
     * Pagination information returned by a List operation when token pagination is enabled. List operations that supports paging return only one \&quot;page\&quot; of results. This protocol buffer message describes the page that has been returned. When using token pagination, clients should use the next/previous token to get another page of the result. The presence or absence of next/previous token indicates whether a next/previous page is available and provides a mean of accessing this page. ListRequest.page_token should be set to either next_page_token or previous_page_token to access another page.
     * @alias module:model/TokenPagination
     */
    constructor() { 
        
        TokenPagination.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TokenPagination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TokenPagination} obj Optional instance to populate.
     * @return {module:model/TokenPagination} The populated <code>TokenPagination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TokenPagination();

            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
            if (data.hasOwnProperty('previousPageToken')) {
                obj['previousPageToken'] = ApiClient.convertToType(data['previousPageToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TokenPagination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TokenPagination</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }
        // ensure the json data is a string
        if (data['previousPageToken'] && !(typeof data['previousPageToken'] === 'string' || data['previousPageToken'] instanceof String)) {
            throw new Error("Expected the field `previousPageToken` to be a primitive type in the JSON string but got " + data['previousPageToken']);
        }

        return true;
    }


}



/**
 * Tokens to pass to the standard list field 'page_token'. Whenever available, tokens are preferred over manipulating start_index.
 * @member {String} nextPageToken
 */
TokenPagination.prototype['nextPageToken'] = undefined;

/**
 * @member {String} previousPageToken
 */
TokenPagination.prototype['previousPageToken'] = undefined;






export default TokenPagination;

