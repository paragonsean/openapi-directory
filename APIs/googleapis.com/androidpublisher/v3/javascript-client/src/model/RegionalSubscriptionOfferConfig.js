/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RegionalSubscriptionOfferConfig model module.
 * @module model/RegionalSubscriptionOfferConfig
 * @version v3
 */
class RegionalSubscriptionOfferConfig {
    /**
     * Constructs a new <code>RegionalSubscriptionOfferConfig</code>.
     * Configuration for a subscription offer in a single region.
     * @alias module:model/RegionalSubscriptionOfferConfig
     */
    constructor() { 
        
        RegionalSubscriptionOfferConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RegionalSubscriptionOfferConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegionalSubscriptionOfferConfig} obj Optional instance to populate.
     * @return {module:model/RegionalSubscriptionOfferConfig} The populated <code>RegionalSubscriptionOfferConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegionalSubscriptionOfferConfig();

            if (data.hasOwnProperty('newSubscriberAvailability')) {
                obj['newSubscriberAvailability'] = ApiClient.convertToType(data['newSubscriberAvailability'], 'Boolean');
            }
            if (data.hasOwnProperty('regionCode')) {
                obj['regionCode'] = ApiClient.convertToType(data['regionCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RegionalSubscriptionOfferConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RegionalSubscriptionOfferConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['regionCode'] && !(typeof data['regionCode'] === 'string' || data['regionCode'] instanceof String)) {
            throw new Error("Expected the field `regionCode` to be a primitive type in the JSON string but got " + data['regionCode']);
        }

        return true;
    }


}



/**
 * Whether the subscription offer in the specified region is available for new subscribers. Existing subscribers will not have their subscription cancelled if this value is set to false. If not specified, this will default to false.
 * @member {Boolean} newSubscriberAvailability
 */
RegionalSubscriptionOfferConfig.prototype['newSubscriberAvailability'] = undefined;

/**
 * Required. Immutable. Region code this configuration applies to, as defined by ISO 3166-2, e.g. \"US\".
 * @member {String} regionCode
 */
RegionalSubscriptionOfferConfig.prototype['regionCode'] = undefined;






export default RegionalSubscriptionOfferConfig;

