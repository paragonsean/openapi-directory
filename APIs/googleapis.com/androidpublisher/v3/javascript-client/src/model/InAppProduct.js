/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InAppProductListing from './InAppProductListing';
import ManagedProductTaxAndComplianceSettings from './ManagedProductTaxAndComplianceSettings';
import Price from './Price';
import SubscriptionTaxAndComplianceSettings from './SubscriptionTaxAndComplianceSettings';

/**
 * The InAppProduct model module.
 * @module model/InAppProduct
 * @version v3
 */
class InAppProduct {
    /**
     * Constructs a new <code>InAppProduct</code>.
     * An in-app product. The resource for InappproductsService.
     * @alias module:model/InAppProduct
     */
    constructor() { 
        
        InAppProduct.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InAppProduct</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InAppProduct} obj Optional instance to populate.
     * @return {module:model/InAppProduct} The populated <code>InAppProduct</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InAppProduct();

            if (data.hasOwnProperty('defaultLanguage')) {
                obj['defaultLanguage'] = ApiClient.convertToType(data['defaultLanguage'], 'String');
            }
            if (data.hasOwnProperty('defaultPrice')) {
                obj['defaultPrice'] = Price.constructFromObject(data['defaultPrice']);
            }
            if (data.hasOwnProperty('gracePeriod')) {
                obj['gracePeriod'] = ApiClient.convertToType(data['gracePeriod'], 'String');
            }
            if (data.hasOwnProperty('listings')) {
                obj['listings'] = ApiClient.convertToType(data['listings'], {'String': InAppProductListing});
            }
            if (data.hasOwnProperty('managedProductTaxesAndComplianceSettings')) {
                obj['managedProductTaxesAndComplianceSettings'] = ManagedProductTaxAndComplianceSettings.constructFromObject(data['managedProductTaxesAndComplianceSettings']);
            }
            if (data.hasOwnProperty('packageName')) {
                obj['packageName'] = ApiClient.convertToType(data['packageName'], 'String');
            }
            if (data.hasOwnProperty('prices')) {
                obj['prices'] = ApiClient.convertToType(data['prices'], {'String': Price});
            }
            if (data.hasOwnProperty('purchaseType')) {
                obj['purchaseType'] = ApiClient.convertToType(data['purchaseType'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('subscriptionPeriod')) {
                obj['subscriptionPeriod'] = ApiClient.convertToType(data['subscriptionPeriod'], 'String');
            }
            if (data.hasOwnProperty('subscriptionTaxesAndComplianceSettings')) {
                obj['subscriptionTaxesAndComplianceSettings'] = SubscriptionTaxAndComplianceSettings.constructFromObject(data['subscriptionTaxesAndComplianceSettings']);
            }
            if (data.hasOwnProperty('trialPeriod')) {
                obj['trialPeriod'] = ApiClient.convertToType(data['trialPeriod'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InAppProduct</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InAppProduct</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['defaultLanguage'] && !(typeof data['defaultLanguage'] === 'string' || data['defaultLanguage'] instanceof String)) {
            throw new Error("Expected the field `defaultLanguage` to be a primitive type in the JSON string but got " + data['defaultLanguage']);
        }
        // validate the optional field `defaultPrice`
        if (data['defaultPrice']) { // data not null
          Price.validateJSON(data['defaultPrice']);
        }
        // ensure the json data is a string
        if (data['gracePeriod'] && !(typeof data['gracePeriod'] === 'string' || data['gracePeriod'] instanceof String)) {
            throw new Error("Expected the field `gracePeriod` to be a primitive type in the JSON string but got " + data['gracePeriod']);
        }
        // validate the optional field `managedProductTaxesAndComplianceSettings`
        if (data['managedProductTaxesAndComplianceSettings']) { // data not null
          ManagedProductTaxAndComplianceSettings.validateJSON(data['managedProductTaxesAndComplianceSettings']);
        }
        // ensure the json data is a string
        if (data['packageName'] && !(typeof data['packageName'] === 'string' || data['packageName'] instanceof String)) {
            throw new Error("Expected the field `packageName` to be a primitive type in the JSON string but got " + data['packageName']);
        }
        // ensure the json data is a string
        if (data['purchaseType'] && !(typeof data['purchaseType'] === 'string' || data['purchaseType'] instanceof String)) {
            throw new Error("Expected the field `purchaseType` to be a primitive type in the JSON string but got " + data['purchaseType']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['subscriptionPeriod'] && !(typeof data['subscriptionPeriod'] === 'string' || data['subscriptionPeriod'] instanceof String)) {
            throw new Error("Expected the field `subscriptionPeriod` to be a primitive type in the JSON string but got " + data['subscriptionPeriod']);
        }
        // validate the optional field `subscriptionTaxesAndComplianceSettings`
        if (data['subscriptionTaxesAndComplianceSettings']) { // data not null
          SubscriptionTaxAndComplianceSettings.validateJSON(data['subscriptionTaxesAndComplianceSettings']);
        }
        // ensure the json data is a string
        if (data['trialPeriod'] && !(typeof data['trialPeriod'] === 'string' || data['trialPeriod'] instanceof String)) {
            throw new Error("Expected the field `trialPeriod` to be a primitive type in the JSON string but got " + data['trialPeriod']);
        }

        return true;
    }


}



/**
 * Default language of the localized data, as defined by BCP-47. e.g. \"en-US\".
 * @member {String} defaultLanguage
 */
InAppProduct.prototype['defaultLanguage'] = undefined;

/**
 * @member {module:model/Price} defaultPrice
 */
InAppProduct.prototype['defaultPrice'] = undefined;

/**
 * Grace period of the subscription, specified in ISO 8601 format. Allows developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values are P0D (zero days), P3D (three days), P7D (seven days), P14D (14 days), and P30D (30 days).
 * @member {String} gracePeriod
 */
InAppProduct.prototype['gracePeriod'] = undefined;

/**
 * List of localized title and description data. Map key is the language of the localized data, as defined by BCP-47, e.g. \"en-US\".
 * @member {Object.<String, module:model/InAppProductListing>} listings
 */
InAppProduct.prototype['listings'] = undefined;

/**
 * @member {module:model/ManagedProductTaxAndComplianceSettings} managedProductTaxesAndComplianceSettings
 */
InAppProduct.prototype['managedProductTaxesAndComplianceSettings'] = undefined;

/**
 * Package name of the parent app.
 * @member {String} packageName
 */
InAppProduct.prototype['packageName'] = undefined;

/**
 * Prices per buyer region. None of these can be zero, as in-app products are never free. Map key is region code, as defined by ISO 3166-2.
 * @member {Object.<String, module:model/Price>} prices
 */
InAppProduct.prototype['prices'] = undefined;

/**
 * The type of the product, e.g. a recurring subscription.
 * @member {module:model/InAppProduct.PurchaseTypeEnum} purchaseType
 */
InAppProduct.prototype['purchaseType'] = undefined;

/**
 * Stock-keeping-unit (SKU) of the product, unique within an app.
 * @member {String} sku
 */
InAppProduct.prototype['sku'] = undefined;

/**
 * The status of the product, e.g. whether it's active.
 * @member {module:model/InAppProduct.StatusEnum} status
 */
InAppProduct.prototype['status'] = undefined;

/**
 * Subscription period, specified in ISO 8601 format. Acceptable values are P1W (one week), P1M (one month), P3M (three months), P6M (six months), and P1Y (one year).
 * @member {String} subscriptionPeriod
 */
InAppProduct.prototype['subscriptionPeriod'] = undefined;

/**
 * @member {module:model/SubscriptionTaxAndComplianceSettings} subscriptionTaxesAndComplianceSettings
 */
InAppProduct.prototype['subscriptionTaxesAndComplianceSettings'] = undefined;

/**
 * Trial period, specified in ISO 8601 format. Acceptable values are anything between P7D (seven days) and P999D (999 days).
 * @member {String} trialPeriod
 */
InAppProduct.prototype['trialPeriod'] = undefined;





/**
 * Allowed values for the <code>purchaseType</code> property.
 * @enum {String}
 * @readonly
 */
InAppProduct['PurchaseTypeEnum'] = {

    /**
     * value: "purchaseTypeUnspecified"
     * @const
     */
    "purchaseTypeUnspecified": "purchaseTypeUnspecified",

    /**
     * value: "managedUser"
     * @const
     */
    "managedUser": "managedUser",

    /**
     * value: "subscription"
     * @const
     */
    "subscription": "subscription"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
InAppProduct['StatusEnum'] = {

    /**
     * value: "statusUnspecified"
     * @const
     */
    "statusUnspecified": "statusUnspecified",

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive"
};



export default InAppProduct;

