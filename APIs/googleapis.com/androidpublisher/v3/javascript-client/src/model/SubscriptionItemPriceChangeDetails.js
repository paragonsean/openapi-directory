/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';

/**
 * The SubscriptionItemPriceChangeDetails model module.
 * @module model/SubscriptionItemPriceChangeDetails
 * @version v3
 */
class SubscriptionItemPriceChangeDetails {
    /**
     * Constructs a new <code>SubscriptionItemPriceChangeDetails</code>.
     * Price change related information of a subscription item.
     * @alias module:model/SubscriptionItemPriceChangeDetails
     */
    constructor() { 
        
        SubscriptionItemPriceChangeDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionItemPriceChangeDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionItemPriceChangeDetails} obj Optional instance to populate.
     * @return {module:model/SubscriptionItemPriceChangeDetails} The populated <code>SubscriptionItemPriceChangeDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionItemPriceChangeDetails();

            if (data.hasOwnProperty('expectedNewPriceChargeTime')) {
                obj['expectedNewPriceChargeTime'] = ApiClient.convertToType(data['expectedNewPriceChargeTime'], 'String');
            }
            if (data.hasOwnProperty('newPrice')) {
                obj['newPrice'] = Money.constructFromObject(data['newPrice']);
            }
            if (data.hasOwnProperty('priceChangeMode')) {
                obj['priceChangeMode'] = ApiClient.convertToType(data['priceChangeMode'], 'String');
            }
            if (data.hasOwnProperty('priceChangeState')) {
                obj['priceChangeState'] = ApiClient.convertToType(data['priceChangeState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionItemPriceChangeDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionItemPriceChangeDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['expectedNewPriceChargeTime'] && !(typeof data['expectedNewPriceChargeTime'] === 'string' || data['expectedNewPriceChargeTime'] instanceof String)) {
            throw new Error("Expected the field `expectedNewPriceChargeTime` to be a primitive type in the JSON string but got " + data['expectedNewPriceChargeTime']);
        }
        // validate the optional field `newPrice`
        if (data['newPrice']) { // data not null
          Money.validateJSON(data['newPrice']);
        }
        // ensure the json data is a string
        if (data['priceChangeMode'] && !(typeof data['priceChangeMode'] === 'string' || data['priceChangeMode'] instanceof String)) {
            throw new Error("Expected the field `priceChangeMode` to be a primitive type in the JSON string but got " + data['priceChangeMode']);
        }
        // ensure the json data is a string
        if (data['priceChangeState'] && !(typeof data['priceChangeState'] === 'string' || data['priceChangeState'] instanceof String)) {
            throw new Error("Expected the field `priceChangeState` to be a primitive type in the JSON string but got " + data['priceChangeState']);
        }

        return true;
    }


}



/**
 * The renewal time at which the price change will become effective for the user. This is subject to change(to a future time) due to cases where the renewal time shifts like pause. This field is only populated if the price change has not taken effect.
 * @member {String} expectedNewPriceChargeTime
 */
SubscriptionItemPriceChangeDetails.prototype['expectedNewPriceChargeTime'] = undefined;

/**
 * @member {module:model/Money} newPrice
 */
SubscriptionItemPriceChangeDetails.prototype['newPrice'] = undefined;

/**
 * Price change mode specifies how the subscription item price is changing.
 * @member {module:model/SubscriptionItemPriceChangeDetails.PriceChangeModeEnum} priceChangeMode
 */
SubscriptionItemPriceChangeDetails.prototype['priceChangeMode'] = undefined;

/**
 * State the price change is currently in.
 * @member {module:model/SubscriptionItemPriceChangeDetails.PriceChangeStateEnum} priceChangeState
 */
SubscriptionItemPriceChangeDetails.prototype['priceChangeState'] = undefined;





/**
 * Allowed values for the <code>priceChangeMode</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionItemPriceChangeDetails['PriceChangeModeEnum'] = {

    /**
     * value: "PRICE_CHANGE_MODE_UNSPECIFIED"
     * @const
     */
    "PRICE_CHANGE_MODE_UNSPECIFIED": "PRICE_CHANGE_MODE_UNSPECIFIED",

    /**
     * value: "PRICE_DECREASE"
     * @const
     */
    "PRICE_DECREASE": "PRICE_DECREASE",

    /**
     * value: "PRICE_INCREASE"
     * @const
     */
    "PRICE_INCREASE": "PRICE_INCREASE",

    /**
     * value: "OPT_OUT_PRICE_INCREASE"
     * @const
     */
    "OPT_OUT_PRICE_INCREASE": "OPT_OUT_PRICE_INCREASE"
};


/**
 * Allowed values for the <code>priceChangeState</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionItemPriceChangeDetails['PriceChangeStateEnum'] = {

    /**
     * value: "PRICE_CHANGE_STATE_UNSPECIFIED"
     * @const
     */
    "PRICE_CHANGE_STATE_UNSPECIFIED": "PRICE_CHANGE_STATE_UNSPECIFIED",

    /**
     * value: "OUTSTANDING"
     * @const
     */
    "OUTSTANDING": "OUTSTANDING",

    /**
     * value: "CONFIRMED"
     * @const
     */
    "CONFIRMED": "CONFIRMED",

    /**
     * value: "APPLIED"
     * @const
     */
    "APPLIED": "APPLIED"
};



export default SubscriptionItemPriceChangeDetails;

