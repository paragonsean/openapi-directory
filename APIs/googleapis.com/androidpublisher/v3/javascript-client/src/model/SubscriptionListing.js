/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionListing model module.
 * @module model/SubscriptionListing
 * @version v3
 */
class SubscriptionListing {
    /**
     * Constructs a new <code>SubscriptionListing</code>.
     * The consumer-visible metadata of a subscription.
     * @alias module:model/SubscriptionListing
     */
    constructor() { 
        
        SubscriptionListing.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionListing</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionListing} obj Optional instance to populate.
     * @return {module:model/SubscriptionListing} The populated <code>SubscriptionListing</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionListing();

            if (data.hasOwnProperty('benefits')) {
                obj['benefits'] = ApiClient.convertToType(data['benefits'], ['String']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionListing</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionListing</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['benefits'])) {
            throw new Error("Expected the field `benefits` to be an array in the JSON data but got " + data['benefits']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * A list of benefits shown to the user on platforms such as the Play Store and in restoration flows in the language of this listing. Plain text. Ordered list of at most four benefits.
 * @member {Array.<String>} benefits
 */
SubscriptionListing.prototype['benefits'] = undefined;

/**
 * The description of this subscription in the language of this listing. Maximum length - 80 characters. Plain text.
 * @member {String} description
 */
SubscriptionListing.prototype['description'] = undefined;

/**
 * Required. The language of this listing, as defined by BCP-47, e.g. \"en-US\".
 * @member {String} languageCode
 */
SubscriptionListing.prototype['languageCode'] = undefined;

/**
 * Required. The title of this subscription in the language of this listing. Plain text.
 * @member {String} title
 */
SubscriptionListing.prototype['title'] = undefined;






export default SubscriptionListing;

