/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Grant model module.
 * @module model/Grant
 * @version v3
 */
class Grant {
    /**
     * Constructs a new <code>Grant</code>.
     * An access grant resource.
     * @alias module:model/Grant
     */
    constructor() { 
        
        Grant.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Grant</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Grant} obj Optional instance to populate.
     * @return {module:model/Grant} The populated <code>Grant</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Grant();

            if (data.hasOwnProperty('appLevelPermissions')) {
                obj['appLevelPermissions'] = ApiClient.convertToType(data['appLevelPermissions'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('packageName')) {
                obj['packageName'] = ApiClient.convertToType(data['packageName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Grant</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Grant</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['appLevelPermissions'])) {
            throw new Error("Expected the field `appLevelPermissions` to be an array in the JSON data but got " + data['appLevelPermissions']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['packageName'] && !(typeof data['packageName'] === 'string' || data['packageName'] instanceof String)) {
            throw new Error("Expected the field `packageName` to be a primitive type in the JSON string but got " + data['packageName']);
        }

        return true;
    }


}



/**
 * The permissions granted to the user for this app.
 * @member {Array.<module:model/Grant.AppLevelPermissionsEnum>} appLevelPermissions
 */
Grant.prototype['appLevelPermissions'] = undefined;

/**
 * Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name.
 * @member {String} name
 */
Grant.prototype['name'] = undefined;

/**
 * Immutable. The package name of the app. This will be empty for draft apps.
 * @member {String} packageName
 */
Grant.prototype['packageName'] = undefined;





/**
 * Allowed values for the <code>appLevelPermissions</code> property.
 * @enum {String}
 * @readonly
 */
Grant['AppLevelPermissionsEnum'] = {

    /**
     * value: "APP_LEVEL_PERMISSION_UNSPECIFIED"
     * @const
     */
    "APP_LEVEL_PERMISSION_UNSPECIFIED": "APP_LEVEL_PERMISSION_UNSPECIFIED",

    /**
     * value: "CAN_ACCESS_APP"
     * @const
     */
    "CAN_ACCESS_APP": "CAN_ACCESS_APP",

    /**
     * value: "CAN_VIEW_FINANCIAL_DATA"
     * @const
     */
    "CAN_VIEW_FINANCIAL_DATA": "CAN_VIEW_FINANCIAL_DATA",

    /**
     * value: "CAN_MANAGE_PERMISSIONS"
     * @const
     */
    "CAN_MANAGE_PERMISSIONS": "CAN_MANAGE_PERMISSIONS",

    /**
     * value: "CAN_REPLY_TO_REVIEWS"
     * @const
     */
    "CAN_REPLY_TO_REVIEWS": "CAN_REPLY_TO_REVIEWS",

    /**
     * value: "CAN_MANAGE_PUBLIC_APKS"
     * @const
     */
    "CAN_MANAGE_PUBLIC_APKS": "CAN_MANAGE_PUBLIC_APKS",

    /**
     * value: "CAN_MANAGE_TRACK_APKS"
     * @const
     */
    "CAN_MANAGE_TRACK_APKS": "CAN_MANAGE_TRACK_APKS",

    /**
     * value: "CAN_MANAGE_TRACK_USERS"
     * @const
     */
    "CAN_MANAGE_TRACK_USERS": "CAN_MANAGE_TRACK_USERS",

    /**
     * value: "CAN_MANAGE_PUBLIC_LISTING"
     * @const
     */
    "CAN_MANAGE_PUBLIC_LISTING": "CAN_MANAGE_PUBLIC_LISTING",

    /**
     * value: "CAN_MANAGE_DRAFT_APPS"
     * @const
     */
    "CAN_MANAGE_DRAFT_APPS": "CAN_MANAGE_DRAFT_APPS",

    /**
     * value: "CAN_MANAGE_ORDERS"
     * @const
     */
    "CAN_MANAGE_ORDERS": "CAN_MANAGE_ORDERS",

    /**
     * value: "CAN_MANAGE_APP_CONTENT"
     * @const
     */
    "CAN_MANAGE_APP_CONTENT": "CAN_MANAGE_APP_CONTENT",

    /**
     * value: "CAN_VIEW_NON_FINANCIAL_DATA"
     * @const
     */
    "CAN_VIEW_NON_FINANCIAL_DATA": "CAN_VIEW_NON_FINANCIAL_DATA",

    /**
     * value: "CAN_VIEW_APP_QUALITY"
     * @const
     */
    "CAN_VIEW_APP_QUALITY": "CAN_VIEW_APP_QUALITY"
};



export default Grant;

