/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoRenewingPlan from './AutoRenewingPlan';
import DeferredItemReplacement from './DeferredItemReplacement';
import OfferDetails from './OfferDetails';
import PrepaidPlan from './PrepaidPlan';

/**
 * The SubscriptionPurchaseLineItem model module.
 * @module model/SubscriptionPurchaseLineItem
 * @version v3
 */
class SubscriptionPurchaseLineItem {
    /**
     * Constructs a new <code>SubscriptionPurchaseLineItem</code>.
     * Item-level info for a subscription purchase.
     * @alias module:model/SubscriptionPurchaseLineItem
     */
    constructor() { 
        
        SubscriptionPurchaseLineItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionPurchaseLineItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionPurchaseLineItem} obj Optional instance to populate.
     * @return {module:model/SubscriptionPurchaseLineItem} The populated <code>SubscriptionPurchaseLineItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionPurchaseLineItem();

            if (data.hasOwnProperty('autoRenewingPlan')) {
                obj['autoRenewingPlan'] = AutoRenewingPlan.constructFromObject(data['autoRenewingPlan']);
            }
            if (data.hasOwnProperty('deferredItemReplacement')) {
                obj['deferredItemReplacement'] = DeferredItemReplacement.constructFromObject(data['deferredItemReplacement']);
            }
            if (data.hasOwnProperty('expiryTime')) {
                obj['expiryTime'] = ApiClient.convertToType(data['expiryTime'], 'String');
            }
            if (data.hasOwnProperty('offerDetails')) {
                obj['offerDetails'] = OfferDetails.constructFromObject(data['offerDetails']);
            }
            if (data.hasOwnProperty('prepaidPlan')) {
                obj['prepaidPlan'] = PrepaidPlan.constructFromObject(data['prepaidPlan']);
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionPurchaseLineItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionPurchaseLineItem</code>.
     */
    static validateJSON(data) {
        // validate the optional field `autoRenewingPlan`
        if (data['autoRenewingPlan']) { // data not null
          AutoRenewingPlan.validateJSON(data['autoRenewingPlan']);
        }
        // validate the optional field `deferredItemReplacement`
        if (data['deferredItemReplacement']) { // data not null
          DeferredItemReplacement.validateJSON(data['deferredItemReplacement']);
        }
        // ensure the json data is a string
        if (data['expiryTime'] && !(typeof data['expiryTime'] === 'string' || data['expiryTime'] instanceof String)) {
            throw new Error("Expected the field `expiryTime` to be a primitive type in the JSON string but got " + data['expiryTime']);
        }
        // validate the optional field `offerDetails`
        if (data['offerDetails']) { // data not null
          OfferDetails.validateJSON(data['offerDetails']);
        }
        // validate the optional field `prepaidPlan`
        if (data['prepaidPlan']) { // data not null
          PrepaidPlan.validateJSON(data['prepaidPlan']);
        }
        // ensure the json data is a string
        if (data['productId'] && !(typeof data['productId'] === 'string' || data['productId'] instanceof String)) {
            throw new Error("Expected the field `productId` to be a primitive type in the JSON string but got " + data['productId']);
        }

        return true;
    }


}



/**
 * @member {module:model/AutoRenewingPlan} autoRenewingPlan
 */
SubscriptionPurchaseLineItem.prototype['autoRenewingPlan'] = undefined;

/**
 * @member {module:model/DeferredItemReplacement} deferredItemReplacement
 */
SubscriptionPurchaseLineItem.prototype['deferredItemReplacement'] = undefined;

/**
 * Time at which the subscription expired or will expire unless the access is extended (ex. renews).
 * @member {String} expiryTime
 */
SubscriptionPurchaseLineItem.prototype['expiryTime'] = undefined;

/**
 * @member {module:model/OfferDetails} offerDetails
 */
SubscriptionPurchaseLineItem.prototype['offerDetails'] = undefined;

/**
 * @member {module:model/PrepaidPlan} prepaidPlan
 */
SubscriptionPurchaseLineItem.prototype['prepaidPlan'] = undefined;

/**
 * The purchased product ID (for example, 'monthly001').
 * @member {String} productId
 */
SubscriptionPurchaseLineItem.prototype['productId'] = undefined;






export default SubscriptionPurchaseLineItem;

