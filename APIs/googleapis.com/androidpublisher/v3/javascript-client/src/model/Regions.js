/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Regions model module.
 * @module model/Regions
 * @version v3
 */
class Regions {
    /**
     * Constructs a new <code>Regions</code>.
     * Region targeting data for app recovery action targeting.
     * @alias module:model/Regions
     */
    constructor() { 
        
        Regions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Regions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Regions} obj Optional instance to populate.
     * @return {module:model/Regions} The populated <code>Regions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Regions();

            if (data.hasOwnProperty('regionCode')) {
                obj['regionCode'] = ApiClient.convertToType(data['regionCode'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Regions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Regions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['regionCode'])) {
            throw new Error("Expected the field `regionCode` to be an array in the JSON data but got " + data['regionCode']);
        }

        return true;
    }


}



/**
 * Regions targeted by the recovery action. Region codes are ISO 3166 Alpha-2 country codes. For example, US stands for United States of America. See https://www.iso.org/iso-3166-country-codes.html for the complete list of country codes.
 * @member {Array.<String>} regionCode
 */
Regions.prototype['regionCode'] = undefined;






export default Regions;

