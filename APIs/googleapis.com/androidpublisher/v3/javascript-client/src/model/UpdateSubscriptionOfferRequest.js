/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RegionsVersion from './RegionsVersion';
import SubscriptionOffer from './SubscriptionOffer';

/**
 * The UpdateSubscriptionOfferRequest model module.
 * @module model/UpdateSubscriptionOfferRequest
 * @version v3
 */
class UpdateSubscriptionOfferRequest {
    /**
     * Constructs a new <code>UpdateSubscriptionOfferRequest</code>.
     * Request message for UpdateSubscriptionOffer.
     * @alias module:model/UpdateSubscriptionOfferRequest
     */
    constructor() { 
        
        UpdateSubscriptionOfferRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateSubscriptionOfferRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSubscriptionOfferRequest} obj Optional instance to populate.
     * @return {module:model/UpdateSubscriptionOfferRequest} The populated <code>UpdateSubscriptionOfferRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSubscriptionOfferRequest();

            if (data.hasOwnProperty('allowMissing')) {
                obj['allowMissing'] = ApiClient.convertToType(data['allowMissing'], 'Boolean');
            }
            if (data.hasOwnProperty('latencyTolerance')) {
                obj['latencyTolerance'] = ApiClient.convertToType(data['latencyTolerance'], 'String');
            }
            if (data.hasOwnProperty('regionsVersion')) {
                obj['regionsVersion'] = RegionsVersion.constructFromObject(data['regionsVersion']);
            }
            if (data.hasOwnProperty('subscriptionOffer')) {
                obj['subscriptionOffer'] = SubscriptionOffer.constructFromObject(data['subscriptionOffer']);
            }
            if (data.hasOwnProperty('updateMask')) {
                obj['updateMask'] = ApiClient.convertToType(data['updateMask'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateSubscriptionOfferRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateSubscriptionOfferRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['latencyTolerance'] && !(typeof data['latencyTolerance'] === 'string' || data['latencyTolerance'] instanceof String)) {
            throw new Error("Expected the field `latencyTolerance` to be a primitive type in the JSON string but got " + data['latencyTolerance']);
        }
        // validate the optional field `regionsVersion`
        if (data['regionsVersion']) { // data not null
          RegionsVersion.validateJSON(data['regionsVersion']);
        }
        // validate the optional field `subscriptionOffer`
        if (data['subscriptionOffer']) { // data not null
          SubscriptionOffer.validateJSON(data['subscriptionOffer']);
        }
        // ensure the json data is a string
        if (data['updateMask'] && !(typeof data['updateMask'] === 'string' || data['updateMask'] instanceof String)) {
            throw new Error("Expected the field `updateMask` to be a primitive type in the JSON string but got " + data['updateMask']);
        }

        return true;
    }


}



/**
 * Optional. If set to true, and the subscription offer with the given package_name, product_id, base_plan_id and offer_id doesn't exist, an offer will be created. If a new offer is created, update_mask is ignored.
 * @member {Boolean} allowMissing
 */
UpdateSubscriptionOfferRequest.prototype['allowMissing'] = undefined;

/**
 * Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive.
 * @member {module:model/UpdateSubscriptionOfferRequest.LatencyToleranceEnum} latencyTolerance
 */
UpdateSubscriptionOfferRequest.prototype['latencyTolerance'] = undefined;

/**
 * @member {module:model/RegionsVersion} regionsVersion
 */
UpdateSubscriptionOfferRequest.prototype['regionsVersion'] = undefined;

/**
 * @member {module:model/SubscriptionOffer} subscriptionOffer
 */
UpdateSubscriptionOfferRequest.prototype['subscriptionOffer'] = undefined;

/**
 * Required. The list of fields to be updated.
 * @member {String} updateMask
 */
UpdateSubscriptionOfferRequest.prototype['updateMask'] = undefined;





/**
 * Allowed values for the <code>latencyTolerance</code> property.
 * @enum {String}
 * @readonly
 */
UpdateSubscriptionOfferRequest['LatencyToleranceEnum'] = {

    /**
     * value: "PRODUCT_UPDATE_LATENCY_TOLERANCE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "PRODUCT_UPDATE_LATENCY_TOLERANCE_UNSPECIFIED",

    /**
     * value: "PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_SENSITIVE"
     * @const
     */
    "LATENCY_SENSITIVE": "PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_SENSITIVE",

    /**
     * value: "PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT"
     * @const
     */
    "LATENCY_TOLERANT": "PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT"
};



export default UpdateSubscriptionOfferRequest;

