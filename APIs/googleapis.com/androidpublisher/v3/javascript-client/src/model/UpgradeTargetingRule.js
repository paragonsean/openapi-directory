/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TargetingRuleScope from './TargetingRuleScope';

/**
 * The UpgradeTargetingRule model module.
 * @module model/UpgradeTargetingRule
 * @version v3
 */
class UpgradeTargetingRule {
    /**
     * Constructs a new <code>UpgradeTargetingRule</code>.
     * Represents a targeting rule of the form: User currently has {scope} [with billing period {billing_period}].
     * @alias module:model/UpgradeTargetingRule
     */
    constructor() { 
        
        UpgradeTargetingRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpgradeTargetingRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpgradeTargetingRule} obj Optional instance to populate.
     * @return {module:model/UpgradeTargetingRule} The populated <code>UpgradeTargetingRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpgradeTargetingRule();

            if (data.hasOwnProperty('billingPeriodDuration')) {
                obj['billingPeriodDuration'] = ApiClient.convertToType(data['billingPeriodDuration'], 'String');
            }
            if (data.hasOwnProperty('oncePerUser')) {
                obj['oncePerUser'] = ApiClient.convertToType(data['oncePerUser'], 'Boolean');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = TargetingRuleScope.constructFromObject(data['scope']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpgradeTargetingRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpgradeTargetingRule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['billingPeriodDuration'] && !(typeof data['billingPeriodDuration'] === 'string' || data['billingPeriodDuration'] instanceof String)) {
            throw new Error("Expected the field `billingPeriodDuration` to be a primitive type in the JSON string but got " + data['billingPeriodDuration']);
        }
        // validate the optional field `scope`
        if (data['scope']) { // data not null
          TargetingRuleScope.validateJSON(data['scope']);
        }

        return true;
    }


}



/**
 * The specific billing period duration, specified in ISO 8601 format, that a user must be currently subscribed to to be eligible for this rule. If not specified, users subscribed to any billing period are matched.
 * @member {String} billingPeriodDuration
 */
UpgradeTargetingRule.prototype['billingPeriodDuration'] = undefined;

/**
 * Limit this offer to only once per user. If set to true, a user can never be eligible for this offer again if they ever subscribed to this offer.
 * @member {Boolean} oncePerUser
 */
UpgradeTargetingRule.prototype['oncePerUser'] = undefined;

/**
 * @member {module:model/TargetingRuleScope} scope
 */
UpgradeTargetingRule.prototype['scope'] = undefined;






export default UpgradeTargetingRule;

