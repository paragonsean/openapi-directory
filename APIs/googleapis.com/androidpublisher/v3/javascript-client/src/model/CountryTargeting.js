/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CountryTargeting model module.
 * @module model/CountryTargeting
 * @version v3
 */
class CountryTargeting {
    /**
     * Constructs a new <code>CountryTargeting</code>.
     * Country targeting specification.
     * @alias module:model/CountryTargeting
     */
    constructor() { 
        
        CountryTargeting.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CountryTargeting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CountryTargeting} obj Optional instance to populate.
     * @return {module:model/CountryTargeting} The populated <code>CountryTargeting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CountryTargeting();

            if (data.hasOwnProperty('countries')) {
                obj['countries'] = ApiClient.convertToType(data['countries'], ['String']);
            }
            if (data.hasOwnProperty('includeRestOfWorld')) {
                obj['includeRestOfWorld'] = ApiClient.convertToType(data['includeRestOfWorld'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CountryTargeting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CountryTargeting</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['countries'])) {
            throw new Error("Expected the field `countries` to be an array in the JSON data but got " + data['countries']);
        }

        return true;
    }


}



/**
 * Countries to target, specified as two letter [CLDR codes](https://unicode.org/cldr/charts/latest/supplemental/territory_containment_un_m_49.html).
 * @member {Array.<String>} countries
 */
CountryTargeting.prototype['countries'] = undefined;

/**
 * Include \"rest of world\" as well as explicitly targeted countries.
 * @member {Boolean} includeRestOfWorld
 */
CountryTargeting.prototype['includeRestOfWorld'] = undefined;






export default CountryTargeting;

