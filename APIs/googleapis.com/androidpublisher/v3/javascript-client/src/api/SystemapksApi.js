/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SystemApksListResponse from '../model/SystemApksListResponse';
import Variant from '../model/Variant';

/**
* Systemapks service.
* @module api/SystemapksApi
* @version v3
*/
export default class SystemapksApi {

    /**
    * Constructs a new SystemapksApi. 
    * @alias module:api/SystemapksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the androidpublisherSystemapksVariantsCreate operation.
     * @callback module:api/SystemapksApi~androidpublisherSystemapksVariantsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Variant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an APK which is suitable for inclusion in a system image from an already uploaded Android App Bundle.
     * @param {String} packageName Package name of the app.
     * @param {String} versionCode The version code of the App Bundle.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/Variant} [variant] 
     * @param {module:api/SystemapksApi~androidpublisherSystemapksVariantsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Variant}
     */
    androidpublisherSystemapksVariantsCreate(packageName, versionCode, opts, callback) {
      opts = opts || {};
      let postBody = opts['variant'];
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherSystemapksVariantsCreate");
      }
      // verify the required parameter 'versionCode' is set
      if (versionCode === undefined || versionCode === null) {
        throw new Error("Missing the required parameter 'versionCode' when calling androidpublisherSystemapksVariantsCreate");
      }

      let pathParams = {
        'packageName': packageName,
        'versionCode': versionCode
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Variant;
      return this.apiClient.callApi(
        '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the androidpublisherSystemapksVariantsDownload operation.
     * @callback module:api/SystemapksApi~androidpublisherSystemapksVariantsDownloadCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Downloads a previously created system APK which is suitable for inclusion in a system image.
     * @param {String} packageName Package name of the app.
     * @param {String} versionCode The version code of the App Bundle.
     * @param {Number} variantId The ID of a previously created system APK variant.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/SystemapksApi~androidpublisherSystemapksVariantsDownloadCallback} callback The callback function, accepting three arguments: error, data, response
     */
    androidpublisherSystemapksVariantsDownload(packageName, versionCode, variantId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherSystemapksVariantsDownload");
      }
      // verify the required parameter 'versionCode' is set
      if (versionCode === undefined || versionCode === null) {
        throw new Error("Missing the required parameter 'versionCode' when calling androidpublisherSystemapksVariantsDownload");
      }
      // verify the required parameter 'variantId' is set
      if (variantId === undefined || variantId === null) {
        throw new Error("Missing the required parameter 'variantId' when calling androidpublisherSystemapksVariantsDownload");
      }

      let pathParams = {
        'packageName': packageName,
        'versionCode': versionCode,
        'variantId': variantId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}:download', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the androidpublisherSystemapksVariantsGet operation.
     * @callback module:api/SystemapksApi~androidpublisherSystemapksVariantsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Variant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a previously created system APK variant.
     * @param {String} packageName Package name of the app.
     * @param {String} versionCode The version code of the App Bundle.
     * @param {Number} variantId The ID of a previously created system APK variant.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/SystemapksApi~androidpublisherSystemapksVariantsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Variant}
     */
    androidpublisherSystemapksVariantsGet(packageName, versionCode, variantId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherSystemapksVariantsGet");
      }
      // verify the required parameter 'versionCode' is set
      if (versionCode === undefined || versionCode === null) {
        throw new Error("Missing the required parameter 'versionCode' when calling androidpublisherSystemapksVariantsGet");
      }
      // verify the required parameter 'variantId' is set
      if (variantId === undefined || variantId === null) {
        throw new Error("Missing the required parameter 'variantId' when calling androidpublisherSystemapksVariantsGet");
      }

      let pathParams = {
        'packageName': packageName,
        'versionCode': versionCode,
        'variantId': variantId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Variant;
      return this.apiClient.callApi(
        '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the androidpublisherSystemapksVariantsList operation.
     * @callback module:api/SystemapksApi~androidpublisherSystemapksVariantsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SystemApksListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of previously created system APK variants.
     * @param {String} packageName Package name of the app.
     * @param {String} versionCode The version code of the App Bundle.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/SystemapksApi~androidpublisherSystemapksVariantsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SystemApksListResponse}
     */
    androidpublisherSystemapksVariantsList(packageName, versionCode, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherSystemapksVariantsList");
      }
      // verify the required parameter 'versionCode' is set
      if (versionCode === undefined || versionCode === null) {
        throw new Error("Missing the required parameter 'versionCode' when calling androidpublisherSystemapksVariantsList");
      }

      let pathParams = {
        'packageName': packageName,
        'versionCode': versionCode
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SystemApksListResponse;
      return this.apiClient.callApi(
        '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
