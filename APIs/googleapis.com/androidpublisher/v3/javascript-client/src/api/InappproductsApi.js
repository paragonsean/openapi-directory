/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InAppProduct from '../model/InAppProduct';
import InappproductsBatchDeleteRequest from '../model/InappproductsBatchDeleteRequest';
import InappproductsBatchGetResponse from '../model/InappproductsBatchGetResponse';
import InappproductsBatchUpdateRequest from '../model/InappproductsBatchUpdateRequest';
import InappproductsBatchUpdateResponse from '../model/InappproductsBatchUpdateResponse';
import InappproductsListResponse from '../model/InappproductsListResponse';

/**
* Inappproducts service.
* @module api/InappproductsApi
* @version v3
*/
export default class InappproductsApi {

    /**
    * Constructs a new InappproductsApi. 
    * @alias module:api/InappproductsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the androidpublisherInappproductsBatchDelete operation.
     * @callback module:api/InappproductsApi~androidpublisherInappproductsBatchDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes in-app products (managed products or subscriptions). Set the latencyTolerance field on nested requests to PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT to achieve maximum update throughput. This method should not be used to delete subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     * @param {String} packageName Package name of the app.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/InappproductsBatchDeleteRequest} [inappproductsBatchDeleteRequest] 
     * @param {module:api/InappproductsApi~androidpublisherInappproductsBatchDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    androidpublisherInappproductsBatchDelete(packageName, opts, callback) {
      opts = opts || {};
      let postBody = opts['inappproductsBatchDeleteRequest'];
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherInappproductsBatchDelete");
      }

      let pathParams = {
        'packageName': packageName
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/androidpublisher/v3/applications/{packageName}/inappproducts:batchDelete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the androidpublisherInappproductsBatchGet operation.
     * @callback module:api/InappproductsApi~androidpublisherInappproductsBatchGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InappproductsBatchGetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reads multiple in-app products, which can be managed products or subscriptions. This method should not be used to retrieve subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     * @param {String} packageName Package name of the app.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Array.<String>} [sku] Unique identifier for the in-app products.
     * @param {module:api/InappproductsApi~androidpublisherInappproductsBatchGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InappproductsBatchGetResponse}
     */
    androidpublisherInappproductsBatchGet(packageName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherInappproductsBatchGet");
      }

      let pathParams = {
        'packageName': packageName
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'sku': this.apiClient.buildCollectionParam(opts['sku'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InappproductsBatchGetResponse;
      return this.apiClient.callApi(
        '/androidpublisher/v3/applications/{packageName}/inappproducts:batchGet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the androidpublisherInappproductsBatchUpdate operation.
     * @callback module:api/InappproductsApi~androidpublisherInappproductsBatchUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InappproductsBatchUpdateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates or inserts one or more in-app products (managed products or subscriptions). Set the latencyTolerance field on nested requests to PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT to achieve maximum update throughput. This method should no longer be used to update subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     * @param {String} packageName Package name of the app.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/InappproductsBatchUpdateRequest} [inappproductsBatchUpdateRequest] 
     * @param {module:api/InappproductsApi~androidpublisherInappproductsBatchUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InappproductsBatchUpdateResponse}
     */
    androidpublisherInappproductsBatchUpdate(packageName, opts, callback) {
      opts = opts || {};
      let postBody = opts['inappproductsBatchUpdateRequest'];
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherInappproductsBatchUpdate");
      }

      let pathParams = {
        'packageName': packageName
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InappproductsBatchUpdateResponse;
      return this.apiClient.callApi(
        '/androidpublisher/v3/applications/{packageName}/inappproducts:batchUpdate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the androidpublisherInappproductsDelete operation.
     * @callback module:api/InappproductsApi~androidpublisherInappproductsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an in-app product (a managed product or a subscription). This method should no longer be used to delete subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     * @param {String} packageName Package name of the app.
     * @param {String} sku Unique identifier for the in-app product.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [latencyTolerance] Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive.
     * @param {module:api/InappproductsApi~androidpublisherInappproductsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    androidpublisherInappproductsDelete(packageName, sku, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherInappproductsDelete");
      }
      // verify the required parameter 'sku' is set
      if (sku === undefined || sku === null) {
        throw new Error("Missing the required parameter 'sku' when calling androidpublisherInappproductsDelete");
      }

      let pathParams = {
        'packageName': packageName,
        'sku': sku
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'latencyTolerance': opts['latencyTolerance']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/androidpublisher/v3/applications/{packageName}/inappproducts/{sku}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the androidpublisherInappproductsGet operation.
     * @callback module:api/InappproductsApi~androidpublisherInappproductsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppProduct} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an in-app product, which can be a managed product or a subscription. This method should no longer be used to retrieve subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     * @param {String} packageName Package name of the app.
     * @param {String} sku Unique identifier for the in-app product.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/InappproductsApi~androidpublisherInappproductsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppProduct}
     */
    androidpublisherInappproductsGet(packageName, sku, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherInappproductsGet");
      }
      // verify the required parameter 'sku' is set
      if (sku === undefined || sku === null) {
        throw new Error("Missing the required parameter 'sku' when calling androidpublisherInappproductsGet");
      }

      let pathParams = {
        'packageName': packageName,
        'sku': sku
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppProduct;
      return this.apiClient.callApi(
        '/androidpublisher/v3/applications/{packageName}/inappproducts/{sku}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the androidpublisherInappproductsInsert operation.
     * @callback module:api/InappproductsApi~androidpublisherInappproductsInsertCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppProduct} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an in-app product (a managed product or a subscription). This method should no longer be used to create subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     * @param {String} packageName Package name of the app.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [autoConvertMissingPrices] If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false.
     * @param {module:model/InAppProduct} [inAppProduct] 
     * @param {module:api/InappproductsApi~androidpublisherInappproductsInsertCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppProduct}
     */
    androidpublisherInappproductsInsert(packageName, opts, callback) {
      opts = opts || {};
      let postBody = opts['inAppProduct'];
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherInappproductsInsert");
      }

      let pathParams = {
        'packageName': packageName
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'autoConvertMissingPrices': opts['autoConvertMissingPrices']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InAppProduct;
      return this.apiClient.callApi(
        '/androidpublisher/v3/applications/{packageName}/inappproducts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the androidpublisherInappproductsList operation.
     * @callback module:api/InappproductsApi~androidpublisherInappproductsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InappproductsListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all in-app products - both managed products and subscriptions. If an app has a large number of in-app products, the response may be paginated. In this case the response field `tokenPagination.nextPageToken` will be set and the caller should provide its value as a `token` request parameter to retrieve the next page. This method should no longer be used to retrieve subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     * @param {String} packageName Package name of the app.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [maxResults] Deprecated and ignored. The page size is determined by the server.
     * @param {Number} [startIndex] Deprecated and ignored. Set the `token` parameter to retrieve the next page.
     * @param {String} [token] Pagination token. If empty, list starts at the first product.
     * @param {module:api/InappproductsApi~androidpublisherInappproductsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InappproductsListResponse}
     */
    androidpublisherInappproductsList(packageName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherInappproductsList");
      }

      let pathParams = {
        'packageName': packageName
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'maxResults': opts['maxResults'],
        'startIndex': opts['startIndex'],
        'token': opts['token']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InappproductsListResponse;
      return this.apiClient.callApi(
        '/androidpublisher/v3/applications/{packageName}/inappproducts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the androidpublisherInappproductsPatch operation.
     * @callback module:api/InappproductsApi~androidpublisherInappproductsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppProduct} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Patches an in-app product (a managed product or a subscription). This method should no longer be used to update subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     * @param {String} packageName Package name of the app.
     * @param {String} sku Unique identifier for the in-app product.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [autoConvertMissingPrices] If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false.
     * @param {module:model/String} [latencyTolerance] Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive.
     * @param {module:model/InAppProduct} [inAppProduct] 
     * @param {module:api/InappproductsApi~androidpublisherInappproductsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppProduct}
     */
    androidpublisherInappproductsPatch(packageName, sku, opts, callback) {
      opts = opts || {};
      let postBody = opts['inAppProduct'];
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherInappproductsPatch");
      }
      // verify the required parameter 'sku' is set
      if (sku === undefined || sku === null) {
        throw new Error("Missing the required parameter 'sku' when calling androidpublisherInappproductsPatch");
      }

      let pathParams = {
        'packageName': packageName,
        'sku': sku
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'autoConvertMissingPrices': opts['autoConvertMissingPrices'],
        'latencyTolerance': opts['latencyTolerance']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InAppProduct;
      return this.apiClient.callApi(
        '/androidpublisher/v3/applications/{packageName}/inappproducts/{sku}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the androidpublisherInappproductsUpdate operation.
     * @callback module:api/InappproductsApi~androidpublisherInappproductsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppProduct} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an in-app product (a managed product or a subscription). This method should no longer be used to update subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.
     * @param {String} packageName Package name of the app.
     * @param {String} sku Unique identifier for the in-app product.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [allowMissing] If set to true, and the in-app product with the given package_name and sku doesn't exist, the in-app product will be created.
     * @param {Boolean} [autoConvertMissingPrices] If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false.
     * @param {module:model/String} [latencyTolerance] Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive.
     * @param {module:model/InAppProduct} [inAppProduct] 
     * @param {module:api/InappproductsApi~androidpublisherInappproductsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppProduct}
     */
    androidpublisherInappproductsUpdate(packageName, sku, opts, callback) {
      opts = opts || {};
      let postBody = opts['inAppProduct'];
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherInappproductsUpdate");
      }
      // verify the required parameter 'sku' is set
      if (sku === undefined || sku === null) {
        throw new Error("Missing the required parameter 'sku' when calling androidpublisherInappproductsUpdate");
      }

      let pathParams = {
        'packageName': packageName,
        'sku': sku
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'allowMissing': opts['allowMissing'],
        'autoConvertMissingPrices': opts['autoConvertMissingPrices'],
        'latencyTolerance': opts['latencyTolerance']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InAppProduct;
      return this.apiClient.callApi(
        '/androidpublisher/v3/applications/{packageName}/inappproducts/{sku}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
