/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExternalAccountIdentifiers.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExternalAccountIdentifiers::OAIExternalAccountIdentifiers(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExternalAccountIdentifiers::OAIExternalAccountIdentifiers() {
    this->initializeModel();
}

OAIExternalAccountIdentifiers::~OAIExternalAccountIdentifiers() {}

void OAIExternalAccountIdentifiers::initializeModel() {

    m_external_account_id_isSet = false;
    m_external_account_id_isValid = false;

    m_obfuscated_external_account_id_isSet = false;
    m_obfuscated_external_account_id_isValid = false;

    m_obfuscated_external_profile_id_isSet = false;
    m_obfuscated_external_profile_id_isValid = false;
}

void OAIExternalAccountIdentifiers::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExternalAccountIdentifiers::fromJsonObject(QJsonObject json) {

    m_external_account_id_isValid = ::OpenAPI::fromJsonValue(m_external_account_id, json[QString("externalAccountId")]);
    m_external_account_id_isSet = !json[QString("externalAccountId")].isNull() && m_external_account_id_isValid;

    m_obfuscated_external_account_id_isValid = ::OpenAPI::fromJsonValue(m_obfuscated_external_account_id, json[QString("obfuscatedExternalAccountId")]);
    m_obfuscated_external_account_id_isSet = !json[QString("obfuscatedExternalAccountId")].isNull() && m_obfuscated_external_account_id_isValid;

    m_obfuscated_external_profile_id_isValid = ::OpenAPI::fromJsonValue(m_obfuscated_external_profile_id, json[QString("obfuscatedExternalProfileId")]);
    m_obfuscated_external_profile_id_isSet = !json[QString("obfuscatedExternalProfileId")].isNull() && m_obfuscated_external_profile_id_isValid;
}

QString OAIExternalAccountIdentifiers::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExternalAccountIdentifiers::asJsonObject() const {
    QJsonObject obj;
    if (m_external_account_id_isSet) {
        obj.insert(QString("externalAccountId"), ::OpenAPI::toJsonValue(m_external_account_id));
    }
    if (m_obfuscated_external_account_id_isSet) {
        obj.insert(QString("obfuscatedExternalAccountId"), ::OpenAPI::toJsonValue(m_obfuscated_external_account_id));
    }
    if (m_obfuscated_external_profile_id_isSet) {
        obj.insert(QString("obfuscatedExternalProfileId"), ::OpenAPI::toJsonValue(m_obfuscated_external_profile_id));
    }
    return obj;
}

QString OAIExternalAccountIdentifiers::getExternalAccountId() const {
    return m_external_account_id;
}
void OAIExternalAccountIdentifiers::setExternalAccountId(const QString &external_account_id) {
    m_external_account_id = external_account_id;
    m_external_account_id_isSet = true;
}

bool OAIExternalAccountIdentifiers::is_external_account_id_Set() const{
    return m_external_account_id_isSet;
}

bool OAIExternalAccountIdentifiers::is_external_account_id_Valid() const{
    return m_external_account_id_isValid;
}

QString OAIExternalAccountIdentifiers::getObfuscatedExternalAccountId() const {
    return m_obfuscated_external_account_id;
}
void OAIExternalAccountIdentifiers::setObfuscatedExternalAccountId(const QString &obfuscated_external_account_id) {
    m_obfuscated_external_account_id = obfuscated_external_account_id;
    m_obfuscated_external_account_id_isSet = true;
}

bool OAIExternalAccountIdentifiers::is_obfuscated_external_account_id_Set() const{
    return m_obfuscated_external_account_id_isSet;
}

bool OAIExternalAccountIdentifiers::is_obfuscated_external_account_id_Valid() const{
    return m_obfuscated_external_account_id_isValid;
}

QString OAIExternalAccountIdentifiers::getObfuscatedExternalProfileId() const {
    return m_obfuscated_external_profile_id;
}
void OAIExternalAccountIdentifiers::setObfuscatedExternalProfileId(const QString &obfuscated_external_profile_id) {
    m_obfuscated_external_profile_id = obfuscated_external_profile_id;
    m_obfuscated_external_profile_id_isSet = true;
}

bool OAIExternalAccountIdentifiers::is_obfuscated_external_profile_id_Set() const{
    return m_obfuscated_external_profile_id_isSet;
}

bool OAIExternalAccountIdentifiers::is_obfuscated_external_profile_id_Valid() const{
    return m_obfuscated_external_profile_id_isValid;
}

bool OAIExternalAccountIdentifiers::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_external_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_obfuscated_external_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_obfuscated_external_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExternalAccountIdentifiers::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
