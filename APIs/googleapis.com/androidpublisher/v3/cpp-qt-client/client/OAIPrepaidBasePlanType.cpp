/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrepaidBasePlanType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrepaidBasePlanType::OAIPrepaidBasePlanType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrepaidBasePlanType::OAIPrepaidBasePlanType() {
    this->initializeModel();
}

OAIPrepaidBasePlanType::~OAIPrepaidBasePlanType() {}

void OAIPrepaidBasePlanType::initializeModel() {

    m_billing_period_duration_isSet = false;
    m_billing_period_duration_isValid = false;

    m_time_extension_isSet = false;
    m_time_extension_isValid = false;
}

void OAIPrepaidBasePlanType::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPrepaidBasePlanType::fromJsonObject(QJsonObject json) {

    m_billing_period_duration_isValid = ::OpenAPI::fromJsonValue(m_billing_period_duration, json[QString("billingPeriodDuration")]);
    m_billing_period_duration_isSet = !json[QString("billingPeriodDuration")].isNull() && m_billing_period_duration_isValid;

    m_time_extension_isValid = ::OpenAPI::fromJsonValue(m_time_extension, json[QString("timeExtension")]);
    m_time_extension_isSet = !json[QString("timeExtension")].isNull() && m_time_extension_isValid;
}

QString OAIPrepaidBasePlanType::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPrepaidBasePlanType::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_period_duration_isSet) {
        obj.insert(QString("billingPeriodDuration"), ::OpenAPI::toJsonValue(m_billing_period_duration));
    }
    if (m_time_extension_isSet) {
        obj.insert(QString("timeExtension"), ::OpenAPI::toJsonValue(m_time_extension));
    }
    return obj;
}

QString OAIPrepaidBasePlanType::getBillingPeriodDuration() const {
    return m_billing_period_duration;
}
void OAIPrepaidBasePlanType::setBillingPeriodDuration(const QString &billing_period_duration) {
    m_billing_period_duration = billing_period_duration;
    m_billing_period_duration_isSet = true;
}

bool OAIPrepaidBasePlanType::is_billing_period_duration_Set() const{
    return m_billing_period_duration_isSet;
}

bool OAIPrepaidBasePlanType::is_billing_period_duration_Valid() const{
    return m_billing_period_duration_isValid;
}

QString OAIPrepaidBasePlanType::getTimeExtension() const {
    return m_time_extension;
}
void OAIPrepaidBasePlanType::setTimeExtension(const QString &time_extension) {
    m_time_extension = time_extension;
    m_time_extension_isSet = true;
}

bool OAIPrepaidBasePlanType::is_time_extension_Set() const{
    return m_time_extension_isSet;
}

bool OAIPrepaidBasePlanType::is_time_extension_Valid() const{
    return m_time_extension_isValid;
}

bool OAIPrepaidBasePlanType::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_period_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_extension_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPrepaidBasePlanType::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
