/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRefundExternalTransactionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRefundExternalTransactionRequest::OAIRefundExternalTransactionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRefundExternalTransactionRequest::OAIRefundExternalTransactionRequest() {
    this->initializeModel();
}

OAIRefundExternalTransactionRequest::~OAIRefundExternalTransactionRequest() {}

void OAIRefundExternalTransactionRequest::initializeModel() {

    m_full_refund_isSet = false;
    m_full_refund_isValid = false;

    m_partial_refund_isSet = false;
    m_partial_refund_isValid = false;

    m_refund_time_isSet = false;
    m_refund_time_isValid = false;
}

void OAIRefundExternalTransactionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRefundExternalTransactionRequest::fromJsonObject(QJsonObject json) {

    m_full_refund_isValid = ::OpenAPI::fromJsonValue(m_full_refund, json[QString("fullRefund")]);
    m_full_refund_isSet = !json[QString("fullRefund")].isNull() && m_full_refund_isValid;

    m_partial_refund_isValid = ::OpenAPI::fromJsonValue(m_partial_refund, json[QString("partialRefund")]);
    m_partial_refund_isSet = !json[QString("partialRefund")].isNull() && m_partial_refund_isValid;

    m_refund_time_isValid = ::OpenAPI::fromJsonValue(m_refund_time, json[QString("refundTime")]);
    m_refund_time_isSet = !json[QString("refundTime")].isNull() && m_refund_time_isValid;
}

QString OAIRefundExternalTransactionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRefundExternalTransactionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_full_refund_isSet) {
        obj.insert(QString("fullRefund"), ::OpenAPI::toJsonValue(m_full_refund));
    }
    if (m_partial_refund.isSet()) {
        obj.insert(QString("partialRefund"), ::OpenAPI::toJsonValue(m_partial_refund));
    }
    if (m_refund_time_isSet) {
        obj.insert(QString("refundTime"), ::OpenAPI::toJsonValue(m_refund_time));
    }
    return obj;
}

OAIObject OAIRefundExternalTransactionRequest::getFullRefund() const {
    return m_full_refund;
}
void OAIRefundExternalTransactionRequest::setFullRefund(const OAIObject &full_refund) {
    m_full_refund = full_refund;
    m_full_refund_isSet = true;
}

bool OAIRefundExternalTransactionRequest::is_full_refund_Set() const{
    return m_full_refund_isSet;
}

bool OAIRefundExternalTransactionRequest::is_full_refund_Valid() const{
    return m_full_refund_isValid;
}

OAIPartialRefund OAIRefundExternalTransactionRequest::getPartialRefund() const {
    return m_partial_refund;
}
void OAIRefundExternalTransactionRequest::setPartialRefund(const OAIPartialRefund &partial_refund) {
    m_partial_refund = partial_refund;
    m_partial_refund_isSet = true;
}

bool OAIRefundExternalTransactionRequest::is_partial_refund_Set() const{
    return m_partial_refund_isSet;
}

bool OAIRefundExternalTransactionRequest::is_partial_refund_Valid() const{
    return m_partial_refund_isValid;
}

QString OAIRefundExternalTransactionRequest::getRefundTime() const {
    return m_refund_time;
}
void OAIRefundExternalTransactionRequest::setRefundTime(const QString &refund_time) {
    m_refund_time = refund_time;
    m_refund_time_isSet = true;
}

bool OAIRefundExternalTransactionRequest::is_refund_time_Set() const{
    return m_refund_time_isSet;
}

bool OAIRefundExternalTransactionRequest::is_refund_time_Valid() const{
    return m_refund_time_isValid;
}

bool OAIRefundExternalTransactionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_full_refund_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_partial_refund.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_refund_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRefundExternalTransactionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
