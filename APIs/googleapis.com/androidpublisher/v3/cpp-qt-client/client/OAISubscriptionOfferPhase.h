/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscriptionOfferPhase.h
 *
 * A single phase of a subscription offer.
 */

#ifndef OAISubscriptionOfferPhase_H
#define OAISubscriptionOfferPhase_H

#include <QJsonObject>

#include "OAIOtherRegionsSubscriptionOfferPhaseConfig.h"
#include "OAIRegionalSubscriptionOfferPhaseConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOtherRegionsSubscriptionOfferPhaseConfig;
class OAIRegionalSubscriptionOfferPhaseConfig;

class OAISubscriptionOfferPhase : public OAIObject {
public:
    OAISubscriptionOfferPhase();
    OAISubscriptionOfferPhase(QString json);
    ~OAISubscriptionOfferPhase() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    OAIOtherRegionsSubscriptionOfferPhaseConfig getOtherRegionsConfig() const;
    void setOtherRegionsConfig(const OAIOtherRegionsSubscriptionOfferPhaseConfig &other_regions_config);
    bool is_other_regions_config_Set() const;
    bool is_other_regions_config_Valid() const;

    qint32 getRecurrenceCount() const;
    void setRecurrenceCount(const qint32 &recurrence_count);
    bool is_recurrence_count_Set() const;
    bool is_recurrence_count_Valid() const;

    QList<OAIRegionalSubscriptionOfferPhaseConfig> getRegionalConfigs() const;
    void setRegionalConfigs(const QList<OAIRegionalSubscriptionOfferPhaseConfig> &regional_configs);
    bool is_regional_configs_Set() const;
    bool is_regional_configs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    OAIOtherRegionsSubscriptionOfferPhaseConfig m_other_regions_config;
    bool m_other_regions_config_isSet;
    bool m_other_regions_config_isValid;

    qint32 m_recurrence_count;
    bool m_recurrence_count_isSet;
    bool m_recurrence_count_isValid;

    QList<OAIRegionalSubscriptionOfferPhaseConfig> m_regional_configs;
    bool m_regional_configs_isSet;
    bool m_regional_configs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscriptionOfferPhase)

#endif // OAISubscriptionOfferPhase_H
