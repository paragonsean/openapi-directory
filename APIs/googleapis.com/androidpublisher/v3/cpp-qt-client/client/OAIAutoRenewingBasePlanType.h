/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAutoRenewingBasePlanType.h
 *
 * Represents a base plan that automatically renews at the end of its subscription period.
 */

#ifndef OAIAutoRenewingBasePlanType_H
#define OAIAutoRenewingBasePlanType_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAutoRenewingBasePlanType : public OAIObject {
public:
    OAIAutoRenewingBasePlanType();
    OAIAutoRenewingBasePlanType(QString json);
    ~OAIAutoRenewingBasePlanType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountHoldDuration() const;
    void setAccountHoldDuration(const QString &account_hold_duration);
    bool is_account_hold_duration_Set() const;
    bool is_account_hold_duration_Valid() const;

    QString getBillingPeriodDuration() const;
    void setBillingPeriodDuration(const QString &billing_period_duration);
    bool is_billing_period_duration_Set() const;
    bool is_billing_period_duration_Valid() const;

    QString getGracePeriodDuration() const;
    void setGracePeriodDuration(const QString &grace_period_duration);
    bool is_grace_period_duration_Set() const;
    bool is_grace_period_duration_Valid() const;

    bool isLegacyCompatible() const;
    void setLegacyCompatible(const bool &legacy_compatible);
    bool is_legacy_compatible_Set() const;
    bool is_legacy_compatible_Valid() const;

    QString getLegacyCompatibleSubscriptionOfferId() const;
    void setLegacyCompatibleSubscriptionOfferId(const QString &legacy_compatible_subscription_offer_id);
    bool is_legacy_compatible_subscription_offer_id_Set() const;
    bool is_legacy_compatible_subscription_offer_id_Valid() const;

    QString getProrationMode() const;
    void setProrationMode(const QString &proration_mode);
    bool is_proration_mode_Set() const;
    bool is_proration_mode_Valid() const;

    QString getResubscribeState() const;
    void setResubscribeState(const QString &resubscribe_state);
    bool is_resubscribe_state_Set() const;
    bool is_resubscribe_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_hold_duration;
    bool m_account_hold_duration_isSet;
    bool m_account_hold_duration_isValid;

    QString m_billing_period_duration;
    bool m_billing_period_duration_isSet;
    bool m_billing_period_duration_isValid;

    QString m_grace_period_duration;
    bool m_grace_period_duration_isSet;
    bool m_grace_period_duration_isValid;

    bool m_legacy_compatible;
    bool m_legacy_compatible_isSet;
    bool m_legacy_compatible_isValid;

    QString m_legacy_compatible_subscription_offer_id;
    bool m_legacy_compatible_subscription_offer_id_isSet;
    bool m_legacy_compatible_subscription_offer_id_isValid;

    QString m_proration_mode;
    bool m_proration_mode_isSet;
    bool m_proration_mode_isValid;

    QString m_resubscribe_state;
    bool m_resubscribe_state_isSet;
    bool m_resubscribe_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAutoRenewingBasePlanType)

#endif // OAIAutoRenewingBasePlanType_H
