/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscriptionOffer.h
 *
 * A single, temporary offer
 */

#ifndef OAISubscriptionOffer_H
#define OAISubscriptionOffer_H

#include <QJsonObject>

#include "OAIOfferTag.h"
#include "OAIOtherRegionsSubscriptionOfferConfig.h"
#include "OAIRegionalSubscriptionOfferConfig.h"
#include "OAISubscriptionOfferPhase.h"
#include "OAISubscriptionOfferTargeting.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOfferTag;
class OAIOtherRegionsSubscriptionOfferConfig;
class OAISubscriptionOfferPhase;
class OAIRegionalSubscriptionOfferConfig;
class OAISubscriptionOfferTargeting;

class OAISubscriptionOffer : public OAIObject {
public:
    OAISubscriptionOffer();
    OAISubscriptionOffer(QString json);
    ~OAISubscriptionOffer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBasePlanId() const;
    void setBasePlanId(const QString &base_plan_id);
    bool is_base_plan_id_Set() const;
    bool is_base_plan_id_Valid() const;

    QString getOfferId() const;
    void setOfferId(const QString &offer_id);
    bool is_offer_id_Set() const;
    bool is_offer_id_Valid() const;

    QList<OAIOfferTag> getOfferTags() const;
    void setOfferTags(const QList<OAIOfferTag> &offer_tags);
    bool is_offer_tags_Set() const;
    bool is_offer_tags_Valid() const;

    OAIOtherRegionsSubscriptionOfferConfig getOtherRegionsConfig() const;
    void setOtherRegionsConfig(const OAIOtherRegionsSubscriptionOfferConfig &other_regions_config);
    bool is_other_regions_config_Set() const;
    bool is_other_regions_config_Valid() const;

    QString getPackageName() const;
    void setPackageName(const QString &package_name);
    bool is_package_name_Set() const;
    bool is_package_name_Valid() const;

    QList<OAISubscriptionOfferPhase> getPhases() const;
    void setPhases(const QList<OAISubscriptionOfferPhase> &phases);
    bool is_phases_Set() const;
    bool is_phases_Valid() const;

    QString getProductId() const;
    void setProductId(const QString &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    QList<OAIRegionalSubscriptionOfferConfig> getRegionalConfigs() const;
    void setRegionalConfigs(const QList<OAIRegionalSubscriptionOfferConfig> &regional_configs);
    bool is_regional_configs_Set() const;
    bool is_regional_configs_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAISubscriptionOfferTargeting getTargeting() const;
    void setTargeting(const OAISubscriptionOfferTargeting &targeting);
    bool is_targeting_Set() const;
    bool is_targeting_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_plan_id;
    bool m_base_plan_id_isSet;
    bool m_base_plan_id_isValid;

    QString m_offer_id;
    bool m_offer_id_isSet;
    bool m_offer_id_isValid;

    QList<OAIOfferTag> m_offer_tags;
    bool m_offer_tags_isSet;
    bool m_offer_tags_isValid;

    OAIOtherRegionsSubscriptionOfferConfig m_other_regions_config;
    bool m_other_regions_config_isSet;
    bool m_other_regions_config_isValid;

    QString m_package_name;
    bool m_package_name_isSet;
    bool m_package_name_isValid;

    QList<OAISubscriptionOfferPhase> m_phases;
    bool m_phases_isSet;
    bool m_phases_isValid;

    QString m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    QList<OAIRegionalSubscriptionOfferConfig> m_regional_configs;
    bool m_regional_configs_isSet;
    bool m_regional_configs_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAISubscriptionOfferTargeting m_targeting;
    bool m_targeting_isSet;
    bool m_targeting_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscriptionOffer)

#endif // OAISubscriptionOffer_H
