/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISplitApkMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISplitApkMetadata::OAISplitApkMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISplitApkMetadata::OAISplitApkMetadata() {
    this->initializeModel();
}

OAISplitApkMetadata::~OAISplitApkMetadata() {}

void OAISplitApkMetadata::initializeModel() {

    m_is_master_split_isSet = false;
    m_is_master_split_isValid = false;

    m_split_id_isSet = false;
    m_split_id_isValid = false;
}

void OAISplitApkMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISplitApkMetadata::fromJsonObject(QJsonObject json) {

    m_is_master_split_isValid = ::OpenAPI::fromJsonValue(m_is_master_split, json[QString("isMasterSplit")]);
    m_is_master_split_isSet = !json[QString("isMasterSplit")].isNull() && m_is_master_split_isValid;

    m_split_id_isValid = ::OpenAPI::fromJsonValue(m_split_id, json[QString("splitId")]);
    m_split_id_isSet = !json[QString("splitId")].isNull() && m_split_id_isValid;
}

QString OAISplitApkMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISplitApkMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_is_master_split_isSet) {
        obj.insert(QString("isMasterSplit"), ::OpenAPI::toJsonValue(m_is_master_split));
    }
    if (m_split_id_isSet) {
        obj.insert(QString("splitId"), ::OpenAPI::toJsonValue(m_split_id));
    }
    return obj;
}

bool OAISplitApkMetadata::isIsMasterSplit() const {
    return m_is_master_split;
}
void OAISplitApkMetadata::setIsMasterSplit(const bool &is_master_split) {
    m_is_master_split = is_master_split;
    m_is_master_split_isSet = true;
}

bool OAISplitApkMetadata::is_is_master_split_Set() const{
    return m_is_master_split_isSet;
}

bool OAISplitApkMetadata::is_is_master_split_Valid() const{
    return m_is_master_split_isValid;
}

QString OAISplitApkMetadata::getSplitId() const {
    return m_split_id;
}
void OAISplitApkMetadata::setSplitId(const QString &split_id) {
    m_split_id = split_id;
    m_split_id_isSet = true;
}

bool OAISplitApkMetadata::is_split_id_Set() const{
    return m_split_id_isSet;
}

bool OAISplitApkMetadata::is_split_id_Valid() const{
    return m_split_id_isValid;
}

bool OAISplitApkMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_master_split_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_split_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISplitApkMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
