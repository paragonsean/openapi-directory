/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscriptionTaxAndComplianceSettings.h
 *
 * Details about taxation, Google Play policy and legal compliance for subscription products.
 */

#ifndef OAISubscriptionTaxAndComplianceSettings_H
#define OAISubscriptionTaxAndComplianceSettings_H

#include <QJsonObject>

#include "OAIRegionalTaxRateInfo.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRegionalTaxRateInfo;

class OAISubscriptionTaxAndComplianceSettings : public OAIObject {
public:
    OAISubscriptionTaxAndComplianceSettings();
    OAISubscriptionTaxAndComplianceSettings(QString json);
    ~OAISubscriptionTaxAndComplianceSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEeaWithdrawalRightType() const;
    void setEeaWithdrawalRightType(const QString &eea_withdrawal_right_type);
    bool is_eea_withdrawal_right_type_Set() const;
    bool is_eea_withdrawal_right_type_Valid() const;

    bool isIsTokenizedDigitalAsset() const;
    void setIsTokenizedDigitalAsset(const bool &is_tokenized_digital_asset);
    bool is_is_tokenized_digital_asset_Set() const;
    bool is_is_tokenized_digital_asset_Valid() const;

    QMap<QString, OAIRegionalTaxRateInfo> getTaxRateInfoByRegionCode() const;
    void setTaxRateInfoByRegionCode(const QMap<QString, OAIRegionalTaxRateInfo> &tax_rate_info_by_region_code);
    bool is_tax_rate_info_by_region_code_Set() const;
    bool is_tax_rate_info_by_region_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_eea_withdrawal_right_type;
    bool m_eea_withdrawal_right_type_isSet;
    bool m_eea_withdrawal_right_type_isValid;

    bool m_is_tokenized_digital_asset;
    bool m_is_tokenized_digital_asset_isSet;
    bool m_is_tokenized_digital_asset_isValid;

    QMap<QString, OAIRegionalTaxRateInfo> m_tax_rate_info_by_region_code;
    bool m_tax_rate_info_by_region_code_isSet;
    bool m_tax_rate_info_by_region_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscriptionTaxAndComplianceSettings)

#endif // OAISubscriptionTaxAndComplianceSettings_H
