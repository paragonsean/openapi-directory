/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApkDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApkDescription::OAIApkDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApkDescription::OAIApkDescription() {
    this->initializeModel();
}

OAIApkDescription::~OAIApkDescription() {}

void OAIApkDescription::initializeModel() {

    m_asset_slice_metadata_isSet = false;
    m_asset_slice_metadata_isValid = false;

    m_instant_apk_metadata_isSet = false;
    m_instant_apk_metadata_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_split_apk_metadata_isSet = false;
    m_split_apk_metadata_isValid = false;

    m_standalone_apk_metadata_isSet = false;
    m_standalone_apk_metadata_isValid = false;

    m_targeting_isSet = false;
    m_targeting_isValid = false;
}

void OAIApkDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApkDescription::fromJsonObject(QJsonObject json) {

    m_asset_slice_metadata_isValid = ::OpenAPI::fromJsonValue(m_asset_slice_metadata, json[QString("assetSliceMetadata")]);
    m_asset_slice_metadata_isSet = !json[QString("assetSliceMetadata")].isNull() && m_asset_slice_metadata_isValid;

    m_instant_apk_metadata_isValid = ::OpenAPI::fromJsonValue(m_instant_apk_metadata, json[QString("instantApkMetadata")]);
    m_instant_apk_metadata_isSet = !json[QString("instantApkMetadata")].isNull() && m_instant_apk_metadata_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_split_apk_metadata_isValid = ::OpenAPI::fromJsonValue(m_split_apk_metadata, json[QString("splitApkMetadata")]);
    m_split_apk_metadata_isSet = !json[QString("splitApkMetadata")].isNull() && m_split_apk_metadata_isValid;

    m_standalone_apk_metadata_isValid = ::OpenAPI::fromJsonValue(m_standalone_apk_metadata, json[QString("standaloneApkMetadata")]);
    m_standalone_apk_metadata_isSet = !json[QString("standaloneApkMetadata")].isNull() && m_standalone_apk_metadata_isValid;

    m_targeting_isValid = ::OpenAPI::fromJsonValue(m_targeting, json[QString("targeting")]);
    m_targeting_isSet = !json[QString("targeting")].isNull() && m_targeting_isValid;
}

QString OAIApkDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApkDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_asset_slice_metadata.isSet()) {
        obj.insert(QString("assetSliceMetadata"), ::OpenAPI::toJsonValue(m_asset_slice_metadata));
    }
    if (m_instant_apk_metadata.isSet()) {
        obj.insert(QString("instantApkMetadata"), ::OpenAPI::toJsonValue(m_instant_apk_metadata));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_split_apk_metadata.isSet()) {
        obj.insert(QString("splitApkMetadata"), ::OpenAPI::toJsonValue(m_split_apk_metadata));
    }
    if (m_standalone_apk_metadata.isSet()) {
        obj.insert(QString("standaloneApkMetadata"), ::OpenAPI::toJsonValue(m_standalone_apk_metadata));
    }
    if (m_targeting.isSet()) {
        obj.insert(QString("targeting"), ::OpenAPI::toJsonValue(m_targeting));
    }
    return obj;
}

OAISplitApkMetadata OAIApkDescription::getAssetSliceMetadata() const {
    return m_asset_slice_metadata;
}
void OAIApkDescription::setAssetSliceMetadata(const OAISplitApkMetadata &asset_slice_metadata) {
    m_asset_slice_metadata = asset_slice_metadata;
    m_asset_slice_metadata_isSet = true;
}

bool OAIApkDescription::is_asset_slice_metadata_Set() const{
    return m_asset_slice_metadata_isSet;
}

bool OAIApkDescription::is_asset_slice_metadata_Valid() const{
    return m_asset_slice_metadata_isValid;
}

OAISplitApkMetadata OAIApkDescription::getInstantApkMetadata() const {
    return m_instant_apk_metadata;
}
void OAIApkDescription::setInstantApkMetadata(const OAISplitApkMetadata &instant_apk_metadata) {
    m_instant_apk_metadata = instant_apk_metadata;
    m_instant_apk_metadata_isSet = true;
}

bool OAIApkDescription::is_instant_apk_metadata_Set() const{
    return m_instant_apk_metadata_isSet;
}

bool OAIApkDescription::is_instant_apk_metadata_Valid() const{
    return m_instant_apk_metadata_isValid;
}

QString OAIApkDescription::getPath() const {
    return m_path;
}
void OAIApkDescription::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIApkDescription::is_path_Set() const{
    return m_path_isSet;
}

bool OAIApkDescription::is_path_Valid() const{
    return m_path_isValid;
}

OAISplitApkMetadata OAIApkDescription::getSplitApkMetadata() const {
    return m_split_apk_metadata;
}
void OAIApkDescription::setSplitApkMetadata(const OAISplitApkMetadata &split_apk_metadata) {
    m_split_apk_metadata = split_apk_metadata;
    m_split_apk_metadata_isSet = true;
}

bool OAIApkDescription::is_split_apk_metadata_Set() const{
    return m_split_apk_metadata_isSet;
}

bool OAIApkDescription::is_split_apk_metadata_Valid() const{
    return m_split_apk_metadata_isValid;
}

OAIStandaloneApkMetadata OAIApkDescription::getStandaloneApkMetadata() const {
    return m_standalone_apk_metadata;
}
void OAIApkDescription::setStandaloneApkMetadata(const OAIStandaloneApkMetadata &standalone_apk_metadata) {
    m_standalone_apk_metadata = standalone_apk_metadata;
    m_standalone_apk_metadata_isSet = true;
}

bool OAIApkDescription::is_standalone_apk_metadata_Set() const{
    return m_standalone_apk_metadata_isSet;
}

bool OAIApkDescription::is_standalone_apk_metadata_Valid() const{
    return m_standalone_apk_metadata_isValid;
}

OAIApkTargeting OAIApkDescription::getTargeting() const {
    return m_targeting;
}
void OAIApkDescription::setTargeting(const OAIApkTargeting &targeting) {
    m_targeting = targeting;
    m_targeting_isSet = true;
}

bool OAIApkDescription::is_targeting_Set() const{
    return m_targeting_isSet;
}

bool OAIApkDescription::is_targeting_Valid() const{
    return m_targeting_isValid;
}

bool OAIApkDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset_slice_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_instant_apk_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_split_apk_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_standalone_apk_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_targeting.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApkDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
