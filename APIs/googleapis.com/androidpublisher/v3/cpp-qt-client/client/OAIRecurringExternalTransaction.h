/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecurringExternalTransaction.h
 *
 * Represents a transaction that is part of a recurring series of payments. This can be a subscription or a one-time product with multiple payments (such as preorder).
 */

#ifndef OAIRecurringExternalTransaction_H
#define OAIRecurringExternalTransaction_H

#include <QJsonObject>

#include "OAIExternalSubscription.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExternalSubscription;

class OAIRecurringExternalTransaction : public OAIObject {
public:
    OAIRecurringExternalTransaction();
    OAIRecurringExternalTransaction(QString json);
    ~OAIRecurringExternalTransaction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIExternalSubscription getExternalSubscription() const;
    void setExternalSubscription(const OAIExternalSubscription &external_subscription);
    bool is_external_subscription_Set() const;
    bool is_external_subscription_Valid() const;

    QString getExternalTransactionToken() const;
    void setExternalTransactionToken(const QString &external_transaction_token);
    bool is_external_transaction_token_Set() const;
    bool is_external_transaction_token_Valid() const;

    QString getInitialExternalTransactionId() const;
    void setInitialExternalTransactionId(const QString &initial_external_transaction_id);
    bool is_initial_external_transaction_id_Set() const;
    bool is_initial_external_transaction_id_Valid() const;

    QString getMigratedTransactionProgram() const;
    void setMigratedTransactionProgram(const QString &migrated_transaction_program);
    bool is_migrated_transaction_program_Set() const;
    bool is_migrated_transaction_program_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIExternalSubscription m_external_subscription;
    bool m_external_subscription_isSet;
    bool m_external_subscription_isValid;

    QString m_external_transaction_token;
    bool m_external_transaction_token_isSet;
    bool m_external_transaction_token_isValid;

    QString m_initial_external_transaction_id;
    bool m_initial_external_transaction_id_isSet;
    bool m_initial_external_transaction_id_isValid;

    QString m_migrated_transaction_program;
    bool m_migrated_transaction_program_isSet;
    bool m_migrated_transaction_program_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecurringExternalTransaction)

#endif // OAIRecurringExternalTransaction_H
