/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppDetails::OAIAppDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppDetails::OAIAppDetails() {
    this->initializeModel();
}

OAIAppDetails::~OAIAppDetails() {}

void OAIAppDetails::initializeModel() {

    m_contact_email_isSet = false;
    m_contact_email_isValid = false;

    m_contact_phone_isSet = false;
    m_contact_phone_isValid = false;

    m_contact_website_isSet = false;
    m_contact_website_isValid = false;

    m_default_language_isSet = false;
    m_default_language_isValid = false;
}

void OAIAppDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppDetails::fromJsonObject(QJsonObject json) {

    m_contact_email_isValid = ::OpenAPI::fromJsonValue(m_contact_email, json[QString("contactEmail")]);
    m_contact_email_isSet = !json[QString("contactEmail")].isNull() && m_contact_email_isValid;

    m_contact_phone_isValid = ::OpenAPI::fromJsonValue(m_contact_phone, json[QString("contactPhone")]);
    m_contact_phone_isSet = !json[QString("contactPhone")].isNull() && m_contact_phone_isValid;

    m_contact_website_isValid = ::OpenAPI::fromJsonValue(m_contact_website, json[QString("contactWebsite")]);
    m_contact_website_isSet = !json[QString("contactWebsite")].isNull() && m_contact_website_isValid;

    m_default_language_isValid = ::OpenAPI::fromJsonValue(m_default_language, json[QString("defaultLanguage")]);
    m_default_language_isSet = !json[QString("defaultLanguage")].isNull() && m_default_language_isValid;
}

QString OAIAppDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_email_isSet) {
        obj.insert(QString("contactEmail"), ::OpenAPI::toJsonValue(m_contact_email));
    }
    if (m_contact_phone_isSet) {
        obj.insert(QString("contactPhone"), ::OpenAPI::toJsonValue(m_contact_phone));
    }
    if (m_contact_website_isSet) {
        obj.insert(QString("contactWebsite"), ::OpenAPI::toJsonValue(m_contact_website));
    }
    if (m_default_language_isSet) {
        obj.insert(QString("defaultLanguage"), ::OpenAPI::toJsonValue(m_default_language));
    }
    return obj;
}

QString OAIAppDetails::getContactEmail() const {
    return m_contact_email;
}
void OAIAppDetails::setContactEmail(const QString &contact_email) {
    m_contact_email = contact_email;
    m_contact_email_isSet = true;
}

bool OAIAppDetails::is_contact_email_Set() const{
    return m_contact_email_isSet;
}

bool OAIAppDetails::is_contact_email_Valid() const{
    return m_contact_email_isValid;
}

QString OAIAppDetails::getContactPhone() const {
    return m_contact_phone;
}
void OAIAppDetails::setContactPhone(const QString &contact_phone) {
    m_contact_phone = contact_phone;
    m_contact_phone_isSet = true;
}

bool OAIAppDetails::is_contact_phone_Set() const{
    return m_contact_phone_isSet;
}

bool OAIAppDetails::is_contact_phone_Valid() const{
    return m_contact_phone_isValid;
}

QString OAIAppDetails::getContactWebsite() const {
    return m_contact_website;
}
void OAIAppDetails::setContactWebsite(const QString &contact_website) {
    m_contact_website = contact_website;
    m_contact_website_isSet = true;
}

bool OAIAppDetails::is_contact_website_Set() const{
    return m_contact_website_isSet;
}

bool OAIAppDetails::is_contact_website_Valid() const{
    return m_contact_website_isValid;
}

QString OAIAppDetails::getDefaultLanguage() const {
    return m_default_language;
}
void OAIAppDetails::setDefaultLanguage(const QString &default_language) {
    m_default_language = default_language;
    m_default_language_isSet = true;
}

bool OAIAppDetails::is_default_language_Set() const{
    return m_default_language_isSet;
}

bool OAIAppDetails::is_default_language_Valid() const{
    return m_default_language_isValid;
}

bool OAIAppDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_website_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_language_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
