/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateSubscriptionOfferRequest.h
 *
 * Request message for UpdateSubscriptionOffer.
 */

#ifndef OAIUpdateSubscriptionOfferRequest_H
#define OAIUpdateSubscriptionOfferRequest_H

#include <QJsonObject>

#include "OAIRegionsVersion.h"
#include "OAISubscriptionOffer.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRegionsVersion;
class OAISubscriptionOffer;

class OAIUpdateSubscriptionOfferRequest : public OAIObject {
public:
    OAIUpdateSubscriptionOfferRequest();
    OAIUpdateSubscriptionOfferRequest(QString json);
    ~OAIUpdateSubscriptionOfferRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowMissing() const;
    void setAllowMissing(const bool &allow_missing);
    bool is_allow_missing_Set() const;
    bool is_allow_missing_Valid() const;

    QString getLatencyTolerance() const;
    void setLatencyTolerance(const QString &latency_tolerance);
    bool is_latency_tolerance_Set() const;
    bool is_latency_tolerance_Valid() const;

    OAIRegionsVersion getRegionsVersion() const;
    void setRegionsVersion(const OAIRegionsVersion &regions_version);
    bool is_regions_version_Set() const;
    bool is_regions_version_Valid() const;

    OAISubscriptionOffer getSubscriptionOffer() const;
    void setSubscriptionOffer(const OAISubscriptionOffer &subscription_offer);
    bool is_subscription_offer_Set() const;
    bool is_subscription_offer_Valid() const;

    QString getUpdateMask() const;
    void setUpdateMask(const QString &update_mask);
    bool is_update_mask_Set() const;
    bool is_update_mask_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_missing;
    bool m_allow_missing_isSet;
    bool m_allow_missing_isValid;

    QString m_latency_tolerance;
    bool m_latency_tolerance_isSet;
    bool m_latency_tolerance_isValid;

    OAIRegionsVersion m_regions_version;
    bool m_regions_version_isSet;
    bool m_regions_version_isValid;

    OAISubscriptionOffer m_subscription_offer;
    bool m_subscription_offer_isSet;
    bool m_subscription_offer_isValid;

    QString m_update_mask;
    bool m_update_mask_isSet;
    bool m_update_mask_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateSubscriptionOfferRequest)

#endif // OAIUpdateSubscriptionOfferRequest_H
