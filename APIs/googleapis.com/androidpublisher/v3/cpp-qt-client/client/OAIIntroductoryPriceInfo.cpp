/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIntroductoryPriceInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIntroductoryPriceInfo::OAIIntroductoryPriceInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIntroductoryPriceInfo::OAIIntroductoryPriceInfo() {
    this->initializeModel();
}

OAIIntroductoryPriceInfo::~OAIIntroductoryPriceInfo() {}

void OAIIntroductoryPriceInfo::initializeModel() {

    m_introductory_price_amount_micros_isSet = false;
    m_introductory_price_amount_micros_isValid = false;

    m_introductory_price_currency_code_isSet = false;
    m_introductory_price_currency_code_isValid = false;

    m_introductory_price_cycles_isSet = false;
    m_introductory_price_cycles_isValid = false;

    m_introductory_price_period_isSet = false;
    m_introductory_price_period_isValid = false;
}

void OAIIntroductoryPriceInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIntroductoryPriceInfo::fromJsonObject(QJsonObject json) {

    m_introductory_price_amount_micros_isValid = ::OpenAPI::fromJsonValue(m_introductory_price_amount_micros, json[QString("introductoryPriceAmountMicros")]);
    m_introductory_price_amount_micros_isSet = !json[QString("introductoryPriceAmountMicros")].isNull() && m_introductory_price_amount_micros_isValid;

    m_introductory_price_currency_code_isValid = ::OpenAPI::fromJsonValue(m_introductory_price_currency_code, json[QString("introductoryPriceCurrencyCode")]);
    m_introductory_price_currency_code_isSet = !json[QString("introductoryPriceCurrencyCode")].isNull() && m_introductory_price_currency_code_isValid;

    m_introductory_price_cycles_isValid = ::OpenAPI::fromJsonValue(m_introductory_price_cycles, json[QString("introductoryPriceCycles")]);
    m_introductory_price_cycles_isSet = !json[QString("introductoryPriceCycles")].isNull() && m_introductory_price_cycles_isValid;

    m_introductory_price_period_isValid = ::OpenAPI::fromJsonValue(m_introductory_price_period, json[QString("introductoryPricePeriod")]);
    m_introductory_price_period_isSet = !json[QString("introductoryPricePeriod")].isNull() && m_introductory_price_period_isValid;
}

QString OAIIntroductoryPriceInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIntroductoryPriceInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_introductory_price_amount_micros_isSet) {
        obj.insert(QString("introductoryPriceAmountMicros"), ::OpenAPI::toJsonValue(m_introductory_price_amount_micros));
    }
    if (m_introductory_price_currency_code_isSet) {
        obj.insert(QString("introductoryPriceCurrencyCode"), ::OpenAPI::toJsonValue(m_introductory_price_currency_code));
    }
    if (m_introductory_price_cycles_isSet) {
        obj.insert(QString("introductoryPriceCycles"), ::OpenAPI::toJsonValue(m_introductory_price_cycles));
    }
    if (m_introductory_price_period_isSet) {
        obj.insert(QString("introductoryPricePeriod"), ::OpenAPI::toJsonValue(m_introductory_price_period));
    }
    return obj;
}

QString OAIIntroductoryPriceInfo::getIntroductoryPriceAmountMicros() const {
    return m_introductory_price_amount_micros;
}
void OAIIntroductoryPriceInfo::setIntroductoryPriceAmountMicros(const QString &introductory_price_amount_micros) {
    m_introductory_price_amount_micros = introductory_price_amount_micros;
    m_introductory_price_amount_micros_isSet = true;
}

bool OAIIntroductoryPriceInfo::is_introductory_price_amount_micros_Set() const{
    return m_introductory_price_amount_micros_isSet;
}

bool OAIIntroductoryPriceInfo::is_introductory_price_amount_micros_Valid() const{
    return m_introductory_price_amount_micros_isValid;
}

QString OAIIntroductoryPriceInfo::getIntroductoryPriceCurrencyCode() const {
    return m_introductory_price_currency_code;
}
void OAIIntroductoryPriceInfo::setIntroductoryPriceCurrencyCode(const QString &introductory_price_currency_code) {
    m_introductory_price_currency_code = introductory_price_currency_code;
    m_introductory_price_currency_code_isSet = true;
}

bool OAIIntroductoryPriceInfo::is_introductory_price_currency_code_Set() const{
    return m_introductory_price_currency_code_isSet;
}

bool OAIIntroductoryPriceInfo::is_introductory_price_currency_code_Valid() const{
    return m_introductory_price_currency_code_isValid;
}

qint32 OAIIntroductoryPriceInfo::getIntroductoryPriceCycles() const {
    return m_introductory_price_cycles;
}
void OAIIntroductoryPriceInfo::setIntroductoryPriceCycles(const qint32 &introductory_price_cycles) {
    m_introductory_price_cycles = introductory_price_cycles;
    m_introductory_price_cycles_isSet = true;
}

bool OAIIntroductoryPriceInfo::is_introductory_price_cycles_Set() const{
    return m_introductory_price_cycles_isSet;
}

bool OAIIntroductoryPriceInfo::is_introductory_price_cycles_Valid() const{
    return m_introductory_price_cycles_isValid;
}

QString OAIIntroductoryPriceInfo::getIntroductoryPricePeriod() const {
    return m_introductory_price_period;
}
void OAIIntroductoryPriceInfo::setIntroductoryPricePeriod(const QString &introductory_price_period) {
    m_introductory_price_period = introductory_price_period;
    m_introductory_price_period_isSet = true;
}

bool OAIIntroductoryPriceInfo::is_introductory_price_period_Set() const{
    return m_introductory_price_period_isSet;
}

bool OAIIntroductoryPriceInfo::is_introductory_price_period_Valid() const{
    return m_introductory_price_period_isValid;
}

bool OAIIntroductoryPriceInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_introductory_price_amount_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_introductory_price_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_introductory_price_cycles_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_introductory_price_period_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIntroductoryPriceInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
