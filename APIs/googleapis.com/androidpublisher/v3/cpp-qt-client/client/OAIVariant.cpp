/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVariant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVariant::OAIVariant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVariant::OAIVariant() {
    this->initializeModel();
}

OAIVariant::~OAIVariant() {}

void OAIVariant::initializeModel() {

    m_device_spec_isSet = false;
    m_device_spec_isValid = false;

    m_options_isSet = false;
    m_options_isValid = false;

    m_variant_id_isSet = false;
    m_variant_id_isValid = false;
}

void OAIVariant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVariant::fromJsonObject(QJsonObject json) {

    m_device_spec_isValid = ::OpenAPI::fromJsonValue(m_device_spec, json[QString("deviceSpec")]);
    m_device_spec_isSet = !json[QString("deviceSpec")].isNull() && m_device_spec_isValid;

    m_options_isValid = ::OpenAPI::fromJsonValue(m_options, json[QString("options")]);
    m_options_isSet = !json[QString("options")].isNull() && m_options_isValid;

    m_variant_id_isValid = ::OpenAPI::fromJsonValue(m_variant_id, json[QString("variantId")]);
    m_variant_id_isSet = !json[QString("variantId")].isNull() && m_variant_id_isValid;
}

QString OAIVariant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVariant::asJsonObject() const {
    QJsonObject obj;
    if (m_device_spec.isSet()) {
        obj.insert(QString("deviceSpec"), ::OpenAPI::toJsonValue(m_device_spec));
    }
    if (m_options.isSet()) {
        obj.insert(QString("options"), ::OpenAPI::toJsonValue(m_options));
    }
    if (m_variant_id_isSet) {
        obj.insert(QString("variantId"), ::OpenAPI::toJsonValue(m_variant_id));
    }
    return obj;
}

OAIDeviceSpec OAIVariant::getDeviceSpec() const {
    return m_device_spec;
}
void OAIVariant::setDeviceSpec(const OAIDeviceSpec &device_spec) {
    m_device_spec = device_spec;
    m_device_spec_isSet = true;
}

bool OAIVariant::is_device_spec_Set() const{
    return m_device_spec_isSet;
}

bool OAIVariant::is_device_spec_Valid() const{
    return m_device_spec_isValid;
}

OAISystemApkOptions OAIVariant::getOptions() const {
    return m_options;
}
void OAIVariant::setOptions(const OAISystemApkOptions &options) {
    m_options = options;
    m_options_isSet = true;
}

bool OAIVariant::is_options_Set() const{
    return m_options_isSet;
}

bool OAIVariant::is_options_Valid() const{
    return m_options_isValid;
}

qint32 OAIVariant::getVariantId() const {
    return m_variant_id;
}
void OAIVariant::setVariantId(const qint32 &variant_id) {
    m_variant_id = variant_id;
    m_variant_id_isSet = true;
}

bool OAIVariant::is_variant_id_Set() const{
    return m_variant_id_isSet;
}

bool OAIVariant::is_variant_id_Valid() const{
    return m_variant_id_isValid;
}

bool OAIVariant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_device_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_variant_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVariant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
