/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBasePlan.h
 *
 * A single base plan for a subscription.
 */

#ifndef OAIBasePlan_H
#define OAIBasePlan_H

#include <QJsonObject>

#include "OAIAutoRenewingBasePlanType.h"
#include "OAIOfferTag.h"
#include "OAIOtherRegionsBasePlanConfig.h"
#include "OAIPrepaidBasePlanType.h"
#include "OAIRegionalBasePlanConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAutoRenewingBasePlanType;
class OAIOfferTag;
class OAIOtherRegionsBasePlanConfig;
class OAIPrepaidBasePlanType;
class OAIRegionalBasePlanConfig;

class OAIBasePlan : public OAIObject {
public:
    OAIBasePlan();
    OAIBasePlan(QString json);
    ~OAIBasePlan() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAutoRenewingBasePlanType getAutoRenewingBasePlanType() const;
    void setAutoRenewingBasePlanType(const OAIAutoRenewingBasePlanType &auto_renewing_base_plan_type);
    bool is_auto_renewing_base_plan_type_Set() const;
    bool is_auto_renewing_base_plan_type_Valid() const;

    QString getBasePlanId() const;
    void setBasePlanId(const QString &base_plan_id);
    bool is_base_plan_id_Set() const;
    bool is_base_plan_id_Valid() const;

    QList<OAIOfferTag> getOfferTags() const;
    void setOfferTags(const QList<OAIOfferTag> &offer_tags);
    bool is_offer_tags_Set() const;
    bool is_offer_tags_Valid() const;

    OAIOtherRegionsBasePlanConfig getOtherRegionsConfig() const;
    void setOtherRegionsConfig(const OAIOtherRegionsBasePlanConfig &other_regions_config);
    bool is_other_regions_config_Set() const;
    bool is_other_regions_config_Valid() const;

    OAIPrepaidBasePlanType getPrepaidBasePlanType() const;
    void setPrepaidBasePlanType(const OAIPrepaidBasePlanType &prepaid_base_plan_type);
    bool is_prepaid_base_plan_type_Set() const;
    bool is_prepaid_base_plan_type_Valid() const;

    QList<OAIRegionalBasePlanConfig> getRegionalConfigs() const;
    void setRegionalConfigs(const QList<OAIRegionalBasePlanConfig> &regional_configs);
    bool is_regional_configs_Set() const;
    bool is_regional_configs_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAutoRenewingBasePlanType m_auto_renewing_base_plan_type;
    bool m_auto_renewing_base_plan_type_isSet;
    bool m_auto_renewing_base_plan_type_isValid;

    QString m_base_plan_id;
    bool m_base_plan_id_isSet;
    bool m_base_plan_id_isValid;

    QList<OAIOfferTag> m_offer_tags;
    bool m_offer_tags_isSet;
    bool m_offer_tags_isValid;

    OAIOtherRegionsBasePlanConfig m_other_regions_config;
    bool m_other_regions_config_isSet;
    bool m_other_regions_config_isValid;

    OAIPrepaidBasePlanType m_prepaid_base_plan_type;
    bool m_prepaid_base_plan_type_isSet;
    bool m_prepaid_base_plan_type_isValid;

    QList<OAIRegionalBasePlanConfig> m_regional_configs;
    bool m_regional_configs_isSet;
    bool m_regional_configs_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBasePlan)

#endif // OAIBasePlan_H
