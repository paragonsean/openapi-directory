/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConvertedRegionPrice.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConvertedRegionPrice::OAIConvertedRegionPrice(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConvertedRegionPrice::OAIConvertedRegionPrice() {
    this->initializeModel();
}

OAIConvertedRegionPrice::~OAIConvertedRegionPrice() {}

void OAIConvertedRegionPrice::initializeModel() {

    m_price_isSet = false;
    m_price_isValid = false;

    m_region_code_isSet = false;
    m_region_code_isValid = false;

    m_tax_amount_isSet = false;
    m_tax_amount_isValid = false;
}

void OAIConvertedRegionPrice::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConvertedRegionPrice::fromJsonObject(QJsonObject json) {

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_region_code_isValid = ::OpenAPI::fromJsonValue(m_region_code, json[QString("regionCode")]);
    m_region_code_isSet = !json[QString("regionCode")].isNull() && m_region_code_isValid;

    m_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_tax_amount, json[QString("taxAmount")]);
    m_tax_amount_isSet = !json[QString("taxAmount")].isNull() && m_tax_amount_isValid;
}

QString OAIConvertedRegionPrice::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConvertedRegionPrice::asJsonObject() const {
    QJsonObject obj;
    if (m_price.isSet()) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_region_code_isSet) {
        obj.insert(QString("regionCode"), ::OpenAPI::toJsonValue(m_region_code));
    }
    if (m_tax_amount.isSet()) {
        obj.insert(QString("taxAmount"), ::OpenAPI::toJsonValue(m_tax_amount));
    }
    return obj;
}

OAIMoney OAIConvertedRegionPrice::getPrice() const {
    return m_price;
}
void OAIConvertedRegionPrice::setPrice(const OAIMoney &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIConvertedRegionPrice::is_price_Set() const{
    return m_price_isSet;
}

bool OAIConvertedRegionPrice::is_price_Valid() const{
    return m_price_isValid;
}

QString OAIConvertedRegionPrice::getRegionCode() const {
    return m_region_code;
}
void OAIConvertedRegionPrice::setRegionCode(const QString &region_code) {
    m_region_code = region_code;
    m_region_code_isSet = true;
}

bool OAIConvertedRegionPrice::is_region_code_Set() const{
    return m_region_code_isSet;
}

bool OAIConvertedRegionPrice::is_region_code_Valid() const{
    return m_region_code_isValid;
}

OAIMoney OAIConvertedRegionPrice::getTaxAmount() const {
    return m_tax_amount;
}
void OAIConvertedRegionPrice::setTaxAmount(const OAIMoney &tax_amount) {
    m_tax_amount = tax_amount;
    m_tax_amount_isSet = true;
}

bool OAIConvertedRegionPrice::is_tax_amount_Set() const{
    return m_tax_amount_isSet;
}

bool OAIConvertedRegionPrice::is_tax_amount_Valid() const{
    return m_tax_amount_isValid;
}

bool OAIConvertedRegionPrice::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConvertedRegionPrice::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
