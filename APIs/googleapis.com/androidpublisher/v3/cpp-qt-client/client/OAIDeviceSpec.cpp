/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeviceSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeviceSpec::OAIDeviceSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeviceSpec::OAIDeviceSpec() {
    this->initializeModel();
}

OAIDeviceSpec::~OAIDeviceSpec() {}

void OAIDeviceSpec::initializeModel() {

    m_screen_density_isSet = false;
    m_screen_density_isValid = false;

    m_supported_abis_isSet = false;
    m_supported_abis_isValid = false;

    m_supported_locales_isSet = false;
    m_supported_locales_isValid = false;
}

void OAIDeviceSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeviceSpec::fromJsonObject(QJsonObject json) {

    m_screen_density_isValid = ::OpenAPI::fromJsonValue(m_screen_density, json[QString("screenDensity")]);
    m_screen_density_isSet = !json[QString("screenDensity")].isNull() && m_screen_density_isValid;

    m_supported_abis_isValid = ::OpenAPI::fromJsonValue(m_supported_abis, json[QString("supportedAbis")]);
    m_supported_abis_isSet = !json[QString("supportedAbis")].isNull() && m_supported_abis_isValid;

    m_supported_locales_isValid = ::OpenAPI::fromJsonValue(m_supported_locales, json[QString("supportedLocales")]);
    m_supported_locales_isSet = !json[QString("supportedLocales")].isNull() && m_supported_locales_isValid;
}

QString OAIDeviceSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeviceSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_screen_density_isSet) {
        obj.insert(QString("screenDensity"), ::OpenAPI::toJsonValue(m_screen_density));
    }
    if (m_supported_abis.size() > 0) {
        obj.insert(QString("supportedAbis"), ::OpenAPI::toJsonValue(m_supported_abis));
    }
    if (m_supported_locales.size() > 0) {
        obj.insert(QString("supportedLocales"), ::OpenAPI::toJsonValue(m_supported_locales));
    }
    return obj;
}

qint32 OAIDeviceSpec::getScreenDensity() const {
    return m_screen_density;
}
void OAIDeviceSpec::setScreenDensity(const qint32 &screen_density) {
    m_screen_density = screen_density;
    m_screen_density_isSet = true;
}

bool OAIDeviceSpec::is_screen_density_Set() const{
    return m_screen_density_isSet;
}

bool OAIDeviceSpec::is_screen_density_Valid() const{
    return m_screen_density_isValid;
}

QList<QString> OAIDeviceSpec::getSupportedAbis() const {
    return m_supported_abis;
}
void OAIDeviceSpec::setSupportedAbis(const QList<QString> &supported_abis) {
    m_supported_abis = supported_abis;
    m_supported_abis_isSet = true;
}

bool OAIDeviceSpec::is_supported_abis_Set() const{
    return m_supported_abis_isSet;
}

bool OAIDeviceSpec::is_supported_abis_Valid() const{
    return m_supported_abis_isValid;
}

QList<QString> OAIDeviceSpec::getSupportedLocales() const {
    return m_supported_locales;
}
void OAIDeviceSpec::setSupportedLocales(const QList<QString> &supported_locales) {
    m_supported_locales = supported_locales;
    m_supported_locales_isSet = true;
}

bool OAIDeviceSpec::is_supported_locales_Set() const{
    return m_supported_locales_isSet;
}

bool OAIDeviceSpec::is_supported_locales_Valid() const{
    return m_supported_locales_isValid;
}

bool OAIDeviceSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_screen_density_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supported_abis.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_supported_locales.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeviceSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
