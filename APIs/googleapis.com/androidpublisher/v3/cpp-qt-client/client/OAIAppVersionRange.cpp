/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppVersionRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppVersionRange::OAIAppVersionRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppVersionRange::OAIAppVersionRange() {
    this->initializeModel();
}

OAIAppVersionRange::~OAIAppVersionRange() {}

void OAIAppVersionRange::initializeModel() {

    m_version_code_end_isSet = false;
    m_version_code_end_isValid = false;

    m_version_code_start_isSet = false;
    m_version_code_start_isValid = false;
}

void OAIAppVersionRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppVersionRange::fromJsonObject(QJsonObject json) {

    m_version_code_end_isValid = ::OpenAPI::fromJsonValue(m_version_code_end, json[QString("versionCodeEnd")]);
    m_version_code_end_isSet = !json[QString("versionCodeEnd")].isNull() && m_version_code_end_isValid;

    m_version_code_start_isValid = ::OpenAPI::fromJsonValue(m_version_code_start, json[QString("versionCodeStart")]);
    m_version_code_start_isSet = !json[QString("versionCodeStart")].isNull() && m_version_code_start_isValid;
}

QString OAIAppVersionRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppVersionRange::asJsonObject() const {
    QJsonObject obj;
    if (m_version_code_end_isSet) {
        obj.insert(QString("versionCodeEnd"), ::OpenAPI::toJsonValue(m_version_code_end));
    }
    if (m_version_code_start_isSet) {
        obj.insert(QString("versionCodeStart"), ::OpenAPI::toJsonValue(m_version_code_start));
    }
    return obj;
}

QString OAIAppVersionRange::getVersionCodeEnd() const {
    return m_version_code_end;
}
void OAIAppVersionRange::setVersionCodeEnd(const QString &version_code_end) {
    m_version_code_end = version_code_end;
    m_version_code_end_isSet = true;
}

bool OAIAppVersionRange::is_version_code_end_Set() const{
    return m_version_code_end_isSet;
}

bool OAIAppVersionRange::is_version_code_end_Valid() const{
    return m_version_code_end_isValid;
}

QString OAIAppVersionRange::getVersionCodeStart() const {
    return m_version_code_start;
}
void OAIAppVersionRange::setVersionCodeStart(const QString &version_code_start) {
    m_version_code_start = version_code_start;
    m_version_code_start_isSet = true;
}

bool OAIAppVersionRange::is_version_code_start_Set() const{
    return m_version_code_start_isSet;
}

bool OAIAppVersionRange::is_version_code_start_Valid() const{
    return m_version_code_start_isValid;
}

bool OAIAppVersionRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_version_code_end_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_code_start_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppVersionRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
