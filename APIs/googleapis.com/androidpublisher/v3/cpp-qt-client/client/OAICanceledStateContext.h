/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICanceledStateContext.h
 *
 * Information specific to a subscription in canceled state.
 */

#ifndef OAICanceledStateContext_H
#define OAICanceledStateContext_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIUserInitiatedCancellation.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserInitiatedCancellation;

class OAICanceledStateContext : public OAIObject {
public:
    OAICanceledStateContext();
    OAICanceledStateContext(QString json);
    ~OAICanceledStateContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getDeveloperInitiatedCancellation() const;
    void setDeveloperInitiatedCancellation(const OAIObject &developer_initiated_cancellation);
    bool is_developer_initiated_cancellation_Set() const;
    bool is_developer_initiated_cancellation_Valid() const;

    OAIObject getReplacementCancellation() const;
    void setReplacementCancellation(const OAIObject &replacement_cancellation);
    bool is_replacement_cancellation_Set() const;
    bool is_replacement_cancellation_Valid() const;

    OAIObject getSystemInitiatedCancellation() const;
    void setSystemInitiatedCancellation(const OAIObject &system_initiated_cancellation);
    bool is_system_initiated_cancellation_Set() const;
    bool is_system_initiated_cancellation_Valid() const;

    OAIUserInitiatedCancellation getUserInitiatedCancellation() const;
    void setUserInitiatedCancellation(const OAIUserInitiatedCancellation &user_initiated_cancellation);
    bool is_user_initiated_cancellation_Set() const;
    bool is_user_initiated_cancellation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_developer_initiated_cancellation;
    bool m_developer_initiated_cancellation_isSet;
    bool m_developer_initiated_cancellation_isValid;

    OAIObject m_replacement_cancellation;
    bool m_replacement_cancellation_isSet;
    bool m_replacement_cancellation_isValid;

    OAIObject m_system_initiated_cancellation;
    bool m_system_initiated_cancellation_isSet;
    bool m_system_initiated_cancellation_isValid;

    OAIUserInitiatedCancellation m_user_initiated_cancellation;
    bool m_user_initiated_cancellation_isSet;
    bool m_user_initiated_cancellation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICanceledStateContext)

#endif // OAICanceledStateContext_H
