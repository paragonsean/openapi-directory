/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegionalPriceMigrationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegionalPriceMigrationConfig::OAIRegionalPriceMigrationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegionalPriceMigrationConfig::OAIRegionalPriceMigrationConfig() {
    this->initializeModel();
}

OAIRegionalPriceMigrationConfig::~OAIRegionalPriceMigrationConfig() {}

void OAIRegionalPriceMigrationConfig::initializeModel() {

    m_oldest_allowed_price_version_time_isSet = false;
    m_oldest_allowed_price_version_time_isValid = false;

    m_price_increase_type_isSet = false;
    m_price_increase_type_isValid = false;

    m_region_code_isSet = false;
    m_region_code_isValid = false;
}

void OAIRegionalPriceMigrationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegionalPriceMigrationConfig::fromJsonObject(QJsonObject json) {

    m_oldest_allowed_price_version_time_isValid = ::OpenAPI::fromJsonValue(m_oldest_allowed_price_version_time, json[QString("oldestAllowedPriceVersionTime")]);
    m_oldest_allowed_price_version_time_isSet = !json[QString("oldestAllowedPriceVersionTime")].isNull() && m_oldest_allowed_price_version_time_isValid;

    m_price_increase_type_isValid = ::OpenAPI::fromJsonValue(m_price_increase_type, json[QString("priceIncreaseType")]);
    m_price_increase_type_isSet = !json[QString("priceIncreaseType")].isNull() && m_price_increase_type_isValid;

    m_region_code_isValid = ::OpenAPI::fromJsonValue(m_region_code, json[QString("regionCode")]);
    m_region_code_isSet = !json[QString("regionCode")].isNull() && m_region_code_isValid;
}

QString OAIRegionalPriceMigrationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegionalPriceMigrationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_oldest_allowed_price_version_time_isSet) {
        obj.insert(QString("oldestAllowedPriceVersionTime"), ::OpenAPI::toJsonValue(m_oldest_allowed_price_version_time));
    }
    if (m_price_increase_type_isSet) {
        obj.insert(QString("priceIncreaseType"), ::OpenAPI::toJsonValue(m_price_increase_type));
    }
    if (m_region_code_isSet) {
        obj.insert(QString("regionCode"), ::OpenAPI::toJsonValue(m_region_code));
    }
    return obj;
}

QString OAIRegionalPriceMigrationConfig::getOldestAllowedPriceVersionTime() const {
    return m_oldest_allowed_price_version_time;
}
void OAIRegionalPriceMigrationConfig::setOldestAllowedPriceVersionTime(const QString &oldest_allowed_price_version_time) {
    m_oldest_allowed_price_version_time = oldest_allowed_price_version_time;
    m_oldest_allowed_price_version_time_isSet = true;
}

bool OAIRegionalPriceMigrationConfig::is_oldest_allowed_price_version_time_Set() const{
    return m_oldest_allowed_price_version_time_isSet;
}

bool OAIRegionalPriceMigrationConfig::is_oldest_allowed_price_version_time_Valid() const{
    return m_oldest_allowed_price_version_time_isValid;
}

QString OAIRegionalPriceMigrationConfig::getPriceIncreaseType() const {
    return m_price_increase_type;
}
void OAIRegionalPriceMigrationConfig::setPriceIncreaseType(const QString &price_increase_type) {
    m_price_increase_type = price_increase_type;
    m_price_increase_type_isSet = true;
}

bool OAIRegionalPriceMigrationConfig::is_price_increase_type_Set() const{
    return m_price_increase_type_isSet;
}

bool OAIRegionalPriceMigrationConfig::is_price_increase_type_Valid() const{
    return m_price_increase_type_isValid;
}

QString OAIRegionalPriceMigrationConfig::getRegionCode() const {
    return m_region_code;
}
void OAIRegionalPriceMigrationConfig::setRegionCode(const QString &region_code) {
    m_region_code = region_code;
    m_region_code_isSet = true;
}

bool OAIRegionalPriceMigrationConfig::is_region_code_Set() const{
    return m_region_code_isSet;
}

bool OAIRegionalPriceMigrationConfig::is_region_code_Valid() const{
    return m_region_code_isValid;
}

bool OAIRegionalPriceMigrationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_oldest_allowed_price_version_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_increase_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegionalPriceMigrationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
