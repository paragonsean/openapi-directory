/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApkSet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApkSet::OAIApkSet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApkSet::OAIApkSet() {
    this->initializeModel();
}

OAIApkSet::~OAIApkSet() {}

void OAIApkSet::initializeModel() {

    m_apk_description_isSet = false;
    m_apk_description_isValid = false;

    m_module_metadata_isSet = false;
    m_module_metadata_isValid = false;
}

void OAIApkSet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApkSet::fromJsonObject(QJsonObject json) {

    m_apk_description_isValid = ::OpenAPI::fromJsonValue(m_apk_description, json[QString("apkDescription")]);
    m_apk_description_isSet = !json[QString("apkDescription")].isNull() && m_apk_description_isValid;

    m_module_metadata_isValid = ::OpenAPI::fromJsonValue(m_module_metadata, json[QString("moduleMetadata")]);
    m_module_metadata_isSet = !json[QString("moduleMetadata")].isNull() && m_module_metadata_isValid;
}

QString OAIApkSet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApkSet::asJsonObject() const {
    QJsonObject obj;
    if (m_apk_description.size() > 0) {
        obj.insert(QString("apkDescription"), ::OpenAPI::toJsonValue(m_apk_description));
    }
    if (m_module_metadata.isSet()) {
        obj.insert(QString("moduleMetadata"), ::OpenAPI::toJsonValue(m_module_metadata));
    }
    return obj;
}

QList<OAIApkDescription> OAIApkSet::getApkDescription() const {
    return m_apk_description;
}
void OAIApkSet::setApkDescription(const QList<OAIApkDescription> &apk_description) {
    m_apk_description = apk_description;
    m_apk_description_isSet = true;
}

bool OAIApkSet::is_apk_description_Set() const{
    return m_apk_description_isSet;
}

bool OAIApkSet::is_apk_description_Valid() const{
    return m_apk_description_isValid;
}

OAIModuleMetadata OAIApkSet::getModuleMetadata() const {
    return m_module_metadata;
}
void OAIApkSet::setModuleMetadata(const OAIModuleMetadata &module_metadata) {
    m_module_metadata = module_metadata;
    m_module_metadata_isSet = true;
}

bool OAIApkSet::is_module_metadata_Set() const{
    return m_module_metadata_isSet;
}

bool OAIApkSet::is_module_metadata_Valid() const{
    return m_module_metadata_isValid;
}

bool OAIApkSet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_apk_description.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_module_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApkSet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
