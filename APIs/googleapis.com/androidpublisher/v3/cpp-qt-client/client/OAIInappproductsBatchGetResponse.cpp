/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInappproductsBatchGetResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInappproductsBatchGetResponse::OAIInappproductsBatchGetResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInappproductsBatchGetResponse::OAIInappproductsBatchGetResponse() {
    this->initializeModel();
}

OAIInappproductsBatchGetResponse::~OAIInappproductsBatchGetResponse() {}

void OAIInappproductsBatchGetResponse::initializeModel() {

    m_inappproduct_isSet = false;
    m_inappproduct_isValid = false;
}

void OAIInappproductsBatchGetResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInappproductsBatchGetResponse::fromJsonObject(QJsonObject json) {

    m_inappproduct_isValid = ::OpenAPI::fromJsonValue(m_inappproduct, json[QString("inappproduct")]);
    m_inappproduct_isSet = !json[QString("inappproduct")].isNull() && m_inappproduct_isValid;
}

QString OAIInappproductsBatchGetResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInappproductsBatchGetResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_inappproduct.size() > 0) {
        obj.insert(QString("inappproduct"), ::OpenAPI::toJsonValue(m_inappproduct));
    }
    return obj;
}

QList<OAIInAppProduct> OAIInappproductsBatchGetResponse::getInappproduct() const {
    return m_inappproduct;
}
void OAIInappproductsBatchGetResponse::setInappproduct(const QList<OAIInAppProduct> &inappproduct) {
    m_inappproduct = inappproduct;
    m_inappproduct_isSet = true;
}

bool OAIInappproductsBatchGetResponse::is_inappproduct_Set() const{
    return m_inappproduct_isSet;
}

bool OAIInappproductsBatchGetResponse::is_inappproduct_Valid() const{
    return m_inappproduct_isValid;
}

bool OAIInappproductsBatchGetResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inappproduct.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInappproductsBatchGetResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
