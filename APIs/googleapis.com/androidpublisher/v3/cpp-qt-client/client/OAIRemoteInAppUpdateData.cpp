/**
 * Google Play Android Developer API
 * Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRemoteInAppUpdateData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRemoteInAppUpdateData::OAIRemoteInAppUpdateData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRemoteInAppUpdateData::OAIRemoteInAppUpdateData() {
    this->initializeModel();
}

OAIRemoteInAppUpdateData::~OAIRemoteInAppUpdateData() {}

void OAIRemoteInAppUpdateData::initializeModel() {

    m_remote_app_update_data_per_bundle_isSet = false;
    m_remote_app_update_data_per_bundle_isValid = false;
}

void OAIRemoteInAppUpdateData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRemoteInAppUpdateData::fromJsonObject(QJsonObject json) {

    m_remote_app_update_data_per_bundle_isValid = ::OpenAPI::fromJsonValue(m_remote_app_update_data_per_bundle, json[QString("remoteAppUpdateDataPerBundle")]);
    m_remote_app_update_data_per_bundle_isSet = !json[QString("remoteAppUpdateDataPerBundle")].isNull() && m_remote_app_update_data_per_bundle_isValid;
}

QString OAIRemoteInAppUpdateData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRemoteInAppUpdateData::asJsonObject() const {
    QJsonObject obj;
    if (m_remote_app_update_data_per_bundle.size() > 0) {
        obj.insert(QString("remoteAppUpdateDataPerBundle"), ::OpenAPI::toJsonValue(m_remote_app_update_data_per_bundle));
    }
    return obj;
}

QList<OAIRemoteInAppUpdateDataPerBundle> OAIRemoteInAppUpdateData::getRemoteAppUpdateDataPerBundle() const {
    return m_remote_app_update_data_per_bundle;
}
void OAIRemoteInAppUpdateData::setRemoteAppUpdateDataPerBundle(const QList<OAIRemoteInAppUpdateDataPerBundle> &remote_app_update_data_per_bundle) {
    m_remote_app_update_data_per_bundle = remote_app_update_data_per_bundle;
    m_remote_app_update_data_per_bundle_isSet = true;
}

bool OAIRemoteInAppUpdateData::is_remote_app_update_data_per_bundle_Set() const{
    return m_remote_app_update_data_per_bundle_isSet;
}

bool OAIRemoteInAppUpdateData::is_remote_app_update_data_per_bundle_Valid() const{
    return m_remote_app_update_data_per_bundle_isValid;
}

bool OAIRemoteInAppUpdateData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_remote_app_update_data_per_bundle.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRemoteInAppUpdateData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
