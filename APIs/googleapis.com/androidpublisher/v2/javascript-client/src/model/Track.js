/**
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Track model module.
 * @module model/Track
 * @version v2
 */
class Track {
    /**
     * Constructs a new <code>Track</code>.
     * @alias module:model/Track
     */
    constructor() { 
        
        Track.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Track</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Track} obj Optional instance to populate.
     * @return {module:model/Track} The populated <code>Track</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Track();

            if (data.hasOwnProperty('track')) {
                obj['track'] = ApiClient.convertToType(data['track'], 'String');
            }
            if (data.hasOwnProperty('userFraction')) {
                obj['userFraction'] = ApiClient.convertToType(data['userFraction'], 'Number');
            }
            if (data.hasOwnProperty('versionCodes')) {
                obj['versionCodes'] = ApiClient.convertToType(data['versionCodes'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Track</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Track</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['track'] && !(typeof data['track'] === 'string' || data['track'] instanceof String)) {
            throw new Error("Expected the field `track` to be a primitive type in the JSON string but got " + data['track']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['versionCodes'])) {
            throw new Error("Expected the field `versionCodes` to be an array in the JSON data but got " + data['versionCodes']);
        }

        return true;
    }


}



/**
 * Identifier for this track.
 * @member {String} track
 */
Track.prototype['track'] = undefined;

/**
 * @member {Number} userFraction
 */
Track.prototype['userFraction'] = undefined;

/**
 * Version codes to make active on this track. Note that this list should contain all versions you wish to be active, including those you wish to retain from previous releases.
 * @member {Array.<Number>} versionCodes
 */
Track.prototype['versionCodes'] = undefined;






export default Track;

