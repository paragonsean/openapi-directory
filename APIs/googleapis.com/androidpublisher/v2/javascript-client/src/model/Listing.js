/**
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Listing model module.
 * @module model/Listing
 * @version v2
 */
class Listing {
    /**
     * Constructs a new <code>Listing</code>.
     * @alias module:model/Listing
     */
    constructor() { 
        
        Listing.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Listing</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Listing} obj Optional instance to populate.
     * @return {module:model/Listing} The populated <code>Listing</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Listing();

            if (data.hasOwnProperty('fullDescription')) {
                obj['fullDescription'] = ApiClient.convertToType(data['fullDescription'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('shortDescription')) {
                obj['shortDescription'] = ApiClient.convertToType(data['shortDescription'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('video')) {
                obj['video'] = ApiClient.convertToType(data['video'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Listing</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Listing</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fullDescription'] && !(typeof data['fullDescription'] === 'string' || data['fullDescription'] instanceof String)) {
            throw new Error("Expected the field `fullDescription` to be a primitive type in the JSON string but got " + data['fullDescription']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is a string
        if (data['shortDescription'] && !(typeof data['shortDescription'] === 'string' || data['shortDescription'] instanceof String)) {
            throw new Error("Expected the field `shortDescription` to be a primitive type in the JSON string but got " + data['shortDescription']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['video'] && !(typeof data['video'] === 'string' || data['video'] instanceof String)) {
            throw new Error("Expected the field `video` to be a primitive type in the JSON string but got " + data['video']);
        }

        return true;
    }


}



/**
 * Full description of the app; this may be up to 4000 characters in length.
 * @member {String} fullDescription
 */
Listing.prototype['fullDescription'] = undefined;

/**
 * Language localization code (for example, \"de-AT\" for Austrian German).
 * @member {String} language
 */
Listing.prototype['language'] = undefined;

/**
 * Short description of the app (previously known as promo text); this may be up to 80 characters in length.
 * @member {String} shortDescription
 */
Listing.prototype['shortDescription'] = undefined;

/**
 * App's localized title.
 * @member {String} title
 */
Listing.prototype['title'] = undefined;

/**
 * URL of a promotional YouTube video for the app.
 * @member {String} video
 */
Listing.prototype['video'] = undefined;






export default Listing;

