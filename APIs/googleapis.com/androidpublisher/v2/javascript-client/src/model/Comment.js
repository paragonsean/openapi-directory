/**
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeveloperComment from './DeveloperComment';
import UserComment from './UserComment';

/**
 * The Comment model module.
 * @module model/Comment
 * @version v2
 */
class Comment {
    /**
     * Constructs a new <code>Comment</code>.
     * @alias module:model/Comment
     */
    constructor() { 
        
        Comment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Comment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Comment} obj Optional instance to populate.
     * @return {module:model/Comment} The populated <code>Comment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Comment();

            if (data.hasOwnProperty('developerComment')) {
                obj['developerComment'] = DeveloperComment.constructFromObject(data['developerComment']);
            }
            if (data.hasOwnProperty('userComment')) {
                obj['userComment'] = UserComment.constructFromObject(data['userComment']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Comment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Comment</code>.
     */
    static validateJSON(data) {
        // validate the optional field `developerComment`
        if (data['developerComment']) { // data not null
          DeveloperComment.validateJSON(data['developerComment']);
        }
        // validate the optional field `userComment`
        if (data['userComment']) { // data not null
          UserComment.validateJSON(data['userComment']);
        }

        return true;
    }


}



/**
 * @member {module:model/DeveloperComment} developerComment
 */
Comment.prototype['developerComment'] = undefined;

/**
 * @member {module:model/UserComment} userComment
 */
Comment.prototype['userComment'] = undefined;






export default Comment;

