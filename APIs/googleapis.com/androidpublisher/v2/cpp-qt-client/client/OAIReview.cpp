/**
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReview.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReview::OAIReview(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReview::OAIReview() {
    this->initializeModel();
}

OAIReview::~OAIReview() {}

void OAIReview::initializeModel() {

    m_author_name_isSet = false;
    m_author_name_isValid = false;

    m_comments_isSet = false;
    m_comments_isValid = false;

    m_review_id_isSet = false;
    m_review_id_isValid = false;
}

void OAIReview::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReview::fromJsonObject(QJsonObject json) {

    m_author_name_isValid = ::OpenAPI::fromJsonValue(m_author_name, json[QString("authorName")]);
    m_author_name_isSet = !json[QString("authorName")].isNull() && m_author_name_isValid;

    m_comments_isValid = ::OpenAPI::fromJsonValue(m_comments, json[QString("comments")]);
    m_comments_isSet = !json[QString("comments")].isNull() && m_comments_isValid;

    m_review_id_isValid = ::OpenAPI::fromJsonValue(m_review_id, json[QString("reviewId")]);
    m_review_id_isSet = !json[QString("reviewId")].isNull() && m_review_id_isValid;
}

QString OAIReview::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReview::asJsonObject() const {
    QJsonObject obj;
    if (m_author_name_isSet) {
        obj.insert(QString("authorName"), ::OpenAPI::toJsonValue(m_author_name));
    }
    if (m_comments.size() > 0) {
        obj.insert(QString("comments"), ::OpenAPI::toJsonValue(m_comments));
    }
    if (m_review_id_isSet) {
        obj.insert(QString("reviewId"), ::OpenAPI::toJsonValue(m_review_id));
    }
    return obj;
}

QString OAIReview::getAuthorName() const {
    return m_author_name;
}
void OAIReview::setAuthorName(const QString &author_name) {
    m_author_name = author_name;
    m_author_name_isSet = true;
}

bool OAIReview::is_author_name_Set() const{
    return m_author_name_isSet;
}

bool OAIReview::is_author_name_Valid() const{
    return m_author_name_isValid;
}

QList<OAIComment> OAIReview::getComments() const {
    return m_comments;
}
void OAIReview::setComments(const QList<OAIComment> &comments) {
    m_comments = comments;
    m_comments_isSet = true;
}

bool OAIReview::is_comments_Set() const{
    return m_comments_isSet;
}

bool OAIReview::is_comments_Valid() const{
    return m_comments_isValid;
}

QString OAIReview::getReviewId() const {
    return m_review_id;
}
void OAIReview::setReviewId(const QString &review_id) {
    m_review_id = review_id;
    m_review_id_isSet = true;
}

bool OAIReview::is_review_id_Set() const{
    return m_review_id_isSet;
}

bool OAIReview::is_review_id_Valid() const{
    return m_review_id_isValid;
}

bool OAIReview::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_author_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_review_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReview::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
