/**
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceMetadata.h
 *
 * 
 */

#ifndef OAIDeviceMetadata_H
#define OAIDeviceMetadata_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeviceMetadata : public OAIObject {
public:
    OAIDeviceMetadata();
    OAIDeviceMetadata(QString json);
    ~OAIDeviceMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCpuMake() const;
    void setCpuMake(const QString &cpu_make);
    bool is_cpu_make_Set() const;
    bool is_cpu_make_Valid() const;

    QString getCpuModel() const;
    void setCpuModel(const QString &cpu_model);
    bool is_cpu_model_Set() const;
    bool is_cpu_model_Valid() const;

    QString getDeviceClass() const;
    void setDeviceClass(const QString &device_class);
    bool is_device_class_Set() const;
    bool is_device_class_Valid() const;

    qint32 getGlEsVersion() const;
    void setGlEsVersion(const qint32 &gl_es_version);
    bool is_gl_es_version_Set() const;
    bool is_gl_es_version_Valid() const;

    QString getManufacturer() const;
    void setManufacturer(const QString &manufacturer);
    bool is_manufacturer_Set() const;
    bool is_manufacturer_Valid() const;

    QString getNativePlatform() const;
    void setNativePlatform(const QString &native_platform);
    bool is_native_platform_Set() const;
    bool is_native_platform_Valid() const;

    QString getProductName() const;
    void setProductName(const QString &product_name);
    bool is_product_name_Set() const;
    bool is_product_name_Valid() const;

    qint32 getRamMb() const;
    void setRamMb(const qint32 &ram_mb);
    bool is_ram_mb_Set() const;
    bool is_ram_mb_Valid() const;

    qint32 getScreenDensityDpi() const;
    void setScreenDensityDpi(const qint32 &screen_density_dpi);
    bool is_screen_density_dpi_Set() const;
    bool is_screen_density_dpi_Valid() const;

    qint32 getScreenHeightPx() const;
    void setScreenHeightPx(const qint32 &screen_height_px);
    bool is_screen_height_px_Set() const;
    bool is_screen_height_px_Valid() const;

    qint32 getScreenWidthPx() const;
    void setScreenWidthPx(const qint32 &screen_width_px);
    bool is_screen_width_px_Set() const;
    bool is_screen_width_px_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cpu_make;
    bool m_cpu_make_isSet;
    bool m_cpu_make_isValid;

    QString m_cpu_model;
    bool m_cpu_model_isSet;
    bool m_cpu_model_isValid;

    QString m_device_class;
    bool m_device_class_isSet;
    bool m_device_class_isValid;

    qint32 m_gl_es_version;
    bool m_gl_es_version_isSet;
    bool m_gl_es_version_isValid;

    QString m_manufacturer;
    bool m_manufacturer_isSet;
    bool m_manufacturer_isValid;

    QString m_native_platform;
    bool m_native_platform_isSet;
    bool m_native_platform_isValid;

    QString m_product_name;
    bool m_product_name_isSet;
    bool m_product_name_isValid;

    qint32 m_ram_mb;
    bool m_ram_mb_isSet;
    bool m_ram_mb_isValid;

    qint32 m_screen_density_dpi;
    bool m_screen_density_dpi_isSet;
    bool m_screen_density_dpi_isValid;

    qint32 m_screen_height_px;
    bool m_screen_height_px_isSet;
    bool m_screen_height_px_isValid;

    qint32 m_screen_width_px;
    bool m_screen_width_px_isSet;
    bool m_screen_width_px_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceMetadata)

#endif // OAIDeviceMetadata_H
