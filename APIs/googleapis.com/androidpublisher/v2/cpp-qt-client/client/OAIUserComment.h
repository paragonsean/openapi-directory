/**
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserComment.h
 *
 * 
 */

#ifndef OAIUserComment_H
#define OAIUserComment_H

#include <QJsonObject>

#include "OAIDeviceMetadata.h"
#include "OAITimestamp.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeviceMetadata;
class OAITimestamp;

class OAIUserComment : public OAIObject {
public:
    OAIUserComment();
    OAIUserComment(QString json);
    ~OAIUserComment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAndroidOsVersion() const;
    void setAndroidOsVersion(const qint32 &android_os_version);
    bool is_android_os_version_Set() const;
    bool is_android_os_version_Valid() const;

    qint32 getAppVersionCode() const;
    void setAppVersionCode(const qint32 &app_version_code);
    bool is_app_version_code_Set() const;
    bool is_app_version_code_Valid() const;

    QString getAppVersionName() const;
    void setAppVersionName(const QString &app_version_name);
    bool is_app_version_name_Set() const;
    bool is_app_version_name_Valid() const;

    QString getDevice() const;
    void setDevice(const QString &device);
    bool is_device_Set() const;
    bool is_device_Valid() const;

    OAIDeviceMetadata getDeviceMetadata() const;
    void setDeviceMetadata(const OAIDeviceMetadata &device_metadata);
    bool is_device_metadata_Set() const;
    bool is_device_metadata_Valid() const;

    OAITimestamp getLastModified() const;
    void setLastModified(const OAITimestamp &last_modified);
    bool is_last_modified_Set() const;
    bool is_last_modified_Valid() const;

    QString getOriginalText() const;
    void setOriginalText(const QString &original_text);
    bool is_original_text_Set() const;
    bool is_original_text_Valid() const;

    QString getReviewerLanguage() const;
    void setReviewerLanguage(const QString &reviewer_language);
    bool is_reviewer_language_Set() const;
    bool is_reviewer_language_Valid() const;

    qint32 getStarRating() const;
    void setStarRating(const qint32 &star_rating);
    bool is_star_rating_Set() const;
    bool is_star_rating_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    qint32 getThumbsDownCount() const;
    void setThumbsDownCount(const qint32 &thumbs_down_count);
    bool is_thumbs_down_count_Set() const;
    bool is_thumbs_down_count_Valid() const;

    qint32 getThumbsUpCount() const;
    void setThumbsUpCount(const qint32 &thumbs_up_count);
    bool is_thumbs_up_count_Set() const;
    bool is_thumbs_up_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_android_os_version;
    bool m_android_os_version_isSet;
    bool m_android_os_version_isValid;

    qint32 m_app_version_code;
    bool m_app_version_code_isSet;
    bool m_app_version_code_isValid;

    QString m_app_version_name;
    bool m_app_version_name_isSet;
    bool m_app_version_name_isValid;

    QString m_device;
    bool m_device_isSet;
    bool m_device_isValid;

    OAIDeviceMetadata m_device_metadata;
    bool m_device_metadata_isSet;
    bool m_device_metadata_isValid;

    OAITimestamp m_last_modified;
    bool m_last_modified_isSet;
    bool m_last_modified_isValid;

    QString m_original_text;
    bool m_original_text_isSet;
    bool m_original_text_isValid;

    QString m_reviewer_language;
    bool m_reviewer_language_isSet;
    bool m_reviewer_language_isValid;

    qint32 m_star_rating;
    bool m_star_rating_isSet;
    bool m_star_rating_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    qint32 m_thumbs_down_count;
    bool m_thumbs_down_count_isSet;
    bool m_thumbs_down_count_isValid;

    qint32 m_thumbs_up_count;
    bool m_thumbs_up_count_isSet;
    bool m_thumbs_up_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserComment)

#endif // OAIUserComment_H
