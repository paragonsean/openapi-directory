/**
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionDeferralInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionDeferralInfo::OAISubscriptionDeferralInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionDeferralInfo::OAISubscriptionDeferralInfo() {
    this->initializeModel();
}

OAISubscriptionDeferralInfo::~OAISubscriptionDeferralInfo() {}

void OAISubscriptionDeferralInfo::initializeModel() {

    m_desired_expiry_time_millis_isSet = false;
    m_desired_expiry_time_millis_isValid = false;

    m_expected_expiry_time_millis_isSet = false;
    m_expected_expiry_time_millis_isValid = false;
}

void OAISubscriptionDeferralInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscriptionDeferralInfo::fromJsonObject(QJsonObject json) {

    m_desired_expiry_time_millis_isValid = ::OpenAPI::fromJsonValue(m_desired_expiry_time_millis, json[QString("desiredExpiryTimeMillis")]);
    m_desired_expiry_time_millis_isSet = !json[QString("desiredExpiryTimeMillis")].isNull() && m_desired_expiry_time_millis_isValid;

    m_expected_expiry_time_millis_isValid = ::OpenAPI::fromJsonValue(m_expected_expiry_time_millis, json[QString("expectedExpiryTimeMillis")]);
    m_expected_expiry_time_millis_isSet = !json[QString("expectedExpiryTimeMillis")].isNull() && m_expected_expiry_time_millis_isValid;
}

QString OAISubscriptionDeferralInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscriptionDeferralInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_desired_expiry_time_millis_isSet) {
        obj.insert(QString("desiredExpiryTimeMillis"), ::OpenAPI::toJsonValue(m_desired_expiry_time_millis));
    }
    if (m_expected_expiry_time_millis_isSet) {
        obj.insert(QString("expectedExpiryTimeMillis"), ::OpenAPI::toJsonValue(m_expected_expiry_time_millis));
    }
    return obj;
}

QString OAISubscriptionDeferralInfo::getDesiredExpiryTimeMillis() const {
    return m_desired_expiry_time_millis;
}
void OAISubscriptionDeferralInfo::setDesiredExpiryTimeMillis(const QString &desired_expiry_time_millis) {
    m_desired_expiry_time_millis = desired_expiry_time_millis;
    m_desired_expiry_time_millis_isSet = true;
}

bool OAISubscriptionDeferralInfo::is_desired_expiry_time_millis_Set() const{
    return m_desired_expiry_time_millis_isSet;
}

bool OAISubscriptionDeferralInfo::is_desired_expiry_time_millis_Valid() const{
    return m_desired_expiry_time_millis_isValid;
}

QString OAISubscriptionDeferralInfo::getExpectedExpiryTimeMillis() const {
    return m_expected_expiry_time_millis;
}
void OAISubscriptionDeferralInfo::setExpectedExpiryTimeMillis(const QString &expected_expiry_time_millis) {
    m_expected_expiry_time_millis = expected_expiry_time_millis;
    m_expected_expiry_time_millis_isSet = true;
}

bool OAISubscriptionDeferralInfo::is_expected_expiry_time_millis_Set() const{
    return m_expected_expiry_time_millis_isSet;
}

bool OAISubscriptionDeferralInfo::is_expected_expiry_time_millis_Valid() const{
    return m_expected_expiry_time_millis_isValid;
}

bool OAISubscriptionDeferralInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_desired_expiry_time_millis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expected_expiry_time_millis_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscriptionDeferralInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
