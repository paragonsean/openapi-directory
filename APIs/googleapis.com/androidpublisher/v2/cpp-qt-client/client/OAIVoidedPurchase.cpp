/**
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVoidedPurchase.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVoidedPurchase::OAIVoidedPurchase(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVoidedPurchase::OAIVoidedPurchase() {
    this->initializeModel();
}

OAIVoidedPurchase::~OAIVoidedPurchase() {}

void OAIVoidedPurchase::initializeModel() {

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_purchase_time_millis_isSet = false;
    m_purchase_time_millis_isValid = false;

    m_purchase_token_isSet = false;
    m_purchase_token_isValid = false;

    m_voided_time_millis_isSet = false;
    m_voided_time_millis_isValid = false;
}

void OAIVoidedPurchase::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVoidedPurchase::fromJsonObject(QJsonObject json) {

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_purchase_time_millis_isValid = ::OpenAPI::fromJsonValue(m_purchase_time_millis, json[QString("purchaseTimeMillis")]);
    m_purchase_time_millis_isSet = !json[QString("purchaseTimeMillis")].isNull() && m_purchase_time_millis_isValid;

    m_purchase_token_isValid = ::OpenAPI::fromJsonValue(m_purchase_token, json[QString("purchaseToken")]);
    m_purchase_token_isSet = !json[QString("purchaseToken")].isNull() && m_purchase_token_isValid;

    m_voided_time_millis_isValid = ::OpenAPI::fromJsonValue(m_voided_time_millis, json[QString("voidedTimeMillis")]);
    m_voided_time_millis_isSet = !json[QString("voidedTimeMillis")].isNull() && m_voided_time_millis_isValid;
}

QString OAIVoidedPurchase::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVoidedPurchase::asJsonObject() const {
    QJsonObject obj;
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_purchase_time_millis_isSet) {
        obj.insert(QString("purchaseTimeMillis"), ::OpenAPI::toJsonValue(m_purchase_time_millis));
    }
    if (m_purchase_token_isSet) {
        obj.insert(QString("purchaseToken"), ::OpenAPI::toJsonValue(m_purchase_token));
    }
    if (m_voided_time_millis_isSet) {
        obj.insert(QString("voidedTimeMillis"), ::OpenAPI::toJsonValue(m_voided_time_millis));
    }
    return obj;
}

QString OAIVoidedPurchase::getKind() const {
    return m_kind;
}
void OAIVoidedPurchase::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIVoidedPurchase::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIVoidedPurchase::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIVoidedPurchase::getPurchaseTimeMillis() const {
    return m_purchase_time_millis;
}
void OAIVoidedPurchase::setPurchaseTimeMillis(const QString &purchase_time_millis) {
    m_purchase_time_millis = purchase_time_millis;
    m_purchase_time_millis_isSet = true;
}

bool OAIVoidedPurchase::is_purchase_time_millis_Set() const{
    return m_purchase_time_millis_isSet;
}

bool OAIVoidedPurchase::is_purchase_time_millis_Valid() const{
    return m_purchase_time_millis_isValid;
}

QString OAIVoidedPurchase::getPurchaseToken() const {
    return m_purchase_token;
}
void OAIVoidedPurchase::setPurchaseToken(const QString &purchase_token) {
    m_purchase_token = purchase_token;
    m_purchase_token_isSet = true;
}

bool OAIVoidedPurchase::is_purchase_token_Set() const{
    return m_purchase_token_isSet;
}

bool OAIVoidedPurchase::is_purchase_token_Valid() const{
    return m_purchase_token_isValid;
}

QString OAIVoidedPurchase::getVoidedTimeMillis() const {
    return m_voided_time_millis;
}
void OAIVoidedPurchase::setVoidedTimeMillis(const QString &voided_time_millis) {
    m_voided_time_millis = voided_time_millis;
    m_voided_time_millis_isSet = true;
}

bool OAIVoidedPurchase::is_voided_time_millis_Set() const{
    return m_voided_time_millis_isSet;
}

bool OAIVoidedPurchase::is_voided_time_millis_Valid() const{
    return m_voided_time_millis_isValid;
}

bool OAIVoidedPurchase::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_time_millis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voided_time_millis_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVoidedPurchase::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
