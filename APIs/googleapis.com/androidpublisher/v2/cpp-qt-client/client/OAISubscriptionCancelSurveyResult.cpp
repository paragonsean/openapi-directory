/**
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionCancelSurveyResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionCancelSurveyResult::OAISubscriptionCancelSurveyResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionCancelSurveyResult::OAISubscriptionCancelSurveyResult() {
    this->initializeModel();
}

OAISubscriptionCancelSurveyResult::~OAISubscriptionCancelSurveyResult() {}

void OAISubscriptionCancelSurveyResult::initializeModel() {

    m_cancel_survey_reason_isSet = false;
    m_cancel_survey_reason_isValid = false;

    m_user_input_cancel_reason_isSet = false;
    m_user_input_cancel_reason_isValid = false;
}

void OAISubscriptionCancelSurveyResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscriptionCancelSurveyResult::fromJsonObject(QJsonObject json) {

    m_cancel_survey_reason_isValid = ::OpenAPI::fromJsonValue(m_cancel_survey_reason, json[QString("cancelSurveyReason")]);
    m_cancel_survey_reason_isSet = !json[QString("cancelSurveyReason")].isNull() && m_cancel_survey_reason_isValid;

    m_user_input_cancel_reason_isValid = ::OpenAPI::fromJsonValue(m_user_input_cancel_reason, json[QString("userInputCancelReason")]);
    m_user_input_cancel_reason_isSet = !json[QString("userInputCancelReason")].isNull() && m_user_input_cancel_reason_isValid;
}

QString OAISubscriptionCancelSurveyResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscriptionCancelSurveyResult::asJsonObject() const {
    QJsonObject obj;
    if (m_cancel_survey_reason_isSet) {
        obj.insert(QString("cancelSurveyReason"), ::OpenAPI::toJsonValue(m_cancel_survey_reason));
    }
    if (m_user_input_cancel_reason_isSet) {
        obj.insert(QString("userInputCancelReason"), ::OpenAPI::toJsonValue(m_user_input_cancel_reason));
    }
    return obj;
}

qint32 OAISubscriptionCancelSurveyResult::getCancelSurveyReason() const {
    return m_cancel_survey_reason;
}
void OAISubscriptionCancelSurveyResult::setCancelSurveyReason(const qint32 &cancel_survey_reason) {
    m_cancel_survey_reason = cancel_survey_reason;
    m_cancel_survey_reason_isSet = true;
}

bool OAISubscriptionCancelSurveyResult::is_cancel_survey_reason_Set() const{
    return m_cancel_survey_reason_isSet;
}

bool OAISubscriptionCancelSurveyResult::is_cancel_survey_reason_Valid() const{
    return m_cancel_survey_reason_isValid;
}

QString OAISubscriptionCancelSurveyResult::getUserInputCancelReason() const {
    return m_user_input_cancel_reason;
}
void OAISubscriptionCancelSurveyResult::setUserInputCancelReason(const QString &user_input_cancel_reason) {
    m_user_input_cancel_reason = user_input_cancel_reason;
    m_user_input_cancel_reason_isSet = true;
}

bool OAISubscriptionCancelSurveyResult::is_user_input_cancel_reason_Set() const{
    return m_user_input_cancel_reason_isSet;
}

bool OAISubscriptionCancelSurveyResult::is_user_input_cancel_reason_Valid() const{
    return m_user_input_cancel_reason_isValid;
}

bool OAISubscriptionCancelSurveyResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cancel_survey_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_input_cancel_reason_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscriptionCancelSurveyResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
