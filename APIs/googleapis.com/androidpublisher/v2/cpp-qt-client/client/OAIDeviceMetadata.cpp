/**
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeviceMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeviceMetadata::OAIDeviceMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeviceMetadata::OAIDeviceMetadata() {
    this->initializeModel();
}

OAIDeviceMetadata::~OAIDeviceMetadata() {}

void OAIDeviceMetadata::initializeModel() {

    m_cpu_make_isSet = false;
    m_cpu_make_isValid = false;

    m_cpu_model_isSet = false;
    m_cpu_model_isValid = false;

    m_device_class_isSet = false;
    m_device_class_isValid = false;

    m_gl_es_version_isSet = false;
    m_gl_es_version_isValid = false;

    m_manufacturer_isSet = false;
    m_manufacturer_isValid = false;

    m_native_platform_isSet = false;
    m_native_platform_isValid = false;

    m_product_name_isSet = false;
    m_product_name_isValid = false;

    m_ram_mb_isSet = false;
    m_ram_mb_isValid = false;

    m_screen_density_dpi_isSet = false;
    m_screen_density_dpi_isValid = false;

    m_screen_height_px_isSet = false;
    m_screen_height_px_isValid = false;

    m_screen_width_px_isSet = false;
    m_screen_width_px_isValid = false;
}

void OAIDeviceMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeviceMetadata::fromJsonObject(QJsonObject json) {

    m_cpu_make_isValid = ::OpenAPI::fromJsonValue(m_cpu_make, json[QString("cpuMake")]);
    m_cpu_make_isSet = !json[QString("cpuMake")].isNull() && m_cpu_make_isValid;

    m_cpu_model_isValid = ::OpenAPI::fromJsonValue(m_cpu_model, json[QString("cpuModel")]);
    m_cpu_model_isSet = !json[QString("cpuModel")].isNull() && m_cpu_model_isValid;

    m_device_class_isValid = ::OpenAPI::fromJsonValue(m_device_class, json[QString("deviceClass")]);
    m_device_class_isSet = !json[QString("deviceClass")].isNull() && m_device_class_isValid;

    m_gl_es_version_isValid = ::OpenAPI::fromJsonValue(m_gl_es_version, json[QString("glEsVersion")]);
    m_gl_es_version_isSet = !json[QString("glEsVersion")].isNull() && m_gl_es_version_isValid;

    m_manufacturer_isValid = ::OpenAPI::fromJsonValue(m_manufacturer, json[QString("manufacturer")]);
    m_manufacturer_isSet = !json[QString("manufacturer")].isNull() && m_manufacturer_isValid;

    m_native_platform_isValid = ::OpenAPI::fromJsonValue(m_native_platform, json[QString("nativePlatform")]);
    m_native_platform_isSet = !json[QString("nativePlatform")].isNull() && m_native_platform_isValid;

    m_product_name_isValid = ::OpenAPI::fromJsonValue(m_product_name, json[QString("productName")]);
    m_product_name_isSet = !json[QString("productName")].isNull() && m_product_name_isValid;

    m_ram_mb_isValid = ::OpenAPI::fromJsonValue(m_ram_mb, json[QString("ramMb")]);
    m_ram_mb_isSet = !json[QString("ramMb")].isNull() && m_ram_mb_isValid;

    m_screen_density_dpi_isValid = ::OpenAPI::fromJsonValue(m_screen_density_dpi, json[QString("screenDensityDpi")]);
    m_screen_density_dpi_isSet = !json[QString("screenDensityDpi")].isNull() && m_screen_density_dpi_isValid;

    m_screen_height_px_isValid = ::OpenAPI::fromJsonValue(m_screen_height_px, json[QString("screenHeightPx")]);
    m_screen_height_px_isSet = !json[QString("screenHeightPx")].isNull() && m_screen_height_px_isValid;

    m_screen_width_px_isValid = ::OpenAPI::fromJsonValue(m_screen_width_px, json[QString("screenWidthPx")]);
    m_screen_width_px_isSet = !json[QString("screenWidthPx")].isNull() && m_screen_width_px_isValid;
}

QString OAIDeviceMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeviceMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_cpu_make_isSet) {
        obj.insert(QString("cpuMake"), ::OpenAPI::toJsonValue(m_cpu_make));
    }
    if (m_cpu_model_isSet) {
        obj.insert(QString("cpuModel"), ::OpenAPI::toJsonValue(m_cpu_model));
    }
    if (m_device_class_isSet) {
        obj.insert(QString("deviceClass"), ::OpenAPI::toJsonValue(m_device_class));
    }
    if (m_gl_es_version_isSet) {
        obj.insert(QString("glEsVersion"), ::OpenAPI::toJsonValue(m_gl_es_version));
    }
    if (m_manufacturer_isSet) {
        obj.insert(QString("manufacturer"), ::OpenAPI::toJsonValue(m_manufacturer));
    }
    if (m_native_platform_isSet) {
        obj.insert(QString("nativePlatform"), ::OpenAPI::toJsonValue(m_native_platform));
    }
    if (m_product_name_isSet) {
        obj.insert(QString("productName"), ::OpenAPI::toJsonValue(m_product_name));
    }
    if (m_ram_mb_isSet) {
        obj.insert(QString("ramMb"), ::OpenAPI::toJsonValue(m_ram_mb));
    }
    if (m_screen_density_dpi_isSet) {
        obj.insert(QString("screenDensityDpi"), ::OpenAPI::toJsonValue(m_screen_density_dpi));
    }
    if (m_screen_height_px_isSet) {
        obj.insert(QString("screenHeightPx"), ::OpenAPI::toJsonValue(m_screen_height_px));
    }
    if (m_screen_width_px_isSet) {
        obj.insert(QString("screenWidthPx"), ::OpenAPI::toJsonValue(m_screen_width_px));
    }
    return obj;
}

QString OAIDeviceMetadata::getCpuMake() const {
    return m_cpu_make;
}
void OAIDeviceMetadata::setCpuMake(const QString &cpu_make) {
    m_cpu_make = cpu_make;
    m_cpu_make_isSet = true;
}

bool OAIDeviceMetadata::is_cpu_make_Set() const{
    return m_cpu_make_isSet;
}

bool OAIDeviceMetadata::is_cpu_make_Valid() const{
    return m_cpu_make_isValid;
}

QString OAIDeviceMetadata::getCpuModel() const {
    return m_cpu_model;
}
void OAIDeviceMetadata::setCpuModel(const QString &cpu_model) {
    m_cpu_model = cpu_model;
    m_cpu_model_isSet = true;
}

bool OAIDeviceMetadata::is_cpu_model_Set() const{
    return m_cpu_model_isSet;
}

bool OAIDeviceMetadata::is_cpu_model_Valid() const{
    return m_cpu_model_isValid;
}

QString OAIDeviceMetadata::getDeviceClass() const {
    return m_device_class;
}
void OAIDeviceMetadata::setDeviceClass(const QString &device_class) {
    m_device_class = device_class;
    m_device_class_isSet = true;
}

bool OAIDeviceMetadata::is_device_class_Set() const{
    return m_device_class_isSet;
}

bool OAIDeviceMetadata::is_device_class_Valid() const{
    return m_device_class_isValid;
}

qint32 OAIDeviceMetadata::getGlEsVersion() const {
    return m_gl_es_version;
}
void OAIDeviceMetadata::setGlEsVersion(const qint32 &gl_es_version) {
    m_gl_es_version = gl_es_version;
    m_gl_es_version_isSet = true;
}

bool OAIDeviceMetadata::is_gl_es_version_Set() const{
    return m_gl_es_version_isSet;
}

bool OAIDeviceMetadata::is_gl_es_version_Valid() const{
    return m_gl_es_version_isValid;
}

QString OAIDeviceMetadata::getManufacturer() const {
    return m_manufacturer;
}
void OAIDeviceMetadata::setManufacturer(const QString &manufacturer) {
    m_manufacturer = manufacturer;
    m_manufacturer_isSet = true;
}

bool OAIDeviceMetadata::is_manufacturer_Set() const{
    return m_manufacturer_isSet;
}

bool OAIDeviceMetadata::is_manufacturer_Valid() const{
    return m_manufacturer_isValid;
}

QString OAIDeviceMetadata::getNativePlatform() const {
    return m_native_platform;
}
void OAIDeviceMetadata::setNativePlatform(const QString &native_platform) {
    m_native_platform = native_platform;
    m_native_platform_isSet = true;
}

bool OAIDeviceMetadata::is_native_platform_Set() const{
    return m_native_platform_isSet;
}

bool OAIDeviceMetadata::is_native_platform_Valid() const{
    return m_native_platform_isValid;
}

QString OAIDeviceMetadata::getProductName() const {
    return m_product_name;
}
void OAIDeviceMetadata::setProductName(const QString &product_name) {
    m_product_name = product_name;
    m_product_name_isSet = true;
}

bool OAIDeviceMetadata::is_product_name_Set() const{
    return m_product_name_isSet;
}

bool OAIDeviceMetadata::is_product_name_Valid() const{
    return m_product_name_isValid;
}

qint32 OAIDeviceMetadata::getRamMb() const {
    return m_ram_mb;
}
void OAIDeviceMetadata::setRamMb(const qint32 &ram_mb) {
    m_ram_mb = ram_mb;
    m_ram_mb_isSet = true;
}

bool OAIDeviceMetadata::is_ram_mb_Set() const{
    return m_ram_mb_isSet;
}

bool OAIDeviceMetadata::is_ram_mb_Valid() const{
    return m_ram_mb_isValid;
}

qint32 OAIDeviceMetadata::getScreenDensityDpi() const {
    return m_screen_density_dpi;
}
void OAIDeviceMetadata::setScreenDensityDpi(const qint32 &screen_density_dpi) {
    m_screen_density_dpi = screen_density_dpi;
    m_screen_density_dpi_isSet = true;
}

bool OAIDeviceMetadata::is_screen_density_dpi_Set() const{
    return m_screen_density_dpi_isSet;
}

bool OAIDeviceMetadata::is_screen_density_dpi_Valid() const{
    return m_screen_density_dpi_isValid;
}

qint32 OAIDeviceMetadata::getScreenHeightPx() const {
    return m_screen_height_px;
}
void OAIDeviceMetadata::setScreenHeightPx(const qint32 &screen_height_px) {
    m_screen_height_px = screen_height_px;
    m_screen_height_px_isSet = true;
}

bool OAIDeviceMetadata::is_screen_height_px_Set() const{
    return m_screen_height_px_isSet;
}

bool OAIDeviceMetadata::is_screen_height_px_Valid() const{
    return m_screen_height_px_isValid;
}

qint32 OAIDeviceMetadata::getScreenWidthPx() const {
    return m_screen_width_px;
}
void OAIDeviceMetadata::setScreenWidthPx(const qint32 &screen_width_px) {
    m_screen_width_px = screen_width_px;
    m_screen_width_px_isSet = true;
}

bool OAIDeviceMetadata::is_screen_width_px_Set() const{
    return m_screen_width_px_isSet;
}

bool OAIDeviceMetadata::is_screen_width_px_Valid() const{
    return m_screen_width_px_isValid;
}

bool OAIDeviceMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cpu_make_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cpu_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gl_es_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manufacturer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_native_platform_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ram_mb_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_screen_density_dpi_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_screen_height_px_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_screen_width_px_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeviceMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
