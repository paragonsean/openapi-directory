/**
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIComment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIComment::OAIComment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIComment::OAIComment() {
    this->initializeModel();
}

OAIComment::~OAIComment() {}

void OAIComment::initializeModel() {

    m_developer_comment_isSet = false;
    m_developer_comment_isValid = false;

    m_user_comment_isSet = false;
    m_user_comment_isValid = false;
}

void OAIComment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIComment::fromJsonObject(QJsonObject json) {

    m_developer_comment_isValid = ::OpenAPI::fromJsonValue(m_developer_comment, json[QString("developerComment")]);
    m_developer_comment_isSet = !json[QString("developerComment")].isNull() && m_developer_comment_isValid;

    m_user_comment_isValid = ::OpenAPI::fromJsonValue(m_user_comment, json[QString("userComment")]);
    m_user_comment_isSet = !json[QString("userComment")].isNull() && m_user_comment_isValid;
}

QString OAIComment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIComment::asJsonObject() const {
    QJsonObject obj;
    if (m_developer_comment.isSet()) {
        obj.insert(QString("developerComment"), ::OpenAPI::toJsonValue(m_developer_comment));
    }
    if (m_user_comment.isSet()) {
        obj.insert(QString("userComment"), ::OpenAPI::toJsonValue(m_user_comment));
    }
    return obj;
}

OAIDeveloperComment OAIComment::getDeveloperComment() const {
    return m_developer_comment;
}
void OAIComment::setDeveloperComment(const OAIDeveloperComment &developer_comment) {
    m_developer_comment = developer_comment;
    m_developer_comment_isSet = true;
}

bool OAIComment::is_developer_comment_Set() const{
    return m_developer_comment_isSet;
}

bool OAIComment::is_developer_comment_Valid() const{
    return m_developer_comment_isValid;
}

OAIUserComment OAIComment::getUserComment() const {
    return m_user_comment;
}
void OAIComment::setUserComment(const OAIUserComment &user_comment) {
    m_user_comment = user_comment;
    m_user_comment_isSet = true;
}

bool OAIComment::is_user_comment_Set() const{
    return m_user_comment_isSet;
}

bool OAIComment::is_user_comment_Valid() const{
    return m_user_comment_isValid;
}

bool OAIComment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_developer_comment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_comment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIComment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
