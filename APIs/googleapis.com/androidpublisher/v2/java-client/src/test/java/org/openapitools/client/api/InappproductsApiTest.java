/*
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InAppProduct;
import org.openapitools.client.model.InappproductsListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InappproductsApi
 */
@Disabled
public class InappproductsApiTest {

    private final InappproductsApi api = new InappproductsApi();

    /**
     * Delete an in-app product for an app.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsDeleteTest() throws ApiException {
        String packageName = null;
        String sku = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        api.androidpublisherInappproductsDelete(packageName, sku, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

    /**
     * Returns information about the in-app product specified.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsGetTest() throws ApiException {
        String packageName = null;
        String sku = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        InAppProduct response = api.androidpublisherInappproductsGet(packageName, sku, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

    /**
     * Creates a new in-app product for an app.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsInsertTest() throws ApiException {
        String packageName = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Boolean autoConvertMissingPrices = null;
        InAppProduct inAppProduct = null;
        InAppProduct response = api.androidpublisherInappproductsInsert(packageName, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, autoConvertMissingPrices, inAppProduct);
        // TODO: test validations
    }

    /**
     * List all the in-app products for an Android app, both subscriptions and managed in-app products..
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsListTest() throws ApiException {
        String packageName = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Integer maxResults = null;
        Integer startIndex = null;
        String token = null;
        InappproductsListResponse response = api.androidpublisherInappproductsList(packageName, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, maxResults, startIndex, token);
        // TODO: test validations
    }

    /**
     * Updates the details of an in-app product. This method supports patch semantics.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsPatchTest() throws ApiException {
        String packageName = null;
        String sku = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Boolean autoConvertMissingPrices = null;
        InAppProduct inAppProduct = null;
        InAppProduct response = api.androidpublisherInappproductsPatch(packageName, sku, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, autoConvertMissingPrices, inAppProduct);
        // TODO: test validations
    }

    /**
     * Updates the details of an in-app product.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidpublisherInappproductsUpdateTest() throws ApiException {
        String packageName = null;
        String sku = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Boolean autoConvertMissingPrices = null;
        InAppProduct inAppProduct = null;
        InAppProduct response = api.androidpublisherInappproductsUpdate(packageName, sku, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, autoConvertMissingPrices, inAppProduct);
        // TODO: test validations
    }

}
