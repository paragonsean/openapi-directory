/*
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.InAppProduct;
import org.openapitools.client.model.PageInfo;
import org.openapitools.client.model.TokenPagination;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InappproductsListResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:26.985705-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InappproductsListResponse {
  public static final String SERIALIZED_NAME_INAPPPRODUCT = "inappproduct";
  @SerializedName(SERIALIZED_NAME_INAPPPRODUCT)
  private List<InAppProduct> inappproduct = new ArrayList<>();

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind = "androidpublisher#inappproductsListResponse";

  public static final String SERIALIZED_NAME_PAGE_INFO = "pageInfo";
  @SerializedName(SERIALIZED_NAME_PAGE_INFO)
  private PageInfo pageInfo;

  public static final String SERIALIZED_NAME_TOKEN_PAGINATION = "tokenPagination";
  @SerializedName(SERIALIZED_NAME_TOKEN_PAGINATION)
  private TokenPagination tokenPagination;

  public InappproductsListResponse() {
  }

  public InappproductsListResponse inappproduct(List<InAppProduct> inappproduct) {
    this.inappproduct = inappproduct;
    return this;
  }

  public InappproductsListResponse addInappproductItem(InAppProduct inappproductItem) {
    if (this.inappproduct == null) {
      this.inappproduct = new ArrayList<>();
    }
    this.inappproduct.add(inappproductItem);
    return this;
  }

  /**
   * Get inappproduct
   * @return inappproduct
   */
  @javax.annotation.Nullable
  public List<InAppProduct> getInappproduct() {
    return inappproduct;
  }

  public void setInappproduct(List<InAppProduct> inappproduct) {
    this.inappproduct = inappproduct;
  }


  public InappproductsListResponse kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;androidpublisher#inappproductsListResponse\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public InappproductsListResponse pageInfo(PageInfo pageInfo) {
    this.pageInfo = pageInfo;
    return this;
  }

  /**
   * Get pageInfo
   * @return pageInfo
   */
  @javax.annotation.Nullable
  public PageInfo getPageInfo() {
    return pageInfo;
  }

  public void setPageInfo(PageInfo pageInfo) {
    this.pageInfo = pageInfo;
  }


  public InappproductsListResponse tokenPagination(TokenPagination tokenPagination) {
    this.tokenPagination = tokenPagination;
    return this;
  }

  /**
   * Get tokenPagination
   * @return tokenPagination
   */
  @javax.annotation.Nullable
  public TokenPagination getTokenPagination() {
    return tokenPagination;
  }

  public void setTokenPagination(TokenPagination tokenPagination) {
    this.tokenPagination = tokenPagination;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InappproductsListResponse inappproductsListResponse = (InappproductsListResponse) o;
    return Objects.equals(this.inappproduct, inappproductsListResponse.inappproduct) &&
        Objects.equals(this.kind, inappproductsListResponse.kind) &&
        Objects.equals(this.pageInfo, inappproductsListResponse.pageInfo) &&
        Objects.equals(this.tokenPagination, inappproductsListResponse.tokenPagination);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inappproduct, kind, pageInfo, tokenPagination);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InappproductsListResponse {\n");
    sb.append("    inappproduct: ").append(toIndentedString(inappproduct)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    pageInfo: ").append(toIndentedString(pageInfo)).append("\n");
    sb.append("    tokenPagination: ").append(toIndentedString(tokenPagination)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("inappproduct");
    openapiFields.add("kind");
    openapiFields.add("pageInfo");
    openapiFields.add("tokenPagination");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InappproductsListResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InappproductsListResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InappproductsListResponse is not found in the empty JSON string", InappproductsListResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InappproductsListResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InappproductsListResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("inappproduct") != null && !jsonObj.get("inappproduct").isJsonNull()) {
        JsonArray jsonArrayinappproduct = jsonObj.getAsJsonArray("inappproduct");
        if (jsonArrayinappproduct != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inappproduct").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inappproduct` to be an array in the JSON string but got `%s`", jsonObj.get("inappproduct").toString()));
          }

          // validate the optional field `inappproduct` (array)
          for (int i = 0; i < jsonArrayinappproduct.size(); i++) {
            InAppProduct.validateJsonElement(jsonArrayinappproduct.get(i));
          };
        }
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // validate the optional field `pageInfo`
      if (jsonObj.get("pageInfo") != null && !jsonObj.get("pageInfo").isJsonNull()) {
        PageInfo.validateJsonElement(jsonObj.get("pageInfo"));
      }
      // validate the optional field `tokenPagination`
      if (jsonObj.get("tokenPagination") != null && !jsonObj.get("tokenPagination").isJsonNull()) {
        TokenPagination.validateJsonElement(jsonObj.get("tokenPagination"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InappproductsListResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InappproductsListResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InappproductsListResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InappproductsListResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<InappproductsListResponse>() {
           @Override
           public void write(JsonWriter out, InappproductsListResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InappproductsListResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InappproductsListResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InappproductsListResponse
   * @throws IOException if the JSON string is invalid with respect to InappproductsListResponse
   */
  public static InappproductsListResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InappproductsListResponse.class);
  }

  /**
   * Convert an instance of InappproductsListResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

