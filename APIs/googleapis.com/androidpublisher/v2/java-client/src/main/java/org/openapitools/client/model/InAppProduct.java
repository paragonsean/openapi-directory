/*
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.InAppProductListing;
import org.openapitools.client.model.Price;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InAppProduct
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:26.985705-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InAppProduct {
  public static final String SERIALIZED_NAME_DEFAULT_LANGUAGE = "defaultLanguage";
  @SerializedName(SERIALIZED_NAME_DEFAULT_LANGUAGE)
  private String defaultLanguage;

  public static final String SERIALIZED_NAME_DEFAULT_PRICE = "defaultPrice";
  @SerializedName(SERIALIZED_NAME_DEFAULT_PRICE)
  private Price defaultPrice;

  public static final String SERIALIZED_NAME_GRACE_PERIOD = "gracePeriod";
  @SerializedName(SERIALIZED_NAME_GRACE_PERIOD)
  private String gracePeriod;

  public static final String SERIALIZED_NAME_LISTINGS = "listings";
  @SerializedName(SERIALIZED_NAME_LISTINGS)
  private Map<String, InAppProductListing> listings = new HashMap<>();

  public static final String SERIALIZED_NAME_PACKAGE_NAME = "packageName";
  @SerializedName(SERIALIZED_NAME_PACKAGE_NAME)
  private String packageName;

  public static final String SERIALIZED_NAME_PRICES = "prices";
  @SerializedName(SERIALIZED_NAME_PRICES)
  private Map<String, Price> prices = new HashMap<>();

  public static final String SERIALIZED_NAME_PURCHASE_TYPE = "purchaseType";
  @SerializedName(SERIALIZED_NAME_PURCHASE_TYPE)
  private String purchaseType;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_PERIOD = "subscriptionPeriod";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_PERIOD)
  private String subscriptionPeriod;

  public static final String SERIALIZED_NAME_TRIAL_PERIOD = "trialPeriod";
  @SerializedName(SERIALIZED_NAME_TRIAL_PERIOD)
  private String trialPeriod;

  public InAppProduct() {
  }

  public InAppProduct defaultLanguage(String defaultLanguage) {
    this.defaultLanguage = defaultLanguage;
    return this;
  }

  /**
   * The default language of the localized data, as defined by BCP 47. e.g. \&quot;en-US\&quot;, \&quot;en-GB\&quot;.
   * @return defaultLanguage
   */
  @javax.annotation.Nullable
  public String getDefaultLanguage() {
    return defaultLanguage;
  }

  public void setDefaultLanguage(String defaultLanguage) {
    this.defaultLanguage = defaultLanguage;
  }


  public InAppProduct defaultPrice(Price defaultPrice) {
    this.defaultPrice = defaultPrice;
    return this;
  }

  /**
   * Get defaultPrice
   * @return defaultPrice
   */
  @javax.annotation.Nullable
  public Price getDefaultPrice() {
    return defaultPrice;
  }

  public void setDefaultPrice(Price defaultPrice) {
    this.defaultPrice = defaultPrice;
  }


  public InAppProduct gracePeriod(String gracePeriod) {
    this.gracePeriod = gracePeriod;
    return this;
  }

  /**
   * Grace period of the subscription, specified in ISO 8601 format. It will allow developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values &#x3D; \&quot;P3D\&quot; (three days), \&quot;P7D\&quot; (seven days), \&quot;P14D\&quot; (fourteen days), and \&quot;P30D\&quot; (thirty days)
   * @return gracePeriod
   */
  @javax.annotation.Nullable
  public String getGracePeriod() {
    return gracePeriod;
  }

  public void setGracePeriod(String gracePeriod) {
    this.gracePeriod = gracePeriod;
  }


  public InAppProduct listings(Map<String, InAppProductListing> listings) {
    this.listings = listings;
    return this;
  }

  public InAppProduct putListingsItem(String key, InAppProductListing listingsItem) {
    if (this.listings == null) {
      this.listings = new HashMap<>();
    }
    this.listings.put(key, listingsItem);
    return this;
  }

  /**
   * List of localized title and description data.
   * @return listings
   */
  @javax.annotation.Nullable
  public Map<String, InAppProductListing> getListings() {
    return listings;
  }

  public void setListings(Map<String, InAppProductListing> listings) {
    this.listings = listings;
  }


  public InAppProduct packageName(String packageName) {
    this.packageName = packageName;
    return this;
  }

  /**
   * The package name of the parent app.
   * @return packageName
   */
  @javax.annotation.Nullable
  public String getPackageName() {
    return packageName;
  }

  public void setPackageName(String packageName) {
    this.packageName = packageName;
  }


  public InAppProduct prices(Map<String, Price> prices) {
    this.prices = prices;
    return this;
  }

  public InAppProduct putPricesItem(String key, Price pricesItem) {
    if (this.prices == null) {
      this.prices = new HashMap<>();
    }
    this.prices.put(key, pricesItem);
    return this;
  }

  /**
   * Prices per buyer region. None of these prices should be zero. In-app products can never be free.
   * @return prices
   */
  @javax.annotation.Nullable
  public Map<String, Price> getPrices() {
    return prices;
  }

  public void setPrices(Map<String, Price> prices) {
    this.prices = prices;
  }


  public InAppProduct purchaseType(String purchaseType) {
    this.purchaseType = purchaseType;
    return this;
  }

  /**
   * Purchase type enum value. Unmodifiable after creation.
   * @return purchaseType
   */
  @javax.annotation.Nullable
  public String getPurchaseType() {
    return purchaseType;
  }

  public void setPurchaseType(String purchaseType) {
    this.purchaseType = purchaseType;
  }


  public InAppProduct sku(String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * The stock-keeping-unit (SKU) of the product, unique within an app.
   * @return sku
   */
  @javax.annotation.Nullable
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }


  public InAppProduct status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public InAppProduct subscriptionPeriod(String subscriptionPeriod) {
    this.subscriptionPeriod = subscriptionPeriod;
    return this;
  }

  /**
   * Subscription period, specified in ISO 8601 format. Acceptable values are \&quot;P1W\&quot; (one week), \&quot;P1M\&quot; (one month), \&quot;P3M\&quot; (three months), \&quot;P6M\&quot; (six months), and \&quot;P1Y\&quot; (one year).
   * @return subscriptionPeriod
   */
  @javax.annotation.Nullable
  public String getSubscriptionPeriod() {
    return subscriptionPeriod;
  }

  public void setSubscriptionPeriod(String subscriptionPeriod) {
    this.subscriptionPeriod = subscriptionPeriod;
  }


  public InAppProduct trialPeriod(String trialPeriod) {
    this.trialPeriod = trialPeriod;
    return this;
  }

  /**
   * Trial period, specified in ISO 8601 format. Acceptable values are anything between \&quot;P7D\&quot; (seven days) and \&quot;P999D\&quot; (999 days). Seasonal subscriptions cannot have a trial period.
   * @return trialPeriod
   */
  @javax.annotation.Nullable
  public String getTrialPeriod() {
    return trialPeriod;
  }

  public void setTrialPeriod(String trialPeriod) {
    this.trialPeriod = trialPeriod;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InAppProduct inAppProduct = (InAppProduct) o;
    return Objects.equals(this.defaultLanguage, inAppProduct.defaultLanguage) &&
        Objects.equals(this.defaultPrice, inAppProduct.defaultPrice) &&
        Objects.equals(this.gracePeriod, inAppProduct.gracePeriod) &&
        Objects.equals(this.listings, inAppProduct.listings) &&
        Objects.equals(this.packageName, inAppProduct.packageName) &&
        Objects.equals(this.prices, inAppProduct.prices) &&
        Objects.equals(this.purchaseType, inAppProduct.purchaseType) &&
        Objects.equals(this.sku, inAppProduct.sku) &&
        Objects.equals(this.status, inAppProduct.status) &&
        Objects.equals(this.subscriptionPeriod, inAppProduct.subscriptionPeriod) &&
        Objects.equals(this.trialPeriod, inAppProduct.trialPeriod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultLanguage, defaultPrice, gracePeriod, listings, packageName, prices, purchaseType, sku, status, subscriptionPeriod, trialPeriod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InAppProduct {\n");
    sb.append("    defaultLanguage: ").append(toIndentedString(defaultLanguage)).append("\n");
    sb.append("    defaultPrice: ").append(toIndentedString(defaultPrice)).append("\n");
    sb.append("    gracePeriod: ").append(toIndentedString(gracePeriod)).append("\n");
    sb.append("    listings: ").append(toIndentedString(listings)).append("\n");
    sb.append("    packageName: ").append(toIndentedString(packageName)).append("\n");
    sb.append("    prices: ").append(toIndentedString(prices)).append("\n");
    sb.append("    purchaseType: ").append(toIndentedString(purchaseType)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subscriptionPeriod: ").append(toIndentedString(subscriptionPeriod)).append("\n");
    sb.append("    trialPeriod: ").append(toIndentedString(trialPeriod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defaultLanguage");
    openapiFields.add("defaultPrice");
    openapiFields.add("gracePeriod");
    openapiFields.add("listings");
    openapiFields.add("packageName");
    openapiFields.add("prices");
    openapiFields.add("purchaseType");
    openapiFields.add("sku");
    openapiFields.add("status");
    openapiFields.add("subscriptionPeriod");
    openapiFields.add("trialPeriod");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InAppProduct
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InAppProduct.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InAppProduct is not found in the empty JSON string", InAppProduct.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InAppProduct.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InAppProduct` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("defaultLanguage") != null && !jsonObj.get("defaultLanguage").isJsonNull()) && !jsonObj.get("defaultLanguage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultLanguage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultLanguage").toString()));
      }
      // validate the optional field `defaultPrice`
      if (jsonObj.get("defaultPrice") != null && !jsonObj.get("defaultPrice").isJsonNull()) {
        Price.validateJsonElement(jsonObj.get("defaultPrice"));
      }
      if ((jsonObj.get("gracePeriod") != null && !jsonObj.get("gracePeriod").isJsonNull()) && !jsonObj.get("gracePeriod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gracePeriod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gracePeriod").toString()));
      }
      if ((jsonObj.get("packageName") != null && !jsonObj.get("packageName").isJsonNull()) && !jsonObj.get("packageName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageName").toString()));
      }
      if ((jsonObj.get("purchaseType") != null && !jsonObj.get("purchaseType").isJsonNull()) && !jsonObj.get("purchaseType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchaseType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchaseType").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("subscriptionPeriod") != null && !jsonObj.get("subscriptionPeriod").isJsonNull()) && !jsonObj.get("subscriptionPeriod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscriptionPeriod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscriptionPeriod").toString()));
      }
      if ((jsonObj.get("trialPeriod") != null && !jsonObj.get("trialPeriod").isJsonNull()) && !jsonObj.get("trialPeriod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trialPeriod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trialPeriod").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InAppProduct.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InAppProduct' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InAppProduct> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InAppProduct.class));

       return (TypeAdapter<T>) new TypeAdapter<InAppProduct>() {
           @Override
           public void write(JsonWriter out, InAppProduct value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InAppProduct read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InAppProduct given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InAppProduct
   * @throws IOException if the JSON string is invalid with respect to InAppProduct
   */
  public static InAppProduct fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InAppProduct.class);
  }

  /**
   * Convert an instance of InAppProduct to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

