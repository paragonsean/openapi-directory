# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.track import Track
from openapi_server import util


class TracksListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str='androidpublisher#tracksListResponse', tracks: List[Track]=None):
        """TracksListResponse - a model defined in OpenAPI

        :param kind: The kind of this TracksListResponse.
        :param tracks: The tracks of this TracksListResponse.
        """
        self.openapi_types = {
            'kind': str,
            'tracks': List[Track]
        }

        self.attribute_map = {
            'kind': 'kind',
            'tracks': 'tracks'
        }

        self._kind = kind
        self._tracks = tracks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TracksListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TracksListResponse of this TracksListResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this TracksListResponse.

        Identifies what kind of resource this is. Value: the fixed string \"androidpublisher#tracksListResponse\".

        :return: The kind of this TracksListResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this TracksListResponse.

        Identifies what kind of resource this is. Value: the fixed string \"androidpublisher#tracksListResponse\".

        :param kind: The kind of this TracksListResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def tracks(self):
        """Gets the tracks of this TracksListResponse.


        :return: The tracks of this TracksListResponse.
        :rtype: List[Track]
        """
        return self._tracks

    @tracks.setter
    def tracks(self, tracks):
        """Sets the tracks of this TracksListResponse.


        :param tracks: The tracks of this TracksListResponse.
        :type tracks: List[Track]
        """

        self._tracks = tracks
