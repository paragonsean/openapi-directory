# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Timestamp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nanos: int=None, seconds: str=None):
        """Timestamp - a model defined in OpenAPI

        :param nanos: The nanos of this Timestamp.
        :param seconds: The seconds of this Timestamp.
        """
        self.openapi_types = {
            'nanos': int,
            'seconds': str
        }

        self.attribute_map = {
            'nanos': 'nanos',
            'seconds': 'seconds'
        }

        self._nanos = nanos
        self._seconds = seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Timestamp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Timestamp of this Timestamp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nanos(self):
        """Gets the nanos of this Timestamp.


        :return: The nanos of this Timestamp.
        :rtype: int
        """
        return self._nanos

    @nanos.setter
    def nanos(self, nanos):
        """Sets the nanos of this Timestamp.


        :param nanos: The nanos of this Timestamp.
        :type nanos: int
        """

        self._nanos = nanos

    @property
    def seconds(self):
        """Gets the seconds of this Timestamp.


        :return: The seconds of this Timestamp.
        :rtype: str
        """
        return self._seconds

    @seconds.setter
    def seconds(self, seconds):
        """Sets the seconds of this Timestamp.


        :param seconds: The seconds of this Timestamp.
        :type seconds: str
        """

        self._seconds = seconds
