# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppEdit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expiry_time_seconds: str=None, id: str=None):
        """AppEdit - a model defined in OpenAPI

        :param expiry_time_seconds: The expiry_time_seconds of this AppEdit.
        :param id: The id of this AppEdit.
        """
        self.openapi_types = {
            'expiry_time_seconds': str,
            'id': str
        }

        self.attribute_map = {
            'expiry_time_seconds': 'expiryTimeSeconds',
            'id': 'id'
        }

        self._expiry_time_seconds = expiry_time_seconds
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppEdit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppEdit of this AppEdit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiry_time_seconds(self):
        """Gets the expiry_time_seconds of this AppEdit.

        The time at which the edit will expire and will be no longer valid for use in any subsequent API calls (encoded as seconds since the Epoch).

        :return: The expiry_time_seconds of this AppEdit.
        :rtype: str
        """
        return self._expiry_time_seconds

    @expiry_time_seconds.setter
    def expiry_time_seconds(self, expiry_time_seconds):
        """Sets the expiry_time_seconds of this AppEdit.

        The time at which the edit will expire and will be no longer valid for use in any subsequent API calls (encoded as seconds since the Epoch).

        :param expiry_time_seconds: The expiry_time_seconds of this AppEdit.
        :type expiry_time_seconds: str
        """

        self._expiry_time_seconds = expiry_time_seconds

    @property
    def id(self):
        """Gets the id of this AppEdit.

        The ID of the edit that can be used in subsequent API calls.

        :return: The id of this AppEdit.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AppEdit.

        The ID of the edit that can be used in subsequent API calls.

        :param id: The id of this AppEdit.
        :type id: str
        """

        self._id = id
