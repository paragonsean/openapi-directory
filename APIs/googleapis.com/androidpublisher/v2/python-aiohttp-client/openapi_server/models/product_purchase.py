# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductPurchase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consumption_state: int=None, developer_payload: str=None, kind: str='androidpublisher#productPurchase', order_id: str=None, purchase_state: int=None, purchase_time_millis: str=None, purchase_type: int=None):
        """ProductPurchase - a model defined in OpenAPI

        :param consumption_state: The consumption_state of this ProductPurchase.
        :param developer_payload: The developer_payload of this ProductPurchase.
        :param kind: The kind of this ProductPurchase.
        :param order_id: The order_id of this ProductPurchase.
        :param purchase_state: The purchase_state of this ProductPurchase.
        :param purchase_time_millis: The purchase_time_millis of this ProductPurchase.
        :param purchase_type: The purchase_type of this ProductPurchase.
        """
        self.openapi_types = {
            'consumption_state': int,
            'developer_payload': str,
            'kind': str,
            'order_id': str,
            'purchase_state': int,
            'purchase_time_millis': str,
            'purchase_type': int
        }

        self.attribute_map = {
            'consumption_state': 'consumptionState',
            'developer_payload': 'developerPayload',
            'kind': 'kind',
            'order_id': 'orderId',
            'purchase_state': 'purchaseState',
            'purchase_time_millis': 'purchaseTimeMillis',
            'purchase_type': 'purchaseType'
        }

        self._consumption_state = consumption_state
        self._developer_payload = developer_payload
        self._kind = kind
        self._order_id = order_id
        self._purchase_state = purchase_state
        self._purchase_time_millis = purchase_time_millis
        self._purchase_type = purchase_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductPurchase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductPurchase of this ProductPurchase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consumption_state(self):
        """Gets the consumption_state of this ProductPurchase.

        The consumption state of the inapp product. Possible values are:   - Yet to be consumed  - Consumed

        :return: The consumption_state of this ProductPurchase.
        :rtype: int
        """
        return self._consumption_state

    @consumption_state.setter
    def consumption_state(self, consumption_state):
        """Sets the consumption_state of this ProductPurchase.

        The consumption state of the inapp product. Possible values are:   - Yet to be consumed  - Consumed

        :param consumption_state: The consumption_state of this ProductPurchase.
        :type consumption_state: int
        """

        self._consumption_state = consumption_state

    @property
    def developer_payload(self):
        """Gets the developer_payload of this ProductPurchase.

        A developer-specified string that contains supplemental information about an order.

        :return: The developer_payload of this ProductPurchase.
        :rtype: str
        """
        return self._developer_payload

    @developer_payload.setter
    def developer_payload(self, developer_payload):
        """Sets the developer_payload of this ProductPurchase.

        A developer-specified string that contains supplemental information about an order.

        :param developer_payload: The developer_payload of this ProductPurchase.
        :type developer_payload: str
        """

        self._developer_payload = developer_payload

    @property
    def kind(self):
        """Gets the kind of this ProductPurchase.

        This kind represents an inappPurchase object in the androidpublisher service.

        :return: The kind of this ProductPurchase.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ProductPurchase.

        This kind represents an inappPurchase object in the androidpublisher service.

        :param kind: The kind of this ProductPurchase.
        :type kind: str
        """

        self._kind = kind

    @property
    def order_id(self):
        """Gets the order_id of this ProductPurchase.

        The order id associated with the purchase of the inapp product.

        :return: The order_id of this ProductPurchase.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this ProductPurchase.

        The order id associated with the purchase of the inapp product.

        :param order_id: The order_id of this ProductPurchase.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def purchase_state(self):
        """Gets the purchase_state of this ProductPurchase.

        The purchase state of the order. Possible values are:   - Purchased  - Canceled  - Pending

        :return: The purchase_state of this ProductPurchase.
        :rtype: int
        """
        return self._purchase_state

    @purchase_state.setter
    def purchase_state(self, purchase_state):
        """Sets the purchase_state of this ProductPurchase.

        The purchase state of the order. Possible values are:   - Purchased  - Canceled  - Pending

        :param purchase_state: The purchase_state of this ProductPurchase.
        :type purchase_state: int
        """

        self._purchase_state = purchase_state

    @property
    def purchase_time_millis(self):
        """Gets the purchase_time_millis of this ProductPurchase.

        The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970).

        :return: The purchase_time_millis of this ProductPurchase.
        :rtype: str
        """
        return self._purchase_time_millis

    @purchase_time_millis.setter
    def purchase_time_millis(self, purchase_time_millis):
        """Sets the purchase_time_millis of this ProductPurchase.

        The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970).

        :param purchase_time_millis: The purchase_time_millis of this ProductPurchase.
        :type purchase_time_millis: str
        """

        self._purchase_time_millis = purchase_time_millis

    @property
    def purchase_type(self):
        """Gets the purchase_type of this ProductPurchase.

        The type of purchase of the inapp product. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are:   - Test (i.e. purchased from a license testing account)  - Promo (i.e. purchased using a promo code)  - Rewarded (i.e. from watching a video ad instead of paying)

        :return: The purchase_type of this ProductPurchase.
        :rtype: int
        """
        return self._purchase_type

    @purchase_type.setter
    def purchase_type(self, purchase_type):
        """Sets the purchase_type of this ProductPurchase.

        The type of purchase of the inapp product. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are:   - Test (i.e. purchased from a license testing account)  - Promo (i.e. purchased using a promo code)  - Rewarded (i.e. from watching a video ad instead of paying)

        :param purchase_type: The purchase_type of this ProductPurchase.
        :type purchase_type: int
        """

        self._purchase_type = purchase_type
