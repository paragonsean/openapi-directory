/**
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionPurchase model module.
 * @module model/SubscriptionPurchase
 * @version v1
 */
class SubscriptionPurchase {
    /**
     * Constructs a new <code>SubscriptionPurchase</code>.
     * A SubscriptionPurchase resource indicates the status of a user&#39;s subscription purchase.
     * @alias module:model/SubscriptionPurchase
     */
    constructor() { 
        
        SubscriptionPurchase.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'androidpublisher#subscriptionPurchase';
    }

    /**
     * Constructs a <code>SubscriptionPurchase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionPurchase} obj Optional instance to populate.
     * @return {module:model/SubscriptionPurchase} The populated <code>SubscriptionPurchase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionPurchase();

            if (data.hasOwnProperty('autoRenewing')) {
                obj['autoRenewing'] = ApiClient.convertToType(data['autoRenewing'], 'Boolean');
            }
            if (data.hasOwnProperty('initiationTimestampMsec')) {
                obj['initiationTimestampMsec'] = ApiClient.convertToType(data['initiationTimestampMsec'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('validUntilTimestampMsec')) {
                obj['validUntilTimestampMsec'] = ApiClient.convertToType(data['validUntilTimestampMsec'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionPurchase</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionPurchase</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['initiationTimestampMsec'] && !(typeof data['initiationTimestampMsec'] === 'string' || data['initiationTimestampMsec'] instanceof String)) {
            throw new Error("Expected the field `initiationTimestampMsec` to be a primitive type in the JSON string but got " + data['initiationTimestampMsec']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['validUntilTimestampMsec'] && !(typeof data['validUntilTimestampMsec'] === 'string' || data['validUntilTimestampMsec'] instanceof String)) {
            throw new Error("Expected the field `validUntilTimestampMsec` to be a primitive type in the JSON string but got " + data['validUntilTimestampMsec']);
        }

        return true;
    }


}



/**
 * Whether the subscription will automatically be renewed when it reaches its current expiry time.
 * @member {Boolean} autoRenewing
 */
SubscriptionPurchase.prototype['autoRenewing'] = undefined;

/**
 * Time at which the subscription was granted, in milliseconds since the Epoch.
 * @member {String} initiationTimestampMsec
 */
SubscriptionPurchase.prototype['initiationTimestampMsec'] = undefined;

/**
 * This kind represents a subscriptionPurchase object in the androidpublisher service.
 * @member {String} kind
 * @default 'androidpublisher#subscriptionPurchase'
 */
SubscriptionPurchase.prototype['kind'] = 'androidpublisher#subscriptionPurchase';

/**
 * Time at which the subscription will expire, in milliseconds since the Epoch.
 * @member {String} validUntilTimestampMsec
 */
SubscriptionPurchase.prototype['validUntilTimestampMsec'] = undefined;






export default SubscriptionPurchase;

