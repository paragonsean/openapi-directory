/**
 * Google Play Developer
 * Accesses Android application developers' Google Play accounts.
 *
 * The version of the OpenAPI document: v1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InappPurchase from '../model/InappPurchase';

/**
* Inapppurchases service.
* @module api/InapppurchasesApi
* @version v1.1
*/
export default class InapppurchasesApi {

    /**
    * Constructs a new InapppurchasesApi. 
    * @alias module:api/InapppurchasesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the androidpublisherInapppurchasesGet operation.
     * @callback module:api/InapppurchasesApi~androidpublisherInapppurchasesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InappPurchase} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checks the purchase and consumption status of an inapp item.
     * @param {String} packageName The package name of the application the inapp product was sold in (for example, 'com.some.thing').
     * @param {String} productId The inapp product SKU (for example, 'com.some.thing.inapp1').
     * @param {String} token The token provided to the user's device when the inapp product was purchased.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:api/InapppurchasesApi~androidpublisherInapppurchasesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InappPurchase}
     */
    androidpublisherInapppurchasesGet(packageName, productId, token, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'packageName' is set
      if (packageName === undefined || packageName === null) {
        throw new Error("Missing the required parameter 'packageName' when calling androidpublisherInapppurchasesGet");
      }
      // verify the required parameter 'productId' is set
      if (productId === undefined || productId === null) {
        throw new Error("Missing the required parameter 'productId' when calling androidpublisherInapppurchasesGet");
      }
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling androidpublisherInapppurchasesGet");
      }

      let pathParams = {
        'packageName': packageName,
        'productId': productId,
        'token': token
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = InappPurchase;
      return this.apiClient.callApi(
        '/{packageName}/inapp/{productId}/purchases/{token}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
