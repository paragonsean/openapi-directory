/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TrafficTarget model module.
 * @module model/TrafficTarget
 * @version v1
 */
class TrafficTarget {
    /**
     * Constructs a new <code>TrafficTarget</code>.
     * TrafficTarget holds a single entry of the routing table for a Route.
     * @alias module:model/TrafficTarget
     */
    constructor() { 
        
        TrafficTarget.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TrafficTarget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TrafficTarget} obj Optional instance to populate.
     * @return {module:model/TrafficTarget} The populated <code>TrafficTarget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrafficTarget();

            if (data.hasOwnProperty('configurationName')) {
                obj['configurationName'] = ApiClient.convertToType(data['configurationName'], 'String');
            }
            if (data.hasOwnProperty('latestRevision')) {
                obj['latestRevision'] = ApiClient.convertToType(data['latestRevision'], 'Boolean');
            }
            if (data.hasOwnProperty('percent')) {
                obj['percent'] = ApiClient.convertToType(data['percent'], 'Number');
            }
            if (data.hasOwnProperty('revisionName')) {
                obj['revisionName'] = ApiClient.convertToType(data['revisionName'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TrafficTarget</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TrafficTarget</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['configurationName'] && !(typeof data['configurationName'] === 'string' || data['configurationName'] instanceof String)) {
            throw new Error("Expected the field `configurationName` to be a primitive type in the JSON string but got " + data['configurationName']);
        }
        // ensure the json data is a string
        if (data['revisionName'] && !(typeof data['revisionName'] === 'string' || data['revisionName'] instanceof String)) {
            throw new Error("Expected the field `revisionName` to be a primitive type in the JSON string but got " + data['revisionName']);
        }
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * [Deprecated] Not supported in Cloud Run. It must be empty.
 * @member {String} configurationName
 */
TrafficTarget.prototype['configurationName'] = undefined;

/**
 * Uses the \"status.latestReadyRevisionName\" of the Service to determine the traffic target. When it changes, traffic will automatically migrate from the prior \"latest ready\" revision to the new one. This field must be false if RevisionName is set. This field defaults to true otherwise. If the field is set to true on Status, this means that the Revision was resolved from the Service's latest ready revision.
 * @member {Boolean} latestRevision
 */
TrafficTarget.prototype['latestRevision'] = undefined;

/**
 * Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified.
 * @member {Number} percent
 */
TrafficTarget.prototype['percent'] = undefined;

/**
 * Points this traffic target to a specific Revision. This field is mutually exclusive with latest_revision.
 * @member {String} revisionName
 */
TrafficTarget.prototype['revisionName'] = undefined;

/**
 * Tag is used to expose a dedicated url for referencing this target exclusively.
 * @member {String} tag
 */
TrafficTarget.prototype['tag'] = undefined;

/**
 * Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. https://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)
 * @member {String} url
 */
TrafficTarget.prototype['url'] = undefined;






export default TrafficTarget;

