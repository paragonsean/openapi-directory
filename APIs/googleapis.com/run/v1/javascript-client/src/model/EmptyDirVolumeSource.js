/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EmptyDirVolumeSource model module.
 * @module model/EmptyDirVolumeSource
 * @version v1
 */
class EmptyDirVolumeSource {
    /**
     * Constructs a new <code>EmptyDirVolumeSource</code>.
     * In memory (tmpfs) ephemeral storage. It is ephemeral in the sense that when the sandbox is taken down, the data is destroyed with it (it does not persist across sandbox runs).
     * @alias module:model/EmptyDirVolumeSource
     */
    constructor() { 
        
        EmptyDirVolumeSource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EmptyDirVolumeSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmptyDirVolumeSource} obj Optional instance to populate.
     * @return {module:model/EmptyDirVolumeSource} The populated <code>EmptyDirVolumeSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmptyDirVolumeSource();

            if (data.hasOwnProperty('medium')) {
                obj['medium'] = ApiClient.convertToType(data['medium'], 'String');
            }
            if (data.hasOwnProperty('sizeLimit')) {
                obj['sizeLimit'] = ApiClient.convertToType(data['sizeLimit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmptyDirVolumeSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmptyDirVolumeSource</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['medium'] && !(typeof data['medium'] === 'string' || data['medium'] instanceof String)) {
            throw new Error("Expected the field `medium` to be a primitive type in the JSON string but got " + data['medium']);
        }
        // ensure the json data is a string
        if (data['sizeLimit'] && !(typeof data['sizeLimit'] === 'string' || data['sizeLimit'] instanceof String)) {
            throw new Error("Expected the field `sizeLimit` to be a primitive type in the JSON string but got " + data['sizeLimit']);
        }

        return true;
    }


}



/**
 * The medium on which the data is stored. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
 * @member {String} medium
 */
EmptyDirVolumeSource.prototype['medium'] = undefined;

/**
 * Limit on the storage usable by this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers. The default is nil which means that the limit is undefined. More info: https://cloud.google.com/run/docs/configuring/in-memory-volumes#configure-volume. Info in Kubernetes: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
 * @member {String} sizeLimit
 */
EmptyDirVolumeSource.prototype['sizeLimit'] = undefined;






export default EmptyDirVolumeSource;

