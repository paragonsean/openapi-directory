/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Container from './Container';
import LocalObjectReference from './LocalObjectReference';
import Volume from './Volume';

/**
 * The RevisionSpec model module.
 * @module model/RevisionSpec
 * @version v1
 */
class RevisionSpec {
    /**
     * Constructs a new <code>RevisionSpec</code>.
     * RevisionSpec holds the desired state of the Revision (from the client).
     * @alias module:model/RevisionSpec
     */
    constructor() { 
        
        RevisionSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RevisionSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RevisionSpec} obj Optional instance to populate.
     * @return {module:model/RevisionSpec} The populated <code>RevisionSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RevisionSpec();

            if (data.hasOwnProperty('containerConcurrency')) {
                obj['containerConcurrency'] = ApiClient.convertToType(data['containerConcurrency'], 'Number');
            }
            if (data.hasOwnProperty('containers')) {
                obj['containers'] = ApiClient.convertToType(data['containers'], [Container]);
            }
            if (data.hasOwnProperty('enableServiceLinks')) {
                obj['enableServiceLinks'] = ApiClient.convertToType(data['enableServiceLinks'], 'Boolean');
            }
            if (data.hasOwnProperty('imagePullSecrets')) {
                obj['imagePullSecrets'] = ApiClient.convertToType(data['imagePullSecrets'], [LocalObjectReference]);
            }
            if (data.hasOwnProperty('serviceAccountName')) {
                obj['serviceAccountName'] = ApiClient.convertToType(data['serviceAccountName'], 'String');
            }
            if (data.hasOwnProperty('timeoutSeconds')) {
                obj['timeoutSeconds'] = ApiClient.convertToType(data['timeoutSeconds'], 'Number');
            }
            if (data.hasOwnProperty('volumes')) {
                obj['volumes'] = ApiClient.convertToType(data['volumes'], [Volume]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RevisionSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RevisionSpec</code>.
     */
    static validateJSON(data) {
        if (data['containers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['containers'])) {
                throw new Error("Expected the field `containers` to be an array in the JSON data but got " + data['containers']);
            }
            // validate the optional field `containers` (array)
            for (const item of data['containers']) {
                Container.validateJSON(item);
            };
        }
        if (data['imagePullSecrets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['imagePullSecrets'])) {
                throw new Error("Expected the field `imagePullSecrets` to be an array in the JSON data but got " + data['imagePullSecrets']);
            }
            // validate the optional field `imagePullSecrets` (array)
            for (const item of data['imagePullSecrets']) {
                LocalObjectReference.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['serviceAccountName'] && !(typeof data['serviceAccountName'] === 'string' || data['serviceAccountName'] instanceof String)) {
            throw new Error("Expected the field `serviceAccountName` to be a primitive type in the JSON string but got " + data['serviceAccountName']);
        }
        if (data['volumes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['volumes'])) {
                throw new Error("Expected the field `volumes` to be an array in the JSON data but got " + data['volumes']);
            }
            // validate the optional field `volumes` (array)
            for (const item of data['volumes']) {
                Volume.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * ContainerConcurrency specifies the maximum allowed in-flight (concurrent) requests per container instance of the Revision. If not specified, defaults to 80.
 * @member {Number} containerConcurrency
 */
RevisionSpec.prototype['containerConcurrency'] = undefined;

/**
 * Required. Containers holds the single container that defines the unit of execution for this Revision. In the context of a Revision, we disallow a number of fields on this Container, including: name and lifecycle. In Cloud Run, only a single container may be provided.
 * @member {Array.<module:model/Container>} containers
 */
RevisionSpec.prototype['containers'] = undefined;

/**
 * Not supported by Cloud Run.
 * @member {Boolean} enableServiceLinks
 */
RevisionSpec.prototype['enableServiceLinks'] = undefined;

/**
 * Not supported by Cloud Run.
 * @member {Array.<module:model/LocalObjectReference>} imagePullSecrets
 */
RevisionSpec.prototype['imagePullSecrets'] = undefined;

/**
 * Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.
 * @member {String} serviceAccountName
 */
RevisionSpec.prototype['serviceAccountName'] = undefined;

/**
 * TimeoutSeconds holds the max duration the instance is allowed for responding to a request. Cloud Run: defaults to 300 seconds (5 minutes). Maximum allowed value is 3600 seconds (1 hour).
 * @member {Number} timeoutSeconds
 */
RevisionSpec.prototype['timeoutSeconds'] = undefined;

/**
 * @member {Array.<module:model/Volume>} volumes
 */
RevisionSpec.prototype['volumes'] = undefined;






export default RevisionSpec;

