/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LocalObjectReference from './LocalObjectReference';

/**
 * The SecretKeySelector model module.
 * @module model/SecretKeySelector
 * @version v1
 */
class SecretKeySelector {
    /**
     * Constructs a new <code>SecretKeySelector</code>.
     * SecretKeySelector selects a key of a Secret.
     * @alias module:model/SecretKeySelector
     */
    constructor() { 
        
        SecretKeySelector.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SecretKeySelector</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecretKeySelector} obj Optional instance to populate.
     * @return {module:model/SecretKeySelector} The populated <code>SecretKeySelector</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecretKeySelector();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('localObjectReference')) {
                obj['localObjectReference'] = LocalObjectReference.constructFromObject(data['localObjectReference']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('optional')) {
                obj['optional'] = ApiClient.convertToType(data['optional'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SecretKeySelector</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SecretKeySelector</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // validate the optional field `localObjectReference`
        if (data['localObjectReference']) { // data not null
          LocalObjectReference.validateJSON(data['localObjectReference']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Required. A Cloud Secret Manager secret version. Must be 'latest' for the latest version, an integer for a specific version, or a version alias. The key of the secret to select from. Must be a valid secret key.
 * @member {String} key
 */
SecretKeySelector.prototype['key'] = undefined;

/**
 * @member {module:model/LocalObjectReference} localObjectReference
 */
SecretKeySelector.prototype['localObjectReference'] = undefined;

/**
 * The name of the secret in Cloud Secret Manager. By default, the secret is assumed to be in the same project. If the secret is in another project, you must define an alias. An alias definition has the form: :projects//secrets/. If multiple alias definitions are needed, they must be separated by commas. The alias definitions must be set on the run.googleapis.com/secrets annotation. The name of the secret in the pod's namespace to select from.
 * @member {String} name
 */
SecretKeySelector.prototype['name'] = undefined;

/**
 * Specify whether the Secret or its key must be defined.
 * @member {Boolean} optional
 */
SecretKeySelector.prototype['optional'] = undefined;






export default SecretKeySelector;

