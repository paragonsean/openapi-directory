/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OwnerReference from './OwnerReference';

/**
 * The ObjectMeta model module.
 * @module model/ObjectMeta
 * @version v1
 */
class ObjectMeta {
    /**
     * Constructs a new <code>ObjectMeta</code>.
     * google.cloud.run.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
     * @alias module:model/ObjectMeta
     */
    constructor() { 
        
        ObjectMeta.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ObjectMeta</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjectMeta} obj Optional instance to populate.
     * @return {module:model/ObjectMeta} The populated <code>ObjectMeta</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjectMeta();

            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], {'String': 'String'});
            }
            if (data.hasOwnProperty('clusterName')) {
                obj['clusterName'] = ApiClient.convertToType(data['clusterName'], 'String');
            }
            if (data.hasOwnProperty('creationTimestamp')) {
                obj['creationTimestamp'] = ApiClient.convertToType(data['creationTimestamp'], 'String');
            }
            if (data.hasOwnProperty('deletionGracePeriodSeconds')) {
                obj['deletionGracePeriodSeconds'] = ApiClient.convertToType(data['deletionGracePeriodSeconds'], 'Number');
            }
            if (data.hasOwnProperty('deletionTimestamp')) {
                obj['deletionTimestamp'] = ApiClient.convertToType(data['deletionTimestamp'], 'String');
            }
            if (data.hasOwnProperty('finalizers')) {
                obj['finalizers'] = ApiClient.convertToType(data['finalizers'], ['String']);
            }
            if (data.hasOwnProperty('generateName')) {
                obj['generateName'] = ApiClient.convertToType(data['generateName'], 'String');
            }
            if (data.hasOwnProperty('generation')) {
                obj['generation'] = ApiClient.convertToType(data['generation'], 'Number');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('namespace')) {
                obj['namespace'] = ApiClient.convertToType(data['namespace'], 'String');
            }
            if (data.hasOwnProperty('ownerReferences')) {
                obj['ownerReferences'] = ApiClient.convertToType(data['ownerReferences'], [OwnerReference]);
            }
            if (data.hasOwnProperty('resourceVersion')) {
                obj['resourceVersion'] = ApiClient.convertToType(data['resourceVersion'], 'String');
            }
            if (data.hasOwnProperty('selfLink')) {
                obj['selfLink'] = ApiClient.convertToType(data['selfLink'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjectMeta</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjectMeta</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clusterName'] && !(typeof data['clusterName'] === 'string' || data['clusterName'] instanceof String)) {
            throw new Error("Expected the field `clusterName` to be a primitive type in the JSON string but got " + data['clusterName']);
        }
        // ensure the json data is a string
        if (data['creationTimestamp'] && !(typeof data['creationTimestamp'] === 'string' || data['creationTimestamp'] instanceof String)) {
            throw new Error("Expected the field `creationTimestamp` to be a primitive type in the JSON string but got " + data['creationTimestamp']);
        }
        // ensure the json data is a string
        if (data['deletionTimestamp'] && !(typeof data['deletionTimestamp'] === 'string' || data['deletionTimestamp'] instanceof String)) {
            throw new Error("Expected the field `deletionTimestamp` to be a primitive type in the JSON string but got " + data['deletionTimestamp']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['finalizers'])) {
            throw new Error("Expected the field `finalizers` to be an array in the JSON data but got " + data['finalizers']);
        }
        // ensure the json data is a string
        if (data['generateName'] && !(typeof data['generateName'] === 'string' || data['generateName'] instanceof String)) {
            throw new Error("Expected the field `generateName` to be a primitive type in the JSON string but got " + data['generateName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['namespace'] && !(typeof data['namespace'] === 'string' || data['namespace'] instanceof String)) {
            throw new Error("Expected the field `namespace` to be a primitive type in the JSON string but got " + data['namespace']);
        }
        if (data['ownerReferences']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ownerReferences'])) {
                throw new Error("Expected the field `ownerReferences` to be an array in the JSON data but got " + data['ownerReferences']);
            }
            // validate the optional field `ownerReferences` (array)
            for (const item of data['ownerReferences']) {
                OwnerReference.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['resourceVersion'] && !(typeof data['resourceVersion'] === 'string' || data['resourceVersion'] instanceof String)) {
            throw new Error("Expected the field `resourceVersion` to be a primitive type in the JSON string but got " + data['resourceVersion']);
        }
        // ensure the json data is a string
        if (data['selfLink'] && !(typeof data['selfLink'] === 'string' || data['selfLink'] instanceof String)) {
            throw new Error("Expected the field `selfLink` to be a primitive type in the JSON string but got " + data['selfLink']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }

        return true;
    }


}



/**
 * Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. In Cloud Run, annotations with 'run.googleapis.com/' and 'autoscaling.knative.dev' are restricted, and the accepted annotations will be different depending on the resource type. * `autoscaling.knative.dev/maxScale`: Revision. * `autoscaling.knative.dev/minScale`: Revision. * `run.googleapis.com/binary-authorization-breakglass`: Service, Job, * `run.googleapis.com/binary-authorization`: Service, Job, Execution. * `run.googleapis.com/client-name`: All resources. * `run.googleapis.com/cloudsql-instances`: Revision, Execution. * `run.googleapis.com/container-dependencies`: Revision . * `run.googleapis.com/cpu-throttling`: Revision. * `run.googleapis.com/custom-audiences`: Service. * `run.googleapis.com/default-url-disabled`: Service. * `run.googleapis.com/description`: Service. * `run.googleapis.com/encryption-key-shutdown-hours`: Revision * `run.googleapis.com/encryption-key`: Revision, Execution. * `run.googleapis.com/execution-environment`: Revision, Execution. * `run.googleapis.com/gc-traffic-tags`: Service. * `run.googleapis.com/ingress`: Service. * `run.googleapis.com/launch-stage`: Service, Job. * `run.googleapis.com/minScale`: Service (ALPHA) * `run.googleapis.com/network-interfaces`: Revision, Execution. * `run.googleapis.com/post-key-revocation-action-type`: Revision. * `run.googleapis.com/secrets`: Revision, Execution. * `run.googleapis.com/secure-session-agent`: Revision. * `run.googleapis.com/sessionAffinity`: Revision. * `run.googleapis.com/startup-cpu-boost`: Revision. * `run.googleapis.com/vpc-access-connector`: Revision, Execution. * `run.googleapis.com/vpc-access-egress`: Revision, Execution.
 * @member {Object.<String, String>} annotations
 */
ObjectMeta.prototype['annotations'] = undefined;

/**
 * Not supported by Cloud Run
 * @member {String} clusterName
 */
ObjectMeta.prototype['clusterName'] = undefined;

/**
 * UTC timestamp representing the server time when this object was created.
 * @member {String} creationTimestamp
 */
ObjectMeta.prototype['creationTimestamp'] = undefined;

/**
 * Not supported by Cloud Run
 * @member {Number} deletionGracePeriodSeconds
 */
ObjectMeta.prototype['deletionGracePeriodSeconds'] = undefined;

/**
 * The read-only soft deletion timestamp for this resource. In Cloud Run, users are not able to set this field. Instead, they must call the corresponding Delete API.
 * @member {String} deletionTimestamp
 */
ObjectMeta.prototype['deletionTimestamp'] = undefined;

/**
 * Not supported by Cloud Run
 * @member {Array.<String>} finalizers
 */
ObjectMeta.prototype['finalizers'] = undefined;

/**
 * Not supported by Cloud Run
 * @member {String} generateName
 */
ObjectMeta.prototype['generateName'] = undefined;

/**
 * A system-provided sequence number representing a specific generation of the desired state.
 * @member {Number} generation
 */
ObjectMeta.prototype['generation'] = undefined;

/**
 * Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes.
 * @member {Object.<String, String>} labels
 */
ObjectMeta.prototype['labels'] = undefined;

/**
 * Required. The name of the resource. Name is required when creating top-level resources (Service, Job), must be unique within a Cloud Run project/region, and cannot be changed once created.
 * @member {String} name
 */
ObjectMeta.prototype['name'] = undefined;

/**
 * Required. Defines the space within each name must be unique within a Cloud Run region. In Cloud Run, it must be project ID or number.
 * @member {String} namespace
 */
ObjectMeta.prototype['namespace'] = undefined;

/**
 * Not supported by Cloud Run
 * @member {Array.<module:model/OwnerReference>} ownerReferences
 */
ObjectMeta.prototype['ownerReferences'] = undefined;

/**
 * Opaque, system-generated value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection.
 * @member {String} resourceVersion
 */
ObjectMeta.prototype['resourceVersion'] = undefined;

/**
 * URL representing this object.
 * @member {String} selfLink
 */
ObjectMeta.prototype['selfLink'] = undefined;

/**
 * Unique, system-generated identifier for this resource.
 * @member {String} uid
 */
ObjectMeta.prototype['uid'] = undefined;






export default ObjectMeta;

