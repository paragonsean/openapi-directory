/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudRunV1Condition model module.
 * @module model/GoogleCloudRunV1Condition
 * @version v1
 */
class GoogleCloudRunV1Condition {
    /**
     * Constructs a new <code>GoogleCloudRunV1Condition</code>.
     * Conditions show the status of reconciliation progress on a given resource. Most resource use a top-level condition type \&quot;Ready\&quot; or \&quot;Completed\&quot; to show overall status with other conditions to checkpoint each stage of reconciliation. Note that if metadata.Generation does not equal status.ObservedGeneration, the conditions shown may not be relevant for the current spec.
     * @alias module:model/GoogleCloudRunV1Condition
     */
    constructor() { 
        
        GoogleCloudRunV1Condition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRunV1Condition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRunV1Condition} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRunV1Condition} The populated <code>GoogleCloudRunV1Condition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRunV1Condition();

            if (data.hasOwnProperty('lastTransitionTime')) {
                obj['lastTransitionTime'] = ApiClient.convertToType(data['lastTransitionTime'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRunV1Condition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRunV1Condition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['lastTransitionTime'] && !(typeof data['lastTransitionTime'] === 'string' || data['lastTransitionTime'] instanceof String)) {
            throw new Error("Expected the field `lastTransitionTime` to be a primitive type in the JSON string but got " + data['lastTransitionTime']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['severity'] && !(typeof data['severity'] === 'string' || data['severity'] instanceof String)) {
            throw new Error("Expected the field `severity` to be a primitive type in the JSON string but got " + data['severity']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Optional. Last time the condition transitioned from one status to another.
 * @member {String} lastTransitionTime
 */
GoogleCloudRunV1Condition.prototype['lastTransitionTime'] = undefined;

/**
 * Optional. Human readable message indicating details about the current status.
 * @member {String} message
 */
GoogleCloudRunV1Condition.prototype['message'] = undefined;

/**
 * Optional. One-word CamelCase reason for the condition's last transition. These are intended to be stable, unique values which the client may use to trigger error handling logic, whereas messages which may be changed later by the server.
 * @member {String} reason
 */
GoogleCloudRunV1Condition.prototype['reason'] = undefined;

/**
 * Optional. How to interpret this condition. One of Error, Warning, or Info. Conditions of severity Info do not contribute to resource readiness.
 * @member {String} severity
 */
GoogleCloudRunV1Condition.prototype['severity'] = undefined;

/**
 * Status of the condition, one of True, False, Unknown.
 * @member {String} status
 */
GoogleCloudRunV1Condition.prototype['status'] = undefined;

/**
 * type is used to communicate the status of the reconciliation process. Types common to all resources include: * \"Ready\" or \"Completed\": True when the Resource is ready.
 * @member {String} type
 */
GoogleCloudRunV1Condition.prototype['type'] = undefined;






export default GoogleCloudRunV1Condition;

