/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Addressable from './model/Addressable';
import AuditConfig from './model/AuditConfig';
import AuditLogConfig from './model/AuditLogConfig';
import AuthorizedDomain from './model/AuthorizedDomain';
import Binding from './model/Binding';
import CSIVolumeSource from './model/CSIVolumeSource';
import ConfigMapEnvSource from './model/ConfigMapEnvSource';
import ConfigMapKeySelector from './model/ConfigMapKeySelector';
import ConfigMapVolumeSource from './model/ConfigMapVolumeSource';
import Configuration from './model/Configuration';
import ConfigurationSpec from './model/ConfigurationSpec';
import ConfigurationStatus from './model/ConfigurationStatus';
import Container from './model/Container';
import ContainerOverride from './model/ContainerOverride';
import ContainerPort from './model/ContainerPort';
import DomainMapping from './model/DomainMapping';
import DomainMappingSpec from './model/DomainMappingSpec';
import DomainMappingStatus from './model/DomainMappingStatus';
import EmptyDirVolumeSource from './model/EmptyDirVolumeSource';
import EnvFromSource from './model/EnvFromSource';
import EnvVar from './model/EnvVar';
import EnvVarSource from './model/EnvVarSource';
import ExecAction from './model/ExecAction';
import Execution from './model/Execution';
import ExecutionReference from './model/ExecutionReference';
import ExecutionSpec from './model/ExecutionSpec';
import ExecutionStatus from './model/ExecutionStatus';
import ExecutionTemplateSpec from './model/ExecutionTemplateSpec';
import Expr from './model/Expr';
import GRPCAction from './model/GRPCAction';
import GoogleCloudRunV1Condition from './model/GoogleCloudRunV1Condition';
import GoogleLongrunningListOperationsResponse from './model/GoogleLongrunningListOperationsResponse';
import GoogleLongrunningOperation from './model/GoogleLongrunningOperation';
import GoogleLongrunningWaitOperationRequest from './model/GoogleLongrunningWaitOperationRequest';
import GoogleRpcStatus from './model/GoogleRpcStatus';
import HTTPGetAction from './model/HTTPGetAction';
import HTTPHeader from './model/HTTPHeader';
import Job from './model/Job';
import JobSpec from './model/JobSpec';
import JobStatus from './model/JobStatus';
import KeyToPath from './model/KeyToPath';
import ListAuthorizedDomainsResponse from './model/ListAuthorizedDomainsResponse';
import ListConfigurationsResponse from './model/ListConfigurationsResponse';
import ListDomainMappingsResponse from './model/ListDomainMappingsResponse';
import ListExecutionsResponse from './model/ListExecutionsResponse';
import ListJobsResponse from './model/ListJobsResponse';
import ListLocationsResponse from './model/ListLocationsResponse';
import ListMeta from './model/ListMeta';
import ListRevisionsResponse from './model/ListRevisionsResponse';
import ListRoutesResponse from './model/ListRoutesResponse';
import ListServicesResponse from './model/ListServicesResponse';
import ListTasksResponse from './model/ListTasksResponse';
import LocalObjectReference from './model/LocalObjectReference';
import Location from './model/Location';
import NFSVolumeSource from './model/NFSVolumeSource';
import ObjectMeta from './model/ObjectMeta';
import Overrides from './model/Overrides';
import OwnerReference from './model/OwnerReference';
import Policy from './model/Policy';
import Probe from './model/Probe';
import ResourceRecord from './model/ResourceRecord';
import ResourceRequirements from './model/ResourceRequirements';
import Revision from './model/Revision';
import RevisionSpec from './model/RevisionSpec';
import RevisionStatus from './model/RevisionStatus';
import RevisionTemplate from './model/RevisionTemplate';
import Route from './model/Route';
import RouteSpec from './model/RouteSpec';
import RouteStatus from './model/RouteStatus';
import RunJobRequest from './model/RunJobRequest';
import SecretEnvSource from './model/SecretEnvSource';
import SecretKeySelector from './model/SecretKeySelector';
import SecretVolumeSource from './model/SecretVolumeSource';
import SecurityContext from './model/SecurityContext';
import Service from './model/Service';
import ServiceSpec from './model/ServiceSpec';
import ServiceStatus from './model/ServiceStatus';
import SetIamPolicyRequest from './model/SetIamPolicyRequest';
import Status from './model/Status';
import StatusCause from './model/StatusCause';
import StatusDetails from './model/StatusDetails';
import TCPSocketAction from './model/TCPSocketAction';
import Task from './model/Task';
import TaskAttemptResult from './model/TaskAttemptResult';
import TaskSpec from './model/TaskSpec';
import TaskStatus from './model/TaskStatus';
import TaskTemplateSpec from './model/TaskTemplateSpec';
import TestIamPermissionsRequest from './model/TestIamPermissionsRequest';
import TestIamPermissionsResponse from './model/TestIamPermissionsResponse';
import TrafficTarget from './model/TrafficTarget';
import Volume from './model/Volume';
import VolumeMount from './model/VolumeMount';
import NamespacesApi from './api/NamespacesApi';
import ProjectsApi from './api/ProjectsApi';


/**
* Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudRunAdminApi = require('index'); // See note below*.
* var xxxSvc = new CloudRunAdminApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudRunAdminApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudRunAdminApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudRunAdminApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Addressable model constructor.
     * @property {module:model/Addressable}
     */
    Addressable,

    /**
     * The AuditConfig model constructor.
     * @property {module:model/AuditConfig}
     */
    AuditConfig,

    /**
     * The AuditLogConfig model constructor.
     * @property {module:model/AuditLogConfig}
     */
    AuditLogConfig,

    /**
     * The AuthorizedDomain model constructor.
     * @property {module:model/AuthorizedDomain}
     */
    AuthorizedDomain,

    /**
     * The Binding model constructor.
     * @property {module:model/Binding}
     */
    Binding,

    /**
     * The CSIVolumeSource model constructor.
     * @property {module:model/CSIVolumeSource}
     */
    CSIVolumeSource,

    /**
     * The ConfigMapEnvSource model constructor.
     * @property {module:model/ConfigMapEnvSource}
     */
    ConfigMapEnvSource,

    /**
     * The ConfigMapKeySelector model constructor.
     * @property {module:model/ConfigMapKeySelector}
     */
    ConfigMapKeySelector,

    /**
     * The ConfigMapVolumeSource model constructor.
     * @property {module:model/ConfigMapVolumeSource}
     */
    ConfigMapVolumeSource,

    /**
     * The Configuration model constructor.
     * @property {module:model/Configuration}
     */
    Configuration,

    /**
     * The ConfigurationSpec model constructor.
     * @property {module:model/ConfigurationSpec}
     */
    ConfigurationSpec,

    /**
     * The ConfigurationStatus model constructor.
     * @property {module:model/ConfigurationStatus}
     */
    ConfigurationStatus,

    /**
     * The Container model constructor.
     * @property {module:model/Container}
     */
    Container,

    /**
     * The ContainerOverride model constructor.
     * @property {module:model/ContainerOverride}
     */
    ContainerOverride,

    /**
     * The ContainerPort model constructor.
     * @property {module:model/ContainerPort}
     */
    ContainerPort,

    /**
     * The DomainMapping model constructor.
     * @property {module:model/DomainMapping}
     */
    DomainMapping,

    /**
     * The DomainMappingSpec model constructor.
     * @property {module:model/DomainMappingSpec}
     */
    DomainMappingSpec,

    /**
     * The DomainMappingStatus model constructor.
     * @property {module:model/DomainMappingStatus}
     */
    DomainMappingStatus,

    /**
     * The EmptyDirVolumeSource model constructor.
     * @property {module:model/EmptyDirVolumeSource}
     */
    EmptyDirVolumeSource,

    /**
     * The EnvFromSource model constructor.
     * @property {module:model/EnvFromSource}
     */
    EnvFromSource,

    /**
     * The EnvVar model constructor.
     * @property {module:model/EnvVar}
     */
    EnvVar,

    /**
     * The EnvVarSource model constructor.
     * @property {module:model/EnvVarSource}
     */
    EnvVarSource,

    /**
     * The ExecAction model constructor.
     * @property {module:model/ExecAction}
     */
    ExecAction,

    /**
     * The Execution model constructor.
     * @property {module:model/Execution}
     */
    Execution,

    /**
     * The ExecutionReference model constructor.
     * @property {module:model/ExecutionReference}
     */
    ExecutionReference,

    /**
     * The ExecutionSpec model constructor.
     * @property {module:model/ExecutionSpec}
     */
    ExecutionSpec,

    /**
     * The ExecutionStatus model constructor.
     * @property {module:model/ExecutionStatus}
     */
    ExecutionStatus,

    /**
     * The ExecutionTemplateSpec model constructor.
     * @property {module:model/ExecutionTemplateSpec}
     */
    ExecutionTemplateSpec,

    /**
     * The Expr model constructor.
     * @property {module:model/Expr}
     */
    Expr,

    /**
     * The GRPCAction model constructor.
     * @property {module:model/GRPCAction}
     */
    GRPCAction,

    /**
     * The GoogleCloudRunV1Condition model constructor.
     * @property {module:model/GoogleCloudRunV1Condition}
     */
    GoogleCloudRunV1Condition,

    /**
     * The GoogleLongrunningListOperationsResponse model constructor.
     * @property {module:model/GoogleLongrunningListOperationsResponse}
     */
    GoogleLongrunningListOperationsResponse,

    /**
     * The GoogleLongrunningOperation model constructor.
     * @property {module:model/GoogleLongrunningOperation}
     */
    GoogleLongrunningOperation,

    /**
     * The GoogleLongrunningWaitOperationRequest model constructor.
     * @property {module:model/GoogleLongrunningWaitOperationRequest}
     */
    GoogleLongrunningWaitOperationRequest,

    /**
     * The GoogleRpcStatus model constructor.
     * @property {module:model/GoogleRpcStatus}
     */
    GoogleRpcStatus,

    /**
     * The HTTPGetAction model constructor.
     * @property {module:model/HTTPGetAction}
     */
    HTTPGetAction,

    /**
     * The HTTPHeader model constructor.
     * @property {module:model/HTTPHeader}
     */
    HTTPHeader,

    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job,

    /**
     * The JobSpec model constructor.
     * @property {module:model/JobSpec}
     */
    JobSpec,

    /**
     * The JobStatus model constructor.
     * @property {module:model/JobStatus}
     */
    JobStatus,

    /**
     * The KeyToPath model constructor.
     * @property {module:model/KeyToPath}
     */
    KeyToPath,

    /**
     * The ListAuthorizedDomainsResponse model constructor.
     * @property {module:model/ListAuthorizedDomainsResponse}
     */
    ListAuthorizedDomainsResponse,

    /**
     * The ListConfigurationsResponse model constructor.
     * @property {module:model/ListConfigurationsResponse}
     */
    ListConfigurationsResponse,

    /**
     * The ListDomainMappingsResponse model constructor.
     * @property {module:model/ListDomainMappingsResponse}
     */
    ListDomainMappingsResponse,

    /**
     * The ListExecutionsResponse model constructor.
     * @property {module:model/ListExecutionsResponse}
     */
    ListExecutionsResponse,

    /**
     * The ListJobsResponse model constructor.
     * @property {module:model/ListJobsResponse}
     */
    ListJobsResponse,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The ListMeta model constructor.
     * @property {module:model/ListMeta}
     */
    ListMeta,

    /**
     * The ListRevisionsResponse model constructor.
     * @property {module:model/ListRevisionsResponse}
     */
    ListRevisionsResponse,

    /**
     * The ListRoutesResponse model constructor.
     * @property {module:model/ListRoutesResponse}
     */
    ListRoutesResponse,

    /**
     * The ListServicesResponse model constructor.
     * @property {module:model/ListServicesResponse}
     */
    ListServicesResponse,

    /**
     * The ListTasksResponse model constructor.
     * @property {module:model/ListTasksResponse}
     */
    ListTasksResponse,

    /**
     * The LocalObjectReference model constructor.
     * @property {module:model/LocalObjectReference}
     */
    LocalObjectReference,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The NFSVolumeSource model constructor.
     * @property {module:model/NFSVolumeSource}
     */
    NFSVolumeSource,

    /**
     * The ObjectMeta model constructor.
     * @property {module:model/ObjectMeta}
     */
    ObjectMeta,

    /**
     * The Overrides model constructor.
     * @property {module:model/Overrides}
     */
    Overrides,

    /**
     * The OwnerReference model constructor.
     * @property {module:model/OwnerReference}
     */
    OwnerReference,

    /**
     * The Policy model constructor.
     * @property {module:model/Policy}
     */
    Policy,

    /**
     * The Probe model constructor.
     * @property {module:model/Probe}
     */
    Probe,

    /**
     * The ResourceRecord model constructor.
     * @property {module:model/ResourceRecord}
     */
    ResourceRecord,

    /**
     * The ResourceRequirements model constructor.
     * @property {module:model/ResourceRequirements}
     */
    ResourceRequirements,

    /**
     * The Revision model constructor.
     * @property {module:model/Revision}
     */
    Revision,

    /**
     * The RevisionSpec model constructor.
     * @property {module:model/RevisionSpec}
     */
    RevisionSpec,

    /**
     * The RevisionStatus model constructor.
     * @property {module:model/RevisionStatus}
     */
    RevisionStatus,

    /**
     * The RevisionTemplate model constructor.
     * @property {module:model/RevisionTemplate}
     */
    RevisionTemplate,

    /**
     * The Route model constructor.
     * @property {module:model/Route}
     */
    Route,

    /**
     * The RouteSpec model constructor.
     * @property {module:model/RouteSpec}
     */
    RouteSpec,

    /**
     * The RouteStatus model constructor.
     * @property {module:model/RouteStatus}
     */
    RouteStatus,

    /**
     * The RunJobRequest model constructor.
     * @property {module:model/RunJobRequest}
     */
    RunJobRequest,

    /**
     * The SecretEnvSource model constructor.
     * @property {module:model/SecretEnvSource}
     */
    SecretEnvSource,

    /**
     * The SecretKeySelector model constructor.
     * @property {module:model/SecretKeySelector}
     */
    SecretKeySelector,

    /**
     * The SecretVolumeSource model constructor.
     * @property {module:model/SecretVolumeSource}
     */
    SecretVolumeSource,

    /**
     * The SecurityContext model constructor.
     * @property {module:model/SecurityContext}
     */
    SecurityContext,

    /**
     * The Service model constructor.
     * @property {module:model/Service}
     */
    Service,

    /**
     * The ServiceSpec model constructor.
     * @property {module:model/ServiceSpec}
     */
    ServiceSpec,

    /**
     * The ServiceStatus model constructor.
     * @property {module:model/ServiceStatus}
     */
    ServiceStatus,

    /**
     * The SetIamPolicyRequest model constructor.
     * @property {module:model/SetIamPolicyRequest}
     */
    SetIamPolicyRequest,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The StatusCause model constructor.
     * @property {module:model/StatusCause}
     */
    StatusCause,

    /**
     * The StatusDetails model constructor.
     * @property {module:model/StatusDetails}
     */
    StatusDetails,

    /**
     * The TCPSocketAction model constructor.
     * @property {module:model/TCPSocketAction}
     */
    TCPSocketAction,

    /**
     * The Task model constructor.
     * @property {module:model/Task}
     */
    Task,

    /**
     * The TaskAttemptResult model constructor.
     * @property {module:model/TaskAttemptResult}
     */
    TaskAttemptResult,

    /**
     * The TaskSpec model constructor.
     * @property {module:model/TaskSpec}
     */
    TaskSpec,

    /**
     * The TaskStatus model constructor.
     * @property {module:model/TaskStatus}
     */
    TaskStatus,

    /**
     * The TaskTemplateSpec model constructor.
     * @property {module:model/TaskTemplateSpec}
     */
    TaskTemplateSpec,

    /**
     * The TestIamPermissionsRequest model constructor.
     * @property {module:model/TestIamPermissionsRequest}
     */
    TestIamPermissionsRequest,

    /**
     * The TestIamPermissionsResponse model constructor.
     * @property {module:model/TestIamPermissionsResponse}
     */
    TestIamPermissionsResponse,

    /**
     * The TrafficTarget model constructor.
     * @property {module:model/TrafficTarget}
     */
    TrafficTarget,

    /**
     * The Volume model constructor.
     * @property {module:model/Volume}
     */
    Volume,

    /**
     * The VolumeMount model constructor.
     * @property {module:model/VolumeMount}
     */
    VolumeMount,

    /**
    * The NamespacesApi service constructor.
    * @property {module:api/NamespacesApi}
    */
    NamespacesApi,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
