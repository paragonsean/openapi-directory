/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudRunAdminApi);
  }
}(this, function(expect, CloudRunAdminApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudRunAdminApi.TrafficTarget();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TrafficTarget', function() {
    it('should create an instance of TrafficTarget', function() {
      // uncomment below and update the code to test TrafficTarget
      //var instance = new CloudRunAdminApi.TrafficTarget();
      //expect(instance).to.be.a(CloudRunAdminApi.TrafficTarget);
    });

    it('should have the property configurationName (base name: "configurationName")', function() {
      // uncomment below and update the code to test the property configurationName
      //var instance = new CloudRunAdminApi.TrafficTarget();
      //expect(instance).to.be();
    });

    it('should have the property latestRevision (base name: "latestRevision")', function() {
      // uncomment below and update the code to test the property latestRevision
      //var instance = new CloudRunAdminApi.TrafficTarget();
      //expect(instance).to.be();
    });

    it('should have the property percent (base name: "percent")', function() {
      // uncomment below and update the code to test the property percent
      //var instance = new CloudRunAdminApi.TrafficTarget();
      //expect(instance).to.be();
    });

    it('should have the property revisionName (base name: "revisionName")', function() {
      // uncomment below and update the code to test the property revisionName
      //var instance = new CloudRunAdminApi.TrafficTarget();
      //expect(instance).to.be();
    });

    it('should have the property tag (base name: "tag")', function() {
      // uncomment below and update the code to test the property tag
      //var instance = new CloudRunAdminApi.TrafficTarget();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new CloudRunAdminApi.TrafficTarget();
      //expect(instance).to.be();
    });

  });

}));
