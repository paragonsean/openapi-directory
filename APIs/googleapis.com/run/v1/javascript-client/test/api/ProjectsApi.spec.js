/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudRunAdminApi);
  }
}(this, function(expect, CloudRunAdminApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudRunAdminApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('runProjectsLocationsAuthorizeddomainsList', function() {
      it('should call runProjectsLocationsAuthorizeddomainsList successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsAuthorizeddomainsList
        //instance.runProjectsLocationsAuthorizeddomainsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsConfigurationsList', function() {
      it('should call runProjectsLocationsConfigurationsList successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsConfigurationsList
        //instance.runProjectsLocationsConfigurationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsDomainmappingsCreate', function() {
      it('should call runProjectsLocationsDomainmappingsCreate successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsDomainmappingsCreate
        //instance.runProjectsLocationsDomainmappingsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsDomainmappingsList', function() {
      it('should call runProjectsLocationsDomainmappingsList successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsDomainmappingsList
        //instance.runProjectsLocationsDomainmappingsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsList', function() {
      it('should call runProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsList
        //instance.runProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsOperationsList', function() {
      it('should call runProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsOperationsList
        //instance.runProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsOperationsWait', function() {
      it('should call runProjectsLocationsOperationsWait successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsOperationsWait
        //instance.runProjectsLocationsOperationsWait(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsRevisionsList', function() {
      it('should call runProjectsLocationsRevisionsList successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsRevisionsList
        //instance.runProjectsLocationsRevisionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsRoutesList', function() {
      it('should call runProjectsLocationsRoutesList successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsRoutesList
        //instance.runProjectsLocationsRoutesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsServicesCreate', function() {
      it('should call runProjectsLocationsServicesCreate successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsServicesCreate
        //instance.runProjectsLocationsServicesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsServicesDelete', function() {
      it('should call runProjectsLocationsServicesDelete successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsServicesDelete
        //instance.runProjectsLocationsServicesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsServicesGet', function() {
      it('should call runProjectsLocationsServicesGet successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsServicesGet
        //instance.runProjectsLocationsServicesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsServicesGetIamPolicy', function() {
      it('should call runProjectsLocationsServicesGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsServicesGetIamPolicy
        //instance.runProjectsLocationsServicesGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsServicesList', function() {
      it('should call runProjectsLocationsServicesList successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsServicesList
        //instance.runProjectsLocationsServicesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsServicesReplaceService', function() {
      it('should call runProjectsLocationsServicesReplaceService successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsServicesReplaceService
        //instance.runProjectsLocationsServicesReplaceService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsServicesSetIamPolicy', function() {
      it('should call runProjectsLocationsServicesSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsServicesSetIamPolicy
        //instance.runProjectsLocationsServicesSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runProjectsLocationsServicesTestIamPermissions', function() {
      it('should call runProjectsLocationsServicesTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test runProjectsLocationsServicesTestIamPermissions
        //instance.runProjectsLocationsServicesTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
