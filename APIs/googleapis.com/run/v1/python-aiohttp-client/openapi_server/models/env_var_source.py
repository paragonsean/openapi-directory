# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.config_map_key_selector import ConfigMapKeySelector
from openapi_server.models.secret_key_selector import SecretKeySelector
from openapi_server import util


class EnvVarSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config_map_key_ref: ConfigMapKeySelector=None, secret_key_ref: SecretKeySelector=None):
        """EnvVarSource - a model defined in OpenAPI

        :param config_map_key_ref: The config_map_key_ref of this EnvVarSource.
        :param secret_key_ref: The secret_key_ref of this EnvVarSource.
        """
        self.openapi_types = {
            'config_map_key_ref': ConfigMapKeySelector,
            'secret_key_ref': SecretKeySelector
        }

        self.attribute_map = {
            'config_map_key_ref': 'configMapKeyRef',
            'secret_key_ref': 'secretKeyRef'
        }

        self._config_map_key_ref = config_map_key_ref
        self._secret_key_ref = secret_key_ref

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnvVarSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnvVarSource of this EnvVarSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config_map_key_ref(self):
        """Gets the config_map_key_ref of this EnvVarSource.


        :return: The config_map_key_ref of this EnvVarSource.
        :rtype: ConfigMapKeySelector
        """
        return self._config_map_key_ref

    @config_map_key_ref.setter
    def config_map_key_ref(self, config_map_key_ref):
        """Sets the config_map_key_ref of this EnvVarSource.


        :param config_map_key_ref: The config_map_key_ref of this EnvVarSource.
        :type config_map_key_ref: ConfigMapKeySelector
        """

        self._config_map_key_ref = config_map_key_ref

    @property
    def secret_key_ref(self):
        """Gets the secret_key_ref of this EnvVarSource.


        :return: The secret_key_ref of this EnvVarSource.
        :rtype: SecretKeySelector
        """
        return self._secret_key_ref

    @secret_key_ref.setter
    def secret_key_ref(self, secret_key_ref):
        """Sets the secret_key_ref of this EnvVarSource.


        :param secret_key_ref: The secret_key_ref of this EnvVarSource.
        :type secret_key_ref: SecretKeySelector
        """

        self._secret_key_ref = secret_key_ref
