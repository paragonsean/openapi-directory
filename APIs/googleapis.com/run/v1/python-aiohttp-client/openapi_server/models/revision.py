# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.object_meta import ObjectMeta
from openapi_server.models.revision_spec import RevisionSpec
from openapi_server.models.revision_status import RevisionStatus
from openapi_server import util


class Revision(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, kind: str=None, metadata: ObjectMeta=None, spec: RevisionSpec=None, status: RevisionStatus=None):
        """Revision - a model defined in OpenAPI

        :param api_version: The api_version of this Revision.
        :param kind: The kind of this Revision.
        :param metadata: The metadata of this Revision.
        :param spec: The spec of this Revision.
        :param status: The status of this Revision.
        """
        self.openapi_types = {
            'api_version': str,
            'kind': str,
            'metadata': ObjectMeta,
            'spec': RevisionSpec,
            'status': RevisionStatus
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'kind': 'kind',
            'metadata': 'metadata',
            'spec': 'spec',
            'status': 'status'
        }

        self._api_version = api_version
        self._kind = kind
        self._metadata = metadata
        self._spec = spec
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Revision':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Revision of this Revision.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self):
        """Gets the api_version of this Revision.

        The API version for this call such as \"serving.knative.dev/v1\".

        :return: The api_version of this Revision.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this Revision.

        The API version for this call such as \"serving.knative.dev/v1\".

        :param api_version: The api_version of this Revision.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def kind(self):
        """Gets the kind of this Revision.

        The kind of this resource, in this case \"Revision\".

        :return: The kind of this Revision.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Revision.

        The kind of this resource, in this case \"Revision\".

        :param kind: The kind of this Revision.
        :type kind: str
        """

        self._kind = kind

    @property
    def metadata(self):
        """Gets the metadata of this Revision.


        :return: The metadata of this Revision.
        :rtype: ObjectMeta
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this Revision.


        :param metadata: The metadata of this Revision.
        :type metadata: ObjectMeta
        """

        self._metadata = metadata

    @property
    def spec(self):
        """Gets the spec of this Revision.


        :return: The spec of this Revision.
        :rtype: RevisionSpec
        """
        return self._spec

    @spec.setter
    def spec(self, spec):
        """Sets the spec of this Revision.


        :param spec: The spec of this Revision.
        :type spec: RevisionSpec
        """

        self._spec = spec

    @property
    def status(self):
        """Gets the status of this Revision.


        :return: The status of this Revision.
        :rtype: RevisionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Revision.


        :param status: The status of this Revision.
        :type status: RevisionStatus
        """

        self._status = status
