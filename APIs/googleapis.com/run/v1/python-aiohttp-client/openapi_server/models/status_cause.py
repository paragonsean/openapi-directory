# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StatusCause(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _field: str=None, message: str=None, reason: str=None):
        """StatusCause - a model defined in OpenAPI

        :param _field: The _field of this StatusCause.
        :param message: The message of this StatusCause.
        :param reason: The reason of this StatusCause.
        """
        self.openapi_types = {
            '_field': str,
            'message': str,
            'reason': str
        }

        self.attribute_map = {
            '_field': 'field',
            'message': 'message',
            'reason': 'reason'
        }

        self.__field = _field
        self._message = message
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StatusCause':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StatusCause of this StatusCause.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _field(self):
        """Gets the _field of this StatusCause.

        The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed. Fields may appear more than once in an array of causes due to fields having multiple errors. Examples: \"name\" - the field \"name\" on the current resource \"items[0].name\" - the field \"name\" on the first array entry in \"items\"

        :return: The _field of this StatusCause.
        :rtype: str
        """
        return self.__field

    @_field.setter
    def _field(self, _field):
        """Sets the _field of this StatusCause.

        The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed. Fields may appear more than once in an array of causes due to fields having multiple errors. Examples: \"name\" - the field \"name\" on the current resource \"items[0].name\" - the field \"name\" on the first array entry in \"items\"

        :param _field: The _field of this StatusCause.
        :type _field: str
        """

        self.__field = _field

    @property
    def message(self):
        """Gets the message of this StatusCause.

        A human-readable description of the cause of the error. This field may be presented as-is to a reader.

        :return: The message of this StatusCause.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this StatusCause.

        A human-readable description of the cause of the error. This field may be presented as-is to a reader.

        :param message: The message of this StatusCause.
        :type message: str
        """

        self._message = message

    @property
    def reason(self):
        """Gets the reason of this StatusCause.

        A machine-readable description of the cause of the error. If this value is empty there is no information available.

        :return: The reason of this StatusCause.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this StatusCause.

        A machine-readable description of the cause of the error. If this value is empty there is no information available.

        :param reason: The reason of this StatusCause.
        :type reason: str
        """

        self._reason = reason
