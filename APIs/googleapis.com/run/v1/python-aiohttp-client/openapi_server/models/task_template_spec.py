# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.task_spec import TaskSpec
from openapi_server import util


class TaskTemplateSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, spec: TaskSpec=None):
        """TaskTemplateSpec - a model defined in OpenAPI

        :param spec: The spec of this TaskTemplateSpec.
        """
        self.openapi_types = {
            'spec': TaskSpec
        }

        self.attribute_map = {
            'spec': 'spec'
        }

        self._spec = spec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskTemplateSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskTemplateSpec of this TaskTemplateSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def spec(self):
        """Gets the spec of this TaskTemplateSpec.


        :return: The spec of this TaskTemplateSpec.
        :rtype: TaskSpec
        """
        return self._spec

    @spec.setter
    def spec(self, spec):
        """Sets the spec of this TaskTemplateSpec.


        :param spec: The spec of this TaskTemplateSpec.
        :type spec: TaskSpec
        """

        self._spec = spec
