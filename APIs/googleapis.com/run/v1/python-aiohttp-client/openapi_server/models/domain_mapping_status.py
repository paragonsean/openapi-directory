# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_run_v1_condition import GoogleCloudRunV1Condition
from openapi_server.models.resource_record import ResourceRecord
from openapi_server import util


class DomainMappingStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conditions: List[GoogleCloudRunV1Condition]=None, mapped_route_name: str=None, observed_generation: int=None, resource_records: List[ResourceRecord]=None, url: str=None):
        """DomainMappingStatus - a model defined in OpenAPI

        :param conditions: The conditions of this DomainMappingStatus.
        :param mapped_route_name: The mapped_route_name of this DomainMappingStatus.
        :param observed_generation: The observed_generation of this DomainMappingStatus.
        :param resource_records: The resource_records of this DomainMappingStatus.
        :param url: The url of this DomainMappingStatus.
        """
        self.openapi_types = {
            'conditions': List[GoogleCloudRunV1Condition],
            'mapped_route_name': str,
            'observed_generation': int,
            'resource_records': List[ResourceRecord],
            'url': str
        }

        self.attribute_map = {
            'conditions': 'conditions',
            'mapped_route_name': 'mappedRouteName',
            'observed_generation': 'observedGeneration',
            'resource_records': 'resourceRecords',
            'url': 'url'
        }

        self._conditions = conditions
        self._mapped_route_name = mapped_route_name
        self._observed_generation = observed_generation
        self._resource_records = resource_records
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainMappingStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainMappingStatus of this DomainMappingStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conditions(self):
        """Gets the conditions of this DomainMappingStatus.

        Array of observed DomainMappingConditions, indicating the current state of the DomainMapping.

        :return: The conditions of this DomainMappingStatus.
        :rtype: List[GoogleCloudRunV1Condition]
        """
        return self._conditions

    @conditions.setter
    def conditions(self, conditions):
        """Sets the conditions of this DomainMappingStatus.

        Array of observed DomainMappingConditions, indicating the current state of the DomainMapping.

        :param conditions: The conditions of this DomainMappingStatus.
        :type conditions: List[GoogleCloudRunV1Condition]
        """

        self._conditions = conditions

    @property
    def mapped_route_name(self):
        """Gets the mapped_route_name of this DomainMappingStatus.

        The name of the route that the mapping currently points to.

        :return: The mapped_route_name of this DomainMappingStatus.
        :rtype: str
        """
        return self._mapped_route_name

    @mapped_route_name.setter
    def mapped_route_name(self, mapped_route_name):
        """Sets the mapped_route_name of this DomainMappingStatus.

        The name of the route that the mapping currently points to.

        :param mapped_route_name: The mapped_route_name of this DomainMappingStatus.
        :type mapped_route_name: str
        """

        self._mapped_route_name = mapped_route_name

    @property
    def observed_generation(self):
        """Gets the observed_generation of this DomainMappingStatus.

        ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.

        :return: The observed_generation of this DomainMappingStatus.
        :rtype: int
        """
        return self._observed_generation

    @observed_generation.setter
    def observed_generation(self, observed_generation):
        """Sets the observed_generation of this DomainMappingStatus.

        ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.

        :param observed_generation: The observed_generation of this DomainMappingStatus.
        :type observed_generation: int
        """

        self._observed_generation = observed_generation

    @property
    def resource_records(self):
        """Gets the resource_records of this DomainMappingStatus.

        The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.

        :return: The resource_records of this DomainMappingStatus.
        :rtype: List[ResourceRecord]
        """
        return self._resource_records

    @resource_records.setter
    def resource_records(self, resource_records):
        """Sets the resource_records of this DomainMappingStatus.

        The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.

        :param resource_records: The resource_records of this DomainMappingStatus.
        :type resource_records: List[ResourceRecord]
        """

        self._resource_records = resource_records

    @property
    def url(self):
        """Gets the url of this DomainMappingStatus.

        Optional. Not supported by Cloud Run.

        :return: The url of this DomainMappingStatus.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this DomainMappingStatus.

        Optional. Not supported by Cloud Run.

        :param url: The url of this DomainMappingStatus.
        :type url: str
        """

        self._url = url
