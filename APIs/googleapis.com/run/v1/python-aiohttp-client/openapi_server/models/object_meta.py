# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.owner_reference import OwnerReference
from openapi_server import util


class ObjectMeta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotations: Dict[str, str]=None, cluster_name: str=None, creation_timestamp: str=None, deletion_grace_period_seconds: int=None, deletion_timestamp: str=None, finalizers: List[str]=None, generate_name: str=None, generation: int=None, labels: Dict[str, str]=None, name: str=None, namespace: str=None, owner_references: List[OwnerReference]=None, resource_version: str=None, self_link: str=None, uid: str=None):
        """ObjectMeta - a model defined in OpenAPI

        :param annotations: The annotations of this ObjectMeta.
        :param cluster_name: The cluster_name of this ObjectMeta.
        :param creation_timestamp: The creation_timestamp of this ObjectMeta.
        :param deletion_grace_period_seconds: The deletion_grace_period_seconds of this ObjectMeta.
        :param deletion_timestamp: The deletion_timestamp of this ObjectMeta.
        :param finalizers: The finalizers of this ObjectMeta.
        :param generate_name: The generate_name of this ObjectMeta.
        :param generation: The generation of this ObjectMeta.
        :param labels: The labels of this ObjectMeta.
        :param name: The name of this ObjectMeta.
        :param namespace: The namespace of this ObjectMeta.
        :param owner_references: The owner_references of this ObjectMeta.
        :param resource_version: The resource_version of this ObjectMeta.
        :param self_link: The self_link of this ObjectMeta.
        :param uid: The uid of this ObjectMeta.
        """
        self.openapi_types = {
            'annotations': Dict[str, str],
            'cluster_name': str,
            'creation_timestamp': str,
            'deletion_grace_period_seconds': int,
            'deletion_timestamp': str,
            'finalizers': List[str],
            'generate_name': str,
            'generation': int,
            'labels': Dict[str, str],
            'name': str,
            'namespace': str,
            'owner_references': List[OwnerReference],
            'resource_version': str,
            'self_link': str,
            'uid': str
        }

        self.attribute_map = {
            'annotations': 'annotations',
            'cluster_name': 'clusterName',
            'creation_timestamp': 'creationTimestamp',
            'deletion_grace_period_seconds': 'deletionGracePeriodSeconds',
            'deletion_timestamp': 'deletionTimestamp',
            'finalizers': 'finalizers',
            'generate_name': 'generateName',
            'generation': 'generation',
            'labels': 'labels',
            'name': 'name',
            'namespace': 'namespace',
            'owner_references': 'ownerReferences',
            'resource_version': 'resourceVersion',
            'self_link': 'selfLink',
            'uid': 'uid'
        }

        self._annotations = annotations
        self._cluster_name = cluster_name
        self._creation_timestamp = creation_timestamp
        self._deletion_grace_period_seconds = deletion_grace_period_seconds
        self._deletion_timestamp = deletion_timestamp
        self._finalizers = finalizers
        self._generate_name = generate_name
        self._generation = generation
        self._labels = labels
        self._name = name
        self._namespace = namespace
        self._owner_references = owner_references
        self._resource_version = resource_version
        self._self_link = self_link
        self._uid = uid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjectMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ObjectMeta of this ObjectMeta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations(self):
        """Gets the annotations of this ObjectMeta.

        Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. In Cloud Run, annotations with 'run.googleapis.com/' and 'autoscaling.knative.dev' are restricted, and the accepted annotations will be different depending on the resource type. * `autoscaling.knative.dev/maxScale`: Revision. * `autoscaling.knative.dev/minScale`: Revision. * `run.googleapis.com/binary-authorization-breakglass`: Service, Job, * `run.googleapis.com/binary-authorization`: Service, Job, Execution. * `run.googleapis.com/client-name`: All resources. * `run.googleapis.com/cloudsql-instances`: Revision, Execution. * `run.googleapis.com/container-dependencies`: Revision . * `run.googleapis.com/cpu-throttling`: Revision. * `run.googleapis.com/custom-audiences`: Service. * `run.googleapis.com/default-url-disabled`: Service. * `run.googleapis.com/description`: Service. * `run.googleapis.com/encryption-key-shutdown-hours`: Revision * `run.googleapis.com/encryption-key`: Revision, Execution. * `run.googleapis.com/execution-environment`: Revision, Execution. * `run.googleapis.com/gc-traffic-tags`: Service. * `run.googleapis.com/ingress`: Service. * `run.googleapis.com/launch-stage`: Service, Job. * `run.googleapis.com/minScale`: Service (ALPHA) * `run.googleapis.com/network-interfaces`: Revision, Execution. * `run.googleapis.com/post-key-revocation-action-type`: Revision. * `run.googleapis.com/secrets`: Revision, Execution. * `run.googleapis.com/secure-session-agent`: Revision. * `run.googleapis.com/sessionAffinity`: Revision. * `run.googleapis.com/startup-cpu-boost`: Revision. * `run.googleapis.com/vpc-access-connector`: Revision, Execution. * `run.googleapis.com/vpc-access-egress`: Revision, Execution.

        :return: The annotations of this ObjectMeta.
        :rtype: Dict[str, str]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this ObjectMeta.

        Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. In Cloud Run, annotations with 'run.googleapis.com/' and 'autoscaling.knative.dev' are restricted, and the accepted annotations will be different depending on the resource type. * `autoscaling.knative.dev/maxScale`: Revision. * `autoscaling.knative.dev/minScale`: Revision. * `run.googleapis.com/binary-authorization-breakglass`: Service, Job, * `run.googleapis.com/binary-authorization`: Service, Job, Execution. * `run.googleapis.com/client-name`: All resources. * `run.googleapis.com/cloudsql-instances`: Revision, Execution. * `run.googleapis.com/container-dependencies`: Revision . * `run.googleapis.com/cpu-throttling`: Revision. * `run.googleapis.com/custom-audiences`: Service. * `run.googleapis.com/default-url-disabled`: Service. * `run.googleapis.com/description`: Service. * `run.googleapis.com/encryption-key-shutdown-hours`: Revision * `run.googleapis.com/encryption-key`: Revision, Execution. * `run.googleapis.com/execution-environment`: Revision, Execution. * `run.googleapis.com/gc-traffic-tags`: Service. * `run.googleapis.com/ingress`: Service. * `run.googleapis.com/launch-stage`: Service, Job. * `run.googleapis.com/minScale`: Service (ALPHA) * `run.googleapis.com/network-interfaces`: Revision, Execution. * `run.googleapis.com/post-key-revocation-action-type`: Revision. * `run.googleapis.com/secrets`: Revision, Execution. * `run.googleapis.com/secure-session-agent`: Revision. * `run.googleapis.com/sessionAffinity`: Revision. * `run.googleapis.com/startup-cpu-boost`: Revision. * `run.googleapis.com/vpc-access-connector`: Revision, Execution. * `run.googleapis.com/vpc-access-egress`: Revision, Execution.

        :param annotations: The annotations of this ObjectMeta.
        :type annotations: Dict[str, str]
        """

        self._annotations = annotations

    @property
    def cluster_name(self):
        """Gets the cluster_name of this ObjectMeta.

        Not supported by Cloud Run

        :return: The cluster_name of this ObjectMeta.
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this ObjectMeta.

        Not supported by Cloud Run

        :param cluster_name: The cluster_name of this ObjectMeta.
        :type cluster_name: str
        """

        self._cluster_name = cluster_name

    @property
    def creation_timestamp(self):
        """Gets the creation_timestamp of this ObjectMeta.

        UTC timestamp representing the server time when this object was created.

        :return: The creation_timestamp of this ObjectMeta.
        :rtype: str
        """
        return self._creation_timestamp

    @creation_timestamp.setter
    def creation_timestamp(self, creation_timestamp):
        """Sets the creation_timestamp of this ObjectMeta.

        UTC timestamp representing the server time when this object was created.

        :param creation_timestamp: The creation_timestamp of this ObjectMeta.
        :type creation_timestamp: str
        """

        self._creation_timestamp = creation_timestamp

    @property
    def deletion_grace_period_seconds(self):
        """Gets the deletion_grace_period_seconds of this ObjectMeta.

        Not supported by Cloud Run

        :return: The deletion_grace_period_seconds of this ObjectMeta.
        :rtype: int
        """
        return self._deletion_grace_period_seconds

    @deletion_grace_period_seconds.setter
    def deletion_grace_period_seconds(self, deletion_grace_period_seconds):
        """Sets the deletion_grace_period_seconds of this ObjectMeta.

        Not supported by Cloud Run

        :param deletion_grace_period_seconds: The deletion_grace_period_seconds of this ObjectMeta.
        :type deletion_grace_period_seconds: int
        """

        self._deletion_grace_period_seconds = deletion_grace_period_seconds

    @property
    def deletion_timestamp(self):
        """Gets the deletion_timestamp of this ObjectMeta.

        The read-only soft deletion timestamp for this resource. In Cloud Run, users are not able to set this field. Instead, they must call the corresponding Delete API.

        :return: The deletion_timestamp of this ObjectMeta.
        :rtype: str
        """
        return self._deletion_timestamp

    @deletion_timestamp.setter
    def deletion_timestamp(self, deletion_timestamp):
        """Sets the deletion_timestamp of this ObjectMeta.

        The read-only soft deletion timestamp for this resource. In Cloud Run, users are not able to set this field. Instead, they must call the corresponding Delete API.

        :param deletion_timestamp: The deletion_timestamp of this ObjectMeta.
        :type deletion_timestamp: str
        """

        self._deletion_timestamp = deletion_timestamp

    @property
    def finalizers(self):
        """Gets the finalizers of this ObjectMeta.

        Not supported by Cloud Run

        :return: The finalizers of this ObjectMeta.
        :rtype: List[str]
        """
        return self._finalizers

    @finalizers.setter
    def finalizers(self, finalizers):
        """Sets the finalizers of this ObjectMeta.

        Not supported by Cloud Run

        :param finalizers: The finalizers of this ObjectMeta.
        :type finalizers: List[str]
        """

        self._finalizers = finalizers

    @property
    def generate_name(self):
        """Gets the generate_name of this ObjectMeta.

        Not supported by Cloud Run

        :return: The generate_name of this ObjectMeta.
        :rtype: str
        """
        return self._generate_name

    @generate_name.setter
    def generate_name(self, generate_name):
        """Sets the generate_name of this ObjectMeta.

        Not supported by Cloud Run

        :param generate_name: The generate_name of this ObjectMeta.
        :type generate_name: str
        """

        self._generate_name = generate_name

    @property
    def generation(self):
        """Gets the generation of this ObjectMeta.

        A system-provided sequence number representing a specific generation of the desired state.

        :return: The generation of this ObjectMeta.
        :rtype: int
        """
        return self._generation

    @generation.setter
    def generation(self, generation):
        """Sets the generation of this ObjectMeta.

        A system-provided sequence number representing a specific generation of the desired state.

        :param generation: The generation of this ObjectMeta.
        :type generation: int
        """

        self._generation = generation

    @property
    def labels(self):
        """Gets the labels of this ObjectMeta.

        Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes.

        :return: The labels of this ObjectMeta.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this ObjectMeta.

        Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes.

        :param labels: The labels of this ObjectMeta.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this ObjectMeta.

        Required. The name of the resource. Name is required when creating top-level resources (Service, Job), must be unique within a Cloud Run project/region, and cannot be changed once created.

        :return: The name of this ObjectMeta.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ObjectMeta.

        Required. The name of the resource. Name is required when creating top-level resources (Service, Job), must be unique within a Cloud Run project/region, and cannot be changed once created.

        :param name: The name of this ObjectMeta.
        :type name: str
        """

        self._name = name

    @property
    def namespace(self):
        """Gets the namespace of this ObjectMeta.

        Required. Defines the space within each name must be unique within a Cloud Run region. In Cloud Run, it must be project ID or number.

        :return: The namespace of this ObjectMeta.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this ObjectMeta.

        Required. Defines the space within each name must be unique within a Cloud Run region. In Cloud Run, it must be project ID or number.

        :param namespace: The namespace of this ObjectMeta.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def owner_references(self):
        """Gets the owner_references of this ObjectMeta.

        Not supported by Cloud Run

        :return: The owner_references of this ObjectMeta.
        :rtype: List[OwnerReference]
        """
        return self._owner_references

    @owner_references.setter
    def owner_references(self, owner_references):
        """Sets the owner_references of this ObjectMeta.

        Not supported by Cloud Run

        :param owner_references: The owner_references of this ObjectMeta.
        :type owner_references: List[OwnerReference]
        """

        self._owner_references = owner_references

    @property
    def resource_version(self):
        """Gets the resource_version of this ObjectMeta.

        Opaque, system-generated value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection.

        :return: The resource_version of this ObjectMeta.
        :rtype: str
        """
        return self._resource_version

    @resource_version.setter
    def resource_version(self, resource_version):
        """Sets the resource_version of this ObjectMeta.

        Opaque, system-generated value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection.

        :param resource_version: The resource_version of this ObjectMeta.
        :type resource_version: str
        """

        self._resource_version = resource_version

    @property
    def self_link(self):
        """Gets the self_link of this ObjectMeta.

        URL representing this object.

        :return: The self_link of this ObjectMeta.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this ObjectMeta.

        URL representing this object.

        :param self_link: The self_link of this ObjectMeta.
        :type self_link: str
        """

        self._self_link = self_link

    @property
    def uid(self):
        """Gets the uid of this ObjectMeta.

        Unique, system-generated identifier for this resource.

        :return: The uid of this ObjectMeta.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this ObjectMeta.

        Unique, system-generated identifier for this resource.

        :param uid: The uid of this ObjectMeta.
        :type uid: str
        """

        self._uid = uid
