# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.http_header import HTTPHeader
from openapi_server import util


class HTTPGetAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host: str=None, http_headers: List[HTTPHeader]=None, path: str=None, port: int=None, scheme: str=None):
        """HTTPGetAction - a model defined in OpenAPI

        :param host: The host of this HTTPGetAction.
        :param http_headers: The http_headers of this HTTPGetAction.
        :param path: The path of this HTTPGetAction.
        :param port: The port of this HTTPGetAction.
        :param scheme: The scheme of this HTTPGetAction.
        """
        self.openapi_types = {
            'host': str,
            'http_headers': List[HTTPHeader],
            'path': str,
            'port': int,
            'scheme': str
        }

        self.attribute_map = {
            'host': 'host',
            'http_headers': 'httpHeaders',
            'path': 'path',
            'port': 'port',
            'scheme': 'scheme'
        }

        self._host = host
        self._http_headers = http_headers
        self._path = path
        self._port = port
        self._scheme = scheme

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HTTPGetAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HTTPGetAction of this HTTPGetAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host(self):
        """Gets the host of this HTTPGetAction.

        Not supported by Cloud Run.

        :return: The host of this HTTPGetAction.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this HTTPGetAction.

        Not supported by Cloud Run.

        :param host: The host of this HTTPGetAction.
        :type host: str
        """

        self._host = host

    @property
    def http_headers(self):
        """Gets the http_headers of this HTTPGetAction.

        Custom headers to set in the request. HTTP allows repeated headers.

        :return: The http_headers of this HTTPGetAction.
        :rtype: List[HTTPHeader]
        """
        return self._http_headers

    @http_headers.setter
    def http_headers(self, http_headers):
        """Sets the http_headers of this HTTPGetAction.

        Custom headers to set in the request. HTTP allows repeated headers.

        :param http_headers: The http_headers of this HTTPGetAction.
        :type http_headers: List[HTTPHeader]
        """

        self._http_headers = http_headers

    @property
    def path(self):
        """Gets the path of this HTTPGetAction.

        Path to access on the HTTP server.

        :return: The path of this HTTPGetAction.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this HTTPGetAction.

        Path to access on the HTTP server.

        :param path: The path of this HTTPGetAction.
        :type path: str
        """

        self._path = path

    @property
    def port(self):
        """Gets the port of this HTTPGetAction.

        Port number to access on the container. Number must be in the range 1 to 65535.

        :return: The port of this HTTPGetAction.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this HTTPGetAction.

        Port number to access on the container. Number must be in the range 1 to 65535.

        :param port: The port of this HTTPGetAction.
        :type port: int
        """

        self._port = port

    @property
    def scheme(self):
        """Gets the scheme of this HTTPGetAction.

        Not supported by Cloud Run.

        :return: The scheme of this HTTPGetAction.
        :rtype: str
        """
        return self._scheme

    @scheme.setter
    def scheme(self, scheme):
        """Sets the scheme of this HTTPGetAction.

        Not supported by Cloud Run.

        :param scheme: The scheme of this HTTPGetAction.
        :type scheme: str
        """

        self._scheme = scheme
