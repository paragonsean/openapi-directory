# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OwnerReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, block_owner_deletion: bool=None, controller: bool=None, kind: str=None, name: str=None, uid: str=None):
        """OwnerReference - a model defined in OpenAPI

        :param api_version: The api_version of this OwnerReference.
        :param block_owner_deletion: The block_owner_deletion of this OwnerReference.
        :param controller: The controller of this OwnerReference.
        :param kind: The kind of this OwnerReference.
        :param name: The name of this OwnerReference.
        :param uid: The uid of this OwnerReference.
        """
        self.openapi_types = {
            'api_version': str,
            'block_owner_deletion': bool,
            'controller': bool,
            'kind': str,
            'name': str,
            'uid': str
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'block_owner_deletion': 'blockOwnerDeletion',
            'controller': 'controller',
            'kind': 'kind',
            'name': 'name',
            'uid': 'uid'
        }

        self._api_version = api_version
        self._block_owner_deletion = block_owner_deletion
        self._controller = controller
        self._kind = kind
        self._name = name
        self._uid = uid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OwnerReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OwnerReference of this OwnerReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self):
        """Gets the api_version of this OwnerReference.

        This is not supported or used by Cloud Run.

        :return: The api_version of this OwnerReference.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this OwnerReference.

        This is not supported or used by Cloud Run.

        :param api_version: The api_version of this OwnerReference.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def block_owner_deletion(self):
        """Gets the block_owner_deletion of this OwnerReference.

        This is not supported or used by Cloud Run.

        :return: The block_owner_deletion of this OwnerReference.
        :rtype: bool
        """
        return self._block_owner_deletion

    @block_owner_deletion.setter
    def block_owner_deletion(self, block_owner_deletion):
        """Sets the block_owner_deletion of this OwnerReference.

        This is not supported or used by Cloud Run.

        :param block_owner_deletion: The block_owner_deletion of this OwnerReference.
        :type block_owner_deletion: bool
        """

        self._block_owner_deletion = block_owner_deletion

    @property
    def controller(self):
        """Gets the controller of this OwnerReference.

        This is not supported or used by Cloud Run.

        :return: The controller of this OwnerReference.
        :rtype: bool
        """
        return self._controller

    @controller.setter
    def controller(self, controller):
        """Sets the controller of this OwnerReference.

        This is not supported or used by Cloud Run.

        :param controller: The controller of this OwnerReference.
        :type controller: bool
        """

        self._controller = controller

    @property
    def kind(self):
        """Gets the kind of this OwnerReference.

        This is not supported or used by Cloud Run.

        :return: The kind of this OwnerReference.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this OwnerReference.

        This is not supported or used by Cloud Run.

        :param kind: The kind of this OwnerReference.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this OwnerReference.

        This is not supported or used by Cloud Run.

        :return: The name of this OwnerReference.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OwnerReference.

        This is not supported or used by Cloud Run.

        :param name: The name of this OwnerReference.
        :type name: str
        """

        self._name = name

    @property
    def uid(self):
        """Gets the uid of this OwnerReference.

        This is not supported or used by Cloud Run.

        :return: The uid of this OwnerReference.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this OwnerReference.

        This is not supported or used by Cloud Run.

        :param uid: The uid of this OwnerReference.
        :type uid: str
        """

        self._uid = uid
