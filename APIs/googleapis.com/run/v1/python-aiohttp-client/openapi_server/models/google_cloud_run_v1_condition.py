# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRunV1Condition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_transition_time: str=None, message: str=None, reason: str=None, severity: str=None, status: str=None, type: str=None):
        """GoogleCloudRunV1Condition - a model defined in OpenAPI

        :param last_transition_time: The last_transition_time of this GoogleCloudRunV1Condition.
        :param message: The message of this GoogleCloudRunV1Condition.
        :param reason: The reason of this GoogleCloudRunV1Condition.
        :param severity: The severity of this GoogleCloudRunV1Condition.
        :param status: The status of this GoogleCloudRunV1Condition.
        :param type: The type of this GoogleCloudRunV1Condition.
        """
        self.openapi_types = {
            'last_transition_time': str,
            'message': str,
            'reason': str,
            'severity': str,
            'status': str,
            'type': str
        }

        self.attribute_map = {
            'last_transition_time': 'lastTransitionTime',
            'message': 'message',
            'reason': 'reason',
            'severity': 'severity',
            'status': 'status',
            'type': 'type'
        }

        self._last_transition_time = last_transition_time
        self._message = message
        self._reason = reason
        self._severity = severity
        self._status = status
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV1Condition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV1Condition of this GoogleCloudRunV1Condition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_transition_time(self):
        """Gets the last_transition_time of this GoogleCloudRunV1Condition.

        Optional. Last time the condition transitioned from one status to another.

        :return: The last_transition_time of this GoogleCloudRunV1Condition.
        :rtype: str
        """
        return self._last_transition_time

    @last_transition_time.setter
    def last_transition_time(self, last_transition_time):
        """Sets the last_transition_time of this GoogleCloudRunV1Condition.

        Optional. Last time the condition transitioned from one status to another.

        :param last_transition_time: The last_transition_time of this GoogleCloudRunV1Condition.
        :type last_transition_time: str
        """

        self._last_transition_time = last_transition_time

    @property
    def message(self):
        """Gets the message of this GoogleCloudRunV1Condition.

        Optional. Human readable message indicating details about the current status.

        :return: The message of this GoogleCloudRunV1Condition.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GoogleCloudRunV1Condition.

        Optional. Human readable message indicating details about the current status.

        :param message: The message of this GoogleCloudRunV1Condition.
        :type message: str
        """

        self._message = message

    @property
    def reason(self):
        """Gets the reason of this GoogleCloudRunV1Condition.

        Optional. One-word CamelCase reason for the condition's last transition. These are intended to be stable, unique values which the client may use to trigger error handling logic, whereas messages which may be changed later by the server.

        :return: The reason of this GoogleCloudRunV1Condition.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this GoogleCloudRunV1Condition.

        Optional. One-word CamelCase reason for the condition's last transition. These are intended to be stable, unique values which the client may use to trigger error handling logic, whereas messages which may be changed later by the server.

        :param reason: The reason of this GoogleCloudRunV1Condition.
        :type reason: str
        """

        self._reason = reason

    @property
    def severity(self):
        """Gets the severity of this GoogleCloudRunV1Condition.

        Optional. How to interpret this condition. One of Error, Warning, or Info. Conditions of severity Info do not contribute to resource readiness.

        :return: The severity of this GoogleCloudRunV1Condition.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this GoogleCloudRunV1Condition.

        Optional. How to interpret this condition. One of Error, Warning, or Info. Conditions of severity Info do not contribute to resource readiness.

        :param severity: The severity of this GoogleCloudRunV1Condition.
        :type severity: str
        """

        self._severity = severity

    @property
    def status(self):
        """Gets the status of this GoogleCloudRunV1Condition.

        Status of the condition, one of True, False, Unknown.

        :return: The status of this GoogleCloudRunV1Condition.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GoogleCloudRunV1Condition.

        Status of the condition, one of True, False, Unknown.

        :param status: The status of this GoogleCloudRunV1Condition.
        :type status: str
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this GoogleCloudRunV1Condition.

        type is used to communicate the status of the reconciliation process. Types common to all resources include: * \"Ready\" or \"Completed\": True when the Resource is ready.

        :return: The type of this GoogleCloudRunV1Condition.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudRunV1Condition.

        type is used to communicate the status of the reconciliation process. Types common to all resources include: * \"Ready\" or \"Completed\": True when the Resource is ready.

        :param type: The type of this GoogleCloudRunV1Condition.
        :type type: str
        """

        self._type = type
