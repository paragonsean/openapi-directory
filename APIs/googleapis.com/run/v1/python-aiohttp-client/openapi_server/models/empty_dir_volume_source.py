# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EmptyDirVolumeSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, medium: str=None, size_limit: str=None):
        """EmptyDirVolumeSource - a model defined in OpenAPI

        :param medium: The medium of this EmptyDirVolumeSource.
        :param size_limit: The size_limit of this EmptyDirVolumeSource.
        """
        self.openapi_types = {
            'medium': str,
            'size_limit': str
        }

        self.attribute_map = {
            'medium': 'medium',
            'size_limit': 'sizeLimit'
        }

        self._medium = medium
        self._size_limit = size_limit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EmptyDirVolumeSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EmptyDirVolumeSource of this EmptyDirVolumeSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def medium(self):
        """Gets the medium of this EmptyDirVolumeSource.

        The medium on which the data is stored. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir

        :return: The medium of this EmptyDirVolumeSource.
        :rtype: str
        """
        return self._medium

    @medium.setter
    def medium(self, medium):
        """Sets the medium of this EmptyDirVolumeSource.

        The medium on which the data is stored. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir

        :param medium: The medium of this EmptyDirVolumeSource.
        :type medium: str
        """

        self._medium = medium

    @property
    def size_limit(self):
        """Gets the size_limit of this EmptyDirVolumeSource.

        Limit on the storage usable by this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers. The default is nil which means that the limit is undefined. More info: https://cloud.google.com/run/docs/configuring/in-memory-volumes#configure-volume. Info in Kubernetes: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir

        :return: The size_limit of this EmptyDirVolumeSource.
        :rtype: str
        """
        return self._size_limit

    @size_limit.setter
    def size_limit(self, size_limit):
        """Sets the size_limit of this EmptyDirVolumeSource.

        Limit on the storage usable by this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers. The default is nil which means that the limit is undefined. More info: https://cloud.google.com/run/docs/configuring/in-memory-volumes#configure-volume. Info in Kubernetes: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir

        :param size_limit: The size_limit of this EmptyDirVolumeSource.
        :type size_limit: str
        """

        self._size_limit = size_limit
