# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_meta import ListMeta
from openapi_server.models.service import Service
from openapi_server import util


class ListServicesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, items: List[Service]=None, kind: str=None, metadata: ListMeta=None, unreachable: List[str]=None):
        """ListServicesResponse - a model defined in OpenAPI

        :param api_version: The api_version of this ListServicesResponse.
        :param items: The items of this ListServicesResponse.
        :param kind: The kind of this ListServicesResponse.
        :param metadata: The metadata of this ListServicesResponse.
        :param unreachable: The unreachable of this ListServicesResponse.
        """
        self.openapi_types = {
            'api_version': str,
            'items': List[Service],
            'kind': str,
            'metadata': ListMeta,
            'unreachable': List[str]
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'items': 'items',
            'kind': 'kind',
            'metadata': 'metadata',
            'unreachable': 'unreachable'
        }

        self._api_version = api_version
        self._items = items
        self._kind = kind
        self._metadata = metadata
        self._unreachable = unreachable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListServicesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListServicesResponse of this ListServicesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self):
        """Gets the api_version of this ListServicesResponse.

        The API version for this call; returns \"serving.knative.dev/v1\".

        :return: The api_version of this ListServicesResponse.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this ListServicesResponse.

        The API version for this call; returns \"serving.knative.dev/v1\".

        :param api_version: The api_version of this ListServicesResponse.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def items(self):
        """Gets the items of this ListServicesResponse.

        List of Services.

        :return: The items of this ListServicesResponse.
        :rtype: List[Service]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this ListServicesResponse.

        List of Services.

        :param items: The items of this ListServicesResponse.
        :type items: List[Service]
        """

        self._items = items

    @property
    def kind(self):
        """Gets the kind of this ListServicesResponse.

        The kind of this resource; returns \"ServiceList\".

        :return: The kind of this ListServicesResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ListServicesResponse.

        The kind of this resource; returns \"ServiceList\".

        :param kind: The kind of this ListServicesResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def metadata(self):
        """Gets the metadata of this ListServicesResponse.


        :return: The metadata of this ListServicesResponse.
        :rtype: ListMeta
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ListServicesResponse.


        :param metadata: The metadata of this ListServicesResponse.
        :type metadata: ListMeta
        """

        self._metadata = metadata

    @property
    def unreachable(self):
        """Gets the unreachable of this ListServicesResponse.

        For calls against the global endpoint, returns the list of Cloud locations that could not be reached. For regional calls, this field is not used.

        :return: The unreachable of this ListServicesResponse.
        :rtype: List[str]
        """
        return self._unreachable

    @unreachable.setter
    def unreachable(self, unreachable):
        """Sets the unreachable of this ListServicesResponse.

        For calls against the global endpoint, returns the list of Cloud locations that could not be reached. For regional calls, this field is not used.

        :param unreachable: The unreachable of this ListServicesResponse.
        :type unreachable: List[str]
        """

        self._unreachable = unreachable
