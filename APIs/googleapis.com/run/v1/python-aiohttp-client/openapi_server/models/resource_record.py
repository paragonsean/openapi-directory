# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResourceRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, rrdata: str=None, type: str=None):
        """ResourceRecord - a model defined in OpenAPI

        :param name: The name of this ResourceRecord.
        :param rrdata: The rrdata of this ResourceRecord.
        :param type: The type of this ResourceRecord.
        """
        self.openapi_types = {
            'name': str,
            'rrdata': str,
            'type': str
        }

        self.attribute_map = {
            'name': 'name',
            'rrdata': 'rrdata',
            'type': 'type'
        }

        self._name = name
        self._rrdata = rrdata
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceRecord of this ResourceRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ResourceRecord.

        Relative name of the object affected by this record. Only applicable for `CNAME` records. Example: 'www'.

        :return: The name of this ResourceRecord.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ResourceRecord.

        Relative name of the object affected by this record. Only applicable for `CNAME` records. Example: 'www'.

        :param name: The name of this ResourceRecord.
        :type name: str
        """

        self._name = name

    @property
    def rrdata(self):
        """Gets the rrdata of this ResourceRecord.

        Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).

        :return: The rrdata of this ResourceRecord.
        :rtype: str
        """
        return self._rrdata

    @rrdata.setter
    def rrdata(self, rrdata):
        """Sets the rrdata of this ResourceRecord.

        Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).

        :param rrdata: The rrdata of this ResourceRecord.
        :type rrdata: str
        """

        self._rrdata = rrdata

    @property
    def type(self):
        """Gets the type of this ResourceRecord.

        Resource record type. Example: `AAAA`.

        :return: The type of this ResourceRecord.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ResourceRecord.

        Resource record type. Example: `AAAA`.

        :param type: The type of this ResourceRecord.
        :type type: str
        """
        allowed_values = ["RECORD_TYPE_UNSPECIFIED", "A", "AAAA", "CNAME"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
