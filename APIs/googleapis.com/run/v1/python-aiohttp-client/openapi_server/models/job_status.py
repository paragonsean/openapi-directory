# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.execution_reference import ExecutionReference
from openapi_server.models.google_cloud_run_v1_condition import GoogleCloudRunV1Condition
from openapi_server import util


class JobStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conditions: List[GoogleCloudRunV1Condition]=None, execution_count: int=None, latest_created_execution: ExecutionReference=None, observed_generation: int=None):
        """JobStatus - a model defined in OpenAPI

        :param conditions: The conditions of this JobStatus.
        :param execution_count: The execution_count of this JobStatus.
        :param latest_created_execution: The latest_created_execution of this JobStatus.
        :param observed_generation: The observed_generation of this JobStatus.
        """
        self.openapi_types = {
            'conditions': List[GoogleCloudRunV1Condition],
            'execution_count': int,
            'latest_created_execution': ExecutionReference,
            'observed_generation': int
        }

        self.attribute_map = {
            'conditions': 'conditions',
            'execution_count': 'executionCount',
            'latest_created_execution': 'latestCreatedExecution',
            'observed_generation': 'observedGeneration'
        }

        self._conditions = conditions
        self._execution_count = execution_count
        self._latest_created_execution = latest_created_execution
        self._observed_generation = observed_generation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobStatus of this JobStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conditions(self):
        """Gets the conditions of this JobStatus.

        Conditions communicate information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world. Job-specific conditions include: * `Ready`: `True` when the job is ready to be executed.

        :return: The conditions of this JobStatus.
        :rtype: List[GoogleCloudRunV1Condition]
        """
        return self._conditions

    @conditions.setter
    def conditions(self, conditions):
        """Sets the conditions of this JobStatus.

        Conditions communicate information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world. Job-specific conditions include: * `Ready`: `True` when the job is ready to be executed.

        :param conditions: The conditions of this JobStatus.
        :type conditions: List[GoogleCloudRunV1Condition]
        """

        self._conditions = conditions

    @property
    def execution_count(self):
        """Gets the execution_count of this JobStatus.

        Number of executions created for this job.

        :return: The execution_count of this JobStatus.
        :rtype: int
        """
        return self._execution_count

    @execution_count.setter
    def execution_count(self, execution_count):
        """Sets the execution_count of this JobStatus.

        Number of executions created for this job.

        :param execution_count: The execution_count of this JobStatus.
        :type execution_count: int
        """

        self._execution_count = execution_count

    @property
    def latest_created_execution(self):
        """Gets the latest_created_execution of this JobStatus.


        :return: The latest_created_execution of this JobStatus.
        :rtype: ExecutionReference
        """
        return self._latest_created_execution

    @latest_created_execution.setter
    def latest_created_execution(self, latest_created_execution):
        """Sets the latest_created_execution of this JobStatus.


        :param latest_created_execution: The latest_created_execution of this JobStatus.
        :type latest_created_execution: ExecutionReference
        """

        self._latest_created_execution = latest_created_execution

    @property
    def observed_generation(self):
        """Gets the observed_generation of this JobStatus.

        The 'generation' of the job that was last processed by the controller.

        :return: The observed_generation of this JobStatus.
        :rtype: int
        """
        return self._observed_generation

    @observed_generation.setter
    def observed_generation(self, observed_generation):
        """Sets the observed_generation of this JobStatus.

        The 'generation' of the job that was last processed by the controller.

        :param observed_generation: The observed_generation of this JobStatus.
        :type observed_generation: int
        """

        self._observed_generation = observed_generation
