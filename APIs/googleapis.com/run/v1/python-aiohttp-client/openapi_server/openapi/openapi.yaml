openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "Deploy and manage user provided container images that scale automatically\
    \ based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving\
    \ API specification, while v2 is aligned with Google Cloud AIP-based API standards,\
    \ as described in https://google.aip.dev/."
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Run Admin API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://run.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: run
externalDocs:
  url: https://cloud.google.com/run/
servers:
- url: https://run.googleapis.com/
tags:
- name: namespaces
- name: projects
paths:
  /apis/domains.cloudrun.com/v1/{name}:
    delete:
      description: Delete a domain mapping.
      operationId: run_namespaces_domainmappings_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the domain mapping to delete. For Cloud\
          \ Run (fully managed), replace {namespace} with the project ID or number.\
          \ It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Cloud Run currently ignores this parameter.
        explode: true
        in: query
        name: apiVersion
        required: false
        schema:
          type: string
        style: form
      - description: "Indicates that the server should validate the request and populate\
          \ default values without persisting the request. Supported values: `all`"
        explode: true
        in: query
        name: dryRun
        required: false
        schema:
          type: string
        style: form
      - description: Cloud Run currently ignores this parameter.
        explode: true
        in: query
        name: kind
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies the propagation policy of delete. Cloud Run currently\
          \ ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/architecture/garbage-collection/\
          \ for more information."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
    get:
      description: Get information about a domain mapping.
      operationId: run_namespaces_domainmappings_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the domain mapping to retrieve. For Cloud\
          \ Run (fully managed), replace {namespace} with the project ID or number.\
          \ It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainMapping'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
  /apis/domains.cloudrun.com/v1/{parent}/authorizeddomains:
    get:
      description: List authorized domains.
      operationId: run_namespaces_authorizeddomains_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Name of the parent Project resource. Example: `projects/myproject`."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum results to return per page.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: Continuation token for fetching the next page of results.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuthorizedDomainsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
  /apis/domains.cloudrun.com/v1/{parent}/domainmappings:
    get:
      description: List all domain mappings.
      operationId: run_namespaces_domainmappings_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The namespace from which the domain mappings should\
          \ be listed. For Cloud Run (fully managed), replace {namespace} with the\
          \ project ID or number. It takes the form namespaces/{namespace}. For example:\
          \ namespaces/PROJECT_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Encoded string to continue paging.
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: Allows to filter resources based on a specific value for a field
          name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
          Not currently used by Cloud Run.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: Not currently used by Cloud Run.
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: "Allows to filter resources based on a label. Supported operations\
          \ are =, !=, exists, in, and notIn."
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The maximum number of records that should be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The baseline resource version from which the list or watch operation
          should start. Not currently used by Cloud Run.
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: Flag that indicates that the client expects to watch this resource
          as well. Not currently used by Cloud Run.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainMappingsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
    post:
      description: Create a new domain mapping.
      operationId: run_namespaces_domainmappings_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The namespace in which the domain mapping should be\
          \ created. For Cloud Run (fully managed), replace {namespace} with the project\
          \ ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicates that the server should validate the request and populate\
          \ default values without persisting the request. Supported values: `all`"
        explode: true
        in: query
        name: dryRun
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainMapping'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainMapping'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
      x-codegen-request-body-name: body
  /apis/run.googleapis.com/v1/{name}:
    delete:
      description: Delete a job.
      operationId: run_namespaces_jobs_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the job to delete. Replace {namespace}\
          \ with the project ID or number. It takes the form namespaces/{namespace}.\
          \ For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Cloud Run currently ignores this parameter.
        explode: true
        in: query
        name: apiVersion
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Cloud Run currently ignores this parameter.
        explode: true
        in: query
        name: kind
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specifies the propagation policy of delete. Cloud\
          \ Run currently ignores this setting, and deletes in the background. Please\
          \ see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/\
          \ for more information."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
    get:
      description: Get information about a task.
      operationId: run_namespaces_tasks_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the task to retrieve. Replace {namespace}\
          \ with the project ID or number. It takes the form namespaces/{namespace}.\
          \ For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
    put:
      description: "Replace a job. Only the spec and metadata labels and annotations\
        \ are modifiable. After the Replace request, Cloud Run will work to make the\
        \ 'status' match the requested 'spec'. May provide metadata.resourceVersion\
        \ to enforce update from last read for optimistic concurrency control."
      operationId: run_namespaces_jobs_replace_job
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the job being replaced. Replace {namespace}\
          \ with the project ID or number. It takes the form namespaces/{namespace}.\
          \ For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
      x-codegen-request-body-name: body
  /apis/run.googleapis.com/v1/{name}:cancel:
    post:
      description: Cancel an execution.
      operationId: run_namespaces_executions_cancel
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the execution to cancel. Replace {namespace}\
          \ with the project ID or number. It takes the form namespaces/{namespace}.\
          \ For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelExecutionRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
      x-codegen-request-body-name: body
  /apis/run.googleapis.com/v1/{name}:run:
    post:
      description: Trigger creation of a new execution of this job.
      operationId: run_namespaces_jobs_run
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the job to run. Replace {namespace} with\
          \ the project ID or number. It takes the form namespaces/{namespace}. For\
          \ example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunJobRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
      x-codegen-request-body-name: body
  /apis/run.googleapis.com/v1/{parent}/executions:
    get:
      description: List executions.
      operationId: run_namespaces_executions_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The namespace from which the executions should be\
          \ listed. Replace {namespace} with the project ID or number. It takes the\
          \ form namespaces/{namespace}. For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Optional encoded string to continue paging.
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Not supported by Cloud Run.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Not supported by Cloud Run.
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Allows to filter resources based on a label. Supported\
          \ operations are =, !=, exists, in, and notIn."
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The maximum number of the records that should be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Optional. Not supported by Cloud Run.
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Not supported by Cloud Run.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
  /apis/run.googleapis.com/v1/{parent}/jobs:
    get:
      description: List jobs.
      operationId: run_namespaces_jobs_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The namespace from which the jobs should be listed.\
          \ Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}.\
          \ For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Optional encoded string to continue paging.
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Not supported by Cloud Run.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Not supported by Cloud Run.
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Allows to filter resources based on a label. Supported\
          \ operations are =, !=, exists, in, and notIn."
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The maximum number of records that should be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Optional. Not supported by Cloud Run.
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Not supported by Cloud Run.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
    post:
      description: Create a job.
      operationId: run_namespaces_jobs_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The namespace in which the job should be created.\
          \ Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}.\
          \ For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
      x-codegen-request-body-name: body
  /apis/run.googleapis.com/v1/{parent}/tasks:
    get:
      description: List tasks.
      operationId: run_namespaces_tasks_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The namespace from which the tasks should be listed.\
          \ Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}.\
          \ For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Optional encoded string to continue paging.
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Not supported by Cloud Run.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Not supported by Cloud Run.
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Allows to filter resources based on a label. Supported\
          \ operations are =, !=, exists, in, and notIn. For example, to list all\
          \ tasks of execution \"foo\" in succeeded state: `run.googleapis.com/execution=foo,run.googleapis.com/runningState=Succeeded`.\
          \ Supported states are: * `Pending`: Initial state of all tasks. The task\
          \ has not yet started but eventually will. * `Running`: Container instances\
          \ for this task are running or will be running shortly. * `Succeeded`: No\
          \ more container instances to run for the task, and the last attempt succeeded.\
          \ * `Failed`: No more container instances to run for the task, and the last\
          \ attempt failed. This task has run out of retry attempts. * `Cancelled`:\
          \ Task was running but got stopped because its parent execution has been\
          \ aborted. * `Abandoned`: The task has not yet started and never will because\
          \ its parent execution has been aborted."
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The maximum number of records that should be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Optional. Not supported by Cloud Run.
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Not supported by Cloud Run.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTasksResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
  /apis/serving.knative.dev/v1/{name}:
    delete:
      description: Deletes the provided service. This will cause the Service to stop
        serving traffic and will delete all associated Revisions.
      operationId: run_namespaces_services_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The fully qualified name of the service to delete.\
          \ It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}`\
          \ (only when the `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}`\
          \ * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: apiVersion
        required: false
        schema:
          type: string
        style: form
      - description: "Indicates that the server should validate the request and populate\
          \ default values without persisting the request. Supported values: `all`"
        explode: true
        in: query
        name: dryRun
        required: false
        schema:
          type: string
        style: form
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: kind
        required: false
        schema:
          type: string
        style: form
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
    get:
      description: Gets information about a service.
      operationId: run_namespaces_services_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The fully qualified name of the service to retrieve.\
          \ It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}`\
          \ (only when the `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}`\
          \ * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
    put:
      description: "Replaces a service. Only the spec and metadata labels and annotations\
        \ are modifiable. After the Update request, Cloud Run will work to make the\
        \ 'status' match the requested 'spec'. May provide metadata.resourceVersion\
        \ to enforce update from last read for optimistic concurrency control."
      operationId: run_namespaces_services_replace_service
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The fully qualified name of the service to replace.\
          \ It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}`\
          \ (only when the `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}`\
          \ * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicates that the server should validate the request and populate\
          \ default values without persisting the request. Supported values: `all`"
        explode: true
        in: query
        name: dryRun
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
      x-codegen-request-body-name: body
  /apis/serving.knative.dev/v1/{parent}/configurations:
    get:
      description: List configurations.
      operationId: run_namespaces_configurations_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The namespace from which the configurations should be listed.\
          \ For Cloud Run, replace {namespace_id} with the project ID or number."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Encoded string to continue paging.
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: Not supported by Cloud Run.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: Not supported by Cloud Run.
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: "Allows to filter resources based on a label. Supported operations\
          \ are =, !=, exists, in, and notIn."
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The maximum number of the records that should be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Not supported by Cloud Run.
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: Not supported by Cloud Run.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfigurationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
  /apis/serving.knative.dev/v1/{parent}/revisions:
    get:
      description: List revisions.
      operationId: run_namespaces_revisions_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The namespace from which the revisions should be listed. For\
          \ Cloud Run (fully managed), replace {namespace} with the project ID or\
          \ number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Encoded string to continue paging.
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: Allows to filter resources based on a specific value for a field
          name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
          Not currently used by Cloud Run.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: Not currently used by Cloud Run.
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: "Allows to filter resources based on a label. Supported operations\
          \ are =, !=, exists, in, and notIn."
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The maximum number of records that should be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The baseline resource version from which the list or watch operation
          should start. Not currently used by Cloud Run.
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: Flag that indicates that the client expects to watch this resource
          as well. Not currently used by Cloud Run.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRevisionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
  /apis/serving.knative.dev/v1/{parent}/routes:
    get:
      description: List routes.
      operationId: run_namespaces_routes_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The namespace from which the routes should be listed. For Cloud\
          \ Run (fully managed), replace {namespace} with the project ID or number.\
          \ It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Encoded string to continue paging.
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: Allows to filter resources based on a specific value for a field
          name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
          Not currently used by Cloud Run.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: Not currently used by Cloud Run.
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: "Allows to filter resources based on a label. Supported operations\
          \ are =, !=, exists, in, and notIn."
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The maximum number of records that should be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The baseline resource version from which the list or watch operation
          should start. Not currently used by Cloud Run.
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: Flag that indicates that the client expects to watch this resource
          as well. Not currently used by Cloud Run.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
  /apis/serving.knative.dev/v1/{parent}/services:
    get:
      description: Lists services for the given project and region.
      operationId: run_namespaces_services_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent from where the resources should be listed.\
          \ In Cloud Run, it may be one of the following: * `{project_id_or_number}`\
          \ * `namespaces/{project_id_or_number}` * `namespaces/{project_id_or_number}/services`\
          \ * `projects/{project_id_or_number}/locations/{region}` * `projects/{project_id_or_number}/regions/{region}`"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Encoded string to continue paging.
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: "Allows to filter resources based on a label. Supported operations\
          \ are =, !=, exists, in, and notIn."
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of records that should be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
    post:
      description: "Creates a new Service. Service creation will trigger a new deployment.\
        \ Use GetService, and check service.status to determine if the Service is\
        \ ready."
      operationId: run_namespaces_services_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The resource's parent. In Cloud Run, it may be one\
          \ of the following: * `{project_id_or_number}` * `namespaces/{project_id_or_number}`\
          \ * `namespaces/{project_id_or_number}/services` * `projects/{project_id_or_number}/locations/{region}`\
          \ * `projects/{project_id_or_number}/regions/{region}`"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicates that the server should validate the request and populate\
          \ default values without persisting the request. Supported values: `all`"
        explode: true
        in: query
        name: dryRun
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
      x-codegen-request-body-name: body
  /v1/{name}:
    delete:
      description: Deletes the provided service. This will cause the Service to stop
        serving traffic and will delete all associated Revisions.
      operationId: run_projects_locations_services_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The fully qualified name of the service to delete.\
          \ It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}`\
          \ (only when the `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}`\
          \ * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: apiVersion
        required: false
        schema:
          type: string
        style: form
      - description: "Indicates that the server should validate the request and populate\
          \ default values without persisting the request. Supported values: `all`"
        explode: true
        in: query
        name: dryRun
        required: false
        schema:
          type: string
        style: form
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: kind
        required: false
        schema:
          type: string
        style: form
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Gets information about a service.
      operationId: run_projects_locations_services_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The fully qualified name of the service to retrieve.\
          \ It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}`\
          \ (only when the `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}`\
          \ * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: "Replaces a service. Only the spec and metadata labels and annotations\
        \ are modifiable. After the Update request, Cloud Run will work to make the\
        \ 'status' match the requested 'spec'. May provide metadata.resourceVersion\
        \ to enforce update from last read for optimistic concurrency control."
      operationId: run_projects_locations_services_replace_service
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The fully qualified name of the service to replace.\
          \ It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}`\
          \ (only when the `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}`\
          \ * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicates that the server should validate the request and populate\
          \ default values without persisting the request. Supported values: `all`"
        explode: true
        in: query
        name: dryRun
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: run_projects_locations_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The resource that owns the locations collection, if applicable."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "A filter to narrow down results to a preferred subset. The filtering\
          \ language accepts strings like `\"displayName=tokyo\"`, and is documented\
          \ in more detail in [AIP-160](https://google.aip.dev/160)."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of results to return. If not set, the service\
          \ selects a default."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A page token received from the `next_page_token` field in the
          response. Send that page token to receive the subsequent page.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1/{name}/operations:
    get:
      description: "Lists operations that match the specified filter in the request.\
        \ If the server doesn't support this method, it returns `UNIMPLEMENTED`."
      operationId: run_projects_locations_operations_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. To query for all of the operations for a project.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. A filter for matching the completed or in-progress\
          \ operations. The supported formats of *filter* are: To query for only completed\
          \ operations: done:true To query for only ongoing operations: done:false\
          \ Must be empty to query for all of the latest operations for the given\
          \ parent project."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of records that should be returned. Requested\
          \ page size cannot exceed 100. If not set or set to less than or equal to\
          \ 0, the default page size is 100. ."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Token identifying which result to start with, which is returned\
          \ by a previous list call."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1/{name}:wait:
    post:
      description: "Waits until the specified long-running operation is done or reaches\
        \ at most a specified timeout, returning the latest state. If the operation\
        \ is already done, the latest state is immediately returned. If the timeout\
        \ specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout\
        \ is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.\
        \ Note that this method is on a best-effort basis. It may return the latest\
        \ state before the specified timeout (including immediately), meaning even\
        \ an immediate response is no guarantee that the operation is done."
      operationId: run_projects_locations_operations_wait
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource to wait on.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningWaitOperationRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{parent}/authorizeddomains:
    get:
      description: List authorized domains.
      operationId: run_projects_locations_authorizeddomains_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Name of the parent Project resource. Example: `projects/myproject`."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum results to return per page.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: Continuation token for fetching the next page of results.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuthorizedDomainsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1/{parent}/configurations:
    get:
      description: List configurations.
      operationId: run_projects_locations_configurations_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The namespace from which the configurations should be listed.\
          \ For Cloud Run, replace {namespace_id} with the project ID or number."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Encoded string to continue paging.
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: Not supported by Cloud Run.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: Not supported by Cloud Run.
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: "Allows to filter resources based on a label. Supported operations\
          \ are =, !=, exists, in, and notIn."
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The maximum number of the records that should be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Not supported by Cloud Run.
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: Not supported by Cloud Run.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfigurationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1/{parent}/domainmappings:
    get:
      description: List all domain mappings.
      operationId: run_projects_locations_domainmappings_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The namespace from which the domain mappings should\
          \ be listed. For Cloud Run (fully managed), replace {namespace} with the\
          \ project ID or number. It takes the form namespaces/{namespace}. For example:\
          \ namespaces/PROJECT_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Encoded string to continue paging.
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: Allows to filter resources based on a specific value for a field
          name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
          Not currently used by Cloud Run.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: Not currently used by Cloud Run.
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: "Allows to filter resources based on a label. Supported operations\
          \ are =, !=, exists, in, and notIn."
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The maximum number of records that should be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The baseline resource version from which the list or watch operation
          should start. Not currently used by Cloud Run.
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: Flag that indicates that the client expects to watch this resource
          as well. Not currently used by Cloud Run.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainMappingsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a new domain mapping.
      operationId: run_projects_locations_domainmappings_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The namespace in which the domain mapping should be\
          \ created. For Cloud Run (fully managed), replace {namespace} with the project\
          \ ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicates that the server should validate the request and populate\
          \ default values without persisting the request. Supported values: `all`"
        explode: true
        in: query
        name: dryRun
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainMapping'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainMapping'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{parent}/revisions:
    get:
      description: List revisions.
      operationId: run_projects_locations_revisions_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The namespace from which the revisions should be listed. For\
          \ Cloud Run (fully managed), replace {namespace} with the project ID or\
          \ number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Encoded string to continue paging.
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: Allows to filter resources based on a specific value for a field
          name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
          Not currently used by Cloud Run.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: Not currently used by Cloud Run.
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: "Allows to filter resources based on a label. Supported operations\
          \ are =, !=, exists, in, and notIn."
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The maximum number of records that should be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The baseline resource version from which the list or watch operation
          should start. Not currently used by Cloud Run.
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: Flag that indicates that the client expects to watch this resource
          as well. Not currently used by Cloud Run.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRevisionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1/{parent}/routes:
    get:
      description: List routes.
      operationId: run_projects_locations_routes_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The namespace from which the routes should be listed. For Cloud\
          \ Run (fully managed), replace {namespace} with the project ID or number.\
          \ It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Encoded string to continue paging.
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: Allows to filter resources based on a specific value for a field
          name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
          Not currently used by Cloud Run.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: Not currently used by Cloud Run.
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: "Allows to filter resources based on a label. Supported operations\
          \ are =, !=, exists, in, and notIn."
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The maximum number of records that should be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The baseline resource version from which the list or watch operation
          should start. Not currently used by Cloud Run.
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: Flag that indicates that the client expects to watch this resource
          as well. Not currently used by Cloud Run.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1/{parent}/services:
    get:
      description: Lists services for the given project and region.
      operationId: run_projects_locations_services_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent from where the resources should be listed.\
          \ In Cloud Run, it may be one of the following: * `{project_id_or_number}`\
          \ * `namespaces/{project_id_or_number}` * `namespaces/{project_id_or_number}/services`\
          \ * `projects/{project_id_or_number}/locations/{region}` * `projects/{project_id_or_number}/regions/{region}`"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Encoded string to continue paging.
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: "Allows to filter resources based on a label. Supported operations\
          \ are =, !=, exists, in, and notIn."
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of records that should be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: "Not supported, and ignored by Cloud Run."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: "Creates a new Service. Service creation will trigger a new deployment.\
        \ Use GetService, and check service.status to determine if the Service is\
        \ ready."
      operationId: run_projects_locations_services_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The resource's parent. In Cloud Run, it may be one\
          \ of the following: * `{project_id_or_number}` * `namespaces/{project_id_or_number}`\
          \ * `namespaces/{project_id_or_number}/services` * `projects/{project_id_or_number}/locations/{region}`\
          \ * `projects/{project_id_or_number}/regions/{region}`"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicates that the server should validate the request and populate\
          \ default values without persisting the request. Supported values: `all`"
        explode: true
        in: query
        name: dryRun
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{resource}:getIamPolicy:
    get:
      description: Gets the IAM Access Control policy currently in effect for the
        given Cloud Run service. This result does not include any inherited policies.
      operationId: run_projects_locations_services_get_iam_policy
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "REQUIRED: The resource for which the policy is being requested.\
          \ See [Resource names](https://cloud.google.com/apis/design/resource_names)\
          \ for the appropriate value for this field."
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. The maximum policy version that will be used to format\
          \ the policy. Valid values are 0, 1, and 3. Requests specifying an invalid\
          \ value will be rejected. Requests for policies with any conditional role\
          \ bindings must specify version 3. Policies with no conditional role bindings\
          \ may specify any valid value or leave the field unset. The policy in the\
          \ response might use the policy version that you specified, or it might\
          \ use a lower policy version. For example, if you specify version 3, but\
          \ the policy has no conditional role bindings, the response uses version\
          \ 1. To learn which resources support conditions in their IAM policies,\
          \ see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        explode: true
        in: query
        name: options.requestedPolicyVersion
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1/{resource}:setIamPolicy:
    post:
      description: Sets the IAM Access control policy for the specified Service. Overwrites
        any existing policy.
      operationId: run_projects_locations_services_set_iam_policy
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "REQUIRED: The resource for which the policy is being specified.\
          \ See [Resource names](https://cloud.google.com/apis/design/resource_names)\
          \ for the appropriate value for this field."
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{resource}:testIamPermissions:
    post:
      description: Returns permissions that a caller has on the specified Project.
        There are no permissions required for making this API call.
      operationId: run_projects_locations_services_test_iam_permissions
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "REQUIRED: The resource for which the policy detail is being\
          \ requested. See [Resource names](https://cloud.google.com/apis/design/resource_names)\
          \ for the appropriate value for this field."
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    Addressable:
      description: Information for connecting over HTTP(s).
      example:
        url: url
      properties:
        url:
          title: url
          type: string
      title: Addressable
      type: object
    AuditConfig:
      description: "Specifies the audit configuration for a service. The configuration\
        \ determines which permission types are logged, and what identities, if any,\
        \ are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.\
        \ If there are AuditConfigs for both `allServices` and a specific service,\
        \ the union of the two AuditConfigs is used for that service: the log_types\
        \ specified in each AuditConfig are enabled, and the exempted_members in each\
        \ AuditLogConfig are exempted. Example Policy with multiple AuditConfigs:\
        \ { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\"\
        : [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\"\
        \ ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" }\
        \ ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\"\
        : [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\"\
        : [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy\
        \ enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com`\
        \ from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging."
      example:
        auditLogConfigs:
        - logType: LOG_TYPE_UNSPECIFIED
          exemptedMembers:
          - exemptedMembers
          - exemptedMembers
        - logType: LOG_TYPE_UNSPECIFIED
          exemptedMembers:
          - exemptedMembers
          - exemptedMembers
        service: service
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          title: auditLogConfigs
          type: array
        service:
          description: "Specifies a service that will be enabled for audit logging.\
            \ For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices`\
            \ is a special value that covers all services."
          title: service
          type: string
      title: AuditConfig
      type: object
    AuditLogConfig:
      description: "Provides the configuration for logging a type of permissions.\
        \ Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\"\
        : [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This\
        \ enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com\
        \ from DATA_READ logging."
      example:
        logType: LOG_TYPE_UNSPECIFIED
        exemptedMembers:
        - exemptedMembers
        - exemptedMembers
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this
            type of permission. Follows the same format of Binding.members.
          items:
            type: string
          title: exemptedMembers
          type: array
        logType:
          description: The log type that this config enables.
          enum:
          - LOG_TYPE_UNSPECIFIED
          - ADMIN_READ
          - DATA_WRITE
          - DATA_READ
          title: logType
          type: string
      title: AuditLogConfig
      type: object
    AuthorizedDomain:
      description: "A domain that a user has been authorized to administer. To authorize\
        \ use of a domain, verify ownership via [Search Console](https://search.google.com/search-console/welcome)."
      example:
        name: name
        id: id
      properties:
        id:
          description: "Relative name of the domain authorized for use. Example: `example.com`."
          title: id
          type: string
        name:
          deprecated: true
          description: "Deprecated Read only. Full path to the `AuthorizedDomain`\
            \ resource in the API. Example: `projects/myproject/authorizedDomains/example.com`."
          title: name
          type: string
      title: AuthorizedDomain
      type: object
    Binding:
      description: "Associates `members`, or principals, with a `role`."
      example:
        condition:
          expression: expression
          description: description
          location: location
          title: title
        role: role
        members:
        - members
        - members
      properties:
        condition:
          $ref: '#/components/schemas/Expr'
        members:
          description: "Specifies the principals requesting access for a Google Cloud\
            \ resource. `members` can have the following values: * `allUsers`: A special\
            \ identifier that represents anyone who is on the internet; with or without\
            \ a Google account. * `allAuthenticatedUsers`: A special identifier that\
            \ represents anyone who is authenticated with a Google account or a service\
            \ account. Does not include identities that come from external identity\
            \ providers (IdPs) through identity federation. * `user:{emailid}`: An\
            \ email address that represents a specific Google account. For example,\
            \ `alice@example.com` . * `serviceAccount:{emailid}`: An email address\
            \ that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`.\
            \ * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:\
            \ An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).\
            \ For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`.\
            \ * `group:{emailid}`: An email address that represents a Google group.\
            \ For example, `admins@example.com`. * `domain:{domain}`: The G Suite\
            \ domain (primary) that represents all the users of that domain. For example,\
            \ `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:\
            \ A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:\
            \ All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:\
            \ All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:\
            \ All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:\
            \ A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:\
            \ A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:\
            \ All identities in a workload identity pool with a certain attribute.\
            \ * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:\
            \ All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`:\
            \ An email address (plus unique identifier) representing a user that has\
            \ been recently deleted. For example, `alice@example.com?uid=123456789012345678901`.\
            \ If the user is recovered, this value reverts to `user:{emailid}` and\
            \ the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`:\
            \ An email address (plus unique identifier) representing a service account\
            \ that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\
            \ If the service account is undeleted, this value reverts to `serviceAccount:{emailid}`\
            \ and the undeleted service account retains the role in the binding. *\
            \ `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\
            \ identifier) representing a Google group that has been recently deleted.\
            \ For example, `admins@example.com?uid=123456789012345678901`. If the\
            \ group is recovered, this value reverts to `group:{emailid}` and the\
            \ recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:\
            \ Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`."
          items:
            type: string
          title: members
          type: array
        role:
          description: "Role that is assigned to the list of `members`, or principals.\
            \ For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an\
            \ overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview).\
            \ For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles)."
          title: role
          type: string
      title: Binding
      type: object
    CSIVolumeSource:
      description: Storage volume source using the Container Storage Interface.
      example:
        driver: driver
        readOnly: true
        volumeAttributes:
          key: volumeAttributes
      properties:
        driver:
          description: "name of the CSI driver for the requested storage system. Cloud\
            \ Run supports the following drivers: * gcsfuse.run.googleapis.com : Mount\
            \ a Cloud Storage Bucket as a volume."
          title: driver
          type: string
        readOnly:
          description: "If true, mount the volume as read only. Defaults to false."
          title: readOnly
          type: boolean
        volumeAttributes:
          additionalProperties:
            type: string
          description: "stores driver specific attributes. For Google Cloud Storage\
            \ volumes, the following attributes are supported: * bucketName: the name\
            \ of the Cloud Storage bucket to mount. The Cloud Run Service identity\
            \ must have access to this bucket."
          title: volumeAttributes
          type: object
      title: CSIVolumeSource
      type: object
    CancelExecutionRequest:
      description: Request message for cancelling an execution.
      properties: {}
      type: object
    ConfigMapEnvSource:
      description: Not supported by Cloud Run. ConfigMapEnvSource selects a ConfigMap
        to populate the environment variables with. The contents of the target ConfigMap's
        Data field will represent the key-value pairs as environment variables.
      example:
        localObjectReference:
          name: name
        name: name
        optional: true
      properties:
        localObjectReference:
          $ref: '#/components/schemas/LocalObjectReference'
        name:
          description: The ConfigMap to select from.
          title: name
          type: string
        optional:
          description: Specify whether the ConfigMap must be defined.
          title: optional
          type: boolean
      title: ConfigMapEnvSource
      type: object
    ConfigMapKeySelector:
      description: Not supported by Cloud Run.
      example:
        localObjectReference:
          name: name
        name: name
        optional: true
        key: key
      properties:
        key:
          description: Required. Not supported by Cloud Run.
          title: key
          type: string
        localObjectReference:
          $ref: '#/components/schemas/LocalObjectReference'
        name:
          description: Required. Not supported by Cloud Run.
          title: name
          type: string
        optional:
          description: Not supported by Cloud Run.
          title: optional
          type: boolean
      title: ConfigMapKeySelector
      type: object
    ConfigMapVolumeSource:
      description: "Not supported by Cloud Run. Adapts a ConfigMap into a volume.\
        \ The contents of the target ConfigMap's Data field will be presented in a\
        \ volume as files using the keys in the Data field as the file names, unless\
        \ the items element is populated with specific mappings of keys to paths."
      example:
        defaultMode: 1
        name: name
        optional: true
        items:
        - mode: 1
          path: path
          key: key
        - mode: 1
          path: path
          key: key
      properties:
        defaultMode:
          description: "(Optional) Integer representation of mode bits to use on created\
            \ files by default. Must be a value between 01 and 0777 (octal). If 0\
            \ or not set, it will default to 0644. Directories within the path are\
            \ not affected by this setting. Notes * Internally, a umask of 0222 will\
            \ be applied to any non-zero value. * This is an integer representation\
            \ of the mode bits. So, the octal integer value should look exactly as\
            \ the chmod numeric notation with a leading zero. Some examples: for chmod\
            \ 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r),\
            \ set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx),\
            \ set to 0755 (octal) or 493 (base-10). * This might be in conflict with\
            \ other options that affect the file mode, like fsGroup, and the result\
            \ can be other mode bits set."
          format: int32
          title: defaultMode
          type: integer
        items:
          description: "(Optional) If unspecified, each key-value pair in the Data\
            \ field of the referenced Secret will be projected into the volume as\
            \ a file whose name is the key and content is the value. If specified,\
            \ the listed keys will be projected into the specified paths, and unlisted\
            \ keys will not be present. If a key is specified that is not present\
            \ in the Secret, the volume setup will error unless it is marked optional."
          items:
            $ref: '#/components/schemas/KeyToPath'
          title: items
          type: array
        name:
          description: Name of the config.
          title: name
          type: string
        optional:
          description: (Optional) Specify whether the Secret or its keys must be defined.
          title: optional
          type: boolean
      title: ConfigMapVolumeSource
      type: object
    Configuration:
      description: "Configuration represents the \"floating HEAD\" of a linear history\
        \ of Revisions, and optionally how the containers those revisions reference\
        \ are built. Users create new Revisions by updating the Configuration's spec.\
        \ The \"latest created\" revision's name is available under status, as is\
        \ the \"latest ready\" revision's name."
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          template:
            metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations:
                key: annotations
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels:
                key: labels
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            spec:
              containerConcurrency: 0
              enableServiceLinks: true
              serviceAccountName: serviceAccountName
              imagePullSecrets:
              - name: name
              - name: name
              volumes:
              - configMap:
                  defaultMode: 1
                  name: name
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                csi:
                  driver: driver
                  readOnly: true
                  volumeAttributes:
                    key: volumeAttributes
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                secret:
                  secretName: secretName
                  defaultMode: 6
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
              - configMap:
                  defaultMode: 1
                  name: name
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                csi:
                  driver: driver
                  readOnly: true
                  volumeAttributes:
                    key: volumeAttributes
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                secret:
                  secretName: secretName
                  defaultMode: 6
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
              timeoutSeconds: 6
              containers:
              - image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests:
                    key: requests
                  limits:
                    key: limits
                securityContext:
                  runAsUser: 7
                startupProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                ports:
                - protocol: protocol
                  name: name
                  containerPort: 4
                - protocol: protocol
                  name: name
                  containerPort: 4
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                name: name
                readinessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                envFrom:
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
              - image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests:
                    key: requests
                  limits:
                    key: limits
                securityContext:
                  runAsUser: 7
                startupProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                ports:
                - protocol: protocol
                  name: name
                  containerPort: 4
                - protocol: protocol
                  name: name
                  containerPort: 4
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                name: name
                readinessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                envFrom:
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
        status:
          latestCreatedRevisionName: latestCreatedRevisionName
          conditions:
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          latestReadyRevisionName: latestReadyRevisionName
          observedGeneration: 0
      properties:
        apiVersion:
          description: The API version for this call such as "serving.knative.dev/v1".
          title: apiVersion
          type: string
        kind:
          description: "The kind of resource, in this case always \"Configuration\"\
            ."
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/ConfigurationSpec'
        status:
          $ref: '#/components/schemas/ConfigurationStatus'
      title: Configuration
      type: object
    ConfigurationSpec:
      description: ConfigurationSpec holds the desired state of the Configuration
        (from the client).
      example:
        template:
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          spec:
            containerConcurrency: 0
            enableServiceLinks: true
            serviceAccountName: serviceAccountName
            imagePullSecrets:
            - name: name
            - name: name
            volumes:
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            timeoutSeconds: 6
            containers:
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
      properties:
        template:
          $ref: '#/components/schemas/RevisionTemplate'
      title: ConfigurationSpec
      type: object
    ConfigurationStatus:
      description: ConfigurationStatus communicates the observed state of the Configuration
        (from the controller).
      example:
        latestCreatedRevisionName: latestCreatedRevisionName
        conditions:
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        latestReadyRevisionName: latestReadyRevisionName
        observedGeneration: 0
      properties:
        conditions:
          description: Conditions communicate information about ongoing/complete reconciliation
            processes that bring the "spec" inline with the observed state of the
            world.
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          title: conditions
          type: array
        latestCreatedRevisionName:
          description: "LatestCreatedRevisionName is the last revision that was created\
            \ from this Configuration. It might not be ready yet, so for the latest\
            \ ready revision, use LatestReadyRevisionName."
          title: latestCreatedRevisionName
          type: string
        latestReadyRevisionName:
          description: LatestReadyRevisionName holds the name of the latest Revision
            stamped out from this Configuration that has had its "Ready" condition
            become "True".
          title: latestReadyRevisionName
          type: string
        observedGeneration:
          description: "ObservedGeneration is the 'Generation' of the Configuration\
            \ that was last processed by the controller. The observed generation is\
            \ updated even if the controller failed to process the spec and create\
            \ the Revision. Clients polling for completed reconciliation should poll\
            \ until observedGeneration = metadata.generation, and the Ready condition's\
            \ status is True or False."
          format: int32
          title: observedGeneration
          type: integer
      title: ConfigurationStatus
      type: object
    Container:
      description: "A single application container. This specifies both the container\
        \ to run, the command to run in the container and the arguments to supply\
        \ to it. Note that additional arguments may be supplied by the system to the\
        \ container at runtime."
      example:
        image: image
        imagePullPolicy: imagePullPolicy
        livenessProbe:
          failureThreshold: 1
          periodSeconds: 7
          tcpSocket:
            port: 3
            host: host
          timeoutSeconds: 2
          successThreshold: 9
          initialDelaySeconds: 2
          exec:
            command:
            - command
            - command
          grpc:
            port: 5
            service: service
          httpGet:
            path: path
            scheme: scheme
            port: 5
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        terminationMessagePolicy: terminationMessagePolicy
        terminationMessagePath: terminationMessagePath
        workingDir: workingDir
        resources:
          requests:
            key: requests
          limits:
            key: limits
        securityContext:
          runAsUser: 7
        startupProbe:
          failureThreshold: 1
          periodSeconds: 7
          tcpSocket:
            port: 3
            host: host
          timeoutSeconds: 2
          successThreshold: 9
          initialDelaySeconds: 2
          exec:
            command:
            - command
            - command
          grpc:
            port: 5
            service: service
          httpGet:
            path: path
            scheme: scheme
            port: 5
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        env:
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              localObjectReference:
                name: name
              name: name
              optional: true
              key: key
            configMapKeyRef:
              localObjectReference:
                name: name
              name: name
              optional: true
              key: key
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              localObjectReference:
                name: name
              name: name
              optional: true
              key: key
            configMapKeyRef:
              localObjectReference:
                name: name
              name: name
              optional: true
              key: key
        ports:
        - protocol: protocol
          name: name
          containerPort: 4
        - protocol: protocol
          name: name
          containerPort: 4
        command:
        - command
        - command
        volumeMounts:
        - mountPath: mountPath
          name: name
          readOnly: true
          subPath: subPath
        - mountPath: mountPath
          name: name
          readOnly: true
          subPath: subPath
        args:
        - args
        - args
        name: name
        readinessProbe:
          failureThreshold: 1
          periodSeconds: 7
          tcpSocket:
            port: 3
            host: host
          timeoutSeconds: 2
          successThreshold: 9
          initialDelaySeconds: 2
          exec:
            command:
            - command
            - command
          grpc:
            port: 5
            service: service
          httpGet:
            path: path
            scheme: scheme
            port: 5
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        envFrom:
        - configMapRef:
            localObjectReference:
              name: name
            name: name
            optional: true
          prefix: prefix
          secretRef:
            localObjectReference:
              name: name
            name: name
            optional: true
        - configMapRef:
            localObjectReference:
              name: name
            name: name
            optional: true
          prefix: prefix
          secretRef:
            localObjectReference:
              name: name
            name: name
            optional: true
      properties:
        args:
          description: Arguments to the entrypoint. The docker image's CMD is used
            if this is not provided. Variable references are not supported in Cloud
            Run.
          items:
            type: string
          title: args
          type: array
        command:
          description: Entrypoint array. Not executed within a shell. The docker image's
            ENTRYPOINT is used if this is not provided. Variable references are not
            supported in Cloud Run.
          items:
            type: string
          title: command
          type: array
        env:
          description: "List of environment variables to set in the container. EnvVar\
            \ with duplicate names are generally allowed; if referencing a secret,\
            \ the name must be unique for the container. For non-secret EnvVar names,\
            \ the Container will only get the last-declared one."
          items:
            $ref: '#/components/schemas/EnvVar'
          title: env
          type: array
        envFrom:
          description: Not supported by Cloud Run.
          items:
            $ref: '#/components/schemas/EnvFromSource'
          title: envFrom
          type: array
        image:
          description: "Required. Name of the container image in Dockerhub, Google\
            \ Artifact Registry, or Google Container Registry. If the host is not\
            \ provided, Dockerhub is assumed."
          title: image
          type: string
        imagePullPolicy:
          description: "Image pull policy. One of Always, Never, IfNotPresent. Defaults\
            \ to Always if :latest tag is specified, or IfNotPresent otherwise."
          title: imagePullPolicy
          type: string
        livenessProbe:
          $ref: '#/components/schemas/Probe'
        name:
          description: Name of the container specified as a DNS_LABEL (RFC 1123).
          title: name
          type: string
        ports:
          description: "List of ports to expose from the container. Only a single\
            \ port can be specified. The specified ports must be listening on all\
            \ interfaces (0.0.0.0) within the container to be accessible. If omitted,\
            \ a port number will be chosen and passed to the container through the\
            \ PORT environment variable for the container to listen on."
          items:
            $ref: '#/components/schemas/ContainerPort'
          title: ports
          type: array
        readinessProbe:
          $ref: '#/components/schemas/Probe'
        resources:
          $ref: '#/components/schemas/ResourceRequirements'
        securityContext:
          $ref: '#/components/schemas/SecurityContext'
        startupProbe:
          $ref: '#/components/schemas/Probe'
        terminationMessagePath:
          description: "Path at which the file to which the container's termination\
            \ message will be written is mounted into the container's filesystem.\
            \ Message written is intended to be brief final status, such as an assertion\
            \ failure message. Will be truncated by the node if greater than 4096\
            \ bytes. The total message length across all containers will be limited\
            \ to 12kb. Defaults to /dev/termination-log."
          title: terminationMessagePath
          type: string
        terminationMessagePolicy:
          description: "Indicate how the termination message should be populated.\
            \ File will use the contents of terminationMessagePath to populate the\
            \ container status message on both success and failure. FallbackToLogsOnError\
            \ will use the last chunk of container log output if the termination message\
            \ file is empty and the container exited with an error. The log output\
            \ is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults\
            \ to File. Cannot be updated."
          title: terminationMessagePolicy
          type: string
        volumeMounts:
          description: Volume to mount into the container's filesystem. Only supports
            SecretVolumeSources. Pod volumes to mount into the container's filesystem.
          items:
            $ref: '#/components/schemas/VolumeMount'
          title: volumeMounts
          type: array
        workingDir:
          description: "Container's working directory. If not specified, the container\
            \ runtime's default will be used, which might be configured in the container\
            \ image."
          title: workingDir
          type: string
      title: Container
      type: object
    ContainerOverride:
      description: Per container override specification.
      example:
        args:
        - args
        - args
        name: name
        env:
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              localObjectReference:
                name: name
              name: name
              optional: true
              key: key
            configMapKeyRef:
              localObjectReference:
                name: name
              name: name
              optional: true
              key: key
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              localObjectReference:
                name: name
              name: name
              optional: true
              key: key
            configMapKeyRef:
              localObjectReference:
                name: name
              name: name
              optional: true
              key: key
        clearArgs: true
      properties:
        args:
          description: Arguments to the entrypoint. The specified arguments replace
            and override any existing entrypoint arguments. Must be empty if `clear_args`
            is set to true.
          items:
            type: string
          title: args
          type: array
        clearArgs:
          description: Optional. Set to True to clear all existing arguments.
          title: clearArgs
          type: boolean
        env:
          description: "List of environment variables to set in the container. All\
            \ specified environment variables are merged with existing environment\
            \ variables. When the specified environment variables exist, these values\
            \ override any existing values."
          items:
            $ref: '#/components/schemas/EnvVar'
          title: env
          type: array
        name:
          description: The name of the container specified as a DNS_LABEL.
          title: name
          type: string
      title: ContainerOverride
      type: object
    ContainerPort:
      description: ContainerPort represents a network port in a single container.
      example:
        protocol: protocol
        name: name
        containerPort: 4
      properties:
        containerPort:
          description: "Port number the container listens on. If present, this must\
            \ be a valid port number, 0 < x < 65536. If not present, it will default\
            \ to port 8080. For more information, see https://cloud.google.com/run/docs/container-contract#port"
          format: int32
          title: containerPort
          type: integer
        name:
          description: "If specified, used to specify which protocol to use. Allowed\
            \ values are \"http1\" and \"h2c\"."
          title: name
          type: string
        protocol:
          description: Protocol for port. Must be "TCP". Defaults to "TCP".
          title: protocol
          type: string
      title: ContainerPort
      type: object
    DomainMapping:
      description: "Resource to hold the state and status of a user's domain mapping.\
        \ NOTE: This resource is currently in Beta."
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          certificateMode: CERTIFICATE_MODE_UNSPECIFIED
          forceOverride: true
          routeName: routeName
        status:
          mappedRouteName: mappedRouteName
          resourceRecords:
          - rrdata: rrdata
            name: name
            type: RECORD_TYPE_UNSPECIFIED
          - rrdata: rrdata
            name: name
            type: RECORD_TYPE_UNSPECIFIED
          conditions:
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          observedGeneration: 1
          url: url
      properties:
        apiVersion:
          description: The API version for this call such as "domains.cloudrun.com/v1".
          title: apiVersion
          type: string
        kind:
          description: "The kind of resource, in this case \"DomainMapping\"."
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/DomainMappingSpec'
        status:
          $ref: '#/components/schemas/DomainMappingStatus'
      title: DomainMapping
      type: object
    DomainMappingSpec:
      description: The desired state of the Domain Mapping.
      example:
        certificateMode: CERTIFICATE_MODE_UNSPECIFIED
        forceOverride: true
        routeName: routeName
      properties:
        certificateMode:
          description: The mode of the certificate.
          enum:
          - CERTIFICATE_MODE_UNSPECIFIED
          - NONE
          - AUTOMATIC
          title: certificateMode
          type: string
        forceOverride:
          description: "If set, the mapping will override any mapping set before this\
            \ spec was set. It is recommended that the user leaves this empty to receive\
            \ an error warning about a potential conflict and only set it once the\
            \ respective UI has given such a warning."
          title: forceOverride
          type: boolean
        routeName:
          description: The name of the Knative Route that this DomainMapping applies
            to. The route must exist.
          title: routeName
          type: string
      title: DomainMappingSpec
      type: object
    DomainMappingStatus:
      description: The current state of the Domain Mapping.
      example:
        mappedRouteName: mappedRouteName
        resourceRecords:
        - rrdata: rrdata
          name: name
          type: RECORD_TYPE_UNSPECIFIED
        - rrdata: rrdata
          name: name
          type: RECORD_TYPE_UNSPECIFIED
        conditions:
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        observedGeneration: 1
        url: url
      properties:
        conditions:
          description: "Array of observed DomainMappingConditions, indicating the\
            \ current state of the DomainMapping."
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          title: conditions
          type: array
        mappedRouteName:
          description: The name of the route that the mapping currently points to.
          title: mappedRouteName
          type: string
        observedGeneration:
          description: ObservedGeneration is the 'Generation' of the DomainMapping
            that was last processed by the controller. Clients polling for completed
            reconciliation should poll until observedGeneration = metadata.generation
            and the Ready condition's status is True or False.
          format: int32
          title: observedGeneration
          type: integer
        resourceRecords:
          description: The resource records required to configure this domain mapping.
            These records must be added to the domain's DNS configuration in order
            to serve the application via this domain mapping.
          items:
            $ref: '#/components/schemas/ResourceRecord'
          title: resourceRecords
          type: array
        url:
          description: Optional. Not supported by Cloud Run.
          title: url
          type: string
      title: DomainMappingStatus
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    EmptyDirVolumeSource:
      description: "In memory (tmpfs) ephemeral storage. It is ephemeral in the sense\
        \ that when the sandbox is taken down, the data is destroyed with it (it does\
        \ not persist across sandbox runs)."
      example:
        sizeLimit: sizeLimit
        medium: medium
      properties:
        medium:
          description: "The medium on which the data is stored. The default is \"\"\
            \ which means to use the node's default medium. Must be an empty string\
            \ (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
          title: medium
          type: string
        sizeLimit:
          description: "Limit on the storage usable by this EmptyDir volume. The size\
            \ limit is also applicable for memory medium. The maximum usage on memory\
            \ medium EmptyDir would be the minimum value between the SizeLimit specified\
            \ here and the sum of memory limits of all containers. The default is\
            \ nil which means that the limit is undefined. More info: https://cloud.google.com/run/docs/configuring/in-memory-volumes#configure-volume.\
            \ Info in Kubernetes: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir"
          title: sizeLimit
          type: string
      title: EmptyDirVolumeSource
      type: object
    EnvFromSource:
      description: Not supported by Cloud Run. EnvFromSource represents the source
        of a set of ConfigMaps
      example:
        configMapRef:
          localObjectReference:
            name: name
          name: name
          optional: true
        prefix: prefix
        secretRef:
          localObjectReference:
            name: name
          name: name
          optional: true
      properties:
        configMapRef:
          $ref: '#/components/schemas/ConfigMapEnvSource'
        prefix:
          description: An optional identifier to prepend to each key in the ConfigMap.
            Must be a C_IDENTIFIER.
          title: prefix
          type: string
        secretRef:
          $ref: '#/components/schemas/SecretEnvSource'
      title: EnvFromSource
      type: object
    EnvVar:
      description: EnvVar represents an environment variable present in a Container.
      example:
        name: name
        value: value
        valueFrom:
          secretKeyRef:
            localObjectReference:
              name: name
            name: name
            optional: true
            key: key
          configMapKeyRef:
            localObjectReference:
              name: name
            name: name
            optional: true
            key: key
      properties:
        name:
          description: Required. Name of the environment variable.
          title: name
          type: string
        value:
          description: Value of the environment variable. Defaults to "". Variable
            references are not supported in Cloud Run.
          title: value
          type: string
        valueFrom:
          $ref: '#/components/schemas/EnvVarSource'
      title: EnvVar
      type: object
    EnvVarSource:
      description: EnvVarSource represents a source for the value of an EnvVar.
      example:
        secretKeyRef:
          localObjectReference:
            name: name
          name: name
          optional: true
          key: key
        configMapKeyRef:
          localObjectReference:
            name: name
          name: name
          optional: true
          key: key
      properties:
        configMapKeyRef:
          $ref: '#/components/schemas/ConfigMapKeySelector'
        secretKeyRef:
          $ref: '#/components/schemas/SecretKeySelector'
      title: EnvVarSource
      type: object
    ExecAction:
      description: Not supported by Cloud Run. ExecAction describes a "run in container"
        action.
      example:
        command:
        - command
        - command
      properties:
        command:
          description: "Command is the command line to execute inside the container,\
            \ the working directory for the command is root ('/') in the container's\
            \ filesystem. The command is simply exec'd, it is not run inside a shell,\
            \ so traditional shell instructions ('|', etc) won't work. To use a shell,\
            \ you need to explicitly call out to that shell. Exit status of 0 is treated\
            \ as live/healthy and non-zero is unhealthy."
          items:
            type: string
          title: command
          type: array
      title: ExecAction
      type: object
    Execution:
      description: Execution represents the configuration of a single execution. An
        execution is an immutable resource that references a container image which
        is run to completion.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          template:
            spec:
              maxRetries: 1
              serviceAccountName: serviceAccountName
              volumes:
              - configMap:
                  defaultMode: 1
                  name: name
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                csi:
                  driver: driver
                  readOnly: true
                  volumeAttributes:
                    key: volumeAttributes
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                secret:
                  secretName: secretName
                  defaultMode: 6
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
              - configMap:
                  defaultMode: 1
                  name: name
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                csi:
                  driver: driver
                  readOnly: true
                  volumeAttributes:
                    key: volumeAttributes
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                secret:
                  secretName: secretName
                  defaultMode: 6
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
              timeoutSeconds: timeoutSeconds
              containers:
              - image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests:
                    key: requests
                  limits:
                    key: limits
                securityContext:
                  runAsUser: 7
                startupProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                ports:
                - protocol: protocol
                  name: name
                  containerPort: 4
                - protocol: protocol
                  name: name
                  containerPort: 4
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                name: name
                readinessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                envFrom:
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
              - image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests:
                    key: requests
                  limits:
                    key: limits
                securityContext:
                  runAsUser: 7
                startupProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                ports:
                - protocol: protocol
                  name: name
                  containerPort: 4
                - protocol: protocol
                  name: name
                  containerPort: 4
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                name: name
                readinessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                envFrom:
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
          taskCount: 6
          parallelism: 0
        status:
          completionTime: completionTime
          failedCount: 1
          cancelledCount: 7
          retriedCount: 5
          runningCount: 9
          startTime: startTime
          succeededCount: 9
          conditions:
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          observedGeneration: 4
          logUri: logUri
      properties:
        apiVersion:
          description: "Optional. APIVersion defines the versioned schema of this\
            \ representation of an object. Servers should convert recognized schemas\
            \ to the latest internal value, and may reject unrecognized values."
          title: apiVersion
          type: string
        kind:
          description: Optional. Kind is a string value representing the REST resource
            this object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase.
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/ExecutionSpec'
        status:
          $ref: '#/components/schemas/ExecutionStatus'
      title: Execution
      type: object
    ExecutionReference:
      description: Reference to an Execution. Use /Executions.GetExecution with the
        given name to get full execution including the latest status.
      example:
        completionTimestamp: completionTimestamp
        creationTimestamp: creationTimestamp
        name: name
      properties:
        completionTimestamp:
          description: Optional. Completion timestamp of the execution.
          format: google-datetime
          title: completionTimestamp
          type: string
        creationTimestamp:
          description: Optional. Creation timestamp of the execution.
          format: google-datetime
          title: creationTimestamp
          type: string
        name:
          description: Optional. Name of the execution.
          title: name
          type: string
      title: ExecutionReference
      type: object
    ExecutionSpec:
      description: ExecutionSpec describes how the execution will look.
      example:
        template:
          spec:
            maxRetries: 1
            serviceAccountName: serviceAccountName
            volumes:
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            timeoutSeconds: timeoutSeconds
            containers:
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
        taskCount: 6
        parallelism: 0
      properties:
        parallelism:
          description: "Optional. Specifies the maximum desired number of tasks the\
            \ execution should run at given time. Must be <= task_count. When the\
            \ job is run, if this field is 0 or unset, the maximum possible value\
            \ will be used for that execution. The actual number of tasks running\
            \ in steady state will be less than this number when there are fewer tasks\
            \ waiting to be completed, i.e. when the work left to do is less than\
            \ max parallelism."
          format: int32
          title: parallelism
          type: integer
        taskCount:
          description: Optional. Specifies the desired number of tasks the execution
            should run. Setting to 1 means that parallelism is limited to 1 and the
            success of that task signals the success of the execution. Defaults to
            1.
          format: int32
          title: taskCount
          type: integer
        template:
          $ref: '#/components/schemas/TaskTemplateSpec'
      title: ExecutionSpec
      type: object
    ExecutionStatus:
      description: ExecutionStatus represents the current state of an Execution.
      example:
        completionTime: completionTime
        failedCount: 1
        cancelledCount: 7
        retriedCount: 5
        runningCount: 9
        startTime: startTime
        succeededCount: 9
        conditions:
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        observedGeneration: 4
        logUri: logUri
      properties:
        cancelledCount:
          description: Optional. The number of tasks which reached phase Cancelled.
          format: int32
          title: cancelledCount
          type: integer
        completionTime:
          description: Optional. Represents the time that the execution was completed.
            It is not guaranteed to be set in happens-before order across separate
            operations. It is represented in RFC3339 form and is in UTC. +optional
          format: google-datetime
          title: completionTime
          type: string
        conditions:
          description: "Optional. Conditions communicate information about ongoing/complete\
            \ reconciliation processes that bring the \"spec\" inline with the observed\
            \ state of the world. Execution-specific conditions include: * `ResourcesAvailable`:\
            \ `True` when underlying resources have been provisioned. * `Started`:\
            \ `True` when the execution has started to execute. * `Completed`: `True`\
            \ when the execution has succeeded. `False` when the execution has failed."
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          title: conditions
          type: array
        failedCount:
          description: Optional. The number of tasks which reached phase Failed.
          format: int32
          title: failedCount
          type: integer
        logUri:
          description: Optional. URI where logs for this execution can be found in
            Cloud Console.
          title: logUri
          type: string
        observedGeneration:
          description: Optional. The 'generation' of the execution that was last processed
            by the controller.
          format: int32
          title: observedGeneration
          type: integer
        retriedCount:
          description: Optional. The number of tasks which have retried at least once.
          format: int32
          title: retriedCount
          type: integer
        runningCount:
          description: Optional. The number of actively running tasks.
          format: int32
          title: runningCount
          type: integer
        startTime:
          description: Optional. Represents the time that the execution started to
            run. It is not guaranteed to be set in happens-before order across separate
            operations. It is represented in RFC3339 form and is in UTC.
          format: google-datetime
          title: startTime
          type: string
        succeededCount:
          description: Optional. The number of tasks which reached phase Succeeded.
          format: int32
          title: succeededCount
          type: integer
      title: ExecutionStatus
      type: object
    ExecutionTemplateSpec:
      description: ExecutionTemplateSpec describes the metadata and spec an Execution
        should have when created from a job.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        spec:
          template:
            spec:
              maxRetries: 1
              serviceAccountName: serviceAccountName
              volumes:
              - configMap:
                  defaultMode: 1
                  name: name
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                csi:
                  driver: driver
                  readOnly: true
                  volumeAttributes:
                    key: volumeAttributes
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                secret:
                  secretName: secretName
                  defaultMode: 6
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
              - configMap:
                  defaultMode: 1
                  name: name
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                csi:
                  driver: driver
                  readOnly: true
                  volumeAttributes:
                    key: volumeAttributes
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                secret:
                  secretName: secretName
                  defaultMode: 6
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
              timeoutSeconds: timeoutSeconds
              containers:
              - image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests:
                    key: requests
                  limits:
                    key: limits
                securityContext:
                  runAsUser: 7
                startupProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                ports:
                - protocol: protocol
                  name: name
                  containerPort: 4
                - protocol: protocol
                  name: name
                  containerPort: 4
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                name: name
                readinessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                envFrom:
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
              - image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests:
                    key: requests
                  limits:
                    key: limits
                securityContext:
                  runAsUser: 7
                startupProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                ports:
                - protocol: protocol
                  name: name
                  containerPort: 4
                - protocol: protocol
                  name: name
                  containerPort: 4
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                name: name
                readinessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                envFrom:
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
          taskCount: 6
          parallelism: 0
      properties:
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/ExecutionSpec'
      title: ExecutionTemplateSpec
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language\
        \ (CEL) syntax. CEL is a C-like expression language. The syntax and semantics\
        \ of CEL are documented at https://github.com/google/cel-spec. Example (Comparison):\
        \ title: \"Summary size limit\" description: \"Determines if a summary is\
        \ less than 100 chars\" expression: \"document.summary.size() < 100\" Example\
        \ (Equality): title: \"Requestor is owner\" description: \"Determines if requestor\
        \ is the document owner\" expression: \"document.owner == request.auth.claims.email\"\
        \ Example (Logic): title: \"Public documents\" description: \"Determine whether\
        \ the document should be publicly visible\" expression: \"document.type !=\
        \ 'private' && document.type != 'internal'\" Example (Data Manipulation):\
        \ title: \"Notification string\" description: \"Create a notification string\
        \ with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\"\
        \ The exact variables and functions that may be referenced within an expression\
        \ are determined by the service that evaluates it. See the service documentation\
        \ for additional information."
      example:
        expression: expression
        description: description
        location: location
        title: title
      properties:
        description:
          description: "Optional. Description of the expression. This is a longer\
            \ text which describes the expression, e.g. when hovered over it in a\
            \ UI."
          title: description
          type: string
        expression:
          description: Textual representation of an expression in Common Expression
            Language syntax.
          title: expression
          type: string
        location:
          description: "Optional. String indicating the location of the expression\
            \ for error reporting, e.g. a file name and a position in the file."
          title: location
          type: string
        title:
          description: "Optional. Title for the expression, i.e. a short string describing\
            \ its purpose. This can be used e.g. in UIs which allow to enter the expression."
          title: title
          type: string
      title: Expr
      type: object
    GRPCAction:
      description: GRPCAction describes an action involving a GRPC port.
      example:
        port: 5
        service: service
      properties:
        port:
          description: Port number of the gRPC service. Number must be in the range
            1 to 65535.
          format: int32
          title: port
          type: integer
        service:
          description: "Service is the name of the service to place in the gRPC HealthCheckRequest.\
            \ If this is not specified, the default behavior is defined by gRPC."
          title: service
          type: string
      title: GRPCAction
      type: object
    GoogleCloudRunV1Condition:
      description: "Conditions show the status of reconciliation progress on a given\
        \ resource. Most resource use a top-level condition type \"Ready\" or \"Completed\"\
        \ to show overall status with other conditions to checkpoint each stage of\
        \ reconciliation. Note that if metadata.Generation does not equal status.ObservedGeneration,\
        \ the conditions shown may not be relevant for the current spec."
      example:
        severity: severity
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        status: status
      properties:
        lastTransitionTime:
          description: Optional. Last time the condition transitioned from one status
            to another.
          format: google-datetime
          title: lastTransitionTime
          type: string
        message:
          description: Optional. Human readable message indicating details about the
            current status.
          title: message
          type: string
        reason:
          description: "Optional. One-word CamelCase reason for the condition's last\
            \ transition. These are intended to be stable, unique values which the\
            \ client may use to trigger error handling logic, whereas messages which\
            \ may be changed later by the server."
          title: reason
          type: string
        severity:
          description: "Optional. How to interpret this condition. One of Error, Warning,\
            \ or Info. Conditions of severity Info do not contribute to resource readiness."
          title: severity
          type: string
        status:
          description: "Status of the condition, one of True, False, Unknown."
          title: status
          type: string
        type:
          description: "type is used to communicate the status of the reconciliation\
            \ process. Types common to all resources include: * \"Ready\" or \"Completed\"\
            : True when the Resource is ready."
          title: type
          type: string
      title: GoogleCloudRunV1Condition
      type: object
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      example:
        operations:
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 1
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 1
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: The standard List next-page token.
          title: nextPageToken
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          title: operations
          type: array
      title: GoogleLongrunningListOperationsResponse
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result
        of a network API call.
      example:
        metadata:
          key: ""
        response:
          key: ""
        name: name
        error:
          code: 1
          details:
          - key: ""
          - key: ""
          message: message
        done: true
      properties:
        done:
          description: "If the value is `false`, it means the operation is still in\
            \ progress. If `true`, the operation is completed, and either `error`\
            \ or `response` is available."
          title: done
          type: boolean
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "Service-specific metadata associated with the operation. It\
            \ typically contains progress information and common metadata such as\
            \ create time. Some services might not provide such metadata. Any method\
            \ that returns a long-running operation should document the metadata type,\
            \ if any."
          title: metadata
          type: object
        name:
          description: "The server-assigned name, which is only unique within the\
            \ same service that originally returns it. If you use the default HTTP\
            \ mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
          title: name
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "The normal, successful response of the operation. If the original\
            \ method returns no data on success, such as `Delete`, the response is\
            \ `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`,\
            \ the response should be the resource. For other methods, the response\
            \ should have the type `XxxResponse`, where `Xxx` is the original method\
            \ name. For example, if the original method name is `TakeSnapshot()`,\
            \ the inferred response type is `TakeSnapshotResponse`."
          title: response
          type: object
      title: GoogleLongrunningOperation
      type: object
    GoogleLongrunningWaitOperationRequest:
      description: The request message for Operations.WaitOperation.
      example:
        timeout: timeout
      properties:
        timeout:
          description: "The maximum duration to wait before timing out. If left blank,\
            \ the wait will be at most the time permitted by the underlying HTTP/RPC\
            \ protocol. If RPC context deadline is also specified, the shorter one\
            \ will be used."
          format: google-duration
          title: timeout
          type: string
      title: GoogleLongrunningWaitOperationRequest
      type: object
    GoogleRpcStatus:
      description: "The `Status` type defines a logical error model that is suitable\
        \ for different programming environments, including REST APIs and RPC APIs.\
        \ It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\
        \ three pieces of data: error code, error message, and error details. You\
        \ can find out more about this error model and how to work with it in the\
        \ [API Design Guide](https://cloud.google.com/apis/design/errors)."
      example:
        code: 1
        details:
        - key: ""
        - key: ""
        message: message
      properties:
        code:
          description: "The status code, which should be an enum value of google.rpc.Code."
          format: int32
          title: code
          type: integer
        details:
          description: A list of messages that carry the error details. There is a
            common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type
                URL.
            type: object
          title: details
          type: array
        message:
          description: "A developer-facing error message, which should be in English.\
            \ Any user-facing error message should be localized and sent in the google.rpc.Status.details\
            \ field, or localized by the client."
          title: message
          type: string
      title: GoogleRpcStatus
      type: object
    HTTPGetAction:
      description: HTTPGetAction describes an action based on HTTP Get requests.
      example:
        path: path
        scheme: scheme
        port: 5
        host: host
        httpHeaders:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        host:
          description: Not supported by Cloud Run.
          title: host
          type: string
        httpHeaders:
          description: Custom headers to set in the request. HTTP allows repeated
            headers.
          items:
            $ref: '#/components/schemas/HTTPHeader'
          title: httpHeaders
          type: array
        path:
          description: Path to access on the HTTP server.
          title: path
          type: string
        port:
          description: Port number to access on the container. Number must be in the
            range 1 to 65535.
          format: int32
          title: port
          type: integer
        scheme:
          description: Not supported by Cloud Run.
          title: scheme
          type: string
      title: HTTPGetAction
      type: object
    HTTPHeader:
      description: HTTPHeader describes a custom header to be used in HTTP probes
      example:
        name: name
        value: value
      properties:
        name:
          description: Required. The header field name
          title: name
          type: string
        value:
          description: The header field value
          title: value
          type: string
      title: HTTPHeader
      type: object
    Job:
      description: "Job represents the configuration of a single job, which references\
        \ a container image which is run to completion."
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          template:
            metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations:
                key: annotations
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels:
                key: labels
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            spec:
              template:
                spec:
                  maxRetries: 1
                  serviceAccountName: serviceAccountName
                  volumes:
                  - configMap:
                      defaultMode: 1
                      name: name
                      optional: true
                      items:
                      - mode: 1
                        path: path
                        key: key
                      - mode: 1
                        path: path
                        key: key
                    emptyDir:
                      sizeLimit: sizeLimit
                      medium: medium
                    csi:
                      driver: driver
                      readOnly: true
                      volumeAttributes:
                        key: volumeAttributes
                    name: name
                    nfs:
                      path: path
                      server: server
                      readOnly: true
                    secret:
                      secretName: secretName
                      defaultMode: 6
                      optional: true
                      items:
                      - mode: 1
                        path: path
                        key: key
                      - mode: 1
                        path: path
                        key: key
                  - configMap:
                      defaultMode: 1
                      name: name
                      optional: true
                      items:
                      - mode: 1
                        path: path
                        key: key
                      - mode: 1
                        path: path
                        key: key
                    emptyDir:
                      sizeLimit: sizeLimit
                      medium: medium
                    csi:
                      driver: driver
                      readOnly: true
                      volumeAttributes:
                        key: volumeAttributes
                    name: name
                    nfs:
                      path: path
                      server: server
                      readOnly: true
                    secret:
                      secretName: secretName
                      defaultMode: 6
                      optional: true
                      items:
                      - mode: 1
                        path: path
                        key: key
                      - mode: 1
                        path: path
                        key: key
                  timeoutSeconds: timeoutSeconds
                  containers:
                  - image: image
                    imagePullPolicy: imagePullPolicy
                    livenessProbe:
                      failureThreshold: 1
                      periodSeconds: 7
                      tcpSocket:
                        port: 3
                        host: host
                      timeoutSeconds: 2
                      successThreshold: 9
                      initialDelaySeconds: 2
                      exec:
                        command:
                        - command
                        - command
                      grpc:
                        port: 5
                        service: service
                      httpGet:
                        path: path
                        scheme: scheme
                        port: 5
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    terminationMessagePolicy: terminationMessagePolicy
                    terminationMessagePath: terminationMessagePath
                    workingDir: workingDir
                    resources:
                      requests:
                        key: requests
                      limits:
                        key: limits
                    securityContext:
                      runAsUser: 7
                    startupProbe:
                      failureThreshold: 1
                      periodSeconds: 7
                      tcpSocket:
                        port: 3
                        host: host
                      timeoutSeconds: 2
                      successThreshold: 9
                      initialDelaySeconds: 2
                      exec:
                        command:
                        - command
                        - command
                      grpc:
                        port: 5
                        service: service
                      httpGet:
                        path: path
                        scheme: scheme
                        port: 5
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    env:
                    - name: name
                      value: value
                      valueFrom:
                        secretKeyRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                          key: key
                        configMapKeyRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                          key: key
                    - name: name
                      value: value
                      valueFrom:
                        secretKeyRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                          key: key
                        configMapKeyRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                          key: key
                    ports:
                    - protocol: protocol
                      name: name
                      containerPort: 4
                    - protocol: protocol
                      name: name
                      containerPort: 4
                    command:
                    - command
                    - command
                    volumeMounts:
                    - mountPath: mountPath
                      name: name
                      readOnly: true
                      subPath: subPath
                    - mountPath: mountPath
                      name: name
                      readOnly: true
                      subPath: subPath
                    args:
                    - args
                    - args
                    name: name
                    readinessProbe:
                      failureThreshold: 1
                      periodSeconds: 7
                      tcpSocket:
                        port: 3
                        host: host
                      timeoutSeconds: 2
                      successThreshold: 9
                      initialDelaySeconds: 2
                      exec:
                        command:
                        - command
                        - command
                      grpc:
                        port: 5
                        service: service
                      httpGet:
                        path: path
                        scheme: scheme
                        port: 5
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    envFrom:
                    - configMapRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                      prefix: prefix
                      secretRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                    - configMapRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                      prefix: prefix
                      secretRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                  - image: image
                    imagePullPolicy: imagePullPolicy
                    livenessProbe:
                      failureThreshold: 1
                      periodSeconds: 7
                      tcpSocket:
                        port: 3
                        host: host
                      timeoutSeconds: 2
                      successThreshold: 9
                      initialDelaySeconds: 2
                      exec:
                        command:
                        - command
                        - command
                      grpc:
                        port: 5
                        service: service
                      httpGet:
                        path: path
                        scheme: scheme
                        port: 5
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    terminationMessagePolicy: terminationMessagePolicy
                    terminationMessagePath: terminationMessagePath
                    workingDir: workingDir
                    resources:
                      requests:
                        key: requests
                      limits:
                        key: limits
                    securityContext:
                      runAsUser: 7
                    startupProbe:
                      failureThreshold: 1
                      periodSeconds: 7
                      tcpSocket:
                        port: 3
                        host: host
                      timeoutSeconds: 2
                      successThreshold: 9
                      initialDelaySeconds: 2
                      exec:
                        command:
                        - command
                        - command
                      grpc:
                        port: 5
                        service: service
                      httpGet:
                        path: path
                        scheme: scheme
                        port: 5
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    env:
                    - name: name
                      value: value
                      valueFrom:
                        secretKeyRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                          key: key
                        configMapKeyRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                          key: key
                    - name: name
                      value: value
                      valueFrom:
                        secretKeyRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                          key: key
                        configMapKeyRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                          key: key
                    ports:
                    - protocol: protocol
                      name: name
                      containerPort: 4
                    - protocol: protocol
                      name: name
                      containerPort: 4
                    command:
                    - command
                    - command
                    volumeMounts:
                    - mountPath: mountPath
                      name: name
                      readOnly: true
                      subPath: subPath
                    - mountPath: mountPath
                      name: name
                      readOnly: true
                      subPath: subPath
                    args:
                    - args
                    - args
                    name: name
                    readinessProbe:
                      failureThreshold: 1
                      periodSeconds: 7
                      tcpSocket:
                        port: 3
                        host: host
                      timeoutSeconds: 2
                      successThreshold: 9
                      initialDelaySeconds: 2
                      exec:
                        command:
                        - command
                        - command
                      grpc:
                        port: 5
                        service: service
                      httpGet:
                        path: path
                        scheme: scheme
                        port: 5
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    envFrom:
                    - configMapRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                      prefix: prefix
                      secretRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                    - configMapRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                      prefix: prefix
                      secretRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
              taskCount: 6
              parallelism: 0
        status:
          executionCount: 0
          conditions:
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          latestCreatedExecution:
            completionTimestamp: completionTimestamp
            creationTimestamp: creationTimestamp
            name: name
          observedGeneration: 6
      properties:
        apiVersion:
          description: "Optional. APIVersion defines the versioned schema of this\
            \ representation of an object. Servers should convert recognized schemas\
            \ to the latest internal value, and may reject unrecognized values."
          title: apiVersion
          type: string
        kind:
          description: Optional. Kind is a string value representing the REST resource
            this object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase.
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/JobSpec'
        status:
          $ref: '#/components/schemas/JobStatus'
      title: Job
      type: object
    JobSpec:
      description: JobSpec describes how the job will look.
      example:
        template:
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          spec:
            template:
              spec:
                maxRetries: 1
                serviceAccountName: serviceAccountName
                volumes:
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                timeoutSeconds: timeoutSeconds
                containers:
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
            taskCount: 6
            parallelism: 0
      properties:
        template:
          $ref: '#/components/schemas/ExecutionTemplateSpec'
      title: JobSpec
      type: object
    JobStatus:
      description: JobStatus represents the current state of a Job.
      example:
        executionCount: 0
        conditions:
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        latestCreatedExecution:
          completionTimestamp: completionTimestamp
          creationTimestamp: creationTimestamp
          name: name
        observedGeneration: 6
      properties:
        conditions:
          description: "Conditions communicate information about ongoing/complete\
            \ reconciliation processes that bring the \"spec\" inline with the observed\
            \ state of the world. Job-specific conditions include: * `Ready`: `True`\
            \ when the job is ready to be executed."
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          title: conditions
          type: array
        executionCount:
          description: Number of executions created for this job.
          format: int32
          title: executionCount
          type: integer
        latestCreatedExecution:
          $ref: '#/components/schemas/ExecutionReference'
        observedGeneration:
          description: The 'generation' of the job that was last processed by the
            controller.
          format: int32
          title: observedGeneration
          type: integer
      title: JobStatus
      type: object
    KeyToPath:
      description: Maps a string key to a path within a volume.
      example:
        mode: 1
        path: path
        key: key
      properties:
        key:
          description: "The Cloud Secret Manager secret version. Can be 'latest' for\
            \ the latest value, or an integer or a secret alias for a specific version.\
            \ The key to project."
          title: key
          type: string
        mode:
          description: "(Optional) Mode bits to use on this file, must be a value\
            \ between 01 and 0777 (octal). If 0 or not set, the Volume's default mode\
            \ will be used. Notes * Internally, a umask of 0222 will be applied to\
            \ any non-zero value. * This is an integer representation of the mode\
            \ bits. So, the octal integer value should look exactly as the chmod numeric\
            \ notation with a leading zero. Some examples: for chmod 777 (a=rwx),\
            \ set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set\
            \ to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set\
            \ to 0755 (octal) or 493 (base-10). * This might be in conflict with other\
            \ options that affect the file mode, like fsGroup, and the result can\
            \ be other mode bits set."
          format: int32
          title: mode
          type: integer
        path:
          description: The relative path of the file to map the key to. May not be
            an absolute path. May not contain the path element '..'. May not start
            with the string '..'.
          title: path
          type: string
      title: KeyToPath
      type: object
    ListAuthorizedDomainsResponse:
      description: A list of Authorized Domains.
      example:
        nextPageToken: nextPageToken
        domains:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        domains:
          description: The authorized domains belonging to the user.
          items:
            $ref: '#/components/schemas/AuthorizedDomain'
          title: domains
          type: array
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          title: nextPageToken
          type: string
      title: ListAuthorizedDomainsResponse
      type: object
    ListConfigurationsResponse:
      description: ListConfigurationsResponse is a list of Configuration resources.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        unreachable:
        - unreachable
        - unreachable
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations:
                  key: annotations
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels:
                  key: labels
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                containerConcurrency: 0
                enableServiceLinks: true
                serviceAccountName: serviceAccountName
                imagePullSecrets:
                - name: name
                - name: name
                volumes:
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                timeoutSeconds: 6
                containers:
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
          status:
            latestCreatedRevisionName: latestCreatedRevisionName
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            latestReadyRevisionName: latestReadyRevisionName
            observedGeneration: 0
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations:
                  key: annotations
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels:
                  key: labels
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                containerConcurrency: 0
                enableServiceLinks: true
                serviceAccountName: serviceAccountName
                imagePullSecrets:
                - name: name
                - name: name
                volumes:
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                timeoutSeconds: 6
                containers:
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
          status:
            latestCreatedRevisionName: latestCreatedRevisionName
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            latestReadyRevisionName: latestReadyRevisionName
            observedGeneration: 0
      properties:
        apiVersion:
          description: The API version for this call such as "serving.knative.dev/v1".
          title: apiVersion
          type: string
        items:
          description: List of Configurations.
          items:
            $ref: '#/components/schemas/Configuration'
          title: items
          type: array
        kind:
          description: "The kind of this resource, in this case \"ConfigurationList\"\
            ."
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMeta'
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          title: unreachable
          type: array
      title: ListConfigurationsResponse
      type: object
    ListDomainMappingsResponse:
      description: ListDomainMappingsResponse is a list of DomainMapping resources.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        unreachable:
        - unreachable
        - unreachable
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            certificateMode: CERTIFICATE_MODE_UNSPECIFIED
            forceOverride: true
            routeName: routeName
          status:
            mappedRouteName: mappedRouteName
            resourceRecords:
            - rrdata: rrdata
              name: name
              type: RECORD_TYPE_UNSPECIFIED
            - rrdata: rrdata
              name: name
              type: RECORD_TYPE_UNSPECIFIED
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            observedGeneration: 1
            url: url
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            certificateMode: CERTIFICATE_MODE_UNSPECIFIED
            forceOverride: true
            routeName: routeName
          status:
            mappedRouteName: mappedRouteName
            resourceRecords:
            - rrdata: rrdata
              name: name
              type: RECORD_TYPE_UNSPECIFIED
            - rrdata: rrdata
              name: name
              type: RECORD_TYPE_UNSPECIFIED
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            observedGeneration: 1
            url: url
      properties:
        apiVersion:
          description: The API version for this call such as "domains.cloudrun.com/v1".
          title: apiVersion
          type: string
        items:
          description: List of DomainMappings.
          items:
            $ref: '#/components/schemas/DomainMapping'
          title: items
          type: array
        kind:
          description: "The kind of this resource, in this case \"DomainMappingList\"\
            ."
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMeta'
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          title: unreachable
          type: array
      title: ListDomainMappingsResponse
      type: object
    ListExecutionsResponse:
      description: ListExecutionsResponse is a list of Executions resources.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        unreachable:
        - unreachable
        - unreachable
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              spec:
                maxRetries: 1
                serviceAccountName: serviceAccountName
                volumes:
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                timeoutSeconds: timeoutSeconds
                containers:
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
            taskCount: 6
            parallelism: 0
          status:
            completionTime: completionTime
            failedCount: 1
            cancelledCount: 7
            retriedCount: 5
            runningCount: 9
            startTime: startTime
            succeededCount: 9
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            observedGeneration: 4
            logUri: logUri
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              spec:
                maxRetries: 1
                serviceAccountName: serviceAccountName
                volumes:
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                timeoutSeconds: timeoutSeconds
                containers:
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
            taskCount: 6
            parallelism: 0
          status:
            completionTime: completionTime
            failedCount: 1
            cancelledCount: 7
            retriedCount: 5
            runningCount: 9
            startTime: startTime
            succeededCount: 9
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            observedGeneration: 4
            logUri: logUri
      properties:
        apiVersion:
          description: The API version for this call such as "run.googleapis.com/v1".
          title: apiVersion
          type: string
        items:
          description: List of Executions.
          items:
            $ref: '#/components/schemas/Execution'
          title: items
          type: array
        kind:
          description: "The kind of this resource, in this case \"ExecutionsList\"\
            ."
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMeta'
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          title: unreachable
          type: array
      title: ListExecutionsResponse
      type: object
    ListJobsResponse:
      description: ListJobsResponse is a list of Jobs resources.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        unreachable:
        - unreachable
        - unreachable
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations:
                  key: annotations
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels:
                  key: labels
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                template:
                  spec:
                    maxRetries: 1
                    serviceAccountName: serviceAccountName
                    volumes:
                    - configMap:
                        defaultMode: 1
                        name: name
                        optional: true
                        items:
                        - mode: 1
                          path: path
                          key: key
                        - mode: 1
                          path: path
                          key: key
                      emptyDir:
                        sizeLimit: sizeLimit
                        medium: medium
                      csi:
                        driver: driver
                        readOnly: true
                        volumeAttributes:
                          key: volumeAttributes
                      name: name
                      nfs:
                        path: path
                        server: server
                        readOnly: true
                      secret:
                        secretName: secretName
                        defaultMode: 6
                        optional: true
                        items:
                        - mode: 1
                          path: path
                          key: key
                        - mode: 1
                          path: path
                          key: key
                    - configMap:
                        defaultMode: 1
                        name: name
                        optional: true
                        items:
                        - mode: 1
                          path: path
                          key: key
                        - mode: 1
                          path: path
                          key: key
                      emptyDir:
                        sizeLimit: sizeLimit
                        medium: medium
                      csi:
                        driver: driver
                        readOnly: true
                        volumeAttributes:
                          key: volumeAttributes
                      name: name
                      nfs:
                        path: path
                        server: server
                        readOnly: true
                      secret:
                        secretName: secretName
                        defaultMode: 6
                        optional: true
                        items:
                        - mode: 1
                          path: path
                          key: key
                        - mode: 1
                          path: path
                          key: key
                    timeoutSeconds: timeoutSeconds
                    containers:
                    - image: image
                      imagePullPolicy: imagePullPolicy
                      livenessProbe:
                        failureThreshold: 1
                        periodSeconds: 7
                        tcpSocket:
                          port: 3
                          host: host
                        timeoutSeconds: 2
                        successThreshold: 9
                        initialDelaySeconds: 2
                        exec:
                          command:
                          - command
                          - command
                        grpc:
                          port: 5
                          service: service
                        httpGet:
                          path: path
                          scheme: scheme
                          port: 5
                          host: host
                          httpHeaders:
                          - name: name
                            value: value
                          - name: name
                            value: value
                      terminationMessagePolicy: terminationMessagePolicy
                      terminationMessagePath: terminationMessagePath
                      workingDir: workingDir
                      resources:
                        requests:
                          key: requests
                        limits:
                          key: limits
                      securityContext:
                        runAsUser: 7
                      startupProbe:
                        failureThreshold: 1
                        periodSeconds: 7
                        tcpSocket:
                          port: 3
                          host: host
                        timeoutSeconds: 2
                        successThreshold: 9
                        initialDelaySeconds: 2
                        exec:
                          command:
                          - command
                          - command
                        grpc:
                          port: 5
                          service: service
                        httpGet:
                          path: path
                          scheme: scheme
                          port: 5
                          host: host
                          httpHeaders:
                          - name: name
                            value: value
                          - name: name
                            value: value
                      env:
                      - name: name
                        value: value
                        valueFrom:
                          secretKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                          configMapKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                      - name: name
                        value: value
                        valueFrom:
                          secretKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                          configMapKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                      ports:
                      - protocol: protocol
                        name: name
                        containerPort: 4
                      - protocol: protocol
                        name: name
                        containerPort: 4
                      command:
                      - command
                      - command
                      volumeMounts:
                      - mountPath: mountPath
                        name: name
                        readOnly: true
                        subPath: subPath
                      - mountPath: mountPath
                        name: name
                        readOnly: true
                        subPath: subPath
                      args:
                      - args
                      - args
                      name: name
                      readinessProbe:
                        failureThreshold: 1
                        periodSeconds: 7
                        tcpSocket:
                          port: 3
                          host: host
                        timeoutSeconds: 2
                        successThreshold: 9
                        initialDelaySeconds: 2
                        exec:
                          command:
                          - command
                          - command
                        grpc:
                          port: 5
                          service: service
                        httpGet:
                          path: path
                          scheme: scheme
                          port: 5
                          host: host
                          httpHeaders:
                          - name: name
                            value: value
                          - name: name
                            value: value
                      envFrom:
                      - configMapRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                        prefix: prefix
                        secretRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                      - configMapRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                        prefix: prefix
                        secretRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                    - image: image
                      imagePullPolicy: imagePullPolicy
                      livenessProbe:
                        failureThreshold: 1
                        periodSeconds: 7
                        tcpSocket:
                          port: 3
                          host: host
                        timeoutSeconds: 2
                        successThreshold: 9
                        initialDelaySeconds: 2
                        exec:
                          command:
                          - command
                          - command
                        grpc:
                          port: 5
                          service: service
                        httpGet:
                          path: path
                          scheme: scheme
                          port: 5
                          host: host
                          httpHeaders:
                          - name: name
                            value: value
                          - name: name
                            value: value
                      terminationMessagePolicy: terminationMessagePolicy
                      terminationMessagePath: terminationMessagePath
                      workingDir: workingDir
                      resources:
                        requests:
                          key: requests
                        limits:
                          key: limits
                      securityContext:
                        runAsUser: 7
                      startupProbe:
                        failureThreshold: 1
                        periodSeconds: 7
                        tcpSocket:
                          port: 3
                          host: host
                        timeoutSeconds: 2
                        successThreshold: 9
                        initialDelaySeconds: 2
                        exec:
                          command:
                          - command
                          - command
                        grpc:
                          port: 5
                          service: service
                        httpGet:
                          path: path
                          scheme: scheme
                          port: 5
                          host: host
                          httpHeaders:
                          - name: name
                            value: value
                          - name: name
                            value: value
                      env:
                      - name: name
                        value: value
                        valueFrom:
                          secretKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                          configMapKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                      - name: name
                        value: value
                        valueFrom:
                          secretKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                          configMapKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                      ports:
                      - protocol: protocol
                        name: name
                        containerPort: 4
                      - protocol: protocol
                        name: name
                        containerPort: 4
                      command:
                      - command
                      - command
                      volumeMounts:
                      - mountPath: mountPath
                        name: name
                        readOnly: true
                        subPath: subPath
                      - mountPath: mountPath
                        name: name
                        readOnly: true
                        subPath: subPath
                      args:
                      - args
                      - args
                      name: name
                      readinessProbe:
                        failureThreshold: 1
                        periodSeconds: 7
                        tcpSocket:
                          port: 3
                          host: host
                        timeoutSeconds: 2
                        successThreshold: 9
                        initialDelaySeconds: 2
                        exec:
                          command:
                          - command
                          - command
                        grpc:
                          port: 5
                          service: service
                        httpGet:
                          path: path
                          scheme: scheme
                          port: 5
                          host: host
                          httpHeaders:
                          - name: name
                            value: value
                          - name: name
                            value: value
                      envFrom:
                      - configMapRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                        prefix: prefix
                        secretRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                      - configMapRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                        prefix: prefix
                        secretRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                taskCount: 6
                parallelism: 0
          status:
            executionCount: 0
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            latestCreatedExecution:
              completionTimestamp: completionTimestamp
              creationTimestamp: creationTimestamp
              name: name
            observedGeneration: 6
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations:
                  key: annotations
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels:
                  key: labels
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                template:
                  spec:
                    maxRetries: 1
                    serviceAccountName: serviceAccountName
                    volumes:
                    - configMap:
                        defaultMode: 1
                        name: name
                        optional: true
                        items:
                        - mode: 1
                          path: path
                          key: key
                        - mode: 1
                          path: path
                          key: key
                      emptyDir:
                        sizeLimit: sizeLimit
                        medium: medium
                      csi:
                        driver: driver
                        readOnly: true
                        volumeAttributes:
                          key: volumeAttributes
                      name: name
                      nfs:
                        path: path
                        server: server
                        readOnly: true
                      secret:
                        secretName: secretName
                        defaultMode: 6
                        optional: true
                        items:
                        - mode: 1
                          path: path
                          key: key
                        - mode: 1
                          path: path
                          key: key
                    - configMap:
                        defaultMode: 1
                        name: name
                        optional: true
                        items:
                        - mode: 1
                          path: path
                          key: key
                        - mode: 1
                          path: path
                          key: key
                      emptyDir:
                        sizeLimit: sizeLimit
                        medium: medium
                      csi:
                        driver: driver
                        readOnly: true
                        volumeAttributes:
                          key: volumeAttributes
                      name: name
                      nfs:
                        path: path
                        server: server
                        readOnly: true
                      secret:
                        secretName: secretName
                        defaultMode: 6
                        optional: true
                        items:
                        - mode: 1
                          path: path
                          key: key
                        - mode: 1
                          path: path
                          key: key
                    timeoutSeconds: timeoutSeconds
                    containers:
                    - image: image
                      imagePullPolicy: imagePullPolicy
                      livenessProbe:
                        failureThreshold: 1
                        periodSeconds: 7
                        tcpSocket:
                          port: 3
                          host: host
                        timeoutSeconds: 2
                        successThreshold: 9
                        initialDelaySeconds: 2
                        exec:
                          command:
                          - command
                          - command
                        grpc:
                          port: 5
                          service: service
                        httpGet:
                          path: path
                          scheme: scheme
                          port: 5
                          host: host
                          httpHeaders:
                          - name: name
                            value: value
                          - name: name
                            value: value
                      terminationMessagePolicy: terminationMessagePolicy
                      terminationMessagePath: terminationMessagePath
                      workingDir: workingDir
                      resources:
                        requests:
                          key: requests
                        limits:
                          key: limits
                      securityContext:
                        runAsUser: 7
                      startupProbe:
                        failureThreshold: 1
                        periodSeconds: 7
                        tcpSocket:
                          port: 3
                          host: host
                        timeoutSeconds: 2
                        successThreshold: 9
                        initialDelaySeconds: 2
                        exec:
                          command:
                          - command
                          - command
                        grpc:
                          port: 5
                          service: service
                        httpGet:
                          path: path
                          scheme: scheme
                          port: 5
                          host: host
                          httpHeaders:
                          - name: name
                            value: value
                          - name: name
                            value: value
                      env:
                      - name: name
                        value: value
                        valueFrom:
                          secretKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                          configMapKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                      - name: name
                        value: value
                        valueFrom:
                          secretKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                          configMapKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                      ports:
                      - protocol: protocol
                        name: name
                        containerPort: 4
                      - protocol: protocol
                        name: name
                        containerPort: 4
                      command:
                      - command
                      - command
                      volumeMounts:
                      - mountPath: mountPath
                        name: name
                        readOnly: true
                        subPath: subPath
                      - mountPath: mountPath
                        name: name
                        readOnly: true
                        subPath: subPath
                      args:
                      - args
                      - args
                      name: name
                      readinessProbe:
                        failureThreshold: 1
                        periodSeconds: 7
                        tcpSocket:
                          port: 3
                          host: host
                        timeoutSeconds: 2
                        successThreshold: 9
                        initialDelaySeconds: 2
                        exec:
                          command:
                          - command
                          - command
                        grpc:
                          port: 5
                          service: service
                        httpGet:
                          path: path
                          scheme: scheme
                          port: 5
                          host: host
                          httpHeaders:
                          - name: name
                            value: value
                          - name: name
                            value: value
                      envFrom:
                      - configMapRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                        prefix: prefix
                        secretRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                      - configMapRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                        prefix: prefix
                        secretRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                    - image: image
                      imagePullPolicy: imagePullPolicy
                      livenessProbe:
                        failureThreshold: 1
                        periodSeconds: 7
                        tcpSocket:
                          port: 3
                          host: host
                        timeoutSeconds: 2
                        successThreshold: 9
                        initialDelaySeconds: 2
                        exec:
                          command:
                          - command
                          - command
                        grpc:
                          port: 5
                          service: service
                        httpGet:
                          path: path
                          scheme: scheme
                          port: 5
                          host: host
                          httpHeaders:
                          - name: name
                            value: value
                          - name: name
                            value: value
                      terminationMessagePolicy: terminationMessagePolicy
                      terminationMessagePath: terminationMessagePath
                      workingDir: workingDir
                      resources:
                        requests:
                          key: requests
                        limits:
                          key: limits
                      securityContext:
                        runAsUser: 7
                      startupProbe:
                        failureThreshold: 1
                        periodSeconds: 7
                        tcpSocket:
                          port: 3
                          host: host
                        timeoutSeconds: 2
                        successThreshold: 9
                        initialDelaySeconds: 2
                        exec:
                          command:
                          - command
                          - command
                        grpc:
                          port: 5
                          service: service
                        httpGet:
                          path: path
                          scheme: scheme
                          port: 5
                          host: host
                          httpHeaders:
                          - name: name
                            value: value
                          - name: name
                            value: value
                      env:
                      - name: name
                        value: value
                        valueFrom:
                          secretKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                          configMapKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                      - name: name
                        value: value
                        valueFrom:
                          secretKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                          configMapKeyRef:
                            localObjectReference:
                              name: name
                            name: name
                            optional: true
                            key: key
                      ports:
                      - protocol: protocol
                        name: name
                        containerPort: 4
                      - protocol: protocol
                        name: name
                        containerPort: 4
                      command:
                      - command
                      - command
                      volumeMounts:
                      - mountPath: mountPath
                        name: name
                        readOnly: true
                        subPath: subPath
                      - mountPath: mountPath
                        name: name
                        readOnly: true
                        subPath: subPath
                      args:
                      - args
                      - args
                      name: name
                      readinessProbe:
                        failureThreshold: 1
                        periodSeconds: 7
                        tcpSocket:
                          port: 3
                          host: host
                        timeoutSeconds: 2
                        successThreshold: 9
                        initialDelaySeconds: 2
                        exec:
                          command:
                          - command
                          - command
                        grpc:
                          port: 5
                          service: service
                        httpGet:
                          path: path
                          scheme: scheme
                          port: 5
                          host: host
                          httpHeaders:
                          - name: name
                            value: value
                          - name: name
                            value: value
                      envFrom:
                      - configMapRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                        prefix: prefix
                        secretRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                      - configMapRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                        prefix: prefix
                        secretRef:
                          localObjectReference:
                            name: name
                          name: name
                          optional: true
                taskCount: 6
                parallelism: 0
          status:
            executionCount: 0
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            latestCreatedExecution:
              completionTimestamp: completionTimestamp
              creationTimestamp: creationTimestamp
              name: name
            observedGeneration: 6
      properties:
        apiVersion:
          description: The API version for this call such as "run.googleapis.com/v1".
          title: apiVersion
          type: string
        items:
          description: List of Jobs.
          items:
            $ref: '#/components/schemas/Job'
          title: items
          type: array
        kind:
          description: "The kind of this resource, in this case \"JobsList\"."
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMeta'
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          title: unreachable
          type: array
      title: ListJobsResponse
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      example:
        nextPageToken: nextPageToken
        locations:
        - metadata:
            key: ""
          displayName: displayName
          locationId: locationId
          name: name
          labels:
            key: labels
        - metadata:
            key: ""
          displayName: displayName
          locationId: locationId
          name: name
          labels:
            key: labels
      properties:
        locations:
          description: A list of locations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Location'
          title: locations
          type: array
        nextPageToken:
          description: The standard List next-page token.
          title: nextPageToken
          type: string
      title: ListLocationsResponse
      type: object
    ListMeta:
      description: "Metadata for synthetic resources like List. In Cloud Run, all\
        \ List Resources Responses will have a ListMeta instead of ObjectMeta."
      example:
        continue: continue
        resourceVersion: resourceVersion
        selfLink: selfLink
      properties:
        continue:
          description: "Continuation token is a value emitted when the count of items\
            \ is larger than the user/system limit. To retrieve the next page of items,\
            \ pass the value of `continue` as the next request's `page_token`."
          title: continue
          type: string
        resourceVersion:
          description: "Opaque string that identifies the server's internal version\
            \ of this object. It can be used by clients to determine when objects\
            \ have changed. If the message is passed back to the server, it must be\
            \ left unmodified."
          title: resourceVersion
          type: string
        selfLink:
          description: URL representing this object.
          title: selfLink
          type: string
      title: ListMeta
      type: object
    ListRevisionsResponse:
      description: ListRevisionsResponse is a list of Revision resources.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        unreachable:
        - unreachable
        - unreachable
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            containerConcurrency: 0
            enableServiceLinks: true
            serviceAccountName: serviceAccountName
            imagePullSecrets:
            - name: name
            - name: name
            volumes:
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            timeoutSeconds: 6
            containers:
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
          status:
            desiredReplicas: 0
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            logUrl: logUrl
            serviceName: serviceName
            observedGeneration: 6
            imageDigest: imageDigest
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            containerConcurrency: 0
            enableServiceLinks: true
            serviceAccountName: serviceAccountName
            imagePullSecrets:
            - name: name
            - name: name
            volumes:
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            timeoutSeconds: 6
            containers:
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
          status:
            desiredReplicas: 0
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            logUrl: logUrl
            serviceName: serviceName
            observedGeneration: 6
            imageDigest: imageDigest
      properties:
        apiVersion:
          description: The API version for this call such as "serving.knative.dev/v1".
          title: apiVersion
          type: string
        items:
          description: List of Revisions.
          items:
            $ref: '#/components/schemas/Revision'
          title: items
          type: array
        kind:
          description: "The kind of this resource, in this case \"RevisionList\"."
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMeta'
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          title: unreachable
          type: array
      title: ListRevisionsResponse
      type: object
    ListRoutesResponse:
      description: ListRoutesResponse is a list of Route resources.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        unreachable:
        - unreachable
        - unreachable
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            traffic:
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
          status:
            address:
              url: url
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            observedGeneration: 0
            url: url
            traffic:
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            traffic:
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
          status:
            address:
              url: url
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            observedGeneration: 0
            url: url
            traffic:
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
      properties:
        apiVersion:
          description: The API version for this call such as "serving.knative.dev/v1".
          title: apiVersion
          type: string
        items:
          description: List of Routes.
          items:
            $ref: '#/components/schemas/Route'
          title: items
          type: array
        kind:
          description: "The kind of this resource, in this case always \"RouteList\"\
            ."
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMeta'
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          title: unreachable
          type: array
      title: ListRoutesResponse
      type: object
    ListServicesResponse:
      description: A list of Service resources.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        unreachable:
        - unreachable
        - unreachable
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations:
                  key: annotations
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels:
                  key: labels
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                containerConcurrency: 0
                enableServiceLinks: true
                serviceAccountName: serviceAccountName
                imagePullSecrets:
                - name: name
                - name: name
                volumes:
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                timeoutSeconds: 6
                containers:
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
            traffic:
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
          status:
            address:
              url: url
            latestCreatedRevisionName: latestCreatedRevisionName
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            latestReadyRevisionName: latestReadyRevisionName
            observedGeneration: 5
            url: url
            traffic:
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations:
                  key: annotations
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels:
                  key: labels
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                containerConcurrency: 0
                enableServiceLinks: true
                serviceAccountName: serviceAccountName
                imagePullSecrets:
                - name: name
                - name: name
                volumes:
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                - configMap:
                    defaultMode: 1
                    name: name
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  csi:
                    driver: driver
                    readOnly: true
                    volumeAttributes:
                      key: volumeAttributes
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  secret:
                    secretName: secretName
                    defaultMode: 6
                    optional: true
                    items:
                    - mode: 1
                      path: path
                      key: key
                    - mode: 1
                      path: path
                      key: key
                timeoutSeconds: 6
                containers:
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                - image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests:
                      key: requests
                    limits:
                      key: limits
                  securityContext:
                    runAsUser: 7
                  startupProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                      configMapKeyRef:
                        localObjectReference:
                          name: name
                        name: name
                        optional: true
                        key: key
                  ports:
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  - protocol: protocol
                    name: name
                    containerPort: 4
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  name: name
                  readinessProbe:
                    failureThreshold: 1
                    periodSeconds: 7
                    tcpSocket:
                      port: 3
                      host: host
                    timeoutSeconds: 2
                    successThreshold: 9
                    initialDelaySeconds: 2
                    exec:
                      command:
                      - command
                      - command
                    grpc:
                      port: 5
                      service: service
                    httpGet:
                      path: path
                      scheme: scheme
                      port: 5
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  envFrom:
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                  - configMapRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
            traffic:
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
          status:
            address:
              url: url
            latestCreatedRevisionName: latestCreatedRevisionName
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            latestReadyRevisionName: latestReadyRevisionName
            observedGeneration: 5
            url: url
            traffic:
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
            - revisionName: revisionName
              configurationName: configurationName
              tag: tag
              latestRevision: true
              percent: 1
              url: url
      properties:
        apiVersion:
          description: The API version for this call; returns "serving.knative.dev/v1".
          title: apiVersion
          type: string
        items:
          description: List of Services.
          items:
            $ref: '#/components/schemas/Service'
          title: items
          type: array
        kind:
          description: The kind of this resource; returns "ServiceList".
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMeta'
        unreachable:
          description: "For calls against the global endpoint, returns the list of\
            \ Cloud locations that could not be reached. For regional calls, this\
            \ field is not used."
          items:
            type: string
          title: unreachable
          type: array
      title: ListServicesResponse
      type: object
    ListTasksResponse:
      description: ListTasksResponse is a list of Tasks resources.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        unreachable:
        - unreachable
        - unreachable
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            maxRetries: 1
            serviceAccountName: serviceAccountName
            volumes:
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            timeoutSeconds: timeoutSeconds
            containers:
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
          status:
            retried: 5
            completionTime: completionTime
            index: 0
            startTime: startTime
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            lastAttemptResult:
              exitCode: 6
              status:
                code: 1
                details:
                - key: ""
                - key: ""
                message: message
            observedGeneration: 5
            logUri: logUri
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            maxRetries: 1
            serviceAccountName: serviceAccountName
            volumes:
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            timeoutSeconds: timeoutSeconds
            containers:
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
          status:
            retried: 5
            completionTime: completionTime
            index: 0
            startTime: startTime
            conditions:
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - severity: severity
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            lastAttemptResult:
              exitCode: 6
              status:
                code: 1
                details:
                - key: ""
                - key: ""
                message: message
            observedGeneration: 5
            logUri: logUri
      properties:
        apiVersion:
          description: The API version for this call such as "run.googleapis.com/v1".
          title: apiVersion
          type: string
        items:
          description: List of Tasks.
          items:
            $ref: '#/components/schemas/Task'
          title: items
          type: array
        kind:
          description: "The kind of this resource, in this case \"TasksList\"."
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMeta'
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          title: unreachable
          type: array
      title: ListTasksResponse
      type: object
    LocalObjectReference:
      description: Not supported by Cloud Run. LocalObjectReference contains enough
        information to let you locate the referenced object inside the same namespace.
      example:
        name: name
      properties:
        name:
          description: Name of the referent.
          title: name
          type: string
      title: LocalObjectReference
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      example:
        metadata:
          key: ""
        displayName: displayName
        locationId: locationId
        name: name
        labels:
          key: labels
      properties:
        displayName:
          description: "The friendly name for this location, typically a nearby city\
            \ name. For example, \"Tokyo\"."
          title: displayName
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Cross-service attributes for the location. For example {\"\
            cloud.googleapis.com/region\": \"us-east1\"}"
          title: labels
          type: object
        locationId:
          description: "The canonical id for this location. For example: `\"us-east1\"\
            `."
          title: locationId
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: Service-specific metadata. For example the available capacity
            at the given location.
          title: metadata
          type: object
        name:
          description: "Resource name for the location, which may vary between implementations.\
            \ For example: `\"projects/example-project/locations/us-east1\"`"
          title: name
          type: string
      title: Location
      type: object
    NFSVolumeSource:
      description: Represents a persistent volume that will be mounted using NFS.
        This volume will be shared between all instances of the Service and data will
        not be deleted when the instance is shut down.
      example:
        path: path
        server: server
        readOnly: true
      properties:
        path:
          description: Path that is exported by the NFS server.
          title: path
          type: string
        readOnly:
          description: "If true, mount the NFS volume as read only. Defaults to false."
          title: readOnly
          type: boolean
        server:
          description: Hostname or IP address of the NFS server.
          title: server
          type: string
      title: NFSVolumeSource
      type: object
    ObjectMeta:
      description: "google.cloud.run.meta.v1.ObjectMeta is metadata that all persisted\
        \ resources must have, which includes all objects users must create."
      example:
        generation: 6
        finalizers:
        - finalizers
        - finalizers
        resourceVersion: resourceVersion
        annotations:
          key: annotations
        generateName: generateName
        deletionTimestamp: deletionTimestamp
        labels:
          key: labels
        ownerReferences:
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        selfLink: selfLink
        deletionGracePeriodSeconds: 0
        uid: uid
        clusterName: clusterName
        creationTimestamp: creationTimestamp
        name: name
        namespace: namespace
      properties:
        annotations:
          additionalProperties:
            type: string
          description: "Unstructured key value map stored with a resource that may\
            \ be set by external tools to store and retrieve arbitrary metadata. They\
            \ are not queryable and should be preserved when modifying objects. In\
            \ Cloud Run, annotations with 'run.googleapis.com/' and 'autoscaling.knative.dev'\
            \ are restricted, and the accepted annotations will be different depending\
            \ on the resource type. * `autoscaling.knative.dev/maxScale`: Revision.\
            \ * `autoscaling.knative.dev/minScale`: Revision. * `run.googleapis.com/binary-authorization-breakglass`:\
            \ Service, Job, * `run.googleapis.com/binary-authorization`: Service,\
            \ Job, Execution. * `run.googleapis.com/client-name`: All resources. *\
            \ `run.googleapis.com/cloudsql-instances`: Revision, Execution. * `run.googleapis.com/container-dependencies`:\
            \ Revision . * `run.googleapis.com/cpu-throttling`: Revision. * `run.googleapis.com/custom-audiences`:\
            \ Service. * `run.googleapis.com/default-url-disabled`: Service. * `run.googleapis.com/description`:\
            \ Service. * `run.googleapis.com/encryption-key-shutdown-hours`: Revision\
            \ * `run.googleapis.com/encryption-key`: Revision, Execution. * `run.googleapis.com/execution-environment`:\
            \ Revision, Execution. * `run.googleapis.com/gc-traffic-tags`: Service.\
            \ * `run.googleapis.com/ingress`: Service. * `run.googleapis.com/launch-stage`:\
            \ Service, Job. * `run.googleapis.com/minScale`: Service (ALPHA) * `run.googleapis.com/network-interfaces`:\
            \ Revision, Execution. * `run.googleapis.com/post-key-revocation-action-type`:\
            \ Revision. * `run.googleapis.com/secrets`: Revision, Execution. * `run.googleapis.com/secure-session-agent`:\
            \ Revision. * `run.googleapis.com/sessionAffinity`: Revision. * `run.googleapis.com/startup-cpu-boost`:\
            \ Revision. * `run.googleapis.com/vpc-access-connector`: Revision, Execution.\
            \ * `run.googleapis.com/vpc-access-egress`: Revision, Execution."
          title: annotations
          type: object
        clusterName:
          description: Not supported by Cloud Run
          title: clusterName
          type: string
        creationTimestamp:
          description: UTC timestamp representing the server time when this object
            was created.
          format: google-datetime
          title: creationTimestamp
          type: string
        deletionGracePeriodSeconds:
          description: Not supported by Cloud Run
          format: int32
          title: deletionGracePeriodSeconds
          type: integer
        deletionTimestamp:
          description: "The read-only soft deletion timestamp for this resource. In\
            \ Cloud Run, users are not able to set this field. Instead, they must\
            \ call the corresponding Delete API."
          format: google-datetime
          title: deletionTimestamp
          type: string
        finalizers:
          description: Not supported by Cloud Run
          items:
            type: string
          title: finalizers
          type: array
        generateName:
          description: Not supported by Cloud Run
          title: generateName
          type: string
        generation:
          description: A system-provided sequence number representing a specific generation
            of the desired state.
          format: int32
          title: generation
          type: integer
        labels:
          additionalProperties:
            type: string
          description: Map of string keys and values that can be used to organize
            and categorize (scope and select) objects. May match selectors of replication
            controllers and routes.
          title: labels
          type: object
        name:
          description: "Required. The name of the resource. Name is required when\
            \ creating top-level resources (Service, Job), must be unique within a\
            \ Cloud Run project/region, and cannot be changed once created."
          title: name
          type: string
        namespace:
          description: "Required. Defines the space within each name must be unique\
            \ within a Cloud Run region. In Cloud Run, it must be project ID or number."
          title: namespace
          type: string
        ownerReferences:
          description: Not supported by Cloud Run
          items:
            $ref: '#/components/schemas/OwnerReference'
          title: ownerReferences
          type: array
        resourceVersion:
          description: "Opaque, system-generated value that represents the internal\
            \ version of this object that can be used by clients to determine when\
            \ objects have changed. May be used for optimistic concurrency, change\
            \ detection, and the watch operation on a resource or set of resources.\
            \ Clients must treat these values as opaque and passed unmodified back\
            \ to the server or omit the value to disable conflict-detection."
          title: resourceVersion
          type: string
        selfLink:
          description: URL representing this object.
          title: selfLink
          type: string
        uid:
          description: "Unique, system-generated identifier for this resource."
          title: uid
          type: string
      title: ObjectMeta
      type: object
    Overrides:
      description: RunJob Overrides that contains Execution fields to be overridden
        on the go.
      example:
        taskCount: 0
        containerOverrides:
        - args:
          - args
          - args
          name: name
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
              configMapKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
              configMapKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
          clearArgs: true
        - args:
          - args
          - args
          name: name
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
              configMapKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
              configMapKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
          clearArgs: true
        timeoutSeconds: 6
      properties:
        containerOverrides:
          description: Per container override specification.
          items:
            $ref: '#/components/schemas/ContainerOverride'
          title: containerOverrides
          type: array
        taskCount:
          description: The desired number of tasks the execution should run. Will
            replace existing task_count value.
          format: int32
          title: taskCount
          type: integer
        timeoutSeconds:
          description: Duration in seconds the task may be active before the system
            will actively try to mark it failed and kill associated containers. Will
            replace existing timeout_seconds value.
          format: int32
          title: timeoutSeconds
          type: integer
      title: Overrides
      type: object
    OwnerReference:
      description: This is not supported or used by Cloud Run.
      example:
        uid: uid
        controller: true
        apiVersion: apiVersion
        kind: kind
        name: name
        blockOwnerDeletion: true
      properties:
        apiVersion:
          description: This is not supported or used by Cloud Run.
          title: apiVersion
          type: string
        blockOwnerDeletion:
          description: This is not supported or used by Cloud Run.
          title: blockOwnerDeletion
          type: boolean
        controller:
          description: This is not supported or used by Cloud Run.
          title: controller
          type: boolean
        kind:
          description: This is not supported or used by Cloud Run.
          title: kind
          type: string
        name:
          description: This is not supported or used by Cloud Run.
          title: name
          type: string
        uid:
          description: This is not supported or used by Cloud Run.
          title: uid
          type: string
      title: OwnerReference
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies\
        \ access controls for Google Cloud resources. A `Policy` is a collection of\
        \ `bindings`. A `binding` binds one or more `members`, or principals, to a\
        \ single `role`. Principals can be user accounts, service accounts, Google\
        \ groups, and domains (such as G Suite). A `role` is a named list of permissions;\
        \ each `role` can be an IAM predefined role or a user-created custom role.\
        \ For some types of Google Cloud resources, a `binding` can also specify a\
        \ `condition`, which is a logical expression that allows access to a resource\
        \ only if the expression evaluates to `true`. A condition can add constraints\
        \ based on attributes of the request, the resource, or both. To learn which\
        \ resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\
        \ **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\"\
        , \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\",\
        \ \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\
        \ ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\"\
        : [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\"\
        , \"description\": \"Does not grant access after Sep 2020\", \"expression\"\
        : \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\"\
        : \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: -\
        \ members: - user:mike@example.com - group:admins@example.com - domain:google.com\
        \ - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin\
        \ - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer\
        \ condition: title: expirable access description: Does not grant access after\
        \ Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\
        \ etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features,\
        \ see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      example:
        bindings:
        - condition:
            expression: expression
            description: description
            location: location
            title: title
          role: role
          members:
          - members
          - members
        - condition:
            expression: expression
            description: description
            location: location
            title: title
          role: role
          members:
          - members
          - members
        etag: etag
        version: 0
        auditConfigs:
        - auditLogConfigs:
          - logType: LOG_TYPE_UNSPECIFIED
            exemptedMembers:
            - exemptedMembers
            - exemptedMembers
          - logType: LOG_TYPE_UNSPECIFIED
            exemptedMembers:
            - exemptedMembers
            - exemptedMembers
          service: service
        - auditLogConfigs:
          - logType: LOG_TYPE_UNSPECIFIED
            exemptedMembers:
            - exemptedMembers
            - exemptedMembers
          - logType: LOG_TYPE_UNSPECIFIED
            exemptedMembers:
            - exemptedMembers
            - exemptedMembers
          service: service
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
          title: auditConfigs
          type: array
        bindings:
          description: "Associates a list of `members`, or principals, with a `role`.\
            \ Optionally, may specify a `condition` that determines how and when the\
            \ `bindings` are applied. Each of the `bindings` must contain at least\
            \ one principal. The `bindings` in a `Policy` can refer to up to 1,500\
            \ principals; up to 250 of these principals can be Google groups. Each\
            \ occurrence of a principal counts towards these limits. For example,\
            \ if the `bindings` grant 50 different roles to `user:alice@example.com`,\
            \ and not to any other principal, then you can add another 1,450 principals\
            \ to the `bindings` in the `Policy`."
          items:
            $ref: '#/components/schemas/Binding'
          title: bindings
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way\
            \ to help prevent simultaneous updates of a policy from overwriting each\
            \ other. It is strongly suggested that systems make use of the `etag`\
            \ in the read-modify-write cycle to perform policy updates in order to\
            \ avoid race conditions: An `etag` is returned in the response to `getIamPolicy`,\
            \ and systems are expected to put that etag in the request to `setIamPolicy`\
            \ to ensure that their change will be applied to the same version of the\
            \ policy. **Important:** If you use IAM Conditions, you must include the\
            \ `etag` field whenever you call `setIamPolicy`. If you omit this field,\
            \ then IAM allows you to overwrite a version `3` policy with a version\
            \ `1` policy, and all of the conditions in the version `3` policy are\
            \ lost."
          format: byte
          title: etag
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`,\
            \ `1`, and `3`. Requests that specify an invalid value are rejected. Any\
            \ operation that affects conditional role bindings must specify version\
            \ `3`. This requirement applies to the following operations: * Getting\
            \ a policy that includes a conditional role binding * Adding a conditional\
            \ role binding to a policy * Changing a conditional role binding in a\
            \ policy * Removing any role binding, with or without a condition, from\
            \ a policy that includes conditions **Important:** If you use IAM Conditions,\
            \ you must include the `etag` field whenever you call `setIamPolicy`.\
            \ If you omit this field, then IAM allows you to overwrite a version `3`\
            \ policy with a version `1` policy, and all of the conditions in the version\
            \ `3` policy are lost. If a policy does not include any conditions, operations\
            \ on that policy may specify any valid version or leave the field unset.\
            \ To learn which resources support conditions in their IAM policies, see\
            \ the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          title: version
          type: integer
      title: Policy
      type: object
    Probe:
      description: Probe describes a health check to be performed against a container
        to determine whether it is alive or ready to receive traffic.
      example:
        failureThreshold: 1
        periodSeconds: 7
        tcpSocket:
          port: 3
          host: host
        timeoutSeconds: 2
        successThreshold: 9
        initialDelaySeconds: 2
        exec:
          command:
          - command
          - command
        grpc:
          port: 5
          service: service
        httpGet:
          path: path
          scheme: scheme
          port: 5
          host: host
          httpHeaders:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        exec:
          $ref: '#/components/schemas/ExecAction'
        failureThreshold:
          description: Minimum consecutive failures for the probe to be considered
            failed after having succeeded. Defaults to 3. Minimum value is 1.
          format: int32
          title: failureThreshold
          type: integer
        grpc:
          $ref: '#/components/schemas/GRPCAction'
        httpGet:
          $ref: '#/components/schemas/HTTPGetAction'
        initialDelaySeconds:
          description: Number of seconds after the container has started before the
            probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum
            value for liveness probe is 3600. Maximum value for startup probe is 240.
          format: int32
          title: initialDelaySeconds
          type: integer
        periodSeconds:
          description: How often (in seconds) to perform the probe. Default to 10
            seconds. Minimum value is 1. Maximum value for liveness probe is 3600.
            Maximum value for startup probe is 240. Must be greater or equal than
            timeout_seconds.
          format: int32
          title: periodSeconds
          type: integer
        successThreshold:
          description: Minimum consecutive successes for the probe to be considered
            successful after having failed. Must be 1 if set.
          format: int32
          title: successThreshold
          type: integer
        tcpSocket:
          $ref: '#/components/schemas/TCPSocketAction'
        timeoutSeconds:
          description: "Number of seconds after which the probe times out. Defaults\
            \ to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller\
            \ than period_seconds; if period_seconds is not set, must be less or equal\
            \ than 10."
          format: int32
          title: timeoutSeconds
          type: integer
      title: Probe
      type: object
    ResourceRecord:
      description: A DNS resource record.
      example:
        rrdata: rrdata
        name: name
        type: RECORD_TYPE_UNSPECIFIED
      properties:
        name:
          description: "Relative name of the object affected by this record. Only\
            \ applicable for `CNAME` records. Example: 'www'."
          title: name
          type: string
        rrdata:
          description: "Data for this record. Values vary by record type, as defined\
            \ in RFC 1035 (section 5) and RFC 1034 (section 3.6.1)."
          title: rrdata
          type: string
        type:
          description: "Resource record type. Example: `AAAA`."
          enum:
          - RECORD_TYPE_UNSPECIFIED
          - A
          - AAAA
          - CNAME
          title: type
          type: string
      title: ResourceRecord
      type: object
    ResourceRequirements:
      description: ResourceRequirements describes the compute resource requirements.
      example:
        requests:
          key: requests
        limits:
          key: limits
      properties:
        limits:
          additionalProperties:
            type: string
          description: "Limits describes the maximum amount of compute resources allowed.\
            \ Only 'cpu' and 'memory' keys are supported. * For supported 'cpu' values,\
            \ go to https://cloud.google.com/run/docs/configuring/cpu. * For supported\
            \ 'memory' values and syntax, go to https://cloud.google.com/run/docs/configuring/memory-limits"
          title: limits
          type: object
        requests:
          additionalProperties:
            type: string
          description: "Requests describes the minimum amount of compute resources\
            \ required. Only `cpu` and `memory` are supported. If Requests is omitted\
            \ for a container, it defaults to Limits if that is explicitly specified,\
            \ otherwise to an implementation-defined value. * For supported 'cpu'\
            \ values, go to https://cloud.google.com/run/docs/configuring/cpu. * For\
            \ supported 'memory' values and syntax, go to https://cloud.google.com/run/docs/configuring/memory-limits"
          title: requests
          type: object
      title: ResourceRequirements
      type: object
    Revision:
      description: "Revision is an immutable snapshot of code and configuration. A\
        \ revision references a container image. Revisions are created by updates\
        \ to a Configuration. See also: https://github.com/knative/specs/blob/main/specs/serving/overview.md#revision"
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          containerConcurrency: 0
          enableServiceLinks: true
          serviceAccountName: serviceAccountName
          imagePullSecrets:
          - name: name
          - name: name
          volumes:
          - configMap:
              defaultMode: 1
              name: name
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
            emptyDir:
              sizeLimit: sizeLimit
              medium: medium
            csi:
              driver: driver
              readOnly: true
              volumeAttributes:
                key: volumeAttributes
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            secret:
              secretName: secretName
              defaultMode: 6
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
          - configMap:
              defaultMode: 1
              name: name
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
            emptyDir:
              sizeLimit: sizeLimit
              medium: medium
            csi:
              driver: driver
              readOnly: true
              volumeAttributes:
                key: volumeAttributes
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            secret:
              secretName: secretName
              defaultMode: 6
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
          timeoutSeconds: 6
          containers:
          - image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: requests
              limits:
                key: limits
            securityContext:
              runAsUser: 7
            startupProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            ports:
            - protocol: protocol
              name: name
              containerPort: 4
            - protocol: protocol
              name: name
              containerPort: 4
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            name: name
            readinessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            envFrom:
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
          - image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: requests
              limits:
                key: limits
            securityContext:
              runAsUser: 7
            startupProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            ports:
            - protocol: protocol
              name: name
              containerPort: 4
            - protocol: protocol
              name: name
              containerPort: 4
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            name: name
            readinessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            envFrom:
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
        status:
          desiredReplicas: 0
          conditions:
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          logUrl: logUrl
          serviceName: serviceName
          observedGeneration: 6
          imageDigest: imageDigest
      properties:
        apiVersion:
          description: The API version for this call such as "serving.knative.dev/v1".
          title: apiVersion
          type: string
        kind:
          description: "The kind of this resource, in this case \"Revision\"."
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/RevisionSpec'
        status:
          $ref: '#/components/schemas/RevisionStatus'
      title: Revision
      type: object
    RevisionSpec:
      description: RevisionSpec holds the desired state of the Revision (from the
        client).
      example:
        containerConcurrency: 0
        enableServiceLinks: true
        serviceAccountName: serviceAccountName
        imagePullSecrets:
        - name: name
        - name: name
        volumes:
        - configMap:
            defaultMode: 1
            name: name
            optional: true
            items:
            - mode: 1
              path: path
              key: key
            - mode: 1
              path: path
              key: key
          emptyDir:
            sizeLimit: sizeLimit
            medium: medium
          csi:
            driver: driver
            readOnly: true
            volumeAttributes:
              key: volumeAttributes
          name: name
          nfs:
            path: path
            server: server
            readOnly: true
          secret:
            secretName: secretName
            defaultMode: 6
            optional: true
            items:
            - mode: 1
              path: path
              key: key
            - mode: 1
              path: path
              key: key
        - configMap:
            defaultMode: 1
            name: name
            optional: true
            items:
            - mode: 1
              path: path
              key: key
            - mode: 1
              path: path
              key: key
          emptyDir:
            sizeLimit: sizeLimit
            medium: medium
          csi:
            driver: driver
            readOnly: true
            volumeAttributes:
              key: volumeAttributes
          name: name
          nfs:
            path: path
            server: server
            readOnly: true
          secret:
            secretName: secretName
            defaultMode: 6
            optional: true
            items:
            - mode: 1
              path: path
              key: key
            - mode: 1
              path: path
              key: key
        timeoutSeconds: 6
        containers:
        - image: image
          imagePullPolicy: imagePullPolicy
          livenessProbe:
            failureThreshold: 1
            periodSeconds: 7
            tcpSocket:
              port: 3
              host: host
            timeoutSeconds: 2
            successThreshold: 9
            initialDelaySeconds: 2
            exec:
              command:
              - command
              - command
            grpc:
              port: 5
              service: service
            httpGet:
              path: path
              scheme: scheme
              port: 5
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          terminationMessagePolicy: terminationMessagePolicy
          terminationMessagePath: terminationMessagePath
          workingDir: workingDir
          resources:
            requests:
              key: requests
            limits:
              key: limits
          securityContext:
            runAsUser: 7
          startupProbe:
            failureThreshold: 1
            periodSeconds: 7
            tcpSocket:
              port: 3
              host: host
            timeoutSeconds: 2
            successThreshold: 9
            initialDelaySeconds: 2
            exec:
              command:
              - command
              - command
            grpc:
              port: 5
              service: service
            httpGet:
              path: path
              scheme: scheme
              port: 5
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
              configMapKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
              configMapKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
          ports:
          - protocol: protocol
            name: name
            containerPort: 4
          - protocol: protocol
            name: name
            containerPort: 4
          command:
          - command
          - command
          volumeMounts:
          - mountPath: mountPath
            name: name
            readOnly: true
            subPath: subPath
          - mountPath: mountPath
            name: name
            readOnly: true
            subPath: subPath
          args:
          - args
          - args
          name: name
          readinessProbe:
            failureThreshold: 1
            periodSeconds: 7
            tcpSocket:
              port: 3
              host: host
            timeoutSeconds: 2
            successThreshold: 9
            initialDelaySeconds: 2
            exec:
              command:
              - command
              - command
            grpc:
              port: 5
              service: service
            httpGet:
              path: path
              scheme: scheme
              port: 5
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          envFrom:
          - configMapRef:
              localObjectReference:
                name: name
              name: name
              optional: true
            prefix: prefix
            secretRef:
              localObjectReference:
                name: name
              name: name
              optional: true
          - configMapRef:
              localObjectReference:
                name: name
              name: name
              optional: true
            prefix: prefix
            secretRef:
              localObjectReference:
                name: name
              name: name
              optional: true
        - image: image
          imagePullPolicy: imagePullPolicy
          livenessProbe:
            failureThreshold: 1
            periodSeconds: 7
            tcpSocket:
              port: 3
              host: host
            timeoutSeconds: 2
            successThreshold: 9
            initialDelaySeconds: 2
            exec:
              command:
              - command
              - command
            grpc:
              port: 5
              service: service
            httpGet:
              path: path
              scheme: scheme
              port: 5
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          terminationMessagePolicy: terminationMessagePolicy
          terminationMessagePath: terminationMessagePath
          workingDir: workingDir
          resources:
            requests:
              key: requests
            limits:
              key: limits
          securityContext:
            runAsUser: 7
          startupProbe:
            failureThreshold: 1
            periodSeconds: 7
            tcpSocket:
              port: 3
              host: host
            timeoutSeconds: 2
            successThreshold: 9
            initialDelaySeconds: 2
            exec:
              command:
              - command
              - command
            grpc:
              port: 5
              service: service
            httpGet:
              path: path
              scheme: scheme
              port: 5
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
              configMapKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
              configMapKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
          ports:
          - protocol: protocol
            name: name
            containerPort: 4
          - protocol: protocol
            name: name
            containerPort: 4
          command:
          - command
          - command
          volumeMounts:
          - mountPath: mountPath
            name: name
            readOnly: true
            subPath: subPath
          - mountPath: mountPath
            name: name
            readOnly: true
            subPath: subPath
          args:
          - args
          - args
          name: name
          readinessProbe:
            failureThreshold: 1
            periodSeconds: 7
            tcpSocket:
              port: 3
              host: host
            timeoutSeconds: 2
            successThreshold: 9
            initialDelaySeconds: 2
            exec:
              command:
              - command
              - command
            grpc:
              port: 5
              service: service
            httpGet:
              path: path
              scheme: scheme
              port: 5
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          envFrom:
          - configMapRef:
              localObjectReference:
                name: name
              name: name
              optional: true
            prefix: prefix
            secretRef:
              localObjectReference:
                name: name
              name: name
              optional: true
          - configMapRef:
              localObjectReference:
                name: name
              name: name
              optional: true
            prefix: prefix
            secretRef:
              localObjectReference:
                name: name
              name: name
              optional: true
      properties:
        containerConcurrency:
          description: "ContainerConcurrency specifies the maximum allowed in-flight\
            \ (concurrent) requests per container instance of the Revision. If not\
            \ specified, defaults to 80."
          format: int32
          title: containerConcurrency
          type: integer
        containers:
          description: "Required. Containers holds the single container that defines\
            \ the unit of execution for this Revision. In the context of a Revision,\
            \ we disallow a number of fields on this Container, including: name and\
            \ lifecycle. In Cloud Run, only a single container may be provided."
          items:
            $ref: '#/components/schemas/Container'
          title: containers
          type: array
        enableServiceLinks:
          description: Not supported by Cloud Run.
          title: enableServiceLinks
          type: boolean
        imagePullSecrets:
          description: Not supported by Cloud Run.
          items:
            $ref: '#/components/schemas/LocalObjectReference'
          title: imagePullSecrets
          type: array
        serviceAccountName:
          description: "Email address of the IAM service account associated with the\
            \ revision of the service. The service account represents the identity\
            \ of the running revision, and determines what permissions the revision\
            \ has. If not provided, the revision will use the project's default service\
            \ account."
          title: serviceAccountName
          type: string
        timeoutSeconds:
          description: "TimeoutSeconds holds the max duration the instance is allowed\
            \ for responding to a request. Cloud Run: defaults to 300 seconds (5 minutes).\
            \ Maximum allowed value is 3600 seconds (1 hour)."
          format: int32
          title: timeoutSeconds
          type: integer
        volumes:
          items:
            $ref: '#/components/schemas/Volume'
          title: volumes
          type: array
      title: RevisionSpec
      type: object
    RevisionStatus:
      description: RevisionStatus communicates the observed state of the Revision
        (from the controller).
      example:
        desiredReplicas: 0
        conditions:
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        logUrl: logUrl
        serviceName: serviceName
        observedGeneration: 6
        imageDigest: imageDigest
      properties:
        conditions:
          description: "Conditions communicate information about ongoing/complete\
            \ reconciliation processes that bring the \"spec\" inline with the observed\
            \ state of the world. As a Revision is being prepared, it will incrementally\
            \ update conditions. Revision-specific conditions include: * `ResourcesAvailable`:\
            \ `True` when underlying resources have been provisioned. * `ContainerHealthy`:\
            \ `True` when the Revision readiness check completes. * `Active`: `True`\
            \ when the Revision may receive traffic."
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          title: conditions
          type: array
        desiredReplicas:
          description: "Output only. The configured number of instances running this\
            \ revision. For Cloud Run, this only includes instances provisioned using\
            \ the minScale annotation. It does not include instances created by autoscaling."
          format: int32
          readOnly: true
          title: desiredReplicas
          type: integer
        imageDigest:
          description: ImageDigest holds the resolved digest for the image specified
            within .Spec.Container.Image. The digest is resolved during the creation
            of Revision. This field holds the digest value regardless of whether a
            tag or digest was originally specified in the Container object.
          title: imageDigest
          type: string
        logUrl:
          description: Optional. Specifies the generated logging url for this particular
            revision based on the revision url template specified in the controller's
            config.
          title: logUrl
          type: string
        observedGeneration:
          description: "ObservedGeneration is the 'Generation' of the Revision that\
            \ was last processed by the controller. Clients polling for completed\
            \ reconciliation should poll until observedGeneration = metadata.generation,\
            \ and the Ready condition's status is True or False."
          format: int32
          title: observedGeneration
          type: integer
        serviceName:
          description: Not currently used by Cloud Run.
          title: serviceName
          type: string
      title: RevisionStatus
      type: object
    RevisionTemplate:
      description: RevisionTemplateSpec describes the data a revision should have
        when created from a template.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        spec:
          containerConcurrency: 0
          enableServiceLinks: true
          serviceAccountName: serviceAccountName
          imagePullSecrets:
          - name: name
          - name: name
          volumes:
          - configMap:
              defaultMode: 1
              name: name
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
            emptyDir:
              sizeLimit: sizeLimit
              medium: medium
            csi:
              driver: driver
              readOnly: true
              volumeAttributes:
                key: volumeAttributes
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            secret:
              secretName: secretName
              defaultMode: 6
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
          - configMap:
              defaultMode: 1
              name: name
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
            emptyDir:
              sizeLimit: sizeLimit
              medium: medium
            csi:
              driver: driver
              readOnly: true
              volumeAttributes:
                key: volumeAttributes
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            secret:
              secretName: secretName
              defaultMode: 6
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
          timeoutSeconds: 6
          containers:
          - image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: requests
              limits:
                key: limits
            securityContext:
              runAsUser: 7
            startupProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            ports:
            - protocol: protocol
              name: name
              containerPort: 4
            - protocol: protocol
              name: name
              containerPort: 4
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            name: name
            readinessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            envFrom:
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
          - image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: requests
              limits:
                key: limits
            securityContext:
              runAsUser: 7
            startupProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            ports:
            - protocol: protocol
              name: name
              containerPort: 4
            - protocol: protocol
              name: name
              containerPort: 4
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            name: name
            readinessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            envFrom:
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
      properties:
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/RevisionSpec'
      title: RevisionTemplate
      type: object
    Route:
      description: "Route is responsible for configuring ingress over a collection\
        \ of Revisions. Some of the Revisions a Route distributes traffic over may\
        \ be specified by referencing the Configuration responsible for creating them;\
        \ in these cases the Route is additionally responsible for monitoring the\
        \ Configuration for \"latest ready\" revision changes, and smoothly rolling\
        \ out latest revisions. Cloud Run currently supports referencing a single\
        \ Configuration to automatically deploy the \"latest ready\" Revision from\
        \ that Configuration."
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          traffic:
          - revisionName: revisionName
            configurationName: configurationName
            tag: tag
            latestRevision: true
            percent: 1
            url: url
          - revisionName: revisionName
            configurationName: configurationName
            tag: tag
            latestRevision: true
            percent: 1
            url: url
        status:
          address:
            url: url
          conditions:
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          observedGeneration: 0
          url: url
          traffic:
          - revisionName: revisionName
            configurationName: configurationName
            tag: tag
            latestRevision: true
            percent: 1
            url: url
          - revisionName: revisionName
            configurationName: configurationName
            tag: tag
            latestRevision: true
            percent: 1
            url: url
      properties:
        apiVersion:
          description: The API version for this call such as "serving.knative.dev/v1".
          title: apiVersion
          type: string
        kind:
          description: "The kind of this resource, in this case always \"Route\"."
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/RouteSpec'
        status:
          $ref: '#/components/schemas/RouteStatus'
      title: Route
      type: object
    RouteSpec:
      description: RouteSpec holds the desired state of the Route (from the client).
      example:
        traffic:
        - revisionName: revisionName
          configurationName: configurationName
          tag: tag
          latestRevision: true
          percent: 1
          url: url
        - revisionName: revisionName
          configurationName: configurationName
          tag: tag
          latestRevision: true
          percent: 1
          url: url
      properties:
        traffic:
          description: Traffic specifies how to distribute traffic over a collection
            of Knative Revisions and Configurations. Cloud Run currently supports
            a single configurationName.
          items:
            $ref: '#/components/schemas/TrafficTarget'
          title: traffic
          type: array
      title: RouteSpec
      type: object
    RouteStatus:
      description: RouteStatus communicates the observed state of the Route (from
        the controller).
      example:
        address:
          url: url
        conditions:
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        observedGeneration: 0
        url: url
        traffic:
        - revisionName: revisionName
          configurationName: configurationName
          tag: tag
          latestRevision: true
          percent: 1
          url: url
        - revisionName: revisionName
          configurationName: configurationName
          tag: tag
          latestRevision: true
          percent: 1
          url: url
      properties:
        address:
          $ref: '#/components/schemas/Addressable'
        conditions:
          description: Conditions communicates information about ongoing/complete
            reconciliation processes that bring the "spec" inline with the observed
            state of the world.
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          title: conditions
          type: array
        observedGeneration:
          description: "ObservedGeneration is the 'Generation' of the Route that was\
            \ last processed by the controller. Clients polling for completed reconciliation\
            \ should poll until observedGeneration = metadata.generation and the Ready\
            \ condition's status is True or False. Note that providing a TrafficTarget\
            \ that has latest_revision=True will result in a Route that does not increment\
            \ either its metadata.generation or its observedGeneration, as new \"\
            latest ready\" revisions from the Configuration are processed without\
            \ an update to the Route's spec."
          format: int32
          title: observedGeneration
          type: integer
        traffic:
          description: "Traffic holds the configured traffic distribution. These entries\
            \ will always contain RevisionName references. When ConfigurationName\
            \ appears in the spec, this will hold the LatestReadyRevisionName that\
            \ was last observed."
          items:
            $ref: '#/components/schemas/TrafficTarget'
          title: traffic
          type: array
        url:
          description: "URL holds the url that will distribute traffic over the provided\
            \ traffic targets. It generally has the form: `https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app`"
          title: url
          type: string
      title: RouteStatus
      type: object
    RunJobRequest:
      description: Request message for creating a new execution of a job.
      example:
        overrides:
          taskCount: 0
          containerOverrides:
          - args:
            - args
            - args
            name: name
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            clearArgs: true
          - args:
            - args
            - args
            name: name
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            clearArgs: true
          timeoutSeconds: 6
      properties:
        overrides:
          $ref: '#/components/schemas/Overrides'
      title: RunJobRequest
      type: object
    SecretEnvSource:
      description: Not supported by Cloud Run. SecretEnvSource selects a Secret to
        populate the environment variables with. The contents of the target Secret's
        Data field will represent the key-value pairs as environment variables.
      example:
        localObjectReference:
          name: name
        name: name
        optional: true
      properties:
        localObjectReference:
          $ref: '#/components/schemas/LocalObjectReference'
        name:
          description: The Secret to select from.
          title: name
          type: string
        optional:
          description: Specify whether the Secret must be defined
          title: optional
          type: boolean
      title: SecretEnvSource
      type: object
    SecretKeySelector:
      description: SecretKeySelector selects a key of a Secret.
      example:
        localObjectReference:
          name: name
        name: name
        optional: true
        key: key
      properties:
        key:
          description: "Required. A Cloud Secret Manager secret version. Must be 'latest'\
            \ for the latest version, an integer for a specific version, or a version\
            \ alias. The key of the secret to select from. Must be a valid secret\
            \ key."
          title: key
          type: string
        localObjectReference:
          $ref: '#/components/schemas/LocalObjectReference'
        name:
          description: "The name of the secret in Cloud Secret Manager. By default,\
            \ the secret is assumed to be in the same project. If the secret is in\
            \ another project, you must define an alias. An alias definition has the\
            \ form: :projects//secrets/. If multiple alias definitions are needed,\
            \ they must be separated by commas. The alias definitions must be set\
            \ on the run.googleapis.com/secrets annotation. The name of the secret\
            \ in the pod's namespace to select from."
          title: name
          type: string
        optional:
          description: Specify whether the Secret or its key must be defined.
          title: optional
          type: boolean
      title: SecretKeySelector
      type: object
    SecretVolumeSource:
      description: "A volume representing a secret stored in Google Secret Manager.\
        \ The secret's value will be presented as the content of a file whose name\
        \ is defined in the item path. If no items are defined, the name of the file\
        \ is the secret_name. The contents of the target Secret's Data field will\
        \ be presented in a volume as files using the keys in the Data field as the\
        \ file names."
      example:
        secretName: secretName
        defaultMode: 6
        optional: true
        items:
        - mode: 1
          path: path
          key: key
        - mode: 1
          path: path
          key: key
      properties:
        defaultMode:
          description: "Integer representation of mode bits to use on created files\
            \ by default. Must be a value between 01 and 0777 (octal). If 0 or not\
            \ set, it will default to 0444. Directories within the path are not affected\
            \ by this setting. Notes * Internally, a umask of 0222 will be applied\
            \ to any non-zero value. * This is an integer representation of the mode\
            \ bits. So, the octal integer value should look exactly as the chmod numeric\
            \ notation with a leading zero. Some examples: for chmod 777 (a=rwx),\
            \ set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set\
            \ to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set\
            \ to 0755 (octal) or 493 (base-10). * This might be in conflict with other\
            \ options that affect the file mode, like fsGroup, and the result can\
            \ be other mode bits set."
          format: int32
          title: defaultMode
          type: integer
        items:
          description: "A list of secret versions to mount in the volume. If no items\
            \ are specified, the volume will expose a file with the same name as the\
            \ secret name. The contents of the file will be the data in the latest\
            \ version of the secret. If items are specified, the key will be used\
            \ as the version to fetch from Cloud Secret Manager and the path will\
            \ be the name of the file exposed in the volume. When items are defined,\
            \ they must specify both a key and a path."
          items:
            $ref: '#/components/schemas/KeyToPath'
          title: items
          type: array
        optional:
          description: Not supported by Cloud Run.
          title: optional
          type: boolean
        secretName:
          description: "The name of the secret in Cloud Secret Manager. By default,\
            \ the secret is assumed to be in the same project. If the secret is in\
            \ another project, you must define an alias. An alias definition has the\
            \ form: :projects//secrets/. If multiple alias definitions are needed,\
            \ they must be separated by commas. The alias definitions must be set\
            \ on the run.googleapis.com/secrets annotation. Name of the secret in\
            \ the container's namespace to use."
          title: secretName
          type: string
      title: SecretVolumeSource
      type: object
    SecurityContext:
      description: "Not supported by Cloud Run. SecurityContext holds security configuration\
        \ that will be applied to a container. Some fields are present in both SecurityContext\
        \ and PodSecurityContext. When both are set, the values in SecurityContext\
        \ take precedence."
      example:
        runAsUser: 7
      properties:
        runAsUser:
          description: "The UID to run the entrypoint of the container process. Defaults\
            \ to user specified in image metadata if unspecified. May also be set\
            \ in PodSecurityContext. If set in both SecurityContext and PodSecurityContext,\
            \ the value specified in SecurityContext takes precedence."
          format: int32
          title: runAsUser
          type: integer
      title: SecurityContext
      type: object
    Service:
      description: "Service acts as a top-level container that manages a set of Routes\
        \ and Configurations which implement a network service. Service exists to\
        \ provide a singular abstraction which can be access controlled, reasoned\
        \ about, and which encapsulates software lifecycle decisions such as rollout\
        \ policy and team resource ownership. Service acts only as an orchestrator\
        \ of the underlying Routes and Configurations (much as a kubernetes Deployment\
        \ orchestrates ReplicaSets). The Service's controller will track the statuses\
        \ of its owned Configuration and Route, reflecting their statuses and conditions\
        \ as its own."
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          template:
            metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations:
                key: annotations
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels:
                key: labels
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            spec:
              containerConcurrency: 0
              enableServiceLinks: true
              serviceAccountName: serviceAccountName
              imagePullSecrets:
              - name: name
              - name: name
              volumes:
              - configMap:
                  defaultMode: 1
                  name: name
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                csi:
                  driver: driver
                  readOnly: true
                  volumeAttributes:
                    key: volumeAttributes
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                secret:
                  secretName: secretName
                  defaultMode: 6
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
              - configMap:
                  defaultMode: 1
                  name: name
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                csi:
                  driver: driver
                  readOnly: true
                  volumeAttributes:
                    key: volumeAttributes
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                secret:
                  secretName: secretName
                  defaultMode: 6
                  optional: true
                  items:
                  - mode: 1
                    path: path
                    key: key
                  - mode: 1
                    path: path
                    key: key
              timeoutSeconds: 6
              containers:
              - image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests:
                    key: requests
                  limits:
                    key: limits
                securityContext:
                  runAsUser: 7
                startupProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                ports:
                - protocol: protocol
                  name: name
                  containerPort: 4
                - protocol: protocol
                  name: name
                  containerPort: 4
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                name: name
                readinessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                envFrom:
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
              - image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests:
                    key: requests
                  limits:
                    key: limits
                securityContext:
                  runAsUser: 7
                startupProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                    configMapKeyRef:
                      localObjectReference:
                        name: name
                      name: name
                      optional: true
                      key: key
                ports:
                - protocol: protocol
                  name: name
                  containerPort: 4
                - protocol: protocol
                  name: name
                  containerPort: 4
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                name: name
                readinessProbe:
                  failureThreshold: 1
                  periodSeconds: 7
                  tcpSocket:
                    port: 3
                    host: host
                  timeoutSeconds: 2
                  successThreshold: 9
                  initialDelaySeconds: 2
                  exec:
                    command:
                    - command
                    - command
                  grpc:
                    port: 5
                    service: service
                  httpGet:
                    path: path
                    scheme: scheme
                    port: 5
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                envFrom:
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                - configMapRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
          traffic:
          - revisionName: revisionName
            configurationName: configurationName
            tag: tag
            latestRevision: true
            percent: 1
            url: url
          - revisionName: revisionName
            configurationName: configurationName
            tag: tag
            latestRevision: true
            percent: 1
            url: url
        status:
          address:
            url: url
          latestCreatedRevisionName: latestCreatedRevisionName
          conditions:
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          latestReadyRevisionName: latestReadyRevisionName
          observedGeneration: 5
          url: url
          traffic:
          - revisionName: revisionName
            configurationName: configurationName
            tag: tag
            latestRevision: true
            percent: 1
            url: url
          - revisionName: revisionName
            configurationName: configurationName
            tag: tag
            latestRevision: true
            percent: 1
            url: url
      properties:
        apiVersion:
          description: The API version for this call. It must be "serving.knative.dev/v1".
          title: apiVersion
          type: string
        kind:
          description: The kind of resource. It must be "Service".
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/ServiceSpec'
        status:
          $ref: '#/components/schemas/ServiceStatus'
      title: Service
      type: object
    ServiceSpec:
      description: "ServiceSpec holds the desired state of the Route (from the client),\
        \ which is used to manipulate the underlying Route and Configuration(s)."
      example:
        template:
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          spec:
            containerConcurrency: 0
            enableServiceLinks: true
            serviceAccountName: serviceAccountName
            imagePullSecrets:
            - name: name
            - name: name
            volumes:
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            - configMap:
                defaultMode: 1
                name: name
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              csi:
                driver: driver
                readOnly: true
                volumeAttributes:
                  key: volumeAttributes
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              secret:
                secretName: secretName
                defaultMode: 6
                optional: true
                items:
                - mode: 1
                  path: path
                  key: key
                - mode: 1
                  path: path
                  key: key
            timeoutSeconds: 6
            containers:
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
            - image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: requests
                limits:
                  key: limits
              securityContext:
                runAsUser: 7
              startupProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
                  configMapKeyRef:
                    localObjectReference:
                      name: name
                    name: name
                    optional: true
                    key: key
              ports:
              - protocol: protocol
                name: name
                containerPort: 4
              - protocol: protocol
                name: name
                containerPort: 4
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              name: name
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 7
                tcpSocket:
                  port: 3
                  host: host
                timeoutSeconds: 2
                successThreshold: 9
                initialDelaySeconds: 2
                exec:
                  command:
                  - command
                  - command
                grpc:
                  port: 5
                  service: service
                httpGet:
                  path: path
                  scheme: scheme
                  port: 5
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              envFrom:
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
              - configMapRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
        traffic:
        - revisionName: revisionName
          configurationName: configurationName
          tag: tag
          latestRevision: true
          percent: 1
          url: url
        - revisionName: revisionName
          configurationName: configurationName
          tag: tag
          latestRevision: true
          percent: 1
          url: url
      properties:
        template:
          $ref: '#/components/schemas/RevisionTemplate'
        traffic:
          description: Specifies how to distribute traffic over a collection of Knative
            Revisions and Configurations to the Service's main URL.
          items:
            $ref: '#/components/schemas/TrafficTarget'
          title: traffic
          type: array
      title: ServiceSpec
      type: object
    ServiceStatus:
      description: The current state of the Service. Output only.
      example:
        address:
          url: url
        latestCreatedRevisionName: latestCreatedRevisionName
        conditions:
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        latestReadyRevisionName: latestReadyRevisionName
        observedGeneration: 5
        url: url
        traffic:
        - revisionName: revisionName
          configurationName: configurationName
          tag: tag
          latestRevision: true
          percent: 1
          url: url
        - revisionName: revisionName
          configurationName: configurationName
          tag: tag
          latestRevision: true
          percent: 1
          url: url
      properties:
        address:
          $ref: '#/components/schemas/Addressable'
        conditions:
          description: "Conditions communicate information about ongoing/complete\
            \ reconciliation processes that bring the `spec` inline with the observed\
            \ state of the world. Service-specific conditions include: * `ConfigurationsReady`:\
            \ `True` when the underlying Configuration is ready. * `RoutesReady`:\
            \ `True` when the underlying Route is ready. * `Ready`: `True` when all\
            \ underlying resources are ready."
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          title: conditions
          type: array
        latestCreatedRevisionName:
          description: "Name of the last revision that was created from this Service's\
            \ Configuration. It might not be ready yet, for that use LatestReadyRevisionName."
          title: latestCreatedRevisionName
          type: string
        latestReadyRevisionName:
          description: Name of the latest Revision from this Service's Configuration
            that has had its `Ready` condition become `True`.
          title: latestReadyRevisionName
          type: string
        observedGeneration:
          description: Returns the generation last seen by the system. Clients polling
            for completed reconciliation should poll until observedGeneration = metadata.generation
            and the Ready condition's status is True or False.
          format: int32
          title: observedGeneration
          type: integer
        traffic:
          description: "Holds the configured traffic distribution. These entries will\
            \ always contain RevisionName references. When ConfigurationName appears\
            \ in the spec, this will hold the LatestReadyRevisionName that we last\
            \ observed."
          items:
            $ref: '#/components/schemas/TrafficTarget'
          title: traffic
          type: array
        url:
          description: "URL that will distribute traffic over the provided traffic\
            \ targets. It generally has the form `https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app`"
          title: url
          type: string
      title: ServiceStatus
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      example:
        updateMask: updateMask
        policy:
          bindings:
          - condition:
              expression: expression
              description: description
              location: location
              title: title
            role: role
            members:
            - members
            - members
          - condition:
              expression: expression
              description: description
              location: location
              title: title
            role: role
            members:
            - members
            - members
          etag: etag
          version: 0
          auditConfigs:
          - auditLogConfigs:
            - logType: LOG_TYPE_UNSPECIFIED
              exemptedMembers:
              - exemptedMembers
              - exemptedMembers
            - logType: LOG_TYPE_UNSPECIFIED
              exemptedMembers:
              - exemptedMembers
              - exemptedMembers
            service: service
          - auditLogConfigs:
            - logType: LOG_TYPE_UNSPECIFIED
              exemptedMembers:
              - exemptedMembers
              - exemptedMembers
            - logType: LOG_TYPE_UNSPECIFIED
              exemptedMembers:
              - exemptedMembers
              - exemptedMembers
            service: service
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: "OPTIONAL: A FieldMask specifying which fields of the policy\
            \ to modify. Only the fields in the mask will be modified. If no mask\
            \ is provided, the following default mask is used: `paths: \"bindings,\
            \ etag\"`"
          format: google-fieldmask
          title: updateMask
          type: string
      title: SetIamPolicyRequest
      type: object
    Status:
      description: Status is a return value for calls that don't return other objects.
      example:
        reason: reason
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        code: 0
        details:
          uid: uid
          kind: kind
          causes:
          - reason: reason
            field: field
            message: message
          - reason: reason
            field: field
            message: message
          retryAfterSeconds: 6
          name: name
          group: group
        message: message
        status: status
      properties:
        code:
          description: "Suggested HTTP return code for this status, 0 if not set."
          format: int32
          title: code
          type: integer
        details:
          $ref: '#/components/schemas/StatusDetails'
        message:
          description: A human-readable description of the status of this operation.
          title: message
          type: string
        metadata:
          $ref: '#/components/schemas/ListMeta'
        reason:
          description: A machine-readable description of why this operation is in
            the "Failure" status. If this value is empty there is no information available.
            A Reason clarifies an HTTP status code but does not override it.
          title: reason
          type: string
        status:
          description: "Status of the operation. One of: \"Success\" or \"Failure\"\
            ."
          title: status
          type: string
      title: Status
      type: object
    StatusCause:
      description: "StatusCause provides more information about an api.Status failure,\
        \ including cases when multiple errors are encountered."
      example:
        reason: reason
        field: field
        message: message
      properties:
        field:
          description: "The field of the resource that has caused this error, as named\
            \ by its JSON serialization. May include dot and postfix notation for\
            \ nested attributes. Arrays are zero-indexed. Fields may appear more than\
            \ once in an array of causes due to fields having multiple errors. Examples:\
            \ \"name\" - the field \"name\" on the current resource \"items[0].name\"\
            \ - the field \"name\" on the first array entry in \"items\""
          title: field
          type: string
        message:
          description: A human-readable description of the cause of the error. This
            field may be presented as-is to a reader.
          title: message
          type: string
        reason:
          description: A machine-readable description of the cause of the error. If
            this value is empty there is no information available.
          title: reason
          type: string
      title: StatusCause
      type: object
    StatusDetails:
      description: "StatusDetails is a set of additional properties that MAY be set\
        \ by the server to provide additional information about a response. The Reason\
        \ field of a Status object defines what attributes will be set. Clients must\
        \ ignore fields that do not match the defined type of each attribute, and\
        \ should assume that any attribute may be empty, invalid, or under defined."
      example:
        uid: uid
        kind: kind
        causes:
        - reason: reason
          field: field
          message: message
        - reason: reason
          field: field
          message: message
        retryAfterSeconds: 6
        name: name
        group: group
      properties:
        causes:
          description: The Causes array includes more details associated with the
            StatusReason failure. Not all StatusReasons may provide detailed causes.
          items:
            $ref: '#/components/schemas/StatusCause'
          title: causes
          type: array
        group:
          description: The group attribute of the resource associated with the status
            StatusReason.
          title: group
          type: string
        kind:
          description: The kind attribute of the resource associated with the status
            StatusReason. On some operations may differ from the requested resource
            Kind.
          title: kind
          type: string
        name:
          description: The name attribute of the resource associated with the status
            StatusReason (when there is a single name which can be described).
          title: name
          type: string
        retryAfterSeconds:
          description: "If specified, the time in seconds before the operation should\
            \ be retried. Some errors may indicate the client must take an alternate\
            \ action - for those errors this field may indicate how long to wait before\
            \ taking the alternate action."
          format: int32
          title: retryAfterSeconds
          type: integer
        uid:
          description: UID of the resource. (when there is a single resource which
            can be described).
          title: uid
          type: string
      title: StatusDetails
      type: object
    TCPSocketAction:
      description: TCPSocketAction describes an action based on opening a socket
      example:
        port: 3
        host: host
      properties:
        host:
          description: Not supported by Cloud Run.
          title: host
          type: string
        port:
          description: Port number to access on the container. Number must be in the
            range 1 to 65535.
          format: int32
          title: port
          type: integer
      title: TCPSocketAction
      type: object
    Task:
      description: Task represents a single run of a container to completion.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          maxRetries: 1
          serviceAccountName: serviceAccountName
          volumes:
          - configMap:
              defaultMode: 1
              name: name
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
            emptyDir:
              sizeLimit: sizeLimit
              medium: medium
            csi:
              driver: driver
              readOnly: true
              volumeAttributes:
                key: volumeAttributes
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            secret:
              secretName: secretName
              defaultMode: 6
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
          - configMap:
              defaultMode: 1
              name: name
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
            emptyDir:
              sizeLimit: sizeLimit
              medium: medium
            csi:
              driver: driver
              readOnly: true
              volumeAttributes:
                key: volumeAttributes
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            secret:
              secretName: secretName
              defaultMode: 6
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
          timeoutSeconds: timeoutSeconds
          containers:
          - image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: requests
              limits:
                key: limits
            securityContext:
              runAsUser: 7
            startupProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            ports:
            - protocol: protocol
              name: name
              containerPort: 4
            - protocol: protocol
              name: name
              containerPort: 4
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            name: name
            readinessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            envFrom:
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
          - image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: requests
              limits:
                key: limits
            securityContext:
              runAsUser: 7
            startupProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            ports:
            - protocol: protocol
              name: name
              containerPort: 4
            - protocol: protocol
              name: name
              containerPort: 4
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            name: name
            readinessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            envFrom:
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
        status:
          retried: 5
          completionTime: completionTime
          index: 0
          startTime: startTime
          conditions:
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - severity: severity
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          lastAttemptResult:
            exitCode: 6
            status:
              code: 1
              details:
              - key: ""
              - key: ""
              message: message
          observedGeneration: 5
          logUri: logUri
      properties:
        apiVersion:
          description: "Optional. APIVersion defines the versioned schema of this\
            \ representation of an object. Servers should convert recognized schemas\
            \ to the latest internal value, and may reject unrecognized values."
          title: apiVersion
          type: string
        kind:
          description: Optional. Kind is a string value representing the REST resource
            this object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase.
          title: kind
          type: string
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/TaskSpec'
        status:
          $ref: '#/components/schemas/TaskStatus'
      title: Task
      type: object
    TaskAttemptResult:
      description: Result of a task attempt.
      example:
        exitCode: 6
        status:
          code: 1
          details:
          - key: ""
          - key: ""
          message: message
      properties:
        exitCode:
          description: Optional. The exit code of this attempt. This may be unset
            if the container was unable to exit cleanly with a code due to some other
            failure. See status field for possible failure details.
          format: int32
          title: exitCode
          type: integer
        status:
          $ref: '#/components/schemas/GoogleRpcStatus'
      title: TaskAttemptResult
      type: object
    TaskSpec:
      description: TaskSpec is a description of a task.
      example:
        maxRetries: 1
        serviceAccountName: serviceAccountName
        volumes:
        - configMap:
            defaultMode: 1
            name: name
            optional: true
            items:
            - mode: 1
              path: path
              key: key
            - mode: 1
              path: path
              key: key
          emptyDir:
            sizeLimit: sizeLimit
            medium: medium
          csi:
            driver: driver
            readOnly: true
            volumeAttributes:
              key: volumeAttributes
          name: name
          nfs:
            path: path
            server: server
            readOnly: true
          secret:
            secretName: secretName
            defaultMode: 6
            optional: true
            items:
            - mode: 1
              path: path
              key: key
            - mode: 1
              path: path
              key: key
        - configMap:
            defaultMode: 1
            name: name
            optional: true
            items:
            - mode: 1
              path: path
              key: key
            - mode: 1
              path: path
              key: key
          emptyDir:
            sizeLimit: sizeLimit
            medium: medium
          csi:
            driver: driver
            readOnly: true
            volumeAttributes:
              key: volumeAttributes
          name: name
          nfs:
            path: path
            server: server
            readOnly: true
          secret:
            secretName: secretName
            defaultMode: 6
            optional: true
            items:
            - mode: 1
              path: path
              key: key
            - mode: 1
              path: path
              key: key
        timeoutSeconds: timeoutSeconds
        containers:
        - image: image
          imagePullPolicy: imagePullPolicy
          livenessProbe:
            failureThreshold: 1
            periodSeconds: 7
            tcpSocket:
              port: 3
              host: host
            timeoutSeconds: 2
            successThreshold: 9
            initialDelaySeconds: 2
            exec:
              command:
              - command
              - command
            grpc:
              port: 5
              service: service
            httpGet:
              path: path
              scheme: scheme
              port: 5
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          terminationMessagePolicy: terminationMessagePolicy
          terminationMessagePath: terminationMessagePath
          workingDir: workingDir
          resources:
            requests:
              key: requests
            limits:
              key: limits
          securityContext:
            runAsUser: 7
          startupProbe:
            failureThreshold: 1
            periodSeconds: 7
            tcpSocket:
              port: 3
              host: host
            timeoutSeconds: 2
            successThreshold: 9
            initialDelaySeconds: 2
            exec:
              command:
              - command
              - command
            grpc:
              port: 5
              service: service
            httpGet:
              path: path
              scheme: scheme
              port: 5
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
              configMapKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
              configMapKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
          ports:
          - protocol: protocol
            name: name
            containerPort: 4
          - protocol: protocol
            name: name
            containerPort: 4
          command:
          - command
          - command
          volumeMounts:
          - mountPath: mountPath
            name: name
            readOnly: true
            subPath: subPath
          - mountPath: mountPath
            name: name
            readOnly: true
            subPath: subPath
          args:
          - args
          - args
          name: name
          readinessProbe:
            failureThreshold: 1
            periodSeconds: 7
            tcpSocket:
              port: 3
              host: host
            timeoutSeconds: 2
            successThreshold: 9
            initialDelaySeconds: 2
            exec:
              command:
              - command
              - command
            grpc:
              port: 5
              service: service
            httpGet:
              path: path
              scheme: scheme
              port: 5
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          envFrom:
          - configMapRef:
              localObjectReference:
                name: name
              name: name
              optional: true
            prefix: prefix
            secretRef:
              localObjectReference:
                name: name
              name: name
              optional: true
          - configMapRef:
              localObjectReference:
                name: name
              name: name
              optional: true
            prefix: prefix
            secretRef:
              localObjectReference:
                name: name
              name: name
              optional: true
        - image: image
          imagePullPolicy: imagePullPolicy
          livenessProbe:
            failureThreshold: 1
            periodSeconds: 7
            tcpSocket:
              port: 3
              host: host
            timeoutSeconds: 2
            successThreshold: 9
            initialDelaySeconds: 2
            exec:
              command:
              - command
              - command
            grpc:
              port: 5
              service: service
            httpGet:
              path: path
              scheme: scheme
              port: 5
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          terminationMessagePolicy: terminationMessagePolicy
          terminationMessagePath: terminationMessagePath
          workingDir: workingDir
          resources:
            requests:
              key: requests
            limits:
              key: limits
          securityContext:
            runAsUser: 7
          startupProbe:
            failureThreshold: 1
            periodSeconds: 7
            tcpSocket:
              port: 3
              host: host
            timeoutSeconds: 2
            successThreshold: 9
            initialDelaySeconds: 2
            exec:
              command:
              - command
              - command
            grpc:
              port: 5
              service: service
            httpGet:
              path: path
              scheme: scheme
              port: 5
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
              configMapKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
              configMapKeyRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
                key: key
          ports:
          - protocol: protocol
            name: name
            containerPort: 4
          - protocol: protocol
            name: name
            containerPort: 4
          command:
          - command
          - command
          volumeMounts:
          - mountPath: mountPath
            name: name
            readOnly: true
            subPath: subPath
          - mountPath: mountPath
            name: name
            readOnly: true
            subPath: subPath
          args:
          - args
          - args
          name: name
          readinessProbe:
            failureThreshold: 1
            periodSeconds: 7
            tcpSocket:
              port: 3
              host: host
            timeoutSeconds: 2
            successThreshold: 9
            initialDelaySeconds: 2
            exec:
              command:
              - command
              - command
            grpc:
              port: 5
              service: service
            httpGet:
              path: path
              scheme: scheme
              port: 5
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          envFrom:
          - configMapRef:
              localObjectReference:
                name: name
              name: name
              optional: true
            prefix: prefix
            secretRef:
              localObjectReference:
                name: name
              name: name
              optional: true
          - configMapRef:
              localObjectReference:
                name: name
              name: name
              optional: true
            prefix: prefix
            secretRef:
              localObjectReference:
                name: name
              name: name
              optional: true
      properties:
        containers:
          description: Optional. List of containers belonging to the task. We disallow
            a number of fields on this Container.
          items:
            $ref: '#/components/schemas/Container'
          title: containers
          type: array
        maxRetries:
          description: "Optional. Number of retries allowed per task, before marking\
            \ this job failed. Defaults to 3."
          format: int32
          title: maxRetries
          type: integer
        serviceAccountName:
          description: "Optional. Email address of the IAM service account associated\
            \ with the task of a job execution. The service account represents the\
            \ identity of the running task, and determines what permissions the task\
            \ has. If not provided, the task will use the project's default service\
            \ account."
          title: serviceAccountName
          type: string
        timeoutSeconds:
          description: "Optional. Duration in seconds the task may be active before\
            \ the system will actively try to mark it failed and kill associated containers.\
            \ This applies per attempt of a task, meaning each retry can run for the\
            \ full timeout. Defaults to 600 seconds."
          format: int64
          title: timeoutSeconds
          type: string
        volumes:
          description: Optional. List of volumes that can be mounted by containers
            belonging to the task.
          items:
            $ref: '#/components/schemas/Volume'
          title: volumes
          type: array
      title: TaskSpec
      type: object
    TaskStatus:
      description: TaskStatus represents the status of a task.
      example:
        retried: 5
        completionTime: completionTime
        index: 0
        startTime: startTime
        conditions:
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - severity: severity
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        lastAttemptResult:
          exitCode: 6
          status:
            code: 1
            details:
            - key: ""
            - key: ""
            message: message
        observedGeneration: 5
        logUri: logUri
      properties:
        completionTime:
          description: Optional. Represents time when the task was completed. It is
            not guaranteed to be set in happens-before order across separate operations.
            It is represented in RFC3339 form and is in UTC.
          format: google-datetime
          title: completionTime
          type: string
        conditions:
          description: "Optional. Conditions communicate information about ongoing/complete\
            \ reconciliation processes that bring the \"spec\" inline with the observed\
            \ state of the world. Task-specific conditions include: * `Started`: `True`\
            \ when the task has started to execute. * `Completed`: `True` when the\
            \ task has succeeded. `False` when the task has failed."
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          title: conditions
          type: array
        index:
          description: "Required. Index of the task, unique per execution, and beginning\
            \ at 0."
          format: int32
          title: index
          type: integer
        lastAttemptResult:
          $ref: '#/components/schemas/TaskAttemptResult'
        logUri:
          description: Optional. URI where logs for this task can be found in Cloud
            Console.
          title: logUri
          type: string
        observedGeneration:
          description: Optional. The 'generation' of the task that was last processed
            by the controller.
          format: int32
          title: observedGeneration
          type: integer
        retried:
          description: Optional. The number of times this task was retried. Instances
            are retried when they fail up to the maxRetries limit.
          format: int32
          title: retried
          type: integer
        startTime:
          description: Optional. Represents time when the task started to run. It
            is not guaranteed to be set in happens-before order across separate operations.
            It is represented in RFC3339 form and is in UTC.
          format: google-datetime
          title: startTime
          type: string
      title: TaskStatus
      type: object
    TaskTemplateSpec:
      description: TaskTemplateSpec describes the data a task should have when created
        from a template.
      example:
        spec:
          maxRetries: 1
          serviceAccountName: serviceAccountName
          volumes:
          - configMap:
              defaultMode: 1
              name: name
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
            emptyDir:
              sizeLimit: sizeLimit
              medium: medium
            csi:
              driver: driver
              readOnly: true
              volumeAttributes:
                key: volumeAttributes
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            secret:
              secretName: secretName
              defaultMode: 6
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
          - configMap:
              defaultMode: 1
              name: name
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
            emptyDir:
              sizeLimit: sizeLimit
              medium: medium
            csi:
              driver: driver
              readOnly: true
              volumeAttributes:
                key: volumeAttributes
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            secret:
              secretName: secretName
              defaultMode: 6
              optional: true
              items:
              - mode: 1
                path: path
                key: key
              - mode: 1
                path: path
                key: key
          timeoutSeconds: timeoutSeconds
          containers:
          - image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: requests
              limits:
                key: limits
            securityContext:
              runAsUser: 7
            startupProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            ports:
            - protocol: protocol
              name: name
              containerPort: 4
            - protocol: protocol
              name: name
              containerPort: 4
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            name: name
            readinessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            envFrom:
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
          - image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: requests
              limits:
                key: limits
            securityContext:
              runAsUser: 7
            startupProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
                configMapKeyRef:
                  localObjectReference:
                    name: name
                  name: name
                  optional: true
                  key: key
            ports:
            - protocol: protocol
              name: name
              containerPort: 4
            - protocol: protocol
              name: name
              containerPort: 4
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            name: name
            readinessProbe:
              failureThreshold: 1
              periodSeconds: 7
              tcpSocket:
                port: 3
                host: host
              timeoutSeconds: 2
              successThreshold: 9
              initialDelaySeconds: 2
              exec:
                command:
                - command
                - command
              grpc:
                port: 5
                service: service
              httpGet:
                path: path
                scheme: scheme
                port: 5
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            envFrom:
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
            - configMapRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
              prefix: prefix
              secretRef:
                localObjectReference:
                  name: name
                name: name
                optional: true
      properties:
        spec:
          $ref: '#/components/schemas/TaskSpec'
      title: TaskTemplateSpec
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      example:
        permissions:
        - permissions
        - permissions
      properties:
        permissions:
          description: "The set of permissions to check for the `resource`. Permissions\
            \ with wildcards (such as `*` or `storage.*`) are not allowed. For more\
            \ information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
          items:
            type: string
          title: permissions
          type: array
      title: TestIamPermissionsRequest
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      example:
        permissions:
        - permissions
        - permissions
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller
            is allowed.
          items:
            type: string
          title: permissions
          type: array
      title: TestIamPermissionsResponse
      type: object
    TrafficTarget:
      description: TrafficTarget holds a single entry of the routing table for a Route.
      example:
        revisionName: revisionName
        configurationName: configurationName
        tag: tag
        latestRevision: true
        percent: 1
        url: url
      properties:
        configurationName:
          deprecated: true
          description: "[Deprecated] Not supported in Cloud Run. It must be empty."
          title: configurationName
          type: string
        latestRevision:
          description: "Uses the \"status.latestReadyRevisionName\" of the Service\
            \ to determine the traffic target. When it changes, traffic will automatically\
            \ migrate from the prior \"latest ready\" revision to the new one. This\
            \ field must be false if RevisionName is set. This field defaults to true\
            \ otherwise. If the field is set to true on Status, this means that the\
            \ Revision was resolved from the Service's latest ready revision."
          title: latestRevision
          type: boolean
        percent:
          description: Percent specifies percent of the traffic to this Revision or
            Configuration. This defaults to zero if unspecified.
          format: int32
          title: percent
          type: integer
        revisionName:
          description: Points this traffic target to a specific Revision. This field
            is mutually exclusive with latest_revision.
          title: revisionName
          type: string
        tag:
          description: Tag is used to expose a dedicated url for referencing this
            target exclusively.
          title: tag
          type: string
        url:
          description: "Output only. URL displays the URL for accessing tagged traffic\
            \ targets. URL is displayed in status, and is disallowed on spec. URL\
            \ must contain a scheme (e.g. https://) and a hostname, but may not contain\
            \ anything else (e.g. basic auth, url path, etc.)"
          readOnly: true
          title: url
          type: string
      title: TrafficTarget
      type: object
    Volume:
      description: Volume represents a named volume in a container.
      example:
        configMap:
          defaultMode: 1
          name: name
          optional: true
          items:
          - mode: 1
            path: path
            key: key
          - mode: 1
            path: path
            key: key
        emptyDir:
          sizeLimit: sizeLimit
          medium: medium
        csi:
          driver: driver
          readOnly: true
          volumeAttributes:
            key: volumeAttributes
        name: name
        nfs:
          path: path
          server: server
          readOnly: true
        secret:
          secretName: secretName
          defaultMode: 6
          optional: true
          items:
          - mode: 1
            path: path
            key: key
          - mode: 1
            path: path
            key: key
      properties:
        configMap:
          $ref: '#/components/schemas/ConfigMapVolumeSource'
        csi:
          $ref: '#/components/schemas/CSIVolumeSource'
        emptyDir:
          $ref: '#/components/schemas/EmptyDirVolumeSource'
        name:
          description: "Volume's name. In Cloud Run Fully Managed, the name 'cloudsql'\
            \ is reserved."
          title: name
          type: string
        nfs:
          $ref: '#/components/schemas/NFSVolumeSource'
        secret:
          $ref: '#/components/schemas/SecretVolumeSource'
      title: Volume
      type: object
    VolumeMount:
      description: VolumeMount describes a mounting of a Volume within a container.
      example:
        mountPath: mountPath
        name: name
        readOnly: true
        subPath: subPath
      properties:
        mountPath:
          description: Required. Path within the container at which the volume should
            be mounted. Must not contain ':'.
          title: mountPath
          type: string
        name:
          description: Required. The name of the volume. There must be a corresponding
            Volume with the same name.
          title: name
          type: string
        readOnly:
          description: Sets the mount to be read-only or read-write. Not used by Cloud
            Run.
          title: readOnly
          type: boolean
        subPath:
          description: Path within the volume from which the container's volume should
            be mounted. Defaults to "" (volume's root).
          title: subPath
          type: string
      title: VolumeMount
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
