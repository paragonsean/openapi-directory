/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskStatus.h
 *
 * TaskStatus represents the status of a task.
 */

#ifndef OAITaskStatus_H
#define OAITaskStatus_H

#include <QJsonObject>

#include "OAIGoogleCloudRunV1Condition.h"
#include "OAITaskAttemptResult.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudRunV1Condition;
class OAITaskAttemptResult;

class OAITaskStatus : public OAIObject {
public:
    OAITaskStatus();
    OAITaskStatus(QString json);
    ~OAITaskStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCompletionTime() const;
    void setCompletionTime(const QString &completion_time);
    bool is_completion_time_Set() const;
    bool is_completion_time_Valid() const;

    QList<OAIGoogleCloudRunV1Condition> getConditions() const;
    void setConditions(const QList<OAIGoogleCloudRunV1Condition> &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    OAITaskAttemptResult getLastAttemptResult() const;
    void setLastAttemptResult(const OAITaskAttemptResult &last_attempt_result);
    bool is_last_attempt_result_Set() const;
    bool is_last_attempt_result_Valid() const;

    QString getLogUri() const;
    void setLogUri(const QString &log_uri);
    bool is_log_uri_Set() const;
    bool is_log_uri_Valid() const;

    qint32 getObservedGeneration() const;
    void setObservedGeneration(const qint32 &observed_generation);
    bool is_observed_generation_Set() const;
    bool is_observed_generation_Valid() const;

    qint32 getRetried() const;
    void setRetried(const qint32 &retried);
    bool is_retried_Set() const;
    bool is_retried_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_completion_time;
    bool m_completion_time_isSet;
    bool m_completion_time_isValid;

    QList<OAIGoogleCloudRunV1Condition> m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    OAITaskAttemptResult m_last_attempt_result;
    bool m_last_attempt_result_isSet;
    bool m_last_attempt_result_isValid;

    QString m_log_uri;
    bool m_log_uri_isSet;
    bool m_log_uri_isValid;

    qint32 m_observed_generation;
    bool m_observed_generation_isSet;
    bool m_observed_generation_isValid;

    qint32 m_retried;
    bool m_retried_isSet;
    bool m_retried_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskStatus)

#endif // OAITaskStatus_H
