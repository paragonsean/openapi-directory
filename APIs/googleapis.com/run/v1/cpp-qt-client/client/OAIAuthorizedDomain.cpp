/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthorizedDomain.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthorizedDomain::OAIAuthorizedDomain(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthorizedDomain::OAIAuthorizedDomain() {
    this->initializeModel();
}

OAIAuthorizedDomain::~OAIAuthorizedDomain() {}

void OAIAuthorizedDomain::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIAuthorizedDomain::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthorizedDomain::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIAuthorizedDomain::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthorizedDomain::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIAuthorizedDomain::getId() const {
    return m_id;
}
void OAIAuthorizedDomain::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAuthorizedDomain::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAuthorizedDomain::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAuthorizedDomain::getName() const {
    return m_name;
}
void OAIAuthorizedDomain::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAuthorizedDomain::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAuthorizedDomain::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIAuthorizedDomain::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthorizedDomain::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
