/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfigurationSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfigurationSpec::OAIConfigurationSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfigurationSpec::OAIConfigurationSpec() {
    this->initializeModel();
}

OAIConfigurationSpec::~OAIConfigurationSpec() {}

void OAIConfigurationSpec::initializeModel() {

    m_r_template_isSet = false;
    m_r_template_isValid = false;
}

void OAIConfigurationSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfigurationSpec::fromJsonObject(QJsonObject json) {

    m_r_template_isValid = ::OpenAPI::fromJsonValue(m_r_template, json[QString("template")]);
    m_r_template_isSet = !json[QString("template")].isNull() && m_r_template_isValid;
}

QString OAIConfigurationSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfigurationSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_r_template.isSet()) {
        obj.insert(QString("template"), ::OpenAPI::toJsonValue(m_r_template));
    }
    return obj;
}

OAIRevisionTemplate OAIConfigurationSpec::getRTemplate() const {
    return m_r_template;
}
void OAIConfigurationSpec::setRTemplate(const OAIRevisionTemplate &r_template) {
    m_r_template = r_template;
    m_r_template_isSet = true;
}

bool OAIConfigurationSpec::is_r_template_Set() const{
    return m_r_template_isSet;
}

bool OAIConfigurationSpec::is_r_template_Valid() const{
    return m_r_template_isValid;
}

bool OAIConfigurationSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_r_template.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfigurationSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
