/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIService.h
 *
 * Service acts as a top-level container that manages a set of Routes and Configurations which implement a network service. Service exists to provide a singular abstraction which can be access controlled, reasoned about, and which encapsulates software lifecycle decisions such as rollout policy and team resource ownership. Service acts only as an orchestrator of the underlying Routes and Configurations (much as a kubernetes Deployment orchestrates ReplicaSets). The Service&#39;s controller will track the statuses of its owned Configuration and Route, reflecting their statuses and conditions as its own.
 */

#ifndef OAIService_H
#define OAIService_H

#include <QJsonObject>

#include "OAIObjectMeta.h"
#include "OAIServiceSpec.h"
#include "OAIServiceStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjectMeta;
class OAIServiceSpec;
class OAIServiceStatus;

class OAIService : public OAIObject {
public:
    OAIService();
    OAIService(QString json);
    ~OAIService() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiVersion() const;
    void setApiVersion(const QString &api_version);
    bool is_api_version_Set() const;
    bool is_api_version_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAIObjectMeta getMetadata() const;
    void setMetadata(const OAIObjectMeta &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIServiceSpec getSpec() const;
    void setSpec(const OAIServiceSpec &spec);
    bool is_spec_Set() const;
    bool is_spec_Valid() const;

    OAIServiceStatus getStatus() const;
    void setStatus(const OAIServiceStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_version;
    bool m_api_version_isSet;
    bool m_api_version_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAIObjectMeta m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIServiceSpec m_spec;
    bool m_spec_isSet;
    bool m_spec_isValid;

    OAIServiceStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIService)

#endif // OAIService_H
