/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDomainMappingSpec.h
 *
 * The desired state of the Domain Mapping.
 */

#ifndef OAIDomainMappingSpec_H
#define OAIDomainMappingSpec_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDomainMappingSpec : public OAIObject {
public:
    OAIDomainMappingSpec();
    OAIDomainMappingSpec(QString json);
    ~OAIDomainMappingSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCertificateMode() const;
    void setCertificateMode(const QString &certificate_mode);
    bool is_certificate_mode_Set() const;
    bool is_certificate_mode_Valid() const;

    bool isForceOverride() const;
    void setForceOverride(const bool &force_override);
    bool is_force_override_Set() const;
    bool is_force_override_Valid() const;

    QString getRouteName() const;
    void setRouteName(const QString &route_name);
    bool is_route_name_Set() const;
    bool is_route_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_certificate_mode;
    bool m_certificate_mode_isSet;
    bool m_certificate_mode_isValid;

    bool m_force_override;
    bool m_force_override_isSet;
    bool m_force_override_isValid;

    QString m_route_name;
    bool m_route_name_isSet;
    bool m_route_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDomainMappingSpec)

#endif // OAIDomainMappingSpec_H
