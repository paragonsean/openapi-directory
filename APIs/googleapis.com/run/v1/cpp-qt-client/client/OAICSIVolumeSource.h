/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICSIVolumeSource.h
 *
 * Storage volume source using the Container Storage Interface.
 */

#ifndef OAICSIVolumeSource_H
#define OAICSIVolumeSource_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICSIVolumeSource : public OAIObject {
public:
    OAICSIVolumeSource();
    OAICSIVolumeSource(QString json);
    ~OAICSIVolumeSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDriver() const;
    void setDriver(const QString &driver);
    bool is_driver_Set() const;
    bool is_driver_Valid() const;

    bool isReadOnly() const;
    void setReadOnly(const bool &read_only);
    bool is_read_only_Set() const;
    bool is_read_only_Valid() const;

    QMap<QString, QString> getVolumeAttributes() const;
    void setVolumeAttributes(const QMap<QString, QString> &volume_attributes);
    bool is_volume_attributes_Set() const;
    bool is_volume_attributes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_driver;
    bool m_driver_isSet;
    bool m_driver_isValid;

    bool m_read_only;
    bool m_read_only_isSet;
    bool m_read_only_isValid;

    QMap<QString, QString> m_volume_attributes;
    bool m_volume_attributes_isSet;
    bool m_volume_attributes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICSIVolumeSource)

#endif // OAICSIVolumeSource_H
