/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerOverride.h
 *
 * Per container override specification.
 */

#ifndef OAIContainerOverride_H
#define OAIContainerOverride_H

#include <QJsonObject>

#include "OAIEnvVar.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEnvVar;

class OAIContainerOverride : public OAIObject {
public:
    OAIContainerOverride();
    OAIContainerOverride(QString json);
    ~OAIContainerOverride() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getArgs() const;
    void setArgs(const QList<QString> &args);
    bool is_args_Set() const;
    bool is_args_Valid() const;

    bool isClearArgs() const;
    void setClearArgs(const bool &clear_args);
    bool is_clear_args_Set() const;
    bool is_clear_args_Valid() const;

    QList<OAIEnvVar> getEnv() const;
    void setEnv(const QList<OAIEnvVar> &env);
    bool is_env_Set() const;
    bool is_env_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_args;
    bool m_args_isSet;
    bool m_args_isValid;

    bool m_clear_args;
    bool m_clear_args_isSet;
    bool m_clear_args_isValid;

    QList<OAIEnvVar> m_env;
    bool m_env_isSet;
    bool m_env_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerOverride)

#endif // OAIContainerOverride_H
