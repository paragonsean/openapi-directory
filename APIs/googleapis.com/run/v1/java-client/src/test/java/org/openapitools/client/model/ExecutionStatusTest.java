/*
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRunV1Condition;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ExecutionStatus
 */
public class ExecutionStatusTest {
    private final ExecutionStatus model = new ExecutionStatus();

    /**
     * Model tests for ExecutionStatus
     */
    @Test
    public void testExecutionStatus() {
        // TODO: test ExecutionStatus
    }

    /**
     * Test the property 'cancelledCount'
     */
    @Test
    public void cancelledCountTest() {
        // TODO: test cancelledCount
    }

    /**
     * Test the property 'completionTime'
     */
    @Test
    public void completionTimeTest() {
        // TODO: test completionTime
    }

    /**
     * Test the property 'conditions'
     */
    @Test
    public void conditionsTest() {
        // TODO: test conditions
    }

    /**
     * Test the property 'failedCount'
     */
    @Test
    public void failedCountTest() {
        // TODO: test failedCount
    }

    /**
     * Test the property 'logUri'
     */
    @Test
    public void logUriTest() {
        // TODO: test logUri
    }

    /**
     * Test the property 'observedGeneration'
     */
    @Test
    public void observedGenerationTest() {
        // TODO: test observedGeneration
    }

    /**
     * Test the property 'retriedCount'
     */
    @Test
    public void retriedCountTest() {
        // TODO: test retriedCount
    }

    /**
     * Test the property 'runningCount'
     */
    @Test
    public void runningCountTest() {
        // TODO: test runningCount
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'succeededCount'
     */
    @Test
    public void succeededCountTest() {
        // TODO: test succeededCount
    }

}
