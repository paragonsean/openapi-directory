/*
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Addressable;
import org.openapitools.client.model.GoogleCloudRunV1Condition;
import org.openapitools.client.model.TrafficTarget;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The current state of the Service. Output only.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:12.475272-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ServiceStatus {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private Addressable address;

  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private List<GoogleCloudRunV1Condition> conditions = new ArrayList<>();

  public static final String SERIALIZED_NAME_LATEST_CREATED_REVISION_NAME = "latestCreatedRevisionName";
  @SerializedName(SERIALIZED_NAME_LATEST_CREATED_REVISION_NAME)
  private String latestCreatedRevisionName;

  public static final String SERIALIZED_NAME_LATEST_READY_REVISION_NAME = "latestReadyRevisionName";
  @SerializedName(SERIALIZED_NAME_LATEST_READY_REVISION_NAME)
  private String latestReadyRevisionName;

  public static final String SERIALIZED_NAME_OBSERVED_GENERATION = "observedGeneration";
  @SerializedName(SERIALIZED_NAME_OBSERVED_GENERATION)
  private Integer observedGeneration;

  public static final String SERIALIZED_NAME_TRAFFIC = "traffic";
  @SerializedName(SERIALIZED_NAME_TRAFFIC)
  private List<TrafficTarget> traffic = new ArrayList<>();

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public ServiceStatus() {
  }

  public ServiceStatus address(Addressable address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public Addressable getAddress() {
    return address;
  }

  public void setAddress(Addressable address) {
    this.address = address;
  }


  public ServiceStatus conditions(List<GoogleCloudRunV1Condition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public ServiceStatus addConditionsItem(GoogleCloudRunV1Condition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

  /**
   * Conditions communicate information about ongoing/complete reconciliation processes that bring the &#x60;spec&#x60; inline with the observed state of the world. Service-specific conditions include: * &#x60;ConfigurationsReady&#x60;: &#x60;True&#x60; when the underlying Configuration is ready. * &#x60;RoutesReady&#x60;: &#x60;True&#x60; when the underlying Route is ready. * &#x60;Ready&#x60;: &#x60;True&#x60; when all underlying resources are ready.
   * @return conditions
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRunV1Condition> getConditions() {
    return conditions;
  }

  public void setConditions(List<GoogleCloudRunV1Condition> conditions) {
    this.conditions = conditions;
  }


  public ServiceStatus latestCreatedRevisionName(String latestCreatedRevisionName) {
    this.latestCreatedRevisionName = latestCreatedRevisionName;
    return this;
  }

  /**
   * Name of the last revision that was created from this Service&#39;s Configuration. It might not be ready yet, for that use LatestReadyRevisionName.
   * @return latestCreatedRevisionName
   */
  @javax.annotation.Nullable
  public String getLatestCreatedRevisionName() {
    return latestCreatedRevisionName;
  }

  public void setLatestCreatedRevisionName(String latestCreatedRevisionName) {
    this.latestCreatedRevisionName = latestCreatedRevisionName;
  }


  public ServiceStatus latestReadyRevisionName(String latestReadyRevisionName) {
    this.latestReadyRevisionName = latestReadyRevisionName;
    return this;
  }

  /**
   * Name of the latest Revision from this Service&#39;s Configuration that has had its &#x60;Ready&#x60; condition become &#x60;True&#x60;.
   * @return latestReadyRevisionName
   */
  @javax.annotation.Nullable
  public String getLatestReadyRevisionName() {
    return latestReadyRevisionName;
  }

  public void setLatestReadyRevisionName(String latestReadyRevisionName) {
    this.latestReadyRevisionName = latestReadyRevisionName;
  }


  public ServiceStatus observedGeneration(Integer observedGeneration) {
    this.observedGeneration = observedGeneration;
    return this;
  }

  /**
   * Returns the generation last seen by the system. Clients polling for completed reconciliation should poll until observedGeneration &#x3D; metadata.generation and the Ready condition&#39;s status is True or False.
   * @return observedGeneration
   */
  @javax.annotation.Nullable
  public Integer getObservedGeneration() {
    return observedGeneration;
  }

  public void setObservedGeneration(Integer observedGeneration) {
    this.observedGeneration = observedGeneration;
  }


  public ServiceStatus traffic(List<TrafficTarget> traffic) {
    this.traffic = traffic;
    return this;
  }

  public ServiceStatus addTrafficItem(TrafficTarget trafficItem) {
    if (this.traffic == null) {
      this.traffic = new ArrayList<>();
    }
    this.traffic.add(trafficItem);
    return this;
  }

  /**
   * Holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed.
   * @return traffic
   */
  @javax.annotation.Nullable
  public List<TrafficTarget> getTraffic() {
    return traffic;
  }

  public void setTraffic(List<TrafficTarget> traffic) {
    this.traffic = traffic;
  }


  public ServiceStatus url(String url) {
    this.url = url;
    return this;
  }

  /**
   * URL that will distribute traffic over the provided traffic targets. It generally has the form &#x60;https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app&#x60;
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceStatus serviceStatus = (ServiceStatus) o;
    return Objects.equals(this.address, serviceStatus.address) &&
        Objects.equals(this.conditions, serviceStatus.conditions) &&
        Objects.equals(this.latestCreatedRevisionName, serviceStatus.latestCreatedRevisionName) &&
        Objects.equals(this.latestReadyRevisionName, serviceStatus.latestReadyRevisionName) &&
        Objects.equals(this.observedGeneration, serviceStatus.observedGeneration) &&
        Objects.equals(this.traffic, serviceStatus.traffic) &&
        Objects.equals(this.url, serviceStatus.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, conditions, latestCreatedRevisionName, latestReadyRevisionName, observedGeneration, traffic, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceStatus {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    latestCreatedRevisionName: ").append(toIndentedString(latestCreatedRevisionName)).append("\n");
    sb.append("    latestReadyRevisionName: ").append(toIndentedString(latestReadyRevisionName)).append("\n");
    sb.append("    observedGeneration: ").append(toIndentedString(observedGeneration)).append("\n");
    sb.append("    traffic: ").append(toIndentedString(traffic)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("conditions");
    openapiFields.add("latestCreatedRevisionName");
    openapiFields.add("latestReadyRevisionName");
    openapiFields.add("observedGeneration");
    openapiFields.add("traffic");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceStatus is not found in the empty JSON string", ServiceStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        Addressable.validateJsonElement(jsonObj.get("address"));
      }
      if (jsonObj.get("conditions") != null && !jsonObj.get("conditions").isJsonNull()) {
        JsonArray jsonArrayconditions = jsonObj.getAsJsonArray("conditions");
        if (jsonArrayconditions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("conditions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `conditions` to be an array in the JSON string but got `%s`", jsonObj.get("conditions").toString()));
          }

          // validate the optional field `conditions` (array)
          for (int i = 0; i < jsonArrayconditions.size(); i++) {
            GoogleCloudRunV1Condition.validateJsonElement(jsonArrayconditions.get(i));
          };
        }
      }
      if ((jsonObj.get("latestCreatedRevisionName") != null && !jsonObj.get("latestCreatedRevisionName").isJsonNull()) && !jsonObj.get("latestCreatedRevisionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latestCreatedRevisionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latestCreatedRevisionName").toString()));
      }
      if ((jsonObj.get("latestReadyRevisionName") != null && !jsonObj.get("latestReadyRevisionName").isJsonNull()) && !jsonObj.get("latestReadyRevisionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latestReadyRevisionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latestReadyRevisionName").toString()));
      }
      if (jsonObj.get("traffic") != null && !jsonObj.get("traffic").isJsonNull()) {
        JsonArray jsonArraytraffic = jsonObj.getAsJsonArray("traffic");
        if (jsonArraytraffic != null) {
          // ensure the json data is an array
          if (!jsonObj.get("traffic").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `traffic` to be an array in the JSON string but got `%s`", jsonObj.get("traffic").toString()));
          }

          // validate the optional field `traffic` (array)
          for (int i = 0; i < jsonArraytraffic.size(); i++) {
            TrafficTarget.validateJsonElement(jsonArraytraffic.get(i));
          };
        }
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceStatus>() {
           @Override
           public void write(JsonWriter out, ServiceStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceStatus
   * @throws IOException if the JSON string is invalid with respect to ServiceStatus
   */
  public static ServiceStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceStatus.class);
  }

  /**
   * Convert an instance of ServiceStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

