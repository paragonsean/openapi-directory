/*
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.OwnerReference;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * google.cloud.run.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:12.475272-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ObjectMeta {
  public static final String SERIALIZED_NAME_ANNOTATIONS = "annotations";
  @SerializedName(SERIALIZED_NAME_ANNOTATIONS)
  private Map<String, String> annotations = new HashMap<>();

  public static final String SERIALIZED_NAME_CLUSTER_NAME = "clusterName";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NAME)
  private String clusterName;

  public static final String SERIALIZED_NAME_CREATION_TIMESTAMP = "creationTimestamp";
  @SerializedName(SERIALIZED_NAME_CREATION_TIMESTAMP)
  private String creationTimestamp;

  public static final String SERIALIZED_NAME_DELETION_GRACE_PERIOD_SECONDS = "deletionGracePeriodSeconds";
  @SerializedName(SERIALIZED_NAME_DELETION_GRACE_PERIOD_SECONDS)
  private Integer deletionGracePeriodSeconds;

  public static final String SERIALIZED_NAME_DELETION_TIMESTAMP = "deletionTimestamp";
  @SerializedName(SERIALIZED_NAME_DELETION_TIMESTAMP)
  private String deletionTimestamp;

  public static final String SERIALIZED_NAME_FINALIZERS = "finalizers";
  @SerializedName(SERIALIZED_NAME_FINALIZERS)
  private List<String> finalizers = new ArrayList<>();

  public static final String SERIALIZED_NAME_GENERATE_NAME = "generateName";
  @SerializedName(SERIALIZED_NAME_GENERATE_NAME)
  private String generateName;

  public static final String SERIALIZED_NAME_GENERATION = "generation";
  @SerializedName(SERIALIZED_NAME_GENERATION)
  private Integer generation;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_OWNER_REFERENCES = "ownerReferences";
  @SerializedName(SERIALIZED_NAME_OWNER_REFERENCES)
  private List<OwnerReference> ownerReferences = new ArrayList<>();

  public static final String SERIALIZED_NAME_RESOURCE_VERSION = "resourceVersion";
  @SerializedName(SERIALIZED_NAME_RESOURCE_VERSION)
  private String resourceVersion;

  public static final String SERIALIZED_NAME_SELF_LINK = "selfLink";
  @SerializedName(SERIALIZED_NAME_SELF_LINK)
  private String selfLink;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public ObjectMeta() {
  }

  public ObjectMeta annotations(Map<String, String> annotations) {
    this.annotations = annotations;
    return this;
  }

  public ObjectMeta putAnnotationsItem(String key, String annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new HashMap<>();
    }
    this.annotations.put(key, annotationsItem);
    return this;
  }

  /**
   * Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. In Cloud Run, annotations with &#39;run.googleapis.com/&#39; and &#39;autoscaling.knative.dev&#39; are restricted, and the accepted annotations will be different depending on the resource type. * &#x60;autoscaling.knative.dev/maxScale&#x60;: Revision. * &#x60;autoscaling.knative.dev/minScale&#x60;: Revision. * &#x60;run.googleapis.com/binary-authorization-breakglass&#x60;: Service, Job, * &#x60;run.googleapis.com/binary-authorization&#x60;: Service, Job, Execution. * &#x60;run.googleapis.com/client-name&#x60;: All resources. * &#x60;run.googleapis.com/cloudsql-instances&#x60;: Revision, Execution. * &#x60;run.googleapis.com/container-dependencies&#x60;: Revision . * &#x60;run.googleapis.com/cpu-throttling&#x60;: Revision. * &#x60;run.googleapis.com/custom-audiences&#x60;: Service. * &#x60;run.googleapis.com/default-url-disabled&#x60;: Service. * &#x60;run.googleapis.com/description&#x60;: Service. * &#x60;run.googleapis.com/encryption-key-shutdown-hours&#x60;: Revision * &#x60;run.googleapis.com/encryption-key&#x60;: Revision, Execution. * &#x60;run.googleapis.com/execution-environment&#x60;: Revision, Execution. * &#x60;run.googleapis.com/gc-traffic-tags&#x60;: Service. * &#x60;run.googleapis.com/ingress&#x60;: Service. * &#x60;run.googleapis.com/launch-stage&#x60;: Service, Job. * &#x60;run.googleapis.com/minScale&#x60;: Service (ALPHA) * &#x60;run.googleapis.com/network-interfaces&#x60;: Revision, Execution. * &#x60;run.googleapis.com/post-key-revocation-action-type&#x60;: Revision. * &#x60;run.googleapis.com/secrets&#x60;: Revision, Execution. * &#x60;run.googleapis.com/secure-session-agent&#x60;: Revision. * &#x60;run.googleapis.com/sessionAffinity&#x60;: Revision. * &#x60;run.googleapis.com/startup-cpu-boost&#x60;: Revision. * &#x60;run.googleapis.com/vpc-access-connector&#x60;: Revision, Execution. * &#x60;run.googleapis.com/vpc-access-egress&#x60;: Revision, Execution.
   * @return annotations
   */
  @javax.annotation.Nullable
  public Map<String, String> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(Map<String, String> annotations) {
    this.annotations = annotations;
  }


  public ObjectMeta clusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

  /**
   * Not supported by Cloud Run
   * @return clusterName
   */
  @javax.annotation.Nullable
  public String getClusterName() {
    return clusterName;
  }

  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }


  public ObjectMeta creationTimestamp(String creationTimestamp) {
    this.creationTimestamp = creationTimestamp;
    return this;
  }

  /**
   * UTC timestamp representing the server time when this object was created.
   * @return creationTimestamp
   */
  @javax.annotation.Nullable
  public String getCreationTimestamp() {
    return creationTimestamp;
  }

  public void setCreationTimestamp(String creationTimestamp) {
    this.creationTimestamp = creationTimestamp;
  }


  public ObjectMeta deletionGracePeriodSeconds(Integer deletionGracePeriodSeconds) {
    this.deletionGracePeriodSeconds = deletionGracePeriodSeconds;
    return this;
  }

  /**
   * Not supported by Cloud Run
   * @return deletionGracePeriodSeconds
   */
  @javax.annotation.Nullable
  public Integer getDeletionGracePeriodSeconds() {
    return deletionGracePeriodSeconds;
  }

  public void setDeletionGracePeriodSeconds(Integer deletionGracePeriodSeconds) {
    this.deletionGracePeriodSeconds = deletionGracePeriodSeconds;
  }


  public ObjectMeta deletionTimestamp(String deletionTimestamp) {
    this.deletionTimestamp = deletionTimestamp;
    return this;
  }

  /**
   * The read-only soft deletion timestamp for this resource. In Cloud Run, users are not able to set this field. Instead, they must call the corresponding Delete API.
   * @return deletionTimestamp
   */
  @javax.annotation.Nullable
  public String getDeletionTimestamp() {
    return deletionTimestamp;
  }

  public void setDeletionTimestamp(String deletionTimestamp) {
    this.deletionTimestamp = deletionTimestamp;
  }


  public ObjectMeta finalizers(List<String> finalizers) {
    this.finalizers = finalizers;
    return this;
  }

  public ObjectMeta addFinalizersItem(String finalizersItem) {
    if (this.finalizers == null) {
      this.finalizers = new ArrayList<>();
    }
    this.finalizers.add(finalizersItem);
    return this;
  }

  /**
   * Not supported by Cloud Run
   * @return finalizers
   */
  @javax.annotation.Nullable
  public List<String> getFinalizers() {
    return finalizers;
  }

  public void setFinalizers(List<String> finalizers) {
    this.finalizers = finalizers;
  }


  public ObjectMeta generateName(String generateName) {
    this.generateName = generateName;
    return this;
  }

  /**
   * Not supported by Cloud Run
   * @return generateName
   */
  @javax.annotation.Nullable
  public String getGenerateName() {
    return generateName;
  }

  public void setGenerateName(String generateName) {
    this.generateName = generateName;
  }


  public ObjectMeta generation(Integer generation) {
    this.generation = generation;
    return this;
  }

  /**
   * A system-provided sequence number representing a specific generation of the desired state.
   * @return generation
   */
  @javax.annotation.Nullable
  public Integer getGeneration() {
    return generation;
  }

  public void setGeneration(Integer generation) {
    this.generation = generation;
  }


  public ObjectMeta labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public ObjectMeta putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public ObjectMeta name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. The name of the resource. Name is required when creating top-level resources (Service, Job), must be unique within a Cloud Run project/region, and cannot be changed once created.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ObjectMeta namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

  /**
   * Required. Defines the space within each name must be unique within a Cloud Run region. In Cloud Run, it must be project ID or number.
   * @return namespace
   */
  @javax.annotation.Nullable
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public ObjectMeta ownerReferences(List<OwnerReference> ownerReferences) {
    this.ownerReferences = ownerReferences;
    return this;
  }

  public ObjectMeta addOwnerReferencesItem(OwnerReference ownerReferencesItem) {
    if (this.ownerReferences == null) {
      this.ownerReferences = new ArrayList<>();
    }
    this.ownerReferences.add(ownerReferencesItem);
    return this;
  }

  /**
   * Not supported by Cloud Run
   * @return ownerReferences
   */
  @javax.annotation.Nullable
  public List<OwnerReference> getOwnerReferences() {
    return ownerReferences;
  }

  public void setOwnerReferences(List<OwnerReference> ownerReferences) {
    this.ownerReferences = ownerReferences;
  }


  public ObjectMeta resourceVersion(String resourceVersion) {
    this.resourceVersion = resourceVersion;
    return this;
  }

  /**
   * Opaque, system-generated value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection.
   * @return resourceVersion
   */
  @javax.annotation.Nullable
  public String getResourceVersion() {
    return resourceVersion;
  }

  public void setResourceVersion(String resourceVersion) {
    this.resourceVersion = resourceVersion;
  }


  public ObjectMeta selfLink(String selfLink) {
    this.selfLink = selfLink;
    return this;
  }

  /**
   * URL representing this object.
   * @return selfLink
   */
  @javax.annotation.Nullable
  public String getSelfLink() {
    return selfLink;
  }

  public void setSelfLink(String selfLink) {
    this.selfLink = selfLink;
  }


  public ObjectMeta uid(String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Unique, system-generated identifier for this resource.
   * @return uid
   */
  @javax.annotation.Nullable
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectMeta objectMeta = (ObjectMeta) o;
    return Objects.equals(this.annotations, objectMeta.annotations) &&
        Objects.equals(this.clusterName, objectMeta.clusterName) &&
        Objects.equals(this.creationTimestamp, objectMeta.creationTimestamp) &&
        Objects.equals(this.deletionGracePeriodSeconds, objectMeta.deletionGracePeriodSeconds) &&
        Objects.equals(this.deletionTimestamp, objectMeta.deletionTimestamp) &&
        Objects.equals(this.finalizers, objectMeta.finalizers) &&
        Objects.equals(this.generateName, objectMeta.generateName) &&
        Objects.equals(this.generation, objectMeta.generation) &&
        Objects.equals(this.labels, objectMeta.labels) &&
        Objects.equals(this.name, objectMeta.name) &&
        Objects.equals(this.namespace, objectMeta.namespace) &&
        Objects.equals(this.ownerReferences, objectMeta.ownerReferences) &&
        Objects.equals(this.resourceVersion, objectMeta.resourceVersion) &&
        Objects.equals(this.selfLink, objectMeta.selfLink) &&
        Objects.equals(this.uid, objectMeta.uid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotations, clusterName, creationTimestamp, deletionGracePeriodSeconds, deletionTimestamp, finalizers, generateName, generation, labels, name, namespace, ownerReferences, resourceVersion, selfLink, uid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectMeta {\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    creationTimestamp: ").append(toIndentedString(creationTimestamp)).append("\n");
    sb.append("    deletionGracePeriodSeconds: ").append(toIndentedString(deletionGracePeriodSeconds)).append("\n");
    sb.append("    deletionTimestamp: ").append(toIndentedString(deletionTimestamp)).append("\n");
    sb.append("    finalizers: ").append(toIndentedString(finalizers)).append("\n");
    sb.append("    generateName: ").append(toIndentedString(generateName)).append("\n");
    sb.append("    generation: ").append(toIndentedString(generation)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    ownerReferences: ").append(toIndentedString(ownerReferences)).append("\n");
    sb.append("    resourceVersion: ").append(toIndentedString(resourceVersion)).append("\n");
    sb.append("    selfLink: ").append(toIndentedString(selfLink)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annotations");
    openapiFields.add("clusterName");
    openapiFields.add("creationTimestamp");
    openapiFields.add("deletionGracePeriodSeconds");
    openapiFields.add("deletionTimestamp");
    openapiFields.add("finalizers");
    openapiFields.add("generateName");
    openapiFields.add("generation");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("namespace");
    openapiFields.add("ownerReferences");
    openapiFields.add("resourceVersion");
    openapiFields.add("selfLink");
    openapiFields.add("uid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ObjectMeta
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ObjectMeta.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ObjectMeta is not found in the empty JSON string", ObjectMeta.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ObjectMeta.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ObjectMeta` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("clusterName") != null && !jsonObj.get("clusterName").isJsonNull()) && !jsonObj.get("clusterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clusterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clusterName").toString()));
      }
      if ((jsonObj.get("creationTimestamp") != null && !jsonObj.get("creationTimestamp").isJsonNull()) && !jsonObj.get("creationTimestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creationTimestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creationTimestamp").toString()));
      }
      if ((jsonObj.get("deletionTimestamp") != null && !jsonObj.get("deletionTimestamp").isJsonNull()) && !jsonObj.get("deletionTimestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deletionTimestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deletionTimestamp").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("finalizers") != null && !jsonObj.get("finalizers").isJsonNull() && !jsonObj.get("finalizers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `finalizers` to be an array in the JSON string but got `%s`", jsonObj.get("finalizers").toString()));
      }
      if ((jsonObj.get("generateName") != null && !jsonObj.get("generateName").isJsonNull()) && !jsonObj.get("generateName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `generateName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("generateName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("namespace") != null && !jsonObj.get("namespace").isJsonNull()) && !jsonObj.get("namespace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `namespace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("namespace").toString()));
      }
      if (jsonObj.get("ownerReferences") != null && !jsonObj.get("ownerReferences").isJsonNull()) {
        JsonArray jsonArrayownerReferences = jsonObj.getAsJsonArray("ownerReferences");
        if (jsonArrayownerReferences != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ownerReferences").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ownerReferences` to be an array in the JSON string but got `%s`", jsonObj.get("ownerReferences").toString()));
          }

          // validate the optional field `ownerReferences` (array)
          for (int i = 0; i < jsonArrayownerReferences.size(); i++) {
            OwnerReference.validateJsonElement(jsonArrayownerReferences.get(i));
          };
        }
      }
      if ((jsonObj.get("resourceVersion") != null && !jsonObj.get("resourceVersion").isJsonNull()) && !jsonObj.get("resourceVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceVersion").toString()));
      }
      if ((jsonObj.get("selfLink") != null && !jsonObj.get("selfLink").isJsonNull()) && !jsonObj.get("selfLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `selfLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("selfLink").toString()));
      }
      if ((jsonObj.get("uid") != null && !jsonObj.get("uid").isJsonNull()) && !jsonObj.get("uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ObjectMeta.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ObjectMeta' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ObjectMeta> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ObjectMeta.class));

       return (TypeAdapter<T>) new TypeAdapter<ObjectMeta>() {
           @Override
           public void write(JsonWriter out, ObjectMeta value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ObjectMeta read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ObjectMeta given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ObjectMeta
   * @throws IOException if the JSON string is invalid with respect to ObjectMeta
   */
  public static ObjectMeta fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ObjectMeta.class);
  }

  /**
   * Convert an instance of ObjectMeta to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

