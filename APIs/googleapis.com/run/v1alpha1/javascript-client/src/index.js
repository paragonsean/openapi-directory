/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ConfigMapEnvSource from './model/ConfigMapEnvSource';
import ConfigMapKeySelector from './model/ConfigMapKeySelector';
import ConfigMapVolumeSource from './model/ConfigMapVolumeSource';
import Container from './model/Container';
import ContainerPort from './model/ContainerPort';
import EnvFromSource from './model/EnvFromSource';
import EnvVar from './model/EnvVar';
import EnvVarSource from './model/EnvVarSource';
import ExecAction from './model/ExecAction';
import GRPCAction from './model/GRPCAction';
import GoogleRpcStatus from './model/GoogleRpcStatus';
import HTTPGetAction from './model/HTTPGetAction';
import HTTPHeader from './model/HTTPHeader';
import InstanceAttemptResult from './model/InstanceAttemptResult';
import InstanceSpec from './model/InstanceSpec';
import InstanceStatus from './model/InstanceStatus';
import InstanceTemplateSpec from './model/InstanceTemplateSpec';
import Job from './model/Job';
import JobCondition from './model/JobCondition';
import JobSpec from './model/JobSpec';
import JobStatus from './model/JobStatus';
import KeyToPath from './model/KeyToPath';
import ListJobsResponse from './model/ListJobsResponse';
import ListMeta from './model/ListMeta';
import LocalObjectReference from './model/LocalObjectReference';
import ObjectMeta from './model/ObjectMeta';
import OwnerReference from './model/OwnerReference';
import Probe from './model/Probe';
import ResourceRequirements from './model/ResourceRequirements';
import SecretEnvSource from './model/SecretEnvSource';
import SecretKeySelector from './model/SecretKeySelector';
import SecretVolumeSource from './model/SecretVolumeSource';
import SecurityContext from './model/SecurityContext';
import TCPSocketAction from './model/TCPSocketAction';
import Volume from './model/Volume';
import VolumeMount from './model/VolumeMount';
import NamespacesApi from './api/NamespacesApi';


/**
* Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudRunAdminApi = require('index'); // See note below*.
* var xxxSvc = new CloudRunAdminApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudRunAdminApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudRunAdminApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudRunAdminApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1alpha1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ConfigMapEnvSource model constructor.
     * @property {module:model/ConfigMapEnvSource}
     */
    ConfigMapEnvSource,

    /**
     * The ConfigMapKeySelector model constructor.
     * @property {module:model/ConfigMapKeySelector}
     */
    ConfigMapKeySelector,

    /**
     * The ConfigMapVolumeSource model constructor.
     * @property {module:model/ConfigMapVolumeSource}
     */
    ConfigMapVolumeSource,

    /**
     * The Container model constructor.
     * @property {module:model/Container}
     */
    Container,

    /**
     * The ContainerPort model constructor.
     * @property {module:model/ContainerPort}
     */
    ContainerPort,

    /**
     * The EnvFromSource model constructor.
     * @property {module:model/EnvFromSource}
     */
    EnvFromSource,

    /**
     * The EnvVar model constructor.
     * @property {module:model/EnvVar}
     */
    EnvVar,

    /**
     * The EnvVarSource model constructor.
     * @property {module:model/EnvVarSource}
     */
    EnvVarSource,

    /**
     * The ExecAction model constructor.
     * @property {module:model/ExecAction}
     */
    ExecAction,

    /**
     * The GRPCAction model constructor.
     * @property {module:model/GRPCAction}
     */
    GRPCAction,

    /**
     * The GoogleRpcStatus model constructor.
     * @property {module:model/GoogleRpcStatus}
     */
    GoogleRpcStatus,

    /**
     * The HTTPGetAction model constructor.
     * @property {module:model/HTTPGetAction}
     */
    HTTPGetAction,

    /**
     * The HTTPHeader model constructor.
     * @property {module:model/HTTPHeader}
     */
    HTTPHeader,

    /**
     * The InstanceAttemptResult model constructor.
     * @property {module:model/InstanceAttemptResult}
     */
    InstanceAttemptResult,

    /**
     * The InstanceSpec model constructor.
     * @property {module:model/InstanceSpec}
     */
    InstanceSpec,

    /**
     * The InstanceStatus model constructor.
     * @property {module:model/InstanceStatus}
     */
    InstanceStatus,

    /**
     * The InstanceTemplateSpec model constructor.
     * @property {module:model/InstanceTemplateSpec}
     */
    InstanceTemplateSpec,

    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job,

    /**
     * The JobCondition model constructor.
     * @property {module:model/JobCondition}
     */
    JobCondition,

    /**
     * The JobSpec model constructor.
     * @property {module:model/JobSpec}
     */
    JobSpec,

    /**
     * The JobStatus model constructor.
     * @property {module:model/JobStatus}
     */
    JobStatus,

    /**
     * The KeyToPath model constructor.
     * @property {module:model/KeyToPath}
     */
    KeyToPath,

    /**
     * The ListJobsResponse model constructor.
     * @property {module:model/ListJobsResponse}
     */
    ListJobsResponse,

    /**
     * The ListMeta model constructor.
     * @property {module:model/ListMeta}
     */
    ListMeta,

    /**
     * The LocalObjectReference model constructor.
     * @property {module:model/LocalObjectReference}
     */
    LocalObjectReference,

    /**
     * The ObjectMeta model constructor.
     * @property {module:model/ObjectMeta}
     */
    ObjectMeta,

    /**
     * The OwnerReference model constructor.
     * @property {module:model/OwnerReference}
     */
    OwnerReference,

    /**
     * The Probe model constructor.
     * @property {module:model/Probe}
     */
    Probe,

    /**
     * The ResourceRequirements model constructor.
     * @property {module:model/ResourceRequirements}
     */
    ResourceRequirements,

    /**
     * The SecretEnvSource model constructor.
     * @property {module:model/SecretEnvSource}
     */
    SecretEnvSource,

    /**
     * The SecretKeySelector model constructor.
     * @property {module:model/SecretKeySelector}
     */
    SecretKeySelector,

    /**
     * The SecretVolumeSource model constructor.
     * @property {module:model/SecretVolumeSource}
     */
    SecretVolumeSource,

    /**
     * The SecurityContext model constructor.
     * @property {module:model/SecurityContext}
     */
    SecurityContext,

    /**
     * The TCPSocketAction model constructor.
     * @property {module:model/TCPSocketAction}
     */
    TCPSocketAction,

    /**
     * The Volume model constructor.
     * @property {module:model/Volume}
     */
    Volume,

    /**
     * The VolumeMount model constructor.
     * @property {module:model/VolumeMount}
     */
    VolumeMount,

    /**
    * The NamespacesApi service constructor.
    * @property {module:api/NamespacesApi}
    */
    NamespacesApi
};
