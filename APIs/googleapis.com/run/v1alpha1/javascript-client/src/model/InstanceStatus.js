/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceAttemptResult from './InstanceAttemptResult';

/**
 * The InstanceStatus model module.
 * @module model/InstanceStatus
 * @version v1alpha1
 */
class InstanceStatus {
    /**
     * Constructs a new <code>InstanceStatus</code>.
     * Instance represents the status of an instance of a Job.
     * @alias module:model/InstanceStatus
     */
    constructor() { 
        
        InstanceStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstanceStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceStatus} obj Optional instance to populate.
     * @return {module:model/InstanceStatus} The populated <code>InstanceStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceStatus();

            if (data.hasOwnProperty('completionTime')) {
                obj['completionTime'] = ApiClient.convertToType(data['completionTime'], 'String');
            }
            if (data.hasOwnProperty('failed')) {
                obj['failed'] = ApiClient.convertToType(data['failed'], 'Number');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('lastAttemptResult')) {
                obj['lastAttemptResult'] = InstanceAttemptResult.constructFromObject(data['lastAttemptResult']);
            }
            if (data.hasOwnProperty('lastExitCode')) {
                obj['lastExitCode'] = ApiClient.convertToType(data['lastExitCode'], 'Number');
            }
            if (data.hasOwnProperty('restarted')) {
                obj['restarted'] = ApiClient.convertToType(data['restarted'], 'Number');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('succeeded')) {
                obj['succeeded'] = ApiClient.convertToType(data['succeeded'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstanceStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstanceStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['completionTime'] && !(typeof data['completionTime'] === 'string' || data['completionTime'] instanceof String)) {
            throw new Error("Expected the field `completionTime` to be a primitive type in the JSON string but got " + data['completionTime']);
        }
        // validate the optional field `lastAttemptResult`
        if (data['lastAttemptResult']) { // data not null
          InstanceAttemptResult.validateJSON(data['lastAttemptResult']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }

        return true;
    }


}



/**
 * Optional. Represents time when the instance was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. +optional
 * @member {String} completionTime
 */
InstanceStatus.prototype['completionTime'] = undefined;

/**
 * Optional. The number of times this instance exited with code > 0; +optional
 * @member {Number} failed
 */
InstanceStatus.prototype['failed'] = undefined;

/**
 * Required. Index of the instance, unique per Job, and beginning at 0.
 * @member {Number} index
 */
InstanceStatus.prototype['index'] = undefined;

/**
 * @member {module:model/InstanceAttemptResult} lastAttemptResult
 */
InstanceStatus.prototype['lastAttemptResult'] = undefined;

/**
 * Optional. Last exit code seen for this instance. +optional
 * @member {Number} lastExitCode
 */
InstanceStatus.prototype['lastExitCode'] = undefined;

/**
 * Optional. The number of times this instance was restarted. Instances are restarted according the restartPolicy configured in the Job template. +optional
 * @member {Number} restarted
 */
InstanceStatus.prototype['restarted'] = undefined;

/**
 * Optional. Represents time when the instance was created by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. +optional
 * @member {String} startTime
 */
InstanceStatus.prototype['startTime'] = undefined;

/**
 * Optional. The number of times this instance exited with code == 0. +optional
 * @member {Number} succeeded
 */
InstanceStatus.prototype['succeeded'] = undefined;






export default InstanceStatus;

