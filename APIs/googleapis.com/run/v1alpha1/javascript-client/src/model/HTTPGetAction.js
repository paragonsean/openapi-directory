/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HTTPHeader from './HTTPHeader';

/**
 * The HTTPGetAction model module.
 * @module model/HTTPGetAction
 * @version v1alpha1
 */
class HTTPGetAction {
    /**
     * Constructs a new <code>HTTPGetAction</code>.
     * Not supported by Cloud Run HTTPGetAction describes an action based on HTTP Get requests.
     * @alias module:model/HTTPGetAction
     */
    constructor() { 
        
        HTTPGetAction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HTTPGetAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HTTPGetAction} obj Optional instance to populate.
     * @return {module:model/HTTPGetAction} The populated <code>HTTPGetAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HTTPGetAction();

            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], 'String');
            }
            if (data.hasOwnProperty('httpHeaders')) {
                obj['httpHeaders'] = ApiClient.convertToType(data['httpHeaders'], [HTTPHeader]);
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('scheme')) {
                obj['scheme'] = ApiClient.convertToType(data['scheme'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HTTPGetAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HTTPGetAction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['host'] && !(typeof data['host'] === 'string' || data['host'] instanceof String)) {
            throw new Error("Expected the field `host` to be a primitive type in the JSON string but got " + data['host']);
        }
        if (data['httpHeaders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['httpHeaders'])) {
                throw new Error("Expected the field `httpHeaders` to be an array in the JSON data but got " + data['httpHeaders']);
            }
            // validate the optional field `httpHeaders` (array)
            for (const item of data['httpHeaders']) {
                HTTPHeader.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['scheme'] && !(typeof data['scheme'] === 'string' || data['scheme'] instanceof String)) {
            throw new Error("Expected the field `scheme` to be a primitive type in the JSON string but got " + data['scheme']);
        }

        return true;
    }


}



/**
 * (Optional) Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.
 * @member {String} host
 */
HTTPGetAction.prototype['host'] = undefined;

/**
 * (Optional) Custom headers to set in the request. HTTP allows repeated headers.
 * @member {Array.<module:model/HTTPHeader>} httpHeaders
 */
HTTPGetAction.prototype['httpHeaders'] = undefined;

/**
 * (Optional) Path to access on the HTTP server.
 * @member {String} path
 */
HTTPGetAction.prototype['path'] = undefined;

/**
 * (Optional) Scheme to use for connecting to the host. Defaults to HTTP.
 * @member {String} scheme
 */
HTTPGetAction.prototype['scheme'] = undefined;






export default HTTPGetAction;

