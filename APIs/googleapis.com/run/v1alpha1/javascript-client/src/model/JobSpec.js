/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceTemplateSpec from './InstanceTemplateSpec';

/**
 * The JobSpec model module.
 * @module model/JobSpec
 * @version v1alpha1
 */
class JobSpec {
    /**
     * Constructs a new <code>JobSpec</code>.
     * JobSpec describes how the job execution will look like.
     * @alias module:model/JobSpec
     */
    constructor() { 
        
        JobSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobSpec} obj Optional instance to populate.
     * @return {module:model/JobSpec} The populated <code>JobSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobSpec();

            if (data.hasOwnProperty('activeDeadlineSeconds')) {
                obj['activeDeadlineSeconds'] = ApiClient.convertToType(data['activeDeadlineSeconds'], 'String');
            }
            if (data.hasOwnProperty('backoffLimit')) {
                obj['backoffLimit'] = ApiClient.convertToType(data['backoffLimit'], 'Number');
            }
            if (data.hasOwnProperty('completions')) {
                obj['completions'] = ApiClient.convertToType(data['completions'], 'Number');
            }
            if (data.hasOwnProperty('parallelism')) {
                obj['parallelism'] = ApiClient.convertToType(data['parallelism'], 'Number');
            }
            if (data.hasOwnProperty('template')) {
                obj['template'] = InstanceTemplateSpec.constructFromObject(data['template']);
            }
            if (data.hasOwnProperty('ttlSecondsAfterFinished')) {
                obj['ttlSecondsAfterFinished'] = ApiClient.convertToType(data['ttlSecondsAfterFinished'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activeDeadlineSeconds'] && !(typeof data['activeDeadlineSeconds'] === 'string' || data['activeDeadlineSeconds'] instanceof String)) {
            throw new Error("Expected the field `activeDeadlineSeconds` to be a primitive type in the JSON string but got " + data['activeDeadlineSeconds']);
        }
        // validate the optional field `template`
        if (data['template']) { // data not null
          InstanceTemplateSpec.validateJSON(data['template']);
        }

        return true;
    }


}



/**
 * Optional. Not supported. Specifies the duration in seconds relative to the startTime that the job may be active before the system tries to terminate it. If set to zero, the system will never attempt to terminate the job based on time. Otherwise, the value must be positive integer. +optional
 * @member {String} activeDeadlineSeconds
 */
JobSpec.prototype['activeDeadlineSeconds'] = undefined;

/**
 * Optional. Specifies the number of retries per instance, before marking this job failed. If set to zero, instances will never retry on failure. +optional
 * @member {Number} backoffLimit
 */
JobSpec.prototype['backoffLimit'] = undefined;

/**
 * Optional. Specifies the desired number of successfully finished instances the job should be run with. Setting to 1 means that parallelism is limited to 1 and the success of that instance signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/ +optional
 * @member {Number} completions
 */
JobSpec.prototype['completions'] = undefined;

/**
 * Optional. Specifies the maximum desired number of instances the job should run at any given time. Must be <= completions. The actual number of instances running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/ +optional
 * @member {Number} parallelism
 */
JobSpec.prototype['parallelism'] = undefined;

/**
 * @member {module:model/InstanceTemplateSpec} template
 */
JobSpec.prototype['template'] = undefined;

/**
 * Optional. Not supported. ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is set to zero, the Job won't be automatically deleted. +optional
 * @member {Number} ttlSecondsAfterFinished
 */
JobSpec.prototype['ttlSecondsAfterFinished'] = undefined;






export default JobSpec;

