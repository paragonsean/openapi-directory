/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIObjectMeta.h
 *
 * k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
 */

#ifndef OAIObjectMeta_H
#define OAIObjectMeta_H

#include <QJsonObject>

#include "OAIOwnerReference.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOwnerReference;

class OAIObjectMeta : public OAIObject {
public:
    OAIObjectMeta();
    OAIObjectMeta(QString json);
    ~OAIObjectMeta() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAnnotations() const;
    void setAnnotations(const QMap<QString, QString> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    QString getClusterName() const;
    void setClusterName(const QString &cluster_name);
    bool is_cluster_name_Set() const;
    bool is_cluster_name_Valid() const;

    QString getCreationTimestamp() const;
    void setCreationTimestamp(const QString &creation_timestamp);
    bool is_creation_timestamp_Set() const;
    bool is_creation_timestamp_Valid() const;

    qint32 getDeletionGracePeriodSeconds() const;
    void setDeletionGracePeriodSeconds(const qint32 &deletion_grace_period_seconds);
    bool is_deletion_grace_period_seconds_Set() const;
    bool is_deletion_grace_period_seconds_Valid() const;

    QString getDeletionTimestamp() const;
    void setDeletionTimestamp(const QString &deletion_timestamp);
    bool is_deletion_timestamp_Set() const;
    bool is_deletion_timestamp_Valid() const;

    QList<QString> getFinalizers() const;
    void setFinalizers(const QList<QString> &finalizers);
    bool is_finalizers_Set() const;
    bool is_finalizers_Valid() const;

    QString getGenerateName() const;
    void setGenerateName(const QString &generate_name);
    bool is_generate_name_Set() const;
    bool is_generate_name_Valid() const;

    qint32 getGeneration() const;
    void setGeneration(const qint32 &generation);
    bool is_generation_Set() const;
    bool is_generation_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRNamespace() const;
    void setRNamespace(const QString &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    QList<OAIOwnerReference> getOwnerReferences() const;
    void setOwnerReferences(const QList<OAIOwnerReference> &owner_references);
    bool is_owner_references_Set() const;
    bool is_owner_references_Valid() const;

    QString getResourceVersion() const;
    void setResourceVersion(const QString &resource_version);
    bool is_resource_version_Set() const;
    bool is_resource_version_Valid() const;

    QString getSelfLink() const;
    void setSelfLink(const QString &self_link);
    bool is_self_link_Set() const;
    bool is_self_link_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    QString m_cluster_name;
    bool m_cluster_name_isSet;
    bool m_cluster_name_isValid;

    QString m_creation_timestamp;
    bool m_creation_timestamp_isSet;
    bool m_creation_timestamp_isValid;

    qint32 m_deletion_grace_period_seconds;
    bool m_deletion_grace_period_seconds_isSet;
    bool m_deletion_grace_period_seconds_isValid;

    QString m_deletion_timestamp;
    bool m_deletion_timestamp_isSet;
    bool m_deletion_timestamp_isValid;

    QList<QString> m_finalizers;
    bool m_finalizers_isSet;
    bool m_finalizers_isValid;

    QString m_generate_name;
    bool m_generate_name_isSet;
    bool m_generate_name_isValid;

    qint32 m_generation;
    bool m_generation_isSet;
    bool m_generation_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;

    QList<OAIOwnerReference> m_owner_references;
    bool m_owner_references_isSet;
    bool m_owner_references_isValid;

    QString m_resource_version;
    bool m_resource_version_isSet;
    bool m_resource_version_isValid;

    QString m_self_link;
    bool m_self_link_isSet;
    bool m_self_link_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIObjectMeta)

#endif // OAIObjectMeta_H
