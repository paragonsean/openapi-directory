/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceRequirements.h
 *
 * ResourceRequirements describes the compute resource requirements.
 */

#ifndef OAIResourceRequirements_H
#define OAIResourceRequirements_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResourceRequirements : public OAIObject {
public:
    OAIResourceRequirements();
    OAIResourceRequirements(QString json);
    ~OAIResourceRequirements() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getLimits() const;
    void setLimits(const QMap<QString, QString> &limits);
    bool is_limits_Set() const;
    bool is_limits_Valid() const;

    QMap<QString, QString> getRequests() const;
    void setRequests(const QMap<QString, QString> &requests);
    bool is_requests_Set() const;
    bool is_requests_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_limits;
    bool m_limits_isSet;
    bool m_limits_isValid;

    QMap<QString, QString> m_requests;
    bool m_requests_isSet;
    bool m_requests_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceRequirements)

#endif // OAIResourceRequirements_H
