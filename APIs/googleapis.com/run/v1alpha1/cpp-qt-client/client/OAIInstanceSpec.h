/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstanceSpec.h
 *
 * InstanceSpec is a description of an instance.
 */

#ifndef OAIInstanceSpec_H
#define OAIInstanceSpec_H

#include <QJsonObject>

#include "OAIContainer.h"
#include "OAIVolume.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContainer;
class OAIVolume;

class OAIInstanceSpec : public OAIObject {
public:
    OAIInstanceSpec();
    OAIInstanceSpec(QString json);
    ~OAIInstanceSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActiveDeadlineSeconds() const;
    void setActiveDeadlineSeconds(const QString &active_deadline_seconds);
    bool is_active_deadline_seconds_Set() const;
    bool is_active_deadline_seconds_Valid() const;

    QList<OAIContainer> getContainers() const;
    void setContainers(const QList<OAIContainer> &containers);
    bool is_containers_Set() const;
    bool is_containers_Valid() const;

    QString getRestartPolicy() const;
    void setRestartPolicy(const QString &restart_policy);
    bool is_restart_policy_Set() const;
    bool is_restart_policy_Valid() const;

    QString getServiceAccountName() const;
    void setServiceAccountName(const QString &service_account_name);
    bool is_service_account_name_Set() const;
    bool is_service_account_name_Valid() const;

    QString getTerminationGracePeriodSeconds() const;
    void setTerminationGracePeriodSeconds(const QString &termination_grace_period_seconds);
    bool is_termination_grace_period_seconds_Set() const;
    bool is_termination_grace_period_seconds_Valid() const;

    QList<OAIVolume> getVolumes() const;
    void setVolumes(const QList<OAIVolume> &volumes);
    bool is_volumes_Set() const;
    bool is_volumes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active_deadline_seconds;
    bool m_active_deadline_seconds_isSet;
    bool m_active_deadline_seconds_isValid;

    QList<OAIContainer> m_containers;
    bool m_containers_isSet;
    bool m_containers_isValid;

    QString m_restart_policy;
    bool m_restart_policy_isSet;
    bool m_restart_policy_isValid;

    QString m_service_account_name;
    bool m_service_account_name_isSet;
    bool m_service_account_name_isValid;

    QString m_termination_grace_period_seconds;
    bool m_termination_grace_period_seconds_isSet;
    bool m_termination_grace_period_seconds_isValid;

    QList<OAIVolume> m_volumes;
    bool m_volumes_isSet;
    bool m_volumes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstanceSpec)

#endif // OAIInstanceSpec_H
