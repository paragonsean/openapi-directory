/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobStatus.h
 *
 * JobStatus represents the current state of a Job.
 */

#ifndef OAIJobStatus_H
#define OAIJobStatus_H

#include <QJsonObject>

#include "OAIInstanceStatus.h"
#include "OAIJobCondition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJobCondition;
class OAIInstanceStatus;

class OAIJobStatus : public OAIObject {
public:
    OAIJobStatus();
    OAIJobStatus(QString json);
    ~OAIJobStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActive() const;
    void setActive(const qint32 &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QString getCompletionTime() const;
    void setCompletionTime(const QString &completion_time);
    bool is_completion_time_Set() const;
    bool is_completion_time_Valid() const;

    QList<OAIJobCondition> getConditions() const;
    void setConditions(const QList<OAIJobCondition> &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    qint32 getFailed() const;
    void setFailed(const qint32 &failed);
    bool is_failed_Set() const;
    bool is_failed_Valid() const;

    QString getImageDigest() const;
    void setImageDigest(const QString &image_digest);
    bool is_image_digest_Set() const;
    bool is_image_digest_Valid() const;

    QList<OAIInstanceStatus> getInstances() const;
    void setInstances(const QList<OAIInstanceStatus> &instances);
    bool is_instances_Set() const;
    bool is_instances_Valid() const;

    qint32 getObservedGeneration() const;
    void setObservedGeneration(const qint32 &observed_generation);
    bool is_observed_generation_Set() const;
    bool is_observed_generation_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    qint32 getSucceeded() const;
    void setSucceeded(const qint32 &succeeded);
    bool is_succeeded_Set() const;
    bool is_succeeded_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QString m_completion_time;
    bool m_completion_time_isSet;
    bool m_completion_time_isValid;

    QList<OAIJobCondition> m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;

    qint32 m_failed;
    bool m_failed_isSet;
    bool m_failed_isValid;

    QString m_image_digest;
    bool m_image_digest_isSet;
    bool m_image_digest_isValid;

    QList<OAIInstanceStatus> m_instances;
    bool m_instances_isSet;
    bool m_instances_isValid;

    qint32 m_observed_generation;
    bool m_observed_generation_isSet;
    bool m_observed_generation_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    qint32 m_succeeded;
    bool m_succeeded_isSet;
    bool m_succeeded_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobStatus)

#endif // OAIJobStatus_H
