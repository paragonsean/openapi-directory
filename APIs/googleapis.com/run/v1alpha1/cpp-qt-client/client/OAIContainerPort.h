/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerPort.h
 *
 * ContainerPort represents a network port in a single container.
 */

#ifndef OAIContainerPort_H
#define OAIContainerPort_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContainerPort : public OAIObject {
public:
    OAIContainerPort();
    OAIContainerPort(QString json);
    ~OAIContainerPort() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getContainerPort() const;
    void setContainerPort(const qint32 &container_port);
    bool is_container_port_Set() const;
    bool is_container_port_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_container_port;
    bool m_container_port_isSet;
    bool m_container_port_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerPort)

#endif // OAIContainerPort_H
