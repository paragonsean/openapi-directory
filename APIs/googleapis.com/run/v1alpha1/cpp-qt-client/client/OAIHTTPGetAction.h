/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHTTPGetAction.h
 *
 * Not supported by Cloud Run HTTPGetAction describes an action based on HTTP Get requests.
 */

#ifndef OAIHTTPGetAction_H
#define OAIHTTPGetAction_H

#include <QJsonObject>

#include "OAIHTTPHeader.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHTTPHeader;

class OAIHTTPGetAction : public OAIObject {
public:
    OAIHTTPGetAction();
    OAIHTTPGetAction(QString json);
    ~OAIHTTPGetAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    QList<OAIHTTPHeader> getHttpHeaders() const;
    void setHttpHeaders(const QList<OAIHTTPHeader> &http_headers);
    bool is_http_headers_Set() const;
    bool is_http_headers_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getScheme() const;
    void setScheme(const QString &scheme);
    bool is_scheme_Set() const;
    bool is_scheme_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    QList<OAIHTTPHeader> m_http_headers;
    bool m_http_headers_isSet;
    bool m_http_headers_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_scheme;
    bool m_scheme_isSet;
    bool m_scheme_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHTTPGetAction)

#endif // OAIHTTPGetAction_H
