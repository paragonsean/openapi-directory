# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResourceRequirements(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, limits: Dict[str, str]=None, requests: Dict[str, str]=None):
        """ResourceRequirements - a model defined in OpenAPI

        :param limits: The limits of this ResourceRequirements.
        :param requests: The requests of this ResourceRequirements.
        """
        self.openapi_types = {
            'limits': Dict[str, str],
            'requests': Dict[str, str]
        }

        self.attribute_map = {
            'limits': 'limits',
            'requests': 'requests'
        }

        self._limits = limits
        self._requests = requests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceRequirements':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceRequirements of this ResourceRequirements.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def limits(self):
        """Gets the limits of this ResourceRequirements.

        (Optional) Only memory and CPU are supported. Limits describes the maximum amount of compute resources allowed. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go

        :return: The limits of this ResourceRequirements.
        :rtype: Dict[str, str]
        """
        return self._limits

    @limits.setter
    def limits(self, limits):
        """Sets the limits of this ResourceRequirements.

        (Optional) Only memory and CPU are supported. Limits describes the maximum amount of compute resources allowed. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go

        :param limits: The limits of this ResourceRequirements.
        :type limits: Dict[str, str]
        """

        self._limits = limits

    @property
    def requests(self):
        """Gets the requests of this ResourceRequirements.

        (Optional) Only memory and CPU are supported. Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go

        :return: The requests of this ResourceRequirements.
        :rtype: Dict[str, str]
        """
        return self._requests

    @requests.setter
    def requests(self, requests):
        """Sets the requests of this ResourceRequirements.

        (Optional) Only memory and CPU are supported. Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go

        :param requests: The requests of this ResourceRequirements.
        :type requests: Dict[str, str]
        """

        self._requests = requests
