# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListMeta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _continue: str=None, resource_version: str=None, self_link: str=None):
        """ListMeta - a model defined in OpenAPI

        :param _continue: The _continue of this ListMeta.
        :param resource_version: The resource_version of this ListMeta.
        :param self_link: The self_link of this ListMeta.
        """
        self.openapi_types = {
            '_continue': str,
            'resource_version': str,
            'self_link': str
        }

        self.attribute_map = {
            '_continue': 'continue',
            'resource_version': 'resourceVersion',
            'self_link': 'selfLink'
        }

        self.__continue = _continue
        self._resource_version = resource_version
        self._self_link = self_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListMeta of this ListMeta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _continue(self):
        """Gets the _continue of this ListMeta.

        continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response.

        :return: The _continue of this ListMeta.
        :rtype: str
        """
        return self.__continue

    @_continue.setter
    def _continue(self, _continue):
        """Sets the _continue of this ListMeta.

        continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response.

        :param _continue: The _continue of this ListMeta.
        :type _continue: str
        """

        self.__continue = _continue

    @property
    def resource_version(self):
        """Gets the resource_version of this ListMeta.

        String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional

        :return: The resource_version of this ListMeta.
        :rtype: str
        """
        return self._resource_version

    @resource_version.setter
    def resource_version(self, resource_version):
        """Sets the resource_version of this ListMeta.

        String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional

        :param resource_version: The resource_version of this ListMeta.
        :type resource_version: str
        """

        self._resource_version = resource_version

    @property
    def self_link(self):
        """Gets the self_link of this ListMeta.

        SelfLink is a URL representing this object. Populated by the system. Read-only. +optional

        :return: The self_link of this ListMeta.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this ListMeta.

        SelfLink is a URL representing this object. Populated by the system. Read-only. +optional

        :param self_link: The self_link of this ListMeta.
        :type self_link: str
        """

        self._self_link = self_link
