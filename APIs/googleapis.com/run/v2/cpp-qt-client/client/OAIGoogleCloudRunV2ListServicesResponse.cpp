/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRunV2ListServicesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRunV2ListServicesResponse::OAIGoogleCloudRunV2ListServicesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRunV2ListServicesResponse::OAIGoogleCloudRunV2ListServicesResponse() {
    this->initializeModel();
}

OAIGoogleCloudRunV2ListServicesResponse::~OAIGoogleCloudRunV2ListServicesResponse() {}

void OAIGoogleCloudRunV2ListServicesResponse::initializeModel() {

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_services_isSet = false;
    m_services_isValid = false;
}

void OAIGoogleCloudRunV2ListServicesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRunV2ListServicesResponse::fromJsonObject(QJsonObject json) {

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_services_isValid = ::OpenAPI::fromJsonValue(m_services, json[QString("services")]);
    m_services_isSet = !json[QString("services")].isNull() && m_services_isValid;
}

QString OAIGoogleCloudRunV2ListServicesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRunV2ListServicesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_services.size() > 0) {
        obj.insert(QString("services"), ::OpenAPI::toJsonValue(m_services));
    }
    return obj;
}

QString OAIGoogleCloudRunV2ListServicesResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleCloudRunV2ListServicesResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleCloudRunV2ListServicesResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleCloudRunV2ListServicesResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAIGoogleCloudRunV2Service> OAIGoogleCloudRunV2ListServicesResponse::getServices() const {
    return m_services;
}
void OAIGoogleCloudRunV2ListServicesResponse::setServices(const QList<OAIGoogleCloudRunV2Service> &services) {
    m_services = services;
    m_services_isSet = true;
}

bool OAIGoogleCloudRunV2ListServicesResponse::is_services_Set() const{
    return m_services_isSet;
}

bool OAIGoogleCloudRunV2ListServicesResponse::is_services_Valid() const{
    return m_services_isValid;
}

bool OAIGoogleCloudRunV2ListServicesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRunV2ListServicesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
