/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRunV2RunJobRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRunV2RunJobRequest::OAIGoogleCloudRunV2RunJobRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRunV2RunJobRequest::OAIGoogleCloudRunV2RunJobRequest() {
    this->initializeModel();
}

OAIGoogleCloudRunV2RunJobRequest::~OAIGoogleCloudRunV2RunJobRequest() {}

void OAIGoogleCloudRunV2RunJobRequest::initializeModel() {

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_overrides_isSet = false;
    m_overrides_isValid = false;

    m_validate_only_isSet = false;
    m_validate_only_isValid = false;
}

void OAIGoogleCloudRunV2RunJobRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRunV2RunJobRequest::fromJsonObject(QJsonObject json) {

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_overrides_isValid = ::OpenAPI::fromJsonValue(m_overrides, json[QString("overrides")]);
    m_overrides_isSet = !json[QString("overrides")].isNull() && m_overrides_isValid;

    m_validate_only_isValid = ::OpenAPI::fromJsonValue(m_validate_only, json[QString("validateOnly")]);
    m_validate_only_isSet = !json[QString("validateOnly")].isNull() && m_validate_only_isValid;
}

QString OAIGoogleCloudRunV2RunJobRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRunV2RunJobRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_overrides.isSet()) {
        obj.insert(QString("overrides"), ::OpenAPI::toJsonValue(m_overrides));
    }
    if (m_validate_only_isSet) {
        obj.insert(QString("validateOnly"), ::OpenAPI::toJsonValue(m_validate_only));
    }
    return obj;
}

QString OAIGoogleCloudRunV2RunJobRequest::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudRunV2RunJobRequest::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudRunV2RunJobRequest::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudRunV2RunJobRequest::is_etag_Valid() const{
    return m_etag_isValid;
}

OAIGoogleCloudRunV2Overrides OAIGoogleCloudRunV2RunJobRequest::getOverrides() const {
    return m_overrides;
}
void OAIGoogleCloudRunV2RunJobRequest::setOverrides(const OAIGoogleCloudRunV2Overrides &overrides) {
    m_overrides = overrides;
    m_overrides_isSet = true;
}

bool OAIGoogleCloudRunV2RunJobRequest::is_overrides_Set() const{
    return m_overrides_isSet;
}

bool OAIGoogleCloudRunV2RunJobRequest::is_overrides_Valid() const{
    return m_overrides_isValid;
}

bool OAIGoogleCloudRunV2RunJobRequest::isValidateOnly() const {
    return m_validate_only;
}
void OAIGoogleCloudRunV2RunJobRequest::setValidateOnly(const bool &validate_only) {
    m_validate_only = validate_only;
    m_validate_only_isSet = true;
}

bool OAIGoogleCloudRunV2RunJobRequest::is_validate_only_Set() const{
    return m_validate_only_isSet;
}

bool OAIGoogleCloudRunV2RunJobRequest::is_validate_only_Valid() const{
    return m_validate_only_isValid;
}

bool OAIGoogleCloudRunV2RunJobRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_overrides.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_validate_only_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRunV2RunJobRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
