/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleLongrunningWaitOperationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleLongrunningWaitOperationRequest::OAIGoogleLongrunningWaitOperationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleLongrunningWaitOperationRequest::OAIGoogleLongrunningWaitOperationRequest() {
    this->initializeModel();
}

OAIGoogleLongrunningWaitOperationRequest::~OAIGoogleLongrunningWaitOperationRequest() {}

void OAIGoogleLongrunningWaitOperationRequest::initializeModel() {

    m_timeout_isSet = false;
    m_timeout_isValid = false;
}

void OAIGoogleLongrunningWaitOperationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleLongrunningWaitOperationRequest::fromJsonObject(QJsonObject json) {

    m_timeout_isValid = ::OpenAPI::fromJsonValue(m_timeout, json[QString("timeout")]);
    m_timeout_isSet = !json[QString("timeout")].isNull() && m_timeout_isValid;
}

QString OAIGoogleLongrunningWaitOperationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleLongrunningWaitOperationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_timeout_isSet) {
        obj.insert(QString("timeout"), ::OpenAPI::toJsonValue(m_timeout));
    }
    return obj;
}

QString OAIGoogleLongrunningWaitOperationRequest::getTimeout() const {
    return m_timeout;
}
void OAIGoogleLongrunningWaitOperationRequest::setTimeout(const QString &timeout) {
    m_timeout = timeout;
    m_timeout_isSet = true;
}

bool OAIGoogleLongrunningWaitOperationRequest::is_timeout_Set() const{
    return m_timeout_isSet;
}

bool OAIGoogleLongrunningWaitOperationRequest::is_timeout_Valid() const{
    return m_timeout_isValid;
}

bool OAIGoogleLongrunningWaitOperationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_timeout_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleLongrunningWaitOperationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
