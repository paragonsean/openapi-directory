/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRunV2ListExecutionsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRunV2ListExecutionsResponse::OAIGoogleCloudRunV2ListExecutionsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRunV2ListExecutionsResponse::OAIGoogleCloudRunV2ListExecutionsResponse() {
    this->initializeModel();
}

OAIGoogleCloudRunV2ListExecutionsResponse::~OAIGoogleCloudRunV2ListExecutionsResponse() {}

void OAIGoogleCloudRunV2ListExecutionsResponse::initializeModel() {

    m_executions_isSet = false;
    m_executions_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIGoogleCloudRunV2ListExecutionsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRunV2ListExecutionsResponse::fromJsonObject(QJsonObject json) {

    m_executions_isValid = ::OpenAPI::fromJsonValue(m_executions, json[QString("executions")]);
    m_executions_isSet = !json[QString("executions")].isNull() && m_executions_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIGoogleCloudRunV2ListExecutionsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRunV2ListExecutionsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_executions.size() > 0) {
        obj.insert(QString("executions"), ::OpenAPI::toJsonValue(m_executions));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIGoogleCloudRunV2Execution> OAIGoogleCloudRunV2ListExecutionsResponse::getExecutions() const {
    return m_executions;
}
void OAIGoogleCloudRunV2ListExecutionsResponse::setExecutions(const QList<OAIGoogleCloudRunV2Execution> &executions) {
    m_executions = executions;
    m_executions_isSet = true;
}

bool OAIGoogleCloudRunV2ListExecutionsResponse::is_executions_Set() const{
    return m_executions_isSet;
}

bool OAIGoogleCloudRunV2ListExecutionsResponse::is_executions_Valid() const{
    return m_executions_isValid;
}

QString OAIGoogleCloudRunV2ListExecutionsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleCloudRunV2ListExecutionsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleCloudRunV2ListExecutionsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleCloudRunV2ListExecutionsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIGoogleCloudRunV2ListExecutionsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_executions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRunV2ListExecutionsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
