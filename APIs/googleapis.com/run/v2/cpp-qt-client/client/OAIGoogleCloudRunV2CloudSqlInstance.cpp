/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRunV2CloudSqlInstance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRunV2CloudSqlInstance::OAIGoogleCloudRunV2CloudSqlInstance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRunV2CloudSqlInstance::OAIGoogleCloudRunV2CloudSqlInstance() {
    this->initializeModel();
}

OAIGoogleCloudRunV2CloudSqlInstance::~OAIGoogleCloudRunV2CloudSqlInstance() {}

void OAIGoogleCloudRunV2CloudSqlInstance::initializeModel() {

    m_instances_isSet = false;
    m_instances_isValid = false;
}

void OAIGoogleCloudRunV2CloudSqlInstance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRunV2CloudSqlInstance::fromJsonObject(QJsonObject json) {

    m_instances_isValid = ::OpenAPI::fromJsonValue(m_instances, json[QString("instances")]);
    m_instances_isSet = !json[QString("instances")].isNull() && m_instances_isValid;
}

QString OAIGoogleCloudRunV2CloudSqlInstance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRunV2CloudSqlInstance::asJsonObject() const {
    QJsonObject obj;
    if (m_instances.size() > 0) {
        obj.insert(QString("instances"), ::OpenAPI::toJsonValue(m_instances));
    }
    return obj;
}

QList<QString> OAIGoogleCloudRunV2CloudSqlInstance::getInstances() const {
    return m_instances;
}
void OAIGoogleCloudRunV2CloudSqlInstance::setInstances(const QList<QString> &instances) {
    m_instances = instances;
    m_instances_isSet = true;
}

bool OAIGoogleCloudRunV2CloudSqlInstance::is_instances_Set() const{
    return m_instances_isSet;
}

bool OAIGoogleCloudRunV2CloudSqlInstance::is_instances_Valid() const{
    return m_instances_isValid;
}

bool OAIGoogleCloudRunV2CloudSqlInstance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instances.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRunV2CloudSqlInstance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
