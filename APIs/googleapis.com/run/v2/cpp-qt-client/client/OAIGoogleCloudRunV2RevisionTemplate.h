/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudRunV2RevisionTemplate.h
 *
 * RevisionTemplate describes the data a revision should have when created from a template.
 */

#ifndef OAIGoogleCloudRunV2RevisionTemplate_H
#define OAIGoogleCloudRunV2RevisionTemplate_H

#include <QJsonObject>

#include "OAIGoogleCloudRunV2Container.h"
#include "OAIGoogleCloudRunV2RevisionScaling.h"
#include "OAIGoogleCloudRunV2Volume.h"
#include "OAIGoogleCloudRunV2VpcAccess.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudRunV2Container;
class OAIGoogleCloudRunV2RevisionScaling;
class OAIGoogleCloudRunV2Volume;
class OAIGoogleCloudRunV2VpcAccess;

class OAIGoogleCloudRunV2RevisionTemplate : public OAIObject {
public:
    OAIGoogleCloudRunV2RevisionTemplate();
    OAIGoogleCloudRunV2RevisionTemplate(QString json);
    ~OAIGoogleCloudRunV2RevisionTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAnnotations() const;
    void setAnnotations(const QMap<QString, QString> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    QList<OAIGoogleCloudRunV2Container> getContainers() const;
    void setContainers(const QList<OAIGoogleCloudRunV2Container> &containers);
    bool is_containers_Set() const;
    bool is_containers_Valid() const;

    QString getEncryptionKey() const;
    void setEncryptionKey(const QString &encryption_key);
    bool is_encryption_key_Set() const;
    bool is_encryption_key_Valid() const;

    QString getExecutionEnvironment() const;
    void setExecutionEnvironment(const QString &execution_environment);
    bool is_execution_environment_Set() const;
    bool is_execution_environment_Valid() const;

    bool isHealthCheckDisabled() const;
    void setHealthCheckDisabled(const bool &health_check_disabled);
    bool is_health_check_disabled_Set() const;
    bool is_health_check_disabled_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    qint32 getMaxInstanceRequestConcurrency() const;
    void setMaxInstanceRequestConcurrency(const qint32 &max_instance_request_concurrency);
    bool is_max_instance_request_concurrency_Set() const;
    bool is_max_instance_request_concurrency_Valid() const;

    QString getRevision() const;
    void setRevision(const QString &revision);
    bool is_revision_Set() const;
    bool is_revision_Valid() const;

    OAIGoogleCloudRunV2RevisionScaling getScaling() const;
    void setScaling(const OAIGoogleCloudRunV2RevisionScaling &scaling);
    bool is_scaling_Set() const;
    bool is_scaling_Valid() const;

    QString getServiceAccount() const;
    void setServiceAccount(const QString &service_account);
    bool is_service_account_Set() const;
    bool is_service_account_Valid() const;

    bool isSessionAffinity() const;
    void setSessionAffinity(const bool &session_affinity);
    bool is_session_affinity_Set() const;
    bool is_session_affinity_Valid() const;

    QString getTimeout() const;
    void setTimeout(const QString &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    QList<OAIGoogleCloudRunV2Volume> getVolumes() const;
    void setVolumes(const QList<OAIGoogleCloudRunV2Volume> &volumes);
    bool is_volumes_Set() const;
    bool is_volumes_Valid() const;

    OAIGoogleCloudRunV2VpcAccess getVpcAccess() const;
    void setVpcAccess(const OAIGoogleCloudRunV2VpcAccess &vpc_access);
    bool is_vpc_access_Set() const;
    bool is_vpc_access_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    QList<OAIGoogleCloudRunV2Container> m_containers;
    bool m_containers_isSet;
    bool m_containers_isValid;

    QString m_encryption_key;
    bool m_encryption_key_isSet;
    bool m_encryption_key_isValid;

    QString m_execution_environment;
    bool m_execution_environment_isSet;
    bool m_execution_environment_isValid;

    bool m_health_check_disabled;
    bool m_health_check_disabled_isSet;
    bool m_health_check_disabled_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    qint32 m_max_instance_request_concurrency;
    bool m_max_instance_request_concurrency_isSet;
    bool m_max_instance_request_concurrency_isValid;

    QString m_revision;
    bool m_revision_isSet;
    bool m_revision_isValid;

    OAIGoogleCloudRunV2RevisionScaling m_scaling;
    bool m_scaling_isSet;
    bool m_scaling_isValid;

    QString m_service_account;
    bool m_service_account_isSet;
    bool m_service_account_isValid;

    bool m_session_affinity;
    bool m_session_affinity_isSet;
    bool m_session_affinity_isValid;

    QString m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    QList<OAIGoogleCloudRunV2Volume> m_volumes;
    bool m_volumes_isSet;
    bool m_volumes_isValid;

    OAIGoogleCloudRunV2VpcAccess m_vpc_access;
    bool m_vpc_access_isSet;
    bool m_vpc_access_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudRunV2RevisionTemplate)

#endif // OAIGoogleCloudRunV2RevisionTemplate_H
