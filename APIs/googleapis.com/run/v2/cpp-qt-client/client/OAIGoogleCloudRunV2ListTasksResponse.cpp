/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRunV2ListTasksResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRunV2ListTasksResponse::OAIGoogleCloudRunV2ListTasksResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRunV2ListTasksResponse::OAIGoogleCloudRunV2ListTasksResponse() {
    this->initializeModel();
}

OAIGoogleCloudRunV2ListTasksResponse::~OAIGoogleCloudRunV2ListTasksResponse() {}

void OAIGoogleCloudRunV2ListTasksResponse::initializeModel() {

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_tasks_isSet = false;
    m_tasks_isValid = false;
}

void OAIGoogleCloudRunV2ListTasksResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRunV2ListTasksResponse::fromJsonObject(QJsonObject json) {

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_tasks_isValid = ::OpenAPI::fromJsonValue(m_tasks, json[QString("tasks")]);
    m_tasks_isSet = !json[QString("tasks")].isNull() && m_tasks_isValid;
}

QString OAIGoogleCloudRunV2ListTasksResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRunV2ListTasksResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_tasks.size() > 0) {
        obj.insert(QString("tasks"), ::OpenAPI::toJsonValue(m_tasks));
    }
    return obj;
}

QString OAIGoogleCloudRunV2ListTasksResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleCloudRunV2ListTasksResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleCloudRunV2ListTasksResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleCloudRunV2ListTasksResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAIGoogleCloudRunV2Task> OAIGoogleCloudRunV2ListTasksResponse::getTasks() const {
    return m_tasks;
}
void OAIGoogleCloudRunV2ListTasksResponse::setTasks(const QList<OAIGoogleCloudRunV2Task> &tasks) {
    m_tasks = tasks;
    m_tasks_isSet = true;
}

bool OAIGoogleCloudRunV2ListTasksResponse::is_tasks_Set() const{
    return m_tasks_isSet;
}

bool OAIGoogleCloudRunV2ListTasksResponse::is_tasks_Valid() const{
    return m_tasks_isValid;
}

bool OAIGoogleCloudRunV2ListTasksResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tasks.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRunV2ListTasksResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
