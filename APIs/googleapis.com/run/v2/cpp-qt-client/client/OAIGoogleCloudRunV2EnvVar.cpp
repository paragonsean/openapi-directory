/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRunV2EnvVar.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRunV2EnvVar::OAIGoogleCloudRunV2EnvVar(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRunV2EnvVar::OAIGoogleCloudRunV2EnvVar() {
    this->initializeModel();
}

OAIGoogleCloudRunV2EnvVar::~OAIGoogleCloudRunV2EnvVar() {}

void OAIGoogleCloudRunV2EnvVar::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;

    m_value_source_isSet = false;
    m_value_source_isValid = false;
}

void OAIGoogleCloudRunV2EnvVar::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRunV2EnvVar::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;

    m_value_source_isValid = ::OpenAPI::fromJsonValue(m_value_source, json[QString("valueSource")]);
    m_value_source_isSet = !json[QString("valueSource")].isNull() && m_value_source_isValid;
}

QString OAIGoogleCloudRunV2EnvVar::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRunV2EnvVar::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    if (m_value_source.isSet()) {
        obj.insert(QString("valueSource"), ::OpenAPI::toJsonValue(m_value_source));
    }
    return obj;
}

QString OAIGoogleCloudRunV2EnvVar::getName() const {
    return m_name;
}
void OAIGoogleCloudRunV2EnvVar::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudRunV2EnvVar::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudRunV2EnvVar::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudRunV2EnvVar::getValue() const {
    return m_value;
}
void OAIGoogleCloudRunV2EnvVar::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIGoogleCloudRunV2EnvVar::is_value_Set() const{
    return m_value_isSet;
}

bool OAIGoogleCloudRunV2EnvVar::is_value_Valid() const{
    return m_value_isValid;
}

OAIGoogleCloudRunV2EnvVarSource OAIGoogleCloudRunV2EnvVar::getValueSource() const {
    return m_value_source;
}
void OAIGoogleCloudRunV2EnvVar::setValueSource(const OAIGoogleCloudRunV2EnvVarSource &value_source) {
    m_value_source = value_source;
    m_value_source_isSet = true;
}

bool OAIGoogleCloudRunV2EnvVar::is_value_source_Set() const{
    return m_value_source_isSet;
}

bool OAIGoogleCloudRunV2EnvVar::is_value_source_Valid() const{
    return m_value_source_isValid;
}

bool OAIGoogleCloudRunV2EnvVar::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_source.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRunV2EnvVar::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
