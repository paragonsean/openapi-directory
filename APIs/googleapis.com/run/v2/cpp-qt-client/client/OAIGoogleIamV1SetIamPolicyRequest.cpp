/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleIamV1SetIamPolicyRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleIamV1SetIamPolicyRequest::OAIGoogleIamV1SetIamPolicyRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleIamV1SetIamPolicyRequest::OAIGoogleIamV1SetIamPolicyRequest() {
    this->initializeModel();
}

OAIGoogleIamV1SetIamPolicyRequest::~OAIGoogleIamV1SetIamPolicyRequest() {}

void OAIGoogleIamV1SetIamPolicyRequest::initializeModel() {

    m_policy_isSet = false;
    m_policy_isValid = false;

    m_update_mask_isSet = false;
    m_update_mask_isValid = false;
}

void OAIGoogleIamV1SetIamPolicyRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleIamV1SetIamPolicyRequest::fromJsonObject(QJsonObject json) {

    m_policy_isValid = ::OpenAPI::fromJsonValue(m_policy, json[QString("policy")]);
    m_policy_isSet = !json[QString("policy")].isNull() && m_policy_isValid;

    m_update_mask_isValid = ::OpenAPI::fromJsonValue(m_update_mask, json[QString("updateMask")]);
    m_update_mask_isSet = !json[QString("updateMask")].isNull() && m_update_mask_isValid;
}

QString OAIGoogleIamV1SetIamPolicyRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleIamV1SetIamPolicyRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_policy.isSet()) {
        obj.insert(QString("policy"), ::OpenAPI::toJsonValue(m_policy));
    }
    if (m_update_mask_isSet) {
        obj.insert(QString("updateMask"), ::OpenAPI::toJsonValue(m_update_mask));
    }
    return obj;
}

OAIGoogleIamV1Policy OAIGoogleIamV1SetIamPolicyRequest::getPolicy() const {
    return m_policy;
}
void OAIGoogleIamV1SetIamPolicyRequest::setPolicy(const OAIGoogleIamV1Policy &policy) {
    m_policy = policy;
    m_policy_isSet = true;
}

bool OAIGoogleIamV1SetIamPolicyRequest::is_policy_Set() const{
    return m_policy_isSet;
}

bool OAIGoogleIamV1SetIamPolicyRequest::is_policy_Valid() const{
    return m_policy_isValid;
}

QString OAIGoogleIamV1SetIamPolicyRequest::getUpdateMask() const {
    return m_update_mask;
}
void OAIGoogleIamV1SetIamPolicyRequest::setUpdateMask(const QString &update_mask) {
    m_update_mask = update_mask;
    m_update_mask_isSet = true;
}

bool OAIGoogleIamV1SetIamPolicyRequest::is_update_mask_Set() const{
    return m_update_mask_isSet;
}

bool OAIGoogleIamV1SetIamPolicyRequest::is_update_mask_Valid() const{
    return m_update_mask_isValid;
}

bool OAIGoogleIamV1SetIamPolicyRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_mask_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleIamV1SetIamPolicyRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
