/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRunV2EnvVarSource from './GoogleCloudRunV2EnvVarSource';

/**
 * The GoogleCloudRunV2EnvVar model module.
 * @module model/GoogleCloudRunV2EnvVar
 * @version v2
 */
class GoogleCloudRunV2EnvVar {
    /**
     * Constructs a new <code>GoogleCloudRunV2EnvVar</code>.
     * EnvVar represents an environment variable present in a Container.
     * @alias module:model/GoogleCloudRunV2EnvVar
     */
    constructor() { 
        
        GoogleCloudRunV2EnvVar.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRunV2EnvVar</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRunV2EnvVar} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRunV2EnvVar} The populated <code>GoogleCloudRunV2EnvVar</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRunV2EnvVar();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('valueSource')) {
                obj['valueSource'] = GoogleCloudRunV2EnvVarSource.constructFromObject(data['valueSource']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRunV2EnvVar</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRunV2EnvVar</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        // validate the optional field `valueSource`
        if (data['valueSource']) { // data not null
          GoogleCloudRunV2EnvVarSource.validateJSON(data['valueSource']);
        }

        return true;
    }


}



/**
 * Required. Name of the environment variable. Must not exceed 32768 characters.
 * @member {String} name
 */
GoogleCloudRunV2EnvVar.prototype['name'] = undefined;

/**
 * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\", and the maximum length is 32768 bytes.
 * @member {String} value
 */
GoogleCloudRunV2EnvVar.prototype['value'] = undefined;

/**
 * @member {module:model/GoogleCloudRunV2EnvVarSource} valueSource
 */
GoogleCloudRunV2EnvVar.prototype['valueSource'] = undefined;






export default GoogleCloudRunV2EnvVar;

