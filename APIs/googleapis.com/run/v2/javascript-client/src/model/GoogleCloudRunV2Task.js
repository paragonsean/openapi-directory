/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRunV2Condition from './GoogleCloudRunV2Condition';
import GoogleCloudRunV2Container from './GoogleCloudRunV2Container';
import GoogleCloudRunV2TaskAttemptResult from './GoogleCloudRunV2TaskAttemptResult';
import GoogleCloudRunV2Volume from './GoogleCloudRunV2Volume';
import GoogleCloudRunV2VpcAccess from './GoogleCloudRunV2VpcAccess';

/**
 * The GoogleCloudRunV2Task model module.
 * @module model/GoogleCloudRunV2Task
 * @version v2
 */
class GoogleCloudRunV2Task {
    /**
     * Constructs a new <code>GoogleCloudRunV2Task</code>.
     * Task represents a single run of a container to completion.
     * @alias module:model/GoogleCloudRunV2Task
     */
    constructor() { 
        
        GoogleCloudRunV2Task.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRunV2Task</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRunV2Task} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRunV2Task} The populated <code>GoogleCloudRunV2Task</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRunV2Task();

            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], {'String': 'String'});
            }
            if (data.hasOwnProperty('completionTime')) {
                obj['completionTime'] = ApiClient.convertToType(data['completionTime'], 'String');
            }
            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], [GoogleCloudRunV2Condition]);
            }
            if (data.hasOwnProperty('containers')) {
                obj['containers'] = ApiClient.convertToType(data['containers'], [GoogleCloudRunV2Container]);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('deleteTime')) {
                obj['deleteTime'] = ApiClient.convertToType(data['deleteTime'], 'String');
            }
            if (data.hasOwnProperty('encryptionKey')) {
                obj['encryptionKey'] = ApiClient.convertToType(data['encryptionKey'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('execution')) {
                obj['execution'] = ApiClient.convertToType(data['execution'], 'String');
            }
            if (data.hasOwnProperty('executionEnvironment')) {
                obj['executionEnvironment'] = ApiClient.convertToType(data['executionEnvironment'], 'String');
            }
            if (data.hasOwnProperty('expireTime')) {
                obj['expireTime'] = ApiClient.convertToType(data['expireTime'], 'String');
            }
            if (data.hasOwnProperty('generation')) {
                obj['generation'] = ApiClient.convertToType(data['generation'], 'String');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('job')) {
                obj['job'] = ApiClient.convertToType(data['job'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('lastAttemptResult')) {
                obj['lastAttemptResult'] = GoogleCloudRunV2TaskAttemptResult.constructFromObject(data['lastAttemptResult']);
            }
            if (data.hasOwnProperty('logUri')) {
                obj['logUri'] = ApiClient.convertToType(data['logUri'], 'String');
            }
            if (data.hasOwnProperty('maxRetries')) {
                obj['maxRetries'] = ApiClient.convertToType(data['maxRetries'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('observedGeneration')) {
                obj['observedGeneration'] = ApiClient.convertToType(data['observedGeneration'], 'String');
            }
            if (data.hasOwnProperty('reconciling')) {
                obj['reconciling'] = ApiClient.convertToType(data['reconciling'], 'Boolean');
            }
            if (data.hasOwnProperty('retried')) {
                obj['retried'] = ApiClient.convertToType(data['retried'], 'Number');
            }
            if (data.hasOwnProperty('satisfiesPzs')) {
                obj['satisfiesPzs'] = ApiClient.convertToType(data['satisfiesPzs'], 'Boolean');
            }
            if (data.hasOwnProperty('scheduledTime')) {
                obj['scheduledTime'] = ApiClient.convertToType(data['scheduledTime'], 'String');
            }
            if (data.hasOwnProperty('serviceAccount')) {
                obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('timeout')) {
                obj['timeout'] = ApiClient.convertToType(data['timeout'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('volumes')) {
                obj['volumes'] = ApiClient.convertToType(data['volumes'], [GoogleCloudRunV2Volume]);
            }
            if (data.hasOwnProperty('vpcAccess')) {
                obj['vpcAccess'] = GoogleCloudRunV2VpcAccess.constructFromObject(data['vpcAccess']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRunV2Task</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRunV2Task</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['completionTime'] && !(typeof data['completionTime'] === 'string' || data['completionTime'] instanceof String)) {
            throw new Error("Expected the field `completionTime` to be a primitive type in the JSON string but got " + data['completionTime']);
        }
        if (data['conditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conditions'])) {
                throw new Error("Expected the field `conditions` to be an array in the JSON data but got " + data['conditions']);
            }
            // validate the optional field `conditions` (array)
            for (const item of data['conditions']) {
                GoogleCloudRunV2Condition.validateJSON(item);
            };
        }
        if (data['containers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['containers'])) {
                throw new Error("Expected the field `containers` to be an array in the JSON data but got " + data['containers']);
            }
            // validate the optional field `containers` (array)
            for (const item of data['containers']) {
                GoogleCloudRunV2Container.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['deleteTime'] && !(typeof data['deleteTime'] === 'string' || data['deleteTime'] instanceof String)) {
            throw new Error("Expected the field `deleteTime` to be a primitive type in the JSON string but got " + data['deleteTime']);
        }
        // ensure the json data is a string
        if (data['encryptionKey'] && !(typeof data['encryptionKey'] === 'string' || data['encryptionKey'] instanceof String)) {
            throw new Error("Expected the field `encryptionKey` to be a primitive type in the JSON string but got " + data['encryptionKey']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['execution'] && !(typeof data['execution'] === 'string' || data['execution'] instanceof String)) {
            throw new Error("Expected the field `execution` to be a primitive type in the JSON string but got " + data['execution']);
        }
        // ensure the json data is a string
        if (data['executionEnvironment'] && !(typeof data['executionEnvironment'] === 'string' || data['executionEnvironment'] instanceof String)) {
            throw new Error("Expected the field `executionEnvironment` to be a primitive type in the JSON string but got " + data['executionEnvironment']);
        }
        // ensure the json data is a string
        if (data['expireTime'] && !(typeof data['expireTime'] === 'string' || data['expireTime'] instanceof String)) {
            throw new Error("Expected the field `expireTime` to be a primitive type in the JSON string but got " + data['expireTime']);
        }
        // ensure the json data is a string
        if (data['generation'] && !(typeof data['generation'] === 'string' || data['generation'] instanceof String)) {
            throw new Error("Expected the field `generation` to be a primitive type in the JSON string but got " + data['generation']);
        }
        // ensure the json data is a string
        if (data['job'] && !(typeof data['job'] === 'string' || data['job'] instanceof String)) {
            throw new Error("Expected the field `job` to be a primitive type in the JSON string but got " + data['job']);
        }
        // validate the optional field `lastAttemptResult`
        if (data['lastAttemptResult']) { // data not null
          GoogleCloudRunV2TaskAttemptResult.validateJSON(data['lastAttemptResult']);
        }
        // ensure the json data is a string
        if (data['logUri'] && !(typeof data['logUri'] === 'string' || data['logUri'] instanceof String)) {
            throw new Error("Expected the field `logUri` to be a primitive type in the JSON string but got " + data['logUri']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['observedGeneration'] && !(typeof data['observedGeneration'] === 'string' || data['observedGeneration'] instanceof String)) {
            throw new Error("Expected the field `observedGeneration` to be a primitive type in the JSON string but got " + data['observedGeneration']);
        }
        // ensure the json data is a string
        if (data['scheduledTime'] && !(typeof data['scheduledTime'] === 'string' || data['scheduledTime'] instanceof String)) {
            throw new Error("Expected the field `scheduledTime` to be a primitive type in the JSON string but got " + data['scheduledTime']);
        }
        // ensure the json data is a string
        if (data['serviceAccount'] && !(typeof data['serviceAccount'] === 'string' || data['serviceAccount'] instanceof String)) {
            throw new Error("Expected the field `serviceAccount` to be a primitive type in the JSON string but got " + data['serviceAccount']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['timeout'] && !(typeof data['timeout'] === 'string' || data['timeout'] instanceof String)) {
            throw new Error("Expected the field `timeout` to be a primitive type in the JSON string but got " + data['timeout']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        if (data['volumes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['volumes'])) {
                throw new Error("Expected the field `volumes` to be an array in the JSON data but got " + data['volumes']);
            }
            // validate the optional field `volumes` (array)
            for (const item of data['volumes']) {
                GoogleCloudRunV2Volume.validateJSON(item);
            };
        }
        // validate the optional field `vpcAccess`
        if (data['vpcAccess']) { // data not null
          GoogleCloudRunV2VpcAccess.validateJSON(data['vpcAccess']);
        }

        return true;
    }


}



/**
 * Output only. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
 * @member {Object.<String, String>} annotations
 */
GoogleCloudRunV2Task.prototype['annotations'] = undefined;

/**
 * Output only. Represents time when the Task was completed. It is not guaranteed to be set in happens-before order across separate operations.
 * @member {String} completionTime
 */
GoogleCloudRunV2Task.prototype['completionTime'] = undefined;

/**
 * Output only. The Condition of this Task, containing its readiness status, and detailed error information in case it did not reach the desired state.
 * @member {Array.<module:model/GoogleCloudRunV2Condition>} conditions
 */
GoogleCloudRunV2Task.prototype['conditions'] = undefined;

/**
 * Holds the single container that defines the unit of execution for this task.
 * @member {Array.<module:model/GoogleCloudRunV2Container>} containers
 */
GoogleCloudRunV2Task.prototype['containers'] = undefined;

/**
 * Output only. Represents time when the task was created by the system. It is not guaranteed to be set in happens-before order across separate operations.
 * @member {String} createTime
 */
GoogleCloudRunV2Task.prototype['createTime'] = undefined;

/**
 * Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.
 * @member {String} deleteTime
 */
GoogleCloudRunV2Task.prototype['deleteTime'] = undefined;

/**
 * Output only. A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
 * @member {String} encryptionKey
 */
GoogleCloudRunV2Task.prototype['encryptionKey'] = undefined;

/**
 * Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
 * @member {String} etag
 */
GoogleCloudRunV2Task.prototype['etag'] = undefined;

/**
 * Output only. The name of the parent Execution.
 * @member {String} execution
 */
GoogleCloudRunV2Task.prototype['execution'] = undefined;

/**
 * The execution environment being used to host this Task.
 * @member {module:model/GoogleCloudRunV2Task.ExecutionEnvironmentEnum} executionEnvironment
 */
GoogleCloudRunV2Task.prototype['executionEnvironment'] = undefined;

/**
 * Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.
 * @member {String} expireTime
 */
GoogleCloudRunV2Task.prototype['expireTime'] = undefined;

/**
 * Output only. A number that monotonically increases every time the user modifies the desired state.
 * @member {String} generation
 */
GoogleCloudRunV2Task.prototype['generation'] = undefined;

/**
 * Output only. Index of the Task, unique per execution, and beginning at 0.
 * @member {Number} index
 */
GoogleCloudRunV2Task.prototype['index'] = undefined;

/**
 * Output only. The name of the parent Job.
 * @member {String} job
 */
GoogleCloudRunV2Task.prototype['job'] = undefined;

/**
 * Output only. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels
 * @member {Object.<String, String>} labels
 */
GoogleCloudRunV2Task.prototype['labels'] = undefined;

/**
 * @member {module:model/GoogleCloudRunV2TaskAttemptResult} lastAttemptResult
 */
GoogleCloudRunV2Task.prototype['lastAttemptResult'] = undefined;

/**
 * Output only. URI where logs for this execution can be found in Cloud Console.
 * @member {String} logUri
 */
GoogleCloudRunV2Task.prototype['logUri'] = undefined;

/**
 * Number of retries allowed per Task, before marking this Task failed.
 * @member {Number} maxRetries
 */
GoogleCloudRunV2Task.prototype['maxRetries'] = undefined;

/**
 * Output only. The unique name of this Task.
 * @member {String} name
 */
GoogleCloudRunV2Task.prototype['name'] = undefined;

/**
 * Output only. The generation of this Task. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.
 * @member {String} observedGeneration
 */
GoogleCloudRunV2Task.prototype['observedGeneration'] = undefined;

/**
 * Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.
 * @member {Boolean} reconciling
 */
GoogleCloudRunV2Task.prototype['reconciling'] = undefined;

/**
 * Output only. The number of times this Task was retried. Tasks are retried when they fail up to the maxRetries limit.
 * @member {Number} retried
 */
GoogleCloudRunV2Task.prototype['retried'] = undefined;

/**
 * Output only. Reserved for future use.
 * @member {Boolean} satisfiesPzs
 */
GoogleCloudRunV2Task.prototype['satisfiesPzs'] = undefined;

/**
 * Output only. Represents time when the task was scheduled to run by the system. It is not guaranteed to be set in happens-before order across separate operations.
 * @member {String} scheduledTime
 */
GoogleCloudRunV2Task.prototype['scheduledTime'] = undefined;

/**
 * Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account.
 * @member {String} serviceAccount
 */
GoogleCloudRunV2Task.prototype['serviceAccount'] = undefined;

/**
 * Output only. Represents time when the task started to run. It is not guaranteed to be set in happens-before order across separate operations.
 * @member {String} startTime
 */
GoogleCloudRunV2Task.prototype['startTime'] = undefined;

/**
 * Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.
 * @member {String} timeout
 */
GoogleCloudRunV2Task.prototype['timeout'] = undefined;

/**
 * Output only. Server assigned unique identifier for the Task. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
 * @member {String} uid
 */
GoogleCloudRunV2Task.prototype['uid'] = undefined;

/**
 * Output only. The last-modified time.
 * @member {String} updateTime
 */
GoogleCloudRunV2Task.prototype['updateTime'] = undefined;

/**
 * A list of Volumes to make available to containers.
 * @member {Array.<module:model/GoogleCloudRunV2Volume>} volumes
 */
GoogleCloudRunV2Task.prototype['volumes'] = undefined;

/**
 * @member {module:model/GoogleCloudRunV2VpcAccess} vpcAccess
 */
GoogleCloudRunV2Task.prototype['vpcAccess'] = undefined;





/**
 * Allowed values for the <code>executionEnvironment</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudRunV2Task['ExecutionEnvironmentEnum'] = {

    /**
     * value: "EXECUTION_ENVIRONMENT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "EXECUTION_ENVIRONMENT_UNSPECIFIED",

    /**
     * value: "EXECUTION_ENVIRONMENT_GEN1"
     * @const
     */
    "GEN1": "EXECUTION_ENVIRONMENT_GEN1",

    /**
     * value: "EXECUTION_ENVIRONMENT_GEN2"
     * @const
     */
    "GEN2": "EXECUTION_ENVIRONMENT_GEN2"
};



export default GoogleCloudRunV2Task;

