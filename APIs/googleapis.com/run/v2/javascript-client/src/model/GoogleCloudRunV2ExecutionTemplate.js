/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRunV2TaskTemplate from './GoogleCloudRunV2TaskTemplate';

/**
 * The GoogleCloudRunV2ExecutionTemplate model module.
 * @module model/GoogleCloudRunV2ExecutionTemplate
 * @version v2
 */
class GoogleCloudRunV2ExecutionTemplate {
    /**
     * Constructs a new <code>GoogleCloudRunV2ExecutionTemplate</code>.
     * ExecutionTemplate describes the data an execution should have when created from a template.
     * @alias module:model/GoogleCloudRunV2ExecutionTemplate
     */
    constructor() { 
        
        GoogleCloudRunV2ExecutionTemplate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRunV2ExecutionTemplate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRunV2ExecutionTemplate} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRunV2ExecutionTemplate} The populated <code>GoogleCloudRunV2ExecutionTemplate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRunV2ExecutionTemplate();

            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], {'String': 'String'});
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('parallelism')) {
                obj['parallelism'] = ApiClient.convertToType(data['parallelism'], 'Number');
            }
            if (data.hasOwnProperty('taskCount')) {
                obj['taskCount'] = ApiClient.convertToType(data['taskCount'], 'Number');
            }
            if (data.hasOwnProperty('template')) {
                obj['template'] = GoogleCloudRunV2TaskTemplate.constructFromObject(data['template']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRunV2ExecutionTemplate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRunV2ExecutionTemplate</code>.
     */
    static validateJSON(data) {
        // validate the optional field `template`
        if (data['template']) { // data not null
          GoogleCloudRunV2TaskTemplate.validateJSON(data['template']);
        }

        return true;
    }


}



/**
 * Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1 now have a corresponding field in v2 ExecutionTemplate. This field follows Kubernetes annotations' namespacing, limits, and rules.
 * @member {Object.<String, String>} annotations
 */
GoogleCloudRunV2ExecutionTemplate.prototype['annotations'] = undefined;

/**
 * Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 ExecutionTemplate.
 * @member {Object.<String, String>} labels
 */
GoogleCloudRunV2ExecutionTemplate.prototype['labels'] = undefined;

/**
 * Specifies the maximum desired number of tasks the execution should run at given time. Must be <= task_count. When the job is run, if this field is 0 or unset, the maximum possible value will be used for that execution. The actual number of tasks running in steady state will be less than this number when there are fewer tasks waiting to be completed remaining, i.e. when the work left to do is less than max parallelism.
 * @member {Number} parallelism
 */
GoogleCloudRunV2ExecutionTemplate.prototype['parallelism'] = undefined;

/**
 * Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the execution. Defaults to 1.
 * @member {Number} taskCount
 */
GoogleCloudRunV2ExecutionTemplate.prototype['taskCount'] = undefined;

/**
 * @member {module:model/GoogleCloudRunV2TaskTemplate} template
 */
GoogleCloudRunV2ExecutionTemplate.prototype['template'] = undefined;






export default GoogleCloudRunV2ExecutionTemplate;

