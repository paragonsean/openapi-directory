/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudRunV2NetworkInterface model module.
 * @module model/GoogleCloudRunV2NetworkInterface
 * @version v2
 */
class GoogleCloudRunV2NetworkInterface {
    /**
     * Constructs a new <code>GoogleCloudRunV2NetworkInterface</code>.
     * Direct VPC egress settings.
     * @alias module:model/GoogleCloudRunV2NetworkInterface
     */
    constructor() { 
        
        GoogleCloudRunV2NetworkInterface.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRunV2NetworkInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRunV2NetworkInterface} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRunV2NetworkInterface} The populated <code>GoogleCloudRunV2NetworkInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRunV2NetworkInterface();

            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('subnetwork')) {
                obj['subnetwork'] = ApiClient.convertToType(data['subnetwork'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRunV2NetworkInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRunV2NetworkInterface</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // ensure the json data is a string
        if (data['subnetwork'] && !(typeof data['subnetwork'] === 'string' || data['subnetwork'] instanceof String)) {
            throw new Error("Expected the field `subnetwork` to be a primitive type in the JSON string but got " + data['subnetwork']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }

        return true;
    }


}



/**
 * The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be looked up from the subnetwork.
 * @member {String} network
 */
GoogleCloudRunV2NetworkInterface.prototype['network'] = undefined;

/**
 * The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the subnetwork with the same name with the network will be used.
 * @member {String} subnetwork
 */
GoogleCloudRunV2NetworkInterface.prototype['subnetwork'] = undefined;

/**
 * Network tags applied to this Cloud Run resource.
 * @member {Array.<String>} tags
 */
GoogleCloudRunV2NetworkInterface.prototype['tags'] = undefined;






export default GoogleCloudRunV2NetworkInterface;

