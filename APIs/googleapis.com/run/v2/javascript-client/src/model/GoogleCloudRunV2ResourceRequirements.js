/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudRunV2ResourceRequirements model module.
 * @module model/GoogleCloudRunV2ResourceRequirements
 * @version v2
 */
class GoogleCloudRunV2ResourceRequirements {
    /**
     * Constructs a new <code>GoogleCloudRunV2ResourceRequirements</code>.
     * ResourceRequirements describes the compute resource requirements.
     * @alias module:model/GoogleCloudRunV2ResourceRequirements
     */
    constructor() { 
        
        GoogleCloudRunV2ResourceRequirements.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRunV2ResourceRequirements</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRunV2ResourceRequirements} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRunV2ResourceRequirements} The populated <code>GoogleCloudRunV2ResourceRequirements</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRunV2ResourceRequirements();

            if (data.hasOwnProperty('cpuIdle')) {
                obj['cpuIdle'] = ApiClient.convertToType(data['cpuIdle'], 'Boolean');
            }
            if (data.hasOwnProperty('limits')) {
                obj['limits'] = ApiClient.convertToType(data['limits'], {'String': 'String'});
            }
            if (data.hasOwnProperty('startupCpuBoost')) {
                obj['startupCpuBoost'] = ApiClient.convertToType(data['startupCpuBoost'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRunV2ResourceRequirements</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRunV2ResourceRequirements</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Determines whether CPU is only allocated during requests (true by default). However, if ResourceRequirements is set, the caller must explicitly set this field to true to preserve the default behavior.
 * @member {Boolean} cpuIdle
 */
GoogleCloudRunV2ResourceRequirements.prototype['cpuIdle'] = undefined;

/**
 * Only `memory` and `cpu` keys in the map are supported. Notes: * The only supported values for CPU are '1', '2', '4', and '8'. Setting 4 CPU requires at least 2Gi of memory. For more information, go to https://cloud.google.com/run/docs/configuring/cpu. * For supported 'memory' values and syntax, go to https://cloud.google.com/run/docs/configuring/memory-limits
 * @member {Object.<String, String>} limits
 */
GoogleCloudRunV2ResourceRequirements.prototype['limits'] = undefined;

/**
 * Determines whether CPU should be boosted on startup of a new container instance above the requested CPU threshold, this can help reduce cold-start latency.
 * @member {Boolean} startupCpuBoost
 */
GoogleCloudRunV2ResourceRequirements.prototype['startupCpuBoost'] = undefined;






export default GoogleCloudRunV2ResourceRequirements;

