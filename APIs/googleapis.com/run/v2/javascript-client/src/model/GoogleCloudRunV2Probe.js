/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRunV2GRPCAction from './GoogleCloudRunV2GRPCAction';
import GoogleCloudRunV2HTTPGetAction from './GoogleCloudRunV2HTTPGetAction';
import GoogleCloudRunV2TCPSocketAction from './GoogleCloudRunV2TCPSocketAction';

/**
 * The GoogleCloudRunV2Probe model module.
 * @module model/GoogleCloudRunV2Probe
 * @version v2
 */
class GoogleCloudRunV2Probe {
    /**
     * Constructs a new <code>GoogleCloudRunV2Probe</code>.
     * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
     * @alias module:model/GoogleCloudRunV2Probe
     */
    constructor() { 
        
        GoogleCloudRunV2Probe.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRunV2Probe</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRunV2Probe} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRunV2Probe} The populated <code>GoogleCloudRunV2Probe</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRunV2Probe();

            if (data.hasOwnProperty('failureThreshold')) {
                obj['failureThreshold'] = ApiClient.convertToType(data['failureThreshold'], 'Number');
            }
            if (data.hasOwnProperty('grpc')) {
                obj['grpc'] = GoogleCloudRunV2GRPCAction.constructFromObject(data['grpc']);
            }
            if (data.hasOwnProperty('httpGet')) {
                obj['httpGet'] = GoogleCloudRunV2HTTPGetAction.constructFromObject(data['httpGet']);
            }
            if (data.hasOwnProperty('initialDelaySeconds')) {
                obj['initialDelaySeconds'] = ApiClient.convertToType(data['initialDelaySeconds'], 'Number');
            }
            if (data.hasOwnProperty('periodSeconds')) {
                obj['periodSeconds'] = ApiClient.convertToType(data['periodSeconds'], 'Number');
            }
            if (data.hasOwnProperty('tcpSocket')) {
                obj['tcpSocket'] = GoogleCloudRunV2TCPSocketAction.constructFromObject(data['tcpSocket']);
            }
            if (data.hasOwnProperty('timeoutSeconds')) {
                obj['timeoutSeconds'] = ApiClient.convertToType(data['timeoutSeconds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRunV2Probe</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRunV2Probe</code>.
     */
    static validateJSON(data) {
        // validate the optional field `grpc`
        if (data['grpc']) { // data not null
          GoogleCloudRunV2GRPCAction.validateJSON(data['grpc']);
        }
        // validate the optional field `httpGet`
        if (data['httpGet']) { // data not null
          GoogleCloudRunV2HTTPGetAction.validateJSON(data['httpGet']);
        }
        // validate the optional field `tcpSocket`
        if (data['tcpSocket']) { // data not null
          GoogleCloudRunV2TCPSocketAction.validateJSON(data['tcpSocket']);
        }

        return true;
    }


}



/**
 * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
 * @member {Number} failureThreshold
 */
GoogleCloudRunV2Probe.prototype['failureThreshold'] = undefined;

/**
 * @member {module:model/GoogleCloudRunV2GRPCAction} grpc
 */
GoogleCloudRunV2Probe.prototype['grpc'] = undefined;

/**
 * @member {module:model/GoogleCloudRunV2HTTPGetAction} httpGet
 */
GoogleCloudRunV2Probe.prototype['httpGet'] = undefined;

/**
 * Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240.
 * @member {Number} initialDelaySeconds
 */
GoogleCloudRunV2Probe.prototype['initialDelaySeconds'] = undefined;

/**
 * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeout_seconds.
 * @member {Number} periodSeconds
 */
GoogleCloudRunV2Probe.prototype['periodSeconds'] = undefined;

/**
 * @member {module:model/GoogleCloudRunV2TCPSocketAction} tcpSocket
 */
GoogleCloudRunV2Probe.prototype['tcpSocket'] = undefined;

/**
 * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds.
 * @member {Number} timeoutSeconds
 */
GoogleCloudRunV2Probe.prototype['timeoutSeconds'] = undefined;






export default GoogleCloudRunV2Probe;

