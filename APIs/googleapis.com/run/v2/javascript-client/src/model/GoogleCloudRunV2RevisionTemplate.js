/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRunV2Container from './GoogleCloudRunV2Container';
import GoogleCloudRunV2RevisionScaling from './GoogleCloudRunV2RevisionScaling';
import GoogleCloudRunV2Volume from './GoogleCloudRunV2Volume';
import GoogleCloudRunV2VpcAccess from './GoogleCloudRunV2VpcAccess';

/**
 * The GoogleCloudRunV2RevisionTemplate model module.
 * @module model/GoogleCloudRunV2RevisionTemplate
 * @version v2
 */
class GoogleCloudRunV2RevisionTemplate {
    /**
     * Constructs a new <code>GoogleCloudRunV2RevisionTemplate</code>.
     * RevisionTemplate describes the data a revision should have when created from a template.
     * @alias module:model/GoogleCloudRunV2RevisionTemplate
     */
    constructor() { 
        
        GoogleCloudRunV2RevisionTemplate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRunV2RevisionTemplate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRunV2RevisionTemplate} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRunV2RevisionTemplate} The populated <code>GoogleCloudRunV2RevisionTemplate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRunV2RevisionTemplate();

            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], {'String': 'String'});
            }
            if (data.hasOwnProperty('containers')) {
                obj['containers'] = ApiClient.convertToType(data['containers'], [GoogleCloudRunV2Container]);
            }
            if (data.hasOwnProperty('encryptionKey')) {
                obj['encryptionKey'] = ApiClient.convertToType(data['encryptionKey'], 'String');
            }
            if (data.hasOwnProperty('executionEnvironment')) {
                obj['executionEnvironment'] = ApiClient.convertToType(data['executionEnvironment'], 'String');
            }
            if (data.hasOwnProperty('healthCheckDisabled')) {
                obj['healthCheckDisabled'] = ApiClient.convertToType(data['healthCheckDisabled'], 'Boolean');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('maxInstanceRequestConcurrency')) {
                obj['maxInstanceRequestConcurrency'] = ApiClient.convertToType(data['maxInstanceRequestConcurrency'], 'Number');
            }
            if (data.hasOwnProperty('revision')) {
                obj['revision'] = ApiClient.convertToType(data['revision'], 'String');
            }
            if (data.hasOwnProperty('scaling')) {
                obj['scaling'] = GoogleCloudRunV2RevisionScaling.constructFromObject(data['scaling']);
            }
            if (data.hasOwnProperty('serviceAccount')) {
                obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'String');
            }
            if (data.hasOwnProperty('sessionAffinity')) {
                obj['sessionAffinity'] = ApiClient.convertToType(data['sessionAffinity'], 'Boolean');
            }
            if (data.hasOwnProperty('timeout')) {
                obj['timeout'] = ApiClient.convertToType(data['timeout'], 'String');
            }
            if (data.hasOwnProperty('volumes')) {
                obj['volumes'] = ApiClient.convertToType(data['volumes'], [GoogleCloudRunV2Volume]);
            }
            if (data.hasOwnProperty('vpcAccess')) {
                obj['vpcAccess'] = GoogleCloudRunV2VpcAccess.constructFromObject(data['vpcAccess']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRunV2RevisionTemplate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRunV2RevisionTemplate</code>.
     */
    static validateJSON(data) {
        if (data['containers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['containers'])) {
                throw new Error("Expected the field `containers` to be an array in the JSON data but got " + data['containers']);
            }
            // validate the optional field `containers` (array)
            for (const item of data['containers']) {
                GoogleCloudRunV2Container.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['encryptionKey'] && !(typeof data['encryptionKey'] === 'string' || data['encryptionKey'] instanceof String)) {
            throw new Error("Expected the field `encryptionKey` to be a primitive type in the JSON string but got " + data['encryptionKey']);
        }
        // ensure the json data is a string
        if (data['executionEnvironment'] && !(typeof data['executionEnvironment'] === 'string' || data['executionEnvironment'] instanceof String)) {
            throw new Error("Expected the field `executionEnvironment` to be a primitive type in the JSON string but got " + data['executionEnvironment']);
        }
        // ensure the json data is a string
        if (data['revision'] && !(typeof data['revision'] === 'string' || data['revision'] instanceof String)) {
            throw new Error("Expected the field `revision` to be a primitive type in the JSON string but got " + data['revision']);
        }
        // validate the optional field `scaling`
        if (data['scaling']) { // data not null
          GoogleCloudRunV2RevisionScaling.validateJSON(data['scaling']);
        }
        // ensure the json data is a string
        if (data['serviceAccount'] && !(typeof data['serviceAccount'] === 'string' || data['serviceAccount'] instanceof String)) {
            throw new Error("Expected the field `serviceAccount` to be a primitive type in the JSON string but got " + data['serviceAccount']);
        }
        // ensure the json data is a string
        if (data['timeout'] && !(typeof data['timeout'] === 'string' || data['timeout'] instanceof String)) {
            throw new Error("Expected the field `timeout` to be a primitive type in the JSON string but got " + data['timeout']);
        }
        if (data['volumes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['volumes'])) {
                throw new Error("Expected the field `volumes` to be an array in the JSON data but got " + data['volumes']);
            }
            // validate the optional field `volumes` (array)
            for (const item of data['volumes']) {
                GoogleCloudRunV2Volume.validateJSON(item);
            };
        }
        // validate the optional field `vpcAccess`
        if (data['vpcAccess']) { // data not null
          GoogleCloudRunV2VpcAccess.validateJSON(data['vpcAccess']);
        }

        return true;
    }


}



/**
 * Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1 now have a corresponding field in v2 RevisionTemplate. This field follows Kubernetes annotations' namespacing, limits, and rules.
 * @member {Object.<String, String>} annotations
 */
GoogleCloudRunV2RevisionTemplate.prototype['annotations'] = undefined;

/**
 * Holds the single container that defines the unit of execution for this Revision.
 * @member {Array.<module:model/GoogleCloudRunV2Container>} containers
 */
GoogleCloudRunV2RevisionTemplate.prototype['containers'] = undefined;

/**
 * A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
 * @member {String} encryptionKey
 */
GoogleCloudRunV2RevisionTemplate.prototype['encryptionKey'] = undefined;

/**
 * The sandbox environment to host this Revision.
 * @member {module:model/GoogleCloudRunV2RevisionTemplate.ExecutionEnvironmentEnum} executionEnvironment
 */
GoogleCloudRunV2RevisionTemplate.prototype['executionEnvironment'] = undefined;

/**
 * Optional. Disables health checking containers during deployment.
 * @member {Boolean} healthCheckDisabled
 */
GoogleCloudRunV2RevisionTemplate.prototype['healthCheckDisabled'] = undefined;

/**
 * Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 RevisionTemplate.
 * @member {Object.<String, String>} labels
 */
GoogleCloudRunV2RevisionTemplate.prototype['labels'] = undefined;

/**
 * Sets the maximum number of requests that each serving instance can receive.
 * @member {Number} maxInstanceRequestConcurrency
 */
GoogleCloudRunV2RevisionTemplate.prototype['maxInstanceRequestConcurrency'] = undefined;

/**
 * The unique name for the revision. If this field is omitted, it will be automatically generated based on the Service name.
 * @member {String} revision
 */
GoogleCloudRunV2RevisionTemplate.prototype['revision'] = undefined;

/**
 * @member {module:model/GoogleCloudRunV2RevisionScaling} scaling
 */
GoogleCloudRunV2RevisionTemplate.prototype['scaling'] = undefined;

/**
 * Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.
 * @member {String} serviceAccount
 */
GoogleCloudRunV2RevisionTemplate.prototype['serviceAccount'] = undefined;

/**
 * Optional. Enable session affinity.
 * @member {Boolean} sessionAffinity
 */
GoogleCloudRunV2RevisionTemplate.prototype['sessionAffinity'] = undefined;

/**
 * Max allowed time for an instance to respond to a request.
 * @member {String} timeout
 */
GoogleCloudRunV2RevisionTemplate.prototype['timeout'] = undefined;

/**
 * A list of Volumes to make available to containers.
 * @member {Array.<module:model/GoogleCloudRunV2Volume>} volumes
 */
GoogleCloudRunV2RevisionTemplate.prototype['volumes'] = undefined;

/**
 * @member {module:model/GoogleCloudRunV2VpcAccess} vpcAccess
 */
GoogleCloudRunV2RevisionTemplate.prototype['vpcAccess'] = undefined;





/**
 * Allowed values for the <code>executionEnvironment</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudRunV2RevisionTemplate['ExecutionEnvironmentEnum'] = {

    /**
     * value: "EXECUTION_ENVIRONMENT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "EXECUTION_ENVIRONMENT_UNSPECIFIED",

    /**
     * value: "EXECUTION_ENVIRONMENT_GEN1"
     * @const
     */
    "GEN1": "EXECUTION_ENVIRONMENT_GEN1",

    /**
     * value: "EXECUTION_ENVIRONMENT_GEN2"
     * @const
     */
    "GEN2": "EXECUTION_ENVIRONMENT_GEN2"
};



export default GoogleCloudRunV2RevisionTemplate;

