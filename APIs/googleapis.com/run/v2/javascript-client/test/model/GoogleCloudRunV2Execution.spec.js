/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudRunAdminApi);
  }
}(this, function(expect, CloudRunAdminApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudRunV2Execution', function() {
    it('should create an instance of GoogleCloudRunV2Execution', function() {
      // uncomment below and update the code to test GoogleCloudRunV2Execution
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be.a(CloudRunAdminApi.GoogleCloudRunV2Execution);
    });

    it('should have the property annotations (base name: "annotations")', function() {
      // uncomment below and update the code to test the property annotations
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property cancelledCount (base name: "cancelledCount")', function() {
      // uncomment below and update the code to test the property cancelledCount
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property completionTime (base name: "completionTime")', function() {
      // uncomment below and update the code to test the property completionTime
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property conditions (base name: "conditions")', function() {
      // uncomment below and update the code to test the property conditions
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property deleteTime (base name: "deleteTime")', function() {
      // uncomment below and update the code to test the property deleteTime
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property expireTime (base name: "expireTime")', function() {
      // uncomment below and update the code to test the property expireTime
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property failedCount (base name: "failedCount")', function() {
      // uncomment below and update the code to test the property failedCount
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property generation (base name: "generation")', function() {
      // uncomment below and update the code to test the property generation
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property job (base name: "job")', function() {
      // uncomment below and update the code to test the property job
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property launchStage (base name: "launchStage")', function() {
      // uncomment below and update the code to test the property launchStage
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property logUri (base name: "logUri")', function() {
      // uncomment below and update the code to test the property logUri
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property observedGeneration (base name: "observedGeneration")', function() {
      // uncomment below and update the code to test the property observedGeneration
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property parallelism (base name: "parallelism")', function() {
      // uncomment below and update the code to test the property parallelism
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property reconciling (base name: "reconciling")', function() {
      // uncomment below and update the code to test the property reconciling
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property retriedCount (base name: "retriedCount")', function() {
      // uncomment below and update the code to test the property retriedCount
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property runningCount (base name: "runningCount")', function() {
      // uncomment below and update the code to test the property runningCount
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property satisfiesPzs (base name: "satisfiesPzs")', function() {
      // uncomment below and update the code to test the property satisfiesPzs
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property succeededCount (base name: "succeededCount")', function() {
      // uncomment below and update the code to test the property succeededCount
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property taskCount (base name: "taskCount")', function() {
      // uncomment below and update the code to test the property taskCount
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property template (base name: "template")', function() {
      // uncomment below and update the code to test the property template
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property uid (base name: "uid")', function() {
      // uncomment below and update the code to test the property uid
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Execution();
      //expect(instance).to.be();
    });

  });

}));
