/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudRunAdminApi);
  }
}(this, function(expect, CloudRunAdminApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudRunAdminApi.GoogleCloudRunV2Volume();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudRunV2Volume', function() {
    it('should create an instance of GoogleCloudRunV2Volume', function() {
      // uncomment below and update the code to test GoogleCloudRunV2Volume
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Volume();
      //expect(instance).to.be.a(CloudRunAdminApi.GoogleCloudRunV2Volume);
    });

    it('should have the property cloudSqlInstance (base name: "cloudSqlInstance")', function() {
      // uncomment below and update the code to test the property cloudSqlInstance
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Volume();
      //expect(instance).to.be();
    });

    it('should have the property emptyDir (base name: "emptyDir")', function() {
      // uncomment below and update the code to test the property emptyDir
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Volume();
      //expect(instance).to.be();
    });

    it('should have the property gcs (base name: "gcs")', function() {
      // uncomment below and update the code to test the property gcs
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Volume();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Volume();
      //expect(instance).to.be();
    });

    it('should have the property nfs (base name: "nfs")', function() {
      // uncomment below and update the code to test the property nfs
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Volume();
      //expect(instance).to.be();
    });

    it('should have the property secret (base name: "secret")', function() {
      // uncomment below and update the code to test the property secret
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Volume();
      //expect(instance).to.be();
    });

  });

}));
