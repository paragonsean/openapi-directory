/**
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudRunAdminApi);
  }
}(this, function(expect, CloudRunAdminApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudRunV2Service', function() {
    it('should create an instance of GoogleCloudRunV2Service', function() {
      // uncomment below and update the code to test GoogleCloudRunV2Service
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be.a(CloudRunAdminApi.GoogleCloudRunV2Service);
    });

    it('should have the property annotations (base name: "annotations")', function() {
      // uncomment below and update the code to test the property annotations
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property binaryAuthorization (base name: "binaryAuthorization")', function() {
      // uncomment below and update the code to test the property binaryAuthorization
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property client (base name: "client")', function() {
      // uncomment below and update the code to test the property client
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property clientVersion (base name: "clientVersion")', function() {
      // uncomment below and update the code to test the property clientVersion
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property conditions (base name: "conditions")', function() {
      // uncomment below and update the code to test the property conditions
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property creator (base name: "creator")', function() {
      // uncomment below and update the code to test the property creator
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property customAudiences (base name: "customAudiences")', function() {
      // uncomment below and update the code to test the property customAudiences
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property defaultUriDisabled (base name: "defaultUriDisabled")', function() {
      // uncomment below and update the code to test the property defaultUriDisabled
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property deleteTime (base name: "deleteTime")', function() {
      // uncomment below and update the code to test the property deleteTime
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property expireTime (base name: "expireTime")', function() {
      // uncomment below and update the code to test the property expireTime
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property generation (base name: "generation")', function() {
      // uncomment below and update the code to test the property generation
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property ingress (base name: "ingress")', function() {
      // uncomment below and update the code to test the property ingress
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property lastModifier (base name: "lastModifier")', function() {
      // uncomment below and update the code to test the property lastModifier
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property latestCreatedRevision (base name: "latestCreatedRevision")', function() {
      // uncomment below and update the code to test the property latestCreatedRevision
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property latestReadyRevision (base name: "latestReadyRevision")', function() {
      // uncomment below and update the code to test the property latestReadyRevision
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property launchStage (base name: "launchStage")', function() {
      // uncomment below and update the code to test the property launchStage
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property observedGeneration (base name: "observedGeneration")', function() {
      // uncomment below and update the code to test the property observedGeneration
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property reconciling (base name: "reconciling")', function() {
      // uncomment below and update the code to test the property reconciling
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property satisfiesPzs (base name: "satisfiesPzs")', function() {
      // uncomment below and update the code to test the property satisfiesPzs
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property scaling (base name: "scaling")', function() {
      // uncomment below and update the code to test the property scaling
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property template (base name: "template")', function() {
      // uncomment below and update the code to test the property template
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property terminalCondition (base name: "terminalCondition")', function() {
      // uncomment below and update the code to test the property terminalCondition
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property traffic (base name: "traffic")', function() {
      // uncomment below and update the code to test the property traffic
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property trafficStatuses (base name: "trafficStatuses")', function() {
      // uncomment below and update the code to test the property trafficStatuses
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property uid (base name: "uid")', function() {
      // uncomment below and update the code to test the property uid
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

    it('should have the property uri (base name: "uri")', function() {
      // uncomment below and update the code to test the property uri
      //var instance = new CloudRunAdminApi.GoogleCloudRunV2Service();
      //expect(instance).to.be();
    });

  });

}));
