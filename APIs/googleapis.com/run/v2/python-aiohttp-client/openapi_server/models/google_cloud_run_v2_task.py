# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_run_v2_condition import GoogleCloudRunV2Condition
from openapi_server.models.google_cloud_run_v2_container import GoogleCloudRunV2Container
from openapi_server.models.google_cloud_run_v2_task_attempt_result import GoogleCloudRunV2TaskAttemptResult
from openapi_server.models.google_cloud_run_v2_volume import GoogleCloudRunV2Volume
from openapi_server.models.google_cloud_run_v2_vpc_access import GoogleCloudRunV2VpcAccess
from openapi_server import util


class GoogleCloudRunV2Task(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotations: Dict[str, str]=None, completion_time: str=None, conditions: List[GoogleCloudRunV2Condition]=None, containers: List[GoogleCloudRunV2Container]=None, create_time: str=None, delete_time: str=None, encryption_key: str=None, etag: str=None, execution: str=None, execution_environment: str=None, expire_time: str=None, generation: str=None, index: int=None, job: str=None, labels: Dict[str, str]=None, last_attempt_result: GoogleCloudRunV2TaskAttemptResult=None, log_uri: str=None, max_retries: int=None, name: str=None, observed_generation: str=None, reconciling: bool=None, retried: int=None, satisfies_pzs: bool=None, scheduled_time: str=None, service_account: str=None, start_time: str=None, timeout: str=None, uid: str=None, update_time: str=None, volumes: List[GoogleCloudRunV2Volume]=None, vpc_access: GoogleCloudRunV2VpcAccess=None):
        """GoogleCloudRunV2Task - a model defined in OpenAPI

        :param annotations: The annotations of this GoogleCloudRunV2Task.
        :param completion_time: The completion_time of this GoogleCloudRunV2Task.
        :param conditions: The conditions of this GoogleCloudRunV2Task.
        :param containers: The containers of this GoogleCloudRunV2Task.
        :param create_time: The create_time of this GoogleCloudRunV2Task.
        :param delete_time: The delete_time of this GoogleCloudRunV2Task.
        :param encryption_key: The encryption_key of this GoogleCloudRunV2Task.
        :param etag: The etag of this GoogleCloudRunV2Task.
        :param execution: The execution of this GoogleCloudRunV2Task.
        :param execution_environment: The execution_environment of this GoogleCloudRunV2Task.
        :param expire_time: The expire_time of this GoogleCloudRunV2Task.
        :param generation: The generation of this GoogleCloudRunV2Task.
        :param index: The index of this GoogleCloudRunV2Task.
        :param job: The job of this GoogleCloudRunV2Task.
        :param labels: The labels of this GoogleCloudRunV2Task.
        :param last_attempt_result: The last_attempt_result of this GoogleCloudRunV2Task.
        :param log_uri: The log_uri of this GoogleCloudRunV2Task.
        :param max_retries: The max_retries of this GoogleCloudRunV2Task.
        :param name: The name of this GoogleCloudRunV2Task.
        :param observed_generation: The observed_generation of this GoogleCloudRunV2Task.
        :param reconciling: The reconciling of this GoogleCloudRunV2Task.
        :param retried: The retried of this GoogleCloudRunV2Task.
        :param satisfies_pzs: The satisfies_pzs of this GoogleCloudRunV2Task.
        :param scheduled_time: The scheduled_time of this GoogleCloudRunV2Task.
        :param service_account: The service_account of this GoogleCloudRunV2Task.
        :param start_time: The start_time of this GoogleCloudRunV2Task.
        :param timeout: The timeout of this GoogleCloudRunV2Task.
        :param uid: The uid of this GoogleCloudRunV2Task.
        :param update_time: The update_time of this GoogleCloudRunV2Task.
        :param volumes: The volumes of this GoogleCloudRunV2Task.
        :param vpc_access: The vpc_access of this GoogleCloudRunV2Task.
        """
        self.openapi_types = {
            'annotations': Dict[str, str],
            'completion_time': str,
            'conditions': List[GoogleCloudRunV2Condition],
            'containers': List[GoogleCloudRunV2Container],
            'create_time': str,
            'delete_time': str,
            'encryption_key': str,
            'etag': str,
            'execution': str,
            'execution_environment': str,
            'expire_time': str,
            'generation': str,
            'index': int,
            'job': str,
            'labels': Dict[str, str],
            'last_attempt_result': GoogleCloudRunV2TaskAttemptResult,
            'log_uri': str,
            'max_retries': int,
            'name': str,
            'observed_generation': str,
            'reconciling': bool,
            'retried': int,
            'satisfies_pzs': bool,
            'scheduled_time': str,
            'service_account': str,
            'start_time': str,
            'timeout': str,
            'uid': str,
            'update_time': str,
            'volumes': List[GoogleCloudRunV2Volume],
            'vpc_access': GoogleCloudRunV2VpcAccess
        }

        self.attribute_map = {
            'annotations': 'annotations',
            'completion_time': 'completionTime',
            'conditions': 'conditions',
            'containers': 'containers',
            'create_time': 'createTime',
            'delete_time': 'deleteTime',
            'encryption_key': 'encryptionKey',
            'etag': 'etag',
            'execution': 'execution',
            'execution_environment': 'executionEnvironment',
            'expire_time': 'expireTime',
            'generation': 'generation',
            'index': 'index',
            'job': 'job',
            'labels': 'labels',
            'last_attempt_result': 'lastAttemptResult',
            'log_uri': 'logUri',
            'max_retries': 'maxRetries',
            'name': 'name',
            'observed_generation': 'observedGeneration',
            'reconciling': 'reconciling',
            'retried': 'retried',
            'satisfies_pzs': 'satisfiesPzs',
            'scheduled_time': 'scheduledTime',
            'service_account': 'serviceAccount',
            'start_time': 'startTime',
            'timeout': 'timeout',
            'uid': 'uid',
            'update_time': 'updateTime',
            'volumes': 'volumes',
            'vpc_access': 'vpcAccess'
        }

        self._annotations = annotations
        self._completion_time = completion_time
        self._conditions = conditions
        self._containers = containers
        self._create_time = create_time
        self._delete_time = delete_time
        self._encryption_key = encryption_key
        self._etag = etag
        self._execution = execution
        self._execution_environment = execution_environment
        self._expire_time = expire_time
        self._generation = generation
        self._index = index
        self._job = job
        self._labels = labels
        self._last_attempt_result = last_attempt_result
        self._log_uri = log_uri
        self._max_retries = max_retries
        self._name = name
        self._observed_generation = observed_generation
        self._reconciling = reconciling
        self._retried = retried
        self._satisfies_pzs = satisfies_pzs
        self._scheduled_time = scheduled_time
        self._service_account = service_account
        self._start_time = start_time
        self._timeout = timeout
        self._uid = uid
        self._update_time = update_time
        self._volumes = volumes
        self._vpc_access = vpc_access

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV2Task':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV2Task of this GoogleCloudRunV2Task.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations(self):
        """Gets the annotations of this GoogleCloudRunV2Task.

        Output only. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.

        :return: The annotations of this GoogleCloudRunV2Task.
        :rtype: Dict[str, str]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this GoogleCloudRunV2Task.

        Output only. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.

        :param annotations: The annotations of this GoogleCloudRunV2Task.
        :type annotations: Dict[str, str]
        """

        self._annotations = annotations

    @property
    def completion_time(self):
        """Gets the completion_time of this GoogleCloudRunV2Task.

        Output only. Represents time when the Task was completed. It is not guaranteed to be set in happens-before order across separate operations.

        :return: The completion_time of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._completion_time

    @completion_time.setter
    def completion_time(self, completion_time):
        """Sets the completion_time of this GoogleCloudRunV2Task.

        Output only. Represents time when the Task was completed. It is not guaranteed to be set in happens-before order across separate operations.

        :param completion_time: The completion_time of this GoogleCloudRunV2Task.
        :type completion_time: str
        """

        self._completion_time = completion_time

    @property
    def conditions(self):
        """Gets the conditions of this GoogleCloudRunV2Task.

        Output only. The Condition of this Task, containing its readiness status, and detailed error information in case it did not reach the desired state.

        :return: The conditions of this GoogleCloudRunV2Task.
        :rtype: List[GoogleCloudRunV2Condition]
        """
        return self._conditions

    @conditions.setter
    def conditions(self, conditions):
        """Sets the conditions of this GoogleCloudRunV2Task.

        Output only. The Condition of this Task, containing its readiness status, and detailed error information in case it did not reach the desired state.

        :param conditions: The conditions of this GoogleCloudRunV2Task.
        :type conditions: List[GoogleCloudRunV2Condition]
        """

        self._conditions = conditions

    @property
    def containers(self):
        """Gets the containers of this GoogleCloudRunV2Task.

        Holds the single container that defines the unit of execution for this task.

        :return: The containers of this GoogleCloudRunV2Task.
        :rtype: List[GoogleCloudRunV2Container]
        """
        return self._containers

    @containers.setter
    def containers(self, containers):
        """Sets the containers of this GoogleCloudRunV2Task.

        Holds the single container that defines the unit of execution for this task.

        :param containers: The containers of this GoogleCloudRunV2Task.
        :type containers: List[GoogleCloudRunV2Container]
        """

        self._containers = containers

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudRunV2Task.

        Output only. Represents time when the task was created by the system. It is not guaranteed to be set in happens-before order across separate operations.

        :return: The create_time of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudRunV2Task.

        Output only. Represents time when the task was created by the system. It is not guaranteed to be set in happens-before order across separate operations.

        :param create_time: The create_time of this GoogleCloudRunV2Task.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def delete_time(self):
        """Gets the delete_time of this GoogleCloudRunV2Task.

        Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.

        :return: The delete_time of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._delete_time

    @delete_time.setter
    def delete_time(self, delete_time):
        """Sets the delete_time of this GoogleCloudRunV2Task.

        Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.

        :param delete_time: The delete_time of this GoogleCloudRunV2Task.
        :type delete_time: str
        """

        self._delete_time = delete_time

    @property
    def encryption_key(self):
        """Gets the encryption_key of this GoogleCloudRunV2Task.

        Output only. A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek

        :return: The encryption_key of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._encryption_key

    @encryption_key.setter
    def encryption_key(self, encryption_key):
        """Sets the encryption_key of this GoogleCloudRunV2Task.

        Output only. A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek

        :param encryption_key: The encryption_key of this GoogleCloudRunV2Task.
        :type encryption_key: str
        """

        self._encryption_key = encryption_key

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudRunV2Task.

        Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.

        :return: The etag of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudRunV2Task.

        Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.

        :param etag: The etag of this GoogleCloudRunV2Task.
        :type etag: str
        """

        self._etag = etag

    @property
    def execution(self):
        """Gets the execution of this GoogleCloudRunV2Task.

        Output only. The name of the parent Execution.

        :return: The execution of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._execution

    @execution.setter
    def execution(self, execution):
        """Sets the execution of this GoogleCloudRunV2Task.

        Output only. The name of the parent Execution.

        :param execution: The execution of this GoogleCloudRunV2Task.
        :type execution: str
        """

        self._execution = execution

    @property
    def execution_environment(self):
        """Gets the execution_environment of this GoogleCloudRunV2Task.

        The execution environment being used to host this Task.

        :return: The execution_environment of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._execution_environment

    @execution_environment.setter
    def execution_environment(self, execution_environment):
        """Sets the execution_environment of this GoogleCloudRunV2Task.

        The execution environment being used to host this Task.

        :param execution_environment: The execution_environment of this GoogleCloudRunV2Task.
        :type execution_environment: str
        """
        allowed_values = ["EXECUTION_ENVIRONMENT_UNSPECIFIED", "EXECUTION_ENVIRONMENT_GEN1", "EXECUTION_ENVIRONMENT_GEN2"]  # noqa: E501
        if execution_environment not in allowed_values:
            raise ValueError(
                "Invalid value for `execution_environment` ({0}), must be one of {1}"
                .format(execution_environment, allowed_values)
            )

        self._execution_environment = execution_environment

    @property
    def expire_time(self):
        """Gets the expire_time of this GoogleCloudRunV2Task.

        Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.

        :return: The expire_time of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._expire_time

    @expire_time.setter
    def expire_time(self, expire_time):
        """Sets the expire_time of this GoogleCloudRunV2Task.

        Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.

        :param expire_time: The expire_time of this GoogleCloudRunV2Task.
        :type expire_time: str
        """

        self._expire_time = expire_time

    @property
    def generation(self):
        """Gets the generation of this GoogleCloudRunV2Task.

        Output only. A number that monotonically increases every time the user modifies the desired state.

        :return: The generation of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._generation

    @generation.setter
    def generation(self, generation):
        """Sets the generation of this GoogleCloudRunV2Task.

        Output only. A number that monotonically increases every time the user modifies the desired state.

        :param generation: The generation of this GoogleCloudRunV2Task.
        :type generation: str
        """

        self._generation = generation

    @property
    def index(self):
        """Gets the index of this GoogleCloudRunV2Task.

        Output only. Index of the Task, unique per execution, and beginning at 0.

        :return: The index of this GoogleCloudRunV2Task.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this GoogleCloudRunV2Task.

        Output only. Index of the Task, unique per execution, and beginning at 0.

        :param index: The index of this GoogleCloudRunV2Task.
        :type index: int
        """

        self._index = index

    @property
    def job(self):
        """Gets the job of this GoogleCloudRunV2Task.

        Output only. The name of the parent Job.

        :return: The job of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._job

    @job.setter
    def job(self, job):
        """Sets the job of this GoogleCloudRunV2Task.

        Output only. The name of the parent Job.

        :param job: The job of this GoogleCloudRunV2Task.
        :type job: str
        """

        self._job = job

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudRunV2Task.

        Output only. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels

        :return: The labels of this GoogleCloudRunV2Task.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudRunV2Task.

        Output only. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels

        :param labels: The labels of this GoogleCloudRunV2Task.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def last_attempt_result(self):
        """Gets the last_attempt_result of this GoogleCloudRunV2Task.


        :return: The last_attempt_result of this GoogleCloudRunV2Task.
        :rtype: GoogleCloudRunV2TaskAttemptResult
        """
        return self._last_attempt_result

    @last_attempt_result.setter
    def last_attempt_result(self, last_attempt_result):
        """Sets the last_attempt_result of this GoogleCloudRunV2Task.


        :param last_attempt_result: The last_attempt_result of this GoogleCloudRunV2Task.
        :type last_attempt_result: GoogleCloudRunV2TaskAttemptResult
        """

        self._last_attempt_result = last_attempt_result

    @property
    def log_uri(self):
        """Gets the log_uri of this GoogleCloudRunV2Task.

        Output only. URI where logs for this execution can be found in Cloud Console.

        :return: The log_uri of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._log_uri

    @log_uri.setter
    def log_uri(self, log_uri):
        """Sets the log_uri of this GoogleCloudRunV2Task.

        Output only. URI where logs for this execution can be found in Cloud Console.

        :param log_uri: The log_uri of this GoogleCloudRunV2Task.
        :type log_uri: str
        """

        self._log_uri = log_uri

    @property
    def max_retries(self):
        """Gets the max_retries of this GoogleCloudRunV2Task.

        Number of retries allowed per Task, before marking this Task failed.

        :return: The max_retries of this GoogleCloudRunV2Task.
        :rtype: int
        """
        return self._max_retries

    @max_retries.setter
    def max_retries(self, max_retries):
        """Sets the max_retries of this GoogleCloudRunV2Task.

        Number of retries allowed per Task, before marking this Task failed.

        :param max_retries: The max_retries of this GoogleCloudRunV2Task.
        :type max_retries: int
        """

        self._max_retries = max_retries

    @property
    def name(self):
        """Gets the name of this GoogleCloudRunV2Task.

        Output only. The unique name of this Task.

        :return: The name of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudRunV2Task.

        Output only. The unique name of this Task.

        :param name: The name of this GoogleCloudRunV2Task.
        :type name: str
        """

        self._name = name

    @property
    def observed_generation(self):
        """Gets the observed_generation of this GoogleCloudRunV2Task.

        Output only. The generation of this Task. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.

        :return: The observed_generation of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._observed_generation

    @observed_generation.setter
    def observed_generation(self, observed_generation):
        """Sets the observed_generation of this GoogleCloudRunV2Task.

        Output only. The generation of this Task. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.

        :param observed_generation: The observed_generation of this GoogleCloudRunV2Task.
        :type observed_generation: str
        """

        self._observed_generation = observed_generation

    @property
    def reconciling(self):
        """Gets the reconciling of this GoogleCloudRunV2Task.

        Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.

        :return: The reconciling of this GoogleCloudRunV2Task.
        :rtype: bool
        """
        return self._reconciling

    @reconciling.setter
    def reconciling(self, reconciling):
        """Sets the reconciling of this GoogleCloudRunV2Task.

        Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.

        :param reconciling: The reconciling of this GoogleCloudRunV2Task.
        :type reconciling: bool
        """

        self._reconciling = reconciling

    @property
    def retried(self):
        """Gets the retried of this GoogleCloudRunV2Task.

        Output only. The number of times this Task was retried. Tasks are retried when they fail up to the maxRetries limit.

        :return: The retried of this GoogleCloudRunV2Task.
        :rtype: int
        """
        return self._retried

    @retried.setter
    def retried(self, retried):
        """Sets the retried of this GoogleCloudRunV2Task.

        Output only. The number of times this Task was retried. Tasks are retried when they fail up to the maxRetries limit.

        :param retried: The retried of this GoogleCloudRunV2Task.
        :type retried: int
        """

        self._retried = retried

    @property
    def satisfies_pzs(self):
        """Gets the satisfies_pzs of this GoogleCloudRunV2Task.

        Output only. Reserved for future use.

        :return: The satisfies_pzs of this GoogleCloudRunV2Task.
        :rtype: bool
        """
        return self._satisfies_pzs

    @satisfies_pzs.setter
    def satisfies_pzs(self, satisfies_pzs):
        """Sets the satisfies_pzs of this GoogleCloudRunV2Task.

        Output only. Reserved for future use.

        :param satisfies_pzs: The satisfies_pzs of this GoogleCloudRunV2Task.
        :type satisfies_pzs: bool
        """

        self._satisfies_pzs = satisfies_pzs

    @property
    def scheduled_time(self):
        """Gets the scheduled_time of this GoogleCloudRunV2Task.

        Output only. Represents time when the task was scheduled to run by the system. It is not guaranteed to be set in happens-before order across separate operations.

        :return: The scheduled_time of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._scheduled_time

    @scheduled_time.setter
    def scheduled_time(self, scheduled_time):
        """Sets the scheduled_time of this GoogleCloudRunV2Task.

        Output only. Represents time when the task was scheduled to run by the system. It is not guaranteed to be set in happens-before order across separate operations.

        :param scheduled_time: The scheduled_time of this GoogleCloudRunV2Task.
        :type scheduled_time: str
        """

        self._scheduled_time = scheduled_time

    @property
    def service_account(self):
        """Gets the service_account of this GoogleCloudRunV2Task.

        Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account.

        :return: The service_account of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this GoogleCloudRunV2Task.

        Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account.

        :param service_account: The service_account of this GoogleCloudRunV2Task.
        :type service_account: str
        """

        self._service_account = service_account

    @property
    def start_time(self):
        """Gets the start_time of this GoogleCloudRunV2Task.

        Output only. Represents time when the task started to run. It is not guaranteed to be set in happens-before order across separate operations.

        :return: The start_time of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleCloudRunV2Task.

        Output only. Represents time when the task started to run. It is not guaranteed to be set in happens-before order across separate operations.

        :param start_time: The start_time of this GoogleCloudRunV2Task.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def timeout(self):
        """Gets the timeout of this GoogleCloudRunV2Task.

        Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.

        :return: The timeout of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._timeout

    @timeout.setter
    def timeout(self, timeout):
        """Sets the timeout of this GoogleCloudRunV2Task.

        Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.

        :param timeout: The timeout of this GoogleCloudRunV2Task.
        :type timeout: str
        """

        self._timeout = timeout

    @property
    def uid(self):
        """Gets the uid of this GoogleCloudRunV2Task.

        Output only. Server assigned unique identifier for the Task. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.

        :return: The uid of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this GoogleCloudRunV2Task.

        Output only. Server assigned unique identifier for the Task. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.

        :param uid: The uid of this GoogleCloudRunV2Task.
        :type uid: str
        """

        self._uid = uid

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudRunV2Task.

        Output only. The last-modified time.

        :return: The update_time of this GoogleCloudRunV2Task.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudRunV2Task.

        Output only. The last-modified time.

        :param update_time: The update_time of this GoogleCloudRunV2Task.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def volumes(self):
        """Gets the volumes of this GoogleCloudRunV2Task.

        A list of Volumes to make available to containers.

        :return: The volumes of this GoogleCloudRunV2Task.
        :rtype: List[GoogleCloudRunV2Volume]
        """
        return self._volumes

    @volumes.setter
    def volumes(self, volumes):
        """Sets the volumes of this GoogleCloudRunV2Task.

        A list of Volumes to make available to containers.

        :param volumes: The volumes of this GoogleCloudRunV2Task.
        :type volumes: List[GoogleCloudRunV2Volume]
        """

        self._volumes = volumes

    @property
    def vpc_access(self):
        """Gets the vpc_access of this GoogleCloudRunV2Task.


        :return: The vpc_access of this GoogleCloudRunV2Task.
        :rtype: GoogleCloudRunV2VpcAccess
        """
        return self._vpc_access

    @vpc_access.setter
    def vpc_access(self, vpc_access):
        """Sets the vpc_access of this GoogleCloudRunV2Task.


        :param vpc_access: The vpc_access of this GoogleCloudRunV2Task.
        :type vpc_access: GoogleCloudRunV2VpcAccess
        """

        self._vpc_access = vpc_access
