# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_run_v2_cloud_sql_instance import GoogleCloudRunV2CloudSqlInstance
from openapi_server.models.google_cloud_run_v2_empty_dir_volume_source import GoogleCloudRunV2EmptyDirVolumeSource
from openapi_server.models.google_cloud_run_v2_gcs_volume_source import GoogleCloudRunV2GCSVolumeSource
from openapi_server.models.google_cloud_run_v2_nfs_volume_source import GoogleCloudRunV2NFSVolumeSource
from openapi_server.models.google_cloud_run_v2_secret_volume_source import GoogleCloudRunV2SecretVolumeSource
from openapi_server import util


class GoogleCloudRunV2Volume(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_sql_instance: GoogleCloudRunV2CloudSqlInstance=None, empty_dir: GoogleCloudRunV2EmptyDirVolumeSource=None, gcs: GoogleCloudRunV2GCSVolumeSource=None, name: str=None, nfs: GoogleCloudRunV2NFSVolumeSource=None, secret: GoogleCloudRunV2SecretVolumeSource=None):
        """GoogleCloudRunV2Volume - a model defined in OpenAPI

        :param cloud_sql_instance: The cloud_sql_instance of this GoogleCloudRunV2Volume.
        :param empty_dir: The empty_dir of this GoogleCloudRunV2Volume.
        :param gcs: The gcs of this GoogleCloudRunV2Volume.
        :param name: The name of this GoogleCloudRunV2Volume.
        :param nfs: The nfs of this GoogleCloudRunV2Volume.
        :param secret: The secret of this GoogleCloudRunV2Volume.
        """
        self.openapi_types = {
            'cloud_sql_instance': GoogleCloudRunV2CloudSqlInstance,
            'empty_dir': GoogleCloudRunV2EmptyDirVolumeSource,
            'gcs': GoogleCloudRunV2GCSVolumeSource,
            'name': str,
            'nfs': GoogleCloudRunV2NFSVolumeSource,
            'secret': GoogleCloudRunV2SecretVolumeSource
        }

        self.attribute_map = {
            'cloud_sql_instance': 'cloudSqlInstance',
            'empty_dir': 'emptyDir',
            'gcs': 'gcs',
            'name': 'name',
            'nfs': 'nfs',
            'secret': 'secret'
        }

        self._cloud_sql_instance = cloud_sql_instance
        self._empty_dir = empty_dir
        self._gcs = gcs
        self._name = name
        self._nfs = nfs
        self._secret = secret

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV2Volume':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV2Volume of this GoogleCloudRunV2Volume.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_sql_instance(self):
        """Gets the cloud_sql_instance of this GoogleCloudRunV2Volume.


        :return: The cloud_sql_instance of this GoogleCloudRunV2Volume.
        :rtype: GoogleCloudRunV2CloudSqlInstance
        """
        return self._cloud_sql_instance

    @cloud_sql_instance.setter
    def cloud_sql_instance(self, cloud_sql_instance):
        """Sets the cloud_sql_instance of this GoogleCloudRunV2Volume.


        :param cloud_sql_instance: The cloud_sql_instance of this GoogleCloudRunV2Volume.
        :type cloud_sql_instance: GoogleCloudRunV2CloudSqlInstance
        """

        self._cloud_sql_instance = cloud_sql_instance

    @property
    def empty_dir(self):
        """Gets the empty_dir of this GoogleCloudRunV2Volume.


        :return: The empty_dir of this GoogleCloudRunV2Volume.
        :rtype: GoogleCloudRunV2EmptyDirVolumeSource
        """
        return self._empty_dir

    @empty_dir.setter
    def empty_dir(self, empty_dir):
        """Sets the empty_dir of this GoogleCloudRunV2Volume.


        :param empty_dir: The empty_dir of this GoogleCloudRunV2Volume.
        :type empty_dir: GoogleCloudRunV2EmptyDirVolumeSource
        """

        self._empty_dir = empty_dir

    @property
    def gcs(self):
        """Gets the gcs of this GoogleCloudRunV2Volume.


        :return: The gcs of this GoogleCloudRunV2Volume.
        :rtype: GoogleCloudRunV2GCSVolumeSource
        """
        return self._gcs

    @gcs.setter
    def gcs(self, gcs):
        """Sets the gcs of this GoogleCloudRunV2Volume.


        :param gcs: The gcs of this GoogleCloudRunV2Volume.
        :type gcs: GoogleCloudRunV2GCSVolumeSource
        """

        self._gcs = gcs

    @property
    def name(self):
        """Gets the name of this GoogleCloudRunV2Volume.

        Required. Volume's name.

        :return: The name of this GoogleCloudRunV2Volume.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudRunV2Volume.

        Required. Volume's name.

        :param name: The name of this GoogleCloudRunV2Volume.
        :type name: str
        """

        self._name = name

    @property
    def nfs(self):
        """Gets the nfs of this GoogleCloudRunV2Volume.


        :return: The nfs of this GoogleCloudRunV2Volume.
        :rtype: GoogleCloudRunV2NFSVolumeSource
        """
        return self._nfs

    @nfs.setter
    def nfs(self, nfs):
        """Sets the nfs of this GoogleCloudRunV2Volume.


        :param nfs: The nfs of this GoogleCloudRunV2Volume.
        :type nfs: GoogleCloudRunV2NFSVolumeSource
        """

        self._nfs = nfs

    @property
    def secret(self):
        """Gets the secret of this GoogleCloudRunV2Volume.


        :return: The secret of this GoogleCloudRunV2Volume.
        :rtype: GoogleCloudRunV2SecretVolumeSource
        """
        return self._secret

    @secret.setter
    def secret(self, secret):
        """Sets the secret of this GoogleCloudRunV2Volume.


        :param secret: The secret of this GoogleCloudRunV2Volume.
        :type secret: GoogleCloudRunV2SecretVolumeSource
        """

        self._secret = secret
