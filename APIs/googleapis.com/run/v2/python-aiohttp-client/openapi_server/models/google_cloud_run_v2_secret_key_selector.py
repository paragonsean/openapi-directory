# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRunV2SecretKeySelector(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, secret: str=None, version: str=None):
        """GoogleCloudRunV2SecretKeySelector - a model defined in OpenAPI

        :param secret: The secret of this GoogleCloudRunV2SecretKeySelector.
        :param version: The version of this GoogleCloudRunV2SecretKeySelector.
        """
        self.openapi_types = {
            'secret': str,
            'version': str
        }

        self.attribute_map = {
            'secret': 'secret',
            'version': 'version'
        }

        self._secret = secret
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV2SecretKeySelector':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV2SecretKeySelector of this GoogleCloudRunV2SecretKeySelector.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def secret(self):
        """Gets the secret of this GoogleCloudRunV2SecretKeySelector.

        Required. The name of the secret in Cloud Secret Manager. Format: {secret_name} if the secret is in the same project. projects/{project}/secrets/{secret_name} if the secret is in a different project.

        :return: The secret of this GoogleCloudRunV2SecretKeySelector.
        :rtype: str
        """
        return self._secret

    @secret.setter
    def secret(self, secret):
        """Sets the secret of this GoogleCloudRunV2SecretKeySelector.

        Required. The name of the secret in Cloud Secret Manager. Format: {secret_name} if the secret is in the same project. projects/{project}/secrets/{secret_name} if the secret is in a different project.

        :param secret: The secret of this GoogleCloudRunV2SecretKeySelector.
        :type secret: str
        """

        self._secret = secret

    @property
    def version(self):
        """Gets the version of this GoogleCloudRunV2SecretKeySelector.

        The Cloud Secret Manager secret version. Can be 'latest' for the latest version, an integer for a specific version, or a version alias.

        :return: The version of this GoogleCloudRunV2SecretKeySelector.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GoogleCloudRunV2SecretKeySelector.

        The Cloud Secret Manager secret version. Can be 'latest' for the latest version, an integer for a specific version, or a version alias.

        :param version: The version of this GoogleCloudRunV2SecretKeySelector.
        :type version: str
        """

        self._version = version
