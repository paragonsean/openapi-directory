# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_run_v2_binary_authorization import GoogleCloudRunV2BinaryAuthorization
from openapi_server.models.google_cloud_run_v2_condition import GoogleCloudRunV2Condition
from openapi_server.models.google_cloud_run_v2_revision_template import GoogleCloudRunV2RevisionTemplate
from openapi_server.models.google_cloud_run_v2_service_scaling import GoogleCloudRunV2ServiceScaling
from openapi_server.models.google_cloud_run_v2_traffic_target import GoogleCloudRunV2TrafficTarget
from openapi_server.models.google_cloud_run_v2_traffic_target_status import GoogleCloudRunV2TrafficTargetStatus
from openapi_server import util


class GoogleCloudRunV2Service(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotations: Dict[str, str]=None, binary_authorization: GoogleCloudRunV2BinaryAuthorization=None, client: str=None, client_version: str=None, conditions: List[GoogleCloudRunV2Condition]=None, create_time: str=None, creator: str=None, custom_audiences: List[str]=None, default_uri_disabled: bool=None, delete_time: str=None, description: str=None, etag: str=None, expire_time: str=None, generation: str=None, ingress: str=None, labels: Dict[str, str]=None, last_modifier: str=None, latest_created_revision: str=None, latest_ready_revision: str=None, launch_stage: str=None, name: str=None, observed_generation: str=None, reconciling: bool=None, satisfies_pzs: bool=None, scaling: GoogleCloudRunV2ServiceScaling=None, template: GoogleCloudRunV2RevisionTemplate=None, terminal_condition: GoogleCloudRunV2Condition=None, traffic: List[GoogleCloudRunV2TrafficTarget]=None, traffic_statuses: List[GoogleCloudRunV2TrafficTargetStatus]=None, uid: str=None, update_time: str=None, uri: str=None):
        """GoogleCloudRunV2Service - a model defined in OpenAPI

        :param annotations: The annotations of this GoogleCloudRunV2Service.
        :param binary_authorization: The binary_authorization of this GoogleCloudRunV2Service.
        :param client: The client of this GoogleCloudRunV2Service.
        :param client_version: The client_version of this GoogleCloudRunV2Service.
        :param conditions: The conditions of this GoogleCloudRunV2Service.
        :param create_time: The create_time of this GoogleCloudRunV2Service.
        :param creator: The creator of this GoogleCloudRunV2Service.
        :param custom_audiences: The custom_audiences of this GoogleCloudRunV2Service.
        :param default_uri_disabled: The default_uri_disabled of this GoogleCloudRunV2Service.
        :param delete_time: The delete_time of this GoogleCloudRunV2Service.
        :param description: The description of this GoogleCloudRunV2Service.
        :param etag: The etag of this GoogleCloudRunV2Service.
        :param expire_time: The expire_time of this GoogleCloudRunV2Service.
        :param generation: The generation of this GoogleCloudRunV2Service.
        :param ingress: The ingress of this GoogleCloudRunV2Service.
        :param labels: The labels of this GoogleCloudRunV2Service.
        :param last_modifier: The last_modifier of this GoogleCloudRunV2Service.
        :param latest_created_revision: The latest_created_revision of this GoogleCloudRunV2Service.
        :param latest_ready_revision: The latest_ready_revision of this GoogleCloudRunV2Service.
        :param launch_stage: The launch_stage of this GoogleCloudRunV2Service.
        :param name: The name of this GoogleCloudRunV2Service.
        :param observed_generation: The observed_generation of this GoogleCloudRunV2Service.
        :param reconciling: The reconciling of this GoogleCloudRunV2Service.
        :param satisfies_pzs: The satisfies_pzs of this GoogleCloudRunV2Service.
        :param scaling: The scaling of this GoogleCloudRunV2Service.
        :param template: The template of this GoogleCloudRunV2Service.
        :param terminal_condition: The terminal_condition of this GoogleCloudRunV2Service.
        :param traffic: The traffic of this GoogleCloudRunV2Service.
        :param traffic_statuses: The traffic_statuses of this GoogleCloudRunV2Service.
        :param uid: The uid of this GoogleCloudRunV2Service.
        :param update_time: The update_time of this GoogleCloudRunV2Service.
        :param uri: The uri of this GoogleCloudRunV2Service.
        """
        self.openapi_types = {
            'annotations': Dict[str, str],
            'binary_authorization': GoogleCloudRunV2BinaryAuthorization,
            'client': str,
            'client_version': str,
            'conditions': List[GoogleCloudRunV2Condition],
            'create_time': str,
            'creator': str,
            'custom_audiences': List[str],
            'default_uri_disabled': bool,
            'delete_time': str,
            'description': str,
            'etag': str,
            'expire_time': str,
            'generation': str,
            'ingress': str,
            'labels': Dict[str, str],
            'last_modifier': str,
            'latest_created_revision': str,
            'latest_ready_revision': str,
            'launch_stage': str,
            'name': str,
            'observed_generation': str,
            'reconciling': bool,
            'satisfies_pzs': bool,
            'scaling': GoogleCloudRunV2ServiceScaling,
            'template': GoogleCloudRunV2RevisionTemplate,
            'terminal_condition': GoogleCloudRunV2Condition,
            'traffic': List[GoogleCloudRunV2TrafficTarget],
            'traffic_statuses': List[GoogleCloudRunV2TrafficTargetStatus],
            'uid': str,
            'update_time': str,
            'uri': str
        }

        self.attribute_map = {
            'annotations': 'annotations',
            'binary_authorization': 'binaryAuthorization',
            'client': 'client',
            'client_version': 'clientVersion',
            'conditions': 'conditions',
            'create_time': 'createTime',
            'creator': 'creator',
            'custom_audiences': 'customAudiences',
            'default_uri_disabled': 'defaultUriDisabled',
            'delete_time': 'deleteTime',
            'description': 'description',
            'etag': 'etag',
            'expire_time': 'expireTime',
            'generation': 'generation',
            'ingress': 'ingress',
            'labels': 'labels',
            'last_modifier': 'lastModifier',
            'latest_created_revision': 'latestCreatedRevision',
            'latest_ready_revision': 'latestReadyRevision',
            'launch_stage': 'launchStage',
            'name': 'name',
            'observed_generation': 'observedGeneration',
            'reconciling': 'reconciling',
            'satisfies_pzs': 'satisfiesPzs',
            'scaling': 'scaling',
            'template': 'template',
            'terminal_condition': 'terminalCondition',
            'traffic': 'traffic',
            'traffic_statuses': 'trafficStatuses',
            'uid': 'uid',
            'update_time': 'updateTime',
            'uri': 'uri'
        }

        self._annotations = annotations
        self._binary_authorization = binary_authorization
        self._client = client
        self._client_version = client_version
        self._conditions = conditions
        self._create_time = create_time
        self._creator = creator
        self._custom_audiences = custom_audiences
        self._default_uri_disabled = default_uri_disabled
        self._delete_time = delete_time
        self._description = description
        self._etag = etag
        self._expire_time = expire_time
        self._generation = generation
        self._ingress = ingress
        self._labels = labels
        self._last_modifier = last_modifier
        self._latest_created_revision = latest_created_revision
        self._latest_ready_revision = latest_ready_revision
        self._launch_stage = launch_stage
        self._name = name
        self._observed_generation = observed_generation
        self._reconciling = reconciling
        self._satisfies_pzs = satisfies_pzs
        self._scaling = scaling
        self._template = template
        self._terminal_condition = terminal_condition
        self._traffic = traffic
        self._traffic_statuses = traffic_statuses
        self._uid = uid
        self._update_time = update_time
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV2Service':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV2Service of this GoogleCloudRunV2Service.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations(self):
        """Gets the annotations of this GoogleCloudRunV2Service.

        Optional. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected in new resources. All system annotations in v1 now have a corresponding field in v2 Service. This field follows Kubernetes annotations' namespacing, limits, and rules.

        :return: The annotations of this GoogleCloudRunV2Service.
        :rtype: Dict[str, str]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this GoogleCloudRunV2Service.

        Optional. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected in new resources. All system annotations in v1 now have a corresponding field in v2 Service. This field follows Kubernetes annotations' namespacing, limits, and rules.

        :param annotations: The annotations of this GoogleCloudRunV2Service.
        :type annotations: Dict[str, str]
        """

        self._annotations = annotations

    @property
    def binary_authorization(self):
        """Gets the binary_authorization of this GoogleCloudRunV2Service.


        :return: The binary_authorization of this GoogleCloudRunV2Service.
        :rtype: GoogleCloudRunV2BinaryAuthorization
        """
        return self._binary_authorization

    @binary_authorization.setter
    def binary_authorization(self, binary_authorization):
        """Sets the binary_authorization of this GoogleCloudRunV2Service.


        :param binary_authorization: The binary_authorization of this GoogleCloudRunV2Service.
        :type binary_authorization: GoogleCloudRunV2BinaryAuthorization
        """

        self._binary_authorization = binary_authorization

    @property
    def client(self):
        """Gets the client of this GoogleCloudRunV2Service.

        Arbitrary identifier for the API client.

        :return: The client of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this GoogleCloudRunV2Service.

        Arbitrary identifier for the API client.

        :param client: The client of this GoogleCloudRunV2Service.
        :type client: str
        """

        self._client = client

    @property
    def client_version(self):
        """Gets the client_version of this GoogleCloudRunV2Service.

        Arbitrary version identifier for the API client.

        :return: The client_version of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._client_version

    @client_version.setter
    def client_version(self, client_version):
        """Sets the client_version of this GoogleCloudRunV2Service.

        Arbitrary version identifier for the API client.

        :param client_version: The client_version of this GoogleCloudRunV2Service.
        :type client_version: str
        """

        self._client_version = client_version

    @property
    def conditions(self):
        """Gets the conditions of this GoogleCloudRunV2Service.

        Output only. The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Service does not reach its Serving state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.

        :return: The conditions of this GoogleCloudRunV2Service.
        :rtype: List[GoogleCloudRunV2Condition]
        """
        return self._conditions

    @conditions.setter
    def conditions(self, conditions):
        """Sets the conditions of this GoogleCloudRunV2Service.

        Output only. The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Service does not reach its Serving state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.

        :param conditions: The conditions of this GoogleCloudRunV2Service.
        :type conditions: List[GoogleCloudRunV2Condition]
        """

        self._conditions = conditions

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudRunV2Service.

        Output only. The creation time.

        :return: The create_time of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudRunV2Service.

        Output only. The creation time.

        :param create_time: The create_time of this GoogleCloudRunV2Service.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def creator(self):
        """Gets the creator of this GoogleCloudRunV2Service.

        Output only. Email address of the authenticated creator.

        :return: The creator of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this GoogleCloudRunV2Service.

        Output only. Email address of the authenticated creator.

        :param creator: The creator of this GoogleCloudRunV2Service.
        :type creator: str
        """

        self._creator = creator

    @property
    def custom_audiences(self):
        """Gets the custom_audiences of this GoogleCloudRunV2Service.

        One or more custom audiences that you want this service to support. Specify each custom audience as the full URL in a string. The custom audiences are encoded in the token and used to authenticate requests. For more information, see https://cloud.google.com/run/docs/configuring/custom-audiences.

        :return: The custom_audiences of this GoogleCloudRunV2Service.
        :rtype: List[str]
        """
        return self._custom_audiences

    @custom_audiences.setter
    def custom_audiences(self, custom_audiences):
        """Sets the custom_audiences of this GoogleCloudRunV2Service.

        One or more custom audiences that you want this service to support. Specify each custom audience as the full URL in a string. The custom audiences are encoded in the token and used to authenticate requests. For more information, see https://cloud.google.com/run/docs/configuring/custom-audiences.

        :param custom_audiences: The custom_audiences of this GoogleCloudRunV2Service.
        :type custom_audiences: List[str]
        """

        self._custom_audiences = custom_audiences

    @property
    def default_uri_disabled(self):
        """Gets the default_uri_disabled of this GoogleCloudRunV2Service.

        Optional. Disables public resolution of the default URI of this service.

        :return: The default_uri_disabled of this GoogleCloudRunV2Service.
        :rtype: bool
        """
        return self._default_uri_disabled

    @default_uri_disabled.setter
    def default_uri_disabled(self, default_uri_disabled):
        """Sets the default_uri_disabled of this GoogleCloudRunV2Service.

        Optional. Disables public resolution of the default URI of this service.

        :param default_uri_disabled: The default_uri_disabled of this GoogleCloudRunV2Service.
        :type default_uri_disabled: bool
        """

        self._default_uri_disabled = default_uri_disabled

    @property
    def delete_time(self):
        """Gets the delete_time of this GoogleCloudRunV2Service.

        Output only. The deletion time.

        :return: The delete_time of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._delete_time

    @delete_time.setter
    def delete_time(self, delete_time):
        """Sets the delete_time of this GoogleCloudRunV2Service.

        Output only. The deletion time.

        :param delete_time: The delete_time of this GoogleCloudRunV2Service.
        :type delete_time: str
        """

        self._delete_time = delete_time

    @property
    def description(self):
        """Gets the description of this GoogleCloudRunV2Service.

        User-provided description of the Service. This field currently has a 512-character limit.

        :return: The description of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudRunV2Service.

        User-provided description of the Service. This field currently has a 512-character limit.

        :param description: The description of this GoogleCloudRunV2Service.
        :type description: str
        """

        self._description = description

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudRunV2Service.

        Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.

        :return: The etag of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudRunV2Service.

        Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.

        :param etag: The etag of this GoogleCloudRunV2Service.
        :type etag: str
        """

        self._etag = etag

    @property
    def expire_time(self):
        """Gets the expire_time of this GoogleCloudRunV2Service.

        Output only. For a deleted resource, the time after which it will be permamently deleted.

        :return: The expire_time of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._expire_time

    @expire_time.setter
    def expire_time(self, expire_time):
        """Sets the expire_time of this GoogleCloudRunV2Service.

        Output only. For a deleted resource, the time after which it will be permamently deleted.

        :param expire_time: The expire_time of this GoogleCloudRunV2Service.
        :type expire_time: str
        """

        self._expire_time = expire_time

    @property
    def generation(self):
        """Gets the generation of this GoogleCloudRunV2Service.

        Output only. A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a `string` instead of an `integer`.

        :return: The generation of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._generation

    @generation.setter
    def generation(self, generation):
        """Sets the generation of this GoogleCloudRunV2Service.

        Output only. A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a `string` instead of an `integer`.

        :param generation: The generation of this GoogleCloudRunV2Service.
        :type generation: str
        """

        self._generation = generation

    @property
    def ingress(self):
        """Gets the ingress of this GoogleCloudRunV2Service.

        Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active.

        :return: The ingress of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._ingress

    @ingress.setter
    def ingress(self, ingress):
        """Sets the ingress of this GoogleCloudRunV2Service.

        Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active.

        :param ingress: The ingress of this GoogleCloudRunV2Service.
        :type ingress: str
        """
        allowed_values = ["INGRESS_TRAFFIC_UNSPECIFIED", "INGRESS_TRAFFIC_ALL", "INGRESS_TRAFFIC_INTERNAL_ONLY", "INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER"]  # noqa: E501
        if ingress not in allowed_values:
            raise ValueError(
                "Invalid value for `ingress` ({0}), must be one of {1}"
                .format(ingress, allowed_values)
            )

        self._ingress = ingress

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudRunV2Service.

        Optional. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 Service.

        :return: The labels of this GoogleCloudRunV2Service.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudRunV2Service.

        Optional. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 Service.

        :param labels: The labels of this GoogleCloudRunV2Service.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def last_modifier(self):
        """Gets the last_modifier of this GoogleCloudRunV2Service.

        Output only. Email address of the last authenticated modifier.

        :return: The last_modifier of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._last_modifier

    @last_modifier.setter
    def last_modifier(self, last_modifier):
        """Sets the last_modifier of this GoogleCloudRunV2Service.

        Output only. Email address of the last authenticated modifier.

        :param last_modifier: The last_modifier of this GoogleCloudRunV2Service.
        :type last_modifier: str
        """

        self._last_modifier = last_modifier

    @property
    def latest_created_revision(self):
        """Gets the latest_created_revision of this GoogleCloudRunV2Service.

        Output only. Name of the last created revision. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.

        :return: The latest_created_revision of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._latest_created_revision

    @latest_created_revision.setter
    def latest_created_revision(self, latest_created_revision):
        """Sets the latest_created_revision of this GoogleCloudRunV2Service.

        Output only. Name of the last created revision. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.

        :param latest_created_revision: The latest_created_revision of this GoogleCloudRunV2Service.
        :type latest_created_revision: str
        """

        self._latest_created_revision = latest_created_revision

    @property
    def latest_ready_revision(self):
        """Gets the latest_ready_revision of this GoogleCloudRunV2Service.

        Output only. Name of the latest revision that is serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.

        :return: The latest_ready_revision of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._latest_ready_revision

    @latest_ready_revision.setter
    def latest_ready_revision(self, latest_ready_revision):
        """Sets the latest_ready_revision of this GoogleCloudRunV2Service.

        Output only. Name of the latest revision that is serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.

        :param latest_ready_revision: The latest_ready_revision of this GoogleCloudRunV2Service.
        :type latest_ready_revision: str
        """

        self._latest_ready_revision = latest_ready_revision

    @property
    def launch_stage(self):
        """Gets the launch_stage of this GoogleCloudRunV2Service.

        The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.

        :return: The launch_stage of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._launch_stage

    @launch_stage.setter
    def launch_stage(self, launch_stage):
        """Sets the launch_stage of this GoogleCloudRunV2Service.

        The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.

        :param launch_stage: The launch_stage of this GoogleCloudRunV2Service.
        :type launch_stage: str
        """
        allowed_values = ["LAUNCH_STAGE_UNSPECIFIED", "UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]  # noqa: E501
        if launch_stage not in allowed_values:
            raise ValueError(
                "Invalid value for `launch_stage` ({0}), must be one of {1}"
                .format(launch_stage, allowed_values)
            )

        self._launch_stage = launch_stage

    @property
    def name(self):
        """Gets the name of this GoogleCloudRunV2Service.

        The fully qualified name of this Service. In CreateServiceRequest, this field is ignored, and instead composed from CreateServiceRequest.parent and CreateServiceRequest.service_id. Format: projects/{project}/locations/{location}/services/{service_id}

        :return: The name of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudRunV2Service.

        The fully qualified name of this Service. In CreateServiceRequest, this field is ignored, and instead composed from CreateServiceRequest.parent and CreateServiceRequest.service_id. Format: projects/{project}/locations/{location}/services/{service_id}

        :param name: The name of this GoogleCloudRunV2Service.
        :type name: str
        """

        self._name = name

    @property
    def observed_generation(self):
        """Gets the observed_generation of this GoogleCloudRunV2Service.

        Output only. The generation of this Service currently serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a `string` instead of an `integer`.

        :return: The observed_generation of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._observed_generation

    @observed_generation.setter
    def observed_generation(self, observed_generation):
        """Sets the observed_generation of this GoogleCloudRunV2Service.

        Output only. The generation of this Service currently serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a `string` instead of an `integer`.

        :param observed_generation: The observed_generation of this GoogleCloudRunV2Service.
        :type observed_generation: str
        """

        self._observed_generation = observed_generation

    @property
    def reconciling(self):
        """Gets the reconciling of this GoogleCloudRunV2Service.

        Output only. Returns true if the Service is currently being acted upon by the system to bring it into the desired state. When a new Service is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Service to the desired serving state. This process is called reconciliation. While reconciliation is in process, `observed_generation`, `latest_ready_revison`, `traffic_statuses`, and `uri` will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the serving state matches the Service, or there was an error, and reconciliation failed. This state can be found in `terminal_condition.state`. If reconciliation succeeded, the following fields will match: `traffic` and `traffic_statuses`, `observed_generation` and `generation`, `latest_ready_revision` and `latest_created_revision`. If reconciliation failed, `traffic_statuses`, `observed_generation`, and `latest_ready_revision` will have the state of the last serving revision, or empty for newly created Services. Additional information on the failure can be found in `terminal_condition` and `conditions`.

        :return: The reconciling of this GoogleCloudRunV2Service.
        :rtype: bool
        """
        return self._reconciling

    @reconciling.setter
    def reconciling(self, reconciling):
        """Sets the reconciling of this GoogleCloudRunV2Service.

        Output only. Returns true if the Service is currently being acted upon by the system to bring it into the desired state. When a new Service is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Service to the desired serving state. This process is called reconciliation. While reconciliation is in process, `observed_generation`, `latest_ready_revison`, `traffic_statuses`, and `uri` will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the serving state matches the Service, or there was an error, and reconciliation failed. This state can be found in `terminal_condition.state`. If reconciliation succeeded, the following fields will match: `traffic` and `traffic_statuses`, `observed_generation` and `generation`, `latest_ready_revision` and `latest_created_revision`. If reconciliation failed, `traffic_statuses`, `observed_generation`, and `latest_ready_revision` will have the state of the last serving revision, or empty for newly created Services. Additional information on the failure can be found in `terminal_condition` and `conditions`.

        :param reconciling: The reconciling of this GoogleCloudRunV2Service.
        :type reconciling: bool
        """

        self._reconciling = reconciling

    @property
    def satisfies_pzs(self):
        """Gets the satisfies_pzs of this GoogleCloudRunV2Service.

        Output only. Reserved for future use.

        :return: The satisfies_pzs of this GoogleCloudRunV2Service.
        :rtype: bool
        """
        return self._satisfies_pzs

    @satisfies_pzs.setter
    def satisfies_pzs(self, satisfies_pzs):
        """Sets the satisfies_pzs of this GoogleCloudRunV2Service.

        Output only. Reserved for future use.

        :param satisfies_pzs: The satisfies_pzs of this GoogleCloudRunV2Service.
        :type satisfies_pzs: bool
        """

        self._satisfies_pzs = satisfies_pzs

    @property
    def scaling(self):
        """Gets the scaling of this GoogleCloudRunV2Service.


        :return: The scaling of this GoogleCloudRunV2Service.
        :rtype: GoogleCloudRunV2ServiceScaling
        """
        return self._scaling

    @scaling.setter
    def scaling(self, scaling):
        """Sets the scaling of this GoogleCloudRunV2Service.


        :param scaling: The scaling of this GoogleCloudRunV2Service.
        :type scaling: GoogleCloudRunV2ServiceScaling
        """

        self._scaling = scaling

    @property
    def template(self):
        """Gets the template of this GoogleCloudRunV2Service.


        :return: The template of this GoogleCloudRunV2Service.
        :rtype: GoogleCloudRunV2RevisionTemplate
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this GoogleCloudRunV2Service.


        :param template: The template of this GoogleCloudRunV2Service.
        :type template: GoogleCloudRunV2RevisionTemplate
        """

        self._template = template

    @property
    def terminal_condition(self):
        """Gets the terminal_condition of this GoogleCloudRunV2Service.


        :return: The terminal_condition of this GoogleCloudRunV2Service.
        :rtype: GoogleCloudRunV2Condition
        """
        return self._terminal_condition

    @terminal_condition.setter
    def terminal_condition(self, terminal_condition):
        """Sets the terminal_condition of this GoogleCloudRunV2Service.


        :param terminal_condition: The terminal_condition of this GoogleCloudRunV2Service.
        :type terminal_condition: GoogleCloudRunV2Condition
        """

        self._terminal_condition = terminal_condition

    @property
    def traffic(self):
        """Gets the traffic of this GoogleCloudRunV2Service.

        Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not provided, defaults to 100% traffic to the latest `Ready` Revision.

        :return: The traffic of this GoogleCloudRunV2Service.
        :rtype: List[GoogleCloudRunV2TrafficTarget]
        """
        return self._traffic

    @traffic.setter
    def traffic(self, traffic):
        """Sets the traffic of this GoogleCloudRunV2Service.

        Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not provided, defaults to 100% traffic to the latest `Ready` Revision.

        :param traffic: The traffic of this GoogleCloudRunV2Service.
        :type traffic: List[GoogleCloudRunV2TrafficTarget]
        """

        self._traffic = traffic

    @property
    def traffic_statuses(self):
        """Gets the traffic_statuses of this GoogleCloudRunV2Service.

        Output only. Detailed status information for corresponding traffic targets. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.

        :return: The traffic_statuses of this GoogleCloudRunV2Service.
        :rtype: List[GoogleCloudRunV2TrafficTargetStatus]
        """
        return self._traffic_statuses

    @traffic_statuses.setter
    def traffic_statuses(self, traffic_statuses):
        """Sets the traffic_statuses of this GoogleCloudRunV2Service.

        Output only. Detailed status information for corresponding traffic targets. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.

        :param traffic_statuses: The traffic_statuses of this GoogleCloudRunV2Service.
        :type traffic_statuses: List[GoogleCloudRunV2TrafficTargetStatus]
        """

        self._traffic_statuses = traffic_statuses

    @property
    def uid(self):
        """Gets the uid of this GoogleCloudRunV2Service.

        Output only. Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.

        :return: The uid of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this GoogleCloudRunV2Service.

        Output only. Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.

        :param uid: The uid of this GoogleCloudRunV2Service.
        :type uid: str
        """

        self._uid = uid

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudRunV2Service.

        Output only. The last-modified time.

        :return: The update_time of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudRunV2Service.

        Output only. The last-modified time.

        :param update_time: The update_time of this GoogleCloudRunV2Service.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def uri(self):
        """Gets the uri of this GoogleCloudRunV2Service.

        Output only. The main URI in which this Service is serving traffic.

        :return: The uri of this GoogleCloudRunV2Service.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this GoogleCloudRunV2Service.

        Output only. The main URI in which this Service is serving traffic.

        :param uri: The uri of this GoogleCloudRunV2Service.
        :type uri: str
        """

        self._uri = uri
