# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_run_v2_env_var_source import GoogleCloudRunV2EnvVarSource
from openapi_server import util


class GoogleCloudRunV2EnvVar(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, value: str=None, value_source: GoogleCloudRunV2EnvVarSource=None):
        """GoogleCloudRunV2EnvVar - a model defined in OpenAPI

        :param name: The name of this GoogleCloudRunV2EnvVar.
        :param value: The value of this GoogleCloudRunV2EnvVar.
        :param value_source: The value_source of this GoogleCloudRunV2EnvVar.
        """
        self.openapi_types = {
            'name': str,
            'value': str,
            'value_source': GoogleCloudRunV2EnvVarSource
        }

        self.attribute_map = {
            'name': 'name',
            'value': 'value',
            'value_source': 'valueSource'
        }

        self._name = name
        self._value = value
        self._value_source = value_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV2EnvVar':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV2EnvVar of this GoogleCloudRunV2EnvVar.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this GoogleCloudRunV2EnvVar.

        Required. Name of the environment variable. Must not exceed 32768 characters.

        :return: The name of this GoogleCloudRunV2EnvVar.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudRunV2EnvVar.

        Required. Name of the environment variable. Must not exceed 32768 characters.

        :param name: The name of this GoogleCloudRunV2EnvVar.
        :type name: str
        """

        self._name = name

    @property
    def value(self):
        """Gets the value of this GoogleCloudRunV2EnvVar.

        Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\", and the maximum length is 32768 bytes.

        :return: The value of this GoogleCloudRunV2EnvVar.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this GoogleCloudRunV2EnvVar.

        Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\", and the maximum length is 32768 bytes.

        :param value: The value of this GoogleCloudRunV2EnvVar.
        :type value: str
        """

        self._value = value

    @property
    def value_source(self):
        """Gets the value_source of this GoogleCloudRunV2EnvVar.


        :return: The value_source of this GoogleCloudRunV2EnvVar.
        :rtype: GoogleCloudRunV2EnvVarSource
        """
        return self._value_source

    @value_source.setter
    def value_source(self, value_source):
        """Sets the value_source of this GoogleCloudRunV2EnvVar.


        :param value_source: The value_source of this GoogleCloudRunV2EnvVar.
        :type value_source: GoogleCloudRunV2EnvVarSource
        """

        self._value_source = value_source
