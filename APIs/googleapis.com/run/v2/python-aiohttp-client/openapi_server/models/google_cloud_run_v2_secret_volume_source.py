# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_run_v2_version_to_path import GoogleCloudRunV2VersionToPath
from openapi_server import util


class GoogleCloudRunV2SecretVolumeSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_mode: int=None, items: List[GoogleCloudRunV2VersionToPath]=None, secret: str=None):
        """GoogleCloudRunV2SecretVolumeSource - a model defined in OpenAPI

        :param default_mode: The default_mode of this GoogleCloudRunV2SecretVolumeSource.
        :param items: The items of this GoogleCloudRunV2SecretVolumeSource.
        :param secret: The secret of this GoogleCloudRunV2SecretVolumeSource.
        """
        self.openapi_types = {
            'default_mode': int,
            'items': List[GoogleCloudRunV2VersionToPath],
            'secret': str
        }

        self.attribute_map = {
            'default_mode': 'defaultMode',
            'items': 'items',
            'secret': 'secret'
        }

        self._default_mode = default_mode
        self._items = items
        self._secret = secret

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV2SecretVolumeSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV2SecretVolumeSource of this GoogleCloudRunV2SecretVolumeSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_mode(self):
        """Gets the default_mode of this GoogleCloudRunV2SecretVolumeSource.

        Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0444. Directories within the path are not affected by this setting. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. This might be in conflict with other options that affect the file mode, like fsGroup, and as a result, other mode bits could be set.

        :return: The default_mode of this GoogleCloudRunV2SecretVolumeSource.
        :rtype: int
        """
        return self._default_mode

    @default_mode.setter
    def default_mode(self, default_mode):
        """Sets the default_mode of this GoogleCloudRunV2SecretVolumeSource.

        Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0444. Directories within the path are not affected by this setting. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. This might be in conflict with other options that affect the file mode, like fsGroup, and as a result, other mode bits could be set.

        :param default_mode: The default_mode of this GoogleCloudRunV2SecretVolumeSource.
        :type default_mode: int
        """

        self._default_mode = default_mode

    @property
    def items(self):
        """Gets the items of this GoogleCloudRunV2SecretVolumeSource.

        If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.

        :return: The items of this GoogleCloudRunV2SecretVolumeSource.
        :rtype: List[GoogleCloudRunV2VersionToPath]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this GoogleCloudRunV2SecretVolumeSource.

        If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.

        :param items: The items of this GoogleCloudRunV2SecretVolumeSource.
        :type items: List[GoogleCloudRunV2VersionToPath]
        """

        self._items = items

    @property
    def secret(self):
        """Gets the secret of this GoogleCloudRunV2SecretVolumeSource.

        Required. The name of the secret in Cloud Secret Manager. Format: {secret} if the secret is in the same project. projects/{project}/secrets/{secret} if the secret is in a different project.

        :return: The secret of this GoogleCloudRunV2SecretVolumeSource.
        :rtype: str
        """
        return self._secret

    @secret.setter
    def secret(self, secret):
        """Sets the secret of this GoogleCloudRunV2SecretVolumeSource.

        Required. The name of the secret in Cloud Secret Manager. Format: {secret} if the secret is in the same project. projects/{project}/secrets/{secret} if the secret is in a different project.

        :param secret: The secret of this GoogleCloudRunV2SecretVolumeSource.
        :type secret: str
        """

        self._secret = secret
