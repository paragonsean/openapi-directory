# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRunV2ResourceRequirements(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cpu_idle: bool=None, limits: Dict[str, str]=None, startup_cpu_boost: bool=None):
        """GoogleCloudRunV2ResourceRequirements - a model defined in OpenAPI

        :param cpu_idle: The cpu_idle of this GoogleCloudRunV2ResourceRequirements.
        :param limits: The limits of this GoogleCloudRunV2ResourceRequirements.
        :param startup_cpu_boost: The startup_cpu_boost of this GoogleCloudRunV2ResourceRequirements.
        """
        self.openapi_types = {
            'cpu_idle': bool,
            'limits': Dict[str, str],
            'startup_cpu_boost': bool
        }

        self.attribute_map = {
            'cpu_idle': 'cpuIdle',
            'limits': 'limits',
            'startup_cpu_boost': 'startupCpuBoost'
        }

        self._cpu_idle = cpu_idle
        self._limits = limits
        self._startup_cpu_boost = startup_cpu_boost

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV2ResourceRequirements':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV2ResourceRequirements of this GoogleCloudRunV2ResourceRequirements.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cpu_idle(self):
        """Gets the cpu_idle of this GoogleCloudRunV2ResourceRequirements.

        Determines whether CPU is only allocated during requests (true by default). However, if ResourceRequirements is set, the caller must explicitly set this field to true to preserve the default behavior.

        :return: The cpu_idle of this GoogleCloudRunV2ResourceRequirements.
        :rtype: bool
        """
        return self._cpu_idle

    @cpu_idle.setter
    def cpu_idle(self, cpu_idle):
        """Sets the cpu_idle of this GoogleCloudRunV2ResourceRequirements.

        Determines whether CPU is only allocated during requests (true by default). However, if ResourceRequirements is set, the caller must explicitly set this field to true to preserve the default behavior.

        :param cpu_idle: The cpu_idle of this GoogleCloudRunV2ResourceRequirements.
        :type cpu_idle: bool
        """

        self._cpu_idle = cpu_idle

    @property
    def limits(self):
        """Gets the limits of this GoogleCloudRunV2ResourceRequirements.

        Only `memory` and `cpu` keys in the map are supported. Notes: * The only supported values for CPU are '1', '2', '4', and '8'. Setting 4 CPU requires at least 2Gi of memory. For more information, go to https://cloud.google.com/run/docs/configuring/cpu. * For supported 'memory' values and syntax, go to https://cloud.google.com/run/docs/configuring/memory-limits

        :return: The limits of this GoogleCloudRunV2ResourceRequirements.
        :rtype: Dict[str, str]
        """
        return self._limits

    @limits.setter
    def limits(self, limits):
        """Sets the limits of this GoogleCloudRunV2ResourceRequirements.

        Only `memory` and `cpu` keys in the map are supported. Notes: * The only supported values for CPU are '1', '2', '4', and '8'. Setting 4 CPU requires at least 2Gi of memory. For more information, go to https://cloud.google.com/run/docs/configuring/cpu. * For supported 'memory' values and syntax, go to https://cloud.google.com/run/docs/configuring/memory-limits

        :param limits: The limits of this GoogleCloudRunV2ResourceRequirements.
        :type limits: Dict[str, str]
        """

        self._limits = limits

    @property
    def startup_cpu_boost(self):
        """Gets the startup_cpu_boost of this GoogleCloudRunV2ResourceRequirements.

        Determines whether CPU should be boosted on startup of a new container instance above the requested CPU threshold, this can help reduce cold-start latency.

        :return: The startup_cpu_boost of this GoogleCloudRunV2ResourceRequirements.
        :rtype: bool
        """
        return self._startup_cpu_boost

    @startup_cpu_boost.setter
    def startup_cpu_boost(self, startup_cpu_boost):
        """Sets the startup_cpu_boost of this GoogleCloudRunV2ResourceRequirements.

        Determines whether CPU should be boosted on startup of a new container instance above the requested CPU threshold, this can help reduce cold-start latency.

        :param startup_cpu_boost: The startup_cpu_boost of this GoogleCloudRunV2ResourceRequirements.
        :type startup_cpu_boost: bool
        """

        self._startup_cpu_boost = startup_cpu_boost
