# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRunV2GRPCAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, port: int=None, service: str=None):
        """GoogleCloudRunV2GRPCAction - a model defined in OpenAPI

        :param port: The port of this GoogleCloudRunV2GRPCAction.
        :param service: The service of this GoogleCloudRunV2GRPCAction.
        """
        self.openapi_types = {
            'port': int,
            'service': str
        }

        self.attribute_map = {
            'port': 'port',
            'service': 'service'
        }

        self._port = port
        self._service = service

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV2GRPCAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV2GRPCAction of this GoogleCloudRunV2GRPCAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def port(self):
        """Gets the port of this GoogleCloudRunV2GRPCAction.

        Port number of the gRPC service. Number must be in the range 1 to 65535. If not specified, defaults to the exposed port of the container, which is the value of container.ports[0].containerPort.

        :return: The port of this GoogleCloudRunV2GRPCAction.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this GoogleCloudRunV2GRPCAction.

        Port number of the gRPC service. Number must be in the range 1 to 65535. If not specified, defaults to the exposed port of the container, which is the value of container.ports[0].containerPort.

        :param port: The port of this GoogleCloudRunV2GRPCAction.
        :type port: int
        """

        self._port = port

    @property
    def service(self):
        """Gets the service of this GoogleCloudRunV2GRPCAction.

        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md ). If this is not specified, the default behavior is defined by gRPC.

        :return: The service of this GoogleCloudRunV2GRPCAction.
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this GoogleCloudRunV2GRPCAction.

        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md ). If this is not specified, the default behavior is defined by gRPC.

        :param service: The service of this GoogleCloudRunV2GRPCAction.
        :type service: str
        """

        self._service = service
