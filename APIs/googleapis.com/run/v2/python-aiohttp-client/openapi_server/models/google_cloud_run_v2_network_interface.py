# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRunV2NetworkInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network: str=None, subnetwork: str=None, tags: List[str]=None):
        """GoogleCloudRunV2NetworkInterface - a model defined in OpenAPI

        :param network: The network of this GoogleCloudRunV2NetworkInterface.
        :param subnetwork: The subnetwork of this GoogleCloudRunV2NetworkInterface.
        :param tags: The tags of this GoogleCloudRunV2NetworkInterface.
        """
        self.openapi_types = {
            'network': str,
            'subnetwork': str,
            'tags': List[str]
        }

        self.attribute_map = {
            'network': 'network',
            'subnetwork': 'subnetwork',
            'tags': 'tags'
        }

        self._network = network
        self._subnetwork = subnetwork
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV2NetworkInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV2NetworkInterface of this GoogleCloudRunV2NetworkInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network(self):
        """Gets the network of this GoogleCloudRunV2NetworkInterface.

        The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be looked up from the subnetwork.

        :return: The network of this GoogleCloudRunV2NetworkInterface.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GoogleCloudRunV2NetworkInterface.

        The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be looked up from the subnetwork.

        :param network: The network of this GoogleCloudRunV2NetworkInterface.
        :type network: str
        """

        self._network = network

    @property
    def subnetwork(self):
        """Gets the subnetwork of this GoogleCloudRunV2NetworkInterface.

        The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the subnetwork with the same name with the network will be used.

        :return: The subnetwork of this GoogleCloudRunV2NetworkInterface.
        :rtype: str
        """
        return self._subnetwork

    @subnetwork.setter
    def subnetwork(self, subnetwork):
        """Sets the subnetwork of this GoogleCloudRunV2NetworkInterface.

        The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the subnetwork with the same name with the network will be used.

        :param subnetwork: The subnetwork of this GoogleCloudRunV2NetworkInterface.
        :type subnetwork: str
        """

        self._subnetwork = subnetwork

    @property
    def tags(self):
        """Gets the tags of this GoogleCloudRunV2NetworkInterface.

        Network tags applied to this Cloud Run resource.

        :return: The tags of this GoogleCloudRunV2NetworkInterface.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GoogleCloudRunV2NetworkInterface.

        Network tags applied to this Cloud Run resource.

        :param tags: The tags of this GoogleCloudRunV2NetworkInterface.
        :type tags: List[str]
        """

        self._tags = tags
