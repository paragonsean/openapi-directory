# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_run_v2_container import GoogleCloudRunV2Container
from openapi_server.models.google_cloud_run_v2_revision_scaling import GoogleCloudRunV2RevisionScaling
from openapi_server.models.google_cloud_run_v2_volume import GoogleCloudRunV2Volume
from openapi_server.models.google_cloud_run_v2_vpc_access import GoogleCloudRunV2VpcAccess
from openapi_server import util


class GoogleCloudRunV2RevisionTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotations: Dict[str, str]=None, containers: List[GoogleCloudRunV2Container]=None, encryption_key: str=None, execution_environment: str=None, health_check_disabled: bool=None, labels: Dict[str, str]=None, max_instance_request_concurrency: int=None, revision: str=None, scaling: GoogleCloudRunV2RevisionScaling=None, service_account: str=None, session_affinity: bool=None, timeout: str=None, volumes: List[GoogleCloudRunV2Volume]=None, vpc_access: GoogleCloudRunV2VpcAccess=None):
        """GoogleCloudRunV2RevisionTemplate - a model defined in OpenAPI

        :param annotations: The annotations of this GoogleCloudRunV2RevisionTemplate.
        :param containers: The containers of this GoogleCloudRunV2RevisionTemplate.
        :param encryption_key: The encryption_key of this GoogleCloudRunV2RevisionTemplate.
        :param execution_environment: The execution_environment of this GoogleCloudRunV2RevisionTemplate.
        :param health_check_disabled: The health_check_disabled of this GoogleCloudRunV2RevisionTemplate.
        :param labels: The labels of this GoogleCloudRunV2RevisionTemplate.
        :param max_instance_request_concurrency: The max_instance_request_concurrency of this GoogleCloudRunV2RevisionTemplate.
        :param revision: The revision of this GoogleCloudRunV2RevisionTemplate.
        :param scaling: The scaling of this GoogleCloudRunV2RevisionTemplate.
        :param service_account: The service_account of this GoogleCloudRunV2RevisionTemplate.
        :param session_affinity: The session_affinity of this GoogleCloudRunV2RevisionTemplate.
        :param timeout: The timeout of this GoogleCloudRunV2RevisionTemplate.
        :param volumes: The volumes of this GoogleCloudRunV2RevisionTemplate.
        :param vpc_access: The vpc_access of this GoogleCloudRunV2RevisionTemplate.
        """
        self.openapi_types = {
            'annotations': Dict[str, str],
            'containers': List[GoogleCloudRunV2Container],
            'encryption_key': str,
            'execution_environment': str,
            'health_check_disabled': bool,
            'labels': Dict[str, str],
            'max_instance_request_concurrency': int,
            'revision': str,
            'scaling': GoogleCloudRunV2RevisionScaling,
            'service_account': str,
            'session_affinity': bool,
            'timeout': str,
            'volumes': List[GoogleCloudRunV2Volume],
            'vpc_access': GoogleCloudRunV2VpcAccess
        }

        self.attribute_map = {
            'annotations': 'annotations',
            'containers': 'containers',
            'encryption_key': 'encryptionKey',
            'execution_environment': 'executionEnvironment',
            'health_check_disabled': 'healthCheckDisabled',
            'labels': 'labels',
            'max_instance_request_concurrency': 'maxInstanceRequestConcurrency',
            'revision': 'revision',
            'scaling': 'scaling',
            'service_account': 'serviceAccount',
            'session_affinity': 'sessionAffinity',
            'timeout': 'timeout',
            'volumes': 'volumes',
            'vpc_access': 'vpcAccess'
        }

        self._annotations = annotations
        self._containers = containers
        self._encryption_key = encryption_key
        self._execution_environment = execution_environment
        self._health_check_disabled = health_check_disabled
        self._labels = labels
        self._max_instance_request_concurrency = max_instance_request_concurrency
        self._revision = revision
        self._scaling = scaling
        self._service_account = service_account
        self._session_affinity = session_affinity
        self._timeout = timeout
        self._volumes = volumes
        self._vpc_access = vpc_access

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV2RevisionTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV2RevisionTemplate of this GoogleCloudRunV2RevisionTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations(self):
        """Gets the annotations of this GoogleCloudRunV2RevisionTemplate.

        Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1 now have a corresponding field in v2 RevisionTemplate. This field follows Kubernetes annotations' namespacing, limits, and rules.

        :return: The annotations of this GoogleCloudRunV2RevisionTemplate.
        :rtype: Dict[str, str]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this GoogleCloudRunV2RevisionTemplate.

        Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1 now have a corresponding field in v2 RevisionTemplate. This field follows Kubernetes annotations' namespacing, limits, and rules.

        :param annotations: The annotations of this GoogleCloudRunV2RevisionTemplate.
        :type annotations: Dict[str, str]
        """

        self._annotations = annotations

    @property
    def containers(self):
        """Gets the containers of this GoogleCloudRunV2RevisionTemplate.

        Holds the single container that defines the unit of execution for this Revision.

        :return: The containers of this GoogleCloudRunV2RevisionTemplate.
        :rtype: List[GoogleCloudRunV2Container]
        """
        return self._containers

    @containers.setter
    def containers(self, containers):
        """Sets the containers of this GoogleCloudRunV2RevisionTemplate.

        Holds the single container that defines the unit of execution for this Revision.

        :param containers: The containers of this GoogleCloudRunV2RevisionTemplate.
        :type containers: List[GoogleCloudRunV2Container]
        """

        self._containers = containers

    @property
    def encryption_key(self):
        """Gets the encryption_key of this GoogleCloudRunV2RevisionTemplate.

        A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek

        :return: The encryption_key of this GoogleCloudRunV2RevisionTemplate.
        :rtype: str
        """
        return self._encryption_key

    @encryption_key.setter
    def encryption_key(self, encryption_key):
        """Sets the encryption_key of this GoogleCloudRunV2RevisionTemplate.

        A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek

        :param encryption_key: The encryption_key of this GoogleCloudRunV2RevisionTemplate.
        :type encryption_key: str
        """

        self._encryption_key = encryption_key

    @property
    def execution_environment(self):
        """Gets the execution_environment of this GoogleCloudRunV2RevisionTemplate.

        The sandbox environment to host this Revision.

        :return: The execution_environment of this GoogleCloudRunV2RevisionTemplate.
        :rtype: str
        """
        return self._execution_environment

    @execution_environment.setter
    def execution_environment(self, execution_environment):
        """Sets the execution_environment of this GoogleCloudRunV2RevisionTemplate.

        The sandbox environment to host this Revision.

        :param execution_environment: The execution_environment of this GoogleCloudRunV2RevisionTemplate.
        :type execution_environment: str
        """
        allowed_values = ["EXECUTION_ENVIRONMENT_UNSPECIFIED", "EXECUTION_ENVIRONMENT_GEN1", "EXECUTION_ENVIRONMENT_GEN2"]  # noqa: E501
        if execution_environment not in allowed_values:
            raise ValueError(
                "Invalid value for `execution_environment` ({0}), must be one of {1}"
                .format(execution_environment, allowed_values)
            )

        self._execution_environment = execution_environment

    @property
    def health_check_disabled(self):
        """Gets the health_check_disabled of this GoogleCloudRunV2RevisionTemplate.

        Optional. Disables health checking containers during deployment.

        :return: The health_check_disabled of this GoogleCloudRunV2RevisionTemplate.
        :rtype: bool
        """
        return self._health_check_disabled

    @health_check_disabled.setter
    def health_check_disabled(self, health_check_disabled):
        """Sets the health_check_disabled of this GoogleCloudRunV2RevisionTemplate.

        Optional. Disables health checking containers during deployment.

        :param health_check_disabled: The health_check_disabled of this GoogleCloudRunV2RevisionTemplate.
        :type health_check_disabled: bool
        """

        self._health_check_disabled = health_check_disabled

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudRunV2RevisionTemplate.

        Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 RevisionTemplate.

        :return: The labels of this GoogleCloudRunV2RevisionTemplate.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudRunV2RevisionTemplate.

        Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 RevisionTemplate.

        :param labels: The labels of this GoogleCloudRunV2RevisionTemplate.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def max_instance_request_concurrency(self):
        """Gets the max_instance_request_concurrency of this GoogleCloudRunV2RevisionTemplate.

        Sets the maximum number of requests that each serving instance can receive.

        :return: The max_instance_request_concurrency of this GoogleCloudRunV2RevisionTemplate.
        :rtype: int
        """
        return self._max_instance_request_concurrency

    @max_instance_request_concurrency.setter
    def max_instance_request_concurrency(self, max_instance_request_concurrency):
        """Sets the max_instance_request_concurrency of this GoogleCloudRunV2RevisionTemplate.

        Sets the maximum number of requests that each serving instance can receive.

        :param max_instance_request_concurrency: The max_instance_request_concurrency of this GoogleCloudRunV2RevisionTemplate.
        :type max_instance_request_concurrency: int
        """

        self._max_instance_request_concurrency = max_instance_request_concurrency

    @property
    def revision(self):
        """Gets the revision of this GoogleCloudRunV2RevisionTemplate.

        The unique name for the revision. If this field is omitted, it will be automatically generated based on the Service name.

        :return: The revision of this GoogleCloudRunV2RevisionTemplate.
        :rtype: str
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this GoogleCloudRunV2RevisionTemplate.

        The unique name for the revision. If this field is omitted, it will be automatically generated based on the Service name.

        :param revision: The revision of this GoogleCloudRunV2RevisionTemplate.
        :type revision: str
        """

        self._revision = revision

    @property
    def scaling(self):
        """Gets the scaling of this GoogleCloudRunV2RevisionTemplate.


        :return: The scaling of this GoogleCloudRunV2RevisionTemplate.
        :rtype: GoogleCloudRunV2RevisionScaling
        """
        return self._scaling

    @scaling.setter
    def scaling(self, scaling):
        """Sets the scaling of this GoogleCloudRunV2RevisionTemplate.


        :param scaling: The scaling of this GoogleCloudRunV2RevisionTemplate.
        :type scaling: GoogleCloudRunV2RevisionScaling
        """

        self._scaling = scaling

    @property
    def service_account(self):
        """Gets the service_account of this GoogleCloudRunV2RevisionTemplate.

        Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.

        :return: The service_account of this GoogleCloudRunV2RevisionTemplate.
        :rtype: str
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this GoogleCloudRunV2RevisionTemplate.

        Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.

        :param service_account: The service_account of this GoogleCloudRunV2RevisionTemplate.
        :type service_account: str
        """

        self._service_account = service_account

    @property
    def session_affinity(self):
        """Gets the session_affinity of this GoogleCloudRunV2RevisionTemplate.

        Optional. Enable session affinity.

        :return: The session_affinity of this GoogleCloudRunV2RevisionTemplate.
        :rtype: bool
        """
        return self._session_affinity

    @session_affinity.setter
    def session_affinity(self, session_affinity):
        """Sets the session_affinity of this GoogleCloudRunV2RevisionTemplate.

        Optional. Enable session affinity.

        :param session_affinity: The session_affinity of this GoogleCloudRunV2RevisionTemplate.
        :type session_affinity: bool
        """

        self._session_affinity = session_affinity

    @property
    def timeout(self):
        """Gets the timeout of this GoogleCloudRunV2RevisionTemplate.

        Max allowed time for an instance to respond to a request.

        :return: The timeout of this GoogleCloudRunV2RevisionTemplate.
        :rtype: str
        """
        return self._timeout

    @timeout.setter
    def timeout(self, timeout):
        """Sets the timeout of this GoogleCloudRunV2RevisionTemplate.

        Max allowed time for an instance to respond to a request.

        :param timeout: The timeout of this GoogleCloudRunV2RevisionTemplate.
        :type timeout: str
        """

        self._timeout = timeout

    @property
    def volumes(self):
        """Gets the volumes of this GoogleCloudRunV2RevisionTemplate.

        A list of Volumes to make available to containers.

        :return: The volumes of this GoogleCloudRunV2RevisionTemplate.
        :rtype: List[GoogleCloudRunV2Volume]
        """
        return self._volumes

    @volumes.setter
    def volumes(self, volumes):
        """Sets the volumes of this GoogleCloudRunV2RevisionTemplate.

        A list of Volumes to make available to containers.

        :param volumes: The volumes of this GoogleCloudRunV2RevisionTemplate.
        :type volumes: List[GoogleCloudRunV2Volume]
        """

        self._volumes = volumes

    @property
    def vpc_access(self):
        """Gets the vpc_access of this GoogleCloudRunV2RevisionTemplate.


        :return: The vpc_access of this GoogleCloudRunV2RevisionTemplate.
        :rtype: GoogleCloudRunV2VpcAccess
        """
        return self._vpc_access

    @vpc_access.setter
    def vpc_access(self, vpc_access):
        """Sets the vpc_access of this GoogleCloudRunV2RevisionTemplate.


        :param vpc_access: The vpc_access of this GoogleCloudRunV2RevisionTemplate.
        :type vpc_access: GoogleCloudRunV2VpcAccess
        """

        self._vpc_access = vpc_access
