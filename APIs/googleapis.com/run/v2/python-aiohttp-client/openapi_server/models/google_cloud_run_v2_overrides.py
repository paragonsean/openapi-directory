# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_run_v2_container_override import GoogleCloudRunV2ContainerOverride
from openapi_server import util


class GoogleCloudRunV2Overrides(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_overrides: List[GoogleCloudRunV2ContainerOverride]=None, task_count: int=None, timeout: str=None):
        """GoogleCloudRunV2Overrides - a model defined in OpenAPI

        :param container_overrides: The container_overrides of this GoogleCloudRunV2Overrides.
        :param task_count: The task_count of this GoogleCloudRunV2Overrides.
        :param timeout: The timeout of this GoogleCloudRunV2Overrides.
        """
        self.openapi_types = {
            'container_overrides': List[GoogleCloudRunV2ContainerOverride],
            'task_count': int,
            'timeout': str
        }

        self.attribute_map = {
            'container_overrides': 'containerOverrides',
            'task_count': 'taskCount',
            'timeout': 'timeout'
        }

        self._container_overrides = container_overrides
        self._task_count = task_count
        self._timeout = timeout

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV2Overrides':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV2Overrides of this GoogleCloudRunV2Overrides.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_overrides(self):
        """Gets the container_overrides of this GoogleCloudRunV2Overrides.

        Per container override specification.

        :return: The container_overrides of this GoogleCloudRunV2Overrides.
        :rtype: List[GoogleCloudRunV2ContainerOverride]
        """
        return self._container_overrides

    @container_overrides.setter
    def container_overrides(self, container_overrides):
        """Sets the container_overrides of this GoogleCloudRunV2Overrides.

        Per container override specification.

        :param container_overrides: The container_overrides of this GoogleCloudRunV2Overrides.
        :type container_overrides: List[GoogleCloudRunV2ContainerOverride]
        """

        self._container_overrides = container_overrides

    @property
    def task_count(self):
        """Gets the task_count of this GoogleCloudRunV2Overrides.

        Optional. The desired number of tasks the execution should run. Will replace existing task_count value.

        :return: The task_count of this GoogleCloudRunV2Overrides.
        :rtype: int
        """
        return self._task_count

    @task_count.setter
    def task_count(self, task_count):
        """Sets the task_count of this GoogleCloudRunV2Overrides.

        Optional. The desired number of tasks the execution should run. Will replace existing task_count value.

        :param task_count: The task_count of this GoogleCloudRunV2Overrides.
        :type task_count: int
        """

        self._task_count = task_count

    @property
    def timeout(self):
        """Gets the timeout of this GoogleCloudRunV2Overrides.

        Duration in seconds the task may be active before the system will actively try to mark it failed and kill associated containers. Will replace existing timeout_seconds value.

        :return: The timeout of this GoogleCloudRunV2Overrides.
        :rtype: str
        """
        return self._timeout

    @timeout.setter
    def timeout(self, timeout):
        """Sets the timeout of this GoogleCloudRunV2Overrides.

        Duration in seconds the task may be active before the system will actively try to mark it failed and kill associated containers. Will replace existing timeout_seconds value.

        :param timeout: The timeout of this GoogleCloudRunV2Overrides.
        :type timeout: str
        """

        self._timeout = timeout
