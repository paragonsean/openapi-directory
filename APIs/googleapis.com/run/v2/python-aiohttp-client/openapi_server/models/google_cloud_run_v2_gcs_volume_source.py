# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRunV2GCSVolumeSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket: str=None, read_only: bool=None):
        """GoogleCloudRunV2GCSVolumeSource - a model defined in OpenAPI

        :param bucket: The bucket of this GoogleCloudRunV2GCSVolumeSource.
        :param read_only: The read_only of this GoogleCloudRunV2GCSVolumeSource.
        """
        self.openapi_types = {
            'bucket': str,
            'read_only': bool
        }

        self.attribute_map = {
            'bucket': 'bucket',
            'read_only': 'readOnly'
        }

        self._bucket = bucket
        self._read_only = read_only

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV2GCSVolumeSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV2GCSVolumeSource of this GoogleCloudRunV2GCSVolumeSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket(self):
        """Gets the bucket of this GoogleCloudRunV2GCSVolumeSource.

        GCS Bucket name

        :return: The bucket of this GoogleCloudRunV2GCSVolumeSource.
        :rtype: str
        """
        return self._bucket

    @bucket.setter
    def bucket(self, bucket):
        """Sets the bucket of this GoogleCloudRunV2GCSVolumeSource.

        GCS Bucket name

        :param bucket: The bucket of this GoogleCloudRunV2GCSVolumeSource.
        :type bucket: str
        """

        self._bucket = bucket

    @property
    def read_only(self):
        """Gets the read_only of this GoogleCloudRunV2GCSVolumeSource.

        If true, mount the GCS bucket as read-only

        :return: The read_only of this GoogleCloudRunV2GCSVolumeSource.
        :rtype: bool
        """
        return self._read_only

    @read_only.setter
    def read_only(self, read_only):
        """Sets the read_only of this GoogleCloudRunV2GCSVolumeSource.

        If true, mount the GCS bucket as read-only

        :param read_only: The read_only of this GoogleCloudRunV2GCSVolumeSource.
        :type read_only: bool
        """

        self._read_only = read_only
