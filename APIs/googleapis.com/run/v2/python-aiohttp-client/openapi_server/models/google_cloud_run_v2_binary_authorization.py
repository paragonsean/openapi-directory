# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRunV2BinaryAuthorization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, breakglass_justification: str=None, use_default: bool=None):
        """GoogleCloudRunV2BinaryAuthorization - a model defined in OpenAPI

        :param breakglass_justification: The breakglass_justification of this GoogleCloudRunV2BinaryAuthorization.
        :param use_default: The use_default of this GoogleCloudRunV2BinaryAuthorization.
        """
        self.openapi_types = {
            'breakglass_justification': str,
            'use_default': bool
        }

        self.attribute_map = {
            'breakglass_justification': 'breakglassJustification',
            'use_default': 'useDefault'
        }

        self._breakglass_justification = breakglass_justification
        self._use_default = use_default

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRunV2BinaryAuthorization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRunV2BinaryAuthorization of this GoogleCloudRunV2BinaryAuthorization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def breakglass_justification(self):
        """Gets the breakglass_justification of this GoogleCloudRunV2BinaryAuthorization.

        If present, indicates to use Breakglass using this justification. If use_default is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass

        :return: The breakglass_justification of this GoogleCloudRunV2BinaryAuthorization.
        :rtype: str
        """
        return self._breakglass_justification

    @breakglass_justification.setter
    def breakglass_justification(self, breakglass_justification):
        """Sets the breakglass_justification of this GoogleCloudRunV2BinaryAuthorization.

        If present, indicates to use Breakglass using this justification. If use_default is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass

        :param breakglass_justification: The breakglass_justification of this GoogleCloudRunV2BinaryAuthorization.
        :type breakglass_justification: str
        """

        self._breakglass_justification = breakglass_justification

    @property
    def use_default(self):
        """Gets the use_default of this GoogleCloudRunV2BinaryAuthorization.

        If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled.

        :return: The use_default of this GoogleCloudRunV2BinaryAuthorization.
        :rtype: bool
        """
        return self._use_default

    @use_default.setter
    def use_default(self, use_default):
        """Sets the use_default of this GoogleCloudRunV2BinaryAuthorization.

        If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled.

        :param use_default: The use_default of this GoogleCloudRunV2BinaryAuthorization.
        :type use_default: bool
        """

        self._use_default = use_default
