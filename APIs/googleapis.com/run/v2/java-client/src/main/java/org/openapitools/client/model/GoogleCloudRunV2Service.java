/*
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudRunV2BinaryAuthorization;
import org.openapitools.client.model.GoogleCloudRunV2Condition;
import org.openapitools.client.model.GoogleCloudRunV2RevisionTemplate;
import org.openapitools.client.model.GoogleCloudRunV2ServiceScaling;
import org.openapitools.client.model.GoogleCloudRunV2TrafficTarget;
import org.openapitools.client.model.GoogleCloudRunV2TrafficTargetStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Service acts as a top-level container that manages a set of configurations and revision templates which implement a network service. Service exists to provide a singular abstraction which can be access controlled, reasoned about, and which encapsulates software lifecycle decisions such as rollout policy and team resource ownership.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:07.645646-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRunV2Service {
  public static final String SERIALIZED_NAME_ANNOTATIONS = "annotations";
  @SerializedName(SERIALIZED_NAME_ANNOTATIONS)
  private Map<String, String> annotations = new HashMap<>();

  public static final String SERIALIZED_NAME_BINARY_AUTHORIZATION = "binaryAuthorization";
  @SerializedName(SERIALIZED_NAME_BINARY_AUTHORIZATION)
  private GoogleCloudRunV2BinaryAuthorization binaryAuthorization;

  public static final String SERIALIZED_NAME_CLIENT = "client";
  @SerializedName(SERIALIZED_NAME_CLIENT)
  private String client;

  public static final String SERIALIZED_NAME_CLIENT_VERSION = "clientVersion";
  @SerializedName(SERIALIZED_NAME_CLIENT_VERSION)
  private String clientVersion;

  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private List<GoogleCloudRunV2Condition> conditions = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private String creator;

  public static final String SERIALIZED_NAME_CUSTOM_AUDIENCES = "customAudiences";
  @SerializedName(SERIALIZED_NAME_CUSTOM_AUDIENCES)
  private List<String> customAudiences = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULT_URI_DISABLED = "defaultUriDisabled";
  @SerializedName(SERIALIZED_NAME_DEFAULT_URI_DISABLED)
  private Boolean defaultUriDisabled;

  public static final String SERIALIZED_NAME_DELETE_TIME = "deleteTime";
  @SerializedName(SERIALIZED_NAME_DELETE_TIME)
  private String deleteTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_EXPIRE_TIME = "expireTime";
  @SerializedName(SERIALIZED_NAME_EXPIRE_TIME)
  private String expireTime;

  public static final String SERIALIZED_NAME_GENERATION = "generation";
  @SerializedName(SERIALIZED_NAME_GENERATION)
  private String generation;

  /**
   * Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active.
   */
  @JsonAdapter(IngressEnum.Adapter.class)
  public enum IngressEnum {
    UNSPECIFIED("INGRESS_TRAFFIC_UNSPECIFIED"),
    
    ALL("INGRESS_TRAFFIC_ALL"),
    
    INTERNAL_ONLY("INGRESS_TRAFFIC_INTERNAL_ONLY"),
    
    INTERNAL_LOAD_BALANCER("INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER");

    private String value;

    IngressEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IngressEnum fromValue(String value) {
      for (IngressEnum b : IngressEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IngressEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IngressEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IngressEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return IngressEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      IngressEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_INGRESS = "ingress";
  @SerializedName(SERIALIZED_NAME_INGRESS)
  private IngressEnum ingress;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_LAST_MODIFIER = "lastModifier";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIER)
  private String lastModifier;

  public static final String SERIALIZED_NAME_LATEST_CREATED_REVISION = "latestCreatedRevision";
  @SerializedName(SERIALIZED_NAME_LATEST_CREATED_REVISION)
  private String latestCreatedRevision;

  public static final String SERIALIZED_NAME_LATEST_READY_REVISION = "latestReadyRevision";
  @SerializedName(SERIALIZED_NAME_LATEST_READY_REVISION)
  private String latestReadyRevision;

  /**
   * The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports &#x60;ALPHA&#x60;, &#x60;BETA&#x60;, and &#x60;GA&#x60;. If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
   */
  @JsonAdapter(LaunchStageEnum.Adapter.class)
  public enum LaunchStageEnum {
    LAUNCH_STAGE_UNSPECIFIED("LAUNCH_STAGE_UNSPECIFIED"),
    
    UNIMPLEMENTED("UNIMPLEMENTED"),
    
    PRELAUNCH("PRELAUNCH"),
    
    EARLY_ACCESS("EARLY_ACCESS"),
    
    ALPHA("ALPHA"),
    
    BETA("BETA"),
    
    GA("GA"),
    
    DEPRECATED("DEPRECATED");

    private String value;

    LaunchStageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LaunchStageEnum fromValue(String value) {
      for (LaunchStageEnum b : LaunchStageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LaunchStageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LaunchStageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LaunchStageEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LaunchStageEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LaunchStageEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LAUNCH_STAGE = "launchStage";
  @SerializedName(SERIALIZED_NAME_LAUNCH_STAGE)
  private LaunchStageEnum launchStage;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OBSERVED_GENERATION = "observedGeneration";
  @SerializedName(SERIALIZED_NAME_OBSERVED_GENERATION)
  private String observedGeneration;

  public static final String SERIALIZED_NAME_RECONCILING = "reconciling";
  @SerializedName(SERIALIZED_NAME_RECONCILING)
  private Boolean reconciling;

  public static final String SERIALIZED_NAME_SATISFIES_PZS = "satisfiesPzs";
  @SerializedName(SERIALIZED_NAME_SATISFIES_PZS)
  private Boolean satisfiesPzs;

  public static final String SERIALIZED_NAME_SCALING = "scaling";
  @SerializedName(SERIALIZED_NAME_SCALING)
  private GoogleCloudRunV2ServiceScaling scaling;

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  private GoogleCloudRunV2RevisionTemplate template;

  public static final String SERIALIZED_NAME_TERMINAL_CONDITION = "terminalCondition";
  @SerializedName(SERIALIZED_NAME_TERMINAL_CONDITION)
  private GoogleCloudRunV2Condition terminalCondition;

  public static final String SERIALIZED_NAME_TRAFFIC = "traffic";
  @SerializedName(SERIALIZED_NAME_TRAFFIC)
  private List<GoogleCloudRunV2TrafficTarget> traffic = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRAFFIC_STATUSES = "trafficStatuses";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_STATUSES)
  private List<GoogleCloudRunV2TrafficTargetStatus> trafficStatuses = new ArrayList<>();

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public GoogleCloudRunV2Service() {
  }

  public GoogleCloudRunV2Service(
     List<GoogleCloudRunV2Condition> conditions, 
     String createTime, 
     String creator, 
     String deleteTime, 
     String etag, 
     String expireTime, 
     String generation, 
     String lastModifier, 
     String latestCreatedRevision, 
     String latestReadyRevision, 
     String observedGeneration, 
     Boolean reconciling, 
     Boolean satisfiesPzs, 
     List<GoogleCloudRunV2TrafficTargetStatus> trafficStatuses, 
     String uid, 
     String updateTime, 
     String uri
  ) {
    this();
    this.conditions = conditions;
    this.createTime = createTime;
    this.creator = creator;
    this.deleteTime = deleteTime;
    this.etag = etag;
    this.expireTime = expireTime;
    this.generation = generation;
    this.lastModifier = lastModifier;
    this.latestCreatedRevision = latestCreatedRevision;
    this.latestReadyRevision = latestReadyRevision;
    this.observedGeneration = observedGeneration;
    this.reconciling = reconciling;
    this.satisfiesPzs = satisfiesPzs;
    this.trafficStatuses = trafficStatuses;
    this.uid = uid;
    this.updateTime = updateTime;
    this.uri = uri;
  }

  public GoogleCloudRunV2Service annotations(Map<String, String> annotations) {
    this.annotations = annotations;
    return this;
  }

  public GoogleCloudRunV2Service putAnnotationsItem(String key, String annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new HashMap<>();
    }
    this.annotations.put(key, annotationsItem);
    return this;
  }

  /**
   * Optional. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with &#x60;run.googleapis.com&#x60;, &#x60;cloud.googleapis.com&#x60;, &#x60;serving.knative.dev&#x60;, or &#x60;autoscaling.knative.dev&#x60; namespaces, and they will be rejected in new resources. All system annotations in v1 now have a corresponding field in v2 Service. This field follows Kubernetes annotations&#39; namespacing, limits, and rules.
   * @return annotations
   */
  @javax.annotation.Nullable
  public Map<String, String> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(Map<String, String> annotations) {
    this.annotations = annotations;
  }


  public GoogleCloudRunV2Service binaryAuthorization(GoogleCloudRunV2BinaryAuthorization binaryAuthorization) {
    this.binaryAuthorization = binaryAuthorization;
    return this;
  }

  /**
   * Get binaryAuthorization
   * @return binaryAuthorization
   */
  @javax.annotation.Nullable
  public GoogleCloudRunV2BinaryAuthorization getBinaryAuthorization() {
    return binaryAuthorization;
  }

  public void setBinaryAuthorization(GoogleCloudRunV2BinaryAuthorization binaryAuthorization) {
    this.binaryAuthorization = binaryAuthorization;
  }


  public GoogleCloudRunV2Service client(String client) {
    this.client = client;
    return this;
  }

  /**
   * Arbitrary identifier for the API client.
   * @return client
   */
  @javax.annotation.Nullable
  public String getClient() {
    return client;
  }

  public void setClient(String client) {
    this.client = client;
  }


  public GoogleCloudRunV2Service clientVersion(String clientVersion) {
    this.clientVersion = clientVersion;
    return this;
  }

  /**
   * Arbitrary version identifier for the API client.
   * @return clientVersion
   */
  @javax.annotation.Nullable
  public String getClientVersion() {
    return clientVersion;
  }

  public void setClientVersion(String clientVersion) {
    this.clientVersion = clientVersion;
  }


  /**
   * Output only. The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Service does not reach its Serving state. See comments in &#x60;reconciling&#x60; for additional information on reconciliation process in Cloud Run.
   * @return conditions
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRunV2Condition> getConditions() {
    return conditions;
  }



  /**
   * Output only. The creation time.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  /**
   * Output only. Email address of the authenticated creator.
   * @return creator
   */
  @javax.annotation.Nullable
  public String getCreator() {
    return creator;
  }



  public GoogleCloudRunV2Service customAudiences(List<String> customAudiences) {
    this.customAudiences = customAudiences;
    return this;
  }

  public GoogleCloudRunV2Service addCustomAudiencesItem(String customAudiencesItem) {
    if (this.customAudiences == null) {
      this.customAudiences = new ArrayList<>();
    }
    this.customAudiences.add(customAudiencesItem);
    return this;
  }

  /**
   * One or more custom audiences that you want this service to support. Specify each custom audience as the full URL in a string. The custom audiences are encoded in the token and used to authenticate requests. For more information, see https://cloud.google.com/run/docs/configuring/custom-audiences.
   * @return customAudiences
   */
  @javax.annotation.Nullable
  public List<String> getCustomAudiences() {
    return customAudiences;
  }

  public void setCustomAudiences(List<String> customAudiences) {
    this.customAudiences = customAudiences;
  }


  public GoogleCloudRunV2Service defaultUriDisabled(Boolean defaultUriDisabled) {
    this.defaultUriDisabled = defaultUriDisabled;
    return this;
  }

  /**
   * Optional. Disables public resolution of the default URI of this service.
   * @return defaultUriDisabled
   */
  @javax.annotation.Nullable
  public Boolean getDefaultUriDisabled() {
    return defaultUriDisabled;
  }

  public void setDefaultUriDisabled(Boolean defaultUriDisabled) {
    this.defaultUriDisabled = defaultUriDisabled;
  }


  /**
   * Output only. The deletion time.
   * @return deleteTime
   */
  @javax.annotation.Nullable
  public String getDeleteTime() {
    return deleteTime;
  }



  public GoogleCloudRunV2Service description(String description) {
    this.description = description;
    return this;
  }

  /**
   * User-provided description of the Service. This field currently has a 512-character limit.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  /**
   * Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }



  /**
   * Output only. For a deleted resource, the time after which it will be permamently deleted.
   * @return expireTime
   */
  @javax.annotation.Nullable
  public String getExpireTime() {
    return expireTime;
  }



  /**
   * Output only. A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a &#x60;string&#x60; instead of an &#x60;integer&#x60;.
   * @return generation
   */
  @javax.annotation.Nullable
  public String getGeneration() {
    return generation;
  }



  public GoogleCloudRunV2Service ingress(IngressEnum ingress) {
    this.ingress = ingress;
    return this;
  }

  /**
   * Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active.
   * @return ingress
   */
  @javax.annotation.Nullable
  public IngressEnum getIngress() {
    return ingress;
  }

  public void setIngress(IngressEnum ingress) {
    this.ingress = ingress;
  }


  public GoogleCloudRunV2Service labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudRunV2Service putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with &#x60;run.googleapis.com&#x60;, &#x60;cloud.googleapis.com&#x60;, &#x60;serving.knative.dev&#x60;, or &#x60;autoscaling.knative.dev&#x60; namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 Service.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  /**
   * Output only. Email address of the last authenticated modifier.
   * @return lastModifier
   */
  @javax.annotation.Nullable
  public String getLastModifier() {
    return lastModifier;
  }



  /**
   * Output only. Name of the last created revision. See comments in &#x60;reconciling&#x60; for additional information on reconciliation process in Cloud Run.
   * @return latestCreatedRevision
   */
  @javax.annotation.Nullable
  public String getLatestCreatedRevision() {
    return latestCreatedRevision;
  }



  /**
   * Output only. Name of the latest revision that is serving traffic. See comments in &#x60;reconciling&#x60; for additional information on reconciliation process in Cloud Run.
   * @return latestReadyRevision
   */
  @javax.annotation.Nullable
  public String getLatestReadyRevision() {
    return latestReadyRevision;
  }



  public GoogleCloudRunV2Service launchStage(LaunchStageEnum launchStage) {
    this.launchStage = launchStage;
    return this;
  }

  /**
   * The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports &#x60;ALPHA&#x60;, &#x60;BETA&#x60;, and &#x60;GA&#x60;. If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
   * @return launchStage
   */
  @javax.annotation.Nullable
  public LaunchStageEnum getLaunchStage() {
    return launchStage;
  }

  public void setLaunchStage(LaunchStageEnum launchStage) {
    this.launchStage = launchStage;
  }


  public GoogleCloudRunV2Service name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The fully qualified name of this Service. In CreateServiceRequest, this field is ignored, and instead composed from CreateServiceRequest.parent and CreateServiceRequest.service_id. Format: projects/{project}/locations/{location}/services/{service_id}
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  /**
   * Output only. The generation of this Service currently serving traffic. See comments in &#x60;reconciling&#x60; for additional information on reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a &#x60;string&#x60; instead of an &#x60;integer&#x60;.
   * @return observedGeneration
   */
  @javax.annotation.Nullable
  public String getObservedGeneration() {
    return observedGeneration;
  }



  /**
   * Output only. Returns true if the Service is currently being acted upon by the system to bring it into the desired state. When a new Service is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Service to the desired serving state. This process is called reconciliation. While reconciliation is in process, &#x60;observed_generation&#x60;, &#x60;latest_ready_revison&#x60;, &#x60;traffic_statuses&#x60;, and &#x60;uri&#x60; will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the serving state matches the Service, or there was an error, and reconciliation failed. This state can be found in &#x60;terminal_condition.state&#x60;. If reconciliation succeeded, the following fields will match: &#x60;traffic&#x60; and &#x60;traffic_statuses&#x60;, &#x60;observed_generation&#x60; and &#x60;generation&#x60;, &#x60;latest_ready_revision&#x60; and &#x60;latest_created_revision&#x60;. If reconciliation failed, &#x60;traffic_statuses&#x60;, &#x60;observed_generation&#x60;, and &#x60;latest_ready_revision&#x60; will have the state of the last serving revision, or empty for newly created Services. Additional information on the failure can be found in &#x60;terminal_condition&#x60; and &#x60;conditions&#x60;.
   * @return reconciling
   */
  @javax.annotation.Nullable
  public Boolean getReconciling() {
    return reconciling;
  }



  /**
   * Output only. Reserved for future use.
   * @return satisfiesPzs
   */
  @javax.annotation.Nullable
  public Boolean getSatisfiesPzs() {
    return satisfiesPzs;
  }



  public GoogleCloudRunV2Service scaling(GoogleCloudRunV2ServiceScaling scaling) {
    this.scaling = scaling;
    return this;
  }

  /**
   * Get scaling
   * @return scaling
   */
  @javax.annotation.Nullable
  public GoogleCloudRunV2ServiceScaling getScaling() {
    return scaling;
  }

  public void setScaling(GoogleCloudRunV2ServiceScaling scaling) {
    this.scaling = scaling;
  }


  public GoogleCloudRunV2Service template(GoogleCloudRunV2RevisionTemplate template) {
    this.template = template;
    return this;
  }

  /**
   * Get template
   * @return template
   */
  @javax.annotation.Nullable
  public GoogleCloudRunV2RevisionTemplate getTemplate() {
    return template;
  }

  public void setTemplate(GoogleCloudRunV2RevisionTemplate template) {
    this.template = template;
  }


  public GoogleCloudRunV2Service terminalCondition(GoogleCloudRunV2Condition terminalCondition) {
    this.terminalCondition = terminalCondition;
    return this;
  }

  /**
   * Get terminalCondition
   * @return terminalCondition
   */
  @javax.annotation.Nullable
  public GoogleCloudRunV2Condition getTerminalCondition() {
    return terminalCondition;
  }

  public void setTerminalCondition(GoogleCloudRunV2Condition terminalCondition) {
    this.terminalCondition = terminalCondition;
  }


  public GoogleCloudRunV2Service traffic(List<GoogleCloudRunV2TrafficTarget> traffic) {
    this.traffic = traffic;
    return this;
  }

  public GoogleCloudRunV2Service addTrafficItem(GoogleCloudRunV2TrafficTarget trafficItem) {
    if (this.traffic == null) {
      this.traffic = new ArrayList<>();
    }
    this.traffic.add(trafficItem);
    return this;
  }

  /**
   * Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not provided, defaults to 100% traffic to the latest &#x60;Ready&#x60; Revision.
   * @return traffic
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRunV2TrafficTarget> getTraffic() {
    return traffic;
  }

  public void setTraffic(List<GoogleCloudRunV2TrafficTarget> traffic) {
    this.traffic = traffic;
  }


  /**
   * Output only. Detailed status information for corresponding traffic targets. See comments in &#x60;reconciling&#x60; for additional information on reconciliation process in Cloud Run.
   * @return trafficStatuses
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRunV2TrafficTargetStatus> getTrafficStatuses() {
    return trafficStatuses;
  }



  /**
   * Output only. Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
   * @return uid
   */
  @javax.annotation.Nullable
  public String getUid() {
    return uid;
  }



  /**
   * Output only. The last-modified time.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }



  /**
   * Output only. The main URI in which this Service is serving traffic.
   * @return uri
   */
  @javax.annotation.Nullable
  public String getUri() {
    return uri;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRunV2Service googleCloudRunV2Service = (GoogleCloudRunV2Service) o;
    return Objects.equals(this.annotations, googleCloudRunV2Service.annotations) &&
        Objects.equals(this.binaryAuthorization, googleCloudRunV2Service.binaryAuthorization) &&
        Objects.equals(this.client, googleCloudRunV2Service.client) &&
        Objects.equals(this.clientVersion, googleCloudRunV2Service.clientVersion) &&
        Objects.equals(this.conditions, googleCloudRunV2Service.conditions) &&
        Objects.equals(this.createTime, googleCloudRunV2Service.createTime) &&
        Objects.equals(this.creator, googleCloudRunV2Service.creator) &&
        Objects.equals(this.customAudiences, googleCloudRunV2Service.customAudiences) &&
        Objects.equals(this.defaultUriDisabled, googleCloudRunV2Service.defaultUriDisabled) &&
        Objects.equals(this.deleteTime, googleCloudRunV2Service.deleteTime) &&
        Objects.equals(this.description, googleCloudRunV2Service.description) &&
        Objects.equals(this.etag, googleCloudRunV2Service.etag) &&
        Objects.equals(this.expireTime, googleCloudRunV2Service.expireTime) &&
        Objects.equals(this.generation, googleCloudRunV2Service.generation) &&
        Objects.equals(this.ingress, googleCloudRunV2Service.ingress) &&
        Objects.equals(this.labels, googleCloudRunV2Service.labels) &&
        Objects.equals(this.lastModifier, googleCloudRunV2Service.lastModifier) &&
        Objects.equals(this.latestCreatedRevision, googleCloudRunV2Service.latestCreatedRevision) &&
        Objects.equals(this.latestReadyRevision, googleCloudRunV2Service.latestReadyRevision) &&
        Objects.equals(this.launchStage, googleCloudRunV2Service.launchStage) &&
        Objects.equals(this.name, googleCloudRunV2Service.name) &&
        Objects.equals(this.observedGeneration, googleCloudRunV2Service.observedGeneration) &&
        Objects.equals(this.reconciling, googleCloudRunV2Service.reconciling) &&
        Objects.equals(this.satisfiesPzs, googleCloudRunV2Service.satisfiesPzs) &&
        Objects.equals(this.scaling, googleCloudRunV2Service.scaling) &&
        Objects.equals(this.template, googleCloudRunV2Service.template) &&
        Objects.equals(this.terminalCondition, googleCloudRunV2Service.terminalCondition) &&
        Objects.equals(this.traffic, googleCloudRunV2Service.traffic) &&
        Objects.equals(this.trafficStatuses, googleCloudRunV2Service.trafficStatuses) &&
        Objects.equals(this.uid, googleCloudRunV2Service.uid) &&
        Objects.equals(this.updateTime, googleCloudRunV2Service.updateTime) &&
        Objects.equals(this.uri, googleCloudRunV2Service.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotations, binaryAuthorization, client, clientVersion, conditions, createTime, creator, customAudiences, defaultUriDisabled, deleteTime, description, etag, expireTime, generation, ingress, labels, lastModifier, latestCreatedRevision, latestReadyRevision, launchStage, name, observedGeneration, reconciling, satisfiesPzs, scaling, template, terminalCondition, traffic, trafficStatuses, uid, updateTime, uri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRunV2Service {\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    binaryAuthorization: ").append(toIndentedString(binaryAuthorization)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    clientVersion: ").append(toIndentedString(clientVersion)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    customAudiences: ").append(toIndentedString(customAudiences)).append("\n");
    sb.append("    defaultUriDisabled: ").append(toIndentedString(defaultUriDisabled)).append("\n");
    sb.append("    deleteTime: ").append(toIndentedString(deleteTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    expireTime: ").append(toIndentedString(expireTime)).append("\n");
    sb.append("    generation: ").append(toIndentedString(generation)).append("\n");
    sb.append("    ingress: ").append(toIndentedString(ingress)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    lastModifier: ").append(toIndentedString(lastModifier)).append("\n");
    sb.append("    latestCreatedRevision: ").append(toIndentedString(latestCreatedRevision)).append("\n");
    sb.append("    latestReadyRevision: ").append(toIndentedString(latestReadyRevision)).append("\n");
    sb.append("    launchStage: ").append(toIndentedString(launchStage)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    observedGeneration: ").append(toIndentedString(observedGeneration)).append("\n");
    sb.append("    reconciling: ").append(toIndentedString(reconciling)).append("\n");
    sb.append("    satisfiesPzs: ").append(toIndentedString(satisfiesPzs)).append("\n");
    sb.append("    scaling: ").append(toIndentedString(scaling)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    terminalCondition: ").append(toIndentedString(terminalCondition)).append("\n");
    sb.append("    traffic: ").append(toIndentedString(traffic)).append("\n");
    sb.append("    trafficStatuses: ").append(toIndentedString(trafficStatuses)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annotations");
    openapiFields.add("binaryAuthorization");
    openapiFields.add("client");
    openapiFields.add("clientVersion");
    openapiFields.add("conditions");
    openapiFields.add("createTime");
    openapiFields.add("creator");
    openapiFields.add("customAudiences");
    openapiFields.add("defaultUriDisabled");
    openapiFields.add("deleteTime");
    openapiFields.add("description");
    openapiFields.add("etag");
    openapiFields.add("expireTime");
    openapiFields.add("generation");
    openapiFields.add("ingress");
    openapiFields.add("labels");
    openapiFields.add("lastModifier");
    openapiFields.add("latestCreatedRevision");
    openapiFields.add("latestReadyRevision");
    openapiFields.add("launchStage");
    openapiFields.add("name");
    openapiFields.add("observedGeneration");
    openapiFields.add("reconciling");
    openapiFields.add("satisfiesPzs");
    openapiFields.add("scaling");
    openapiFields.add("template");
    openapiFields.add("terminalCondition");
    openapiFields.add("traffic");
    openapiFields.add("trafficStatuses");
    openapiFields.add("uid");
    openapiFields.add("updateTime");
    openapiFields.add("uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRunV2Service
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRunV2Service.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRunV2Service is not found in the empty JSON string", GoogleCloudRunV2Service.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRunV2Service.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRunV2Service` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `binaryAuthorization`
      if (jsonObj.get("binaryAuthorization") != null && !jsonObj.get("binaryAuthorization").isJsonNull()) {
        GoogleCloudRunV2BinaryAuthorization.validateJsonElement(jsonObj.get("binaryAuthorization"));
      }
      if ((jsonObj.get("client") != null && !jsonObj.get("client").isJsonNull()) && !jsonObj.get("client").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client").toString()));
      }
      if ((jsonObj.get("clientVersion") != null && !jsonObj.get("clientVersion").isJsonNull()) && !jsonObj.get("clientVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientVersion").toString()));
      }
      if (jsonObj.get("conditions") != null && !jsonObj.get("conditions").isJsonNull()) {
        JsonArray jsonArrayconditions = jsonObj.getAsJsonArray("conditions");
        if (jsonArrayconditions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("conditions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `conditions` to be an array in the JSON string but got `%s`", jsonObj.get("conditions").toString()));
          }

          // validate the optional field `conditions` (array)
          for (int i = 0; i < jsonArrayconditions.size(); i++) {
            GoogleCloudRunV2Condition.validateJsonElement(jsonArrayconditions.get(i));
          };
        }
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("creator") != null && !jsonObj.get("creator").isJsonNull()) && !jsonObj.get("creator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creator").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customAudiences") != null && !jsonObj.get("customAudiences").isJsonNull() && !jsonObj.get("customAudiences").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customAudiences` to be an array in the JSON string but got `%s`", jsonObj.get("customAudiences").toString()));
      }
      if ((jsonObj.get("deleteTime") != null && !jsonObj.get("deleteTime").isJsonNull()) && !jsonObj.get("deleteTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deleteTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deleteTime").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      if ((jsonObj.get("expireTime") != null && !jsonObj.get("expireTime").isJsonNull()) && !jsonObj.get("expireTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expireTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expireTime").toString()));
      }
      if ((jsonObj.get("generation") != null && !jsonObj.get("generation").isJsonNull()) && !jsonObj.get("generation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `generation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("generation").toString()));
      }
      if ((jsonObj.get("ingress") != null && !jsonObj.get("ingress").isJsonNull()) && !jsonObj.get("ingress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ingress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ingress").toString()));
      }
      // validate the optional field `ingress`
      if (jsonObj.get("ingress") != null && !jsonObj.get("ingress").isJsonNull()) {
        IngressEnum.validateJsonElement(jsonObj.get("ingress"));
      }
      if ((jsonObj.get("lastModifier") != null && !jsonObj.get("lastModifier").isJsonNull()) && !jsonObj.get("lastModifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifier").toString()));
      }
      if ((jsonObj.get("latestCreatedRevision") != null && !jsonObj.get("latestCreatedRevision").isJsonNull()) && !jsonObj.get("latestCreatedRevision").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latestCreatedRevision` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latestCreatedRevision").toString()));
      }
      if ((jsonObj.get("latestReadyRevision") != null && !jsonObj.get("latestReadyRevision").isJsonNull()) && !jsonObj.get("latestReadyRevision").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latestReadyRevision` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latestReadyRevision").toString()));
      }
      if ((jsonObj.get("launchStage") != null && !jsonObj.get("launchStage").isJsonNull()) && !jsonObj.get("launchStage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `launchStage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("launchStage").toString()));
      }
      // validate the optional field `launchStage`
      if (jsonObj.get("launchStage") != null && !jsonObj.get("launchStage").isJsonNull()) {
        LaunchStageEnum.validateJsonElement(jsonObj.get("launchStage"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("observedGeneration") != null && !jsonObj.get("observedGeneration").isJsonNull()) && !jsonObj.get("observedGeneration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `observedGeneration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("observedGeneration").toString()));
      }
      // validate the optional field `scaling`
      if (jsonObj.get("scaling") != null && !jsonObj.get("scaling").isJsonNull()) {
        GoogleCloudRunV2ServiceScaling.validateJsonElement(jsonObj.get("scaling"));
      }
      // validate the optional field `template`
      if (jsonObj.get("template") != null && !jsonObj.get("template").isJsonNull()) {
        GoogleCloudRunV2RevisionTemplate.validateJsonElement(jsonObj.get("template"));
      }
      // validate the optional field `terminalCondition`
      if (jsonObj.get("terminalCondition") != null && !jsonObj.get("terminalCondition").isJsonNull()) {
        GoogleCloudRunV2Condition.validateJsonElement(jsonObj.get("terminalCondition"));
      }
      if (jsonObj.get("traffic") != null && !jsonObj.get("traffic").isJsonNull()) {
        JsonArray jsonArraytraffic = jsonObj.getAsJsonArray("traffic");
        if (jsonArraytraffic != null) {
          // ensure the json data is an array
          if (!jsonObj.get("traffic").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `traffic` to be an array in the JSON string but got `%s`", jsonObj.get("traffic").toString()));
          }

          // validate the optional field `traffic` (array)
          for (int i = 0; i < jsonArraytraffic.size(); i++) {
            GoogleCloudRunV2TrafficTarget.validateJsonElement(jsonArraytraffic.get(i));
          };
        }
      }
      if (jsonObj.get("trafficStatuses") != null && !jsonObj.get("trafficStatuses").isJsonNull()) {
        JsonArray jsonArraytrafficStatuses = jsonObj.getAsJsonArray("trafficStatuses");
        if (jsonArraytrafficStatuses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("trafficStatuses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `trafficStatuses` to be an array in the JSON string but got `%s`", jsonObj.get("trafficStatuses").toString()));
          }

          // validate the optional field `trafficStatuses` (array)
          for (int i = 0; i < jsonArraytrafficStatuses.size(); i++) {
            GoogleCloudRunV2TrafficTargetStatus.validateJsonElement(jsonArraytrafficStatuses.get(i));
          };
        }
      }
      if ((jsonObj.get("uid") != null && !jsonObj.get("uid").isJsonNull()) && !jsonObj.get("uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRunV2Service.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRunV2Service' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRunV2Service> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRunV2Service.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRunV2Service>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRunV2Service value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRunV2Service read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRunV2Service given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRunV2Service
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRunV2Service
   */
  public static GoogleCloudRunV2Service fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRunV2Service.class);
  }

  /**
   * Convert an instance of GoogleCloudRunV2Service to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

