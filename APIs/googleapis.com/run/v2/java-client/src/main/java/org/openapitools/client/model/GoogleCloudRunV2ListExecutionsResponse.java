/*
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRunV2Execution;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response message containing a list of Executions.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:07.645646-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRunV2ListExecutionsResponse {
  public static final String SERIALIZED_NAME_EXECUTIONS = "executions";
  @SerializedName(SERIALIZED_NAME_EXECUTIONS)
  private List<GoogleCloudRunV2Execution> executions = new ArrayList<>();

  public static final String SERIALIZED_NAME_NEXT_PAGE_TOKEN = "nextPageToken";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE_TOKEN)
  private String nextPageToken;

  public GoogleCloudRunV2ListExecutionsResponse() {
  }

  public GoogleCloudRunV2ListExecutionsResponse executions(List<GoogleCloudRunV2Execution> executions) {
    this.executions = executions;
    return this;
  }

  public GoogleCloudRunV2ListExecutionsResponse addExecutionsItem(GoogleCloudRunV2Execution executionsItem) {
    if (this.executions == null) {
      this.executions = new ArrayList<>();
    }
    this.executions.add(executionsItem);
    return this;
  }

  /**
   * The resulting list of Executions.
   * @return executions
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRunV2Execution> getExecutions() {
    return executions;
  }

  public void setExecutions(List<GoogleCloudRunV2Execution> executions) {
    this.executions = executions;
  }


  public GoogleCloudRunV2ListExecutionsResponse nextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
    return this;
  }

  /**
   * A token indicating there are more items than page_size. Use it in the next ListExecutions request to continue.
   * @return nextPageToken
   */
  @javax.annotation.Nullable
  public String getNextPageToken() {
    return nextPageToken;
  }

  public void setNextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRunV2ListExecutionsResponse googleCloudRunV2ListExecutionsResponse = (GoogleCloudRunV2ListExecutionsResponse) o;
    return Objects.equals(this.executions, googleCloudRunV2ListExecutionsResponse.executions) &&
        Objects.equals(this.nextPageToken, googleCloudRunV2ListExecutionsResponse.nextPageToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(executions, nextPageToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRunV2ListExecutionsResponse {\n");
    sb.append("    executions: ").append(toIndentedString(executions)).append("\n");
    sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("executions");
    openapiFields.add("nextPageToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRunV2ListExecutionsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRunV2ListExecutionsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRunV2ListExecutionsResponse is not found in the empty JSON string", GoogleCloudRunV2ListExecutionsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRunV2ListExecutionsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRunV2ListExecutionsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("executions") != null && !jsonObj.get("executions").isJsonNull()) {
        JsonArray jsonArrayexecutions = jsonObj.getAsJsonArray("executions");
        if (jsonArrayexecutions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("executions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `executions` to be an array in the JSON string but got `%s`", jsonObj.get("executions").toString()));
          }

          // validate the optional field `executions` (array)
          for (int i = 0; i < jsonArrayexecutions.size(); i++) {
            GoogleCloudRunV2Execution.validateJsonElement(jsonArrayexecutions.get(i));
          };
        }
      }
      if ((jsonObj.get("nextPageToken") != null && !jsonObj.get("nextPageToken").isJsonNull()) && !jsonObj.get("nextPageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextPageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextPageToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRunV2ListExecutionsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRunV2ListExecutionsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRunV2ListExecutionsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRunV2ListExecutionsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRunV2ListExecutionsResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRunV2ListExecutionsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRunV2ListExecutionsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRunV2ListExecutionsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRunV2ListExecutionsResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRunV2ListExecutionsResponse
   */
  public static GoogleCloudRunV2ListExecutionsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRunV2ListExecutionsResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudRunV2ListExecutionsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

