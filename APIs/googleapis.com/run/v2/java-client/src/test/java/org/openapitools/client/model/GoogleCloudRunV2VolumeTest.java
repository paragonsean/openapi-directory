/*
 * Cloud Run Admin API
 * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudRunV2CloudSqlInstance;
import org.openapitools.client.model.GoogleCloudRunV2EmptyDirVolumeSource;
import org.openapitools.client.model.GoogleCloudRunV2GCSVolumeSource;
import org.openapitools.client.model.GoogleCloudRunV2NFSVolumeSource;
import org.openapitools.client.model.GoogleCloudRunV2SecretVolumeSource;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudRunV2Volume
 */
public class GoogleCloudRunV2VolumeTest {
    private final GoogleCloudRunV2Volume model = new GoogleCloudRunV2Volume();

    /**
     * Model tests for GoogleCloudRunV2Volume
     */
    @Test
    public void testGoogleCloudRunV2Volume() {
        // TODO: test GoogleCloudRunV2Volume
    }

    /**
     * Test the property 'cloudSqlInstance'
     */
    @Test
    public void cloudSqlInstanceTest() {
        // TODO: test cloudSqlInstance
    }

    /**
     * Test the property 'emptyDir'
     */
    @Test
    public void emptyDirTest() {
        // TODO: test emptyDir
    }

    /**
     * Test the property 'gcs'
     */
    @Test
    public void gcsTest() {
        // TODO: test gcs
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nfs'
     */
    @Test
    public void nfsTest() {
        // TODO: test nfs
    }

    /**
     * Test the property 'secret'
     */
    @Test
    public void secretTest() {
        // TODO: test secret
    }

}
