openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "Allows external bidders to manage their RTB integration with Google.\
    \ This includes managing bidder endpoints, QPS quotas, configuring what ad inventory\
    \ to receive via pretargeting, submitting creatives for verification, and accessing\
    \ creative metadata such as approval status."
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Real-time Bidding API
  version: v1alpha
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
  - format: google
    url: https://realtimebidding.googleapis.com/$discovery/rest?version=v1alpha
    version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: realtimebidding
externalDocs:
  url: https://developers.google.com/authorized-buyers/apis/realtimebidding/reference/rest/
servers:
- url: https://realtimebidding.googleapis.com/
tags:
- name: bidders
paths:
  /v1alpha/{name}:activate:
    post:
      description: Activates an existing bidding function. An activated function is
        available for invocation for the server-side TURTLEDOVE simulations.
      operationId: realtimebidding.bidders.biddingFunctions.activate
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the bidding function to activate. Format:\
          \ `bidders/{bidder_account_id}/biddingFunction/{bidding_function_name}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateBiddingFunctionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BiddingFunction'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/realtime-bidding
        Oauth2c:
        - https://www.googleapis.com/auth/realtime-bidding
      tags:
      - bidders
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1alpha/{name}:archive:
    post:
      description: Archives an existing bidding function. An archived function will
        not be available for function invocation for the server-side TURTLEDOVE simulations
        unless it is activated.
      operationId: realtimebidding.bidders.biddingFunctions.archive
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the bidding function to archive. Format:\
          \ `bidders/{bidder_account_id}/biddingFunction/{bidding_function_name}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveBiddingFunctionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BiddingFunction'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/realtime-bidding
        Oauth2c:
        - https://www.googleapis.com/auth/realtime-bidding
      tags:
      - bidders
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1alpha/{parent}/biddingFunctions:
    get:
      description: Lists the bidding functions that a bidder currently has registered.
      operationId: realtimebidding.bidders.biddingFunctions.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Name of the bidder whose bidding functions will be\
          \ listed. Format: `bidders/{bidder_account_id}`"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of bidding functions to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A token identifying a page of results the server should return.
          This value is received from a previous `ListBiddingFunctions` call in ListBiddingFunctionsResponse.nextPageToken.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBiddingFunctionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/realtime-bidding
        Oauth2c:
        - https://www.googleapis.com/auth/realtime-bidding
      tags:
      - bidders
      x-accepts:
      - application/json
    post:
      description: Creates a new bidding function.
      operationId: realtimebidding.bidders.biddingFunctions.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the bidder for which to create the bidding\
          \ function. Format: `bidders/{bidderAccountId}`"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BiddingFunction'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BiddingFunction'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/realtime-bidding
        Oauth2c:
        - https://www.googleapis.com/auth/realtime-bidding
      tags:
      - bidders
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    ActivateBiddingFunctionRequest:
      description: The request to activate a bidding function.
      properties: {}
      type: object
    ArchiveBiddingFunctionRequest:
      description: A request to archive a bidding function.
      properties: {}
      type: object
    BiddingFunction:
      description: The bidding function to be executed as part of the TURTLEDOVE simulation
        experiment bidding flow.
      example:
        biddingFunction: biddingFunction
        name: name
        state: STATE_UNSPECIFIED
        type: FUNCTION_TYPE_UNSPECIFIED
      properties:
        biddingFunction:
          description: The raw Javascript source code of the bidding function.
          type: string
        name:
          description: "The name of the bidding function that must follow the pattern:\
            \ `bidders/{bidder_account_id}/biddingFunctions/{bidding_function_name}`."
          type: string
        state:
          description: Output only. The state of the bidding function.
          enum:
          - STATE_UNSPECIFIED
          - ACTIVE
          - ARCHIVED
          readOnly: true
          type: string
        type:
          description: The type of the bidding function to be created.
          enum:
          - FUNCTION_TYPE_UNSPECIFIED
          - TURTLEDOVE_SIMULATION_BIDDING_FUNCTION
          - FLEDGE_BIDDING_FUNCTION
          type: string
      type: object
    ListBiddingFunctionsResponse:
      description: A response containing a list of a bidder's bidding functions.
      example:
        biddingFunctions:
        - biddingFunction: biddingFunction
          name: name
          state: STATE_UNSPECIFIED
          type: FUNCTION_TYPE_UNSPECIFIED
        - biddingFunction: biddingFunction
          name: name
          state: STATE_UNSPECIFIED
          type: FUNCTION_TYPE_UNSPECIFIED
        nextPageToken: nextPageToken
      properties:
        biddingFunctions:
          description: A list of a bidder's bidding functions.
          items:
            $ref: '#/components/schemas/BiddingFunction'
          type: array
        nextPageToken:
          description: A token which can be passed to a subsequent call to the `ListBiddingFunctions`
            method to retrieve the next page of results in ListBiddingFunctionsRequest.pageToken.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/realtime-bidding: "See, create, edit,\
              \ and delete your Authorized Buyers and Open Bidding account entities"
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/realtime-bidding: "See, create, edit,\
              \ and delete your Authorized Buyers and Open Bidding account entities"
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2

