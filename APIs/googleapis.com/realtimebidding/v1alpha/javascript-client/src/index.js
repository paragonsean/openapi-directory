/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BiddingFunction from './model/BiddingFunction';
import ListBiddingFunctionsResponse from './model/ListBiddingFunctionsResponse';
import BiddersApi from './api/BiddersApi';


/**
* Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var RealTimeBiddingApi = require('index'); // See note below*.
* var xxxSvc = new RealTimeBiddingApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new RealTimeBiddingApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new RealTimeBiddingApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new RealTimeBiddingApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1alpha
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BiddingFunction model constructor.
     * @property {module:model/BiddingFunction}
     */
    BiddingFunction,

    /**
     * The ListBiddingFunctionsResponse model constructor.
     * @property {module:model/ListBiddingFunctionsResponse}
     */
    ListBiddingFunctionsResponse,

    /**
    * The BiddersApi service constructor.
    * @property {module:api/BiddersApi}
    */
    BiddersApi
};
