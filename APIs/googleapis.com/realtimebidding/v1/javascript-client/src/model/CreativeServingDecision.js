/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdTechnologyProviders from './AdTechnologyProviders';
import AdvertiserAndBrand from './AdvertiserAndBrand';
import PolicyCompliance from './PolicyCompliance';

/**
 * The CreativeServingDecision model module.
 * @module model/CreativeServingDecision
 * @version v1
 */
class CreativeServingDecision {
    /**
     * Constructs a new <code>CreativeServingDecision</code>.
     * Top level status and detected attributes of a creative.
     * @alias module:model/CreativeServingDecision
     */
    constructor() { 
        
        CreativeServingDecision.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreativeServingDecision</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreativeServingDecision} obj Optional instance to populate.
     * @return {module:model/CreativeServingDecision} The populated <code>CreativeServingDecision</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreativeServingDecision();

            if (data.hasOwnProperty('adTechnologyProviders')) {
                obj['adTechnologyProviders'] = AdTechnologyProviders.constructFromObject(data['adTechnologyProviders']);
            }
            if (data.hasOwnProperty('chinaPolicyCompliance')) {
                obj['chinaPolicyCompliance'] = PolicyCompliance.constructFromObject(data['chinaPolicyCompliance']);
            }
            if (data.hasOwnProperty('dealsPolicyCompliance')) {
                obj['dealsPolicyCompliance'] = PolicyCompliance.constructFromObject(data['dealsPolicyCompliance']);
            }
            if (data.hasOwnProperty('detectedAdvertisers')) {
                obj['detectedAdvertisers'] = ApiClient.convertToType(data['detectedAdvertisers'], [AdvertiserAndBrand]);
            }
            if (data.hasOwnProperty('detectedAttributes')) {
                obj['detectedAttributes'] = ApiClient.convertToType(data['detectedAttributes'], ['String']);
            }
            if (data.hasOwnProperty('detectedClickThroughUrls')) {
                obj['detectedClickThroughUrls'] = ApiClient.convertToType(data['detectedClickThroughUrls'], ['String']);
            }
            if (data.hasOwnProperty('detectedDomains')) {
                obj['detectedDomains'] = ApiClient.convertToType(data['detectedDomains'], ['String']);
            }
            if (data.hasOwnProperty('detectedLanguages')) {
                obj['detectedLanguages'] = ApiClient.convertToType(data['detectedLanguages'], ['String']);
            }
            if (data.hasOwnProperty('detectedProductCategories')) {
                obj['detectedProductCategories'] = ApiClient.convertToType(data['detectedProductCategories'], ['Number']);
            }
            if (data.hasOwnProperty('detectedSensitiveCategories')) {
                obj['detectedSensitiveCategories'] = ApiClient.convertToType(data['detectedSensitiveCategories'], ['Number']);
            }
            if (data.hasOwnProperty('detectedVendorIds')) {
                obj['detectedVendorIds'] = ApiClient.convertToType(data['detectedVendorIds'], ['Number']);
            }
            if (data.hasOwnProperty('lastStatusUpdate')) {
                obj['lastStatusUpdate'] = ApiClient.convertToType(data['lastStatusUpdate'], 'String');
            }
            if (data.hasOwnProperty('networkPolicyCompliance')) {
                obj['networkPolicyCompliance'] = PolicyCompliance.constructFromObject(data['networkPolicyCompliance']);
            }
            if (data.hasOwnProperty('platformPolicyCompliance')) {
                obj['platformPolicyCompliance'] = PolicyCompliance.constructFromObject(data['platformPolicyCompliance']);
            }
            if (data.hasOwnProperty('russiaPolicyCompliance')) {
                obj['russiaPolicyCompliance'] = PolicyCompliance.constructFromObject(data['russiaPolicyCompliance']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreativeServingDecision</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreativeServingDecision</code>.
     */
    static validateJSON(data) {
        // validate the optional field `adTechnologyProviders`
        if (data['adTechnologyProviders']) { // data not null
          AdTechnologyProviders.validateJSON(data['adTechnologyProviders']);
        }
        // validate the optional field `chinaPolicyCompliance`
        if (data['chinaPolicyCompliance']) { // data not null
          PolicyCompliance.validateJSON(data['chinaPolicyCompliance']);
        }
        // validate the optional field `dealsPolicyCompliance`
        if (data['dealsPolicyCompliance']) { // data not null
          PolicyCompliance.validateJSON(data['dealsPolicyCompliance']);
        }
        if (data['detectedAdvertisers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['detectedAdvertisers'])) {
                throw new Error("Expected the field `detectedAdvertisers` to be an array in the JSON data but got " + data['detectedAdvertisers']);
            }
            // validate the optional field `detectedAdvertisers` (array)
            for (const item of data['detectedAdvertisers']) {
                AdvertiserAndBrand.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['detectedAttributes'])) {
            throw new Error("Expected the field `detectedAttributes` to be an array in the JSON data but got " + data['detectedAttributes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['detectedClickThroughUrls'])) {
            throw new Error("Expected the field `detectedClickThroughUrls` to be an array in the JSON data but got " + data['detectedClickThroughUrls']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['detectedDomains'])) {
            throw new Error("Expected the field `detectedDomains` to be an array in the JSON data but got " + data['detectedDomains']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['detectedLanguages'])) {
            throw new Error("Expected the field `detectedLanguages` to be an array in the JSON data but got " + data['detectedLanguages']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['detectedProductCategories'])) {
            throw new Error("Expected the field `detectedProductCategories` to be an array in the JSON data but got " + data['detectedProductCategories']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['detectedSensitiveCategories'])) {
            throw new Error("Expected the field `detectedSensitiveCategories` to be an array in the JSON data but got " + data['detectedSensitiveCategories']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['detectedVendorIds'])) {
            throw new Error("Expected the field `detectedVendorIds` to be an array in the JSON data but got " + data['detectedVendorIds']);
        }
        // ensure the json data is a string
        if (data['lastStatusUpdate'] && !(typeof data['lastStatusUpdate'] === 'string' || data['lastStatusUpdate'] instanceof String)) {
            throw new Error("Expected the field `lastStatusUpdate` to be a primitive type in the JSON string but got " + data['lastStatusUpdate']);
        }
        // validate the optional field `networkPolicyCompliance`
        if (data['networkPolicyCompliance']) { // data not null
          PolicyCompliance.validateJSON(data['networkPolicyCompliance']);
        }
        // validate the optional field `platformPolicyCompliance`
        if (data['platformPolicyCompliance']) { // data not null
          PolicyCompliance.validateJSON(data['platformPolicyCompliance']);
        }
        // validate the optional field `russiaPolicyCompliance`
        if (data['russiaPolicyCompliance']) { // data not null
          PolicyCompliance.validateJSON(data['russiaPolicyCompliance']);
        }

        return true;
    }


}



/**
 * @member {module:model/AdTechnologyProviders} adTechnologyProviders
 */
CreativeServingDecision.prototype['adTechnologyProviders'] = undefined;

/**
 * @member {module:model/PolicyCompliance} chinaPolicyCompliance
 */
CreativeServingDecision.prototype['chinaPolicyCompliance'] = undefined;

/**
 * @member {module:model/PolicyCompliance} dealsPolicyCompliance
 */
CreativeServingDecision.prototype['dealsPolicyCompliance'] = undefined;

/**
 * Detected advertisers and brands.
 * @member {Array.<module:model/AdvertiserAndBrand>} detectedAdvertisers
 */
CreativeServingDecision.prototype['detectedAdvertisers'] = undefined;

/**
 * Publisher-excludable attributes that were detected for this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.
 * @member {Array.<module:model/CreativeServingDecision.DetectedAttributesEnum>} detectedAttributes
 */
CreativeServingDecision.prototype['detectedAttributes'] = undefined;

/**
 * The set of detected destination URLs for the creative. Can be used to filter the response of the creatives.list method.
 * @member {Array.<String>} detectedClickThroughUrls
 */
CreativeServingDecision.prototype['detectedClickThroughUrls'] = undefined;

/**
 * The detected domains for this creative.
 * @member {Array.<String>} detectedDomains
 */
CreativeServingDecision.prototype['detectedDomains'] = undefined;

/**
 * The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter the response of the creatives.list method.
 * @member {Array.<String>} detectedLanguages
 */
CreativeServingDecision.prototype['detectedLanguages'] = undefined;

/**
 * Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Can be used to filter the response of the creatives.list method.
 * @member {Array.<Number>} detectedProductCategories
 */
CreativeServingDecision.prototype['detectedProductCategories'] = undefined;

/**
 * Detected sensitive categories, if any. Can be used to filter the response of the creatives.list method. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids.
 * @member {Array.<Number>} detectedSensitiveCategories
 */
CreativeServingDecision.prototype['detectedSensitiveCategories'] = undefined;

/**
 * IDs of the ad technology vendors that were detected to be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. If the `allowed_vendor_type` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) does not contain one of the vendor type IDs that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.
 * @member {Array.<Number>} detectedVendorIds
 */
CreativeServingDecision.prototype['detectedVendorIds'] = undefined;

/**
 * The last time the creative status was updated. Can be used to filter the response of the creatives.list method.
 * @member {String} lastStatusUpdate
 */
CreativeServingDecision.prototype['lastStatusUpdate'] = undefined;

/**
 * @member {module:model/PolicyCompliance} networkPolicyCompliance
 */
CreativeServingDecision.prototype['networkPolicyCompliance'] = undefined;

/**
 * @member {module:model/PolicyCompliance} platformPolicyCompliance
 */
CreativeServingDecision.prototype['platformPolicyCompliance'] = undefined;

/**
 * @member {module:model/PolicyCompliance} russiaPolicyCompliance
 */
CreativeServingDecision.prototype['russiaPolicyCompliance'] = undefined;





/**
 * Allowed values for the <code>detectedAttributes</code> property.
 * @enum {String}
 * @readonly
 */
CreativeServingDecision['DetectedAttributesEnum'] = {

    /**
     * value: "ATTRIBUTE_UNSPECIFIED"
     * @const
     */
    "ATTRIBUTE_UNSPECIFIED": "ATTRIBUTE_UNSPECIFIED",

    /**
     * value: "IMAGE_RICH_MEDIA"
     * @const
     */
    "IMAGE_RICH_MEDIA": "IMAGE_RICH_MEDIA",

    /**
     * value: "ADOBE_FLASH_FLV"
     * @const
     */
    "ADOBE_FLASH_FLV": "ADOBE_FLASH_FLV",

    /**
     * value: "IS_TAGGED"
     * @const
     */
    "IS_TAGGED": "IS_TAGGED",

    /**
     * value: "IS_COOKIE_TARGETED"
     * @const
     */
    "IS_COOKIE_TARGETED": "IS_COOKIE_TARGETED",

    /**
     * value: "IS_USER_INTEREST_TARGETED"
     * @const
     */
    "IS_USER_INTEREST_TARGETED": "IS_USER_INTEREST_TARGETED",

    /**
     * value: "EXPANDING_DIRECTION_NONE"
     * @const
     */
    "EXPANDING_DIRECTION_NONE": "EXPANDING_DIRECTION_NONE",

    /**
     * value: "EXPANDING_DIRECTION_UP"
     * @const
     */
    "EXPANDING_DIRECTION_UP": "EXPANDING_DIRECTION_UP",

    /**
     * value: "EXPANDING_DIRECTION_DOWN"
     * @const
     */
    "EXPANDING_DIRECTION_DOWN": "EXPANDING_DIRECTION_DOWN",

    /**
     * value: "EXPANDING_DIRECTION_LEFT"
     * @const
     */
    "EXPANDING_DIRECTION_LEFT": "EXPANDING_DIRECTION_LEFT",

    /**
     * value: "EXPANDING_DIRECTION_RIGHT"
     * @const
     */
    "EXPANDING_DIRECTION_RIGHT": "EXPANDING_DIRECTION_RIGHT",

    /**
     * value: "EXPANDING_DIRECTION_UP_LEFT"
     * @const
     */
    "EXPANDING_DIRECTION_UP_LEFT": "EXPANDING_DIRECTION_UP_LEFT",

    /**
     * value: "EXPANDING_DIRECTION_UP_RIGHT"
     * @const
     */
    "EXPANDING_DIRECTION_UP_RIGHT": "EXPANDING_DIRECTION_UP_RIGHT",

    /**
     * value: "EXPANDING_DIRECTION_DOWN_LEFT"
     * @const
     */
    "EXPANDING_DIRECTION_DOWN_LEFT": "EXPANDING_DIRECTION_DOWN_LEFT",

    /**
     * value: "EXPANDING_DIRECTION_DOWN_RIGHT"
     * @const
     */
    "EXPANDING_DIRECTION_DOWN_RIGHT": "EXPANDING_DIRECTION_DOWN_RIGHT",

    /**
     * value: "CREATIVE_TYPE_HTML"
     * @const
     */
    "CREATIVE_TYPE_HTML": "CREATIVE_TYPE_HTML",

    /**
     * value: "CREATIVE_TYPE_VAST_VIDEO"
     * @const
     */
    "CREATIVE_TYPE_VAST_VIDEO": "CREATIVE_TYPE_VAST_VIDEO",

    /**
     * value: "EXPANDING_DIRECTION_UP_OR_DOWN"
     * @const
     */
    "EXPANDING_DIRECTION_UP_OR_DOWN": "EXPANDING_DIRECTION_UP_OR_DOWN",

    /**
     * value: "EXPANDING_DIRECTION_LEFT_OR_RIGHT"
     * @const
     */
    "EXPANDING_DIRECTION_LEFT_OR_RIGHT": "EXPANDING_DIRECTION_LEFT_OR_RIGHT",

    /**
     * value: "EXPANDING_DIRECTION_ANY_DIAGONAL"
     * @const
     */
    "EXPANDING_DIRECTION_ANY_DIAGONAL": "EXPANDING_DIRECTION_ANY_DIAGONAL",

    /**
     * value: "EXPANDING_ACTION_ROLLOVER_TO_EXPAND"
     * @const
     */
    "EXPANDING_ACTION_ROLLOVER_TO_EXPAND": "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",

    /**
     * value: "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH"
     * @const
     */
    "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH": "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_MRAID"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_MRAID": "RICH_MEDIA_CAPABILITY_TYPE_MRAID",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_FLASH"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_FLASH": "RICH_MEDIA_CAPABILITY_TYPE_FLASH",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_HTML5"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_HTML5": "RICH_MEDIA_CAPABILITY_TYPE_HTML5",

    /**
     * value: "SKIPPABLE_INSTREAM_VIDEO"
     * @const
     */
    "SKIPPABLE_INSTREAM_VIDEO": "SKIPPABLE_INSTREAM_VIDEO",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_SSL"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_SSL": "RICH_MEDIA_CAPABILITY_TYPE_SSL",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL": "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL": "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",

    /**
     * value: "NON_SKIPPABLE_INSTREAM_VIDEO"
     * @const
     */
    "NON_SKIPPABLE_INSTREAM_VIDEO": "NON_SKIPPABLE_INSTREAM_VIDEO",

    /**
     * value: "NATIVE_ELIGIBILITY_ELIGIBLE"
     * @const
     */
    "NATIVE_ELIGIBILITY_ELIGIBLE": "NATIVE_ELIGIBILITY_ELIGIBLE",

    /**
     * value: "NON_VPAID"
     * @const
     */
    "NON_VPAID": "NON_VPAID",

    /**
     * value: "NATIVE_ELIGIBILITY_NOT_ELIGIBLE"
     * @const
     */
    "NATIVE_ELIGIBILITY_NOT_ELIGIBLE": "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",

    /**
     * value: "ANY_INTERSTITIAL"
     * @const
     */
    "ANY_INTERSTITIAL": "ANY_INTERSTITIAL",

    /**
     * value: "NON_INTERSTITIAL"
     * @const
     */
    "NON_INTERSTITIAL": "NON_INTERSTITIAL",

    /**
     * value: "IN_BANNER_VIDEO"
     * @const
     */
    "IN_BANNER_VIDEO": "IN_BANNER_VIDEO",

    /**
     * value: "RENDERING_SIZELESS_ADX"
     * @const
     */
    "RENDERING_SIZELESS_ADX": "RENDERING_SIZELESS_ADX",

    /**
     * value: "OMSDK_1_0"
     * @const
     */
    "OMSDK_1_0": "OMSDK_1_0",

    /**
     * value: "RENDERING_PLAYABLE"
     * @const
     */
    "RENDERING_PLAYABLE": "RENDERING_PLAYABLE"
};



export default CreativeServingDecision;

