/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppTargeting from './AppTargeting';
import CreativeDimensions from './CreativeDimensions';
import NumericTargetingDimension from './NumericTargetingDimension';
import StringTargetingDimension from './StringTargetingDimension';

/**
 * The PretargetingConfig model module.
 * @module model/PretargetingConfig
 * @version v1
 */
class PretargetingConfig {
    /**
     * Constructs a new <code>PretargetingConfig</code>.
     * Pretargeting configuration: a set of targeting dimensions applied at the pretargeting stage of the RTB funnel. These control which inventory a bidder will receive bid requests for.
     * @alias module:model/PretargetingConfig
     */
    constructor() { 
        
        PretargetingConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PretargetingConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PretargetingConfig} obj Optional instance to populate.
     * @return {module:model/PretargetingConfig} The populated <code>PretargetingConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PretargetingConfig();

            if (data.hasOwnProperty('allowedUserTargetingModes')) {
                obj['allowedUserTargetingModes'] = ApiClient.convertToType(data['allowedUserTargetingModes'], ['String']);
            }
            if (data.hasOwnProperty('appTargeting')) {
                obj['appTargeting'] = AppTargeting.constructFromObject(data['appTargeting']);
            }
            if (data.hasOwnProperty('billingId')) {
                obj['billingId'] = ApiClient.convertToType(data['billingId'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('excludedContentLabelIds')) {
                obj['excludedContentLabelIds'] = ApiClient.convertToType(data['excludedContentLabelIds'], ['String']);
            }
            if (data.hasOwnProperty('geoTargeting')) {
                obj['geoTargeting'] = NumericTargetingDimension.constructFromObject(data['geoTargeting']);
            }
            if (data.hasOwnProperty('includedCreativeDimensions')) {
                obj['includedCreativeDimensions'] = ApiClient.convertToType(data['includedCreativeDimensions'], [CreativeDimensions]);
            }
            if (data.hasOwnProperty('includedEnvironments')) {
                obj['includedEnvironments'] = ApiClient.convertToType(data['includedEnvironments'], ['String']);
            }
            if (data.hasOwnProperty('includedFormats')) {
                obj['includedFormats'] = ApiClient.convertToType(data['includedFormats'], ['String']);
            }
            if (data.hasOwnProperty('includedLanguages')) {
                obj['includedLanguages'] = ApiClient.convertToType(data['includedLanguages'], ['String']);
            }
            if (data.hasOwnProperty('includedMobileOperatingSystemIds')) {
                obj['includedMobileOperatingSystemIds'] = ApiClient.convertToType(data['includedMobileOperatingSystemIds'], ['String']);
            }
            if (data.hasOwnProperty('includedPlatforms')) {
                obj['includedPlatforms'] = ApiClient.convertToType(data['includedPlatforms'], ['String']);
            }
            if (data.hasOwnProperty('includedUserIdTypes')) {
                obj['includedUserIdTypes'] = ApiClient.convertToType(data['includedUserIdTypes'], ['String']);
            }
            if (data.hasOwnProperty('interstitialTargeting')) {
                obj['interstitialTargeting'] = ApiClient.convertToType(data['interstitialTargeting'], 'String');
            }
            if (data.hasOwnProperty('invalidGeoIds')) {
                obj['invalidGeoIds'] = ApiClient.convertToType(data['invalidGeoIds'], ['String']);
            }
            if (data.hasOwnProperty('maximumQps')) {
                obj['maximumQps'] = ApiClient.convertToType(data['maximumQps'], 'String');
            }
            if (data.hasOwnProperty('minimumViewabilityDecile')) {
                obj['minimumViewabilityDecile'] = ApiClient.convertToType(data['minimumViewabilityDecile'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('publisherTargeting')) {
                obj['publisherTargeting'] = StringTargetingDimension.constructFromObject(data['publisherTargeting']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('userListTargeting')) {
                obj['userListTargeting'] = NumericTargetingDimension.constructFromObject(data['userListTargeting']);
            }
            if (data.hasOwnProperty('verticalTargeting')) {
                obj['verticalTargeting'] = NumericTargetingDimension.constructFromObject(data['verticalTargeting']);
            }
            if (data.hasOwnProperty('webTargeting')) {
                obj['webTargeting'] = StringTargetingDimension.constructFromObject(data['webTargeting']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PretargetingConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PretargetingConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowedUserTargetingModes'])) {
            throw new Error("Expected the field `allowedUserTargetingModes` to be an array in the JSON data but got " + data['allowedUserTargetingModes']);
        }
        // validate the optional field `appTargeting`
        if (data['appTargeting']) { // data not null
          AppTargeting.validateJSON(data['appTargeting']);
        }
        // ensure the json data is a string
        if (data['billingId'] && !(typeof data['billingId'] === 'string' || data['billingId'] instanceof String)) {
            throw new Error("Expected the field `billingId` to be a primitive type in the JSON string but got " + data['billingId']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['excludedContentLabelIds'])) {
            throw new Error("Expected the field `excludedContentLabelIds` to be an array in the JSON data but got " + data['excludedContentLabelIds']);
        }
        // validate the optional field `geoTargeting`
        if (data['geoTargeting']) { // data not null
          NumericTargetingDimension.validateJSON(data['geoTargeting']);
        }
        if (data['includedCreativeDimensions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['includedCreativeDimensions'])) {
                throw new Error("Expected the field `includedCreativeDimensions` to be an array in the JSON data but got " + data['includedCreativeDimensions']);
            }
            // validate the optional field `includedCreativeDimensions` (array)
            for (const item of data['includedCreativeDimensions']) {
                CreativeDimensions.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includedEnvironments'])) {
            throw new Error("Expected the field `includedEnvironments` to be an array in the JSON data but got " + data['includedEnvironments']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includedFormats'])) {
            throw new Error("Expected the field `includedFormats` to be an array in the JSON data but got " + data['includedFormats']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includedLanguages'])) {
            throw new Error("Expected the field `includedLanguages` to be an array in the JSON data but got " + data['includedLanguages']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includedMobileOperatingSystemIds'])) {
            throw new Error("Expected the field `includedMobileOperatingSystemIds` to be an array in the JSON data but got " + data['includedMobileOperatingSystemIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includedPlatforms'])) {
            throw new Error("Expected the field `includedPlatforms` to be an array in the JSON data but got " + data['includedPlatforms']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includedUserIdTypes'])) {
            throw new Error("Expected the field `includedUserIdTypes` to be an array in the JSON data but got " + data['includedUserIdTypes']);
        }
        // ensure the json data is a string
        if (data['interstitialTargeting'] && !(typeof data['interstitialTargeting'] === 'string' || data['interstitialTargeting'] instanceof String)) {
            throw new Error("Expected the field `interstitialTargeting` to be a primitive type in the JSON string but got " + data['interstitialTargeting']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['invalidGeoIds'])) {
            throw new Error("Expected the field `invalidGeoIds` to be an array in the JSON data but got " + data['invalidGeoIds']);
        }
        // ensure the json data is a string
        if (data['maximumQps'] && !(typeof data['maximumQps'] === 'string' || data['maximumQps'] instanceof String)) {
            throw new Error("Expected the field `maximumQps` to be a primitive type in the JSON string but got " + data['maximumQps']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `publisherTargeting`
        if (data['publisherTargeting']) { // data not null
          StringTargetingDimension.validateJSON(data['publisherTargeting']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `userListTargeting`
        if (data['userListTargeting']) { // data not null
          NumericTargetingDimension.validateJSON(data['userListTargeting']);
        }
        // validate the optional field `verticalTargeting`
        if (data['verticalTargeting']) { // data not null
          NumericTargetingDimension.validateJSON(data['verticalTargeting']);
        }
        // validate the optional field `webTargeting`
        if (data['webTargeting']) { // data not null
          StringTargetingDimension.validateJSON(data['webTargeting']);
        }

        return true;
    }


}



/**
 * Targeting modes included by this configuration. A bid request must allow all the specified targeting modes. An unset value allows all bid requests to be sent, regardless of which targeting modes they allow.
 * @member {Array.<module:model/PretargetingConfig.AllowedUserTargetingModesEnum>} allowedUserTargetingModes
 */
PretargetingConfig.prototype['allowedUserTargetingModes'] = undefined;

/**
 * @member {module:model/AppTargeting} appTargeting
 */
PretargetingConfig.prototype['appTargeting'] = undefined;

/**
 * Output only. The identifier that corresponds to this pretargeting configuration that helps buyers track and attribute their spend across their own arbitrary divisions. If a bid request matches more than one configuration, the buyer chooses which billing_id to attribute each of their bids.
 * @member {String} billingId
 */
PretargetingConfig.prototype['billingId'] = undefined;

/**
 * The diplay name associated with this configuration. This name must be unique among all the pretargeting configurations a bidder has.
 * @member {String} displayName
 */
PretargetingConfig.prototype['displayName'] = undefined;

/**
 * The sensitive content category label IDs excluded in this configuration. Bid requests for inventory with any of the specified content label IDs will not be sent. Refer to this file https://storage.googleapis.com/adx-rtb-dictionaries/content-labels.txt for category IDs.
 * @member {Array.<String>} excludedContentLabelIds
 */
PretargetingConfig.prototype['excludedContentLabelIds'] = undefined;

/**
 * @member {module:model/NumericTargetingDimension} geoTargeting
 */
PretargetingConfig.prototype['geoTargeting'] = undefined;

/**
 * Creative dimensions included by this configuration. Only bid requests eligible for at least one of the specified creative dimensions will be sent. An unset value allows all bid requests to be sent, regardless of creative dimension.
 * @member {Array.<module:model/CreativeDimensions>} includedCreativeDimensions
 */
PretargetingConfig.prototype['includedCreativeDimensions'] = undefined;

/**
 * Environments that are being included. Bid requests will not be sent for a given environment if it is not included. Further restrictions can be applied to included environments to target only a subset of its inventory. An unset value includes all environments.
 * @member {Array.<module:model/PretargetingConfig.IncludedEnvironmentsEnum>} includedEnvironments
 */
PretargetingConfig.prototype['includedEnvironments'] = undefined;

/**
 * Creative formats included by this configuration. Only bid requests eligible for at least one of the specified creative formats will be sent. An unset value will allow all bid requests to be sent, regardless of format.
 * @member {Array.<module:model/PretargetingConfig.IncludedFormatsEnum>} includedFormats
 */
PretargetingConfig.prototype['includedFormats'] = undefined;

/**
 * The languages included in this configuration, represented by their language code. See https://developers.google.com/adwords/api/docs/appendix/languagecodes.
 * @member {Array.<String>} includedLanguages
 */
PretargetingConfig.prototype['includedLanguages'] = undefined;

/**
 * The mobile operating systems included in this configuration as defined in https://storage.googleapis.com/adx-rtb-dictionaries/mobile-os.csv
 * @member {Array.<String>} includedMobileOperatingSystemIds
 */
PretargetingConfig.prototype['includedMobileOperatingSystemIds'] = undefined;

/**
 * The platforms included by this configration. Bid requests for devices with the specified platform types will be sent. An unset value allows all bid requests to be sent, regardless of platform.
 * @member {Array.<module:model/PretargetingConfig.IncludedPlatformsEnum>} includedPlatforms
 */
PretargetingConfig.prototype['includedPlatforms'] = undefined;

/**
 * User identifier types included in this configuration. At least one of the user identifier types specified in this list must be available for the bid request to be sent.
 * @member {Array.<module:model/PretargetingConfig.IncludedUserIdTypesEnum>} includedUserIdTypes
 */
PretargetingConfig.prototype['includedUserIdTypes'] = undefined;

/**
 * The interstitial targeting specified for this configuration. The unset value will allow bid requests to be sent regardless of whether they are for interstitials or not.
 * @member {module:model/PretargetingConfig.InterstitialTargetingEnum} interstitialTargeting
 */
PretargetingConfig.prototype['interstitialTargeting'] = undefined;

/**
 * Output only. Existing included or excluded geos that are invalid. Previously targeted geos may become invalid due to privacy restrictions.
 * @member {Array.<String>} invalidGeoIds
 */
PretargetingConfig.prototype['invalidGeoIds'] = undefined;

/**
 * The maximum QPS threshold for this configuration. The bidder should receive no more than this number of bid requests matching this configuration per second across all their bidding endpoints among all trading locations. Further information available at https://developers.google.com/authorized-buyers/rtb/peer-guide
 * @member {String} maximumQps
 */
PretargetingConfig.prototype['maximumQps'] = undefined;

/**
 * The targeted minimum viewability decile, ranging in values [0, 10]. A value of 5 means that the configuration will only match adslots for which we predict at least 50% viewability. Values > 10 will be rounded down to 10. An unset value or a value of 0 indicates that bid requests will be sent regardless of viewability.
 * @member {Number} minimumViewabilityDecile
 */
PretargetingConfig.prototype['minimumViewabilityDecile'] = undefined;

/**
 * Output only. Name of the pretargeting configuration that must follow the pattern `bidders/{bidder_account_id}/pretargetingConfigs/{config_id}`
 * @member {String} name
 */
PretargetingConfig.prototype['name'] = undefined;

/**
 * @member {module:model/StringTargetingDimension} publisherTargeting
 */
PretargetingConfig.prototype['publisherTargeting'] = undefined;

/**
 * Output only. The state of this pretargeting configuration.
 * @member {module:model/PretargetingConfig.StateEnum} state
 */
PretargetingConfig.prototype['state'] = undefined;

/**
 * @member {module:model/NumericTargetingDimension} userListTargeting
 */
PretargetingConfig.prototype['userListTargeting'] = undefined;

/**
 * @member {module:model/NumericTargetingDimension} verticalTargeting
 */
PretargetingConfig.prototype['verticalTargeting'] = undefined;

/**
 * @member {module:model/StringTargetingDimension} webTargeting
 */
PretargetingConfig.prototype['webTargeting'] = undefined;





/**
 * Allowed values for the <code>allowedUserTargetingModes</code> property.
 * @enum {String}
 * @readonly
 */
PretargetingConfig['AllowedUserTargetingModesEnum'] = {

    /**
     * value: "USER_TARGETING_MODE_UNSPECIFIED"
     * @const
     */
    "USER_TARGETING_MODE_UNSPECIFIED": "USER_TARGETING_MODE_UNSPECIFIED",

    /**
     * value: "REMARKETING_ADS"
     * @const
     */
    "REMARKETING_ADS": "REMARKETING_ADS",

    /**
     * value: "INTEREST_BASED_TARGETING"
     * @const
     */
    "INTEREST_BASED_TARGETING": "INTEREST_BASED_TARGETING"
};


/**
 * Allowed values for the <code>includedEnvironments</code> property.
 * @enum {String}
 * @readonly
 */
PretargetingConfig['IncludedEnvironmentsEnum'] = {

    /**
     * value: "ENVIRONMENT_UNSPECIFIED"
     * @const
     */
    "ENVIRONMENT_UNSPECIFIED": "ENVIRONMENT_UNSPECIFIED",

    /**
     * value: "APP"
     * @const
     */
    "APP": "APP",

    /**
     * value: "WEB"
     * @const
     */
    "WEB": "WEB"
};


/**
 * Allowed values for the <code>includedFormats</code> property.
 * @enum {String}
 * @readonly
 */
PretargetingConfig['IncludedFormatsEnum'] = {

    /**
     * value: "CREATIVE_FORMAT_UNSPECIFIED"
     * @const
     */
    "CREATIVE_FORMAT_UNSPECIFIED": "CREATIVE_FORMAT_UNSPECIFIED",

    /**
     * value: "HTML"
     * @const
     */
    "HTML": "HTML",

    /**
     * value: "VAST"
     * @const
     */
    "VAST": "VAST",

    /**
     * value: "NATIVE"
     * @const
     */
    "NATIVE": "NATIVE"
};


/**
 * Allowed values for the <code>includedPlatforms</code> property.
 * @enum {String}
 * @readonly
 */
PretargetingConfig['IncludedPlatformsEnum'] = {

    /**
     * value: "PLATFORM_UNSPECIFIED"
     * @const
     */
    "PLATFORM_UNSPECIFIED": "PLATFORM_UNSPECIFIED",

    /**
     * value: "PERSONAL_COMPUTER"
     * @const
     */
    "PERSONAL_COMPUTER": "PERSONAL_COMPUTER",

    /**
     * value: "PHONE"
     * @const
     */
    "PHONE": "PHONE",

    /**
     * value: "TABLET"
     * @const
     */
    "TABLET": "TABLET",

    /**
     * value: "CONNECTED_TV"
     * @const
     */
    "CONNECTED_TV": "CONNECTED_TV"
};


/**
 * Allowed values for the <code>includedUserIdTypes</code> property.
 * @enum {String}
 * @readonly
 */
PretargetingConfig['IncludedUserIdTypesEnum'] = {

    /**
     * value: "USER_ID_TYPE_UNSPECIFIED"
     * @const
     */
    "USER_ID_TYPE_UNSPECIFIED": "USER_ID_TYPE_UNSPECIFIED",

    /**
     * value: "HOSTED_MATCH_DATA"
     * @const
     */
    "HOSTED_MATCH_DATA": "HOSTED_MATCH_DATA",

    /**
     * value: "GOOGLE_COOKIE"
     * @const
     */
    "GOOGLE_COOKIE": "GOOGLE_COOKIE",

    /**
     * value: "DEVICE_ID"
     * @const
     */
    "DEVICE_ID": "DEVICE_ID"
};


/**
 * Allowed values for the <code>interstitialTargeting</code> property.
 * @enum {String}
 * @readonly
 */
PretargetingConfig['InterstitialTargetingEnum'] = {

    /**
     * value: "INTERSTITIAL_TARGETING_UNSPECIFIED"
     * @const
     */
    "INTERSTITIAL_TARGETING_UNSPECIFIED": "INTERSTITIAL_TARGETING_UNSPECIFIED",

    /**
     * value: "ONLY_INTERSTITIAL_REQUESTS"
     * @const
     */
    "ONLY_INTERSTITIAL_REQUESTS": "ONLY_INTERSTITIAL_REQUESTS",

    /**
     * value: "ONLY_NON_INTERSTITIAL_REQUESTS"
     * @const
     */
    "ONLY_NON_INTERSTITIAL_REQUESTS": "ONLY_NON_INTERSTITIAL_REQUESTS"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
PretargetingConfig['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "SUSPENDED"
     * @const
     */
    "SUSPENDED": "SUSPENDED"
};



export default PretargetingConfig;

