/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreativeServingDecision from './CreativeServingDecision';
import HtmlContent from './HtmlContent';
import NativeContent from './NativeContent';
import VideoContent from './VideoContent';

/**
 * The Creative model module.
 * @module model/Creative
 * @version v1
 */
class Creative {
    /**
     * Constructs a new <code>Creative</code>.
     * A creative and its classification data.
     * @alias module:model/Creative
     */
    constructor() { 
        
        Creative.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Creative</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Creative} obj Optional instance to populate.
     * @return {module:model/Creative} The populated <code>Creative</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Creative();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('adChoicesDestinationUrl')) {
                obj['adChoicesDestinationUrl'] = ApiClient.convertToType(data['adChoicesDestinationUrl'], 'String');
            }
            if (data.hasOwnProperty('advertiserName')) {
                obj['advertiserName'] = ApiClient.convertToType(data['advertiserName'], 'String');
            }
            if (data.hasOwnProperty('agencyId')) {
                obj['agencyId'] = ApiClient.convertToType(data['agencyId'], 'String');
            }
            if (data.hasOwnProperty('apiUpdateTime')) {
                obj['apiUpdateTime'] = ApiClient.convertToType(data['apiUpdateTime'], 'String');
            }
            if (data.hasOwnProperty('creativeFormat')) {
                obj['creativeFormat'] = ApiClient.convertToType(data['creativeFormat'], 'String');
            }
            if (data.hasOwnProperty('creativeId')) {
                obj['creativeId'] = ApiClient.convertToType(data['creativeId'], 'String');
            }
            if (data.hasOwnProperty('creativeServingDecision')) {
                obj['creativeServingDecision'] = CreativeServingDecision.constructFromObject(data['creativeServingDecision']);
            }
            if (data.hasOwnProperty('dealIds')) {
                obj['dealIds'] = ApiClient.convertToType(data['dealIds'], ['String']);
            }
            if (data.hasOwnProperty('declaredAttributes')) {
                obj['declaredAttributes'] = ApiClient.convertToType(data['declaredAttributes'], ['String']);
            }
            if (data.hasOwnProperty('declaredClickThroughUrls')) {
                obj['declaredClickThroughUrls'] = ApiClient.convertToType(data['declaredClickThroughUrls'], ['String']);
            }
            if (data.hasOwnProperty('declaredRestrictedCategories')) {
                obj['declaredRestrictedCategories'] = ApiClient.convertToType(data['declaredRestrictedCategories'], ['String']);
            }
            if (data.hasOwnProperty('declaredVendorIds')) {
                obj['declaredVendorIds'] = ApiClient.convertToType(data['declaredVendorIds'], ['Number']);
            }
            if (data.hasOwnProperty('html')) {
                obj['html'] = HtmlContent.constructFromObject(data['html']);
            }
            if (data.hasOwnProperty('impressionTrackingUrls')) {
                obj['impressionTrackingUrls'] = ApiClient.convertToType(data['impressionTrackingUrls'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('native')) {
                obj['native'] = NativeContent.constructFromObject(data['native']);
            }
            if (data.hasOwnProperty('renderUrl')) {
                obj['renderUrl'] = ApiClient.convertToType(data['renderUrl'], 'String');
            }
            if (data.hasOwnProperty('restrictedCategories')) {
                obj['restrictedCategories'] = ApiClient.convertToType(data['restrictedCategories'], ['String']);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('video')) {
                obj['video'] = VideoContent.constructFromObject(data['video']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Creative</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Creative</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['adChoicesDestinationUrl'] && !(typeof data['adChoicesDestinationUrl'] === 'string' || data['adChoicesDestinationUrl'] instanceof String)) {
            throw new Error("Expected the field `adChoicesDestinationUrl` to be a primitive type in the JSON string but got " + data['adChoicesDestinationUrl']);
        }
        // ensure the json data is a string
        if (data['advertiserName'] && !(typeof data['advertiserName'] === 'string' || data['advertiserName'] instanceof String)) {
            throw new Error("Expected the field `advertiserName` to be a primitive type in the JSON string but got " + data['advertiserName']);
        }
        // ensure the json data is a string
        if (data['agencyId'] && !(typeof data['agencyId'] === 'string' || data['agencyId'] instanceof String)) {
            throw new Error("Expected the field `agencyId` to be a primitive type in the JSON string but got " + data['agencyId']);
        }
        // ensure the json data is a string
        if (data['apiUpdateTime'] && !(typeof data['apiUpdateTime'] === 'string' || data['apiUpdateTime'] instanceof String)) {
            throw new Error("Expected the field `apiUpdateTime` to be a primitive type in the JSON string but got " + data['apiUpdateTime']);
        }
        // ensure the json data is a string
        if (data['creativeFormat'] && !(typeof data['creativeFormat'] === 'string' || data['creativeFormat'] instanceof String)) {
            throw new Error("Expected the field `creativeFormat` to be a primitive type in the JSON string but got " + data['creativeFormat']);
        }
        // ensure the json data is a string
        if (data['creativeId'] && !(typeof data['creativeId'] === 'string' || data['creativeId'] instanceof String)) {
            throw new Error("Expected the field `creativeId` to be a primitive type in the JSON string but got " + data['creativeId']);
        }
        // validate the optional field `creativeServingDecision`
        if (data['creativeServingDecision']) { // data not null
          CreativeServingDecision.validateJSON(data['creativeServingDecision']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dealIds'])) {
            throw new Error("Expected the field `dealIds` to be an array in the JSON data but got " + data['dealIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['declaredAttributes'])) {
            throw new Error("Expected the field `declaredAttributes` to be an array in the JSON data but got " + data['declaredAttributes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['declaredClickThroughUrls'])) {
            throw new Error("Expected the field `declaredClickThroughUrls` to be an array in the JSON data but got " + data['declaredClickThroughUrls']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['declaredRestrictedCategories'])) {
            throw new Error("Expected the field `declaredRestrictedCategories` to be an array in the JSON data but got " + data['declaredRestrictedCategories']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['declaredVendorIds'])) {
            throw new Error("Expected the field `declaredVendorIds` to be an array in the JSON data but got " + data['declaredVendorIds']);
        }
        // validate the optional field `html`
        if (data['html']) { // data not null
          HtmlContent.validateJSON(data['html']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['impressionTrackingUrls'])) {
            throw new Error("Expected the field `impressionTrackingUrls` to be an array in the JSON data but got " + data['impressionTrackingUrls']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `native`
        if (data['native']) { // data not null
          NativeContent.validateJSON(data['native']);
        }
        // ensure the json data is a string
        if (data['renderUrl'] && !(typeof data['renderUrl'] === 'string' || data['renderUrl'] instanceof String)) {
            throw new Error("Expected the field `renderUrl` to be a primitive type in the JSON string but got " + data['renderUrl']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['restrictedCategories'])) {
            throw new Error("Expected the field `restrictedCategories` to be an array in the JSON data but got " + data['restrictedCategories']);
        }
        // validate the optional field `video`
        if (data['video']) { // data not null
          VideoContent.validateJSON(data['video']);
        }

        return true;
    }


}



/**
 * Output only. ID of the buyer account that this creative is owned by. Can be used to filter the response of the creatives.list method with equality and inequality check.
 * @member {String} accountId
 */
Creative.prototype['accountId'] = undefined;

/**
 * The link to AdChoices destination page. This is only supported for native ads.
 * @member {String} adChoicesDestinationUrl
 */
Creative.prototype['adChoicesDestinationUrl'] = undefined;

/**
 * The name of the company being advertised in the creative. Can be used to filter the response of the creatives.list method.
 * @member {String} advertiserName
 */
Creative.prototype['advertiserName'] = undefined;

/**
 * The agency ID for this creative.
 * @member {String} agencyId
 */
Creative.prototype['agencyId'] = undefined;

/**
 * Output only. The last update timestamp of the creative through the API.
 * @member {String} apiUpdateTime
 */
Creative.prototype['apiUpdateTime'] = undefined;

/**
 * Output only. The format of this creative. Can be used to filter the response of the creatives.list method.
 * @member {module:model/Creative.CreativeFormatEnum} creativeFormat
 */
Creative.prototype['creativeFormat'] = undefined;

/**
 * Buyer-specific creative ID that references this creative in bid responses. This field is Ignored in update operations. Can be used to filter the response of the creatives.list method. The maximum length of the creative ID is 128 bytes.
 * @member {String} creativeId
 */
Creative.prototype['creativeId'] = undefined;

/**
 * @member {module:model/CreativeServingDecision} creativeServingDecision
 */
Creative.prototype['creativeServingDecision'] = undefined;

/**
 * Output only. IDs of all of the deals with which this creative has been used in bidding. Can be used to filter the response of the creatives.list method.
 * @member {Array.<String>} dealIds
 */
Creative.prototype['dealIds'] = undefined;

/**
 * All declared attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto\") contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.
 * @member {Array.<module:model/Creative.DeclaredAttributesEnum>} declaredAttributes
 */
Creative.prototype['declaredAttributes'] = undefined;

/**
 * The set of declared destination URLs for the creative. Can be used to filter the response of the creatives.list method.
 * @member {Array.<String>} declaredClickThroughUrls
 */
Creative.prototype['declaredClickThroughUrls'] = undefined;

/**
 * All declared restricted categories for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method.
 * @member {Array.<module:model/Creative.DeclaredRestrictedCategoriesEnum>} declaredRestrictedCategories
 */
Creative.prototype['declaredRestrictedCategories'] = undefined;

/**
 * IDs for the declared ad technology vendors that may be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method.
 * @member {Array.<Number>} declaredVendorIds
 */
Creative.prototype['declaredVendorIds'] = undefined;

/**
 * @member {module:model/HtmlContent} html
 */
Creative.prototype['html'] = undefined;

/**
 * The set of URLs to be called to record an impression.
 * @member {Array.<String>} impressionTrackingUrls
 */
Creative.prototype['impressionTrackingUrls'] = undefined;

/**
 * Output only. Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`, where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}` is the buyer-specific creative ID that references this creative in the bid response.
 * @member {String} name
 */
Creative.prototype['name'] = undefined;

/**
 * @member {module:model/NativeContent} native
 */
Creative.prototype['native'] = undefined;

/**
 * Experimental field that can be used during the [FLEDGE Origin Trial](/authorized-buyers/rtb/fledge-origin-trial). The URL to fetch an interest group ad used in [TURTLEDOVE on-device auction](https://github.com/WICG/turtledove/blob/main/FLEDGE.md#1-browsers-record-interest-groups\"). This should be unique among all creatives for a given `accountId`. This URL should be the same as the URL returned by [generateBid()](https://github.com/WICG/turtledove/blob/main/FLEDGE.md#32-on-device-bidding).
 * @member {String} renderUrl
 */
Creative.prototype['renderUrl'] = undefined;

/**
 * All restricted categories for the ads that may be shown from this creative.
 * @member {Array.<module:model/Creative.RestrictedCategoriesEnum>} restrictedCategories
 */
Creative.prototype['restrictedCategories'] = undefined;

/**
 * Output only. The version of the creative. Version for a new creative is 1 and it increments during subsequent creative updates.
 * @member {Number} version
 */
Creative.prototype['version'] = undefined;

/**
 * @member {module:model/VideoContent} video
 */
Creative.prototype['video'] = undefined;





/**
 * Allowed values for the <code>creativeFormat</code> property.
 * @enum {String}
 * @readonly
 */
Creative['CreativeFormatEnum'] = {

    /**
     * value: "CREATIVE_FORMAT_UNSPECIFIED"
     * @const
     */
    "CREATIVE_FORMAT_UNSPECIFIED": "CREATIVE_FORMAT_UNSPECIFIED",

    /**
     * value: "HTML"
     * @const
     */
    "HTML": "HTML",

    /**
     * value: "VIDEO"
     * @const
     */
    "VIDEO": "VIDEO",

    /**
     * value: "NATIVE"
     * @const
     */
    "NATIVE": "NATIVE"
};


/**
 * Allowed values for the <code>declaredAttributes</code> property.
 * @enum {String}
 * @readonly
 */
Creative['DeclaredAttributesEnum'] = {

    /**
     * value: "ATTRIBUTE_UNSPECIFIED"
     * @const
     */
    "ATTRIBUTE_UNSPECIFIED": "ATTRIBUTE_UNSPECIFIED",

    /**
     * value: "IMAGE_RICH_MEDIA"
     * @const
     */
    "IMAGE_RICH_MEDIA": "IMAGE_RICH_MEDIA",

    /**
     * value: "ADOBE_FLASH_FLV"
     * @const
     */
    "ADOBE_FLASH_FLV": "ADOBE_FLASH_FLV",

    /**
     * value: "IS_TAGGED"
     * @const
     */
    "IS_TAGGED": "IS_TAGGED",

    /**
     * value: "IS_COOKIE_TARGETED"
     * @const
     */
    "IS_COOKIE_TARGETED": "IS_COOKIE_TARGETED",

    /**
     * value: "IS_USER_INTEREST_TARGETED"
     * @const
     */
    "IS_USER_INTEREST_TARGETED": "IS_USER_INTEREST_TARGETED",

    /**
     * value: "EXPANDING_DIRECTION_NONE"
     * @const
     */
    "EXPANDING_DIRECTION_NONE": "EXPANDING_DIRECTION_NONE",

    /**
     * value: "EXPANDING_DIRECTION_UP"
     * @const
     */
    "EXPANDING_DIRECTION_UP": "EXPANDING_DIRECTION_UP",

    /**
     * value: "EXPANDING_DIRECTION_DOWN"
     * @const
     */
    "EXPANDING_DIRECTION_DOWN": "EXPANDING_DIRECTION_DOWN",

    /**
     * value: "EXPANDING_DIRECTION_LEFT"
     * @const
     */
    "EXPANDING_DIRECTION_LEFT": "EXPANDING_DIRECTION_LEFT",

    /**
     * value: "EXPANDING_DIRECTION_RIGHT"
     * @const
     */
    "EXPANDING_DIRECTION_RIGHT": "EXPANDING_DIRECTION_RIGHT",

    /**
     * value: "EXPANDING_DIRECTION_UP_LEFT"
     * @const
     */
    "EXPANDING_DIRECTION_UP_LEFT": "EXPANDING_DIRECTION_UP_LEFT",

    /**
     * value: "EXPANDING_DIRECTION_UP_RIGHT"
     * @const
     */
    "EXPANDING_DIRECTION_UP_RIGHT": "EXPANDING_DIRECTION_UP_RIGHT",

    /**
     * value: "EXPANDING_DIRECTION_DOWN_LEFT"
     * @const
     */
    "EXPANDING_DIRECTION_DOWN_LEFT": "EXPANDING_DIRECTION_DOWN_LEFT",

    /**
     * value: "EXPANDING_DIRECTION_DOWN_RIGHT"
     * @const
     */
    "EXPANDING_DIRECTION_DOWN_RIGHT": "EXPANDING_DIRECTION_DOWN_RIGHT",

    /**
     * value: "CREATIVE_TYPE_HTML"
     * @const
     */
    "CREATIVE_TYPE_HTML": "CREATIVE_TYPE_HTML",

    /**
     * value: "CREATIVE_TYPE_VAST_VIDEO"
     * @const
     */
    "CREATIVE_TYPE_VAST_VIDEO": "CREATIVE_TYPE_VAST_VIDEO",

    /**
     * value: "EXPANDING_DIRECTION_UP_OR_DOWN"
     * @const
     */
    "EXPANDING_DIRECTION_UP_OR_DOWN": "EXPANDING_DIRECTION_UP_OR_DOWN",

    /**
     * value: "EXPANDING_DIRECTION_LEFT_OR_RIGHT"
     * @const
     */
    "EXPANDING_DIRECTION_LEFT_OR_RIGHT": "EXPANDING_DIRECTION_LEFT_OR_RIGHT",

    /**
     * value: "EXPANDING_DIRECTION_ANY_DIAGONAL"
     * @const
     */
    "EXPANDING_DIRECTION_ANY_DIAGONAL": "EXPANDING_DIRECTION_ANY_DIAGONAL",

    /**
     * value: "EXPANDING_ACTION_ROLLOVER_TO_EXPAND"
     * @const
     */
    "EXPANDING_ACTION_ROLLOVER_TO_EXPAND": "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",

    /**
     * value: "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH"
     * @const
     */
    "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH": "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_MRAID"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_MRAID": "RICH_MEDIA_CAPABILITY_TYPE_MRAID",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_FLASH"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_FLASH": "RICH_MEDIA_CAPABILITY_TYPE_FLASH",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_HTML5"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_HTML5": "RICH_MEDIA_CAPABILITY_TYPE_HTML5",

    /**
     * value: "SKIPPABLE_INSTREAM_VIDEO"
     * @const
     */
    "SKIPPABLE_INSTREAM_VIDEO": "SKIPPABLE_INSTREAM_VIDEO",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_SSL"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_SSL": "RICH_MEDIA_CAPABILITY_TYPE_SSL",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL": "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL": "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",

    /**
     * value: "NON_SKIPPABLE_INSTREAM_VIDEO"
     * @const
     */
    "NON_SKIPPABLE_INSTREAM_VIDEO": "NON_SKIPPABLE_INSTREAM_VIDEO",

    /**
     * value: "NATIVE_ELIGIBILITY_ELIGIBLE"
     * @const
     */
    "NATIVE_ELIGIBILITY_ELIGIBLE": "NATIVE_ELIGIBILITY_ELIGIBLE",

    /**
     * value: "NON_VPAID"
     * @const
     */
    "NON_VPAID": "NON_VPAID",

    /**
     * value: "NATIVE_ELIGIBILITY_NOT_ELIGIBLE"
     * @const
     */
    "NATIVE_ELIGIBILITY_NOT_ELIGIBLE": "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",

    /**
     * value: "ANY_INTERSTITIAL"
     * @const
     */
    "ANY_INTERSTITIAL": "ANY_INTERSTITIAL",

    /**
     * value: "NON_INTERSTITIAL"
     * @const
     */
    "NON_INTERSTITIAL": "NON_INTERSTITIAL",

    /**
     * value: "IN_BANNER_VIDEO"
     * @const
     */
    "IN_BANNER_VIDEO": "IN_BANNER_VIDEO",

    /**
     * value: "RENDERING_SIZELESS_ADX"
     * @const
     */
    "RENDERING_SIZELESS_ADX": "RENDERING_SIZELESS_ADX",

    /**
     * value: "OMSDK_1_0"
     * @const
     */
    "OMSDK_1_0": "OMSDK_1_0",

    /**
     * value: "RENDERING_PLAYABLE"
     * @const
     */
    "RENDERING_PLAYABLE": "RENDERING_PLAYABLE"
};


/**
 * Allowed values for the <code>declaredRestrictedCategories</code> property.
 * @enum {String}
 * @readonly
 */
Creative['DeclaredRestrictedCategoriesEnum'] = {

    /**
     * value: "RESTRICTED_CATEGORY_UNSPECIFIED"
     * @const
     */
    "RESTRICTED_CATEGORY_UNSPECIFIED": "RESTRICTED_CATEGORY_UNSPECIFIED",

    /**
     * value: "ALCOHOL"
     * @const
     */
    "ALCOHOL": "ALCOHOL"
};


/**
 * Allowed values for the <code>restrictedCategories</code> property.
 * @enum {String}
 * @readonly
 */
Creative['RestrictedCategoriesEnum'] = {

    /**
     * value: "RESTRICTED_CATEGORY_UNSPECIFIED"
     * @const
     */
    "RESTRICTED_CATEGORY_UNSPECIFIED": "RESTRICTED_CATEGORY_UNSPECIFIED",

    /**
     * value: "ALCOHOL"
     * @const
     */
    "ALCOHOL": "ALCOHOL"
};



export default Creative;

