/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MediaFile from './MediaFile';

/**
 * The VideoMetadata model module.
 * @module model/VideoMetadata
 * @version v1
 */
class VideoMetadata {
    /**
     * Constructs a new <code>VideoMetadata</code>.
     * Video metadata for a creative.
     * @alias module:model/VideoMetadata
     */
    constructor() { 
        
        VideoMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoMetadata} obj Optional instance to populate.
     * @return {module:model/VideoMetadata} The populated <code>VideoMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoMetadata();

            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('isValidVast')) {
                obj['isValidVast'] = ApiClient.convertToType(data['isValidVast'], 'Boolean');
            }
            if (data.hasOwnProperty('isVpaid')) {
                obj['isVpaid'] = ApiClient.convertToType(data['isVpaid'], 'Boolean');
            }
            if (data.hasOwnProperty('mediaFiles')) {
                obj['mediaFiles'] = ApiClient.convertToType(data['mediaFiles'], [MediaFile]);
            }
            if (data.hasOwnProperty('skipOffset')) {
                obj['skipOffset'] = ApiClient.convertToType(data['skipOffset'], 'String');
            }
            if (data.hasOwnProperty('vastVersion')) {
                obj['vastVersion'] = ApiClient.convertToType(data['vastVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['duration'] && !(typeof data['duration'] === 'string' || data['duration'] instanceof String)) {
            throw new Error("Expected the field `duration` to be a primitive type in the JSON string but got " + data['duration']);
        }
        if (data['mediaFiles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['mediaFiles'])) {
                throw new Error("Expected the field `mediaFiles` to be an array in the JSON data but got " + data['mediaFiles']);
            }
            // validate the optional field `mediaFiles` (array)
            for (const item of data['mediaFiles']) {
                MediaFile.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['skipOffset'] && !(typeof data['skipOffset'] === 'string' || data['skipOffset'] instanceof String)) {
            throw new Error("Expected the field `skipOffset` to be a primitive type in the JSON string but got " + data['skipOffset']);
        }
        // ensure the json data is a string
        if (data['vastVersion'] && !(typeof data['vastVersion'] === 'string' || data['vastVersion'] instanceof String)) {
            throw new Error("Expected the field `vastVersion` to be a primitive type in the JSON string but got " + data['vastVersion']);
        }

        return true;
    }


}



/**
 * The duration of the ad. Can be used to filter the response of the creatives.list method.
 * @member {String} duration
 */
VideoMetadata.prototype['duration'] = undefined;

/**
 * Is this a valid VAST ad? Can be used to filter the response of the creatives.list method.
 * @member {Boolean} isValidVast
 */
VideoMetadata.prototype['isValidVast'] = undefined;

/**
 * Is this a VPAID ad? Can be used to filter the response of the creatives.list method.
 * @member {Boolean} isVpaid
 */
VideoMetadata.prototype['isVpaid'] = undefined;

/**
 * The list of all media files declared in the VAST. If there are multiple VASTs in a wrapper chain, this includes the media files from the deepest one in the chain.
 * @member {Array.<module:model/MediaFile>} mediaFiles
 */
VideoMetadata.prototype['mediaFiles'] = undefined;

/**
 * The minimum duration that the user has to watch before being able to skip this ad. If the field is not set, the ad is not skippable. If the field is set, the ad is skippable. Can be used to filter the response of the creatives.list method.
 * @member {String} skipOffset
 */
VideoMetadata.prototype['skipOffset'] = undefined;

/**
 * The maximum VAST version across all wrapped VAST documents. Can be used to filter the response of the creatives.list method.
 * @member {module:model/VideoMetadata.VastVersionEnum} vastVersion
 */
VideoMetadata.prototype['vastVersion'] = undefined;





/**
 * Allowed values for the <code>vastVersion</code> property.
 * @enum {String}
 * @readonly
 */
VideoMetadata['VastVersionEnum'] = {

    /**
     * value: "VAST_VERSION_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "VAST_VERSION_UNSPECIFIED",

    /**
     * value: "VAST_VERSION_1_0"
     * @const
     */
    "1_0": "VAST_VERSION_1_0",

    /**
     * value: "VAST_VERSION_2_0"
     * @const
     */
    "2_0": "VAST_VERSION_2_0",

    /**
     * value: "VAST_VERSION_3_0"
     * @const
     */
    "3_0": "VAST_VERSION_3_0",

    /**
     * value: "VAST_VERSION_4_0"
     * @const
     */
    "4_0": "VAST_VERSION_4_0"
};



export default VideoMetadata;

