/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PublisherConnection model module.
 * @module model/PublisherConnection
 * @version v1
 */
class PublisherConnection {
    /**
     * Constructs a new <code>PublisherConnection</code>.
     * An Open Bidding exchange&#39;s connection to a publisher. This is initiated by the publisher for the bidder to review. If approved by the bidder, this means that the bidder agrees to receive bid requests from the publisher.
     * @alias module:model/PublisherConnection
     */
    constructor() { 
        
        PublisherConnection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PublisherConnection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PublisherConnection} obj Optional instance to populate.
     * @return {module:model/PublisherConnection} The populated <code>PublisherConnection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PublisherConnection();

            if (data.hasOwnProperty('biddingState')) {
                obj['biddingState'] = ApiClient.convertToType(data['biddingState'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('publisherPlatform')) {
                obj['publisherPlatform'] = ApiClient.convertToType(data['publisherPlatform'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PublisherConnection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PublisherConnection</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['biddingState'] && !(typeof data['biddingState'] === 'string' || data['biddingState'] instanceof String)) {
            throw new Error("Expected the field `biddingState` to be a primitive type in the JSON string but got " + data['biddingState']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['publisherPlatform'] && !(typeof data['publisherPlatform'] === 'string' || data['publisherPlatform'] instanceof String)) {
            throw new Error("Expected the field `publisherPlatform` to be a primitive type in the JSON string but got " + data['publisherPlatform']);
        }

        return true;
    }


}



/**
 * Whether the publisher has been approved by the bidder.
 * @member {module:model/PublisherConnection.BiddingStateEnum} biddingState
 */
PublisherConnection.prototype['biddingState'] = undefined;

/**
 * Output only. The time at which the publisher initiated a connection with the bidder (irrespective of if or when the bidder approves it). This is subsequently updated if the publisher revokes and re-initiates the connection.
 * @member {String} createTime
 */
PublisherConnection.prototype['createTime'] = undefined;

/**
 * Output only. Publisher display name.
 * @member {String} displayName
 */
PublisherConnection.prototype['displayName'] = undefined;

/**
 * Output only. Name of the publisher connection. This follows the pattern `bidders/{bidder}/publisherConnections/{publisher}`, where `{bidder}` represents the account ID of the bidder, and `{publisher}` is the ads.txt/app-ads.txt publisher ID.
 * @member {String} name
 */
PublisherConnection.prototype['name'] = undefined;

/**
 * Output only. Whether the publisher is an Ad Manager or AdMob publisher.
 * @member {module:model/PublisherConnection.PublisherPlatformEnum} publisherPlatform
 */
PublisherConnection.prototype['publisherPlatform'] = undefined;





/**
 * Allowed values for the <code>biddingState</code> property.
 * @enum {String}
 * @readonly
 */
PublisherConnection['BiddingStateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "REJECTED"
     * @const
     */
    "REJECTED": "REJECTED",

    /**
     * value: "APPROVED"
     * @const
     */
    "APPROVED": "APPROVED"
};


/**
 * Allowed values for the <code>publisherPlatform</code> property.
 * @enum {String}
 * @readonly
 */
PublisherConnection['PublisherPlatformEnum'] = {

    /**
     * value: "PUBLISHER_PLATFORM_UNSPECIFIED"
     * @const
     */
    "PUBLISHER_PLATFORM_UNSPECIFIED": "PUBLISHER_PLATFORM_UNSPECIFIED",

    /**
     * value: "GOOGLE_AD_MANAGER"
     * @const
     */
    "GOOGLE_AD_MANAGER": "GOOGLE_AD_MANAGER",

    /**
     * value: "ADMOB"
     * @const
     */
    "ADMOB": "ADMOB"
};



export default PublisherConnection;

