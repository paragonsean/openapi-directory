/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PretargetingConfig from './PretargetingConfig';

/**
 * The ListPretargetingConfigsResponse model module.
 * @module model/ListPretargetingConfigsResponse
 * @version v1
 */
class ListPretargetingConfigsResponse {
    /**
     * Constructs a new <code>ListPretargetingConfigsResponse</code>.
     * A response containing pretargeting configurations.
     * @alias module:model/ListPretargetingConfigsResponse
     */
    constructor() { 
        
        ListPretargetingConfigsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListPretargetingConfigsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListPretargetingConfigsResponse} obj Optional instance to populate.
     * @return {module:model/ListPretargetingConfigsResponse} The populated <code>ListPretargetingConfigsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListPretargetingConfigsResponse();

            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
            if (data.hasOwnProperty('pretargetingConfigs')) {
                obj['pretargetingConfigs'] = ApiClient.convertToType(data['pretargetingConfigs'], [PretargetingConfig]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListPretargetingConfigsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListPretargetingConfigsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }
        if (data['pretargetingConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['pretargetingConfigs'])) {
                throw new Error("Expected the field `pretargetingConfigs` to be an array in the JSON data but got " + data['pretargetingConfigs']);
            }
            // validate the optional field `pretargetingConfigs` (array)
            for (const item of data['pretargetingConfigs']) {
                PretargetingConfig.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A token which can be passed to a subsequent call to the `ListPretargetingConfigs` method to retrieve the next page of results in ListPretargetingConfigsRequest.pageToken.
 * @member {String} nextPageToken
 */
ListPretargetingConfigsResponse.prototype['nextPageToken'] = undefined;

/**
 * List of pretargeting configurations.
 * @member {Array.<module:model/PretargetingConfig>} pretargetingConfigs
 */
ListPretargetingConfigsResponse.prototype['pretargetingConfigs'] = undefined;






export default ListPretargetingConfigsResponse;

