/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RealTimeBiddingApi);
  }
}(this, function(expect, RealTimeBiddingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RealTimeBiddingApi.BuyersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BuyersApi', function() {
    describe('realtimebiddingBuyersCreativesCreate', function() {
      it('should call realtimebiddingBuyersCreativesCreate successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBuyersCreativesCreate
        //instance.realtimebiddingBuyersCreativesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBuyersCreativesList', function() {
      it('should call realtimebiddingBuyersCreativesList successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBuyersCreativesList
        //instance.realtimebiddingBuyersCreativesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBuyersCreativesPatch', function() {
      it('should call realtimebiddingBuyersCreativesPatch successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBuyersCreativesPatch
        //instance.realtimebiddingBuyersCreativesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBuyersList', function() {
      it('should call realtimebiddingBuyersList successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBuyersList
        //instance.realtimebiddingBuyersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBuyersUserListsClose', function() {
      it('should call realtimebiddingBuyersUserListsClose successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBuyersUserListsClose
        //instance.realtimebiddingBuyersUserListsClose(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBuyersUserListsCreate', function() {
      it('should call realtimebiddingBuyersUserListsCreate successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBuyersUserListsCreate
        //instance.realtimebiddingBuyersUserListsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBuyersUserListsGet', function() {
      it('should call realtimebiddingBuyersUserListsGet successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBuyersUserListsGet
        //instance.realtimebiddingBuyersUserListsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBuyersUserListsGetRemarketingTag', function() {
      it('should call realtimebiddingBuyersUserListsGetRemarketingTag successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBuyersUserListsGetRemarketingTag
        //instance.realtimebiddingBuyersUserListsGetRemarketingTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBuyersUserListsList', function() {
      it('should call realtimebiddingBuyersUserListsList successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBuyersUserListsList
        //instance.realtimebiddingBuyersUserListsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBuyersUserListsOpen', function() {
      it('should call realtimebiddingBuyersUserListsOpen successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBuyersUserListsOpen
        //instance.realtimebiddingBuyersUserListsOpen(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBuyersUserListsUpdate', function() {
      it('should call realtimebiddingBuyersUserListsUpdate successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBuyersUserListsUpdate
        //instance.realtimebiddingBuyersUserListsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
