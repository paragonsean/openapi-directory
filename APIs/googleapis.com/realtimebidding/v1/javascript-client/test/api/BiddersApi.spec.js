/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RealTimeBiddingApi);
  }
}(this, function(expect, RealTimeBiddingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RealTimeBiddingApi.BiddersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BiddersApi', function() {
    describe('realtimebiddingBiddersCreativesWatch', function() {
      it('should call realtimebiddingBiddersCreativesWatch successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersCreativesWatch
        //instance.realtimebiddingBiddersCreativesWatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersEndpointsList', function() {
      it('should call realtimebiddingBiddersEndpointsList successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersEndpointsList
        //instance.realtimebiddingBiddersEndpointsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersList', function() {
      it('should call realtimebiddingBiddersList successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersList
        //instance.realtimebiddingBiddersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPretargetingConfigsActivate', function() {
      it('should call realtimebiddingBiddersPretargetingConfigsActivate successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPretargetingConfigsActivate
        //instance.realtimebiddingBiddersPretargetingConfigsActivate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPretargetingConfigsAddTargetedApps', function() {
      it('should call realtimebiddingBiddersPretargetingConfigsAddTargetedApps successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPretargetingConfigsAddTargetedApps
        //instance.realtimebiddingBiddersPretargetingConfigsAddTargetedApps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPretargetingConfigsAddTargetedPublishers', function() {
      it('should call realtimebiddingBiddersPretargetingConfigsAddTargetedPublishers successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPretargetingConfigsAddTargetedPublishers
        //instance.realtimebiddingBiddersPretargetingConfigsAddTargetedPublishers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPretargetingConfigsAddTargetedSites', function() {
      it('should call realtimebiddingBiddersPretargetingConfigsAddTargetedSites successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPretargetingConfigsAddTargetedSites
        //instance.realtimebiddingBiddersPretargetingConfigsAddTargetedSites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPretargetingConfigsCreate', function() {
      it('should call realtimebiddingBiddersPretargetingConfigsCreate successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPretargetingConfigsCreate
        //instance.realtimebiddingBiddersPretargetingConfigsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPretargetingConfigsDelete', function() {
      it('should call realtimebiddingBiddersPretargetingConfigsDelete successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPretargetingConfigsDelete
        //instance.realtimebiddingBiddersPretargetingConfigsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPretargetingConfigsList', function() {
      it('should call realtimebiddingBiddersPretargetingConfigsList successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPretargetingConfigsList
        //instance.realtimebiddingBiddersPretargetingConfigsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPretargetingConfigsRemoveTargetedApps', function() {
      it('should call realtimebiddingBiddersPretargetingConfigsRemoveTargetedApps successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPretargetingConfigsRemoveTargetedApps
        //instance.realtimebiddingBiddersPretargetingConfigsRemoveTargetedApps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPretargetingConfigsRemoveTargetedPublishers', function() {
      it('should call realtimebiddingBiddersPretargetingConfigsRemoveTargetedPublishers successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPretargetingConfigsRemoveTargetedPublishers
        //instance.realtimebiddingBiddersPretargetingConfigsRemoveTargetedPublishers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPretargetingConfigsRemoveTargetedSites', function() {
      it('should call realtimebiddingBiddersPretargetingConfigsRemoveTargetedSites successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPretargetingConfigsRemoveTargetedSites
        //instance.realtimebiddingBiddersPretargetingConfigsRemoveTargetedSites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPretargetingConfigsSuspend', function() {
      it('should call realtimebiddingBiddersPretargetingConfigsSuspend successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPretargetingConfigsSuspend
        //instance.realtimebiddingBiddersPretargetingConfigsSuspend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPublisherConnectionsBatchApprove', function() {
      it('should call realtimebiddingBiddersPublisherConnectionsBatchApprove successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPublisherConnectionsBatchApprove
        //instance.realtimebiddingBiddersPublisherConnectionsBatchApprove(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPublisherConnectionsBatchReject', function() {
      it('should call realtimebiddingBiddersPublisherConnectionsBatchReject successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPublisherConnectionsBatchReject
        //instance.realtimebiddingBiddersPublisherConnectionsBatchReject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realtimebiddingBiddersPublisherConnectionsList', function() {
      it('should call realtimebiddingBiddersPublisherConnectionsList successfully', function(done) {
        //uncomment below and update the code to test realtimebiddingBiddersPublisherConnectionsList
        //instance.realtimebiddingBiddersPublisherConnectionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
