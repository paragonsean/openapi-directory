/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RealTimeBiddingApi);
  }
}(this, function(expect, RealTimeBiddingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RealTimeBiddingApi.NativeContent();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NativeContent', function() {
    it('should create an instance of NativeContent', function() {
      // uncomment below and update the code to test NativeContent
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be.a(RealTimeBiddingApi.NativeContent);
    });

    it('should have the property advertiserName (base name: "advertiserName")', function() {
      // uncomment below and update the code to test the property advertiserName
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be();
    });

    it('should have the property appIcon (base name: "appIcon")', function() {
      // uncomment below and update the code to test the property appIcon
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be();
    });

    it('should have the property body (base name: "body")', function() {
      // uncomment below and update the code to test the property body
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be();
    });

    it('should have the property callToAction (base name: "callToAction")', function() {
      // uncomment below and update the code to test the property callToAction
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be();
    });

    it('should have the property clickLinkUrl (base name: "clickLinkUrl")', function() {
      // uncomment below and update the code to test the property clickLinkUrl
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be();
    });

    it('should have the property clickTrackingUrl (base name: "clickTrackingUrl")', function() {
      // uncomment below and update the code to test the property clickTrackingUrl
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be();
    });

    it('should have the property headline (base name: "headline")', function() {
      // uncomment below and update the code to test the property headline
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be();
    });

    it('should have the property logo (base name: "logo")', function() {
      // uncomment below and update the code to test the property logo
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be();
    });

    it('should have the property priceDisplayText (base name: "priceDisplayText")', function() {
      // uncomment below and update the code to test the property priceDisplayText
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be();
    });

    it('should have the property starRating (base name: "starRating")', function() {
      // uncomment below and update the code to test the property starRating
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be();
    });

    it('should have the property videoUrl (base name: "videoUrl")', function() {
      // uncomment below and update the code to test the property videoUrl
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be();
    });

    it('should have the property videoVastXml (base name: "videoVastXml")', function() {
      // uncomment below and update the code to test the property videoVastXml
      //var instance = new RealTimeBiddingApi.NativeContent();
      //expect(instance).to.be();
    });

  });

}));
