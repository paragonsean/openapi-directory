/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RealTimeBiddingApi);
  }
}(this, function(expect, RealTimeBiddingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RealTimeBiddingApi.Bidder();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Bidder', function() {
    it('should create an instance of Bidder', function() {
      // uncomment below and update the code to test Bidder
      //var instance = new RealTimeBiddingApi.Bidder();
      //expect(instance).to.be.a(RealTimeBiddingApi.Bidder);
    });

    it('should have the property bypassNonguaranteedDealsPretargeting (base name: "bypassNonguaranteedDealsPretargeting")', function() {
      // uncomment below and update the code to test the property bypassNonguaranteedDealsPretargeting
      //var instance = new RealTimeBiddingApi.Bidder();
      //expect(instance).to.be();
    });

    it('should have the property cookieMatchingNetworkId (base name: "cookieMatchingNetworkId")', function() {
      // uncomment below and update the code to test the property cookieMatchingNetworkId
      //var instance = new RealTimeBiddingApi.Bidder();
      //expect(instance).to.be();
    });

    it('should have the property cookieMatchingUrl (base name: "cookieMatchingUrl")', function() {
      // uncomment below and update the code to test the property cookieMatchingUrl
      //var instance = new RealTimeBiddingApi.Bidder();
      //expect(instance).to.be();
    });

    it('should have the property dealsBillingId (base name: "dealsBillingId")', function() {
      // uncomment below and update the code to test the property dealsBillingId
      //var instance = new RealTimeBiddingApi.Bidder();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new RealTimeBiddingApi.Bidder();
      //expect(instance).to.be();
    });

  });

}));
