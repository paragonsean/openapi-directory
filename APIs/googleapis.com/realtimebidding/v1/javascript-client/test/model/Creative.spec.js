/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RealTimeBiddingApi);
  }
}(this, function(expect, RealTimeBiddingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RealTimeBiddingApi.Creative();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Creative', function() {
    it('should create an instance of Creative', function() {
      // uncomment below and update the code to test Creative
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be.a(RealTimeBiddingApi.Creative);
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property adChoicesDestinationUrl (base name: "adChoicesDestinationUrl")', function() {
      // uncomment below and update the code to test the property adChoicesDestinationUrl
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property advertiserName (base name: "advertiserName")', function() {
      // uncomment below and update the code to test the property advertiserName
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property agencyId (base name: "agencyId")', function() {
      // uncomment below and update the code to test the property agencyId
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property apiUpdateTime (base name: "apiUpdateTime")', function() {
      // uncomment below and update the code to test the property apiUpdateTime
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property creativeFormat (base name: "creativeFormat")', function() {
      // uncomment below and update the code to test the property creativeFormat
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property creativeId (base name: "creativeId")', function() {
      // uncomment below and update the code to test the property creativeId
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property creativeServingDecision (base name: "creativeServingDecision")', function() {
      // uncomment below and update the code to test the property creativeServingDecision
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property dealIds (base name: "dealIds")', function() {
      // uncomment below and update the code to test the property dealIds
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property declaredAttributes (base name: "declaredAttributes")', function() {
      // uncomment below and update the code to test the property declaredAttributes
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property declaredClickThroughUrls (base name: "declaredClickThroughUrls")', function() {
      // uncomment below and update the code to test the property declaredClickThroughUrls
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property declaredRestrictedCategories (base name: "declaredRestrictedCategories")', function() {
      // uncomment below and update the code to test the property declaredRestrictedCategories
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property declaredVendorIds (base name: "declaredVendorIds")', function() {
      // uncomment below and update the code to test the property declaredVendorIds
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property html (base name: "html")', function() {
      // uncomment below and update the code to test the property html
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property impressionTrackingUrls (base name: "impressionTrackingUrls")', function() {
      // uncomment below and update the code to test the property impressionTrackingUrls
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property _native (base name: "native")', function() {
      // uncomment below and update the code to test the property _native
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property renderUrl (base name: "renderUrl")', function() {
      // uncomment below and update the code to test the property renderUrl
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property restrictedCategories (base name: "restrictedCategories")', function() {
      // uncomment below and update the code to test the property restrictedCategories
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property video (base name: "video")', function() {
      // uncomment below and update the code to test the property video
      //var instance = new RealTimeBiddingApi.Creative();
      //expect(instance).to.be();
    });

  });

}));
