/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchApprovePublisherConnectionsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchApprovePublisherConnectionsRequest::OAIBatchApprovePublisherConnectionsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchApprovePublisherConnectionsRequest::OAIBatchApprovePublisherConnectionsRequest() {
    this->initializeModel();
}

OAIBatchApprovePublisherConnectionsRequest::~OAIBatchApprovePublisherConnectionsRequest() {}

void OAIBatchApprovePublisherConnectionsRequest::initializeModel() {

    m_names_isSet = false;
    m_names_isValid = false;
}

void OAIBatchApprovePublisherConnectionsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchApprovePublisherConnectionsRequest::fromJsonObject(QJsonObject json) {

    m_names_isValid = ::OpenAPI::fromJsonValue(m_names, json[QString("names")]);
    m_names_isSet = !json[QString("names")].isNull() && m_names_isValid;
}

QString OAIBatchApprovePublisherConnectionsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchApprovePublisherConnectionsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_names.size() > 0) {
        obj.insert(QString("names"), ::OpenAPI::toJsonValue(m_names));
    }
    return obj;
}

QList<QString> OAIBatchApprovePublisherConnectionsRequest::getNames() const {
    return m_names;
}
void OAIBatchApprovePublisherConnectionsRequest::setNames(const QList<QString> &names) {
    m_names = names;
    m_names_isSet = true;
}

bool OAIBatchApprovePublisherConnectionsRequest::is_names_Set() const{
    return m_names_isSet;
}

bool OAIBatchApprovePublisherConnectionsRequest::is_names_Valid() const{
    return m_names_isValid;
}

bool OAIBatchApprovePublisherConnectionsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchApprovePublisherConnectionsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
