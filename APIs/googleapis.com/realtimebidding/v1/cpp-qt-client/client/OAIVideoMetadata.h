/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoMetadata.h
 *
 * Video metadata for a creative.
 */

#ifndef OAIVideoMetadata_H
#define OAIVideoMetadata_H

#include <QJsonObject>

#include "OAIMediaFile.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMediaFile;

class OAIVideoMetadata : public OAIObject {
public:
    OAIVideoMetadata();
    OAIVideoMetadata(QString json);
    ~OAIVideoMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    bool isIsValidVast() const;
    void setIsValidVast(const bool &is_valid_vast);
    bool is_is_valid_vast_Set() const;
    bool is_is_valid_vast_Valid() const;

    bool isIsVpaid() const;
    void setIsVpaid(const bool &is_vpaid);
    bool is_is_vpaid_Set() const;
    bool is_is_vpaid_Valid() const;

    QList<OAIMediaFile> getMediaFiles() const;
    void setMediaFiles(const QList<OAIMediaFile> &media_files);
    bool is_media_files_Set() const;
    bool is_media_files_Valid() const;

    QString getSkipOffset() const;
    void setSkipOffset(const QString &skip_offset);
    bool is_skip_offset_Set() const;
    bool is_skip_offset_Valid() const;

    QString getVastVersion() const;
    void setVastVersion(const QString &vast_version);
    bool is_vast_version_Set() const;
    bool is_vast_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    bool m_is_valid_vast;
    bool m_is_valid_vast_isSet;
    bool m_is_valid_vast_isValid;

    bool m_is_vpaid;
    bool m_is_vpaid_isSet;
    bool m_is_vpaid_isValid;

    QList<OAIMediaFile> m_media_files;
    bool m_media_files_isSet;
    bool m_media_files_isValid;

    QString m_skip_offset;
    bool m_skip_offset_isSet;
    bool m_skip_offset_isValid;

    QString m_vast_version;
    bool m_vast_version_isSet;
    bool m_vast_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoMetadata)

#endif // OAIVideoMetadata_H
