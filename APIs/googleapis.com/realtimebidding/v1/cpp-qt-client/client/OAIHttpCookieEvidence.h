/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHttpCookieEvidence.h
 *
 * Evidence for HTTP cookie-related policy violations.
 */

#ifndef OAIHttpCookieEvidence_H
#define OAIHttpCookieEvidence_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHttpCookieEvidence : public OAIObject {
public:
    OAIHttpCookieEvidence();
    OAIHttpCookieEvidence(QString json);
    ~OAIHttpCookieEvidence() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCookieNames() const;
    void setCookieNames(const QList<QString> &cookie_names);
    bool is_cookie_names_Set() const;
    bool is_cookie_names_Valid() const;

    qint32 getMaxCookieCount() const;
    void setMaxCookieCount(const qint32 &max_cookie_count);
    bool is_max_cookie_count_Set() const;
    bool is_max_cookie_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_cookie_names;
    bool m_cookie_names_isSet;
    bool m_cookie_names_isValid;

    qint32 m_max_cookie_count;
    bool m_max_cookie_count_isSet;
    bool m_max_cookie_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHttpCookieEvidence)

#endif // OAIHttpCookieEvidence_H
