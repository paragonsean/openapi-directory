/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchRejectPublisherConnectionsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchRejectPublisherConnectionsRequest::OAIBatchRejectPublisherConnectionsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchRejectPublisherConnectionsRequest::OAIBatchRejectPublisherConnectionsRequest() {
    this->initializeModel();
}

OAIBatchRejectPublisherConnectionsRequest::~OAIBatchRejectPublisherConnectionsRequest() {}

void OAIBatchRejectPublisherConnectionsRequest::initializeModel() {

    m_names_isSet = false;
    m_names_isValid = false;
}

void OAIBatchRejectPublisherConnectionsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchRejectPublisherConnectionsRequest::fromJsonObject(QJsonObject json) {

    m_names_isValid = ::OpenAPI::fromJsonValue(m_names, json[QString("names")]);
    m_names_isSet = !json[QString("names")].isNull() && m_names_isValid;
}

QString OAIBatchRejectPublisherConnectionsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchRejectPublisherConnectionsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_names.size() > 0) {
        obj.insert(QString("names"), ::OpenAPI::toJsonValue(m_names));
    }
    return obj;
}

QList<QString> OAIBatchRejectPublisherConnectionsRequest::getNames() const {
    return m_names;
}
void OAIBatchRejectPublisherConnectionsRequest::setNames(const QList<QString> &names) {
    m_names = names;
    m_names_isSet = true;
}

bool OAIBatchRejectPublisherConnectionsRequest::is_names_Set() const{
    return m_names_isSet;
}

bool OAIBatchRejectPublisherConnectionsRequest::is_names_Valid() const{
    return m_names_isValid;
}

bool OAIBatchRejectPublisherConnectionsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchRejectPublisherConnectionsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
