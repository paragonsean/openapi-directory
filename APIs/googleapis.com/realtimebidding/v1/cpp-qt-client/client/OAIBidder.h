/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBidder.h
 *
 * Bidder settings.
 */

#ifndef OAIBidder_H
#define OAIBidder_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBidder : public OAIObject {
public:
    OAIBidder();
    OAIBidder(QString json);
    ~OAIBidder() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBypassNonguaranteedDealsPretargeting() const;
    void setBypassNonguaranteedDealsPretargeting(const bool &bypass_nonguaranteed_deals_pretargeting);
    bool is_bypass_nonguaranteed_deals_pretargeting_Set() const;
    bool is_bypass_nonguaranteed_deals_pretargeting_Valid() const;

    QString getCookieMatchingNetworkId() const;
    void setCookieMatchingNetworkId(const QString &cookie_matching_network_id);
    bool is_cookie_matching_network_id_Set() const;
    bool is_cookie_matching_network_id_Valid() const;

    QString getCookieMatchingUrl() const;
    void setCookieMatchingUrl(const QString &cookie_matching_url);
    bool is_cookie_matching_url_Set() const;
    bool is_cookie_matching_url_Valid() const;

    QString getDealsBillingId() const;
    void setDealsBillingId(const QString &deals_billing_id);
    bool is_deals_billing_id_Set() const;
    bool is_deals_billing_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_bypass_nonguaranteed_deals_pretargeting;
    bool m_bypass_nonguaranteed_deals_pretargeting_isSet;
    bool m_bypass_nonguaranteed_deals_pretargeting_isValid;

    QString m_cookie_matching_network_id;
    bool m_cookie_matching_network_id_isSet;
    bool m_cookie_matching_network_id_isValid;

    QString m_cookie_matching_url;
    bool m_cookie_matching_url_isSet;
    bool m_cookie_matching_url_isValid;

    QString m_deals_billing_id;
    bool m_deals_billing_id_isSet;
    bool m_deals_billing_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBidder)

#endif // OAIBidder_H
