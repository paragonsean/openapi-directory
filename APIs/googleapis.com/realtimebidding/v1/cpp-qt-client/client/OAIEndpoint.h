/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEndpoint.h
 *
 * Bidder endpoint that receives bid requests.
 */

#ifndef OAIEndpoint_H
#define OAIEndpoint_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEndpoint : public OAIObject {
public:
    OAIEndpoint();
    OAIEndpoint(QString json);
    ~OAIEndpoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBidProtocol() const;
    void setBidProtocol(const QString &bid_protocol);
    bool is_bid_protocol_Set() const;
    bool is_bid_protocol_Valid() const;

    QString getMaximumQps() const;
    void setMaximumQps(const QString &maximum_qps);
    bool is_maximum_qps_Set() const;
    bool is_maximum_qps_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getTradingLocation() const;
    void setTradingLocation(const QString &trading_location);
    bool is_trading_location_Set() const;
    bool is_trading_location_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bid_protocol;
    bool m_bid_protocol_isSet;
    bool m_bid_protocol_isValid;

    QString m_maximum_qps;
    bool m_maximum_qps_isSet;
    bool m_maximum_qps_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_trading_location;
    bool m_trading_location_isSet;
    bool m_trading_location_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEndpoint)

#endif // OAIEndpoint_H
