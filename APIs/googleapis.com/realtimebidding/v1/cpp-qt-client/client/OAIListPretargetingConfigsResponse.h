/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListPretargetingConfigsResponse.h
 *
 * A response containing pretargeting configurations.
 */

#ifndef OAIListPretargetingConfigsResponse_H
#define OAIListPretargetingConfigsResponse_H

#include <QJsonObject>

#include "OAIPretargetingConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPretargetingConfig;

class OAIListPretargetingConfigsResponse : public OAIObject {
public:
    OAIListPretargetingConfigsResponse();
    OAIListPretargetingConfigsResponse(QString json);
    ~OAIListPretargetingConfigsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QList<OAIPretargetingConfig> getPretargetingConfigs() const;
    void setPretargetingConfigs(const QList<OAIPretargetingConfig> &pretargeting_configs);
    bool is_pretargeting_configs_Set() const;
    bool is_pretargeting_configs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QList<OAIPretargetingConfig> m_pretargeting_configs;
    bool m_pretargeting_configs_isSet;
    bool m_pretargeting_configs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListPretargetingConfigsResponse)

#endif // OAIListPretargetingConfigsResponse_H
