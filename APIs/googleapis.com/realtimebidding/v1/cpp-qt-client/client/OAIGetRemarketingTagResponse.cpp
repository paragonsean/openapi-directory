/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetRemarketingTagResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetRemarketingTagResponse::OAIGetRemarketingTagResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetRemarketingTagResponse::OAIGetRemarketingTagResponse() {
    this->initializeModel();
}

OAIGetRemarketingTagResponse::~OAIGetRemarketingTagResponse() {}

void OAIGetRemarketingTagResponse::initializeModel() {

    m_snippet_isSet = false;
    m_snippet_isValid = false;
}

void OAIGetRemarketingTagResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetRemarketingTagResponse::fromJsonObject(QJsonObject json) {

    m_snippet_isValid = ::OpenAPI::fromJsonValue(m_snippet, json[QString("snippet")]);
    m_snippet_isSet = !json[QString("snippet")].isNull() && m_snippet_isValid;
}

QString OAIGetRemarketingTagResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetRemarketingTagResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_snippet_isSet) {
        obj.insert(QString("snippet"), ::OpenAPI::toJsonValue(m_snippet));
    }
    return obj;
}

QString OAIGetRemarketingTagResponse::getSnippet() const {
    return m_snippet;
}
void OAIGetRemarketingTagResponse::setSnippet(const QString &snippet) {
    m_snippet = snippet;
    m_snippet_isSet = true;
}

bool OAIGetRemarketingTagResponse::is_snippet_Set() const{
    return m_snippet_isSet;
}

bool OAIGetRemarketingTagResponse::is_snippet_Valid() const{
    return m_snippet_isValid;
}

bool OAIGetRemarketingTagResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_snippet_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetRemarketingTagResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
