/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreative.h
 *
 * A creative and its classification data.
 */

#ifndef OAICreative_H
#define OAICreative_H

#include <QJsonObject>

#include "OAICreativeServingDecision.h"
#include "OAIHtmlContent.h"
#include "OAINativeContent.h"
#include "OAIVideoContent.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreativeServingDecision;
class OAIHtmlContent;
class OAINativeContent;
class OAIVideoContent;

class OAICreative : public OAIObject {
public:
    OAICreative();
    OAICreative(QString json);
    ~OAICreative() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getAdChoicesDestinationUrl() const;
    void setAdChoicesDestinationUrl(const QString &ad_choices_destination_url);
    bool is_ad_choices_destination_url_Set() const;
    bool is_ad_choices_destination_url_Valid() const;

    QString getAdvertiserName() const;
    void setAdvertiserName(const QString &advertiser_name);
    bool is_advertiser_name_Set() const;
    bool is_advertiser_name_Valid() const;

    QString getAgencyId() const;
    void setAgencyId(const QString &agency_id);
    bool is_agency_id_Set() const;
    bool is_agency_id_Valid() const;

    QString getApiUpdateTime() const;
    void setApiUpdateTime(const QString &api_update_time);
    bool is_api_update_time_Set() const;
    bool is_api_update_time_Valid() const;

    QString getCreativeFormat() const;
    void setCreativeFormat(const QString &creative_format);
    bool is_creative_format_Set() const;
    bool is_creative_format_Valid() const;

    QString getCreativeId() const;
    void setCreativeId(const QString &creative_id);
    bool is_creative_id_Set() const;
    bool is_creative_id_Valid() const;

    OAICreativeServingDecision getCreativeServingDecision() const;
    void setCreativeServingDecision(const OAICreativeServingDecision &creative_serving_decision);
    bool is_creative_serving_decision_Set() const;
    bool is_creative_serving_decision_Valid() const;

    QList<QString> getDealIds() const;
    void setDealIds(const QList<QString> &deal_ids);
    bool is_deal_ids_Set() const;
    bool is_deal_ids_Valid() const;

    QList<QString> getDeclaredAttributes() const;
    void setDeclaredAttributes(const QList<QString> &declared_attributes);
    bool is_declared_attributes_Set() const;
    bool is_declared_attributes_Valid() const;

    QList<QString> getDeclaredClickThroughUrls() const;
    void setDeclaredClickThroughUrls(const QList<QString> &declared_click_through_urls);
    bool is_declared_click_through_urls_Set() const;
    bool is_declared_click_through_urls_Valid() const;

    QList<QString> getDeclaredRestrictedCategories() const;
    void setDeclaredRestrictedCategories(const QList<QString> &declared_restricted_categories);
    bool is_declared_restricted_categories_Set() const;
    bool is_declared_restricted_categories_Valid() const;

    QList<qint32> getDeclaredVendorIds() const;
    void setDeclaredVendorIds(const QList<qint32> &declared_vendor_ids);
    bool is_declared_vendor_ids_Set() const;
    bool is_declared_vendor_ids_Valid() const;

    OAIHtmlContent getHtml() const;
    void setHtml(const OAIHtmlContent &html);
    bool is_html_Set() const;
    bool is_html_Valid() const;

    QList<QString> getImpressionTrackingUrls() const;
    void setImpressionTrackingUrls(const QList<QString> &impression_tracking_urls);
    bool is_impression_tracking_urls_Set() const;
    bool is_impression_tracking_urls_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINativeContent getNative() const;
    void setNative(const OAINativeContent &native);
    bool is_native_Set() const;
    bool is_native_Valid() const;

    QString getRenderUrl() const;
    void setRenderUrl(const QString &render_url);
    bool is_render_url_Set() const;
    bool is_render_url_Valid() const;

    Q_DECL_DEPRECATED QList<QString> getRestrictedCategories() const;
    Q_DECL_DEPRECATED void setRestrictedCategories(const QList<QString> &restricted_categories);
    Q_DECL_DEPRECATED bool is_restricted_categories_Set() const;
    Q_DECL_DEPRECATED bool is_restricted_categories_Valid() const;

    Q_DECL_DEPRECATED qint32 getVersion() const;
    Q_DECL_DEPRECATED void setVersion(const qint32 &version);
    Q_DECL_DEPRECATED bool is_version_Set() const;
    Q_DECL_DEPRECATED bool is_version_Valid() const;

    OAIVideoContent getVideo() const;
    void setVideo(const OAIVideoContent &video);
    bool is_video_Set() const;
    bool is_video_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_ad_choices_destination_url;
    bool m_ad_choices_destination_url_isSet;
    bool m_ad_choices_destination_url_isValid;

    QString m_advertiser_name;
    bool m_advertiser_name_isSet;
    bool m_advertiser_name_isValid;

    QString m_agency_id;
    bool m_agency_id_isSet;
    bool m_agency_id_isValid;

    QString m_api_update_time;
    bool m_api_update_time_isSet;
    bool m_api_update_time_isValid;

    QString m_creative_format;
    bool m_creative_format_isSet;
    bool m_creative_format_isValid;

    QString m_creative_id;
    bool m_creative_id_isSet;
    bool m_creative_id_isValid;

    OAICreativeServingDecision m_creative_serving_decision;
    bool m_creative_serving_decision_isSet;
    bool m_creative_serving_decision_isValid;

    QList<QString> m_deal_ids;
    bool m_deal_ids_isSet;
    bool m_deal_ids_isValid;

    QList<QString> m_declared_attributes;
    bool m_declared_attributes_isSet;
    bool m_declared_attributes_isValid;

    QList<QString> m_declared_click_through_urls;
    bool m_declared_click_through_urls_isSet;
    bool m_declared_click_through_urls_isValid;

    QList<QString> m_declared_restricted_categories;
    bool m_declared_restricted_categories_isSet;
    bool m_declared_restricted_categories_isValid;

    QList<qint32> m_declared_vendor_ids;
    bool m_declared_vendor_ids_isSet;
    bool m_declared_vendor_ids_isValid;

    OAIHtmlContent m_html;
    bool m_html_isSet;
    bool m_html_isValid;

    QList<QString> m_impression_tracking_urls;
    bool m_impression_tracking_urls_isSet;
    bool m_impression_tracking_urls_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINativeContent m_native;
    bool m_native_isSet;
    bool m_native_isValid;

    QString m_render_url;
    bool m_render_url_isSet;
    bool m_render_url_isValid;

    QList<QString> m_restricted_categories;
    bool m_restricted_categories_isSet;
    bool m_restricted_categories_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    OAIVideoContent m_video;
    bool m_video_isSet;
    bool m_video_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreative)

#endif // OAICreative_H
