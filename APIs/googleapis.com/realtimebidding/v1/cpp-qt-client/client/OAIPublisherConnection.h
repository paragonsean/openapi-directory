/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPublisherConnection.h
 *
 * An Open Bidding exchange&#39;s connection to a publisher. This is initiated by the publisher for the bidder to review. If approved by the bidder, this means that the bidder agrees to receive bid requests from the publisher.
 */

#ifndef OAIPublisherConnection_H
#define OAIPublisherConnection_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPublisherConnection : public OAIObject {
public:
    OAIPublisherConnection();
    OAIPublisherConnection(QString json);
    ~OAIPublisherConnection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBiddingState() const;
    void setBiddingState(const QString &bidding_state);
    bool is_bidding_state_Set() const;
    bool is_bidding_state_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPublisherPlatform() const;
    void setPublisherPlatform(const QString &publisher_platform);
    bool is_publisher_platform_Set() const;
    bool is_publisher_platform_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bidding_state;
    bool m_bidding_state_isSet;
    bool m_bidding_state_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_publisher_platform;
    bool m_publisher_platform_isSet;
    bool m_publisher_platform_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPublisherConnection)

#endif // OAIPublisherConnection_H
