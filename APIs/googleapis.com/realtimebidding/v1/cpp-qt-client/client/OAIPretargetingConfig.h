/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPretargetingConfig.h
 *
 * Pretargeting configuration: a set of targeting dimensions applied at the pretargeting stage of the RTB funnel. These control which inventory a bidder will receive bid requests for.
 */

#ifndef OAIPretargetingConfig_H
#define OAIPretargetingConfig_H

#include <QJsonObject>

#include "OAIAppTargeting.h"
#include "OAICreativeDimensions.h"
#include "OAINumericTargetingDimension.h"
#include "OAIStringTargetingDimension.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAppTargeting;
class OAINumericTargetingDimension;
class OAICreativeDimensions;
class OAIStringTargetingDimension;

class OAIPretargetingConfig : public OAIObject {
public:
    OAIPretargetingConfig();
    OAIPretargetingConfig(QString json);
    ~OAIPretargetingConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedUserTargetingModes() const;
    void setAllowedUserTargetingModes(const QList<QString> &allowed_user_targeting_modes);
    bool is_allowed_user_targeting_modes_Set() const;
    bool is_allowed_user_targeting_modes_Valid() const;

    OAIAppTargeting getAppTargeting() const;
    void setAppTargeting(const OAIAppTargeting &app_targeting);
    bool is_app_targeting_Set() const;
    bool is_app_targeting_Valid() const;

    QString getBillingId() const;
    void setBillingId(const QString &billing_id);
    bool is_billing_id_Set() const;
    bool is_billing_id_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<QString> getExcludedContentLabelIds() const;
    void setExcludedContentLabelIds(const QList<QString> &excluded_content_label_ids);
    bool is_excluded_content_label_ids_Set() const;
    bool is_excluded_content_label_ids_Valid() const;

    OAINumericTargetingDimension getGeoTargeting() const;
    void setGeoTargeting(const OAINumericTargetingDimension &geo_targeting);
    bool is_geo_targeting_Set() const;
    bool is_geo_targeting_Valid() const;

    QList<OAICreativeDimensions> getIncludedCreativeDimensions() const;
    void setIncludedCreativeDimensions(const QList<OAICreativeDimensions> &included_creative_dimensions);
    bool is_included_creative_dimensions_Set() const;
    bool is_included_creative_dimensions_Valid() const;

    QList<QString> getIncludedEnvironments() const;
    void setIncludedEnvironments(const QList<QString> &included_environments);
    bool is_included_environments_Set() const;
    bool is_included_environments_Valid() const;

    QList<QString> getIncludedFormats() const;
    void setIncludedFormats(const QList<QString> &included_formats);
    bool is_included_formats_Set() const;
    bool is_included_formats_Valid() const;

    QList<QString> getIncludedLanguages() const;
    void setIncludedLanguages(const QList<QString> &included_languages);
    bool is_included_languages_Set() const;
    bool is_included_languages_Valid() const;

    QList<QString> getIncludedMobileOperatingSystemIds() const;
    void setIncludedMobileOperatingSystemIds(const QList<QString> &included_mobile_operating_system_ids);
    bool is_included_mobile_operating_system_ids_Set() const;
    bool is_included_mobile_operating_system_ids_Valid() const;

    QList<QString> getIncludedPlatforms() const;
    void setIncludedPlatforms(const QList<QString> &included_platforms);
    bool is_included_platforms_Set() const;
    bool is_included_platforms_Valid() const;

    QList<QString> getIncludedUserIdTypes() const;
    void setIncludedUserIdTypes(const QList<QString> &included_user_id_types);
    bool is_included_user_id_types_Set() const;
    bool is_included_user_id_types_Valid() const;

    QString getInterstitialTargeting() const;
    void setInterstitialTargeting(const QString &interstitial_targeting);
    bool is_interstitial_targeting_Set() const;
    bool is_interstitial_targeting_Valid() const;

    QList<QString> getInvalidGeoIds() const;
    void setInvalidGeoIds(const QList<QString> &invalid_geo_ids);
    bool is_invalid_geo_ids_Set() const;
    bool is_invalid_geo_ids_Valid() const;

    QString getMaximumQps() const;
    void setMaximumQps(const QString &maximum_qps);
    bool is_maximum_qps_Set() const;
    bool is_maximum_qps_Valid() const;

    qint32 getMinimumViewabilityDecile() const;
    void setMinimumViewabilityDecile(const qint32 &minimum_viewability_decile);
    bool is_minimum_viewability_decile_Set() const;
    bool is_minimum_viewability_decile_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIStringTargetingDimension getPublisherTargeting() const;
    void setPublisherTargeting(const OAIStringTargetingDimension &publisher_targeting);
    bool is_publisher_targeting_Set() const;
    bool is_publisher_targeting_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAINumericTargetingDimension getUserListTargeting() const;
    void setUserListTargeting(const OAINumericTargetingDimension &user_list_targeting);
    bool is_user_list_targeting_Set() const;
    bool is_user_list_targeting_Valid() const;

    OAINumericTargetingDimension getVerticalTargeting() const;
    void setVerticalTargeting(const OAINumericTargetingDimension &vertical_targeting);
    bool is_vertical_targeting_Set() const;
    bool is_vertical_targeting_Valid() const;

    OAIStringTargetingDimension getWebTargeting() const;
    void setWebTargeting(const OAIStringTargetingDimension &web_targeting);
    bool is_web_targeting_Set() const;
    bool is_web_targeting_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_user_targeting_modes;
    bool m_allowed_user_targeting_modes_isSet;
    bool m_allowed_user_targeting_modes_isValid;

    OAIAppTargeting m_app_targeting;
    bool m_app_targeting_isSet;
    bool m_app_targeting_isValid;

    QString m_billing_id;
    bool m_billing_id_isSet;
    bool m_billing_id_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<QString> m_excluded_content_label_ids;
    bool m_excluded_content_label_ids_isSet;
    bool m_excluded_content_label_ids_isValid;

    OAINumericTargetingDimension m_geo_targeting;
    bool m_geo_targeting_isSet;
    bool m_geo_targeting_isValid;

    QList<OAICreativeDimensions> m_included_creative_dimensions;
    bool m_included_creative_dimensions_isSet;
    bool m_included_creative_dimensions_isValid;

    QList<QString> m_included_environments;
    bool m_included_environments_isSet;
    bool m_included_environments_isValid;

    QList<QString> m_included_formats;
    bool m_included_formats_isSet;
    bool m_included_formats_isValid;

    QList<QString> m_included_languages;
    bool m_included_languages_isSet;
    bool m_included_languages_isValid;

    QList<QString> m_included_mobile_operating_system_ids;
    bool m_included_mobile_operating_system_ids_isSet;
    bool m_included_mobile_operating_system_ids_isValid;

    QList<QString> m_included_platforms;
    bool m_included_platforms_isSet;
    bool m_included_platforms_isValid;

    QList<QString> m_included_user_id_types;
    bool m_included_user_id_types_isSet;
    bool m_included_user_id_types_isValid;

    QString m_interstitial_targeting;
    bool m_interstitial_targeting_isSet;
    bool m_interstitial_targeting_isValid;

    QList<QString> m_invalid_geo_ids;
    bool m_invalid_geo_ids_isSet;
    bool m_invalid_geo_ids_isValid;

    QString m_maximum_qps;
    bool m_maximum_qps_isSet;
    bool m_maximum_qps_isValid;

    qint32 m_minimum_viewability_decile;
    bool m_minimum_viewability_decile_isSet;
    bool m_minimum_viewability_decile_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIStringTargetingDimension m_publisher_targeting;
    bool m_publisher_targeting_isSet;
    bool m_publisher_targeting_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAINumericTargetingDimension m_user_list_targeting;
    bool m_user_list_targeting_isSet;
    bool m_user_list_targeting_isValid;

    OAINumericTargetingDimension m_vertical_targeting;
    bool m_vertical_targeting_isSet;
    bool m_vertical_targeting_isValid;

    OAIStringTargetingDimension m_web_targeting;
    bool m_web_targeting_isSet;
    bool m_web_targeting_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPretargetingConfig)

#endif // OAIPretargetingConfig_H
