/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDownloadSizeEvidence.h
 *
 * Total download size and URL-level download size breakdown for resources in a creative.
 */

#ifndef OAIDownloadSizeEvidence_H
#define OAIDownloadSizeEvidence_H

#include <QJsonObject>

#include "OAIUrlDownloadSize.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUrlDownloadSize;

class OAIDownloadSizeEvidence : public OAIObject {
public:
    OAIDownloadSizeEvidence();
    OAIDownloadSizeEvidence(QString json);
    ~OAIDownloadSizeEvidence() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIUrlDownloadSize> getTopUrlDownloadSizeBreakdowns() const;
    void setTopUrlDownloadSizeBreakdowns(const QList<OAIUrlDownloadSize> &top_url_download_size_breakdowns);
    bool is_top_url_download_size_breakdowns_Set() const;
    bool is_top_url_download_size_breakdowns_Valid() const;

    qint32 getTotalDownloadSizeKb() const;
    void setTotalDownloadSizeKb(const qint32 &total_download_size_kb);
    bool is_total_download_size_kb_Set() const;
    bool is_total_download_size_kb_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIUrlDownloadSize> m_top_url_download_size_breakdowns;
    bool m_top_url_download_size_breakdowns_isSet;
    bool m_top_url_download_size_breakdowns_isValid;

    qint32 m_total_download_size_kb;
    bool m_total_download_size_kb_isSet;
    bool m_total_download_size_kb_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDownloadSizeEvidence)

#endif // OAIDownloadSizeEvidence_H
