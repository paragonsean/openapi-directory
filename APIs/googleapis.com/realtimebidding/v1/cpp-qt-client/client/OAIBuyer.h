/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBuyer.h
 *
 * RTB Buyer account information.
 */

#ifndef OAIBuyer_H
#define OAIBuyer_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBuyer : public OAIObject {
public:
    OAIBuyer();
    OAIBuyer(QString json);
    ~OAIBuyer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActiveCreativeCount() const;
    void setActiveCreativeCount(const QString &active_creative_count);
    bool is_active_creative_count_Set() const;
    bool is_active_creative_count_Valid() const;

    QString getBidder() const;
    void setBidder(const QString &bidder);
    bool is_bidder_Set() const;
    bool is_bidder_Valid() const;

    QList<QString> getBillingIds() const;
    void setBillingIds(const QList<QString> &billing_ids);
    bool is_billing_ids_Set() const;
    bool is_billing_ids_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getMaximumActiveCreativeCount() const;
    void setMaximumActiveCreativeCount(const QString &maximum_active_creative_count);
    bool is_maximum_active_creative_count_Set() const;
    bool is_maximum_active_creative_count_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active_creative_count;
    bool m_active_creative_count_isSet;
    bool m_active_creative_count_isValid;

    QString m_bidder;
    bool m_bidder_isSet;
    bool m_bidder_isValid;

    QList<QString> m_billing_ids;
    bool m_billing_ids_isSet;
    bool m_billing_ids_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_maximum_active_creative_count;
    bool m_maximum_active_creative_count_isSet;
    bool m_maximum_active_creative_count_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBuyer)

#endif // OAIBuyer_H
