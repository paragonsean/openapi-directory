/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUrlDownloadSize.h
 *
 * The URL-level breakdown for the download size.
 */

#ifndef OAIUrlDownloadSize_H
#define OAIUrlDownloadSize_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUrlDownloadSize : public OAIObject {
public:
    OAIUrlDownloadSize();
    OAIUrlDownloadSize(QString json);
    ~OAIUrlDownloadSize() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDownloadSizeKb() const;
    void setDownloadSizeKb(const qint32 &download_size_kb);
    bool is_download_size_kb_Set() const;
    bool is_download_size_kb_Valid() const;

    QString getNormalizedUrl() const;
    void setNormalizedUrl(const QString &normalized_url);
    bool is_normalized_url_Set() const;
    bool is_normalized_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_download_size_kb;
    bool m_download_size_kb_isSet;
    bool m_download_size_kb_isValid;

    QString m_normalized_url;
    bool m_normalized_url_isSet;
    bool m_normalized_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUrlDownloadSize)

#endif // OAIUrlDownloadSize_H
