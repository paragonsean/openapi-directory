/**
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWatchCreativesResponse.h
 *
 * A response for the request to receive push notification when a bidder&#39;s creatives change status.
 */

#ifndef OAIWatchCreativesResponse_H
#define OAIWatchCreativesResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWatchCreativesResponse : public OAIObject {
public:
    OAIWatchCreativesResponse();
    OAIWatchCreativesResponse(QString json);
    ~OAIWatchCreativesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSubscription() const;
    void setSubscription(const QString &subscription);
    bool is_subscription_Set() const;
    bool is_subscription_Valid() const;

    QString getTopic() const;
    void setTopic(const QString &topic);
    bool is_topic_Set() const;
    bool is_topic_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_subscription;
    bool m_subscription_isSet;
    bool m_subscription_isValid;

    QString m_topic;
    bool m_topic_isSet;
    bool m_topic_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWatchCreativesResponse)

#endif // OAIWatchCreativesResponse_H
