# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UrlDownloadSize(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, download_size_kb: int=None, normalized_url: str=None):
        """UrlDownloadSize - a model defined in OpenAPI

        :param download_size_kb: The download_size_kb of this UrlDownloadSize.
        :param normalized_url: The normalized_url of this UrlDownloadSize.
        """
        self.openapi_types = {
            'download_size_kb': int,
            'normalized_url': str
        }

        self.attribute_map = {
            'download_size_kb': 'downloadSizeKb',
            'normalized_url': 'normalizedUrl'
        }

        self._download_size_kb = download_size_kb
        self._normalized_url = normalized_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UrlDownloadSize':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UrlDownloadSize of this UrlDownloadSize.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def download_size_kb(self):
        """Gets the download_size_kb of this UrlDownloadSize.

        Download size of the URL in kilobytes.

        :return: The download_size_kb of this UrlDownloadSize.
        :rtype: int
        """
        return self._download_size_kb

    @download_size_kb.setter
    def download_size_kb(self, download_size_kb):
        """Sets the download_size_kb of this UrlDownloadSize.

        Download size of the URL in kilobytes.

        :param download_size_kb: The download_size_kb of this UrlDownloadSize.
        :type download_size_kb: int
        """

        self._download_size_kb = download_size_kb

    @property
    def normalized_url(self):
        """Gets the normalized_url of this UrlDownloadSize.

        The normalized URL with query parameters and fragment removed.

        :return: The normalized_url of this UrlDownloadSize.
        :rtype: str
        """
        return self._normalized_url

    @normalized_url.setter
    def normalized_url(self, normalized_url):
        """Sets the normalized_url of this UrlDownloadSize.

        The normalized URL with query parameters and fragment removed.

        :param normalized_url: The normalized_url of this UrlDownloadSize.
        :type normalized_url: str
        """

        self._normalized_url = normalized_url
