# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdvertiserAndBrand(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advertiser_id: str=None, advertiser_name: str=None, brand_id: str=None, brand_name: str=None):
        """AdvertiserAndBrand - a model defined in OpenAPI

        :param advertiser_id: The advertiser_id of this AdvertiserAndBrand.
        :param advertiser_name: The advertiser_name of this AdvertiserAndBrand.
        :param brand_id: The brand_id of this AdvertiserAndBrand.
        :param brand_name: The brand_name of this AdvertiserAndBrand.
        """
        self.openapi_types = {
            'advertiser_id': str,
            'advertiser_name': str,
            'brand_id': str,
            'brand_name': str
        }

        self.attribute_map = {
            'advertiser_id': 'advertiserId',
            'advertiser_name': 'advertiserName',
            'brand_id': 'brandId',
            'brand_name': 'brandName'
        }

        self._advertiser_id = advertiser_id
        self._advertiser_name = advertiser_name
        self._brand_id = brand_id
        self._brand_name = brand_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvertiserAndBrand':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvertiserAndBrand of this AdvertiserAndBrand.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this AdvertiserAndBrand.

        See https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt for the list of possible values. Can be used to filter the response of the creatives.list method.

        :return: The advertiser_id of this AdvertiserAndBrand.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this AdvertiserAndBrand.

        See https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt for the list of possible values. Can be used to filter the response of the creatives.list method.

        :param advertiser_id: The advertiser_id of this AdvertiserAndBrand.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def advertiser_name(self):
        """Gets the advertiser_name of this AdvertiserAndBrand.

        Advertiser name. Can be used to filter the response of the creatives.list method.

        :return: The advertiser_name of this AdvertiserAndBrand.
        :rtype: str
        """
        return self._advertiser_name

    @advertiser_name.setter
    def advertiser_name(self, advertiser_name):
        """Sets the advertiser_name of this AdvertiserAndBrand.

        Advertiser name. Can be used to filter the response of the creatives.list method.

        :param advertiser_name: The advertiser_name of this AdvertiserAndBrand.
        :type advertiser_name: str
        """

        self._advertiser_name = advertiser_name

    @property
    def brand_id(self):
        """Gets the brand_id of this AdvertiserAndBrand.

        Detected brand ID or zero if no brand has been detected. See https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt for the list of possible values. Can be used to filter the response of the creatives.list method.

        :return: The brand_id of this AdvertiserAndBrand.
        :rtype: str
        """
        return self._brand_id

    @brand_id.setter
    def brand_id(self, brand_id):
        """Sets the brand_id of this AdvertiserAndBrand.

        Detected brand ID or zero if no brand has been detected. See https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt for the list of possible values. Can be used to filter the response of the creatives.list method.

        :param brand_id: The brand_id of this AdvertiserAndBrand.
        :type brand_id: str
        """

        self._brand_id = brand_id

    @property
    def brand_name(self):
        """Gets the brand_name of this AdvertiserAndBrand.

        Brand name. Can be used to filter the response of the creatives.list method.

        :return: The brand_name of this AdvertiserAndBrand.
        :rtype: str
        """
        return self._brand_name

    @brand_name.setter
    def brand_name(self, brand_name):
        """Sets the brand_name of this AdvertiserAndBrand.

        Brand name. Can be used to filter the response of the creatives.list method.

        :param brand_name: The brand_name of this AdvertiserAndBrand.
        :type brand_name: str
        """

        self._brand_name = brand_name
