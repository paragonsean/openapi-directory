# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.url_download_size import UrlDownloadSize
from openapi_server import util


class DownloadSizeEvidence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, top_url_download_size_breakdowns: List[UrlDownloadSize]=None, total_download_size_kb: int=None):
        """DownloadSizeEvidence - a model defined in OpenAPI

        :param top_url_download_size_breakdowns: The top_url_download_size_breakdowns of this DownloadSizeEvidence.
        :param total_download_size_kb: The total_download_size_kb of this DownloadSizeEvidence.
        """
        self.openapi_types = {
            'top_url_download_size_breakdowns': List[UrlDownloadSize],
            'total_download_size_kb': int
        }

        self.attribute_map = {
            'top_url_download_size_breakdowns': 'topUrlDownloadSizeBreakdowns',
            'total_download_size_kb': 'totalDownloadSizeKb'
        }

        self._top_url_download_size_breakdowns = top_url_download_size_breakdowns
        self._total_download_size_kb = total_download_size_kb

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DownloadSizeEvidence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DownloadSizeEvidence of this DownloadSizeEvidence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def top_url_download_size_breakdowns(self):
        """Gets the top_url_download_size_breakdowns of this DownloadSizeEvidence.

        Download size broken down by URLs with the top download size.

        :return: The top_url_download_size_breakdowns of this DownloadSizeEvidence.
        :rtype: List[UrlDownloadSize]
        """
        return self._top_url_download_size_breakdowns

    @top_url_download_size_breakdowns.setter
    def top_url_download_size_breakdowns(self, top_url_download_size_breakdowns):
        """Sets the top_url_download_size_breakdowns of this DownloadSizeEvidence.

        Download size broken down by URLs with the top download size.

        :param top_url_download_size_breakdowns: The top_url_download_size_breakdowns of this DownloadSizeEvidence.
        :type top_url_download_size_breakdowns: List[UrlDownloadSize]
        """

        self._top_url_download_size_breakdowns = top_url_download_size_breakdowns

    @property
    def total_download_size_kb(self):
        """Gets the total_download_size_kb of this DownloadSizeEvidence.

        Total download size (in kilobytes) for all the resources in the creative.

        :return: The total_download_size_kb of this DownloadSizeEvidence.
        :rtype: int
        """
        return self._total_download_size_kb

    @total_download_size_kb.setter
    def total_download_size_kb(self, total_download_size_kb):
        """Sets the total_download_size_kb of this DownloadSizeEvidence.

        Total download size (in kilobytes) for all the resources in the creative.

        :param total_download_size_kb: The total_download_size_kb of this DownloadSizeEvidence.
        :type total_download_size_kb: int
        """

        self._total_download_size_kb = total_download_size_kb
