# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_date import ModelDate
from openapi_server import util


class UrlRestriction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_date: ModelDate=None, restriction_type: str=None, start_date: ModelDate=None, url: str=None):
        """UrlRestriction - a model defined in OpenAPI

        :param end_date: The end_date of this UrlRestriction.
        :param restriction_type: The restriction_type of this UrlRestriction.
        :param start_date: The start_date of this UrlRestriction.
        :param url: The url of this UrlRestriction.
        """
        self.openapi_types = {
            'end_date': ModelDate,
            'restriction_type': str,
            'start_date': ModelDate,
            'url': str
        }

        self.attribute_map = {
            'end_date': 'endDate',
            'restriction_type': 'restrictionType',
            'start_date': 'startDate',
            'url': 'url'
        }

        self._end_date = end_date
        self._restriction_type = restriction_type
        self._start_date = start_date
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UrlRestriction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UrlRestriction of this UrlRestriction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_date(self):
        """Gets the end_date of this UrlRestriction.


        :return: The end_date of this UrlRestriction.
        :rtype: ModelDate
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this UrlRestriction.


        :param end_date: The end_date of this UrlRestriction.
        :type end_date: ModelDate
        """

        self._end_date = end_date

    @property
    def restriction_type(self):
        """Gets the restriction_type of this UrlRestriction.

        The restriction type for the specified URL.

        :return: The restriction_type of this UrlRestriction.
        :rtype: str
        """
        return self._restriction_type

    @restriction_type.setter
    def restriction_type(self, restriction_type):
        """Sets the restriction_type of this UrlRestriction.

        The restriction type for the specified URL.

        :param restriction_type: The restriction_type of this UrlRestriction.
        :type restriction_type: str
        """
        allowed_values = ["RESTRICTION_TYPE_UNSPECIFIED", "CONTAINS", "EQUALS", "STARTS_WITH", "ENDS_WITH", "DOES_NOT_EQUAL", "DOES_NOT_CONTAIN", "DOES_NOT_START_WITH", "DOES_NOT_END_WITH"]  # noqa: E501
        if restriction_type not in allowed_values:
            raise ValueError(
                "Invalid value for `restriction_type` ({0}), must be one of {1}"
                .format(restriction_type, allowed_values)
            )

        self._restriction_type = restriction_type

    @property
    def start_date(self):
        """Gets the start_date of this UrlRestriction.


        :return: The start_date of this UrlRestriction.
        :rtype: ModelDate
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this UrlRestriction.


        :param start_date: The start_date of this UrlRestriction.
        :type start_date: ModelDate
        """

        self._start_date = start_date

    @property
    def url(self):
        """Gets the url of this UrlRestriction.

        Required. The URL to use for applying the restriction on the user list.

        :return: The url of this UrlRestriction.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this UrlRestriction.

        Required. The URL to use for applying the restriction on the user list.

        :param url: The url of this UrlRestriction.
        :type url: str
        """

        self._url = url
