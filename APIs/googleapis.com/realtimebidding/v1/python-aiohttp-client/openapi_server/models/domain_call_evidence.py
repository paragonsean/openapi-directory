# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.domain_calls import DomainCalls
from openapi_server import util


class DomainCallEvidence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, top_http_call_domains: List[DomainCalls]=None, total_http_call_count: int=None):
        """DomainCallEvidence - a model defined in OpenAPI

        :param top_http_call_domains: The top_http_call_domains of this DomainCallEvidence.
        :param total_http_call_count: The total_http_call_count of this DomainCallEvidence.
        """
        self.openapi_types = {
            'top_http_call_domains': List[DomainCalls],
            'total_http_call_count': int
        }

        self.attribute_map = {
            'top_http_call_domains': 'topHttpCallDomains',
            'total_http_call_count': 'totalHttpCallCount'
        }

        self._top_http_call_domains = top_http_call_domains
        self._total_http_call_count = total_http_call_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainCallEvidence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainCallEvidence of this DomainCallEvidence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def top_http_call_domains(self):
        """Gets the top_http_call_domains of this DomainCallEvidence.

        Breakdown of the most frequent domains called through HTTP by the creative.

        :return: The top_http_call_domains of this DomainCallEvidence.
        :rtype: List[DomainCalls]
        """
        return self._top_http_call_domains

    @top_http_call_domains.setter
    def top_http_call_domains(self, top_http_call_domains):
        """Sets the top_http_call_domains of this DomainCallEvidence.

        Breakdown of the most frequent domains called through HTTP by the creative.

        :param top_http_call_domains: The top_http_call_domains of this DomainCallEvidence.
        :type top_http_call_domains: List[DomainCalls]
        """

        self._top_http_call_domains = top_http_call_domains

    @property
    def total_http_call_count(self):
        """Gets the total_http_call_count of this DomainCallEvidence.

        The total number of HTTP calls made by the creative, including but not limited to the number of calls in the top_http_call_domains.

        :return: The total_http_call_count of this DomainCallEvidence.
        :rtype: int
        """
        return self._total_http_call_count

    @total_http_call_count.setter
    def total_http_call_count(self, total_http_call_count):
        """Sets the total_http_call_count of this DomainCallEvidence.

        The total number of HTTP calls made by the creative, including but not limited to the number of calls in the top_http_call_domains.

        :param total_http_call_count: The total_http_call_count of this DomainCallEvidence.
        :type total_http_call_count: int
        """

        self._total_http_call_count = total_http_call_count
