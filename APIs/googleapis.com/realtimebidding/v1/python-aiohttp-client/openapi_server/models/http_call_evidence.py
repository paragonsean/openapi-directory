# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HttpCallEvidence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, urls: List[str]=None):
        """HttpCallEvidence - a model defined in OpenAPI

        :param urls: The urls of this HttpCallEvidence.
        """
        self.openapi_types = {
            'urls': List[str]
        }

        self.attribute_map = {
            'urls': 'urls'
        }

        self._urls = urls

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HttpCallEvidence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HttpCallEvidence of this HttpCallEvidence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def urls(self):
        """Gets the urls of this HttpCallEvidence.

        URLs of HTTP calls made by the creative.

        :return: The urls of this HttpCallEvidence.
        :rtype: List[str]
        """
        return self._urls

    @urls.setter
    def urls(self, urls):
        """Sets the urls of this HttpCallEvidence.

        URLs of HTTP calls made by the creative.

        :param urls: The urls of this HttpCallEvidence.
        :type urls: List[str]
        """

        self._urls = urls
