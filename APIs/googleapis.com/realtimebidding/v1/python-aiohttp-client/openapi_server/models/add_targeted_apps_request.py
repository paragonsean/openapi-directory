# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddTargetedAppsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_ids: List[str]=None, targeting_mode: str=None):
        """AddTargetedAppsRequest - a model defined in OpenAPI

        :param app_ids: The app_ids of this AddTargetedAppsRequest.
        :param targeting_mode: The targeting_mode of this AddTargetedAppsRequest.
        """
        self.openapi_types = {
            'app_ids': List[str],
            'targeting_mode': str
        }

        self.attribute_map = {
            'app_ids': 'appIds',
            'targeting_mode': 'targetingMode'
        }

        self._app_ids = app_ids
        self._targeting_mode = targeting_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddTargetedAppsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddTargetedAppsRequest of this AddTargetedAppsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_ids(self):
        """Gets the app_ids of this AddTargetedAppsRequest.

        A list of app IDs to target in the pretargeting configuration. These values will be added to the list of targeted app IDs in PretargetingConfig.appTargeting.mobileAppTargeting.values.

        :return: The app_ids of this AddTargetedAppsRequest.
        :rtype: List[str]
        """
        return self._app_ids

    @app_ids.setter
    def app_ids(self, app_ids):
        """Sets the app_ids of this AddTargetedAppsRequest.

        A list of app IDs to target in the pretargeting configuration. These values will be added to the list of targeted app IDs in PretargetingConfig.appTargeting.mobileAppTargeting.values.

        :param app_ids: The app_ids of this AddTargetedAppsRequest.
        :type app_ids: List[str]
        """

        self._app_ids = app_ids

    @property
    def targeting_mode(self):
        """Gets the targeting_mode of this AddTargetedAppsRequest.

        Required. The targeting mode that should be applied to the list of app IDs. If there are existing targeted app IDs, must be equal to the existing PretargetingConfig.appTargeting.mobileAppTargeting.targetingMode or a 400 bad request error will be returned.

        :return: The targeting_mode of this AddTargetedAppsRequest.
        :rtype: str
        """
        return self._targeting_mode

    @targeting_mode.setter
    def targeting_mode(self, targeting_mode):
        """Sets the targeting_mode of this AddTargetedAppsRequest.

        Required. The targeting mode that should be applied to the list of app IDs. If there are existing targeted app IDs, must be equal to the existing PretargetingConfig.appTargeting.mobileAppTargeting.targetingMode or a 400 bad request error will be returned.

        :param targeting_mode: The targeting_mode of this AddTargetedAppsRequest.
        :type targeting_mode: str
        """
        allowed_values = ["TARGETING_MODE_UNSPECIFIED", "INCLUSIVE", "EXCLUSIVE"]  # noqa: E501
        if targeting_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `targeting_mode` ({0}), must be one of {1}"
                .format(targeting_mode, allowed_values)
            )

        self._targeting_mode = targeting_mode
