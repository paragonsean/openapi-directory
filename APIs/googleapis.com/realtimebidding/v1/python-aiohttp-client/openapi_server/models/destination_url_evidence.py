# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinationUrlEvidence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_url: str=None):
        """DestinationUrlEvidence - a model defined in OpenAPI

        :param destination_url: The destination_url of this DestinationUrlEvidence.
        """
        self.openapi_types = {
            'destination_url': str
        }

        self.attribute_map = {
            'destination_url': 'destinationUrl'
        }

        self._destination_url = destination_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinationUrlEvidence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DestinationUrlEvidence of this DestinationUrlEvidence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_url(self):
        """Gets the destination_url of this DestinationUrlEvidence.

        The full landing page URL of the destination.

        :return: The destination_url of this DestinationUrlEvidence.
        :rtype: str
        """
        return self._destination_url

    @destination_url.setter
    def destination_url(self, destination_url):
        """Sets the destination_url of this DestinationUrlEvidence.

        The full landing page URL of the destination.

        :param destination_url: The destination_url of this DestinationUrlEvidence.
        :type destination_url: str
        """

        self._destination_url = destination_url
