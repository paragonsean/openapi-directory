/*
 * Real-time Bidding API
 * Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The list of detected Ad Technology Providers for this creative. Bids placed for inventory that will serve to EEA or UK users are expected to comply with GDPR requirements. You must ensure that the creatives used in such bids should contain only user consented ad technology providers as indicated in the bid request. Google reserves the right to filter non-compliant bids. User consented ad technology providers can be found in the [Google Protocol](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) with the &#x60;BidRequest.adslot.consented_providers_settings&#x60; field, and can be found as an [OpenRTB extension](https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto) with the &#x60;BidRequest.user.ext.consented_providers_settings&#x60; and &#x60;BidRequest.user.ext.consent&#x60; fields. See https://support.google.com/authorizedbuyers/answer/9789378 for additional information about the Google TCF v2 integration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:57.718525-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdTechnologyProviders {
  public static final String SERIALIZED_NAME_DETECTED_GVL_IDS = "detectedGvlIds";
  @SerializedName(SERIALIZED_NAME_DETECTED_GVL_IDS)
  private List<String> detectedGvlIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_DETECTED_PROVIDER_IDS = "detectedProviderIds";
  @SerializedName(SERIALIZED_NAME_DETECTED_PROVIDER_IDS)
  private List<String> detectedProviderIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_UNIDENTIFIED_PROVIDER_DOMAINS = "unidentifiedProviderDomains";
  @SerializedName(SERIALIZED_NAME_UNIDENTIFIED_PROVIDER_DOMAINS)
  private List<String> unidentifiedProviderDomains = new ArrayList<>();

  public AdTechnologyProviders() {
  }

  public AdTechnologyProviders detectedGvlIds(List<String> detectedGvlIds) {
    this.detectedGvlIds = detectedGvlIds;
    return this;
  }

  public AdTechnologyProviders addDetectedGvlIdsItem(String detectedGvlIdsItem) {
    if (this.detectedGvlIds == null) {
      this.detectedGvlIds = new ArrayList<>();
    }
    this.detectedGvlIds.add(detectedGvlIdsItem);
    return this;
  }

  /**
   * The detected IAB Global Vendor List (GVL) IDs for this creative. See the IAB Global Vendor List at https://vendor-list.consensu.org/v2/vendor-list.json for details about the vendors.
   * @return detectedGvlIds
   */
  @javax.annotation.Nullable
  public List<String> getDetectedGvlIds() {
    return detectedGvlIds;
  }

  public void setDetectedGvlIds(List<String> detectedGvlIds) {
    this.detectedGvlIds = detectedGvlIds;
  }


  public AdTechnologyProviders detectedProviderIds(List<String> detectedProviderIds) {
    this.detectedProviderIds = detectedProviderIds;
    return this;
  }

  public AdTechnologyProviders addDetectedProviderIdsItem(String detectedProviderIdsItem) {
    if (this.detectedProviderIds == null) {
      this.detectedProviderIds = new ArrayList<>();
    }
    this.detectedProviderIds.add(detectedProviderIdsItem);
    return this;
  }

  /**
   * The detected [Google Ad Tech Providers (ATP)](https://support.google.com/admanager/answer/9012903) for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider.
   * @return detectedProviderIds
   */
  @javax.annotation.Nullable
  public List<String> getDetectedProviderIds() {
    return detectedProviderIds;
  }

  public void setDetectedProviderIds(List<String> detectedProviderIds) {
    this.detectedProviderIds = detectedProviderIds;
  }


  public AdTechnologyProviders unidentifiedProviderDomains(List<String> unidentifiedProviderDomains) {
    this.unidentifiedProviderDomains = unidentifiedProviderDomains;
    return this;
  }

  public AdTechnologyProviders addUnidentifiedProviderDomainsItem(String unidentifiedProviderDomainsItem) {
    if (this.unidentifiedProviderDomains == null) {
      this.unidentifiedProviderDomains = new ArrayList<>();
    }
    this.unidentifiedProviderDomains.add(unidentifiedProviderDomainsItem);
    return this;
  }

  /**
   * Domains of detected unidentified ad technology providers (if any). You must ensure that the creatives used in bids placed for inventory that will serve to EEA or UK users does not contain unidentified ad technology providers. Google reserves the right to filter non-compliant bids.
   * @return unidentifiedProviderDomains
   */
  @javax.annotation.Nullable
  public List<String> getUnidentifiedProviderDomains() {
    return unidentifiedProviderDomains;
  }

  public void setUnidentifiedProviderDomains(List<String> unidentifiedProviderDomains) {
    this.unidentifiedProviderDomains = unidentifiedProviderDomains;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdTechnologyProviders adTechnologyProviders = (AdTechnologyProviders) o;
    return Objects.equals(this.detectedGvlIds, adTechnologyProviders.detectedGvlIds) &&
        Objects.equals(this.detectedProviderIds, adTechnologyProviders.detectedProviderIds) &&
        Objects.equals(this.unidentifiedProviderDomains, adTechnologyProviders.unidentifiedProviderDomains);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detectedGvlIds, detectedProviderIds, unidentifiedProviderDomains);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdTechnologyProviders {\n");
    sb.append("    detectedGvlIds: ").append(toIndentedString(detectedGvlIds)).append("\n");
    sb.append("    detectedProviderIds: ").append(toIndentedString(detectedProviderIds)).append("\n");
    sb.append("    unidentifiedProviderDomains: ").append(toIndentedString(unidentifiedProviderDomains)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("detectedGvlIds");
    openapiFields.add("detectedProviderIds");
    openapiFields.add("unidentifiedProviderDomains");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdTechnologyProviders
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdTechnologyProviders.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdTechnologyProviders is not found in the empty JSON string", AdTechnologyProviders.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdTechnologyProviders.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdTechnologyProviders` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("detectedGvlIds") != null && !jsonObj.get("detectedGvlIds").isJsonNull() && !jsonObj.get("detectedGvlIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `detectedGvlIds` to be an array in the JSON string but got `%s`", jsonObj.get("detectedGvlIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("detectedProviderIds") != null && !jsonObj.get("detectedProviderIds").isJsonNull() && !jsonObj.get("detectedProviderIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `detectedProviderIds` to be an array in the JSON string but got `%s`", jsonObj.get("detectedProviderIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("unidentifiedProviderDomains") != null && !jsonObj.get("unidentifiedProviderDomains").isJsonNull() && !jsonObj.get("unidentifiedProviderDomains").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `unidentifiedProviderDomains` to be an array in the JSON string but got `%s`", jsonObj.get("unidentifiedProviderDomains").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdTechnologyProviders.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdTechnologyProviders' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdTechnologyProviders> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdTechnologyProviders.class));

       return (TypeAdapter<T>) new TypeAdapter<AdTechnologyProviders>() {
           @Override
           public void write(JsonWriter out, AdTechnologyProviders value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdTechnologyProviders read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdTechnologyProviders given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdTechnologyProviders
   * @throws IOException if the JSON string is invalid with respect to AdTechnologyProviders
   */
  public static AdTechnologyProviders fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdTechnologyProviders.class);
  }

  /**
   * Convert an instance of AdTechnologyProviders to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

