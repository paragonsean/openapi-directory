# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.envelope import Envelope
from openapi_server.models.in_toto_statement import InTotoStatement
from openapi_server import util


class DSSEAttestationOccurrence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, envelope: Envelope=None, statement: InTotoStatement=None):
        """DSSEAttestationOccurrence - a model defined in OpenAPI

        :param envelope: The envelope of this DSSEAttestationOccurrence.
        :param statement: The statement of this DSSEAttestationOccurrence.
        """
        self.openapi_types = {
            'envelope': Envelope,
            'statement': InTotoStatement
        }

        self.attribute_map = {
            'envelope': 'envelope',
            'statement': 'statement'
        }

        self._envelope = envelope
        self._statement = statement

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DSSEAttestationOccurrence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DSSEAttestationOccurrence of this DSSEAttestationOccurrence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def envelope(self):
        """Gets the envelope of this DSSEAttestationOccurrence.


        :return: The envelope of this DSSEAttestationOccurrence.
        :rtype: Envelope
        """
        return self._envelope

    @envelope.setter
    def envelope(self, envelope):
        """Sets the envelope of this DSSEAttestationOccurrence.


        :param envelope: The envelope of this DSSEAttestationOccurrence.
        :type envelope: Envelope
        """

        self._envelope = envelope

    @property
    def statement(self):
        """Gets the statement of this DSSEAttestationOccurrence.


        :return: The statement of this DSSEAttestationOccurrence.
        :rtype: InTotoStatement
        """
        return self._statement

    @statement.setter
    def statement(self, statement):
        """Sets the statement of this DSSEAttestationOccurrence.


        :param statement: The statement of this DSSEAttestationOccurrence.
        :type statement: InTotoStatement
        """

        self._statement = statement
