# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.slsa_provenance_v1 import SlsaProvenanceV1
from openapi_server.models.subject import Subject
from openapi_server import util


class InTotoSlsaProvenanceV1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: str=None, predicate: SlsaProvenanceV1=None, predicate_type: str=None, subject: List[Subject]=None):
        """InTotoSlsaProvenanceV1 - a model defined in OpenAPI

        :param type: The type of this InTotoSlsaProvenanceV1.
        :param predicate: The predicate of this InTotoSlsaProvenanceV1.
        :param predicate_type: The predicate_type of this InTotoSlsaProvenanceV1.
        :param subject: The subject of this InTotoSlsaProvenanceV1.
        """
        self.openapi_types = {
            'type': str,
            'predicate': SlsaProvenanceV1,
            'predicate_type': str,
            'subject': List[Subject]
        }

        self.attribute_map = {
            'type': '_type',
            'predicate': 'predicate',
            'predicate_type': 'predicateType',
            'subject': 'subject'
        }

        self._type = type
        self._predicate = predicate
        self._predicate_type = predicate_type
        self._subject = subject

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InTotoSlsaProvenanceV1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InTotoSlsaProvenanceV1 of this InTotoSlsaProvenanceV1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this InTotoSlsaProvenanceV1.

        InToto spec defined at https://github.com/in-toto/attestation/tree/main/spec#statement

        :return: The type of this InTotoSlsaProvenanceV1.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InTotoSlsaProvenanceV1.

        InToto spec defined at https://github.com/in-toto/attestation/tree/main/spec#statement

        :param type: The type of this InTotoSlsaProvenanceV1.
        :type type: str
        """

        self._type = type

    @property
    def predicate(self):
        """Gets the predicate of this InTotoSlsaProvenanceV1.


        :return: The predicate of this InTotoSlsaProvenanceV1.
        :rtype: SlsaProvenanceV1
        """
        return self._predicate

    @predicate.setter
    def predicate(self, predicate):
        """Sets the predicate of this InTotoSlsaProvenanceV1.


        :param predicate: The predicate of this InTotoSlsaProvenanceV1.
        :type predicate: SlsaProvenanceV1
        """

        self._predicate = predicate

    @property
    def predicate_type(self):
        """Gets the predicate_type of this InTotoSlsaProvenanceV1.


        :return: The predicate_type of this InTotoSlsaProvenanceV1.
        :rtype: str
        """
        return self._predicate_type

    @predicate_type.setter
    def predicate_type(self, predicate_type):
        """Sets the predicate_type of this InTotoSlsaProvenanceV1.


        :param predicate_type: The predicate_type of this InTotoSlsaProvenanceV1.
        :type predicate_type: str
        """

        self._predicate_type = predicate_type

    @property
    def subject(self):
        """Gets the subject of this InTotoSlsaProvenanceV1.


        :return: The subject of this InTotoSlsaProvenanceV1.
        :rtype: List[Subject]
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this InTotoSlsaProvenanceV1.


        :param subject: The subject of this InTotoSlsaProvenanceV1.
        :type subject: List[Subject]
        """

        self._subject = subject
