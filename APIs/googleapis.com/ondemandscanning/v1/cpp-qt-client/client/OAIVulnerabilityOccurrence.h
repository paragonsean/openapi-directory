/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVulnerabilityOccurrence.h
 *
 * An occurrence of a severity vulnerability on a resource.
 */

#ifndef OAIVulnerabilityOccurrence_H
#define OAIVulnerabilityOccurrence_H

#include <QJsonObject>

#include "OAICVSS.h"
#include "OAIPackageIssue.h"
#include "OAIRelatedUrl.h"
#include "OAIVexAssessment.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICVSS;
class OAIPackageIssue;
class OAIRelatedUrl;
class OAIVexAssessment;

class OAIVulnerabilityOccurrence : public OAIObject {
public:
    OAIVulnerabilityOccurrence();
    OAIVulnerabilityOccurrence(QString json);
    ~OAIVulnerabilityOccurrence() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getCvssScore() const;
    void setCvssScore(const float &cvss_score);
    bool is_cvss_score_Set() const;
    bool is_cvss_score_Valid() const;

    OAICVSS getCvssV2() const;
    void setCvssV2(const OAICVSS &cvss_v2);
    bool is_cvss_v2_Set() const;
    bool is_cvss_v2_Valid() const;

    QString getCvssVersion() const;
    void setCvssVersion(const QString &cvss_version);
    bool is_cvss_version_Set() const;
    bool is_cvss_version_Valid() const;

    OAICVSS getCvssv3() const;
    void setCvssv3(const OAICVSS &cvssv3);
    bool is_cvssv3_Set() const;
    bool is_cvssv3_Valid() const;

    QString getEffectiveSeverity() const;
    void setEffectiveSeverity(const QString &effective_severity);
    bool is_effective_severity_Set() const;
    bool is_effective_severity_Valid() const;

    QString getExtraDetails() const;
    void setExtraDetails(const QString &extra_details);
    bool is_extra_details_Set() const;
    bool is_extra_details_Valid() const;

    bool isFixAvailable() const;
    void setFixAvailable(const bool &fix_available);
    bool is_fix_available_Set() const;
    bool is_fix_available_Valid() const;

    QString getLongDescription() const;
    void setLongDescription(const QString &long_description);
    bool is_long_description_Set() const;
    bool is_long_description_Valid() const;

    QList<OAIPackageIssue> getPackageIssue() const;
    void setPackageIssue(const QList<OAIPackageIssue> &package_issue);
    bool is_package_issue_Set() const;
    bool is_package_issue_Valid() const;

    QList<OAIRelatedUrl> getRelatedUrls() const;
    void setRelatedUrls(const QList<OAIRelatedUrl> &related_urls);
    bool is_related_urls_Set() const;
    bool is_related_urls_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QString getShortDescription() const;
    void setShortDescription(const QString &short_description);
    bool is_short_description_Set() const;
    bool is_short_description_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIVexAssessment getVexAssessment() const;
    void setVexAssessment(const OAIVexAssessment &vex_assessment);
    bool is_vex_assessment_Set() const;
    bool is_vex_assessment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_cvss_score;
    bool m_cvss_score_isSet;
    bool m_cvss_score_isValid;

    OAICVSS m_cvss_v2;
    bool m_cvss_v2_isSet;
    bool m_cvss_v2_isValid;

    QString m_cvss_version;
    bool m_cvss_version_isSet;
    bool m_cvss_version_isValid;

    OAICVSS m_cvssv3;
    bool m_cvssv3_isSet;
    bool m_cvssv3_isValid;

    QString m_effective_severity;
    bool m_effective_severity_isSet;
    bool m_effective_severity_isValid;

    QString m_extra_details;
    bool m_extra_details_isSet;
    bool m_extra_details_isValid;

    bool m_fix_available;
    bool m_fix_available_isSet;
    bool m_fix_available_isValid;

    QString m_long_description;
    bool m_long_description_isSet;
    bool m_long_description_isValid;

    QList<OAIPackageIssue> m_package_issue;
    bool m_package_issue_isSet;
    bool m_package_issue_isValid;

    QList<OAIRelatedUrl> m_related_urls;
    bool m_related_urls_isSet;
    bool m_related_urls_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QString m_short_description;
    bool m_short_description_isSet;
    bool m_short_description_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIVexAssessment m_vex_assessment;
    bool m_vex_assessment_isSet;
    bool m_vex_assessment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVulnerabilityOccurrence)

#endif // OAIVulnerabilityOccurrence_H
