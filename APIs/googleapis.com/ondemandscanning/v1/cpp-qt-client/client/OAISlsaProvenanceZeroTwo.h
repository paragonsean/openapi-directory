/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISlsaProvenanceZeroTwo.h
 *
 * See full explanation of fields at slsa.dev/provenance/v0.2.
 */

#ifndef OAISlsaProvenanceZeroTwo_H
#define OAISlsaProvenanceZeroTwo_H

#include <QJsonObject>

#include "OAIGrafeasV1SlsaProvenanceZeroTwoSlsaBuilder.h"
#include "OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation.h"
#include "OAIGrafeasV1SlsaProvenanceZeroTwoSlsaMaterial.h"
#include "OAIGrafeasV1SlsaProvenanceZeroTwoSlsaMetadata.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGrafeasV1SlsaProvenanceZeroTwoSlsaBuilder;
class OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation;
class OAIGrafeasV1SlsaProvenanceZeroTwoSlsaMaterial;
class OAIGrafeasV1SlsaProvenanceZeroTwoSlsaMetadata;

class OAISlsaProvenanceZeroTwo : public OAIObject {
public:
    OAISlsaProvenanceZeroTwo();
    OAISlsaProvenanceZeroTwo(QString json);
    ~OAISlsaProvenanceZeroTwo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QJsonValue> getBuildConfig() const;
    void setBuildConfig(const QMap<QString, QJsonValue> &build_config);
    bool is_build_config_Set() const;
    bool is_build_config_Valid() const;

    QString getBuildType() const;
    void setBuildType(const QString &build_type);
    bool is_build_type_Set() const;
    bool is_build_type_Valid() const;

    OAIGrafeasV1SlsaProvenanceZeroTwoSlsaBuilder getBuilder() const;
    void setBuilder(const OAIGrafeasV1SlsaProvenanceZeroTwoSlsaBuilder &builder);
    bool is_builder_Set() const;
    bool is_builder_Valid() const;

    OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation getInvocation() const;
    void setInvocation(const OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation &invocation);
    bool is_invocation_Set() const;
    bool is_invocation_Valid() const;

    QList<OAIGrafeasV1SlsaProvenanceZeroTwoSlsaMaterial> getMaterials() const;
    void setMaterials(const QList<OAIGrafeasV1SlsaProvenanceZeroTwoSlsaMaterial> &materials);
    bool is_materials_Set() const;
    bool is_materials_Valid() const;

    OAIGrafeasV1SlsaProvenanceZeroTwoSlsaMetadata getMetadata() const;
    void setMetadata(const OAIGrafeasV1SlsaProvenanceZeroTwoSlsaMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QJsonValue> m_build_config;
    bool m_build_config_isSet;
    bool m_build_config_isValid;

    QString m_build_type;
    bool m_build_type_isSet;
    bool m_build_type_isValid;

    OAIGrafeasV1SlsaProvenanceZeroTwoSlsaBuilder m_builder;
    bool m_builder_isSet;
    bool m_builder_isValid;

    OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation m_invocation;
    bool m_invocation_isSet;
    bool m_invocation_isValid;

    QList<OAIGrafeasV1SlsaProvenanceZeroTwoSlsaMaterial> m_materials;
    bool m_materials_isSet;
    bool m_materials_isValid;

    OAIGrafeasV1SlsaProvenanceZeroTwoSlsaMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISlsaProvenanceZeroTwo)

#endif // OAISlsaProvenanceZeroTwo_H
