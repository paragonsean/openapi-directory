/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILayer.h
 *
 * Layer holds metadata specific to a layer of a Docker image.
 */

#ifndef OAILayer_H
#define OAILayer_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILayer : public OAIObject {
public:
    OAILayer();
    OAILayer(QString json);
    ~OAILayer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArguments() const;
    void setArguments(const QString &arguments);
    bool is_arguments_Set() const;
    bool is_arguments_Valid() const;

    QString getDirective() const;
    void setDirective(const QString &directive);
    bool is_directive_Set() const;
    bool is_directive_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arguments;
    bool m_arguments_isSet;
    bool m_arguments_isValid;

    QString m_directive;
    bool m_directive_isSet;
    bool m_directive_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILayer)

#endif // OAILayer_H
