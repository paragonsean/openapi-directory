/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnvelopeSignature.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnvelopeSignature::OAIEnvelopeSignature(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnvelopeSignature::OAIEnvelopeSignature() {
    this->initializeModel();
}

OAIEnvelopeSignature::~OAIEnvelopeSignature() {}

void OAIEnvelopeSignature::initializeModel() {

    m_keyid_isSet = false;
    m_keyid_isValid = false;

    m_sig_isSet = false;
    m_sig_isValid = false;
}

void OAIEnvelopeSignature::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnvelopeSignature::fromJsonObject(QJsonObject json) {

    m_keyid_isValid = ::OpenAPI::fromJsonValue(m_keyid, json[QString("keyid")]);
    m_keyid_isSet = !json[QString("keyid")].isNull() && m_keyid_isValid;

    m_sig_isValid = ::OpenAPI::fromJsonValue(m_sig, json[QString("sig")]);
    m_sig_isSet = !json[QString("sig")].isNull() && m_sig_isValid;
}

QString OAIEnvelopeSignature::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnvelopeSignature::asJsonObject() const {
    QJsonObject obj;
    if (m_keyid_isSet) {
        obj.insert(QString("keyid"), ::OpenAPI::toJsonValue(m_keyid));
    }
    if (m_sig_isSet) {
        obj.insert(QString("sig"), ::OpenAPI::toJsonValue(m_sig));
    }
    return obj;
}

QString OAIEnvelopeSignature::getKeyid() const {
    return m_keyid;
}
void OAIEnvelopeSignature::setKeyid(const QString &keyid) {
    m_keyid = keyid;
    m_keyid_isSet = true;
}

bool OAIEnvelopeSignature::is_keyid_Set() const{
    return m_keyid_isSet;
}

bool OAIEnvelopeSignature::is_keyid_Valid() const{
    return m_keyid_isValid;
}

QByteArray OAIEnvelopeSignature::getSig() const {
    return m_sig;
}
void OAIEnvelopeSignature::setSig(const QByteArray &sig) {
    m_sig = sig;
    m_sig_isSet = true;
}

bool OAIEnvelopeSignature::is_sig_Set() const{
    return m_sig_isSet;
}

bool OAIEnvelopeSignature::is_sig_Valid() const{
    return m_sig_isValid;
}

bool OAIEnvelopeSignature::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_keyid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sig_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnvelopeSignature::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
