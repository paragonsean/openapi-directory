/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageOccurrence.h
 *
 * Details of the derived image portion of the DockerImage relationship. This image would be produced from a Dockerfile with FROM .
 */

#ifndef OAIImageOccurrence_H
#define OAIImageOccurrence_H

#include <QJsonObject>

#include "OAIFingerprint.h"
#include "OAILayer.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFingerprint;
class OAILayer;

class OAIImageOccurrence : public OAIObject {
public:
    OAIImageOccurrence();
    OAIImageOccurrence(QString json);
    ~OAIImageOccurrence() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseResourceUrl() const;
    void setBaseResourceUrl(const QString &base_resource_url);
    bool is_base_resource_url_Set() const;
    bool is_base_resource_url_Valid() const;

    qint32 getDistance() const;
    void setDistance(const qint32 &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    OAIFingerprint getFingerprint() const;
    void setFingerprint(const OAIFingerprint &fingerprint);
    bool is_fingerprint_Set() const;
    bool is_fingerprint_Valid() const;

    QList<OAILayer> getLayerInfo() const;
    void setLayerInfo(const QList<OAILayer> &layer_info);
    bool is_layer_info_Set() const;
    bool is_layer_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_resource_url;
    bool m_base_resource_url_isSet;
    bool m_base_resource_url_isValid;

    qint32 m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    OAIFingerprint m_fingerprint;
    bool m_fingerprint_isSet;
    bool m_fingerprint_isValid;

    QList<OAILayer> m_layer_info;
    bool m_layer_info_isSet;
    bool m_layer_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageOccurrence)

#endif // OAIImageOccurrence_H
