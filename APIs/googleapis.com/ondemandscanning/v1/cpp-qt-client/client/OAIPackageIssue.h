/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPackageIssue.h
 *
 * A detail for a distro and package this vulnerability occurrence was found in and its associated fix (if one is available).
 */

#ifndef OAIPackageIssue_H
#define OAIPackageIssue_H

#include <QJsonObject>

#include "OAIGrafeasV1FileLocation.h"
#include "OAIVersion.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVersion;
class OAIGrafeasV1FileLocation;

class OAIPackageIssue : public OAIObject {
public:
    OAIPackageIssue();
    OAIPackageIssue(QString json);
    ~OAIPackageIssue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAffectedCpeUri() const;
    void setAffectedCpeUri(const QString &affected_cpe_uri);
    bool is_affected_cpe_uri_Set() const;
    bool is_affected_cpe_uri_Valid() const;

    QString getAffectedPackage() const;
    void setAffectedPackage(const QString &affected_package);
    bool is_affected_package_Set() const;
    bool is_affected_package_Valid() const;

    OAIVersion getAffectedVersion() const;
    void setAffectedVersion(const OAIVersion &affected_version);
    bool is_affected_version_Set() const;
    bool is_affected_version_Valid() const;

    QString getEffectiveSeverity() const;
    void setEffectiveSeverity(const QString &effective_severity);
    bool is_effective_severity_Set() const;
    bool is_effective_severity_Valid() const;

    QList<OAIGrafeasV1FileLocation> getFileLocation() const;
    void setFileLocation(const QList<OAIGrafeasV1FileLocation> &file_location);
    bool is_file_location_Set() const;
    bool is_file_location_Valid() const;

    bool isFixAvailable() const;
    void setFixAvailable(const bool &fix_available);
    bool is_fix_available_Set() const;
    bool is_fix_available_Valid() const;

    QString getFixedCpeUri() const;
    void setFixedCpeUri(const QString &fixed_cpe_uri);
    bool is_fixed_cpe_uri_Set() const;
    bool is_fixed_cpe_uri_Valid() const;

    QString getFixedPackage() const;
    void setFixedPackage(const QString &fixed_package);
    bool is_fixed_package_Set() const;
    bool is_fixed_package_Valid() const;

    OAIVersion getFixedVersion() const;
    void setFixedVersion(const OAIVersion &fixed_version);
    bool is_fixed_version_Set() const;
    bool is_fixed_version_Valid() const;

    QString getPackageType() const;
    void setPackageType(const QString &package_type);
    bool is_package_type_Set() const;
    bool is_package_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_affected_cpe_uri;
    bool m_affected_cpe_uri_isSet;
    bool m_affected_cpe_uri_isValid;

    QString m_affected_package;
    bool m_affected_package_isSet;
    bool m_affected_package_isValid;

    OAIVersion m_affected_version;
    bool m_affected_version_isSet;
    bool m_affected_version_isValid;

    QString m_effective_severity;
    bool m_effective_severity_isSet;
    bool m_effective_severity_isValid;

    QList<OAIGrafeasV1FileLocation> m_file_location;
    bool m_file_location_isSet;
    bool m_file_location_isValid;

    bool m_fix_available;
    bool m_fix_available_isSet;
    bool m_fix_available_isValid;

    QString m_fixed_cpe_uri;
    bool m_fixed_cpe_uri_isSet;
    bool m_fixed_cpe_uri_isValid;

    QString m_fixed_package;
    bool m_fixed_package_isSet;
    bool m_fixed_package_isValid;

    OAIVersion m_fixed_version;
    bool m_fixed_version_isSet;
    bool m_fixed_version_isValid;

    QString m_package_type;
    bool m_package_type_isSet;
    bool m_package_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPackageIssue)

#endif // OAIPackageIssue_H
