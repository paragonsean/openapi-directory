/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AliasContext from './model/AliasContext';
import AnalysisCompleted from './model/AnalysisCompleted';
import AnalyzePackagesMetadata from './model/AnalyzePackagesMetadata';
import AnalyzePackagesMetadataV1 from './model/AnalyzePackagesMetadataV1';
import AnalyzePackagesRequestV1 from './model/AnalyzePackagesRequestV1';
import AnalyzePackagesResponse from './model/AnalyzePackagesResponse';
import AnalyzePackagesResponseV1 from './model/AnalyzePackagesResponseV1';
import Artifact from './model/Artifact';
import AttestationOccurrence from './model/AttestationOccurrence';
import BinarySourceInfo from './model/BinarySourceInfo';
import BuildDefinition from './model/BuildDefinition';
import BuildMetadata from './model/BuildMetadata';
import BuildOccurrence from './model/BuildOccurrence';
import BuildProvenance from './model/BuildProvenance';
import BuilderConfig from './model/BuilderConfig';
import CVSS from './model/CVSS';
import Category from './model/Category';
import CloudRepoSourceContext from './model/CloudRepoSourceContext';
import Command from './model/Command';
import Completeness from './model/Completeness';
import ComplianceOccurrence from './model/ComplianceOccurrence';
import DSSEAttestationOccurrence from './model/DSSEAttestationOccurrence';
import DeploymentOccurrence from './model/DeploymentOccurrence';
import DiscoveryOccurrence from './model/DiscoveryOccurrence';
import Envelope from './model/Envelope';
import EnvelopeSignature from './model/EnvelopeSignature';
import FileHashes from './model/FileHashes';
import FileLocation from './model/FileLocation';
import Fingerprint from './model/Fingerprint';
import GerritSourceContext from './model/GerritSourceContext';
import GitSourceContext from './model/GitSourceContext';
import GrafeasV1FileLocation from './model/GrafeasV1FileLocation';
import GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder from './model/GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder';
import GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness from './model/GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness';
import GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource from './model/GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource';
import GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation from './model/GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation';
import GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial from './model/GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial';
import GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata from './model/GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata';
import Hash from './model/Hash';
import Identity from './model/Identity';
import ImageOccurrence from './model/ImageOccurrence';
import InTotoProvenance from './model/InTotoProvenance';
import InTotoSlsaProvenanceV1 from './model/InTotoSlsaProvenanceV1';
import InTotoStatement from './model/InTotoStatement';
import Justification from './model/Justification';
import Jwt from './model/Jwt';
import LanguagePackageDependency from './model/LanguagePackageDependency';
import Layer from './model/Layer';
import License from './model/License';
import ListOperationsResponse from './model/ListOperationsResponse';
import ListVulnerabilitiesResponseV1 from './model/ListVulnerabilitiesResponseV1';
import Location from './model/Location';
import Maintainer from './model/Maintainer';
import Material from './model/Material';
import Metadata from './model/Metadata';
import NonCompliantFile from './model/NonCompliantFile';
import Occurrence from './model/Occurrence';
import Operation from './model/Operation';
import PackageData from './model/PackageData';
import PackageIssue from './model/PackageIssue';
import PackageOccurrence from './model/PackageOccurrence';
import PackageVersion from './model/PackageVersion';
import ProjectRepoId from './model/ProjectRepoId';
import ProvenanceBuilder from './model/ProvenanceBuilder';
import Recipe from './model/Recipe';
import RelatedUrl from './model/RelatedUrl';
import Remediation from './model/Remediation';
import RepoId from './model/RepoId';
import ResourceDescriptor from './model/ResourceDescriptor';
import RunDetails from './model/RunDetails';
import SBOMReferenceOccurrence from './model/SBOMReferenceOccurrence';
import SBOMStatus from './model/SBOMStatus';
import SbomReferenceIntotoPayload from './model/SbomReferenceIntotoPayload';
import SbomReferenceIntotoPredicate from './model/SbomReferenceIntotoPredicate';
import Signature from './model/Signature';
import SlsaBuilder from './model/SlsaBuilder';
import SlsaCompleteness from './model/SlsaCompleteness';
import SlsaMetadata from './model/SlsaMetadata';
import SlsaProvenance from './model/SlsaProvenance';
import SlsaProvenanceV1 from './model/SlsaProvenanceV1';
import SlsaProvenanceZeroTwo from './model/SlsaProvenanceZeroTwo';
import SlsaRecipe from './model/SlsaRecipe';
import Source from './model/Source';
import SourceContext from './model/SourceContext';
import Status from './model/Status';
import Subject from './model/Subject';
import UpgradeDistribution from './model/UpgradeDistribution';
import UpgradeOccurrence from './model/UpgradeOccurrence';
import Version from './model/Version';
import VexAssessment from './model/VexAssessment';
import VulnerabilityOccurrence from './model/VulnerabilityOccurrence';
import WindowsUpdate from './model/WindowsUpdate';
import ProjectsApi from './api/ProjectsApi';


/**
* A service to scan container images for vulnerabilities..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var OnDemandScanningApi = require('index'); // See note below*.
* var xxxSvc = new OnDemandScanningApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new OnDemandScanningApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new OnDemandScanningApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new OnDemandScanningApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AliasContext model constructor.
     * @property {module:model/AliasContext}
     */
    AliasContext,

    /**
     * The AnalysisCompleted model constructor.
     * @property {module:model/AnalysisCompleted}
     */
    AnalysisCompleted,

    /**
     * The AnalyzePackagesMetadata model constructor.
     * @property {module:model/AnalyzePackagesMetadata}
     */
    AnalyzePackagesMetadata,

    /**
     * The AnalyzePackagesMetadataV1 model constructor.
     * @property {module:model/AnalyzePackagesMetadataV1}
     */
    AnalyzePackagesMetadataV1,

    /**
     * The AnalyzePackagesRequestV1 model constructor.
     * @property {module:model/AnalyzePackagesRequestV1}
     */
    AnalyzePackagesRequestV1,

    /**
     * The AnalyzePackagesResponse model constructor.
     * @property {module:model/AnalyzePackagesResponse}
     */
    AnalyzePackagesResponse,

    /**
     * The AnalyzePackagesResponseV1 model constructor.
     * @property {module:model/AnalyzePackagesResponseV1}
     */
    AnalyzePackagesResponseV1,

    /**
     * The Artifact model constructor.
     * @property {module:model/Artifact}
     */
    Artifact,

    /**
     * The AttestationOccurrence model constructor.
     * @property {module:model/AttestationOccurrence}
     */
    AttestationOccurrence,

    /**
     * The BinarySourceInfo model constructor.
     * @property {module:model/BinarySourceInfo}
     */
    BinarySourceInfo,

    /**
     * The BuildDefinition model constructor.
     * @property {module:model/BuildDefinition}
     */
    BuildDefinition,

    /**
     * The BuildMetadata model constructor.
     * @property {module:model/BuildMetadata}
     */
    BuildMetadata,

    /**
     * The BuildOccurrence model constructor.
     * @property {module:model/BuildOccurrence}
     */
    BuildOccurrence,

    /**
     * The BuildProvenance model constructor.
     * @property {module:model/BuildProvenance}
     */
    BuildProvenance,

    /**
     * The BuilderConfig model constructor.
     * @property {module:model/BuilderConfig}
     */
    BuilderConfig,

    /**
     * The CVSS model constructor.
     * @property {module:model/CVSS}
     */
    CVSS,

    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category,

    /**
     * The CloudRepoSourceContext model constructor.
     * @property {module:model/CloudRepoSourceContext}
     */
    CloudRepoSourceContext,

    /**
     * The Command model constructor.
     * @property {module:model/Command}
     */
    Command,

    /**
     * The Completeness model constructor.
     * @property {module:model/Completeness}
     */
    Completeness,

    /**
     * The ComplianceOccurrence model constructor.
     * @property {module:model/ComplianceOccurrence}
     */
    ComplianceOccurrence,

    /**
     * The DSSEAttestationOccurrence model constructor.
     * @property {module:model/DSSEAttestationOccurrence}
     */
    DSSEAttestationOccurrence,

    /**
     * The DeploymentOccurrence model constructor.
     * @property {module:model/DeploymentOccurrence}
     */
    DeploymentOccurrence,

    /**
     * The DiscoveryOccurrence model constructor.
     * @property {module:model/DiscoveryOccurrence}
     */
    DiscoveryOccurrence,

    /**
     * The Envelope model constructor.
     * @property {module:model/Envelope}
     */
    Envelope,

    /**
     * The EnvelopeSignature model constructor.
     * @property {module:model/EnvelopeSignature}
     */
    EnvelopeSignature,

    /**
     * The FileHashes model constructor.
     * @property {module:model/FileHashes}
     */
    FileHashes,

    /**
     * The FileLocation model constructor.
     * @property {module:model/FileLocation}
     */
    FileLocation,

    /**
     * The Fingerprint model constructor.
     * @property {module:model/Fingerprint}
     */
    Fingerprint,

    /**
     * The GerritSourceContext model constructor.
     * @property {module:model/GerritSourceContext}
     */
    GerritSourceContext,

    /**
     * The GitSourceContext model constructor.
     * @property {module:model/GitSourceContext}
     */
    GitSourceContext,

    /**
     * The GrafeasV1FileLocation model constructor.
     * @property {module:model/GrafeasV1FileLocation}
     */
    GrafeasV1FileLocation,

    /**
     * The GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder model constructor.
     * @property {module:model/GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder}
     */
    GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder,

    /**
     * The GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness model constructor.
     * @property {module:model/GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness}
     */
    GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness,

    /**
     * The GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource model constructor.
     * @property {module:model/GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource}
     */
    GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource,

    /**
     * The GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation model constructor.
     * @property {module:model/GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation}
     */
    GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation,

    /**
     * The GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial model constructor.
     * @property {module:model/GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial}
     */
    GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial,

    /**
     * The GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata model constructor.
     * @property {module:model/GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata}
     */
    GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata,

    /**
     * The Hash model constructor.
     * @property {module:model/Hash}
     */
    Hash,

    /**
     * The Identity model constructor.
     * @property {module:model/Identity}
     */
    Identity,

    /**
     * The ImageOccurrence model constructor.
     * @property {module:model/ImageOccurrence}
     */
    ImageOccurrence,

    /**
     * The InTotoProvenance model constructor.
     * @property {module:model/InTotoProvenance}
     */
    InTotoProvenance,

    /**
     * The InTotoSlsaProvenanceV1 model constructor.
     * @property {module:model/InTotoSlsaProvenanceV1}
     */
    InTotoSlsaProvenanceV1,

    /**
     * The InTotoStatement model constructor.
     * @property {module:model/InTotoStatement}
     */
    InTotoStatement,

    /**
     * The Justification model constructor.
     * @property {module:model/Justification}
     */
    Justification,

    /**
     * The Jwt model constructor.
     * @property {module:model/Jwt}
     */
    Jwt,

    /**
     * The LanguagePackageDependency model constructor.
     * @property {module:model/LanguagePackageDependency}
     */
    LanguagePackageDependency,

    /**
     * The Layer model constructor.
     * @property {module:model/Layer}
     */
    Layer,

    /**
     * The License model constructor.
     * @property {module:model/License}
     */
    License,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The ListVulnerabilitiesResponseV1 model constructor.
     * @property {module:model/ListVulnerabilitiesResponseV1}
     */
    ListVulnerabilitiesResponseV1,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The Maintainer model constructor.
     * @property {module:model/Maintainer}
     */
    Maintainer,

    /**
     * The Material model constructor.
     * @property {module:model/Material}
     */
    Material,

    /**
     * The Metadata model constructor.
     * @property {module:model/Metadata}
     */
    Metadata,

    /**
     * The NonCompliantFile model constructor.
     * @property {module:model/NonCompliantFile}
     */
    NonCompliantFile,

    /**
     * The Occurrence model constructor.
     * @property {module:model/Occurrence}
     */
    Occurrence,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The PackageData model constructor.
     * @property {module:model/PackageData}
     */
    PackageData,

    /**
     * The PackageIssue model constructor.
     * @property {module:model/PackageIssue}
     */
    PackageIssue,

    /**
     * The PackageOccurrence model constructor.
     * @property {module:model/PackageOccurrence}
     */
    PackageOccurrence,

    /**
     * The PackageVersion model constructor.
     * @property {module:model/PackageVersion}
     */
    PackageVersion,

    /**
     * The ProjectRepoId model constructor.
     * @property {module:model/ProjectRepoId}
     */
    ProjectRepoId,

    /**
     * The ProvenanceBuilder model constructor.
     * @property {module:model/ProvenanceBuilder}
     */
    ProvenanceBuilder,

    /**
     * The Recipe model constructor.
     * @property {module:model/Recipe}
     */
    Recipe,

    /**
     * The RelatedUrl model constructor.
     * @property {module:model/RelatedUrl}
     */
    RelatedUrl,

    /**
     * The Remediation model constructor.
     * @property {module:model/Remediation}
     */
    Remediation,

    /**
     * The RepoId model constructor.
     * @property {module:model/RepoId}
     */
    RepoId,

    /**
     * The ResourceDescriptor model constructor.
     * @property {module:model/ResourceDescriptor}
     */
    ResourceDescriptor,

    /**
     * The RunDetails model constructor.
     * @property {module:model/RunDetails}
     */
    RunDetails,

    /**
     * The SBOMReferenceOccurrence model constructor.
     * @property {module:model/SBOMReferenceOccurrence}
     */
    SBOMReferenceOccurrence,

    /**
     * The SBOMStatus model constructor.
     * @property {module:model/SBOMStatus}
     */
    SBOMStatus,

    /**
     * The SbomReferenceIntotoPayload model constructor.
     * @property {module:model/SbomReferenceIntotoPayload}
     */
    SbomReferenceIntotoPayload,

    /**
     * The SbomReferenceIntotoPredicate model constructor.
     * @property {module:model/SbomReferenceIntotoPredicate}
     */
    SbomReferenceIntotoPredicate,

    /**
     * The Signature model constructor.
     * @property {module:model/Signature}
     */
    Signature,

    /**
     * The SlsaBuilder model constructor.
     * @property {module:model/SlsaBuilder}
     */
    SlsaBuilder,

    /**
     * The SlsaCompleteness model constructor.
     * @property {module:model/SlsaCompleteness}
     */
    SlsaCompleteness,

    /**
     * The SlsaMetadata model constructor.
     * @property {module:model/SlsaMetadata}
     */
    SlsaMetadata,

    /**
     * The SlsaProvenance model constructor.
     * @property {module:model/SlsaProvenance}
     */
    SlsaProvenance,

    /**
     * The SlsaProvenanceV1 model constructor.
     * @property {module:model/SlsaProvenanceV1}
     */
    SlsaProvenanceV1,

    /**
     * The SlsaProvenanceZeroTwo model constructor.
     * @property {module:model/SlsaProvenanceZeroTwo}
     */
    SlsaProvenanceZeroTwo,

    /**
     * The SlsaRecipe model constructor.
     * @property {module:model/SlsaRecipe}
     */
    SlsaRecipe,

    /**
     * The Source model constructor.
     * @property {module:model/Source}
     */
    Source,

    /**
     * The SourceContext model constructor.
     * @property {module:model/SourceContext}
     */
    SourceContext,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The Subject model constructor.
     * @property {module:model/Subject}
     */
    Subject,

    /**
     * The UpgradeDistribution model constructor.
     * @property {module:model/UpgradeDistribution}
     */
    UpgradeDistribution,

    /**
     * The UpgradeOccurrence model constructor.
     * @property {module:model/UpgradeOccurrence}
     */
    UpgradeOccurrence,

    /**
     * The Version model constructor.
     * @property {module:model/Version}
     */
    Version,

    /**
     * The VexAssessment model constructor.
     * @property {module:model/VexAssessment}
     */
    VexAssessment,

    /**
     * The VulnerabilityOccurrence model constructor.
     * @property {module:model/VulnerabilityOccurrence}
     */
    VulnerabilityOccurrence,

    /**
     * The WindowsUpdate model constructor.
     * @property {module:model/WindowsUpdate}
     */
    WindowsUpdate,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
