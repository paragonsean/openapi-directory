/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnvelopeSignature from './EnvelopeSignature';

/**
 * The Envelope model module.
 * @module model/Envelope
 * @version v1
 */
class Envelope {
    /**
     * Constructs a new <code>Envelope</code>.
     * MUST match https://github.com/secure-systems-lab/dsse/blob/master/envelope.proto. An authenticated message of arbitrary type.
     * @alias module:model/Envelope
     */
    constructor() { 
        
        Envelope.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Envelope</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Envelope} obj Optional instance to populate.
     * @return {module:model/Envelope} The populated <code>Envelope</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Envelope();

            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], 'Blob');
            }
            if (data.hasOwnProperty('payloadType')) {
                obj['payloadType'] = ApiClient.convertToType(data['payloadType'], 'String');
            }
            if (data.hasOwnProperty('signatures')) {
                obj['signatures'] = ApiClient.convertToType(data['signatures'], [EnvelopeSignature]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Envelope</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Envelope</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['payloadType'] && !(typeof data['payloadType'] === 'string' || data['payloadType'] instanceof String)) {
            throw new Error("Expected the field `payloadType` to be a primitive type in the JSON string but got " + data['payloadType']);
        }
        if (data['signatures']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['signatures'])) {
                throw new Error("Expected the field `signatures` to be an array in the JSON data but got " + data['signatures']);
            }
            // validate the optional field `signatures` (array)
            for (const item of data['signatures']) {
                EnvelopeSignature.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Blob} payload
 */
Envelope.prototype['payload'] = undefined;

/**
 * @member {String} payloadType
 */
Envelope.prototype['payloadType'] = undefined;

/**
 * @member {Array.<module:model/EnvelopeSignature>} signatures
 */
Envelope.prototype['signatures'] = undefined;






export default Envelope;

