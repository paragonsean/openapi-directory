/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SlsaCompleteness from './SlsaCompleteness';

/**
 * The SlsaMetadata model module.
 * @module model/SlsaMetadata
 * @version v1
 */
class SlsaMetadata {
    /**
     * Constructs a new <code>SlsaMetadata</code>.
     * Other properties of the build.
     * @alias module:model/SlsaMetadata
     */
    constructor() { 
        
        SlsaMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SlsaMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SlsaMetadata} obj Optional instance to populate.
     * @return {module:model/SlsaMetadata} The populated <code>SlsaMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SlsaMetadata();

            if (data.hasOwnProperty('buildFinishedOn')) {
                obj['buildFinishedOn'] = ApiClient.convertToType(data['buildFinishedOn'], 'String');
            }
            if (data.hasOwnProperty('buildInvocationId')) {
                obj['buildInvocationId'] = ApiClient.convertToType(data['buildInvocationId'], 'String');
            }
            if (data.hasOwnProperty('buildStartedOn')) {
                obj['buildStartedOn'] = ApiClient.convertToType(data['buildStartedOn'], 'String');
            }
            if (data.hasOwnProperty('completeness')) {
                obj['completeness'] = SlsaCompleteness.constructFromObject(data['completeness']);
            }
            if (data.hasOwnProperty('reproducible')) {
                obj['reproducible'] = ApiClient.convertToType(data['reproducible'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SlsaMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SlsaMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['buildFinishedOn'] && !(typeof data['buildFinishedOn'] === 'string' || data['buildFinishedOn'] instanceof String)) {
            throw new Error("Expected the field `buildFinishedOn` to be a primitive type in the JSON string but got " + data['buildFinishedOn']);
        }
        // ensure the json data is a string
        if (data['buildInvocationId'] && !(typeof data['buildInvocationId'] === 'string' || data['buildInvocationId'] instanceof String)) {
            throw new Error("Expected the field `buildInvocationId` to be a primitive type in the JSON string but got " + data['buildInvocationId']);
        }
        // ensure the json data is a string
        if (data['buildStartedOn'] && !(typeof data['buildStartedOn'] === 'string' || data['buildStartedOn'] instanceof String)) {
            throw new Error("Expected the field `buildStartedOn` to be a primitive type in the JSON string but got " + data['buildStartedOn']);
        }
        // validate the optional field `completeness`
        if (data['completeness']) { // data not null
          SlsaCompleteness.validateJSON(data['completeness']);
        }

        return true;
    }


}



/**
 * The timestamp of when the build completed.
 * @member {String} buildFinishedOn
 */
SlsaMetadata.prototype['buildFinishedOn'] = undefined;

/**
 * Identifies the particular build invocation, which can be useful for finding associated logs or other ad-hoc analysis. The value SHOULD be globally unique, per in-toto Provenance spec.
 * @member {String} buildInvocationId
 */
SlsaMetadata.prototype['buildInvocationId'] = undefined;

/**
 * The timestamp of when the build started.
 * @member {String} buildStartedOn
 */
SlsaMetadata.prototype['buildStartedOn'] = undefined;

/**
 * @member {module:model/SlsaCompleteness} completeness
 */
SlsaMetadata.prototype['completeness'] = undefined;

/**
 * If true, the builder claims that running the recipe on materials will produce bit-for-bit identical output.
 * @member {Boolean} reproducible
 */
SlsaMetadata.prototype['reproducible'] = undefined;






export default SlsaMetadata;

