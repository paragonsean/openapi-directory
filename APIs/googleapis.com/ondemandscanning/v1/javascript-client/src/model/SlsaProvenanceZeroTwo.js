/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder from './GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder';
import GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation from './GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation';
import GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial from './GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial';
import GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata from './GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata';

/**
 * The SlsaProvenanceZeroTwo model module.
 * @module model/SlsaProvenanceZeroTwo
 * @version v1
 */
class SlsaProvenanceZeroTwo {
    /**
     * Constructs a new <code>SlsaProvenanceZeroTwo</code>.
     * See full explanation of fields at slsa.dev/provenance/v0.2.
     * @alias module:model/SlsaProvenanceZeroTwo
     */
    constructor() { 
        
        SlsaProvenanceZeroTwo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SlsaProvenanceZeroTwo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SlsaProvenanceZeroTwo} obj Optional instance to populate.
     * @return {module:model/SlsaProvenanceZeroTwo} The populated <code>SlsaProvenanceZeroTwo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SlsaProvenanceZeroTwo();

            if (data.hasOwnProperty('buildConfig')) {
                obj['buildConfig'] = ApiClient.convertToType(data['buildConfig'], {'String': Object});
            }
            if (data.hasOwnProperty('buildType')) {
                obj['buildType'] = ApiClient.convertToType(data['buildType'], 'String');
            }
            if (data.hasOwnProperty('builder')) {
                obj['builder'] = GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder.constructFromObject(data['builder']);
            }
            if (data.hasOwnProperty('invocation')) {
                obj['invocation'] = GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation.constructFromObject(data['invocation']);
            }
            if (data.hasOwnProperty('materials')) {
                obj['materials'] = ApiClient.convertToType(data['materials'], [GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial]);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata.constructFromObject(data['metadata']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SlsaProvenanceZeroTwo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SlsaProvenanceZeroTwo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['buildType'] && !(typeof data['buildType'] === 'string' || data['buildType'] instanceof String)) {
            throw new Error("Expected the field `buildType` to be a primitive type in the JSON string but got " + data['buildType']);
        }
        // validate the optional field `builder`
        if (data['builder']) { // data not null
          GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder.validateJSON(data['builder']);
        }
        // validate the optional field `invocation`
        if (data['invocation']) { // data not null
          GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation.validateJSON(data['invocation']);
        }
        if (data['materials']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['materials'])) {
                throw new Error("Expected the field `materials` to be an array in the JSON data but got " + data['materials']);
            }
            // validate the optional field `materials` (array)
            for (const item of data['materials']) {
                GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial.validateJSON(item);
            };
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata.validateJSON(data['metadata']);
        }

        return true;
    }


}



/**
 * @member {Object.<String, Object>} buildConfig
 */
SlsaProvenanceZeroTwo.prototype['buildConfig'] = undefined;

/**
 * @member {String} buildType
 */
SlsaProvenanceZeroTwo.prototype['buildType'] = undefined;

/**
 * @member {module:model/GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder} builder
 */
SlsaProvenanceZeroTwo.prototype['builder'] = undefined;

/**
 * @member {module:model/GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation} invocation
 */
SlsaProvenanceZeroTwo.prototype['invocation'] = undefined;

/**
 * @member {Array.<module:model/GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial>} materials
 */
SlsaProvenanceZeroTwo.prototype['materials'] = undefined;

/**
 * @member {module:model/GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata} metadata
 */
SlsaProvenanceZeroTwo.prototype['metadata'] = undefined;






export default SlsaProvenanceZeroTwo;

