/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SlsaProvenanceV1 from './SlsaProvenanceV1';
import Subject from './Subject';

/**
 * The InTotoSlsaProvenanceV1 model module.
 * @module model/InTotoSlsaProvenanceV1
 * @version v1
 */
class InTotoSlsaProvenanceV1 {
    /**
     * Constructs a new <code>InTotoSlsaProvenanceV1</code>.
     * @alias module:model/InTotoSlsaProvenanceV1
     */
    constructor() { 
        
        InTotoSlsaProvenanceV1.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InTotoSlsaProvenanceV1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InTotoSlsaProvenanceV1} obj Optional instance to populate.
     * @return {module:model/InTotoSlsaProvenanceV1} The populated <code>InTotoSlsaProvenanceV1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InTotoSlsaProvenanceV1();

            if (data.hasOwnProperty('_type')) {
                obj['_type'] = ApiClient.convertToType(data['_type'], 'String');
            }
            if (data.hasOwnProperty('predicate')) {
                obj['predicate'] = SlsaProvenanceV1.constructFromObject(data['predicate']);
            }
            if (data.hasOwnProperty('predicateType')) {
                obj['predicateType'] = ApiClient.convertToType(data['predicateType'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], [Subject]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InTotoSlsaProvenanceV1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InTotoSlsaProvenanceV1</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['_type'] && !(typeof data['_type'] === 'string' || data['_type'] instanceof String)) {
            throw new Error("Expected the field `_type` to be a primitive type in the JSON string but got " + data['_type']);
        }
        // validate the optional field `predicate`
        if (data['predicate']) { // data not null
          SlsaProvenanceV1.validateJSON(data['predicate']);
        }
        // ensure the json data is a string
        if (data['predicateType'] && !(typeof data['predicateType'] === 'string' || data['predicateType'] instanceof String)) {
            throw new Error("Expected the field `predicateType` to be a primitive type in the JSON string but got " + data['predicateType']);
        }
        if (data['subject']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['subject'])) {
                throw new Error("Expected the field `subject` to be an array in the JSON data but got " + data['subject']);
            }
            // validate the optional field `subject` (array)
            for (const item of data['subject']) {
                Subject.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * InToto spec defined at https://github.com/in-toto/attestation/tree/main/spec#statement
 * @member {String} _type
 */
InTotoSlsaProvenanceV1.prototype['_type'] = undefined;

/**
 * @member {module:model/SlsaProvenanceV1} predicate
 */
InTotoSlsaProvenanceV1.prototype['predicate'] = undefined;

/**
 * @member {String} predicateType
 */
InTotoSlsaProvenanceV1.prototype['predicateType'] = undefined;

/**
 * @member {Array.<module:model/Subject>} subject
 */
InTotoSlsaProvenanceV1.prototype['subject'] = undefined;






export default InTotoSlsaProvenanceV1;

