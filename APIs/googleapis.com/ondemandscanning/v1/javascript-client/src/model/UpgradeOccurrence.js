/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpgradeDistribution from './UpgradeDistribution';
import Version from './Version';
import WindowsUpdate from './WindowsUpdate';

/**
 * The UpgradeOccurrence model module.
 * @module model/UpgradeOccurrence
 * @version v1
 */
class UpgradeOccurrence {
    /**
     * Constructs a new <code>UpgradeOccurrence</code>.
     * An Upgrade Occurrence represents that a specific resource_url could install a specific upgrade. This presence is supplied via local sources (i.e. it is present in the mirror and the running system has noticed its availability). For Windows, both distribution and windows_update contain information for the Windows update.
     * @alias module:model/UpgradeOccurrence
     */
    constructor() { 
        
        UpgradeOccurrence.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpgradeOccurrence</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpgradeOccurrence} obj Optional instance to populate.
     * @return {module:model/UpgradeOccurrence} The populated <code>UpgradeOccurrence</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpgradeOccurrence();

            if (data.hasOwnProperty('distribution')) {
                obj['distribution'] = UpgradeDistribution.constructFromObject(data['distribution']);
            }
            if (data.hasOwnProperty('package')) {
                obj['package'] = ApiClient.convertToType(data['package'], 'String');
            }
            if (data.hasOwnProperty('parsedVersion')) {
                obj['parsedVersion'] = Version.constructFromObject(data['parsedVersion']);
            }
            if (data.hasOwnProperty('windowsUpdate')) {
                obj['windowsUpdate'] = WindowsUpdate.constructFromObject(data['windowsUpdate']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpgradeOccurrence</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpgradeOccurrence</code>.
     */
    static validateJSON(data) {
        // validate the optional field `distribution`
        if (data['distribution']) { // data not null
          UpgradeDistribution.validateJSON(data['distribution']);
        }
        // ensure the json data is a string
        if (data['package'] && !(typeof data['package'] === 'string' || data['package'] instanceof String)) {
            throw new Error("Expected the field `package` to be a primitive type in the JSON string but got " + data['package']);
        }
        // validate the optional field `parsedVersion`
        if (data['parsedVersion']) { // data not null
          Version.validateJSON(data['parsedVersion']);
        }
        // validate the optional field `windowsUpdate`
        if (data['windowsUpdate']) { // data not null
          WindowsUpdate.validateJSON(data['windowsUpdate']);
        }

        return true;
    }


}



/**
 * @member {module:model/UpgradeDistribution} distribution
 */
UpgradeOccurrence.prototype['distribution'] = undefined;

/**
 * Required for non-Windows OS. The package this Upgrade is for.
 * @member {String} package
 */
UpgradeOccurrence.prototype['package'] = undefined;

/**
 * @member {module:model/Version} parsedVersion
 */
UpgradeOccurrence.prototype['parsedVersion'] = undefined;

/**
 * @member {module:model/WindowsUpdate} windowsUpdate
 */
UpgradeOccurrence.prototype['windowsUpdate'] = undefined;






export default UpgradeOccurrence;

