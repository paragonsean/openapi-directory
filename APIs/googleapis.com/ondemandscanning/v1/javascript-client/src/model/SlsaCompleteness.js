/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SlsaCompleteness model module.
 * @module model/SlsaCompleteness
 * @version v1
 */
class SlsaCompleteness {
    /**
     * Constructs a new <code>SlsaCompleteness</code>.
     * Indicates that the builder claims certain fields in this message to be complete.
     * @alias module:model/SlsaCompleteness
     */
    constructor() { 
        
        SlsaCompleteness.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SlsaCompleteness</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SlsaCompleteness} obj Optional instance to populate.
     * @return {module:model/SlsaCompleteness} The populated <code>SlsaCompleteness</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SlsaCompleteness();

            if (data.hasOwnProperty('arguments')) {
                obj['arguments'] = ApiClient.convertToType(data['arguments'], 'Boolean');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], 'Boolean');
            }
            if (data.hasOwnProperty('materials')) {
                obj['materials'] = ApiClient.convertToType(data['materials'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SlsaCompleteness</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SlsaCompleteness</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * If true, the builder claims that recipe.arguments is complete, meaning that all external inputs are properly captured in the recipe.
 * @member {Boolean} arguments
 */
SlsaCompleteness.prototype['arguments'] = undefined;

/**
 * If true, the builder claims that recipe.environment is claimed to be complete.
 * @member {Boolean} environment
 */
SlsaCompleteness.prototype['environment'] = undefined;

/**
 * If true, the builder claims that materials are complete, usually through some controls to prevent network access. Sometimes called \"hermetic\".
 * @member {Boolean} materials
 */
SlsaCompleteness.prototype['materials'] = undefined;






export default SlsaCompleteness;

