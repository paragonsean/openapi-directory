/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PackageVersion from './PackageVersion';

/**
 * The BinarySourceInfo model module.
 * @module model/BinarySourceInfo
 * @version v1
 */
class BinarySourceInfo {
    /**
     * Constructs a new <code>BinarySourceInfo</code>.
     * @alias module:model/BinarySourceInfo
     */
    constructor() { 
        
        BinarySourceInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BinarySourceInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BinarySourceInfo} obj Optional instance to populate.
     * @return {module:model/BinarySourceInfo} The populated <code>BinarySourceInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BinarySourceInfo();

            if (data.hasOwnProperty('binaryVersion')) {
                obj['binaryVersion'] = PackageVersion.constructFromObject(data['binaryVersion']);
            }
            if (data.hasOwnProperty('sourceVersion')) {
                obj['sourceVersion'] = PackageVersion.constructFromObject(data['sourceVersion']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BinarySourceInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BinarySourceInfo</code>.
     */
    static validateJSON(data) {
        // validate the optional field `binaryVersion`
        if (data['binaryVersion']) { // data not null
          PackageVersion.validateJSON(data['binaryVersion']);
        }
        // validate the optional field `sourceVersion`
        if (data['sourceVersion']) { // data not null
          PackageVersion.validateJSON(data['sourceVersion']);
        }

        return true;
    }


}



/**
 * @member {module:model/PackageVersion} binaryVersion
 */
BinarySourceInfo.prototype['binaryVersion'] = undefined;

/**
 * @member {module:model/PackageVersion} sourceVersion
 */
BinarySourceInfo.prototype['sourceVersion'] = undefined;






export default BinarySourceInfo;

