/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OnDemandScanningApi);
  }
}(this, function(expect, OnDemandScanningApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OnDemandScanningApi.VulnerabilityOccurrence();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VulnerabilityOccurrence', function() {
    it('should create an instance of VulnerabilityOccurrence', function() {
      // uncomment below and update the code to test VulnerabilityOccurrence
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be.a(OnDemandScanningApi.VulnerabilityOccurrence);
    });

    it('should have the property cvssScore (base name: "cvssScore")', function() {
      // uncomment below and update the code to test the property cvssScore
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

    it('should have the property cvssV2 (base name: "cvssV2")', function() {
      // uncomment below and update the code to test the property cvssV2
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

    it('should have the property cvssVersion (base name: "cvssVersion")', function() {
      // uncomment below and update the code to test the property cvssVersion
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

    it('should have the property cvssv3 (base name: "cvssv3")', function() {
      // uncomment below and update the code to test the property cvssv3
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

    it('should have the property effectiveSeverity (base name: "effectiveSeverity")', function() {
      // uncomment below and update the code to test the property effectiveSeverity
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

    it('should have the property extraDetails (base name: "extraDetails")', function() {
      // uncomment below and update the code to test the property extraDetails
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

    it('should have the property fixAvailable (base name: "fixAvailable")', function() {
      // uncomment below and update the code to test the property fixAvailable
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

    it('should have the property longDescription (base name: "longDescription")', function() {
      // uncomment below and update the code to test the property longDescription
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

    it('should have the property packageIssue (base name: "packageIssue")', function() {
      // uncomment below and update the code to test the property packageIssue
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

    it('should have the property relatedUrls (base name: "relatedUrls")', function() {
      // uncomment below and update the code to test the property relatedUrls
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

    it('should have the property severity (base name: "severity")', function() {
      // uncomment below and update the code to test the property severity
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

    it('should have the property shortDescription (base name: "shortDescription")', function() {
      // uncomment below and update the code to test the property shortDescription
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

    it('should have the property vexAssessment (base name: "vexAssessment")', function() {
      // uncomment below and update the code to test the property vexAssessment
      //var instance = new OnDemandScanningApi.VulnerabilityOccurrence();
      //expect(instance).to.be();
    });

  });

}));
