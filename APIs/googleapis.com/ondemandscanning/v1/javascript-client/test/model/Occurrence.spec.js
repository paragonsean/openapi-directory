/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OnDemandScanningApi);
  }
}(this, function(expect, OnDemandScanningApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OnDemandScanningApi.Occurrence();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Occurrence', function() {
    it('should create an instance of Occurrence', function() {
      // uncomment below and update the code to test Occurrence
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be.a(OnDemandScanningApi.Occurrence);
    });

    it('should have the property attestation (base name: "attestation")', function() {
      // uncomment below and update the code to test the property attestation
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property build (base name: "build")', function() {
      // uncomment below and update the code to test the property build
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property compliance (base name: "compliance")', function() {
      // uncomment below and update the code to test the property compliance
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property deployment (base name: "deployment")', function() {
      // uncomment below and update the code to test the property deployment
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property discovery (base name: "discovery")', function() {
      // uncomment below and update the code to test the property discovery
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property dsseAttestation (base name: "dsseAttestation")', function() {
      // uncomment below and update the code to test the property dsseAttestation
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property envelope (base name: "envelope")', function() {
      // uncomment below and update the code to test the property envelope
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property noteName (base name: "noteName")', function() {
      // uncomment below and update the code to test the property noteName
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property _package (base name: "package")', function() {
      // uncomment below and update the code to test the property _package
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property remediation (base name: "remediation")', function() {
      // uncomment below and update the code to test the property remediation
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property resourceUri (base name: "resourceUri")', function() {
      // uncomment below and update the code to test the property resourceUri
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property sbomReference (base name: "sbomReference")', function() {
      // uncomment below and update the code to test the property sbomReference
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property upgrade (base name: "upgrade")', function() {
      // uncomment below and update the code to test the property upgrade
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

    it('should have the property vulnerability (base name: "vulnerability")', function() {
      // uncomment below and update the code to test the property vulnerability
      //var instance = new OnDemandScanningApi.Occurrence();
      //expect(instance).to.be();
    });

  });

}));
