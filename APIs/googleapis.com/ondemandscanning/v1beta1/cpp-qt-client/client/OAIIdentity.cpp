/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIdentity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIdentity::OAIIdentity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIdentity::OAIIdentity() {
    this->initializeModel();
}

OAIIdentity::~OAIIdentity() {}

void OAIIdentity::initializeModel() {

    m_revision_isSet = false;
    m_revision_isValid = false;

    m_update_id_isSet = false;
    m_update_id_isValid = false;
}

void OAIIdentity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIdentity::fromJsonObject(QJsonObject json) {

    m_revision_isValid = ::OpenAPI::fromJsonValue(m_revision, json[QString("revision")]);
    m_revision_isSet = !json[QString("revision")].isNull() && m_revision_isValid;

    m_update_id_isValid = ::OpenAPI::fromJsonValue(m_update_id, json[QString("updateId")]);
    m_update_id_isSet = !json[QString("updateId")].isNull() && m_update_id_isValid;
}

QString OAIIdentity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIdentity::asJsonObject() const {
    QJsonObject obj;
    if (m_revision_isSet) {
        obj.insert(QString("revision"), ::OpenAPI::toJsonValue(m_revision));
    }
    if (m_update_id_isSet) {
        obj.insert(QString("updateId"), ::OpenAPI::toJsonValue(m_update_id));
    }
    return obj;
}

qint32 OAIIdentity::getRevision() const {
    return m_revision;
}
void OAIIdentity::setRevision(const qint32 &revision) {
    m_revision = revision;
    m_revision_isSet = true;
}

bool OAIIdentity::is_revision_Set() const{
    return m_revision_isSet;
}

bool OAIIdentity::is_revision_Valid() const{
    return m_revision_isValid;
}

QString OAIIdentity::getUpdateId() const {
    return m_update_id;
}
void OAIIdentity::setUpdateId(const QString &update_id) {
    m_update_id = update_id;
    m_update_id_isSet = true;
}

bool OAIIdentity::is_update_id_Set() const{
    return m_update_id_isSet;
}

bool OAIIdentity::is_update_id_Valid() const{
    return m_update_id_isValid;
}

bool OAIIdentity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_revision_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIdentity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
