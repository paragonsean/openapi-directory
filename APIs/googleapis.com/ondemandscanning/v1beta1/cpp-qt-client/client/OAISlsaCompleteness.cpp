/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISlsaCompleteness.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISlsaCompleteness::OAISlsaCompleteness(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISlsaCompleteness::OAISlsaCompleteness() {
    this->initializeModel();
}

OAISlsaCompleteness::~OAISlsaCompleteness() {}

void OAISlsaCompleteness::initializeModel() {

    m_arguments_isSet = false;
    m_arguments_isValid = false;

    m_environment_isSet = false;
    m_environment_isValid = false;

    m_materials_isSet = false;
    m_materials_isValid = false;
}

void OAISlsaCompleteness::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISlsaCompleteness::fromJsonObject(QJsonObject json) {

    m_arguments_isValid = ::OpenAPI::fromJsonValue(m_arguments, json[QString("arguments")]);
    m_arguments_isSet = !json[QString("arguments")].isNull() && m_arguments_isValid;

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("environment")]);
    m_environment_isSet = !json[QString("environment")].isNull() && m_environment_isValid;

    m_materials_isValid = ::OpenAPI::fromJsonValue(m_materials, json[QString("materials")]);
    m_materials_isSet = !json[QString("materials")].isNull() && m_materials_isValid;
}

QString OAISlsaCompleteness::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISlsaCompleteness::asJsonObject() const {
    QJsonObject obj;
    if (m_arguments_isSet) {
        obj.insert(QString("arguments"), ::OpenAPI::toJsonValue(m_arguments));
    }
    if (m_environment_isSet) {
        obj.insert(QString("environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    if (m_materials_isSet) {
        obj.insert(QString("materials"), ::OpenAPI::toJsonValue(m_materials));
    }
    return obj;
}

bool OAISlsaCompleteness::isArguments() const {
    return m_arguments;
}
void OAISlsaCompleteness::setArguments(const bool &arguments) {
    m_arguments = arguments;
    m_arguments_isSet = true;
}

bool OAISlsaCompleteness::is_arguments_Set() const{
    return m_arguments_isSet;
}

bool OAISlsaCompleteness::is_arguments_Valid() const{
    return m_arguments_isValid;
}

bool OAISlsaCompleteness::isEnvironment() const {
    return m_environment;
}
void OAISlsaCompleteness::setEnvironment(const bool &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAISlsaCompleteness::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAISlsaCompleteness::is_environment_Valid() const{
    return m_environment_isValid;
}

bool OAISlsaCompleteness::isMaterials() const {
    return m_materials;
}
void OAISlsaCompleteness::setMaterials(const bool &materials) {
    m_materials = materials;
    m_materials_isSet = true;
}

bool OAISlsaCompleteness::is_materials_Set() const{
    return m_materials_isSet;
}

bool OAISlsaCompleteness::is_materials_Valid() const{
    return m_materials_isValid;
}

bool OAISlsaCompleteness::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arguments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_materials_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISlsaCompleteness::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
