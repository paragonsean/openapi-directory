/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRunDetails.h
 *
 * 
 */

#ifndef OAIRunDetails_H
#define OAIRunDetails_H

#include <QJsonObject>

#include "OAIBuildMetadata.h"
#include "OAIProvenanceBuilder.h"
#include "OAIResourceDescriptor.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProvenanceBuilder;
class OAIResourceDescriptor;
class OAIBuildMetadata;

class OAIRunDetails : public OAIObject {
public:
    OAIRunDetails();
    OAIRunDetails(QString json);
    ~OAIRunDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIProvenanceBuilder getBuilder() const;
    void setBuilder(const OAIProvenanceBuilder &builder);
    bool is_builder_Set() const;
    bool is_builder_Valid() const;

    QList<OAIResourceDescriptor> getByproducts() const;
    void setByproducts(const QList<OAIResourceDescriptor> &byproducts);
    bool is_byproducts_Set() const;
    bool is_byproducts_Valid() const;

    OAIBuildMetadata getMetadata() const;
    void setMetadata(const OAIBuildMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIProvenanceBuilder m_builder;
    bool m_builder_isSet;
    bool m_builder_isValid;

    QList<OAIResourceDescriptor> m_byproducts;
    bool m_byproducts_isSet;
    bool m_byproducts_isValid;

    OAIBuildMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRunDetails)

#endif // OAIRunDetails_H
