/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectRepoId.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectRepoId::OAIProjectRepoId(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectRepoId::OAIProjectRepoId() {
    this->initializeModel();
}

OAIProjectRepoId::~OAIProjectRepoId() {}

void OAIProjectRepoId::initializeModel() {

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_repo_name_isSet = false;
    m_repo_name_isValid = false;
}

void OAIProjectRepoId::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectRepoId::fromJsonObject(QJsonObject json) {

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;

    m_repo_name_isValid = ::OpenAPI::fromJsonValue(m_repo_name, json[QString("repoName")]);
    m_repo_name_isSet = !json[QString("repoName")].isNull() && m_repo_name_isValid;
}

QString OAIProjectRepoId::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectRepoId::asJsonObject() const {
    QJsonObject obj;
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_repo_name_isSet) {
        obj.insert(QString("repoName"), ::OpenAPI::toJsonValue(m_repo_name));
    }
    return obj;
}

QString OAIProjectRepoId::getProjectId() const {
    return m_project_id;
}
void OAIProjectRepoId::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIProjectRepoId::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIProjectRepoId::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QString OAIProjectRepoId::getRepoName() const {
    return m_repo_name;
}
void OAIProjectRepoId::setRepoName(const QString &repo_name) {
    m_repo_name = repo_name;
    m_repo_name_isSet = true;
}

bool OAIProjectRepoId::is_repo_name_Set() const{
    return m_repo_name_isSet;
}

bool OAIProjectRepoId::is_repo_name_Valid() const{
    return m_repo_name_isValid;
}

bool OAIProjectRepoId::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repo_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectRepoId::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
