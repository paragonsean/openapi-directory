/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness() {
    this->initializeModel();
}

OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::~OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness() {}

void OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::initializeModel() {

    m_environment_isSet = false;
    m_environment_isValid = false;

    m_materials_isSet = false;
    m_materials_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;
}

void OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::fromJsonObject(QJsonObject json) {

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("environment")]);
    m_environment_isSet = !json[QString("environment")].isNull() && m_environment_isValid;

    m_materials_isValid = ::OpenAPI::fromJsonValue(m_materials, json[QString("materials")]);
    m_materials_isSet = !json[QString("materials")].isNull() && m_materials_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;
}

QString OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::asJsonObject() const {
    QJsonObject obj;
    if (m_environment_isSet) {
        obj.insert(QString("environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    if (m_materials_isSet) {
        obj.insert(QString("materials"), ::OpenAPI::toJsonValue(m_materials));
    }
    if (m_parameters_isSet) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    return obj;
}

bool OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::isEnvironment() const {
    return m_environment;
}
void OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::setEnvironment(const bool &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::is_environment_Valid() const{
    return m_environment_isValid;
}

bool OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::isMaterials() const {
    return m_materials;
}
void OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::setMaterials(const bool &materials) {
    m_materials = materials;
    m_materials_isSet = true;
}

bool OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::is_materials_Set() const{
    return m_materials_isSet;
}

bool OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::is_materials_Valid() const{
    return m_materials_isValid;
}

bool OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::isParameters() const {
    return m_parameters;
}
void OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::setParameters(const bool &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::is_parameters_Valid() const{
    return m_parameters_isValid;
}

bool OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_materials_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
