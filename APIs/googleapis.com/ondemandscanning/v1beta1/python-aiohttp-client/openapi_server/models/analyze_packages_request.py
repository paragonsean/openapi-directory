# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.package_data import PackageData
from openapi_server import util


class AnalyzePackagesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, packages: List[PackageData]=None, resource_uri: str=None):
        """AnalyzePackagesRequest - a model defined in OpenAPI

        :param packages: The packages of this AnalyzePackagesRequest.
        :param resource_uri: The resource_uri of this AnalyzePackagesRequest.
        """
        self.openapi_types = {
            'packages': List[PackageData],
            'resource_uri': str
        }

        self.attribute_map = {
            'packages': 'packages',
            'resource_uri': 'resourceUri'
        }

        self._packages = packages
        self._resource_uri = resource_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalyzePackagesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalyzePackagesRequest of this AnalyzePackagesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def packages(self):
        """Gets the packages of this AnalyzePackagesRequest.

        The packages to analyze.

        :return: The packages of this AnalyzePackagesRequest.
        :rtype: List[PackageData]
        """
        return self._packages

    @packages.setter
    def packages(self, packages):
        """Sets the packages of this AnalyzePackagesRequest.

        The packages to analyze.

        :param packages: The packages of this AnalyzePackagesRequest.
        :type packages: List[PackageData]
        """

        self._packages = packages

    @property
    def resource_uri(self):
        """Gets the resource_uri of this AnalyzePackagesRequest.

        Required. The resource URI of the container image being scanned.

        :return: The resource_uri of this AnalyzePackagesRequest.
        :rtype: str
        """
        return self._resource_uri

    @resource_uri.setter
    def resource_uri(self, resource_uri):
        """Sets the resource_uri of this AnalyzePackagesRequest.

        Required. The resource URI of the container image being scanned.

        :param resource_uri: The resource_uri of this AnalyzePackagesRequest.
        :type resource_uri: str
        """

        self._resource_uri = resource_uri
