# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PackageVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, licenses: List[str]=None, name: str=None, version: str=None):
        """PackageVersion - a model defined in OpenAPI

        :param licenses: The licenses of this PackageVersion.
        :param name: The name of this PackageVersion.
        :param version: The version of this PackageVersion.
        """
        self.openapi_types = {
            'licenses': List[str],
            'name': str,
            'version': str
        }

        self.attribute_map = {
            'licenses': 'licenses',
            'name': 'name',
            'version': 'version'
        }

        self._licenses = licenses
        self._name = name
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PackageVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PackageVersion of this PackageVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def licenses(self):
        """Gets the licenses of this PackageVersion.

        The licenses associated with this package. Note that this has to go on the PackageVersion level, because we can have cases with images with the same source having different licences. E.g. in Alpine, musl and musl-utils both have the same origin musl, but have different sets of licenses.

        :return: The licenses of this PackageVersion.
        :rtype: List[str]
        """
        return self._licenses

    @licenses.setter
    def licenses(self, licenses):
        """Sets the licenses of this PackageVersion.

        The licenses associated with this package. Note that this has to go on the PackageVersion level, because we can have cases with images with the same source having different licences. E.g. in Alpine, musl and musl-utils both have the same origin musl, but have different sets of licenses.

        :param licenses: The licenses of this PackageVersion.
        :type licenses: List[str]
        """

        self._licenses = licenses

    @property
    def name(self):
        """Gets the name of this PackageVersion.


        :return: The name of this PackageVersion.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PackageVersion.


        :param name: The name of this PackageVersion.
        :type name: str
        """

        self._name = name

    @property
    def version(self):
        """Gets the version of this PackageVersion.


        :return: The version of this PackageVersion.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this PackageVersion.


        :param version: The version of this PackageVersion.
        :type version: str
        """

        self._version = version
