# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.version import Version
from openapi_server import util


class Location(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cpe_uri: str=None, path: str=None, version: Version=None):
        """Location - a model defined in OpenAPI

        :param cpe_uri: The cpe_uri of this Location.
        :param path: The path of this Location.
        :param version: The version of this Location.
        """
        self.openapi_types = {
            'cpe_uri': str,
            'path': str,
            'version': Version
        }

        self.attribute_map = {
            'cpe_uri': 'cpeUri',
            'path': 'path',
            'version': 'version'
        }

        self._cpe_uri = cpe_uri
        self._path = path
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Location':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Location of this Location.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cpe_uri(self):
        """Gets the cpe_uri of this Location.

        Deprecated. The CPE URI in [CPE format](https://cpe.mitre.org/specification/)

        :return: The cpe_uri of this Location.
        :rtype: str
        """
        return self._cpe_uri

    @cpe_uri.setter
    def cpe_uri(self, cpe_uri):
        """Sets the cpe_uri of this Location.

        Deprecated. The CPE URI in [CPE format](https://cpe.mitre.org/specification/)

        :param cpe_uri: The cpe_uri of this Location.
        :type cpe_uri: str
        """

        self._cpe_uri = cpe_uri

    @property
    def path(self):
        """Gets the path of this Location.

        The path from which we gathered that this package/version is installed.

        :return: The path of this Location.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this Location.

        The path from which we gathered that this package/version is installed.

        :param path: The path of this Location.
        :type path: str
        """

        self._path = path

    @property
    def version(self):
        """Gets the version of this Location.


        :return: The version of this Location.
        :rtype: Version
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Location.


        :param version: The version of this Location.
        :type version: Version
        """

        self._version = version
