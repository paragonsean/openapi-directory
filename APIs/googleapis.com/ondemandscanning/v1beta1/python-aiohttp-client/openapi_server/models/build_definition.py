# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_descriptor import ResourceDescriptor
from openapi_server import util


class BuildDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build_type: str=None, external_parameters: Dict[str, object]=None, internal_parameters: Dict[str, object]=None, resolved_dependencies: List[ResourceDescriptor]=None):
        """BuildDefinition - a model defined in OpenAPI

        :param build_type: The build_type of this BuildDefinition.
        :param external_parameters: The external_parameters of this BuildDefinition.
        :param internal_parameters: The internal_parameters of this BuildDefinition.
        :param resolved_dependencies: The resolved_dependencies of this BuildDefinition.
        """
        self.openapi_types = {
            'build_type': str,
            'external_parameters': Dict[str, object],
            'internal_parameters': Dict[str, object],
            'resolved_dependencies': List[ResourceDescriptor]
        }

        self.attribute_map = {
            'build_type': 'buildType',
            'external_parameters': 'externalParameters',
            'internal_parameters': 'internalParameters',
            'resolved_dependencies': 'resolvedDependencies'
        }

        self._build_type = build_type
        self._external_parameters = external_parameters
        self._internal_parameters = internal_parameters
        self._resolved_dependencies = resolved_dependencies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuildDefinition of this BuildDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build_type(self):
        """Gets the build_type of this BuildDefinition.


        :return: The build_type of this BuildDefinition.
        :rtype: str
        """
        return self._build_type

    @build_type.setter
    def build_type(self, build_type):
        """Sets the build_type of this BuildDefinition.


        :param build_type: The build_type of this BuildDefinition.
        :type build_type: str
        """

        self._build_type = build_type

    @property
    def external_parameters(self):
        """Gets the external_parameters of this BuildDefinition.


        :return: The external_parameters of this BuildDefinition.
        :rtype: Dict[str, object]
        """
        return self._external_parameters

    @external_parameters.setter
    def external_parameters(self, external_parameters):
        """Sets the external_parameters of this BuildDefinition.


        :param external_parameters: The external_parameters of this BuildDefinition.
        :type external_parameters: Dict[str, object]
        """

        self._external_parameters = external_parameters

    @property
    def internal_parameters(self):
        """Gets the internal_parameters of this BuildDefinition.


        :return: The internal_parameters of this BuildDefinition.
        :rtype: Dict[str, object]
        """
        return self._internal_parameters

    @internal_parameters.setter
    def internal_parameters(self, internal_parameters):
        """Sets the internal_parameters of this BuildDefinition.


        :param internal_parameters: The internal_parameters of this BuildDefinition.
        :type internal_parameters: Dict[str, object]
        """

        self._internal_parameters = internal_parameters

    @property
    def resolved_dependencies(self):
        """Gets the resolved_dependencies of this BuildDefinition.


        :return: The resolved_dependencies of this BuildDefinition.
        :rtype: List[ResourceDescriptor]
        """
        return self._resolved_dependencies

    @resolved_dependencies.setter
    def resolved_dependencies(self, resolved_dependencies):
        """Sets the resolved_dependencies of this BuildDefinition.


        :param resolved_dependencies: The resolved_dependencies of this BuildDefinition.
        :type resolved_dependencies: List[ResourceDescriptor]
        """

        self._resolved_dependencies = resolved_dependencies
