# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.non_compliant_file import NonCompliantFile
from openapi_server import util


class ComplianceOccurrence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, non_compliance_reason: str=None, non_compliant_files: List[NonCompliantFile]=None):
        """ComplianceOccurrence - a model defined in OpenAPI

        :param non_compliance_reason: The non_compliance_reason of this ComplianceOccurrence.
        :param non_compliant_files: The non_compliant_files of this ComplianceOccurrence.
        """
        self.openapi_types = {
            'non_compliance_reason': str,
            'non_compliant_files': List[NonCompliantFile]
        }

        self.attribute_map = {
            'non_compliance_reason': 'nonComplianceReason',
            'non_compliant_files': 'nonCompliantFiles'
        }

        self._non_compliance_reason = non_compliance_reason
        self._non_compliant_files = non_compliant_files

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComplianceOccurrence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComplianceOccurrence of this ComplianceOccurrence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def non_compliance_reason(self):
        """Gets the non_compliance_reason of this ComplianceOccurrence.


        :return: The non_compliance_reason of this ComplianceOccurrence.
        :rtype: str
        """
        return self._non_compliance_reason

    @non_compliance_reason.setter
    def non_compliance_reason(self, non_compliance_reason):
        """Sets the non_compliance_reason of this ComplianceOccurrence.


        :param non_compliance_reason: The non_compliance_reason of this ComplianceOccurrence.
        :type non_compliance_reason: str
        """

        self._non_compliance_reason = non_compliance_reason

    @property
    def non_compliant_files(self):
        """Gets the non_compliant_files of this ComplianceOccurrence.


        :return: The non_compliant_files of this ComplianceOccurrence.
        :rtype: List[NonCompliantFile]
        """
        return self._non_compliant_files

    @non_compliant_files.setter
    def non_compliant_files(self, non_compliant_files):
        """Sets the non_compliant_files of this ComplianceOccurrence.


        :param non_compliant_files: The non_compliant_files of this ComplianceOccurrence.
        :type non_compliant_files: List[NonCompliantFile]
        """

        self._non_compliant_files = non_compliant_files
