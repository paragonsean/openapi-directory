/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProjectRepoId from './ProjectRepoId';

/**
 * The RepoId model module.
 * @module model/RepoId
 * @version v1beta1
 */
class RepoId {
    /**
     * Constructs a new <code>RepoId</code>.
     * A unique identifier for a Cloud Repo.
     * @alias module:model/RepoId
     */
    constructor() { 
        
        RepoId.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RepoId</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RepoId} obj Optional instance to populate.
     * @return {module:model/RepoId} The populated <code>RepoId</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RepoId();

            if (data.hasOwnProperty('projectRepoId')) {
                obj['projectRepoId'] = ProjectRepoId.constructFromObject(data['projectRepoId']);
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RepoId</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RepoId</code>.
     */
    static validateJSON(data) {
        // validate the optional field `projectRepoId`
        if (data['projectRepoId']) { // data not null
          ProjectRepoId.validateJSON(data['projectRepoId']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }

        return true;
    }


}



/**
 * @member {module:model/ProjectRepoId} projectRepoId
 */
RepoId.prototype['projectRepoId'] = undefined;

/**
 * A server-assigned, globally unique identifier.
 * @member {String} uid
 */
RepoId.prototype['uid'] = undefined;






export default RepoId;

