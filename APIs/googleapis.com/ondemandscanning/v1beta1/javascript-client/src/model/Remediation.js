/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RelatedUrl from './RelatedUrl';

/**
 * The Remediation model module.
 * @module model/Remediation
 * @version v1beta1
 */
class Remediation {
    /**
     * Constructs a new <code>Remediation</code>.
     * Specifies details on how to handle (and presumably, fix) a vulnerability.
     * @alias module:model/Remediation
     */
    constructor() { 
        
        Remediation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Remediation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Remediation} obj Optional instance to populate.
     * @return {module:model/Remediation} The populated <code>Remediation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Remediation();

            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], 'String');
            }
            if (data.hasOwnProperty('remediationType')) {
                obj['remediationType'] = ApiClient.convertToType(data['remediationType'], 'String');
            }
            if (data.hasOwnProperty('remediationUri')) {
                obj['remediationUri'] = RelatedUrl.constructFromObject(data['remediationUri']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Remediation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Remediation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['details'] && !(typeof data['details'] === 'string' || data['details'] instanceof String)) {
            throw new Error("Expected the field `details` to be a primitive type in the JSON string but got " + data['details']);
        }
        // ensure the json data is a string
        if (data['remediationType'] && !(typeof data['remediationType'] === 'string' || data['remediationType'] instanceof String)) {
            throw new Error("Expected the field `remediationType` to be a primitive type in the JSON string but got " + data['remediationType']);
        }
        // validate the optional field `remediationUri`
        if (data['remediationUri']) { // data not null
          RelatedUrl.validateJSON(data['remediationUri']);
        }

        return true;
    }


}



/**
 * Contains a comprehensive human-readable discussion of the remediation.
 * @member {String} details
 */
Remediation.prototype['details'] = undefined;

/**
 * The type of remediation that can be applied.
 * @member {module:model/Remediation.RemediationTypeEnum} remediationType
 */
Remediation.prototype['remediationType'] = undefined;

/**
 * @member {module:model/RelatedUrl} remediationUri
 */
Remediation.prototype['remediationUri'] = undefined;





/**
 * Allowed values for the <code>remediationType</code> property.
 * @enum {String}
 * @readonly
 */
Remediation['RemediationTypeEnum'] = {

    /**
     * value: "REMEDIATION_TYPE_UNSPECIFIED"
     * @const
     */
    "REMEDIATION_TYPE_UNSPECIFIED": "REMEDIATION_TYPE_UNSPECIFIED",

    /**
     * value: "MITIGATION"
     * @const
     */
    "MITIGATION": "MITIGATION",

    /**
     * value: "NO_FIX_PLANNED"
     * @const
     */
    "NO_FIX_PLANNED": "NO_FIX_PLANNED",

    /**
     * value: "NONE_AVAILABLE"
     * @const
     */
    "NONE_AVAILABLE": "NONE_AVAILABLE",

    /**
     * value: "VENDOR_FIX"
     * @const
     */
    "VENDOR_FIX": "VENDOR_FIX",

    /**
     * value: "WORKAROUND"
     * @const
     */
    "WORKAROUND": "WORKAROUND"
};



export default Remediation;

