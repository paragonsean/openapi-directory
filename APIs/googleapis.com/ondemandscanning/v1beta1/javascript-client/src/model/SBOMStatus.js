/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SBOMStatus model module.
 * @module model/SBOMStatus
 * @version v1beta1
 */
class SBOMStatus {
    /**
     * Constructs a new <code>SBOMStatus</code>.
     * The status of an SBOM generation.
     * @alias module:model/SBOMStatus
     */
    constructor() { 
        
        SBOMStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SBOMStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SBOMStatus} obj Optional instance to populate.
     * @return {module:model/SBOMStatus} The populated <code>SBOMStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SBOMStatus();

            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('sbomState')) {
                obj['sbomState'] = ApiClient.convertToType(data['sbomState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SBOMStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SBOMStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // ensure the json data is a string
        if (data['sbomState'] && !(typeof data['sbomState'] === 'string' || data['sbomState'] instanceof String)) {
            throw new Error("Expected the field `sbomState` to be a primitive type in the JSON string but got " + data['sbomState']);
        }

        return true;
    }


}



/**
 * If there was an error generating an SBOM, this will indicate what that error was.
 * @member {String} error
 */
SBOMStatus.prototype['error'] = undefined;

/**
 * The progress of the SBOM generation.
 * @member {module:model/SBOMStatus.SbomStateEnum} sbomState
 */
SBOMStatus.prototype['sbomState'] = undefined;





/**
 * Allowed values for the <code>sbomState</code> property.
 * @enum {String}
 * @readonly
 */
SBOMStatus['SbomStateEnum'] = {

    /**
     * value: "SBOM_STATE_UNSPECIFIED"
     * @const
     */
    "SBOM_STATE_UNSPECIFIED": "SBOM_STATE_UNSPECIFIED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "COMPLETE"
     * @const
     */
    "COMPLETE": "COMPLETE"
};



export default SBOMStatus;

