/**
 * On-Demand Scanning API
 * A service to scan container images for vulnerabilities.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudRepoSourceContext from './CloudRepoSourceContext';
import GerritSourceContext from './GerritSourceContext';
import GitSourceContext from './GitSourceContext';

/**
 * The SourceContext model module.
 * @module model/SourceContext
 * @version v1beta1
 */
class SourceContext {
    /**
     * Constructs a new <code>SourceContext</code>.
     * A SourceContext is a reference to a tree of files. A SourceContext together with a path point to a unique revision of a single file or directory.
     * @alias module:model/SourceContext
     */
    constructor() { 
        
        SourceContext.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceContext</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceContext} obj Optional instance to populate.
     * @return {module:model/SourceContext} The populated <code>SourceContext</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceContext();

            if (data.hasOwnProperty('cloudRepo')) {
                obj['cloudRepo'] = CloudRepoSourceContext.constructFromObject(data['cloudRepo']);
            }
            if (data.hasOwnProperty('gerrit')) {
                obj['gerrit'] = GerritSourceContext.constructFromObject(data['gerrit']);
            }
            if (data.hasOwnProperty('git')) {
                obj['git'] = GitSourceContext.constructFromObject(data['git']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceContext</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceContext</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cloudRepo`
        if (data['cloudRepo']) { // data not null
          CloudRepoSourceContext.validateJSON(data['cloudRepo']);
        }
        // validate the optional field `gerrit`
        if (data['gerrit']) { // data not null
          GerritSourceContext.validateJSON(data['gerrit']);
        }
        // validate the optional field `git`
        if (data['git']) { // data not null
          GitSourceContext.validateJSON(data['git']);
        }

        return true;
    }


}



/**
 * @member {module:model/CloudRepoSourceContext} cloudRepo
 */
SourceContext.prototype['cloudRepo'] = undefined;

/**
 * @member {module:model/GerritSourceContext} gerrit
 */
SourceContext.prototype['gerrit'] = undefined;

/**
 * @member {module:model/GitSourceContext} git
 */
SourceContext.prototype['git'] = undefined;

/**
 * Labels with user defined metadata.
 * @member {Object.<String, String>} labels
 */
SourceContext.prototype['labels'] = undefined;






export default SourceContext;

