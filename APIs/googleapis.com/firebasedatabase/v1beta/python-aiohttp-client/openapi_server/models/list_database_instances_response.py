# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.database_instance import DatabaseInstance
from openapi_server import util


class ListDatabaseInstancesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instances: List[DatabaseInstance]=None, next_page_token: str=None):
        """ListDatabaseInstancesResponse - a model defined in OpenAPI

        :param instances: The instances of this ListDatabaseInstancesResponse.
        :param next_page_token: The next_page_token of this ListDatabaseInstancesResponse.
        """
        self.openapi_types = {
            'instances': List[DatabaseInstance],
            'next_page_token': str
        }

        self.attribute_map = {
            'instances': 'instances',
            'next_page_token': 'nextPageToken'
        }

        self._instances = instances
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDatabaseInstancesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDatabaseInstancesResponse of this ListDatabaseInstancesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instances(self):
        """Gets the instances of this ListDatabaseInstancesResponse.

        List of each DatabaseInstance that is in the parent Firebase project.

        :return: The instances of this ListDatabaseInstancesResponse.
        :rtype: List[DatabaseInstance]
        """
        return self._instances

    @instances.setter
    def instances(self, instances):
        """Sets the instances of this ListDatabaseInstancesResponse.

        List of each DatabaseInstance that is in the parent Firebase project.

        :param instances: The instances of this ListDatabaseInstancesResponse.
        :type instances: List[DatabaseInstance]
        """

        self._instances = instances

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListDatabaseInstancesResponse.

        If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListDatabaseInstances` to find the next group of database instances. Page tokens are short-lived and should not be persisted.

        :return: The next_page_token of this ListDatabaseInstancesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListDatabaseInstancesResponse.

        If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListDatabaseInstances` to find the next group of database instances. Page tokens are short-lived and should not be persisted.

        :param next_page_token: The next_page_token of this ListDatabaseInstancesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
