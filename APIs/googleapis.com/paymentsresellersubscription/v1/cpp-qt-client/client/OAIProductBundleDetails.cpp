/**
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductBundleDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductBundleDetails::OAIProductBundleDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductBundleDetails::OAIProductBundleDetails() {
    this->initializeModel();
}

OAIProductBundleDetails::~OAIProductBundleDetails() {}

void OAIProductBundleDetails::initializeModel() {

    m_bundle_elements_isSet = false;
    m_bundle_elements_isValid = false;

    m_entitlement_mode_isSet = false;
    m_entitlement_mode_isValid = false;
}

void OAIProductBundleDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductBundleDetails::fromJsonObject(QJsonObject json) {

    m_bundle_elements_isValid = ::OpenAPI::fromJsonValue(m_bundle_elements, json[QString("bundleElements")]);
    m_bundle_elements_isSet = !json[QString("bundleElements")].isNull() && m_bundle_elements_isValid;

    m_entitlement_mode_isValid = ::OpenAPI::fromJsonValue(m_entitlement_mode, json[QString("entitlementMode")]);
    m_entitlement_mode_isSet = !json[QString("entitlementMode")].isNull() && m_entitlement_mode_isValid;
}

QString OAIProductBundleDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductBundleDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_bundle_elements.size() > 0) {
        obj.insert(QString("bundleElements"), ::OpenAPI::toJsonValue(m_bundle_elements));
    }
    if (m_entitlement_mode_isSet) {
        obj.insert(QString("entitlementMode"), ::OpenAPI::toJsonValue(m_entitlement_mode));
    }
    return obj;
}

QList<OAIGoogleCloudPaymentsResellerSubscriptionV1ProductBundleDetailsBundleElement> OAIProductBundleDetails::getBundleElements() const {
    return m_bundle_elements;
}
void OAIProductBundleDetails::setBundleElements(const QList<OAIGoogleCloudPaymentsResellerSubscriptionV1ProductBundleDetailsBundleElement> &bundle_elements) {
    m_bundle_elements = bundle_elements;
    m_bundle_elements_isSet = true;
}

bool OAIProductBundleDetails::is_bundle_elements_Set() const{
    return m_bundle_elements_isSet;
}

bool OAIProductBundleDetails::is_bundle_elements_Valid() const{
    return m_bundle_elements_isValid;
}

QString OAIProductBundleDetails::getEntitlementMode() const {
    return m_entitlement_mode;
}
void OAIProductBundleDetails::setEntitlementMode(const QString &entitlement_mode) {
    m_entitlement_mode = entitlement_mode;
    m_entitlement_mode_isSet = true;
}

bool OAIProductBundleDetails::is_entitlement_mode_Set() const{
    return m_entitlement_mode_isSet;
}

bool OAIProductBundleDetails::is_entitlement_mode_Valid() const{
    return m_entitlement_mode_isValid;
}

bool OAIProductBundleDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bundle_elements.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_entitlement_mode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductBundleDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
