/**
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion() {
    this->initializeModel();
}

OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::~OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion() {}

void OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::initializeModel() {

    m_applicable_products_isSet = false;
    m_applicable_products_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_free_trial_duration_isSet = false;
    m_free_trial_duration_isValid = false;

    m_introductory_pricing_details_isSet = false;
    m_introductory_pricing_details_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_promotion_type_isSet = false;
    m_promotion_type_isValid = false;

    m_region_codes_isSet = false;
    m_region_codes_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_titles_isSet = false;
    m_titles_isValid = false;
}

void OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::fromJsonObject(QJsonObject json) {

    m_applicable_products_isValid = ::OpenAPI::fromJsonValue(m_applicable_products, json[QString("applicableProducts")]);
    m_applicable_products_isSet = !json[QString("applicableProducts")].isNull() && m_applicable_products_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_free_trial_duration_isValid = ::OpenAPI::fromJsonValue(m_free_trial_duration, json[QString("freeTrialDuration")]);
    m_free_trial_duration_isSet = !json[QString("freeTrialDuration")].isNull() && m_free_trial_duration_isValid;

    m_introductory_pricing_details_isValid = ::OpenAPI::fromJsonValue(m_introductory_pricing_details, json[QString("introductoryPricingDetails")]);
    m_introductory_pricing_details_isSet = !json[QString("introductoryPricingDetails")].isNull() && m_introductory_pricing_details_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_promotion_type_isValid = ::OpenAPI::fromJsonValue(m_promotion_type, json[QString("promotionType")]);
    m_promotion_type_isSet = !json[QString("promotionType")].isNull() && m_promotion_type_isValid;

    m_region_codes_isValid = ::OpenAPI::fromJsonValue(m_region_codes, json[QString("regionCodes")]);
    m_region_codes_isSet = !json[QString("regionCodes")].isNull() && m_region_codes_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_titles_isValid = ::OpenAPI::fromJsonValue(m_titles, json[QString("titles")]);
    m_titles_isSet = !json[QString("titles")].isNull() && m_titles_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::asJsonObject() const {
    QJsonObject obj;
    if (m_applicable_products.size() > 0) {
        obj.insert(QString("applicableProducts"), ::OpenAPI::toJsonValue(m_applicable_products));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_free_trial_duration.isSet()) {
        obj.insert(QString("freeTrialDuration"), ::OpenAPI::toJsonValue(m_free_trial_duration));
    }
    if (m_introductory_pricing_details.isSet()) {
        obj.insert(QString("introductoryPricingDetails"), ::OpenAPI::toJsonValue(m_introductory_pricing_details));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_promotion_type_isSet) {
        obj.insert(QString("promotionType"), ::OpenAPI::toJsonValue(m_promotion_type));
    }
    if (m_region_codes.size() > 0) {
        obj.insert(QString("regionCodes"), ::OpenAPI::toJsonValue(m_region_codes));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_titles.size() > 0) {
        obj.insert(QString("titles"), ::OpenAPI::toJsonValue(m_titles));
    }
    return obj;
}

QList<QString> OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::getApplicableProducts() const {
    return m_applicable_products;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::setApplicableProducts(const QList<QString> &applicable_products) {
    m_applicable_products = applicable_products;
    m_applicable_products_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_applicable_products_Set() const{
    return m_applicable_products_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_applicable_products_Valid() const{
    return m_applicable_products_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAIGoogleCloudPaymentsResellerSubscriptionV1Duration OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::getFreeTrialDuration() const {
    return m_free_trial_duration;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::setFreeTrialDuration(const OAIGoogleCloudPaymentsResellerSubscriptionV1Duration &free_trial_duration) {
    m_free_trial_duration = free_trial_duration;
    m_free_trial_duration_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_free_trial_duration_Set() const{
    return m_free_trial_duration_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_free_trial_duration_Valid() const{
    return m_free_trial_duration_isValid;
}

OAIGoogleCloudPaymentsResellerSubscriptionV1PromotionIntroductoryPricingDetails OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::getIntroductoryPricingDetails() const {
    return m_introductory_pricing_details;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::setIntroductoryPricingDetails(const OAIGoogleCloudPaymentsResellerSubscriptionV1PromotionIntroductoryPricingDetails &introductory_pricing_details) {
    m_introductory_pricing_details = introductory_pricing_details;
    m_introductory_pricing_details_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_introductory_pricing_details_Set() const{
    return m_introductory_pricing_details_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_introductory_pricing_details_Valid() const{
    return m_introductory_pricing_details_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::getName() const {
    return m_name;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::getPromotionType() const {
    return m_promotion_type;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::setPromotionType(const QString &promotion_type) {
    m_promotion_type = promotion_type;
    m_promotion_type_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_promotion_type_Set() const{
    return m_promotion_type_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_promotion_type_Valid() const{
    return m_promotion_type_isValid;
}

QList<QString> OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::getRegionCodes() const {
    return m_region_codes;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::setRegionCodes(const QList<QString> &region_codes) {
    m_region_codes = region_codes;
    m_region_codes_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_region_codes_Set() const{
    return m_region_codes_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_region_codes_Valid() const{
    return m_region_codes_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QList<OAIGoogleTypeLocalizedText> OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::getTitles() const {
    return m_titles;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::setTitles(const QList<OAIGoogleTypeLocalizedText> &titles) {
    m_titles = titles;
    m_titles_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_titles_Set() const{
    return m_titles_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::is_titles_Valid() const{
    return m_titles_isValid;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_applicable_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_trial_duration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_introductory_pricing_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_titles.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Promotion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
