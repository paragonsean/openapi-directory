/**
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudPaymentsResellerSubscriptionV1Amount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::OAIGoogleCloudPaymentsResellerSubscriptionV1Amount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::OAIGoogleCloudPaymentsResellerSubscriptionV1Amount() {
    this->initializeModel();
}

OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::~OAIGoogleCloudPaymentsResellerSubscriptionV1Amount() {}

void OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::initializeModel() {

    m_amount_micros_isSet = false;
    m_amount_micros_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;
}

void OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::fromJsonObject(QJsonObject json) {

    m_amount_micros_isValid = ::OpenAPI::fromJsonValue(m_amount_micros, json[QString("amountMicros")]);
    m_amount_micros_isSet = !json[QString("amountMicros")].isNull() && m_amount_micros_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_micros_isSet) {
        obj.insert(QString("amountMicros"), ::OpenAPI::toJsonValue(m_amount_micros));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    return obj;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::getAmountMicros() const {
    return m_amount_micros;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::setAmountMicros(const QString &amount_micros) {
    m_amount_micros = amount_micros;
    m_amount_micros_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::is_amount_micros_Set() const{
    return m_amount_micros_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::is_amount_micros_Valid() const{
    return m_amount_micros_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::getCurrencyCode() const {
    return m_currency_code;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Amount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
