/**
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription() {
    this->initializeModel();
}

OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::~OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription() {}

void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::initializeModel() {

    m_cancellation_details_isSet = false;
    m_cancellation_details_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_cycle_end_time_isSet = false;
    m_cycle_end_time_isValid = false;

    m_end_user_entitled_isSet = false;
    m_end_user_entitled_isValid = false;

    m_free_trial_end_time_isSet = false;
    m_free_trial_end_time_isValid = false;

    m_line_items_isSet = false;
    m_line_items_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_partner_user_token_isSet = false;
    m_partner_user_token_isValid = false;

    m_processing_state_isSet = false;
    m_processing_state_isValid = false;

    m_products_isSet = false;
    m_products_isValid = false;

    m_promotion_specs_isSet = false;
    m_promotion_specs_isValid = false;

    m_promotions_isSet = false;
    m_promotions_isValid = false;

    m_redirect_uri_isSet = false;
    m_redirect_uri_isValid = false;

    m_renewal_time_isSet = false;
    m_renewal_time_isValid = false;

    m_service_location_isSet = false;
    m_service_location_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_upgrade_downgrade_details_isSet = false;
    m_upgrade_downgrade_details_isValid = false;
}

void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::fromJsonObject(QJsonObject json) {

    m_cancellation_details_isValid = ::OpenAPI::fromJsonValue(m_cancellation_details, json[QString("cancellationDetails")]);
    m_cancellation_details_isSet = !json[QString("cancellationDetails")].isNull() && m_cancellation_details_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_cycle_end_time_isValid = ::OpenAPI::fromJsonValue(m_cycle_end_time, json[QString("cycleEndTime")]);
    m_cycle_end_time_isSet = !json[QString("cycleEndTime")].isNull() && m_cycle_end_time_isValid;

    m_end_user_entitled_isValid = ::OpenAPI::fromJsonValue(m_end_user_entitled, json[QString("endUserEntitled")]);
    m_end_user_entitled_isSet = !json[QString("endUserEntitled")].isNull() && m_end_user_entitled_isValid;

    m_free_trial_end_time_isValid = ::OpenAPI::fromJsonValue(m_free_trial_end_time, json[QString("freeTrialEndTime")]);
    m_free_trial_end_time_isSet = !json[QString("freeTrialEndTime")].isNull() && m_free_trial_end_time_isValid;

    m_line_items_isValid = ::OpenAPI::fromJsonValue(m_line_items, json[QString("lineItems")]);
    m_line_items_isSet = !json[QString("lineItems")].isNull() && m_line_items_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_partner_user_token_isValid = ::OpenAPI::fromJsonValue(m_partner_user_token, json[QString("partnerUserToken")]);
    m_partner_user_token_isSet = !json[QString("partnerUserToken")].isNull() && m_partner_user_token_isValid;

    m_processing_state_isValid = ::OpenAPI::fromJsonValue(m_processing_state, json[QString("processingState")]);
    m_processing_state_isSet = !json[QString("processingState")].isNull() && m_processing_state_isValid;

    m_products_isValid = ::OpenAPI::fromJsonValue(m_products, json[QString("products")]);
    m_products_isSet = !json[QString("products")].isNull() && m_products_isValid;

    m_promotion_specs_isValid = ::OpenAPI::fromJsonValue(m_promotion_specs, json[QString("promotionSpecs")]);
    m_promotion_specs_isSet = !json[QString("promotionSpecs")].isNull() && m_promotion_specs_isValid;

    m_promotions_isValid = ::OpenAPI::fromJsonValue(m_promotions, json[QString("promotions")]);
    m_promotions_isSet = !json[QString("promotions")].isNull() && m_promotions_isValid;

    m_redirect_uri_isValid = ::OpenAPI::fromJsonValue(m_redirect_uri, json[QString("redirectUri")]);
    m_redirect_uri_isSet = !json[QString("redirectUri")].isNull() && m_redirect_uri_isValid;

    m_renewal_time_isValid = ::OpenAPI::fromJsonValue(m_renewal_time, json[QString("renewalTime")]);
    m_renewal_time_isSet = !json[QString("renewalTime")].isNull() && m_renewal_time_isValid;

    m_service_location_isValid = ::OpenAPI::fromJsonValue(m_service_location, json[QString("serviceLocation")]);
    m_service_location_isSet = !json[QString("serviceLocation")].isNull() && m_service_location_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_upgrade_downgrade_details_isValid = ::OpenAPI::fromJsonValue(m_upgrade_downgrade_details, json[QString("upgradeDowngradeDetails")]);
    m_upgrade_downgrade_details_isSet = !json[QString("upgradeDowngradeDetails")].isNull() && m_upgrade_downgrade_details_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::asJsonObject() const {
    QJsonObject obj;
    if (m_cancellation_details.isSet()) {
        obj.insert(QString("cancellationDetails"), ::OpenAPI::toJsonValue(m_cancellation_details));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_cycle_end_time_isSet) {
        obj.insert(QString("cycleEndTime"), ::OpenAPI::toJsonValue(m_cycle_end_time));
    }
    if (m_end_user_entitled_isSet) {
        obj.insert(QString("endUserEntitled"), ::OpenAPI::toJsonValue(m_end_user_entitled));
    }
    if (m_free_trial_end_time_isSet) {
        obj.insert(QString("freeTrialEndTime"), ::OpenAPI::toJsonValue(m_free_trial_end_time));
    }
    if (m_line_items.size() > 0) {
        obj.insert(QString("lineItems"), ::OpenAPI::toJsonValue(m_line_items));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_partner_user_token_isSet) {
        obj.insert(QString("partnerUserToken"), ::OpenAPI::toJsonValue(m_partner_user_token));
    }
    if (m_processing_state_isSet) {
        obj.insert(QString("processingState"), ::OpenAPI::toJsonValue(m_processing_state));
    }
    if (m_products.size() > 0) {
        obj.insert(QString("products"), ::OpenAPI::toJsonValue(m_products));
    }
    if (m_promotion_specs.size() > 0) {
        obj.insert(QString("promotionSpecs"), ::OpenAPI::toJsonValue(m_promotion_specs));
    }
    if (m_promotions.size() > 0) {
        obj.insert(QString("promotions"), ::OpenAPI::toJsonValue(m_promotions));
    }
    if (m_redirect_uri_isSet) {
        obj.insert(QString("redirectUri"), ::OpenAPI::toJsonValue(m_redirect_uri));
    }
    if (m_renewal_time_isSet) {
        obj.insert(QString("renewalTime"), ::OpenAPI::toJsonValue(m_renewal_time));
    }
    if (m_service_location.isSet()) {
        obj.insert(QString("serviceLocation"), ::OpenAPI::toJsonValue(m_service_location));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_upgrade_downgrade_details.isSet()) {
        obj.insert(QString("upgradeDowngradeDetails"), ::OpenAPI::toJsonValue(m_upgrade_downgrade_details));
    }
    return obj;
}

OAIGoogleCloudPaymentsResellerSubscriptionV1SubscriptionCancellationDetails OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getCancellationDetails() const {
    return m_cancellation_details;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setCancellationDetails(const OAIGoogleCloudPaymentsResellerSubscriptionV1SubscriptionCancellationDetails &cancellation_details) {
    m_cancellation_details = cancellation_details;
    m_cancellation_details_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_cancellation_details_Set() const{
    return m_cancellation_details_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_cancellation_details_Valid() const{
    return m_cancellation_details_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getCycleEndTime() const {
    return m_cycle_end_time;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setCycleEndTime(const QString &cycle_end_time) {
    m_cycle_end_time = cycle_end_time;
    m_cycle_end_time_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_cycle_end_time_Set() const{
    return m_cycle_end_time_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_cycle_end_time_Valid() const{
    return m_cycle_end_time_isValid;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::isEndUserEntitled() const {
    return m_end_user_entitled;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setEndUserEntitled(const bool &end_user_entitled) {
    m_end_user_entitled = end_user_entitled;
    m_end_user_entitled_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_end_user_entitled_Set() const{
    return m_end_user_entitled_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_end_user_entitled_Valid() const{
    return m_end_user_entitled_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getFreeTrialEndTime() const {
    return m_free_trial_end_time;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setFreeTrialEndTime(const QString &free_trial_end_time) {
    m_free_trial_end_time = free_trial_end_time;
    m_free_trial_end_time_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_free_trial_end_time_Set() const{
    return m_free_trial_end_time_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_free_trial_end_time_Valid() const{
    return m_free_trial_end_time_isValid;
}

QList<OAIGoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem> OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getLineItems() const {
    return m_line_items;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setLineItems(const QList<OAIGoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem> &line_items) {
    m_line_items = line_items;
    m_line_items_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_line_items_Set() const{
    return m_line_items_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_line_items_Valid() const{
    return m_line_items_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getName() const {
    return m_name;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getPartnerUserToken() const {
    return m_partner_user_token;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setPartnerUserToken(const QString &partner_user_token) {
    m_partner_user_token = partner_user_token;
    m_partner_user_token_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_partner_user_token_Set() const{
    return m_partner_user_token_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_partner_user_token_Valid() const{
    return m_partner_user_token_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getProcessingState() const {
    return m_processing_state;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setProcessingState(const QString &processing_state) {
    m_processing_state = processing_state;
    m_processing_state_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_processing_state_Set() const{
    return m_processing_state_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_processing_state_Valid() const{
    return m_processing_state_isValid;
}

QList<QString> OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getProducts() const {
    return m_products;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setProducts(const QList<QString> &products) {
    m_products = products;
    m_products_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_products_Set() const{
    return m_products_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_products_Valid() const{
    return m_products_isValid;
}

QList<OAIGoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec> OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getPromotionSpecs() const {
    return m_promotion_specs;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setPromotionSpecs(const QList<OAIGoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec> &promotion_specs) {
    m_promotion_specs = promotion_specs;
    m_promotion_specs_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_promotion_specs_Set() const{
    return m_promotion_specs_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_promotion_specs_Valid() const{
    return m_promotion_specs_isValid;
}

QList<QString> OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getPromotions() const {
    return m_promotions;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setPromotions(const QList<QString> &promotions) {
    m_promotions = promotions;
    m_promotions_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_promotions_Set() const{
    return m_promotions_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_promotions_Valid() const{
    return m_promotions_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getRedirectUri() const {
    return m_redirect_uri;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setRedirectUri(const QString &redirect_uri) {
    m_redirect_uri = redirect_uri;
    m_redirect_uri_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_redirect_uri_Set() const{
    return m_redirect_uri_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_redirect_uri_Valid() const{
    return m_redirect_uri_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getRenewalTime() const {
    return m_renewal_time;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setRenewalTime(const QString &renewal_time) {
    m_renewal_time = renewal_time;
    m_renewal_time_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_renewal_time_Set() const{
    return m_renewal_time_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_renewal_time_Valid() const{
    return m_renewal_time_isValid;
}

OAIGoogleCloudPaymentsResellerSubscriptionV1Location OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getServiceLocation() const {
    return m_service_location;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setServiceLocation(const OAIGoogleCloudPaymentsResellerSubscriptionV1Location &service_location) {
    m_service_location = service_location;
    m_service_location_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_service_location_Set() const{
    return m_service_location_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_service_location_Valid() const{
    return m_service_location_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getState() const {
    return m_state;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_update_time_Valid() const{
    return m_update_time_isValid;
}

OAIGoogleCloudPaymentsResellerSubscriptionV1SubscriptionUpgradeDowngradeDetails OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::getUpgradeDowngradeDetails() const {
    return m_upgrade_downgrade_details;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::setUpgradeDowngradeDetails(const OAIGoogleCloudPaymentsResellerSubscriptionV1SubscriptionUpgradeDowngradeDetails &upgrade_downgrade_details) {
    m_upgrade_downgrade_details = upgrade_downgrade_details;
    m_upgrade_downgrade_details_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_upgrade_downgrade_details_Set() const{
    return m_upgrade_downgrade_details_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::is_upgrade_downgrade_details_Valid() const{
    return m_upgrade_downgrade_details_isValid;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cancellation_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cycle_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_user_entitled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_trial_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_partner_user_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_processing_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_specs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_redirect_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_renewal_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upgrade_downgrade_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1Subscription::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
