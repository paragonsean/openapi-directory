/**
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload() {
    this->initializeModel();
}

OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::~OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload() {}

void OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::initializeModel() {

    m_access_end_time_isSet = false;
    m_access_end_time_isValid = false;

    m_partner_eligibility_ids_isSet = false;
    m_partner_eligibility_ids_isValid = false;

    m_partner_plan_type_isSet = false;
    m_partner_plan_type_isValid = false;
}

void OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::fromJsonObject(QJsonObject json) {

    m_access_end_time_isValid = ::OpenAPI::fromJsonValue(m_access_end_time, json[QString("accessEndTime")]);
    m_access_end_time_isSet = !json[QString("accessEndTime")].isNull() && m_access_end_time_isValid;

    m_partner_eligibility_ids_isValid = ::OpenAPI::fromJsonValue(m_partner_eligibility_ids, json[QString("partnerEligibilityIds")]);
    m_partner_eligibility_ids_isSet = !json[QString("partnerEligibilityIds")].isNull() && m_partner_eligibility_ids_isValid;

    m_partner_plan_type_isValid = ::OpenAPI::fromJsonValue(m_partner_plan_type, json[QString("partnerPlanType")]);
    m_partner_plan_type_isSet = !json[QString("partnerPlanType")].isNull() && m_partner_plan_type_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::asJsonObject() const {
    QJsonObject obj;
    if (m_access_end_time_isSet) {
        obj.insert(QString("accessEndTime"), ::OpenAPI::toJsonValue(m_access_end_time));
    }
    if (m_partner_eligibility_ids.size() > 0) {
        obj.insert(QString("partnerEligibilityIds"), ::OpenAPI::toJsonValue(m_partner_eligibility_ids));
    }
    if (m_partner_plan_type_isSet) {
        obj.insert(QString("partnerPlanType"), ::OpenAPI::toJsonValue(m_partner_plan_type));
    }
    return obj;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::getAccessEndTime() const {
    return m_access_end_time;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::setAccessEndTime(const QString &access_end_time) {
    m_access_end_time = access_end_time;
    m_access_end_time_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::is_access_end_time_Set() const{
    return m_access_end_time_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::is_access_end_time_Valid() const{
    return m_access_end_time_isValid;
}

QList<QString> OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::getPartnerEligibilityIds() const {
    return m_partner_eligibility_ids;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::setPartnerEligibilityIds(const QList<QString> &partner_eligibility_ids) {
    m_partner_eligibility_ids = partner_eligibility_ids;
    m_partner_eligibility_ids_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::is_partner_eligibility_ids_Set() const{
    return m_partner_eligibility_ids_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::is_partner_eligibility_ids_Valid() const{
    return m_partner_eligibility_ids_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::getPartnerPlanType() const {
    return m_partner_plan_type;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::setPartnerPlanType(const QString &partner_plan_type) {
    m_partner_plan_type = partner_plan_type;
    m_partner_plan_type_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::is_partner_plan_type_Set() const{
    return m_partner_plan_type_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::is_partner_plan_type_Valid() const{
    return m_partner_plan_type_isValid;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_partner_eligibility_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_partner_plan_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1YoutubePayload::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
