/**
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse() {
    this->initializeModel();
}

OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::~OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse() {}

void OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::initializeModel() {

    m_cycle_end_time_isSet = false;
    m_cycle_end_time_isValid = false;

    m_free_trial_end_time_isSet = false;
    m_free_trial_end_time_isValid = false;

    m_renewal_time_isSet = false;
    m_renewal_time_isValid = false;
}

void OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::fromJsonObject(QJsonObject json) {

    m_cycle_end_time_isValid = ::OpenAPI::fromJsonValue(m_cycle_end_time, json[QString("cycleEndTime")]);
    m_cycle_end_time_isSet = !json[QString("cycleEndTime")].isNull() && m_cycle_end_time_isValid;

    m_free_trial_end_time_isValid = ::OpenAPI::fromJsonValue(m_free_trial_end_time, json[QString("freeTrialEndTime")]);
    m_free_trial_end_time_isSet = !json[QString("freeTrialEndTime")].isNull() && m_free_trial_end_time_isValid;

    m_renewal_time_isValid = ::OpenAPI::fromJsonValue(m_renewal_time, json[QString("renewalTime")]);
    m_renewal_time_isSet = !json[QString("renewalTime")].isNull() && m_renewal_time_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_cycle_end_time_isSet) {
        obj.insert(QString("cycleEndTime"), ::OpenAPI::toJsonValue(m_cycle_end_time));
    }
    if (m_free_trial_end_time_isSet) {
        obj.insert(QString("freeTrialEndTime"), ::OpenAPI::toJsonValue(m_free_trial_end_time));
    }
    if (m_renewal_time_isSet) {
        obj.insert(QString("renewalTime"), ::OpenAPI::toJsonValue(m_renewal_time));
    }
    return obj;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::getCycleEndTime() const {
    return m_cycle_end_time;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::setCycleEndTime(const QString &cycle_end_time) {
    m_cycle_end_time = cycle_end_time;
    m_cycle_end_time_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::is_cycle_end_time_Set() const{
    return m_cycle_end_time_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::is_cycle_end_time_Valid() const{
    return m_cycle_end_time_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::getFreeTrialEndTime() const {
    return m_free_trial_end_time;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::setFreeTrialEndTime(const QString &free_trial_end_time) {
    m_free_trial_end_time = free_trial_end_time;
    m_free_trial_end_time_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::is_free_trial_end_time_Set() const{
    return m_free_trial_end_time_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::is_free_trial_end_time_Valid() const{
    return m_free_trial_end_time_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::getRenewalTime() const {
    return m_renewal_time;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::setRenewalTime(const QString &renewal_time) {
    m_renewal_time = renewal_time;
    m_renewal_time_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::is_renewal_time_Set() const{
    return m_renewal_time_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::is_renewal_time_Valid() const{
    return m_renewal_time_isValid;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cycle_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_trial_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_renewal_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
