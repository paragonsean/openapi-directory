/**
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest() {
    this->initializeModel();
}

OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::~OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest() {}

void OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::initializeModel() {

    m_cancel_immediately_isSet = false;
    m_cancel_immediately_isValid = false;

    m_cancellation_reason_isSet = false;
    m_cancellation_reason_isValid = false;
}

void OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::fromJsonObject(QJsonObject json) {

    m_cancel_immediately_isValid = ::OpenAPI::fromJsonValue(m_cancel_immediately, json[QString("cancelImmediately")]);
    m_cancel_immediately_isSet = !json[QString("cancelImmediately")].isNull() && m_cancel_immediately_isValid;

    m_cancellation_reason_isValid = ::OpenAPI::fromJsonValue(m_cancellation_reason, json[QString("cancellationReason")]);
    m_cancellation_reason_isSet = !json[QString("cancellationReason")].isNull() && m_cancellation_reason_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_cancel_immediately_isSet) {
        obj.insert(QString("cancelImmediately"), ::OpenAPI::toJsonValue(m_cancel_immediately));
    }
    if (m_cancellation_reason_isSet) {
        obj.insert(QString("cancellationReason"), ::OpenAPI::toJsonValue(m_cancellation_reason));
    }
    return obj;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::isCancelImmediately() const {
    return m_cancel_immediately;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::setCancelImmediately(const bool &cancel_immediately) {
    m_cancel_immediately = cancel_immediately;
    m_cancel_immediately_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::is_cancel_immediately_Set() const{
    return m_cancel_immediately_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::is_cancel_immediately_Valid() const{
    return m_cancel_immediately_isValid;
}

QString OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::getCancellationReason() const {
    return m_cancellation_reason;
}
void OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::setCancellationReason(const QString &cancellation_reason) {
    m_cancellation_reason = cancellation_reason;
    m_cancellation_reason_isSet = true;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::is_cancellation_reason_Set() const{
    return m_cancellation_reason_isSet;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::is_cancellation_reason_Valid() const{
    return m_cancellation_reason_isValid;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cancel_immediately_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancellation_reason_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
