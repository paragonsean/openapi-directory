# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudPaymentsResellerSubscriptionV1Duration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, unit: str=None):
        """GoogleCloudPaymentsResellerSubscriptionV1Duration - a model defined in OpenAPI

        :param count: The count of this GoogleCloudPaymentsResellerSubscriptionV1Duration.
        :param unit: The unit of this GoogleCloudPaymentsResellerSubscriptionV1Duration.
        """
        self.openapi_types = {
            'count': int,
            'unit': str
        }

        self.attribute_map = {
            'count': 'count',
            'unit': 'unit'
        }

        self._count = count
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudPaymentsResellerSubscriptionV1Duration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudPaymentsResellerSubscriptionV1Duration of this GoogleCloudPaymentsResellerSubscriptionV1Duration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this GoogleCloudPaymentsResellerSubscriptionV1Duration.

        number of duration units to be included.

        :return: The count of this GoogleCloudPaymentsResellerSubscriptionV1Duration.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this GoogleCloudPaymentsResellerSubscriptionV1Duration.

        number of duration units to be included.

        :param count: The count of this GoogleCloudPaymentsResellerSubscriptionV1Duration.
        :type count: int
        """

        self._count = count

    @property
    def unit(self):
        """Gets the unit of this GoogleCloudPaymentsResellerSubscriptionV1Duration.

        The unit used for the duration

        :return: The unit of this GoogleCloudPaymentsResellerSubscriptionV1Duration.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this GoogleCloudPaymentsResellerSubscriptionV1Duration.

        The unit used for the duration

        :param unit: The unit of this GoogleCloudPaymentsResellerSubscriptionV1Duration.
        :type unit: str
        """
        allowed_values = ["UNIT_UNSPECIFIED", "MONTH", "DAY", "HOUR"]  # noqa: E501
        if unit not in allowed_values:
            raise ValueError(
                "Invalid value for `unit` ({0}), must be one of {1}"
                .format(unit, allowed_values)
            )

        self._unit = unit
