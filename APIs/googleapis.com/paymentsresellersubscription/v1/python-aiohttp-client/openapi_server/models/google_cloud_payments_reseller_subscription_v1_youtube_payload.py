# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_end_time: str=None, partner_eligibility_ids: List[str]=None, partner_plan_type: str=None):
        """GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload - a model defined in OpenAPI

        :param access_end_time: The access_end_time of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.
        :param partner_eligibility_ids: The partner_eligibility_ids of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.
        :param partner_plan_type: The partner_plan_type of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.
        """
        self.openapi_types = {
            'access_end_time': str,
            'partner_eligibility_ids': List[str],
            'partner_plan_type': str
        }

        self.attribute_map = {
            'access_end_time': 'accessEndTime',
            'partner_eligibility_ids': 'partnerEligibilityIds',
            'partner_plan_type': 'partnerPlanType'
        }

        self._access_end_time = access_end_time
        self._partner_eligibility_ids = partner_eligibility_ids
        self._partner_plan_type = partner_plan_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_end_time(self):
        """Gets the access_end_time of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.

        Output only. The access expiration time for this line item.

        :return: The access_end_time of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.
        :rtype: str
        """
        return self._access_end_time

    @access_end_time.setter
    def access_end_time(self, access_end_time):
        """Sets the access_end_time of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.

        Output only. The access expiration time for this line item.

        :param access_end_time: The access_end_time of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.
        :type access_end_time: str
        """

        self._access_end_time = access_end_time

    @property
    def partner_eligibility_ids(self):
        """Gets the partner_eligibility_ids of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.

        The list of eligibility_ids which are applicable for the line item.

        :return: The partner_eligibility_ids of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.
        :rtype: List[str]
        """
        return self._partner_eligibility_ids

    @partner_eligibility_ids.setter
    def partner_eligibility_ids(self, partner_eligibility_ids):
        """Sets the partner_eligibility_ids of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.

        The list of eligibility_ids which are applicable for the line item.

        :param partner_eligibility_ids: The partner_eligibility_ids of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.
        :type partner_eligibility_ids: List[str]
        """

        self._partner_eligibility_ids = partner_eligibility_ids

    @property
    def partner_plan_type(self):
        """Gets the partner_plan_type of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.

        Optional. Specifies the plan type offered to the end user by the partner.

        :return: The partner_plan_type of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.
        :rtype: str
        """
        return self._partner_plan_type

    @partner_plan_type.setter
    def partner_plan_type(self, partner_plan_type):
        """Sets the partner_plan_type of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.

        Optional. Specifies the plan type offered to the end user by the partner.

        :param partner_plan_type: The partner_plan_type of this GoogleCloudPaymentsResellerSubscriptionV1YoutubePayload.
        :type partner_plan_type: str
        """
        allowed_values = ["PARTNER_PLAN_TYPE_UNSPECIFIED", "PARTNER_PLAN_TYPE_STANDALONE", "PARTNER_PLAN_TYPE_HARD_BUNDLE", "PARTNER_PLAN_TYPE_SOFT_BUNDLE"]  # noqa: E501
        if partner_plan_type not in allowed_values:
            raise ValueError(
                "Invalid value for `partner_plan_type` ({0}), must be one of {1}"
                .format(partner_plan_type, allowed_values)
            )

        self._partner_plan_type = partner_plan_type
