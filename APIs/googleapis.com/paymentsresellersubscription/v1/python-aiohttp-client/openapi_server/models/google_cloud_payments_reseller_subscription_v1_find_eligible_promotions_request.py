# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter: str=None, page_size: int=None, page_token: str=None):
        """GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest - a model defined in OpenAPI

        :param filter: The filter of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.
        :param page_size: The page_size of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.
        :param page_token: The page_token of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.
        """
        self.openapi_types = {
            'filter': str,
            'page_size': int,
            'page_token': str
        }

        self.attribute_map = {
            'filter': 'filter',
            'page_size': 'pageSize',
            'page_token': 'pageToken'
        }

        self._filter = filter
        self._page_size = page_size
        self._page_token = page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter(self):
        """Gets the filter of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.

        Optional. Specifies the filters for the promotion results. The syntax is defined in https://google.aip.dev/160 with the following caveats: 1. Only the following features are supported: - Logical operator `AND` - Comparison operator `=` (no wildcards `*`) - Traversal operator `.` - Has operator `:` (no wildcards `*`) 2. Only the following fields are supported: - `applicableProducts` - `regionCodes` - `youtubePayload.partnerEligibilityId` - `youtubePayload.postalCode` 3. Unless explicitly mentioned above, other features are not supported. Example: `applicableProducts:partners/partner1/products/product1 AND regionCodes:US AND youtubePayload.postalCode=94043 AND youtubePayload.partnerEligibilityId=eligibility-id`

        :return: The filter of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.

        Optional. Specifies the filters for the promotion results. The syntax is defined in https://google.aip.dev/160 with the following caveats: 1. Only the following features are supported: - Logical operator `AND` - Comparison operator `=` (no wildcards `*`) - Traversal operator `.` - Has operator `:` (no wildcards `*`) 2. Only the following fields are supported: - `applicableProducts` - `regionCodes` - `youtubePayload.partnerEligibilityId` - `youtubePayload.postalCode` 3. Unless explicitly mentioned above, other features are not supported. Example: `applicableProducts:partners/partner1/products/product1 AND regionCodes:US AND youtubePayload.postalCode=94043 AND youtubePayload.partnerEligibilityId=eligibility-id`

        :param filter: The filter of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.
        :type filter: str
        """

        self._filter = filter

    @property
    def page_size(self):
        """Gets the page_size of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.

        Optional. The maximum number of promotions to return. The service may return fewer than this value. If unspecified, at most 50 products will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.

        :return: The page_size of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.

        Optional. The maximum number of promotions to return. The service may return fewer than this value. If unspecified, at most 50 products will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.

        :param page_size: The page_size of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def page_token(self):
        """Gets the page_token of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.

        Optional. A page token, received from a previous `ListPromotions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPromotions` must match the call that provided the page token.

        :return: The page_token of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.
        :rtype: str
        """
        return self._page_token

    @page_token.setter
    def page_token(self, page_token):
        """Sets the page_token of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.

        Optional. A page token, received from a previous `ListPromotions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPromotions` must match the call that provided the page token.

        :param page_token: The page_token of this GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest.
        :type page_token: str
        """

        self._page_token = page_token
