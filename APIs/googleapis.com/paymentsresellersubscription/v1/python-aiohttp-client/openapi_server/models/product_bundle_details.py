# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_payments_reseller_subscription_v1_product_bundle_details_bundle_element import GoogleCloudPaymentsResellerSubscriptionV1ProductBundleDetailsBundleElement
from openapi_server import util


class ProductBundleDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bundle_elements: List[GoogleCloudPaymentsResellerSubscriptionV1ProductBundleDetailsBundleElement]=None, entitlement_mode: str=None):
        """ProductBundleDetails - a model defined in OpenAPI

        :param bundle_elements: The bundle_elements of this ProductBundleDetails.
        :param entitlement_mode: The entitlement_mode of this ProductBundleDetails.
        """
        self.openapi_types = {
            'bundle_elements': List[GoogleCloudPaymentsResellerSubscriptionV1ProductBundleDetailsBundleElement],
            'entitlement_mode': str
        }

        self.attribute_map = {
            'bundle_elements': 'bundleElements',
            'entitlement_mode': 'entitlementMode'
        }

        self._bundle_elements = bundle_elements
        self._entitlement_mode = entitlement_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductBundleDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductBundleDetails of this ProductBundleDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bundle_elements(self):
        """Gets the bundle_elements of this ProductBundleDetails.

        The individual products that are included in the bundle.

        :return: The bundle_elements of this ProductBundleDetails.
        :rtype: List[GoogleCloudPaymentsResellerSubscriptionV1ProductBundleDetailsBundleElement]
        """
        return self._bundle_elements

    @bundle_elements.setter
    def bundle_elements(self, bundle_elements):
        """Sets the bundle_elements of this ProductBundleDetails.

        The individual products that are included in the bundle.

        :param bundle_elements: The bundle_elements of this ProductBundleDetails.
        :type bundle_elements: List[GoogleCloudPaymentsResellerSubscriptionV1ProductBundleDetailsBundleElement]
        """

        self._bundle_elements = bundle_elements

    @property
    def entitlement_mode(self):
        """Gets the entitlement_mode of this ProductBundleDetails.

        The entitlement mode of the bundle product.

        :return: The entitlement_mode of this ProductBundleDetails.
        :rtype: str
        """
        return self._entitlement_mode

    @entitlement_mode.setter
    def entitlement_mode(self, entitlement_mode):
        """Sets the entitlement_mode of this ProductBundleDetails.

        The entitlement mode of the bundle product.

        :param entitlement_mode: The entitlement_mode of this ProductBundleDetails.
        :type entitlement_mode: str
        """
        allowed_values = ["ENTITLEMENT_MODE_UNSPECIFIED", "ENTITLEMENT_MODE_FULL", "ENTITLEMENT_MODE_INCREMENTAL"]  # noqa: E501
        if entitlement_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `entitlement_mode` ({0}), must be one of {1}"
                .format(entitlement_mode, allowed_values)
            )

        self._entitlement_mode = entitlement_mode
