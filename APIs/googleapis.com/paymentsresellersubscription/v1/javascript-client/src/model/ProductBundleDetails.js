/**
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudPaymentsResellerSubscriptionV1ProductBundleDetailsBundleElement from './GoogleCloudPaymentsResellerSubscriptionV1ProductBundleDetailsBundleElement';

/**
 * The ProductBundleDetails model module.
 * @module model/ProductBundleDetails
 * @version v1
 */
class ProductBundleDetails {
    /**
     * Constructs a new <code>ProductBundleDetails</code>.
     * Details for a bundle product.
     * @alias module:model/ProductBundleDetails
     */
    constructor() { 
        
        ProductBundleDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductBundleDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductBundleDetails} obj Optional instance to populate.
     * @return {module:model/ProductBundleDetails} The populated <code>ProductBundleDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductBundleDetails();

            if (data.hasOwnProperty('bundleElements')) {
                obj['bundleElements'] = ApiClient.convertToType(data['bundleElements'], [GoogleCloudPaymentsResellerSubscriptionV1ProductBundleDetailsBundleElement]);
            }
            if (data.hasOwnProperty('entitlementMode')) {
                obj['entitlementMode'] = ApiClient.convertToType(data['entitlementMode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductBundleDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductBundleDetails</code>.
     */
    static validateJSON(data) {
        if (data['bundleElements']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bundleElements'])) {
                throw new Error("Expected the field `bundleElements` to be an array in the JSON data but got " + data['bundleElements']);
            }
            // validate the optional field `bundleElements` (array)
            for (const item of data['bundleElements']) {
                GoogleCloudPaymentsResellerSubscriptionV1ProductBundleDetailsBundleElement.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['entitlementMode'] && !(typeof data['entitlementMode'] === 'string' || data['entitlementMode'] instanceof String)) {
            throw new Error("Expected the field `entitlementMode` to be a primitive type in the JSON string but got " + data['entitlementMode']);
        }

        return true;
    }


}



/**
 * The individual products that are included in the bundle.
 * @member {Array.<module:model/GoogleCloudPaymentsResellerSubscriptionV1ProductBundleDetailsBundleElement>} bundleElements
 */
ProductBundleDetails.prototype['bundleElements'] = undefined;

/**
 * The entitlement mode of the bundle product.
 * @member {module:model/ProductBundleDetails.EntitlementModeEnum} entitlementMode
 */
ProductBundleDetails.prototype['entitlementMode'] = undefined;





/**
 * Allowed values for the <code>entitlementMode</code> property.
 * @enum {String}
 * @readonly
 */
ProductBundleDetails['EntitlementModeEnum'] = {

    /**
     * value: "ENTITLEMENT_MODE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ENTITLEMENT_MODE_UNSPECIFIED",

    /**
     * value: "ENTITLEMENT_MODE_FULL"
     * @const
     */
    "FULL": "ENTITLEMENT_MODE_FULL",

    /**
     * value: "ENTITLEMENT_MODE_INCREMENTAL"
     * @const
     */
    "INCREMENTAL": "ENTITLEMENT_MODE_INCREMENTAL"
};



export default ProductBundleDetails;

