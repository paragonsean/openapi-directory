/**
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest from '../model/GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest';
import GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionResponse from '../model/GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionResponse';
import GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionRequest from '../model/GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionRequest';
import GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionResponse from '../model/GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionResponse';
import GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionRequest from '../model/GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionRequest';
import GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse from '../model/GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse';
import GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest from '../model/GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest';
import GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsResponse from '../model/GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsResponse';
import GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse from '../model/GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse';
import GoogleCloudPaymentsResellerSubscriptionV1ListPromotionsResponse from '../model/GoogleCloudPaymentsResellerSubscriptionV1ListPromotionsResponse';
import GoogleCloudPaymentsResellerSubscriptionV1Subscription from '../model/GoogleCloudPaymentsResellerSubscriptionV1Subscription';
import GoogleCloudPaymentsResellerSubscriptionV1UndoCancelSubscriptionResponse from '../model/GoogleCloudPaymentsResellerSubscriptionV1UndoCancelSubscriptionResponse';

/**
* Partners service.
* @module api/PartnersApi
* @version v1
*/
export default class PartnersApi {

    /**
    * Constructs a new PartnersApi. 
    * @alias module:api/PartnersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the paymentsresellersubscriptionPartnersProductsList operation.
     * @callback module:api/PartnersApi~paymentsresellersubscriptionPartnersProductsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To retrieve the products that can be resold by the partner. It should be autenticated with a service account.
     * @param {String} parent Required. The parent, the partner that can resell. Format: partners/{partner}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Optional. Specifies the filters for the product results. The syntax is defined in https://google.aip.dev/160 with the following caveats: 1. Only the following features are supported: - Logical operator `AND` - Comparison operator `=` (no wildcards `*`) - Traversal operator `.` - Has operator `:` (no wildcards `*`) 2. Only the following fields are supported: - `regionCodes` - `youtubePayload.partnerEligibilityId` - `youtubePayload.postalCode` 3. Unless explicitly mentioned above, other features are not supported. Example: `regionCodes:US AND youtubePayload.postalCode=94043 AND youtubePayload.partnerEligibilityId=eligibility-id`
     * @param {Number} [pageSize] Optional. The maximum number of products to return. The service may return fewer than this value. If unspecified, at most 50 products will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
     * @param {String} [pageToken] Optional. A page token, received from a previous `ListProducts` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListProducts` must match the call that provided the page token.
     * @param {module:api/PartnersApi~paymentsresellersubscriptionPartnersProductsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse}
     */
    paymentsresellersubscriptionPartnersProductsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling paymentsresellersubscriptionPartnersProductsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/products', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentsresellersubscriptionPartnersPromotionsFindEligible operation.
     * @callback module:api/PartnersApi~paymentsresellersubscriptionPartnersPromotionsFindEligibleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To find eligible promotions for the current user. The API requires user authorization via OAuth. The bare minimum oauth scope `openid` is sufficient, which will skip the consent screen.
     * @param {String} parent Required. The parent, the partner that can resell. Format: partners/{partner}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest} [googleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest] 
     * @param {module:api/PartnersApi~paymentsresellersubscriptionPartnersPromotionsFindEligibleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsResponse}
     */
    paymentsresellersubscriptionPartnersPromotionsFindEligible(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling paymentsresellersubscriptionPartnersPromotionsFindEligible");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/promotions:findEligible', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentsresellersubscriptionPartnersPromotionsList operation.
     * @callback module:api/PartnersApi~paymentsresellersubscriptionPartnersPromotionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1ListPromotionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To retrieve the promotions, such as free trial, that can be used by the partner. It should be autenticated with a service account.
     * @param {String} parent Required. The parent, the partner that can resell. Format: partners/{partner}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Optional. Specifies the filters for the promotion results. The syntax is defined in https://google.aip.dev/160 with the following caveats: 1. Only the following features are supported: - Logical operator `AND` - Comparison operator `=` (no wildcards `*`) - Traversal operator `.` - Has operator `:` (no wildcards `*`) 2. Only the following fields are supported: - `applicableProducts` - `regionCodes` - `youtubePayload.partnerEligibilityId` - `youtubePayload.postalCode` 3. Unless explicitly mentioned above, other features are not supported. Example: `applicableProducts:partners/partner1/products/product1 AND regionCodes:US AND youtubePayload.postalCode=94043 AND youtubePayload.partnerEligibilityId=eligibility-id`
     * @param {Number} [pageSize] Optional. The maximum number of promotions to return. The service may return fewer than this value. If unspecified, at most 50 products will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
     * @param {String} [pageToken] Optional. A page token, received from a previous `ListPromotions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPromotions` must match the call that provided the page token.
     * @param {module:api/PartnersApi~paymentsresellersubscriptionPartnersPromotionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPaymentsResellerSubscriptionV1ListPromotionsResponse}
     */
    paymentsresellersubscriptionPartnersPromotionsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling paymentsresellersubscriptionPartnersPromotionsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudPaymentsResellerSubscriptionV1ListPromotionsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/promotions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentsresellersubscriptionPartnersSubscriptionsCancel operation.
     * @callback module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsCancelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used by partners to cancel a subscription service either immediately or by the end of the current billing cycle for their customers. It should be called directly by the partner using service accounts.
     * @param {String} name Required. The name of the subscription resource to be cancelled. It will have the format of \"partners/{partner_id}/subscriptions/{subscription_id}\"
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest} [googleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest] 
     * @param {module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionResponse}
     */
    paymentsresellersubscriptionPartnersSubscriptionsCancel(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling paymentsresellersubscriptionPartnersSubscriptionsCancel");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionResponse;
      return this.apiClient.callApi(
        '/v1/{name}:cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentsresellersubscriptionPartnersSubscriptionsCreate operation.
     * @callback module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1Subscription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used by partners to create a subscription for their customers. The created subscription is associated with the end user inferred from the end user credentials. This API must be authorized by the end user using OAuth.
     * @param {String} parent Required. The parent resource name, which is the identifier of the partner. It will have the format of \"partners/{partner_id}\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [subscriptionId] Required. Identifies the subscription resource on the Partner side. The value is restricted to 63 ASCII characters at the maximum. If a subscription was previously created with the same subscription_id, we will directly return that one.
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1Subscription} [googleCloudPaymentsResellerSubscriptionV1Subscription] 
     * @param {module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPaymentsResellerSubscriptionV1Subscription}
     */
    paymentsresellersubscriptionPartnersSubscriptionsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudPaymentsResellerSubscriptionV1Subscription'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling paymentsresellersubscriptionPartnersSubscriptionsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'subscriptionId': opts['subscriptionId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudPaymentsResellerSubscriptionV1Subscription;
      return this.apiClient.callApi(
        '/v1/{parent}/subscriptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentsresellersubscriptionPartnersSubscriptionsEntitle operation.
     * @callback module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsEntitleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used by partners to entitle a previously provisioned subscription to the current end user. The end user identity is inferred from the authorized credential of the request. This API must be authorized by the end user using OAuth.
     * @param {String} name Required. The name of the subscription resource that is entitled to the current end user. It will have the format of \"partners/{partner_id}/subscriptions/{subscription_id}\"
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionRequest} [googleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionRequest] 
     * @param {module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsEntitleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionResponse}
     */
    paymentsresellersubscriptionPartnersSubscriptionsEntitle(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling paymentsresellersubscriptionPartnersSubscriptionsEntitle");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionResponse;
      return this.apiClient.callApi(
        '/v1/{name}:entitle', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentsresellersubscriptionPartnersSubscriptionsExtend operation.
     * @callback module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsExtendCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * [Opt-in only] Most partners should be on auto-extend by default. Used by partners to extend a subscription service for their customers on an ongoing basis for the subscription to remain active and renewable. It should be called directly by the partner using service accounts.
     * @param {String} name Required. The name of the subscription resource to be extended. It will have the format of \"partners/{partner_id}/subscriptions/{subscription_id}\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionRequest} [googleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionRequest] 
     * @param {module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsExtendCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse}
     */
    paymentsresellersubscriptionPartnersSubscriptionsExtend(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling paymentsresellersubscriptionPartnersSubscriptionsExtend");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse;
      return this.apiClient.callApi(
        '/v1/{name}:extend', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentsresellersubscriptionPartnersSubscriptionsGet operation.
     * @callback module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1Subscription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used by partners to get a subscription by id. It should be called directly by the partner using service accounts.
     * @param {String} name Required. The name of the subscription resource to retrieve. It will have the format of \"partners/{partner_id}/subscriptions/{subscription_id}\"
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPaymentsResellerSubscriptionV1Subscription}
     */
    paymentsresellersubscriptionPartnersSubscriptionsGet(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling paymentsresellersubscriptionPartnersSubscriptionsGet");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudPaymentsResellerSubscriptionV1Subscription;
      return this.apiClient.callApi(
        '/v1/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentsresellersubscriptionPartnersSubscriptionsProvision operation.
     * @callback module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsProvisionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1Subscription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used by partners to provision a subscription for their customers. This creates a subscription without associating it with the end user account. EntitleSubscription must be called separately using OAuth in order for the end user account to be associated with the subscription. It should be called directly by the partner using service accounts.
     * @param {String} parent Required. The parent resource name, which is the identifier of the partner. It will have the format of \"partners/{partner_id}\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [subscriptionId] Required. Identifies the subscription resource on the Partner side. The value is restricted to 63 ASCII characters at the maximum. If a subscription was previously created with the same subscription_id, we will directly return that one.
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1Subscription} [googleCloudPaymentsResellerSubscriptionV1Subscription] 
     * @param {module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsProvisionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPaymentsResellerSubscriptionV1Subscription}
     */
    paymentsresellersubscriptionPartnersSubscriptionsProvision(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudPaymentsResellerSubscriptionV1Subscription'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling paymentsresellersubscriptionPartnersSubscriptionsProvision");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'subscriptionId': opts['subscriptionId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudPaymentsResellerSubscriptionV1Subscription;
      return this.apiClient.callApi(
        '/v1/{parent}/subscriptions:provision', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentsresellersubscriptionPartnersSubscriptionsUndoCancel operation.
     * @callback module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsUndoCancelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPaymentsResellerSubscriptionV1UndoCancelSubscriptionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used by partners to revoke the pending cancellation of a subscription, which is currently in `STATE_CANCEL_AT_END_OF_CYCLE` state. If the subscription is already cancelled, the request will fail. It should be called directly by the partner using service accounts.
     * @param {String} name Required. The name of the subscription resource whose pending cancellation needs to be undone. It will have the format of \"partners/{partner_id}/subscriptions/{subscription_id}\"
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/PartnersApi~paymentsresellersubscriptionPartnersSubscriptionsUndoCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPaymentsResellerSubscriptionV1UndoCancelSubscriptionResponse}
     */
    paymentsresellersubscriptionPartnersSubscriptionsUndoCancel(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling paymentsresellersubscriptionPartnersSubscriptionsUndoCancel");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudPaymentsResellerSubscriptionV1UndoCancelSubscriptionResponse;
      return this.apiClient.callApi(
        '/v1/{name}:undoCancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
