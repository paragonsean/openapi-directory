/*
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1Amount;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1FiniteBillingCycleDetails;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1ProductPayload;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItemOneTimeRecurrenceDetails;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec;
import org.openapitools.client.model.SubscriptionLineItemBundleDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Individual line item definition of a subscription.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:19.691143-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private GoogleCloudPaymentsResellerSubscriptionV1Amount amount;

  public static final String SERIALIZED_NAME_BUNDLE_DETAILS = "bundleDetails";
  @SerializedName(SERIALIZED_NAME_BUNDLE_DETAILS)
  private SubscriptionLineItemBundleDetails bundleDetails;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FINITE_BILLING_CYCLE_DETAILS = "finiteBillingCycleDetails";
  @SerializedName(SERIALIZED_NAME_FINITE_BILLING_CYCLE_DETAILS)
  private GoogleCloudPaymentsResellerSubscriptionV1FiniteBillingCycleDetails finiteBillingCycleDetails;

  public static final String SERIALIZED_NAME_LINE_ITEM_FREE_TRIAL_END_TIME = "lineItemFreeTrialEndTime";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_FREE_TRIAL_END_TIME)
  private String lineItemFreeTrialEndTime;

  public static final String SERIALIZED_NAME_LINE_ITEM_INDEX = "lineItemIndex";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_INDEX)
  private Integer lineItemIndex;

  public static final String SERIALIZED_NAME_LINE_ITEM_PROMOTION_SPECS = "lineItemPromotionSpecs";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_PROMOTION_SPECS)
  private List<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec> lineItemPromotionSpecs = new ArrayList<>();

  public static final String SERIALIZED_NAME_ONE_TIME_RECURRENCE_DETAILS = "oneTimeRecurrenceDetails";
  @SerializedName(SERIALIZED_NAME_ONE_TIME_RECURRENCE_DETAILS)
  private GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItemOneTimeRecurrenceDetails oneTimeRecurrenceDetails;

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private String product;

  public static final String SERIALIZED_NAME_PRODUCT_PAYLOAD = "productPayload";
  @SerializedName(SERIALIZED_NAME_PRODUCT_PAYLOAD)
  private GoogleCloudPaymentsResellerSubscriptionV1ProductPayload productPayload;

  /**
   * Output only. The recurrence type of the line item.
   */
  @JsonAdapter(RecurrenceTypeEnum.Adapter.class)
  public enum RecurrenceTypeEnum {
    UNSPECIFIED("LINE_ITEM_RECURRENCE_TYPE_UNSPECIFIED"),
    
    PERIODIC("LINE_ITEM_RECURRENCE_TYPE_PERIODIC"),
    
    ONE_TIME("LINE_ITEM_RECURRENCE_TYPE_ONE_TIME");

    private String value;

    RecurrenceTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RecurrenceTypeEnum fromValue(String value) {
      for (RecurrenceTypeEnum b : RecurrenceTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RecurrenceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RecurrenceTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RecurrenceTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RecurrenceTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RecurrenceTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RECURRENCE_TYPE = "recurrenceType";
  @SerializedName(SERIALIZED_NAME_RECURRENCE_TYPE)
  private RecurrenceTypeEnum recurrenceType;

  /**
   * Output only. The state of the line item.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    UNSPECIFIED("LINE_ITEM_STATE_UNSPECIFIED"),
    
    ACTIVE("LINE_ITEM_STATE_ACTIVE"),
    
    INACTIVE("LINE_ITEM_STATE_INACTIVE"),
    
    NEW("LINE_ITEM_STATE_NEW"),
    
    ACTIVATING("LINE_ITEM_STATE_ACTIVATING"),
    
    DEACTIVATING("LINE_ITEM_STATE_DEACTIVATING"),
    
    WAITING_TO_DEACTIVATE("LINE_ITEM_STATE_WAITING_TO_DEACTIVATE"),
    
    OFF_CYCLE_CHARGING("LINE_ITEM_STATE_OFF_CYCLE_CHARGING");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem() {
  }

  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem(
     String description, 
     String lineItemFreeTrialEndTime, 
     Integer lineItemIndex, 
     RecurrenceTypeEnum recurrenceType, 
     StateEnum state
  ) {
    this();
    this.description = description;
    this.lineItemFreeTrialEndTime = lineItemFreeTrialEndTime;
    this.lineItemIndex = lineItemIndex;
    this.recurrenceType = recurrenceType;
    this.state = state;
  }

  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem amount(GoogleCloudPaymentsResellerSubscriptionV1Amount amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nullable
  public GoogleCloudPaymentsResellerSubscriptionV1Amount getAmount() {
    return amount;
  }

  public void setAmount(GoogleCloudPaymentsResellerSubscriptionV1Amount amount) {
    this.amount = amount;
  }


  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem bundleDetails(SubscriptionLineItemBundleDetails bundleDetails) {
    this.bundleDetails = bundleDetails;
    return this;
  }

  /**
   * Get bundleDetails
   * @return bundleDetails
   */
  @javax.annotation.Nullable
  public SubscriptionLineItemBundleDetails getBundleDetails() {
    return bundleDetails;
  }

  public void setBundleDetails(SubscriptionLineItemBundleDetails bundleDetails) {
    this.bundleDetails = bundleDetails;
  }


  /**
   * Output only. Description of this line item.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }



  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem finiteBillingCycleDetails(GoogleCloudPaymentsResellerSubscriptionV1FiniteBillingCycleDetails finiteBillingCycleDetails) {
    this.finiteBillingCycleDetails = finiteBillingCycleDetails;
    return this;
  }

  /**
   * Get finiteBillingCycleDetails
   * @return finiteBillingCycleDetails
   */
  @javax.annotation.Nullable
  public GoogleCloudPaymentsResellerSubscriptionV1FiniteBillingCycleDetails getFiniteBillingCycleDetails() {
    return finiteBillingCycleDetails;
  }

  public void setFiniteBillingCycleDetails(GoogleCloudPaymentsResellerSubscriptionV1FiniteBillingCycleDetails finiteBillingCycleDetails) {
    this.finiteBillingCycleDetails = finiteBillingCycleDetails;
  }


  /**
   * Output only. The free trial end time will be populated after the line item is successfully processed. End time of the line item free trial period, in ISO 8061 format. For example, \&quot;2019-08-31T17:28:54.564Z\&quot;. It will be set the same as createTime if no free trial promotion is specified.
   * @return lineItemFreeTrialEndTime
   */
  @javax.annotation.Nullable
  public String getLineItemFreeTrialEndTime() {
    return lineItemFreeTrialEndTime;
  }



  /**
   * Output only. A unique index of the subscription line item.
   * @return lineItemIndex
   */
  @javax.annotation.Nullable
  public Integer getLineItemIndex() {
    return lineItemIndex;
  }



  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem lineItemPromotionSpecs(List<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec> lineItemPromotionSpecs) {
    this.lineItemPromotionSpecs = lineItemPromotionSpecs;
    return this;
  }

  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem addLineItemPromotionSpecsItem(GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec lineItemPromotionSpecsItem) {
    if (this.lineItemPromotionSpecs == null) {
      this.lineItemPromotionSpecs = new ArrayList<>();
    }
    this.lineItemPromotionSpecs.add(lineItemPromotionSpecsItem);
    return this;
  }

  /**
   * Optional. The promotions applied on the line item. It can be: - a free trial promotion, which overrides the subscription-level free trial promotion. - an introductory pricing promotion. When used as input in Create or Provision API, specify its resource name only.
   * @return lineItemPromotionSpecs
   */
  @javax.annotation.Nullable
  public List<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec> getLineItemPromotionSpecs() {
    return lineItemPromotionSpecs;
  }

  public void setLineItemPromotionSpecs(List<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec> lineItemPromotionSpecs) {
    this.lineItemPromotionSpecs = lineItemPromotionSpecs;
  }


  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem oneTimeRecurrenceDetails(GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItemOneTimeRecurrenceDetails oneTimeRecurrenceDetails) {
    this.oneTimeRecurrenceDetails = oneTimeRecurrenceDetails;
    return this;
  }

  /**
   * Get oneTimeRecurrenceDetails
   * @return oneTimeRecurrenceDetails
   */
  @javax.annotation.Nullable
  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItemOneTimeRecurrenceDetails getOneTimeRecurrenceDetails() {
    return oneTimeRecurrenceDetails;
  }

  public void setOneTimeRecurrenceDetails(GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItemOneTimeRecurrenceDetails oneTimeRecurrenceDetails) {
    this.oneTimeRecurrenceDetails = oneTimeRecurrenceDetails;
  }


  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem product(String product) {
    this.product = product;
    return this;
  }

  /**
   * Required. Product resource name that identifies one the line item The format is &#39;partners/{partner_id}/products/{product_id}&#39;.
   * @return product
   */
  @javax.annotation.Nullable
  public String getProduct() {
    return product;
  }

  public void setProduct(String product) {
    this.product = product;
  }


  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem productPayload(GoogleCloudPaymentsResellerSubscriptionV1ProductPayload productPayload) {
    this.productPayload = productPayload;
    return this;
  }

  /**
   * Get productPayload
   * @return productPayload
   */
  @javax.annotation.Nullable
  public GoogleCloudPaymentsResellerSubscriptionV1ProductPayload getProductPayload() {
    return productPayload;
  }

  public void setProductPayload(GoogleCloudPaymentsResellerSubscriptionV1ProductPayload productPayload) {
    this.productPayload = productPayload;
  }


  /**
   * Output only. The recurrence type of the line item.
   * @return recurrenceType
   */
  @javax.annotation.Nullable
  public RecurrenceTypeEnum getRecurrenceType() {
    return recurrenceType;
  }



  /**
   * Output only. The state of the line item.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem googleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem = (GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem) o;
    return Objects.equals(this.amount, googleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.amount) &&
        Objects.equals(this.bundleDetails, googleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.bundleDetails) &&
        Objects.equals(this.description, googleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.description) &&
        Objects.equals(this.finiteBillingCycleDetails, googleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.finiteBillingCycleDetails) &&
        Objects.equals(this.lineItemFreeTrialEndTime, googleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.lineItemFreeTrialEndTime) &&
        Objects.equals(this.lineItemIndex, googleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.lineItemIndex) &&
        Objects.equals(this.lineItemPromotionSpecs, googleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.lineItemPromotionSpecs) &&
        Objects.equals(this.oneTimeRecurrenceDetails, googleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.oneTimeRecurrenceDetails) &&
        Objects.equals(this.product, googleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.product) &&
        Objects.equals(this.productPayload, googleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.productPayload) &&
        Objects.equals(this.recurrenceType, googleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.recurrenceType) &&
        Objects.equals(this.state, googleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, bundleDetails, description, finiteBillingCycleDetails, lineItemFreeTrialEndTime, lineItemIndex, lineItemPromotionSpecs, oneTimeRecurrenceDetails, product, productPayload, recurrenceType, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    bundleDetails: ").append(toIndentedString(bundleDetails)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    finiteBillingCycleDetails: ").append(toIndentedString(finiteBillingCycleDetails)).append("\n");
    sb.append("    lineItemFreeTrialEndTime: ").append(toIndentedString(lineItemFreeTrialEndTime)).append("\n");
    sb.append("    lineItemIndex: ").append(toIndentedString(lineItemIndex)).append("\n");
    sb.append("    lineItemPromotionSpecs: ").append(toIndentedString(lineItemPromotionSpecs)).append("\n");
    sb.append("    oneTimeRecurrenceDetails: ").append(toIndentedString(oneTimeRecurrenceDetails)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    productPayload: ").append(toIndentedString(productPayload)).append("\n");
    sb.append("    recurrenceType: ").append(toIndentedString(recurrenceType)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amount");
    openapiFields.add("bundleDetails");
    openapiFields.add("description");
    openapiFields.add("finiteBillingCycleDetails");
    openapiFields.add("lineItemFreeTrialEndTime");
    openapiFields.add("lineItemIndex");
    openapiFields.add("lineItemPromotionSpecs");
    openapiFields.add("oneTimeRecurrenceDetails");
    openapiFields.add("product");
    openapiFields.add("productPayload");
    openapiFields.add("recurrenceType");
    openapiFields.add("state");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem is not found in the empty JSON string", GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `amount`
      if (jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull()) {
        GoogleCloudPaymentsResellerSubscriptionV1Amount.validateJsonElement(jsonObj.get("amount"));
      }
      // validate the optional field `bundleDetails`
      if (jsonObj.get("bundleDetails") != null && !jsonObj.get("bundleDetails").isJsonNull()) {
        SubscriptionLineItemBundleDetails.validateJsonElement(jsonObj.get("bundleDetails"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `finiteBillingCycleDetails`
      if (jsonObj.get("finiteBillingCycleDetails") != null && !jsonObj.get("finiteBillingCycleDetails").isJsonNull()) {
        GoogleCloudPaymentsResellerSubscriptionV1FiniteBillingCycleDetails.validateJsonElement(jsonObj.get("finiteBillingCycleDetails"));
      }
      if ((jsonObj.get("lineItemFreeTrialEndTime") != null && !jsonObj.get("lineItemFreeTrialEndTime").isJsonNull()) && !jsonObj.get("lineItemFreeTrialEndTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lineItemFreeTrialEndTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lineItemFreeTrialEndTime").toString()));
      }
      if (jsonObj.get("lineItemPromotionSpecs") != null && !jsonObj.get("lineItemPromotionSpecs").isJsonNull()) {
        JsonArray jsonArraylineItemPromotionSpecs = jsonObj.getAsJsonArray("lineItemPromotionSpecs");
        if (jsonArraylineItemPromotionSpecs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lineItemPromotionSpecs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lineItemPromotionSpecs` to be an array in the JSON string but got `%s`", jsonObj.get("lineItemPromotionSpecs").toString()));
          }

          // validate the optional field `lineItemPromotionSpecs` (array)
          for (int i = 0; i < jsonArraylineItemPromotionSpecs.size(); i++) {
            GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec.validateJsonElement(jsonArraylineItemPromotionSpecs.get(i));
          };
        }
      }
      // validate the optional field `oneTimeRecurrenceDetails`
      if (jsonObj.get("oneTimeRecurrenceDetails") != null && !jsonObj.get("oneTimeRecurrenceDetails").isJsonNull()) {
        GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItemOneTimeRecurrenceDetails.validateJsonElement(jsonObj.get("oneTimeRecurrenceDetails"));
      }
      if ((jsonObj.get("product") != null && !jsonObj.get("product").isJsonNull()) && !jsonObj.get("product").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product").toString()));
      }
      // validate the optional field `productPayload`
      if (jsonObj.get("productPayload") != null && !jsonObj.get("productPayload").isJsonNull()) {
        GoogleCloudPaymentsResellerSubscriptionV1ProductPayload.validateJsonElement(jsonObj.get("productPayload"));
      }
      if ((jsonObj.get("recurrenceType") != null && !jsonObj.get("recurrenceType").isJsonNull()) && !jsonObj.get("recurrenceType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recurrenceType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recurrenceType").toString()));
      }
      // validate the optional field `recurrenceType`
      if (jsonObj.get("recurrenceType") != null && !jsonObj.get("recurrenceType").isJsonNull()) {
        RecurrenceTypeEnum.validateJsonElement(jsonObj.get("recurrenceType"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem>() {
           @Override
           public void write(JsonWriter out, GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem
   */
  public static GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.class);
  }

  /**
   * Convert an instance of GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

