/*
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1Duration;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1FiniteBillingCycleDetails;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1ProductPriceConfig;
import org.openapitools.client.model.GoogleTypeLocalizedText;
import org.openapitools.client.model.ProductBundleDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A Product resource that defines a subscription service that can be resold.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:19.691143-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudPaymentsResellerSubscriptionV1Product {
  public static final String SERIALIZED_NAME_BUNDLE_DETAILS = "bundleDetails";
  @SerializedName(SERIALIZED_NAME_BUNDLE_DETAILS)
  private ProductBundleDetails bundleDetails;

  public static final String SERIALIZED_NAME_FINITE_BILLING_CYCLE_DETAILS = "finiteBillingCycleDetails";
  @SerializedName(SERIALIZED_NAME_FINITE_BILLING_CYCLE_DETAILS)
  private GoogleCloudPaymentsResellerSubscriptionV1FiniteBillingCycleDetails finiteBillingCycleDetails;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRICE_CONFIGS = "priceConfigs";
  @SerializedName(SERIALIZED_NAME_PRICE_CONFIGS)
  private List<GoogleCloudPaymentsResellerSubscriptionV1ProductPriceConfig> priceConfigs = new ArrayList<>();

  /**
   * Output only. Output Only. Specifies the type of the product.
   */
  @JsonAdapter(ProductTypeEnum.Adapter.class)
  public enum ProductTypeEnum {
    UNSPECIFIED("PRODUCT_TYPE_UNSPECIFIED"),
    
    SUBSCRIPTION("PRODUCT_TYPE_SUBSCRIPTION"),
    
    BUNDLE_SUBSCRIPTION("PRODUCT_TYPE_BUNDLE_SUBSCRIPTION");

    private String value;

    ProductTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProductTypeEnum fromValue(String value) {
      for (ProductTypeEnum b : ProductTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProductTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProductTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProductTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProductTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProductTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "productType";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  private ProductTypeEnum productType;

  public static final String SERIALIZED_NAME_REGION_CODES = "regionCodes";
  @SerializedName(SERIALIZED_NAME_REGION_CODES)
  private List<String> regionCodes = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUBSCRIPTION_BILLING_CYCLE_DURATION = "subscriptionBillingCycleDuration";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_BILLING_CYCLE_DURATION)
  private GoogleCloudPaymentsResellerSubscriptionV1Duration subscriptionBillingCycleDuration;

  public static final String SERIALIZED_NAME_TITLES = "titles";
  @SerializedName(SERIALIZED_NAME_TITLES)
  private List<GoogleTypeLocalizedText> titles = new ArrayList<>();

  public GoogleCloudPaymentsResellerSubscriptionV1Product() {
  }

  public GoogleCloudPaymentsResellerSubscriptionV1Product(
     List<GoogleCloudPaymentsResellerSubscriptionV1ProductPriceConfig> priceConfigs, 
     ProductTypeEnum productType, 
     List<String> regionCodes, 
     List<GoogleTypeLocalizedText> titles
  ) {
    this();
    this.priceConfigs = priceConfigs;
    this.productType = productType;
    this.regionCodes = regionCodes;
    this.titles = titles;
  }

  public GoogleCloudPaymentsResellerSubscriptionV1Product bundleDetails(ProductBundleDetails bundleDetails) {
    this.bundleDetails = bundleDetails;
    return this;
  }

  /**
   * Get bundleDetails
   * @return bundleDetails
   */
  @javax.annotation.Nullable
  public ProductBundleDetails getBundleDetails() {
    return bundleDetails;
  }

  public void setBundleDetails(ProductBundleDetails bundleDetails) {
    this.bundleDetails = bundleDetails;
  }


  public GoogleCloudPaymentsResellerSubscriptionV1Product finiteBillingCycleDetails(GoogleCloudPaymentsResellerSubscriptionV1FiniteBillingCycleDetails finiteBillingCycleDetails) {
    this.finiteBillingCycleDetails = finiteBillingCycleDetails;
    return this;
  }

  /**
   * Get finiteBillingCycleDetails
   * @return finiteBillingCycleDetails
   */
  @javax.annotation.Nullable
  public GoogleCloudPaymentsResellerSubscriptionV1FiniteBillingCycleDetails getFiniteBillingCycleDetails() {
    return finiteBillingCycleDetails;
  }

  public void setFiniteBillingCycleDetails(GoogleCloudPaymentsResellerSubscriptionV1FiniteBillingCycleDetails finiteBillingCycleDetails) {
    this.finiteBillingCycleDetails = finiteBillingCycleDetails;
  }


  public GoogleCloudPaymentsResellerSubscriptionV1Product name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Identifier. Response only. Resource name of the product. It will have the format of \&quot;partners/{partner_id}/products/{product_id}\&quot;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  /**
   * Output only. Price configs for the product in the available regions.
   * @return priceConfigs
   */
  @javax.annotation.Nullable
  public List<GoogleCloudPaymentsResellerSubscriptionV1ProductPriceConfig> getPriceConfigs() {
    return priceConfigs;
  }



  /**
   * Output only. Output Only. Specifies the type of the product.
   * @return productType
   */
  @javax.annotation.Nullable
  public ProductTypeEnum getProductType() {
    return productType;
  }



  /**
   * Output only. 2-letter ISO region code where the product is available in. Ex. \&quot;US\&quot; Please refers to: https://en.wikipedia.org/wiki/ISO_3166-1
   * @return regionCodes
   */
  @javax.annotation.Nullable
  public List<String> getRegionCodes() {
    return regionCodes;
  }



  public GoogleCloudPaymentsResellerSubscriptionV1Product subscriptionBillingCycleDuration(GoogleCloudPaymentsResellerSubscriptionV1Duration subscriptionBillingCycleDuration) {
    this.subscriptionBillingCycleDuration = subscriptionBillingCycleDuration;
    return this;
  }

  /**
   * Get subscriptionBillingCycleDuration
   * @return subscriptionBillingCycleDuration
   */
  @javax.annotation.Nullable
  public GoogleCloudPaymentsResellerSubscriptionV1Duration getSubscriptionBillingCycleDuration() {
    return subscriptionBillingCycleDuration;
  }

  public void setSubscriptionBillingCycleDuration(GoogleCloudPaymentsResellerSubscriptionV1Duration subscriptionBillingCycleDuration) {
    this.subscriptionBillingCycleDuration = subscriptionBillingCycleDuration;
  }


  /**
   * Output only. Localized human readable name of the product.
   * @return titles
   */
  @javax.annotation.Nullable
  public List<GoogleTypeLocalizedText> getTitles() {
    return titles;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudPaymentsResellerSubscriptionV1Product googleCloudPaymentsResellerSubscriptionV1Product = (GoogleCloudPaymentsResellerSubscriptionV1Product) o;
    return Objects.equals(this.bundleDetails, googleCloudPaymentsResellerSubscriptionV1Product.bundleDetails) &&
        Objects.equals(this.finiteBillingCycleDetails, googleCloudPaymentsResellerSubscriptionV1Product.finiteBillingCycleDetails) &&
        Objects.equals(this.name, googleCloudPaymentsResellerSubscriptionV1Product.name) &&
        Objects.equals(this.priceConfigs, googleCloudPaymentsResellerSubscriptionV1Product.priceConfigs) &&
        Objects.equals(this.productType, googleCloudPaymentsResellerSubscriptionV1Product.productType) &&
        Objects.equals(this.regionCodes, googleCloudPaymentsResellerSubscriptionV1Product.regionCodes) &&
        Objects.equals(this.subscriptionBillingCycleDuration, googleCloudPaymentsResellerSubscriptionV1Product.subscriptionBillingCycleDuration) &&
        Objects.equals(this.titles, googleCloudPaymentsResellerSubscriptionV1Product.titles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bundleDetails, finiteBillingCycleDetails, name, priceConfigs, productType, regionCodes, subscriptionBillingCycleDuration, titles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudPaymentsResellerSubscriptionV1Product {\n");
    sb.append("    bundleDetails: ").append(toIndentedString(bundleDetails)).append("\n");
    sb.append("    finiteBillingCycleDetails: ").append(toIndentedString(finiteBillingCycleDetails)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    priceConfigs: ").append(toIndentedString(priceConfigs)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    regionCodes: ").append(toIndentedString(regionCodes)).append("\n");
    sb.append("    subscriptionBillingCycleDuration: ").append(toIndentedString(subscriptionBillingCycleDuration)).append("\n");
    sb.append("    titles: ").append(toIndentedString(titles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bundleDetails");
    openapiFields.add("finiteBillingCycleDetails");
    openapiFields.add("name");
    openapiFields.add("priceConfigs");
    openapiFields.add("productType");
    openapiFields.add("regionCodes");
    openapiFields.add("subscriptionBillingCycleDuration");
    openapiFields.add("titles");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudPaymentsResellerSubscriptionV1Product
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudPaymentsResellerSubscriptionV1Product.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudPaymentsResellerSubscriptionV1Product is not found in the empty JSON string", GoogleCloudPaymentsResellerSubscriptionV1Product.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudPaymentsResellerSubscriptionV1Product.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudPaymentsResellerSubscriptionV1Product` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bundleDetails`
      if (jsonObj.get("bundleDetails") != null && !jsonObj.get("bundleDetails").isJsonNull()) {
        ProductBundleDetails.validateJsonElement(jsonObj.get("bundleDetails"));
      }
      // validate the optional field `finiteBillingCycleDetails`
      if (jsonObj.get("finiteBillingCycleDetails") != null && !jsonObj.get("finiteBillingCycleDetails").isJsonNull()) {
        GoogleCloudPaymentsResellerSubscriptionV1FiniteBillingCycleDetails.validateJsonElement(jsonObj.get("finiteBillingCycleDetails"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("priceConfigs") != null && !jsonObj.get("priceConfigs").isJsonNull()) {
        JsonArray jsonArraypriceConfigs = jsonObj.getAsJsonArray("priceConfigs");
        if (jsonArraypriceConfigs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("priceConfigs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `priceConfigs` to be an array in the JSON string but got `%s`", jsonObj.get("priceConfigs").toString()));
          }

          // validate the optional field `priceConfigs` (array)
          for (int i = 0; i < jsonArraypriceConfigs.size(); i++) {
            GoogleCloudPaymentsResellerSubscriptionV1ProductPriceConfig.validateJsonElement(jsonArraypriceConfigs.get(i));
          };
        }
      }
      if ((jsonObj.get("productType") != null && !jsonObj.get("productType").isJsonNull()) && !jsonObj.get("productType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productType").toString()));
      }
      // validate the optional field `productType`
      if (jsonObj.get("productType") != null && !jsonObj.get("productType").isJsonNull()) {
        ProductTypeEnum.validateJsonElement(jsonObj.get("productType"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("regionCodes") != null && !jsonObj.get("regionCodes").isJsonNull() && !jsonObj.get("regionCodes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `regionCodes` to be an array in the JSON string but got `%s`", jsonObj.get("regionCodes").toString()));
      }
      // validate the optional field `subscriptionBillingCycleDuration`
      if (jsonObj.get("subscriptionBillingCycleDuration") != null && !jsonObj.get("subscriptionBillingCycleDuration").isJsonNull()) {
        GoogleCloudPaymentsResellerSubscriptionV1Duration.validateJsonElement(jsonObj.get("subscriptionBillingCycleDuration"));
      }
      if (jsonObj.get("titles") != null && !jsonObj.get("titles").isJsonNull()) {
        JsonArray jsonArraytitles = jsonObj.getAsJsonArray("titles");
        if (jsonArraytitles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("titles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `titles` to be an array in the JSON string but got `%s`", jsonObj.get("titles").toString()));
          }

          // validate the optional field `titles` (array)
          for (int i = 0; i < jsonArraytitles.size(); i++) {
            GoogleTypeLocalizedText.validateJsonElement(jsonArraytitles.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudPaymentsResellerSubscriptionV1Product.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudPaymentsResellerSubscriptionV1Product' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudPaymentsResellerSubscriptionV1Product> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudPaymentsResellerSubscriptionV1Product.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudPaymentsResellerSubscriptionV1Product>() {
           @Override
           public void write(JsonWriter out, GoogleCloudPaymentsResellerSubscriptionV1Product value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudPaymentsResellerSubscriptionV1Product read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudPaymentsResellerSubscriptionV1Product given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudPaymentsResellerSubscriptionV1Product
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudPaymentsResellerSubscriptionV1Product
   */
  public static GoogleCloudPaymentsResellerSubscriptionV1Product fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudPaymentsResellerSubscriptionV1Product.class);
  }

  /**
   * Convert an instance of GoogleCloudPaymentsResellerSubscriptionV1Product to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

