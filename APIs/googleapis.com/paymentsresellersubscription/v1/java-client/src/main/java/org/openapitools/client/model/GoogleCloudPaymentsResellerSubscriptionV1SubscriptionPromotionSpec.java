/*
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1Duration;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1PromotionIntroductoryPricingDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes the spec for one promotion.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:19.691143-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec {
  public static final String SERIALIZED_NAME_FREE_TRIAL_DURATION = "freeTrialDuration";
  @SerializedName(SERIALIZED_NAME_FREE_TRIAL_DURATION)
  private GoogleCloudPaymentsResellerSubscriptionV1Duration freeTrialDuration;

  public static final String SERIALIZED_NAME_INTRODUCTORY_PRICING_DETAILS = "introductoryPricingDetails";
  @SerializedName(SERIALIZED_NAME_INTRODUCTORY_PRICING_DETAILS)
  private GoogleCloudPaymentsResellerSubscriptionV1PromotionIntroductoryPricingDetails introductoryPricingDetails;

  public static final String SERIALIZED_NAME_PROMOTION = "promotion";
  @SerializedName(SERIALIZED_NAME_PROMOTION)
  private String promotion;

  /**
   * Output only. The type of the promotion for the spec.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    UNSPECIFIED("PROMOTION_TYPE_UNSPECIFIED"),
    
    FREE_TRIAL("PROMOTION_TYPE_FREE_TRIAL"),
    
    INTRODUCTORY_PRICING("PROMOTION_TYPE_INTRODUCTORY_PRICING");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec() {
  }

  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec(
     TypeEnum type
  ) {
    this();
    this.type = type;
  }

  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec freeTrialDuration(GoogleCloudPaymentsResellerSubscriptionV1Duration freeTrialDuration) {
    this.freeTrialDuration = freeTrialDuration;
    return this;
  }

  /**
   * Get freeTrialDuration
   * @return freeTrialDuration
   */
  @javax.annotation.Nullable
  public GoogleCloudPaymentsResellerSubscriptionV1Duration getFreeTrialDuration() {
    return freeTrialDuration;
  }

  public void setFreeTrialDuration(GoogleCloudPaymentsResellerSubscriptionV1Duration freeTrialDuration) {
    this.freeTrialDuration = freeTrialDuration;
  }


  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec introductoryPricingDetails(GoogleCloudPaymentsResellerSubscriptionV1PromotionIntroductoryPricingDetails introductoryPricingDetails) {
    this.introductoryPricingDetails = introductoryPricingDetails;
    return this;
  }

  /**
   * Get introductoryPricingDetails
   * @return introductoryPricingDetails
   */
  @javax.annotation.Nullable
  public GoogleCloudPaymentsResellerSubscriptionV1PromotionIntroductoryPricingDetails getIntroductoryPricingDetails() {
    return introductoryPricingDetails;
  }

  public void setIntroductoryPricingDetails(GoogleCloudPaymentsResellerSubscriptionV1PromotionIntroductoryPricingDetails introductoryPricingDetails) {
    this.introductoryPricingDetails = introductoryPricingDetails;
  }


  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec promotion(String promotion) {
    this.promotion = promotion;
    return this;
  }

  /**
   * Required. Promotion resource name that identifies a promotion. The format is &#39;partners/{partner_id}/promotions/{promotion_id}&#39;.
   * @return promotion
   */
  @javax.annotation.Nullable
  public String getPromotion() {
    return promotion;
  }

  public void setPromotion(String promotion) {
    this.promotion = promotion;
  }


  /**
   * Output only. The type of the promotion for the spec.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec googleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec = (GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec) o;
    return Objects.equals(this.freeTrialDuration, googleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec.freeTrialDuration) &&
        Objects.equals(this.introductoryPricingDetails, googleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec.introductoryPricingDetails) &&
        Objects.equals(this.promotion, googleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec.promotion) &&
        Objects.equals(this.type, googleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(freeTrialDuration, introductoryPricingDetails, promotion, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec {\n");
    sb.append("    freeTrialDuration: ").append(toIndentedString(freeTrialDuration)).append("\n");
    sb.append("    introductoryPricingDetails: ").append(toIndentedString(introductoryPricingDetails)).append("\n");
    sb.append("    promotion: ").append(toIndentedString(promotion)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("freeTrialDuration");
    openapiFields.add("introductoryPricingDetails");
    openapiFields.add("promotion");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec is not found in the empty JSON string", GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `freeTrialDuration`
      if (jsonObj.get("freeTrialDuration") != null && !jsonObj.get("freeTrialDuration").isJsonNull()) {
        GoogleCloudPaymentsResellerSubscriptionV1Duration.validateJsonElement(jsonObj.get("freeTrialDuration"));
      }
      // validate the optional field `introductoryPricingDetails`
      if (jsonObj.get("introductoryPricingDetails") != null && !jsonObj.get("introductoryPricingDetails").isJsonNull()) {
        GoogleCloudPaymentsResellerSubscriptionV1PromotionIntroductoryPricingDetails.validateJsonElement(jsonObj.get("introductoryPricingDetails"));
      }
      if ((jsonObj.get("promotion") != null && !jsonObj.get("promotion").isJsonNull()) && !jsonObj.get("promotion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `promotion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("promotion").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec
   */
  public static GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec.class);
  }

  /**
   * Convert an instance of GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

