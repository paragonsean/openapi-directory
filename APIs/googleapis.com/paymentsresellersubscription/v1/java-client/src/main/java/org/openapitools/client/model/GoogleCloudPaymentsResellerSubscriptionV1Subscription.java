/*
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1Location;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1SubscriptionCancellationDetails;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1SubscriptionUpgradeDowngradeDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A subscription serves as a central billing entity between an external partner and Google. The underlying Google services rely on the subscription state to grant or revoke the user&#39;s service entitlement. It&#39;s important to note that the subscription state may not always perfectly align with the user&#39;s service entitlement. For example, some Google services may continue providing access to the user until the current billing cycle ends, even if the subscription has been immediately canceled. However, other services may not do the same. To fully understand the specific details, please consult the relevant contract or product policy.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:19.691143-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudPaymentsResellerSubscriptionV1Subscription {
  public static final String SERIALIZED_NAME_CANCELLATION_DETAILS = "cancellationDetails";
  @SerializedName(SERIALIZED_NAME_CANCELLATION_DETAILS)
  private GoogleCloudPaymentsResellerSubscriptionV1SubscriptionCancellationDetails cancellationDetails;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_CYCLE_END_TIME = "cycleEndTime";
  @SerializedName(SERIALIZED_NAME_CYCLE_END_TIME)
  private String cycleEndTime;

  public static final String SERIALIZED_NAME_END_USER_ENTITLED = "endUserEntitled";
  @SerializedName(SERIALIZED_NAME_END_USER_ENTITLED)
  private Boolean endUserEntitled;

  public static final String SERIALIZED_NAME_FREE_TRIAL_END_TIME = "freeTrialEndTime";
  @SerializedName(SERIALIZED_NAME_FREE_TRIAL_END_TIME)
  private String freeTrialEndTime;

  public static final String SERIALIZED_NAME_LINE_ITEMS = "lineItems";
  @SerializedName(SERIALIZED_NAME_LINE_ITEMS)
  private List<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem> lineItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARTNER_USER_TOKEN = "partnerUserToken";
  @SerializedName(SERIALIZED_NAME_PARTNER_USER_TOKEN)
  private String partnerUserToken;

  /**
   * Output only. Describes the processing state of the subscription. See more details at [the lifecycle of a subscription](/payments/reseller/subscription/reference/index/Receive.Notifications#payments-subscription-lifecycle).
   */
  @JsonAdapter(ProcessingStateEnum.Adapter.class)
  public enum ProcessingStateEnum {
    UNSPECIFIED("PROCESSING_STATE_UNSPECIFIED"),
    
    CANCELLING("PROCESSING_STATE_CANCELLING"),
    
    RECURRING("PROCESSING_STATE_RECURRING");

    private String value;

    ProcessingStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProcessingStateEnum fromValue(String value) {
      for (ProcessingStateEnum b : ProcessingStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProcessingStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProcessingStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProcessingStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProcessingStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProcessingStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROCESSING_STATE = "processingState";
  @SerializedName(SERIALIZED_NAME_PROCESSING_STATE)
  private ProcessingStateEnum processingState;

  public static final String SERIALIZED_NAME_PRODUCTS = "products";
  @SerializedName(SERIALIZED_NAME_PRODUCTS)
  private List<String> products = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROMOTION_SPECS = "promotionSpecs";
  @SerializedName(SERIALIZED_NAME_PROMOTION_SPECS)
  private List<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec> promotionSpecs = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROMOTIONS = "promotions";
  @SerializedName(SERIALIZED_NAME_PROMOTIONS)
  private List<String> promotions = new ArrayList<>();

  public static final String SERIALIZED_NAME_REDIRECT_URI = "redirectUri";
  @SerializedName(SERIALIZED_NAME_REDIRECT_URI)
  private String redirectUri;

  public static final String SERIALIZED_NAME_RENEWAL_TIME = "renewalTime";
  @SerializedName(SERIALIZED_NAME_RENEWAL_TIME)
  private String renewalTime;

  public static final String SERIALIZED_NAME_SERVICE_LOCATION = "serviceLocation";
  @SerializedName(SERIALIZED_NAME_SERVICE_LOCATION)
  private GoogleCloudPaymentsResellerSubscriptionV1Location serviceLocation;

  /**
   * Output only. Describes the state of the subscription. See more details at [the lifecycle of a subscription](/payments/reseller/subscription/reference/index/Receive.Notifications#payments-subscription-lifecycle).
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    UNSPECIFIED("STATE_UNSPECIFIED"),
    
    CREATED("STATE_CREATED"),
    
    ACTIVE("STATE_ACTIVE"),
    
    CANCELLED("STATE_CANCELLED"),
    
    IN_GRACE_PERIOD("STATE_IN_GRACE_PERIOD"),
    
    CANCEL_AT_END_OF_CYCLE("STATE_CANCEL_AT_END_OF_CYCLE"),
    
    SUSPENDED("STATE_SUSPENDED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public static final String SERIALIZED_NAME_UPGRADE_DOWNGRADE_DETAILS = "upgradeDowngradeDetails";
  @SerializedName(SERIALIZED_NAME_UPGRADE_DOWNGRADE_DETAILS)
  private GoogleCloudPaymentsResellerSubscriptionV1SubscriptionUpgradeDowngradeDetails upgradeDowngradeDetails;

  public GoogleCloudPaymentsResellerSubscriptionV1Subscription() {
  }

  public GoogleCloudPaymentsResellerSubscriptionV1Subscription(
     String createTime, 
     String cycleEndTime, 
     Boolean endUserEntitled, 
     String freeTrialEndTime, 
     ProcessingStateEnum processingState, 
     String redirectUri, 
     String renewalTime, 
     StateEnum state, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.cycleEndTime = cycleEndTime;
    this.endUserEntitled = endUserEntitled;
    this.freeTrialEndTime = freeTrialEndTime;
    this.processingState = processingState;
    this.redirectUri = redirectUri;
    this.renewalTime = renewalTime;
    this.state = state;
    this.updateTime = updateTime;
  }

  public GoogleCloudPaymentsResellerSubscriptionV1Subscription cancellationDetails(GoogleCloudPaymentsResellerSubscriptionV1SubscriptionCancellationDetails cancellationDetails) {
    this.cancellationDetails = cancellationDetails;
    return this;
  }

  /**
   * Get cancellationDetails
   * @return cancellationDetails
   */
  @javax.annotation.Nullable
  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionCancellationDetails getCancellationDetails() {
    return cancellationDetails;
  }

  public void setCancellationDetails(GoogleCloudPaymentsResellerSubscriptionV1SubscriptionCancellationDetails cancellationDetails) {
    this.cancellationDetails = cancellationDetails;
  }


  /**
   * Output only. System generated timestamp when the subscription is created. UTC timezone.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  /**
   * Output only. The time at which the subscription is expected to be extended, in ISO 8061 format. UTC timezone. For example: \&quot;2019-08-31T17:28:54.564Z\&quot;
   * @return cycleEndTime
   */
  @javax.annotation.Nullable
  public String getCycleEndTime() {
    return cycleEndTime;
  }



  /**
   * Output only. Indicates if the subscription is entitled to the end user.
   * @return endUserEntitled
   */
  @javax.annotation.Nullable
  public Boolean getEndUserEntitled() {
    return endUserEntitled;
  }



  /**
   * Output only. End of the free trial period, in ISO 8061 format. For example, \&quot;2019-08-31T17:28:54.564Z\&quot;. It will be set the same as createTime if no free trial promotion is specified.
   * @return freeTrialEndTime
   */
  @javax.annotation.Nullable
  public String getFreeTrialEndTime() {
    return freeTrialEndTime;
  }



  public GoogleCloudPaymentsResellerSubscriptionV1Subscription lineItems(List<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem> lineItems) {
    this.lineItems = lineItems;
    return this;
  }

  public GoogleCloudPaymentsResellerSubscriptionV1Subscription addLineItemsItem(GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem lineItemsItem) {
    if (this.lineItems == null) {
      this.lineItems = new ArrayList<>();
    }
    this.lineItems.add(lineItemsItem);
    return this;
  }

  /**
   * Required. The line items of the subscription.
   * @return lineItems
   */
  @javax.annotation.Nullable
  public List<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem> getLineItems() {
    return lineItems;
  }

  public void setLineItems(List<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem> lineItems) {
    this.lineItems = lineItems;
  }


  public GoogleCloudPaymentsResellerSubscriptionV1Subscription name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Identifier. Resource name of the subscription. It will have the format of \&quot;partners/{partner_id}/subscriptions/{subscription_id}\&quot;. This is available for authorizeAddon, but otherwise is response only.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudPaymentsResellerSubscriptionV1Subscription partnerUserToken(String partnerUserToken) {
    this.partnerUserToken = partnerUserToken;
    return this;
  }

  /**
   * Required. Identifier of the end-user in partner’s system. The value is restricted to 63 ASCII characters at the maximum.
   * @return partnerUserToken
   */
  @javax.annotation.Nullable
  public String getPartnerUserToken() {
    return partnerUserToken;
  }

  public void setPartnerUserToken(String partnerUserToken) {
    this.partnerUserToken = partnerUserToken;
  }


  /**
   * Output only. Describes the processing state of the subscription. See more details at [the lifecycle of a subscription](/payments/reseller/subscription/reference/index/Receive.Notifications#payments-subscription-lifecycle).
   * @return processingState
   */
  @javax.annotation.Nullable
  public ProcessingStateEnum getProcessingState() {
    return processingState;
  }



  public GoogleCloudPaymentsResellerSubscriptionV1Subscription products(List<String> products) {
    this.products = products;
    return this;
  }

  public GoogleCloudPaymentsResellerSubscriptionV1Subscription addProductsItem(String productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<>();
    }
    this.products.add(productsItem);
    return this;
  }

  /**
   * Optional. Deprecated: consider using &#x60;line_items&#x60; as the input. Required. Resource name that identifies the purchased products. The format will be &#39;partners/{partner_id}/products/{product_id}&#39;.
   * @return products
   */
  @javax.annotation.Nullable
  public List<String> getProducts() {
    return products;
  }

  public void setProducts(List<String> products) {
    this.products = products;
  }


  public GoogleCloudPaymentsResellerSubscriptionV1Subscription promotionSpecs(List<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec> promotionSpecs) {
    this.promotionSpecs = promotionSpecs;
    return this;
  }

  public GoogleCloudPaymentsResellerSubscriptionV1Subscription addPromotionSpecsItem(GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec promotionSpecsItem) {
    if (this.promotionSpecs == null) {
      this.promotionSpecs = new ArrayList<>();
    }
    this.promotionSpecs.add(promotionSpecsItem);
    return this;
  }

  /**
   * Optional. Subscription-level promotions. Only free trial is supported on this level. It determines the first renewal time of the subscription to be the end of the free trial period. Specify the promotion resource name only when used as input.
   * @return promotionSpecs
   */
  @javax.annotation.Nullable
  public List<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec> getPromotionSpecs() {
    return promotionSpecs;
  }

  public void setPromotionSpecs(List<GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec> promotionSpecs) {
    this.promotionSpecs = promotionSpecs;
  }


  public GoogleCloudPaymentsResellerSubscriptionV1Subscription promotions(List<String> promotions) {
    this.promotions = promotions;
    return this;
  }

  public GoogleCloudPaymentsResellerSubscriptionV1Subscription addPromotionsItem(String promotionsItem) {
    if (this.promotions == null) {
      this.promotions = new ArrayList<>();
    }
    this.promotions.add(promotionsItem);
    return this;
  }

  /**
   * Optional. Deprecated: consider using the top-level &#x60;promotion_specs&#x60; as the input. Optional. Resource name that identifies one or more promotions that can be applied on the product. A typical promotion for a subscription is Free trial. The format will be &#39;partners/{partner_id}/promotions/{promotion_id}&#39;.
   * @return promotions
   */
  @javax.annotation.Nullable
  public List<String> getPromotions() {
    return promotions;
  }

  public void setPromotions(List<String> promotions) {
    this.promotions = promotions;
  }


  /**
   * Output only. The place where partners should redirect the end-user to after creation. This field might also be populated when creation failed. However, Partners should always prepare a default URL to redirect the user in case this field is empty.
   * @return redirectUri
   */
  @javax.annotation.Nullable
  public String getRedirectUri() {
    return redirectUri;
  }



  /**
   * Output only. The time at which the subscription is expected to be renewed by Google - a new charge will be incurred and the service entitlement will be renewed. A non-immediate cancellation will take place at this time too, before which, the service entitlement for the end user will remain valid. UTC timezone in ISO 8061 format. For example: \&quot;2019-08-31T17:28:54.564Z\&quot;
   * @return renewalTime
   */
  @javax.annotation.Nullable
  public String getRenewalTime() {
    return renewalTime;
  }



  public GoogleCloudPaymentsResellerSubscriptionV1Subscription serviceLocation(GoogleCloudPaymentsResellerSubscriptionV1Location serviceLocation) {
    this.serviceLocation = serviceLocation;
    return this;
  }

  /**
   * Get serviceLocation
   * @return serviceLocation
   */
  @javax.annotation.Nullable
  public GoogleCloudPaymentsResellerSubscriptionV1Location getServiceLocation() {
    return serviceLocation;
  }

  public void setServiceLocation(GoogleCloudPaymentsResellerSubscriptionV1Location serviceLocation) {
    this.serviceLocation = serviceLocation;
  }


  /**
   * Output only. Describes the state of the subscription. See more details at [the lifecycle of a subscription](/payments/reseller/subscription/reference/index/Receive.Notifications#payments-subscription-lifecycle).
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  /**
   * Output only. System generated timestamp when the subscription is most recently updated. UTC timezone.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }



  public GoogleCloudPaymentsResellerSubscriptionV1Subscription upgradeDowngradeDetails(GoogleCloudPaymentsResellerSubscriptionV1SubscriptionUpgradeDowngradeDetails upgradeDowngradeDetails) {
    this.upgradeDowngradeDetails = upgradeDowngradeDetails;
    return this;
  }

  /**
   * Get upgradeDowngradeDetails
   * @return upgradeDowngradeDetails
   */
  @javax.annotation.Nullable
  public GoogleCloudPaymentsResellerSubscriptionV1SubscriptionUpgradeDowngradeDetails getUpgradeDowngradeDetails() {
    return upgradeDowngradeDetails;
  }

  public void setUpgradeDowngradeDetails(GoogleCloudPaymentsResellerSubscriptionV1SubscriptionUpgradeDowngradeDetails upgradeDowngradeDetails) {
    this.upgradeDowngradeDetails = upgradeDowngradeDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudPaymentsResellerSubscriptionV1Subscription googleCloudPaymentsResellerSubscriptionV1Subscription = (GoogleCloudPaymentsResellerSubscriptionV1Subscription) o;
    return Objects.equals(this.cancellationDetails, googleCloudPaymentsResellerSubscriptionV1Subscription.cancellationDetails) &&
        Objects.equals(this.createTime, googleCloudPaymentsResellerSubscriptionV1Subscription.createTime) &&
        Objects.equals(this.cycleEndTime, googleCloudPaymentsResellerSubscriptionV1Subscription.cycleEndTime) &&
        Objects.equals(this.endUserEntitled, googleCloudPaymentsResellerSubscriptionV1Subscription.endUserEntitled) &&
        Objects.equals(this.freeTrialEndTime, googleCloudPaymentsResellerSubscriptionV1Subscription.freeTrialEndTime) &&
        Objects.equals(this.lineItems, googleCloudPaymentsResellerSubscriptionV1Subscription.lineItems) &&
        Objects.equals(this.name, googleCloudPaymentsResellerSubscriptionV1Subscription.name) &&
        Objects.equals(this.partnerUserToken, googleCloudPaymentsResellerSubscriptionV1Subscription.partnerUserToken) &&
        Objects.equals(this.processingState, googleCloudPaymentsResellerSubscriptionV1Subscription.processingState) &&
        Objects.equals(this.products, googleCloudPaymentsResellerSubscriptionV1Subscription.products) &&
        Objects.equals(this.promotionSpecs, googleCloudPaymentsResellerSubscriptionV1Subscription.promotionSpecs) &&
        Objects.equals(this.promotions, googleCloudPaymentsResellerSubscriptionV1Subscription.promotions) &&
        Objects.equals(this.redirectUri, googleCloudPaymentsResellerSubscriptionV1Subscription.redirectUri) &&
        Objects.equals(this.renewalTime, googleCloudPaymentsResellerSubscriptionV1Subscription.renewalTime) &&
        Objects.equals(this.serviceLocation, googleCloudPaymentsResellerSubscriptionV1Subscription.serviceLocation) &&
        Objects.equals(this.state, googleCloudPaymentsResellerSubscriptionV1Subscription.state) &&
        Objects.equals(this.updateTime, googleCloudPaymentsResellerSubscriptionV1Subscription.updateTime) &&
        Objects.equals(this.upgradeDowngradeDetails, googleCloudPaymentsResellerSubscriptionV1Subscription.upgradeDowngradeDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cancellationDetails, createTime, cycleEndTime, endUserEntitled, freeTrialEndTime, lineItems, name, partnerUserToken, processingState, products, promotionSpecs, promotions, redirectUri, renewalTime, serviceLocation, state, updateTime, upgradeDowngradeDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudPaymentsResellerSubscriptionV1Subscription {\n");
    sb.append("    cancellationDetails: ").append(toIndentedString(cancellationDetails)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    cycleEndTime: ").append(toIndentedString(cycleEndTime)).append("\n");
    sb.append("    endUserEntitled: ").append(toIndentedString(endUserEntitled)).append("\n");
    sb.append("    freeTrialEndTime: ").append(toIndentedString(freeTrialEndTime)).append("\n");
    sb.append("    lineItems: ").append(toIndentedString(lineItems)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    partnerUserToken: ").append(toIndentedString(partnerUserToken)).append("\n");
    sb.append("    processingState: ").append(toIndentedString(processingState)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    promotionSpecs: ").append(toIndentedString(promotionSpecs)).append("\n");
    sb.append("    promotions: ").append(toIndentedString(promotions)).append("\n");
    sb.append("    redirectUri: ").append(toIndentedString(redirectUri)).append("\n");
    sb.append("    renewalTime: ").append(toIndentedString(renewalTime)).append("\n");
    sb.append("    serviceLocation: ").append(toIndentedString(serviceLocation)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    upgradeDowngradeDetails: ").append(toIndentedString(upgradeDowngradeDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cancellationDetails");
    openapiFields.add("createTime");
    openapiFields.add("cycleEndTime");
    openapiFields.add("endUserEntitled");
    openapiFields.add("freeTrialEndTime");
    openapiFields.add("lineItems");
    openapiFields.add("name");
    openapiFields.add("partnerUserToken");
    openapiFields.add("processingState");
    openapiFields.add("products");
    openapiFields.add("promotionSpecs");
    openapiFields.add("promotions");
    openapiFields.add("redirectUri");
    openapiFields.add("renewalTime");
    openapiFields.add("serviceLocation");
    openapiFields.add("state");
    openapiFields.add("updateTime");
    openapiFields.add("upgradeDowngradeDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudPaymentsResellerSubscriptionV1Subscription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudPaymentsResellerSubscriptionV1Subscription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudPaymentsResellerSubscriptionV1Subscription is not found in the empty JSON string", GoogleCloudPaymentsResellerSubscriptionV1Subscription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudPaymentsResellerSubscriptionV1Subscription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudPaymentsResellerSubscriptionV1Subscription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `cancellationDetails`
      if (jsonObj.get("cancellationDetails") != null && !jsonObj.get("cancellationDetails").isJsonNull()) {
        GoogleCloudPaymentsResellerSubscriptionV1SubscriptionCancellationDetails.validateJsonElement(jsonObj.get("cancellationDetails"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("cycleEndTime") != null && !jsonObj.get("cycleEndTime").isJsonNull()) && !jsonObj.get("cycleEndTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cycleEndTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cycleEndTime").toString()));
      }
      if ((jsonObj.get("freeTrialEndTime") != null && !jsonObj.get("freeTrialEndTime").isJsonNull()) && !jsonObj.get("freeTrialEndTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `freeTrialEndTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("freeTrialEndTime").toString()));
      }
      if (jsonObj.get("lineItems") != null && !jsonObj.get("lineItems").isJsonNull()) {
        JsonArray jsonArraylineItems = jsonObj.getAsJsonArray("lineItems");
        if (jsonArraylineItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lineItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lineItems` to be an array in the JSON string but got `%s`", jsonObj.get("lineItems").toString()));
          }

          // validate the optional field `lineItems` (array)
          for (int i = 0; i < jsonArraylineItems.size(); i++) {
            GoogleCloudPaymentsResellerSubscriptionV1SubscriptionLineItem.validateJsonElement(jsonArraylineItems.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("partnerUserToken") != null && !jsonObj.get("partnerUserToken").isJsonNull()) && !jsonObj.get("partnerUserToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partnerUserToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partnerUserToken").toString()));
      }
      if ((jsonObj.get("processingState") != null && !jsonObj.get("processingState").isJsonNull()) && !jsonObj.get("processingState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processingState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processingState").toString()));
      }
      // validate the optional field `processingState`
      if (jsonObj.get("processingState") != null && !jsonObj.get("processingState").isJsonNull()) {
        ProcessingStateEnum.validateJsonElement(jsonObj.get("processingState"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("products") != null && !jsonObj.get("products").isJsonNull() && !jsonObj.get("products").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `products` to be an array in the JSON string but got `%s`", jsonObj.get("products").toString()));
      }
      if (jsonObj.get("promotionSpecs") != null && !jsonObj.get("promotionSpecs").isJsonNull()) {
        JsonArray jsonArraypromotionSpecs = jsonObj.getAsJsonArray("promotionSpecs");
        if (jsonArraypromotionSpecs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("promotionSpecs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `promotionSpecs` to be an array in the JSON string but got `%s`", jsonObj.get("promotionSpecs").toString()));
          }

          // validate the optional field `promotionSpecs` (array)
          for (int i = 0; i < jsonArraypromotionSpecs.size(); i++) {
            GoogleCloudPaymentsResellerSubscriptionV1SubscriptionPromotionSpec.validateJsonElement(jsonArraypromotionSpecs.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("promotions") != null && !jsonObj.get("promotions").isJsonNull() && !jsonObj.get("promotions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `promotions` to be an array in the JSON string but got `%s`", jsonObj.get("promotions").toString()));
      }
      if ((jsonObj.get("redirectUri") != null && !jsonObj.get("redirectUri").isJsonNull()) && !jsonObj.get("redirectUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `redirectUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redirectUri").toString()));
      }
      if ((jsonObj.get("renewalTime") != null && !jsonObj.get("renewalTime").isJsonNull()) && !jsonObj.get("renewalTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `renewalTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("renewalTime").toString()));
      }
      // validate the optional field `serviceLocation`
      if (jsonObj.get("serviceLocation") != null && !jsonObj.get("serviceLocation").isJsonNull()) {
        GoogleCloudPaymentsResellerSubscriptionV1Location.validateJsonElement(jsonObj.get("serviceLocation"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
      // validate the optional field `upgradeDowngradeDetails`
      if (jsonObj.get("upgradeDowngradeDetails") != null && !jsonObj.get("upgradeDowngradeDetails").isJsonNull()) {
        GoogleCloudPaymentsResellerSubscriptionV1SubscriptionUpgradeDowngradeDetails.validateJsonElement(jsonObj.get("upgradeDowngradeDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudPaymentsResellerSubscriptionV1Subscription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudPaymentsResellerSubscriptionV1Subscription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudPaymentsResellerSubscriptionV1Subscription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudPaymentsResellerSubscriptionV1Subscription.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudPaymentsResellerSubscriptionV1Subscription>() {
           @Override
           public void write(JsonWriter out, GoogleCloudPaymentsResellerSubscriptionV1Subscription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudPaymentsResellerSubscriptionV1Subscription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudPaymentsResellerSubscriptionV1Subscription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudPaymentsResellerSubscriptionV1Subscription
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudPaymentsResellerSubscriptionV1Subscription
   */
  public static GoogleCloudPaymentsResellerSubscriptionV1Subscription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudPaymentsResellerSubscriptionV1Subscription.class);
  }

  /**
   * Convert an instance of GoogleCloudPaymentsResellerSubscriptionV1Subscription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

