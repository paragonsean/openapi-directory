/*
 * Payments Reseller Subscription API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionResponse;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionRequest;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionResponse;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionRequest;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsResponse;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1ListPromotionsResponse;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1Subscription;
import org.openapitools.client.model.GoogleCloudPaymentsResellerSubscriptionV1UndoCancelSubscriptionResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PartnersApi
 */
@Disabled
public class PartnersApiTest {

    private final PartnersApi api = new PartnersApi();

    /**
     * To retrieve the products that can be resold by the partner. It should be autenticated with a service account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentsresellersubscriptionPartnersProductsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse response = api.paymentsresellersubscriptionPartnersProductsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * To find eligible promotions for the current user. The API requires user authorization via OAuth. The bare minimum oauth scope &#x60;openid&#x60; is sufficient, which will skip the consent screen.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentsresellersubscriptionPartnersPromotionsFindEligibleTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest googleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest = null;
        GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsResponse response = api.paymentsresellersubscriptionPartnersPromotionsFindEligible(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsRequest);
        // TODO: test validations
    }

    /**
     * To retrieve the promotions, such as free trial, that can be used by the partner. It should be autenticated with a service account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentsresellersubscriptionPartnersPromotionsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudPaymentsResellerSubscriptionV1ListPromotionsResponse response = api.paymentsresellersubscriptionPartnersPromotionsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Used by partners to cancel a subscription service either immediately or by the end of the current billing cycle for their customers. It should be called directly by the partner using service accounts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentsresellersubscriptionPartnersSubscriptionsCancelTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest googleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest = null;
        GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionResponse response = api.paymentsresellersubscriptionPartnersSubscriptionsCancel(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest);
        // TODO: test validations
    }

    /**
     * Used by partners to create a subscription for their customers. The created subscription is associated with the end user inferred from the end user credentials. This API must be authorized by the end user using OAuth.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentsresellersubscriptionPartnersSubscriptionsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String subscriptionId = null;
        GoogleCloudPaymentsResellerSubscriptionV1Subscription googleCloudPaymentsResellerSubscriptionV1Subscription = null;
        GoogleCloudPaymentsResellerSubscriptionV1Subscription response = api.paymentsresellersubscriptionPartnersSubscriptionsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, subscriptionId, googleCloudPaymentsResellerSubscriptionV1Subscription);
        // TODO: test validations
    }

    /**
     * Used by partners to entitle a previously provisioned subscription to the current end user. The end user identity is inferred from the authorized credential of the request. This API must be authorized by the end user using OAuth.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentsresellersubscriptionPartnersSubscriptionsEntitleTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionRequest googleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionRequest = null;
        GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionResponse response = api.paymentsresellersubscriptionPartnersSubscriptionsEntitle(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionRequest);
        // TODO: test validations
    }

    /**
     * [Opt-in only] Most partners should be on auto-extend by default. Used by partners to extend a subscription service for their customers on an ongoing basis for the subscription to remain active and renewable. It should be called directly by the partner using service accounts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentsresellersubscriptionPartnersSubscriptionsExtendTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionRequest googleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionRequest = null;
        GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse response = api.paymentsresellersubscriptionPartnersSubscriptionsExtend(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionRequest);
        // TODO: test validations
    }

    /**
     * Used by partners to get a subscription by id. It should be called directly by the partner using service accounts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentsresellersubscriptionPartnersSubscriptionsGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudPaymentsResellerSubscriptionV1Subscription response = api.paymentsresellersubscriptionPartnersSubscriptionsGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Used by partners to provision a subscription for their customers. This creates a subscription without associating it with the end user account. EntitleSubscription must be called separately using OAuth in order for the end user account to be associated with the subscription. It should be called directly by the partner using service accounts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentsresellersubscriptionPartnersSubscriptionsProvisionTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String subscriptionId = null;
        GoogleCloudPaymentsResellerSubscriptionV1Subscription googleCloudPaymentsResellerSubscriptionV1Subscription = null;
        GoogleCloudPaymentsResellerSubscriptionV1Subscription response = api.paymentsresellersubscriptionPartnersSubscriptionsProvision(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, subscriptionId, googleCloudPaymentsResellerSubscriptionV1Subscription);
        // TODO: test validations
    }

    /**
     * Used by partners to revoke the pending cancellation of a subscription, which is currently in &#x60;STATE_CANCEL_AT_END_OF_CYCLE&#x60; state. If the subscription is already cancelled, the request will fail. It should be called directly by the partner using service accounts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentsresellersubscriptionPartnersSubscriptionsUndoCancelTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        GoogleCloudPaymentsResellerSubscriptionV1UndoCancelSubscriptionResponse response = api.paymentsresellersubscriptionPartnersSubscriptionsUndoCancel(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

}
