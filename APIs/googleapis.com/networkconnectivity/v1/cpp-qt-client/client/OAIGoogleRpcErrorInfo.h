/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleRpcErrorInfo.h
 *
 * Describes the cause of the error with structured details. Example of an error when contacting the \&quot;pubsub.googleapis.com\&quot; API when it is not enabled: { \&quot;reason\&quot;: \&quot;API_DISABLED\&quot; \&quot;domain\&quot;: \&quot;googleapis.com\&quot; \&quot;metadata\&quot;: { \&quot;resource\&quot;: \&quot;projects/123\&quot;, \&quot;service\&quot;: \&quot;pubsub.googleapis.com\&quot; } } This response indicates that the pubsub.googleapis.com API is not enabled. Example of an error that is returned when attempting to create a Spanner instance in a region that is out of stock: { \&quot;reason\&quot;: \&quot;STOCKOUT\&quot; \&quot;domain\&quot;: \&quot;spanner.googleapis.com\&quot;, \&quot;metadata\&quot;: { \&quot;availableRegions\&quot;: \&quot;us-central1,us-east2\&quot; } }
 */

#ifndef OAIGoogleRpcErrorInfo_H
#define OAIGoogleRpcErrorInfo_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleRpcErrorInfo : public OAIObject {
public:
    OAIGoogleRpcErrorInfo();
    OAIGoogleRpcErrorInfo(QString json);
    ~OAIGoogleRpcErrorInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QMap<QString, QString> getMetadata() const;
    void setMetadata(const QMap<QString, QString> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QMap<QString, QString> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleRpcErrorInfo)

#endif // OAIGoogleRpcErrorInfo_H
