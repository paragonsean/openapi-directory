/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConsumerPscConnection.h
 *
 * PSC connection details on consumer side.
 */

#ifndef OAIConsumerPscConnection_H
#define OAIConsumerPscConnection_H

#include <QJsonObject>

#include "OAIGoogleRpcErrorInfo.h"
#include "OAIGoogleRpcStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleRpcStatus;
class OAIGoogleRpcErrorInfo;

class OAIConsumerPscConnection : public OAIObject {
public:
    OAIConsumerPscConnection();
    OAIConsumerPscConnection(QString json);
    ~OAIConsumerPscConnection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleRpcStatus getError() const;
    void setError(const OAIGoogleRpcStatus &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    OAIGoogleRpcErrorInfo getErrorInfo() const;
    void setErrorInfo(const OAIGoogleRpcErrorInfo &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    QString getErrorType() const;
    void setErrorType(const QString &error_type);
    bool is_error_type_Set() const;
    bool is_error_type_Valid() const;

    QString getForwardingRule() const;
    void setForwardingRule(const QString &forwarding_rule);
    bool is_forwarding_rule_Set() const;
    bool is_forwarding_rule_Valid() const;

    QString getGceOperation() const;
    void setGceOperation(const QString &gce_operation);
    bool is_gce_operation_Set() const;
    bool is_gce_operation_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    QString getProject() const;
    void setProject(const QString &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    QString getPscConnectionId() const;
    void setPscConnectionId(const QString &psc_connection_id);
    bool is_psc_connection_id_Set() const;
    bool is_psc_connection_id_Valid() const;

    QString getSelectedSubnetwork() const;
    void setSelectedSubnetwork(const QString &selected_subnetwork);
    bool is_selected_subnetwork_Set() const;
    bool is_selected_subnetwork_Valid() const;

    QString getServiceAttachmentUri() const;
    void setServiceAttachmentUri(const QString &service_attachment_uri);
    bool is_service_attachment_uri_Set() const;
    bool is_service_attachment_uri_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleRpcStatus m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    OAIGoogleRpcErrorInfo m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    QString m_error_type;
    bool m_error_type_isSet;
    bool m_error_type_isValid;

    QString m_forwarding_rule;
    bool m_forwarding_rule_isSet;
    bool m_forwarding_rule_isValid;

    QString m_gce_operation;
    bool m_gce_operation_isSet;
    bool m_gce_operation_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    QString m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    QString m_psc_connection_id;
    bool m_psc_connection_id_isSet;
    bool m_psc_connection_id_isValid;

    QString m_selected_subnetwork;
    bool m_selected_subnetwork_isSet;
    bool m_selected_subnetwork_isValid;

    QString m_service_attachment_uri;
    bool m_service_attachment_uri_isSet;
    bool m_service_attachment_uri_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConsumerPscConnection)

#endif // OAIConsumerPscConnection_H
