/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoute.h
 *
 * A route defines a path from VM instances within a spoke to a specific destination resource. Only VPC spokes have routes.
 */

#ifndef OAIRoute_H
#define OAIRoute_H

#include <QJsonObject>

#include "OAINextHopVpcNetwork.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINextHopVpcNetwork;

class OAIRoute : public OAIObject {
public:
    OAIRoute();
    OAIRoute(QString json);
    ~OAIRoute() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getIpCidrRange() const;
    void setIpCidrRange(const QString &ip_cidr_range);
    bool is_ip_cidr_range_Set() const;
    bool is_ip_cidr_range_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINextHopVpcNetwork getNextHopVpcNetwork() const;
    void setNextHopVpcNetwork(const OAINextHopVpcNetwork &next_hop_vpc_network);
    bool is_next_hop_vpc_network_Set() const;
    bool is_next_hop_vpc_network_Valid() const;

    QString getSpoke() const;
    void setSpoke(const QString &spoke);
    bool is_spoke_Set() const;
    bool is_spoke_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_ip_cidr_range;
    bool m_ip_cidr_range_isSet;
    bool m_ip_cidr_range_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINextHopVpcNetwork m_next_hop_vpc_network;
    bool m_next_hop_vpc_network_isSet;
    bool m_next_hop_vpc_network_isValid;

    QString m_spoke;
    bool m_spoke_isSet;
    bool m_spoke_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoute)

#endif // OAIRoute_H
