/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleLongrunningOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleLongrunningOperation::OAIGoogleLongrunningOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleLongrunningOperation::OAIGoogleLongrunningOperation() {
    this->initializeModel();
}

OAIGoogleLongrunningOperation::~OAIGoogleLongrunningOperation() {}

void OAIGoogleLongrunningOperation::initializeModel() {

    m_done_isSet = false;
    m_done_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_response_isSet = false;
    m_response_isValid = false;
}

void OAIGoogleLongrunningOperation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleLongrunningOperation::fromJsonObject(QJsonObject json) {

    m_done_isValid = ::OpenAPI::fromJsonValue(m_done, json[QString("done")]);
    m_done_isSet = !json[QString("done")].isNull() && m_done_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_response_isValid = ::OpenAPI::fromJsonValue(m_response, json[QString("response")]);
    m_response_isSet = !json[QString("response")].isNull() && m_response_isValid;
}

QString OAIGoogleLongrunningOperation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleLongrunningOperation::asJsonObject() const {
    QJsonObject obj;
    if (m_done_isSet) {
        obj.insert(QString("done"), ::OpenAPI::toJsonValue(m_done));
    }
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_response.size() > 0) {
        obj.insert(QString("response"), ::OpenAPI::toJsonValue(m_response));
    }
    return obj;
}

bool OAIGoogleLongrunningOperation::isDone() const {
    return m_done;
}
void OAIGoogleLongrunningOperation::setDone(const bool &done) {
    m_done = done;
    m_done_isSet = true;
}

bool OAIGoogleLongrunningOperation::is_done_Set() const{
    return m_done_isSet;
}

bool OAIGoogleLongrunningOperation::is_done_Valid() const{
    return m_done_isValid;
}

OAIGoogleRpcStatus OAIGoogleLongrunningOperation::getError() const {
    return m_error;
}
void OAIGoogleLongrunningOperation::setError(const OAIGoogleRpcStatus &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIGoogleLongrunningOperation::is_error_Set() const{
    return m_error_isSet;
}

bool OAIGoogleLongrunningOperation::is_error_Valid() const{
    return m_error_isValid;
}

QMap<QString, QJsonValue> OAIGoogleLongrunningOperation::getMetadata() const {
    return m_metadata;
}
void OAIGoogleLongrunningOperation::setMetadata(const QMap<QString, QJsonValue> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleLongrunningOperation::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleLongrunningOperation::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIGoogleLongrunningOperation::getName() const {
    return m_name;
}
void OAIGoogleLongrunningOperation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleLongrunningOperation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleLongrunningOperation::is_name_Valid() const{
    return m_name_isValid;
}

QMap<QString, QJsonValue> OAIGoogleLongrunningOperation::getResponse() const {
    return m_response;
}
void OAIGoogleLongrunningOperation::setResponse(const QMap<QString, QJsonValue> &response) {
    m_response = response;
    m_response_isSet = true;
}

bool OAIGoogleLongrunningOperation::is_response_Set() const{
    return m_response_isSet;
}

bool OAIGoogleLongrunningOperation::is_response_Valid() const{
    return m_response_isValid;
}

bool OAIGoogleLongrunningOperation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_done_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleLongrunningOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
