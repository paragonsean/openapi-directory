/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISpokeSummary.h
 *
 * Summarizes information about the spokes associated with a hub. The summary includes a count of spokes according to type and according to state. If any spokes are inactive, the summary also lists the reasons they are inactive, including a count for each reason.
 */

#ifndef OAISpokeSummary_H
#define OAISpokeSummary_H

#include <QJsonObject>

#include "OAISpokeStateCount.h"
#include "OAISpokeStateReasonCount.h"
#include "OAISpokeTypeCount.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISpokeStateCount;
class OAISpokeStateReasonCount;
class OAISpokeTypeCount;

class OAISpokeSummary : public OAIObject {
public:
    OAISpokeSummary();
    OAISpokeSummary(QString json);
    ~OAISpokeSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISpokeStateCount> getSpokeStateCounts() const;
    void setSpokeStateCounts(const QList<OAISpokeStateCount> &spoke_state_counts);
    bool is_spoke_state_counts_Set() const;
    bool is_spoke_state_counts_Valid() const;

    QList<OAISpokeStateReasonCount> getSpokeStateReasonCounts() const;
    void setSpokeStateReasonCounts(const QList<OAISpokeStateReasonCount> &spoke_state_reason_counts);
    bool is_spoke_state_reason_counts_Set() const;
    bool is_spoke_state_reason_counts_Valid() const;

    QList<OAISpokeTypeCount> getSpokeTypeCounts() const;
    void setSpokeTypeCounts(const QList<OAISpokeTypeCount> &spoke_type_counts);
    bool is_spoke_type_counts_Set() const;
    bool is_spoke_type_counts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISpokeStateCount> m_spoke_state_counts;
    bool m_spoke_state_counts_isSet;
    bool m_spoke_state_counts_isValid;

    QList<OAISpokeStateReasonCount> m_spoke_state_reason_counts;
    bool m_spoke_state_reason_counts_isSet;
    bool m_spoke_state_reason_counts_isValid;

    QList<OAISpokeTypeCount> m_spoke_type_counts;
    bool m_spoke_type_counts_isSet;
    bool m_spoke_type_counts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISpokeSummary)

#endif // OAISpokeSummary_H
