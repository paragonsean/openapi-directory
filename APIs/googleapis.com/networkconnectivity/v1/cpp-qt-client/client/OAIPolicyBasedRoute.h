/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPolicyBasedRoute.h
 *
 * Policy-based routes route L4 network traffic based on not just destination IP address, but also source IP address, protocol, and more. If a policy-based route conflicts with other types of routes, the policy-based route always take precedence.
 */

#ifndef OAIPolicyBasedRoute_H
#define OAIPolicyBasedRoute_H

#include <QJsonObject>

#include "OAIFilter.h"
#include "OAIInterconnectAttachment.h"
#include "OAIVirtualMachine.h"
#include "OAIWarnings.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFilter;
class OAIInterconnectAttachment;
class OAIVirtualMachine;
class OAIWarnings;

class OAIPolicyBasedRoute : public OAIObject {
public:
    OAIPolicyBasedRoute();
    OAIPolicyBasedRoute(QString json);
    ~OAIPolicyBasedRoute() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIFilter getFilter() const;
    void setFilter(const OAIFilter &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    OAIInterconnectAttachment getInterconnectAttachment() const;
    void setInterconnectAttachment(const OAIInterconnectAttachment &interconnect_attachment);
    bool is_interconnect_attachment_Set() const;
    bool is_interconnect_attachment_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    QString getNextHopIlbIp() const;
    void setNextHopIlbIp(const QString &next_hop_ilb_ip);
    bool is_next_hop_ilb_ip_Set() const;
    bool is_next_hop_ilb_ip_Valid() const;

    QString getNextHopOtherRoutes() const;
    void setNextHopOtherRoutes(const QString &next_hop_other_routes);
    bool is_next_hop_other_routes_Set() const;
    bool is_next_hop_other_routes_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getSelfLink() const;
    void setSelfLink(const QString &self_link);
    bool is_self_link_Set() const;
    bool is_self_link_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    OAIVirtualMachine getVirtualMachine() const;
    void setVirtualMachine(const OAIVirtualMachine &virtual_machine);
    bool is_virtual_machine_Set() const;
    bool is_virtual_machine_Valid() const;

    QList<OAIWarnings> getWarnings() const;
    void setWarnings(const QList<OAIWarnings> &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIFilter m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    OAIInterconnectAttachment m_interconnect_attachment;
    bool m_interconnect_attachment_isSet;
    bool m_interconnect_attachment_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    QString m_next_hop_ilb_ip;
    bool m_next_hop_ilb_ip_isSet;
    bool m_next_hop_ilb_ip_isValid;

    QString m_next_hop_other_routes;
    bool m_next_hop_other_routes_isSet;
    bool m_next_hop_other_routes_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_self_link;
    bool m_self_link_isSet;
    bool m_self_link_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    OAIVirtualMachine m_virtual_machine;
    bool m_virtual_machine_isSet;
    bool m_virtual_machine_isValid;

    QList<OAIWarnings> m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPolicyBasedRoute)

#endif // OAIPolicyBasedRoute_H
