/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConsumerPscConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConsumerPscConfig::OAIConsumerPscConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConsumerPscConfig::OAIConsumerPscConfig() {
    this->initializeModel();
}

OAIConsumerPscConfig::~OAIConsumerPscConfig() {}

void OAIConsumerPscConfig::initializeModel() {

    m_disable_global_access_isSet = false;
    m_disable_global_access_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIConsumerPscConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConsumerPscConfig::fromJsonObject(QJsonObject json) {

    m_disable_global_access_isValid = ::OpenAPI::fromJsonValue(m_disable_global_access, json[QString("disableGlobalAccess")]);
    m_disable_global_access_isSet = !json[QString("disableGlobalAccess")].isNull() && m_disable_global_access_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIConsumerPscConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConsumerPscConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_disable_global_access_isSet) {
        obj.insert(QString("disableGlobalAccess"), ::OpenAPI::toJsonValue(m_disable_global_access));
    }
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_project_isSet) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

bool OAIConsumerPscConfig::isDisableGlobalAccess() const {
    return m_disable_global_access;
}
void OAIConsumerPscConfig::setDisableGlobalAccess(const bool &disable_global_access) {
    m_disable_global_access = disable_global_access;
    m_disable_global_access_isSet = true;
}

bool OAIConsumerPscConfig::is_disable_global_access_Set() const{
    return m_disable_global_access_isSet;
}

bool OAIConsumerPscConfig::is_disable_global_access_Valid() const{
    return m_disable_global_access_isValid;
}

QString OAIConsumerPscConfig::getNetwork() const {
    return m_network;
}
void OAIConsumerPscConfig::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAIConsumerPscConfig::is_network_Set() const{
    return m_network_isSet;
}

bool OAIConsumerPscConfig::is_network_Valid() const{
    return m_network_isValid;
}

QString OAIConsumerPscConfig::getProject() const {
    return m_project;
}
void OAIConsumerPscConfig::setProject(const QString &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAIConsumerPscConfig::is_project_Set() const{
    return m_project_isSet;
}

bool OAIConsumerPscConfig::is_project_Valid() const{
    return m_project_isValid;
}

QString OAIConsumerPscConfig::getState() const {
    return m_state;
}
void OAIConsumerPscConfig::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIConsumerPscConfig::is_state_Set() const{
    return m_state_isSet;
}

bool OAIConsumerPscConfig::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIConsumerPscConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disable_global_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConsumerPscConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
