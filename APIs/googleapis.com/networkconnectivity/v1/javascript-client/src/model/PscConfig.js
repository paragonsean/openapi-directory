/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PscConfig model module.
 * @module model/PscConfig
 * @version v1
 */
class PscConfig {
    /**
     * Constructs a new <code>PscConfig</code>.
     * Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
     * @alias module:model/PscConfig
     */
    constructor() { 
        
        PscConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PscConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PscConfig} obj Optional instance to populate.
     * @return {module:model/PscConfig} The populated <code>PscConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PscConfig();

            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'String');
            }
            if (data.hasOwnProperty('subnetworks')) {
                obj['subnetworks'] = ApiClient.convertToType(data['subnetworks'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PscConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PscConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['limit'] && !(typeof data['limit'] === 'string' || data['limit'] instanceof String)) {
            throw new Error("Expected the field `limit` to be a primitive type in the JSON string but got " + data['limit']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['subnetworks'])) {
            throw new Error("Expected the field `subnetworks` to be an array in the JSON data but got " + data['subnetworks']);
        }

        return true;
    }


}



/**
 * Optional. Max number of PSC connections for this policy.
 * @member {String} limit
 */
PscConfig.prototype['limit'] = undefined;

/**
 * The resource paths of subnetworks to use for IP address management. Example: projects/{projectNumOrId}/regions/{region}/subnetworks/{resourceId}.
 * @member {Array.<String>} subnetworks
 */
PscConfig.prototype['subnetworks'] = undefined;






export default PscConfig;

