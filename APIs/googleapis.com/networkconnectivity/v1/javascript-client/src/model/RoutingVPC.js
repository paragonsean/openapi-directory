/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RoutingVPC model module.
 * @module model/RoutingVPC
 * @version v1
 */
class RoutingVPC {
    /**
     * Constructs a new <code>RoutingVPC</code>.
     * RoutingVPC contains information about the VPC networks associated with the spokes of a Network Connectivity Center hub.
     * @alias module:model/RoutingVPC
     */
    constructor() { 
        
        RoutingVPC.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RoutingVPC</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoutingVPC} obj Optional instance to populate.
     * @return {module:model/RoutingVPC} The populated <code>RoutingVPC</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoutingVPC();

            if (data.hasOwnProperty('requiredForNewSiteToSiteDataTransferSpokes')) {
                obj['requiredForNewSiteToSiteDataTransferSpokes'] = ApiClient.convertToType(data['requiredForNewSiteToSiteDataTransferSpokes'], 'Boolean');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RoutingVPC</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RoutingVPC</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * Output only. If true, indicates that this VPC network is currently associated with spokes that use the data transfer feature (spokes where the site_to_site_data_transfer field is set to true). If you create new spokes that use data transfer, they must be associated with this VPC network. At most, one VPC network will have this field set to true.
 * @member {Boolean} requiredForNewSiteToSiteDataTransferSpokes
 */
RoutingVPC.prototype['requiredForNewSiteToSiteDataTransferSpokes'] = undefined;

/**
 * The URI of the VPC network.
 * @member {String} uri
 */
RoutingVPC.prototype['uri'] = undefined;






export default RoutingVPC;

