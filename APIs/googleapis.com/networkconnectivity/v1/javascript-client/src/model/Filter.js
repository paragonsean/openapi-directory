/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Filter model module.
 * @module model/Filter
 * @version v1
 */
class Filter {
    /**
     * Constructs a new <code>Filter</code>.
     * Filter matches L4 traffic.
     * @alias module:model/Filter
     */
    constructor() { 
        
        Filter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Filter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Filter} obj Optional instance to populate.
     * @return {module:model/Filter} The populated <code>Filter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Filter();

            if (data.hasOwnProperty('destRange')) {
                obj['destRange'] = ApiClient.convertToType(data['destRange'], 'String');
            }
            if (data.hasOwnProperty('ipProtocol')) {
                obj['ipProtocol'] = ApiClient.convertToType(data['ipProtocol'], 'String');
            }
            if (data.hasOwnProperty('protocolVersion')) {
                obj['protocolVersion'] = ApiClient.convertToType(data['protocolVersion'], 'String');
            }
            if (data.hasOwnProperty('srcRange')) {
                obj['srcRange'] = ApiClient.convertToType(data['srcRange'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Filter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Filter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['destRange'] && !(typeof data['destRange'] === 'string' || data['destRange'] instanceof String)) {
            throw new Error("Expected the field `destRange` to be a primitive type in the JSON string but got " + data['destRange']);
        }
        // ensure the json data is a string
        if (data['ipProtocol'] && !(typeof data['ipProtocol'] === 'string' || data['ipProtocol'] instanceof String)) {
            throw new Error("Expected the field `ipProtocol` to be a primitive type in the JSON string but got " + data['ipProtocol']);
        }
        // ensure the json data is a string
        if (data['protocolVersion'] && !(typeof data['protocolVersion'] === 'string' || data['protocolVersion'] instanceof String)) {
            throw new Error("Expected the field `protocolVersion` to be a primitive type in the JSON string but got " + data['protocolVersion']);
        }
        // ensure the json data is a string
        if (data['srcRange'] && !(typeof data['srcRange'] === 'string' || data['srcRange'] instanceof String)) {
            throw new Error("Expected the field `srcRange` to be a primitive type in the JSON string but got " + data['srcRange']);
        }

        return true;
    }


}



/**
 * Optional. The destination IP range of outgoing packets that this policy-based route applies to. Default is \"0.0.0.0/0\" if protocol version is IPv4.
 * @member {String} destRange
 */
Filter.prototype['destRange'] = undefined;

/**
 * Optional. The IP protocol that this policy-based route applies to. Valid values are 'TCP', 'UDP', and 'ALL'. Default is 'ALL'.
 * @member {String} ipProtocol
 */
Filter.prototype['ipProtocol'] = undefined;

/**
 * Required. Internet protocol versions this policy-based route applies to. For this version, only IPV4 is supported.
 * @member {module:model/Filter.ProtocolVersionEnum} protocolVersion
 */
Filter.prototype['protocolVersion'] = undefined;

/**
 * Optional. The source IP range of outgoing packets that this policy-based route applies to. Default is \"0.0.0.0/0\" if protocol version is IPv4.
 * @member {String} srcRange
 */
Filter.prototype['srcRange'] = undefined;





/**
 * Allowed values for the <code>protocolVersion</code> property.
 * @enum {String}
 * @readonly
 */
Filter['ProtocolVersionEnum'] = {

    /**
     * value: "PROTOCOL_VERSION_UNSPECIFIED"
     * @const
     */
    "PROTOCOL_VERSION_UNSPECIFIED": "PROTOCOL_VERSION_UNSPECIFIED",

    /**
     * value: "IPV4"
     * @const
     */
    "IPV4": "IPV4"
};



export default Filter;

