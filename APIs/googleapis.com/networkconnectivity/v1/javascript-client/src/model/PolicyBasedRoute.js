/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Filter from './Filter';
import InterconnectAttachment from './InterconnectAttachment';
import VirtualMachine from './VirtualMachine';
import Warnings from './Warnings';

/**
 * The PolicyBasedRoute model module.
 * @module model/PolicyBasedRoute
 * @version v1
 */
class PolicyBasedRoute {
    /**
     * Constructs a new <code>PolicyBasedRoute</code>.
     * Policy-based routes route L4 network traffic based on not just destination IP address, but also source IP address, protocol, and more. If a policy-based route conflicts with other types of routes, the policy-based route always take precedence.
     * @alias module:model/PolicyBasedRoute
     */
    constructor() { 
        
        PolicyBasedRoute.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PolicyBasedRoute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PolicyBasedRoute} obj Optional instance to populate.
     * @return {module:model/PolicyBasedRoute} The populated <code>PolicyBasedRoute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PolicyBasedRoute();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = Filter.constructFromObject(data['filter']);
            }
            if (data.hasOwnProperty('interconnectAttachment')) {
                obj['interconnectAttachment'] = InterconnectAttachment.constructFromObject(data['interconnectAttachment']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('nextHopIlbIp')) {
                obj['nextHopIlbIp'] = ApiClient.convertToType(data['nextHopIlbIp'], 'String');
            }
            if (data.hasOwnProperty('nextHopOtherRoutes')) {
                obj['nextHopOtherRoutes'] = ApiClient.convertToType(data['nextHopOtherRoutes'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('selfLink')) {
                obj['selfLink'] = ApiClient.convertToType(data['selfLink'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('virtualMachine')) {
                obj['virtualMachine'] = VirtualMachine.constructFromObject(data['virtualMachine']);
            }
            if (data.hasOwnProperty('warnings')) {
                obj['warnings'] = ApiClient.convertToType(data['warnings'], [Warnings]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PolicyBasedRoute</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PolicyBasedRoute</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `filter`
        if (data['filter']) { // data not null
          Filter.validateJSON(data['filter']);
        }
        // validate the optional field `interconnectAttachment`
        if (data['interconnectAttachment']) { // data not null
          InterconnectAttachment.validateJSON(data['interconnectAttachment']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // ensure the json data is a string
        if (data['nextHopIlbIp'] && !(typeof data['nextHopIlbIp'] === 'string' || data['nextHopIlbIp'] instanceof String)) {
            throw new Error("Expected the field `nextHopIlbIp` to be a primitive type in the JSON string but got " + data['nextHopIlbIp']);
        }
        // ensure the json data is a string
        if (data['nextHopOtherRoutes'] && !(typeof data['nextHopOtherRoutes'] === 'string' || data['nextHopOtherRoutes'] instanceof String)) {
            throw new Error("Expected the field `nextHopOtherRoutes` to be a primitive type in the JSON string but got " + data['nextHopOtherRoutes']);
        }
        // ensure the json data is a string
        if (data['selfLink'] && !(typeof data['selfLink'] === 'string' || data['selfLink'] instanceof String)) {
            throw new Error("Expected the field `selfLink` to be a primitive type in the JSON string but got " + data['selfLink']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // validate the optional field `virtualMachine`
        if (data['virtualMachine']) { // data not null
          VirtualMachine.validateJSON(data['virtualMachine']);
        }
        if (data['warnings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['warnings'])) {
                throw new Error("Expected the field `warnings` to be an array in the JSON data but got " + data['warnings']);
            }
            // validate the optional field `warnings` (array)
            for (const item of data['warnings']) {
                Warnings.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Output only. Time when the policy-based route was created.
 * @member {String} createTime
 */
PolicyBasedRoute.prototype['createTime'] = undefined;

/**
 * Optional. An optional description of this resource. Provide this field when you create the resource.
 * @member {String} description
 */
PolicyBasedRoute.prototype['description'] = undefined;

/**
 * @member {module:model/Filter} filter
 */
PolicyBasedRoute.prototype['filter'] = undefined;

/**
 * @member {module:model/InterconnectAttachment} interconnectAttachment
 */
PolicyBasedRoute.prototype['interconnectAttachment'] = undefined;

/**
 * Output only. Type of this resource. Always networkconnectivity#policyBasedRoute for policy-based Route resources.
 * @member {String} kind
 */
PolicyBasedRoute.prototype['kind'] = undefined;

/**
 * User-defined labels.
 * @member {Object.<String, String>} labels
 */
PolicyBasedRoute.prototype['labels'] = undefined;

/**
 * Immutable. A unique name of the resource in the form of `projects/{project_number}/locations/global/PolicyBasedRoutes/{policy_based_route_id}`
 * @member {String} name
 */
PolicyBasedRoute.prototype['name'] = undefined;

/**
 * Required. Fully-qualified URL of the network that this route applies to, for example: projects/my-project/global/networks/my-network.
 * @member {String} network
 */
PolicyBasedRoute.prototype['network'] = undefined;

/**
 * Optional. The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets. For this version, only nextHopIlbIp is supported.
 * @member {String} nextHopIlbIp
 */
PolicyBasedRoute.prototype['nextHopIlbIp'] = undefined;

/**
 * Optional. Other routes that will be referenced to determine the next hop of the packet.
 * @member {module:model/PolicyBasedRoute.NextHopOtherRoutesEnum} nextHopOtherRoutes
 */
PolicyBasedRoute.prototype['nextHopOtherRoutes'] = undefined;

/**
 * Optional. The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
 * @member {Number} priority
 */
PolicyBasedRoute.prototype['priority'] = undefined;

/**
 * Output only. Server-defined fully-qualified URL for this resource.
 * @member {String} selfLink
 */
PolicyBasedRoute.prototype['selfLink'] = undefined;

/**
 * Output only. Time when the policy-based route was updated.
 * @member {String} updateTime
 */
PolicyBasedRoute.prototype['updateTime'] = undefined;

/**
 * @member {module:model/VirtualMachine} virtualMachine
 */
PolicyBasedRoute.prototype['virtualMachine'] = undefined;

/**
 * Output only. If potential misconfigurations are detected for this route, this field will be populated with warning messages.
 * @member {Array.<module:model/Warnings>} warnings
 */
PolicyBasedRoute.prototype['warnings'] = undefined;





/**
 * Allowed values for the <code>nextHopOtherRoutes</code> property.
 * @enum {String}
 * @readonly
 */
PolicyBasedRoute['NextHopOtherRoutesEnum'] = {

    /**
     * value: "OTHER_ROUTES_UNSPECIFIED"
     * @const
     */
    "OTHER_ROUTES_UNSPECIFIED": "OTHER_ROUTES_UNSPECIFIED",

    /**
     * value: "DEFAULT_ROUTING"
     * @const
     */
    "DEFAULT_ROUTING": "DEFAULT_ROUTING"
};



export default PolicyBasedRoute;

