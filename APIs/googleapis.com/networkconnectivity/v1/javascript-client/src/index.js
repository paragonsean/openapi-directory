/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AcceptHubSpokeRequest from './model/AcceptHubSpokeRequest';
import AcceptHubSpokeResponse from './model/AcceptHubSpokeResponse';
import AuditConfig from './model/AuditConfig';
import AuditLogConfig from './model/AuditLogConfig';
import Binding from './model/Binding';
import ConsumerPscConfig from './model/ConsumerPscConfig';
import ConsumerPscConnection from './model/ConsumerPscConnection';
import Expr from './model/Expr';
import Filter from './model/Filter';
import GoogleLongrunningListOperationsResponse from './model/GoogleLongrunningListOperationsResponse';
import GoogleLongrunningOperation from './model/GoogleLongrunningOperation';
import GoogleRpcErrorInfo from './model/GoogleRpcErrorInfo';
import GoogleRpcStatus from './model/GoogleRpcStatus';
import Group from './model/Group';
import Hub from './model/Hub';
import InterconnectAttachment from './model/InterconnectAttachment';
import InternalRange from './model/InternalRange';
import LinkedInterconnectAttachments from './model/LinkedInterconnectAttachments';
import LinkedRouterApplianceInstances from './model/LinkedRouterApplianceInstances';
import LinkedVpcNetwork from './model/LinkedVpcNetwork';
import LinkedVpnTunnels from './model/LinkedVpnTunnels';
import ListGroupsResponse from './model/ListGroupsResponse';
import ListHubSpokesResponse from './model/ListHubSpokesResponse';
import ListHubsResponse from './model/ListHubsResponse';
import ListInternalRangesResponse from './model/ListInternalRangesResponse';
import ListLocationsResponse from './model/ListLocationsResponse';
import ListPolicyBasedRoutesResponse from './model/ListPolicyBasedRoutesResponse';
import ListRouteTablesResponse from './model/ListRouteTablesResponse';
import ListRoutesResponse from './model/ListRoutesResponse';
import ListServiceClassesResponse from './model/ListServiceClassesResponse';
import ListServiceConnectionMapsResponse from './model/ListServiceConnectionMapsResponse';
import ListServiceConnectionPoliciesResponse from './model/ListServiceConnectionPoliciesResponse';
import ListServiceConnectionTokensResponse from './model/ListServiceConnectionTokensResponse';
import ListSpokesResponse from './model/ListSpokesResponse';
import Location from './model/Location';
import LocationMetadata from './model/LocationMetadata';
import NextHopVpcNetwork from './model/NextHopVpcNetwork';
import OperationMetadata from './model/OperationMetadata';
import Policy from './model/Policy';
import PolicyBasedRoute from './model/PolicyBasedRoute';
import ProducerPscConfig from './model/ProducerPscConfig';
import PscConfig from './model/PscConfig';
import PscConnection from './model/PscConnection';
import RejectHubSpokeRequest from './model/RejectHubSpokeRequest';
import RejectHubSpokeResponse from './model/RejectHubSpokeResponse';
import Route from './model/Route';
import RouteTable from './model/RouteTable';
import RouterApplianceInstance from './model/RouterApplianceInstance';
import RoutingVPC from './model/RoutingVPC';
import ServiceClass from './model/ServiceClass';
import ServiceConnectionMap from './model/ServiceConnectionMap';
import ServiceConnectionPolicy from './model/ServiceConnectionPolicy';
import ServiceConnectionToken from './model/ServiceConnectionToken';
import SetIamPolicyRequest from './model/SetIamPolicyRequest';
import Spoke from './model/Spoke';
import SpokeStateCount from './model/SpokeStateCount';
import SpokeStateReasonCount from './model/SpokeStateReasonCount';
import SpokeSummary from './model/SpokeSummary';
import SpokeTypeCount from './model/SpokeTypeCount';
import StateReason from './model/StateReason';
import TestIamPermissionsRequest from './model/TestIamPermissionsRequest';
import TestIamPermissionsResponse from './model/TestIamPermissionsResponse';
import VirtualMachine from './model/VirtualMachine';
import Warnings from './model/Warnings';
import ProjectsApi from './api/ProjectsApi';


/**
* This API enables connectivity with and between Google Cloud resources..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var NetworkConnectivityApi = require('index'); // See note below*.
* var xxxSvc = new NetworkConnectivityApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new NetworkConnectivityApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new NetworkConnectivityApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new NetworkConnectivityApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AcceptHubSpokeRequest model constructor.
     * @property {module:model/AcceptHubSpokeRequest}
     */
    AcceptHubSpokeRequest,

    /**
     * The AcceptHubSpokeResponse model constructor.
     * @property {module:model/AcceptHubSpokeResponse}
     */
    AcceptHubSpokeResponse,

    /**
     * The AuditConfig model constructor.
     * @property {module:model/AuditConfig}
     */
    AuditConfig,

    /**
     * The AuditLogConfig model constructor.
     * @property {module:model/AuditLogConfig}
     */
    AuditLogConfig,

    /**
     * The Binding model constructor.
     * @property {module:model/Binding}
     */
    Binding,

    /**
     * The ConsumerPscConfig model constructor.
     * @property {module:model/ConsumerPscConfig}
     */
    ConsumerPscConfig,

    /**
     * The ConsumerPscConnection model constructor.
     * @property {module:model/ConsumerPscConnection}
     */
    ConsumerPscConnection,

    /**
     * The Expr model constructor.
     * @property {module:model/Expr}
     */
    Expr,

    /**
     * The Filter model constructor.
     * @property {module:model/Filter}
     */
    Filter,

    /**
     * The GoogleLongrunningListOperationsResponse model constructor.
     * @property {module:model/GoogleLongrunningListOperationsResponse}
     */
    GoogleLongrunningListOperationsResponse,

    /**
     * The GoogleLongrunningOperation model constructor.
     * @property {module:model/GoogleLongrunningOperation}
     */
    GoogleLongrunningOperation,

    /**
     * The GoogleRpcErrorInfo model constructor.
     * @property {module:model/GoogleRpcErrorInfo}
     */
    GoogleRpcErrorInfo,

    /**
     * The GoogleRpcStatus model constructor.
     * @property {module:model/GoogleRpcStatus}
     */
    GoogleRpcStatus,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The Hub model constructor.
     * @property {module:model/Hub}
     */
    Hub,

    /**
     * The InterconnectAttachment model constructor.
     * @property {module:model/InterconnectAttachment}
     */
    InterconnectAttachment,

    /**
     * The InternalRange model constructor.
     * @property {module:model/InternalRange}
     */
    InternalRange,

    /**
     * The LinkedInterconnectAttachments model constructor.
     * @property {module:model/LinkedInterconnectAttachments}
     */
    LinkedInterconnectAttachments,

    /**
     * The LinkedRouterApplianceInstances model constructor.
     * @property {module:model/LinkedRouterApplianceInstances}
     */
    LinkedRouterApplianceInstances,

    /**
     * The LinkedVpcNetwork model constructor.
     * @property {module:model/LinkedVpcNetwork}
     */
    LinkedVpcNetwork,

    /**
     * The LinkedVpnTunnels model constructor.
     * @property {module:model/LinkedVpnTunnels}
     */
    LinkedVpnTunnels,

    /**
     * The ListGroupsResponse model constructor.
     * @property {module:model/ListGroupsResponse}
     */
    ListGroupsResponse,

    /**
     * The ListHubSpokesResponse model constructor.
     * @property {module:model/ListHubSpokesResponse}
     */
    ListHubSpokesResponse,

    /**
     * The ListHubsResponse model constructor.
     * @property {module:model/ListHubsResponse}
     */
    ListHubsResponse,

    /**
     * The ListInternalRangesResponse model constructor.
     * @property {module:model/ListInternalRangesResponse}
     */
    ListInternalRangesResponse,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The ListPolicyBasedRoutesResponse model constructor.
     * @property {module:model/ListPolicyBasedRoutesResponse}
     */
    ListPolicyBasedRoutesResponse,

    /**
     * The ListRouteTablesResponse model constructor.
     * @property {module:model/ListRouteTablesResponse}
     */
    ListRouteTablesResponse,

    /**
     * The ListRoutesResponse model constructor.
     * @property {module:model/ListRoutesResponse}
     */
    ListRoutesResponse,

    /**
     * The ListServiceClassesResponse model constructor.
     * @property {module:model/ListServiceClassesResponse}
     */
    ListServiceClassesResponse,

    /**
     * The ListServiceConnectionMapsResponse model constructor.
     * @property {module:model/ListServiceConnectionMapsResponse}
     */
    ListServiceConnectionMapsResponse,

    /**
     * The ListServiceConnectionPoliciesResponse model constructor.
     * @property {module:model/ListServiceConnectionPoliciesResponse}
     */
    ListServiceConnectionPoliciesResponse,

    /**
     * The ListServiceConnectionTokensResponse model constructor.
     * @property {module:model/ListServiceConnectionTokensResponse}
     */
    ListServiceConnectionTokensResponse,

    /**
     * The ListSpokesResponse model constructor.
     * @property {module:model/ListSpokesResponse}
     */
    ListSpokesResponse,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The LocationMetadata model constructor.
     * @property {module:model/LocationMetadata}
     */
    LocationMetadata,

    /**
     * The NextHopVpcNetwork model constructor.
     * @property {module:model/NextHopVpcNetwork}
     */
    NextHopVpcNetwork,

    /**
     * The OperationMetadata model constructor.
     * @property {module:model/OperationMetadata}
     */
    OperationMetadata,

    /**
     * The Policy model constructor.
     * @property {module:model/Policy}
     */
    Policy,

    /**
     * The PolicyBasedRoute model constructor.
     * @property {module:model/PolicyBasedRoute}
     */
    PolicyBasedRoute,

    /**
     * The ProducerPscConfig model constructor.
     * @property {module:model/ProducerPscConfig}
     */
    ProducerPscConfig,

    /**
     * The PscConfig model constructor.
     * @property {module:model/PscConfig}
     */
    PscConfig,

    /**
     * The PscConnection model constructor.
     * @property {module:model/PscConnection}
     */
    PscConnection,

    /**
     * The RejectHubSpokeRequest model constructor.
     * @property {module:model/RejectHubSpokeRequest}
     */
    RejectHubSpokeRequest,

    /**
     * The RejectHubSpokeResponse model constructor.
     * @property {module:model/RejectHubSpokeResponse}
     */
    RejectHubSpokeResponse,

    /**
     * The Route model constructor.
     * @property {module:model/Route}
     */
    Route,

    /**
     * The RouteTable model constructor.
     * @property {module:model/RouteTable}
     */
    RouteTable,

    /**
     * The RouterApplianceInstance model constructor.
     * @property {module:model/RouterApplianceInstance}
     */
    RouterApplianceInstance,

    /**
     * The RoutingVPC model constructor.
     * @property {module:model/RoutingVPC}
     */
    RoutingVPC,

    /**
     * The ServiceClass model constructor.
     * @property {module:model/ServiceClass}
     */
    ServiceClass,

    /**
     * The ServiceConnectionMap model constructor.
     * @property {module:model/ServiceConnectionMap}
     */
    ServiceConnectionMap,

    /**
     * The ServiceConnectionPolicy model constructor.
     * @property {module:model/ServiceConnectionPolicy}
     */
    ServiceConnectionPolicy,

    /**
     * The ServiceConnectionToken model constructor.
     * @property {module:model/ServiceConnectionToken}
     */
    ServiceConnectionToken,

    /**
     * The SetIamPolicyRequest model constructor.
     * @property {module:model/SetIamPolicyRequest}
     */
    SetIamPolicyRequest,

    /**
     * The Spoke model constructor.
     * @property {module:model/Spoke}
     */
    Spoke,

    /**
     * The SpokeStateCount model constructor.
     * @property {module:model/SpokeStateCount}
     */
    SpokeStateCount,

    /**
     * The SpokeStateReasonCount model constructor.
     * @property {module:model/SpokeStateReasonCount}
     */
    SpokeStateReasonCount,

    /**
     * The SpokeSummary model constructor.
     * @property {module:model/SpokeSummary}
     */
    SpokeSummary,

    /**
     * The SpokeTypeCount model constructor.
     * @property {module:model/SpokeTypeCount}
     */
    SpokeTypeCount,

    /**
     * The StateReason model constructor.
     * @property {module:model/StateReason}
     */
    StateReason,

    /**
     * The TestIamPermissionsRequest model constructor.
     * @property {module:model/TestIamPermissionsRequest}
     */
    TestIamPermissionsRequest,

    /**
     * The TestIamPermissionsResponse model constructor.
     * @property {module:model/TestIamPermissionsResponse}
     */
    TestIamPermissionsResponse,

    /**
     * The VirtualMachine model constructor.
     * @property {module:model/VirtualMachine}
     */
    VirtualMachine,

    /**
     * The Warnings model constructor.
     * @property {module:model/Warnings}
     */
    Warnings,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
