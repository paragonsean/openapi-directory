/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkConnectivityApi);
  }
}(this, function(expect, NetworkConnectivityApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkConnectivityApi.Spoke();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Spoke', function() {
    it('should create an instance of Spoke', function() {
      // uncomment below and update the code to test Spoke
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be.a(NetworkConnectivityApi.Spoke);
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property group (base name: "group")', function() {
      // uncomment below and update the code to test the property group
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property hub (base name: "hub")', function() {
      // uncomment below and update the code to test the property hub
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property linkedInterconnectAttachments (base name: "linkedInterconnectAttachments")', function() {
      // uncomment below and update the code to test the property linkedInterconnectAttachments
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property linkedRouterApplianceInstances (base name: "linkedRouterApplianceInstances")', function() {
      // uncomment below and update the code to test the property linkedRouterApplianceInstances
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property linkedVpcNetwork (base name: "linkedVpcNetwork")', function() {
      // uncomment below and update the code to test the property linkedVpcNetwork
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property linkedVpnTunnels (base name: "linkedVpnTunnels")', function() {
      // uncomment below and update the code to test the property linkedVpnTunnels
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property reasons (base name: "reasons")', function() {
      // uncomment below and update the code to test the property reasons
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property spokeType (base name: "spokeType")', function() {
      // uncomment below and update the code to test the property spokeType
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property uniqueId (base name: "uniqueId")', function() {
      // uncomment below and update the code to test the property uniqueId
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new NetworkConnectivityApi.Spoke();
      //expect(instance).to.be();
    });

  });

}));
