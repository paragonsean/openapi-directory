# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RoutingVPC(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, required_for_new_site_to_site_data_transfer_spokes: bool=None, uri: str=None):
        """RoutingVPC - a model defined in OpenAPI

        :param required_for_new_site_to_site_data_transfer_spokes: The required_for_new_site_to_site_data_transfer_spokes of this RoutingVPC.
        :param uri: The uri of this RoutingVPC.
        """
        self.openapi_types = {
            'required_for_new_site_to_site_data_transfer_spokes': bool,
            'uri': str
        }

        self.attribute_map = {
            'required_for_new_site_to_site_data_transfer_spokes': 'requiredForNewSiteToSiteDataTransferSpokes',
            'uri': 'uri'
        }

        self._required_for_new_site_to_site_data_transfer_spokes = required_for_new_site_to_site_data_transfer_spokes
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoutingVPC':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoutingVPC of this RoutingVPC.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def required_for_new_site_to_site_data_transfer_spokes(self):
        """Gets the required_for_new_site_to_site_data_transfer_spokes of this RoutingVPC.

        Output only. If true, indicates that this VPC network is currently associated with spokes that use the data transfer feature (spokes where the site_to_site_data_transfer field is set to true). If you create new spokes that use data transfer, they must be associated with this VPC network. At most, one VPC network will have this field set to true.

        :return: The required_for_new_site_to_site_data_transfer_spokes of this RoutingVPC.
        :rtype: bool
        """
        return self._required_for_new_site_to_site_data_transfer_spokes

    @required_for_new_site_to_site_data_transfer_spokes.setter
    def required_for_new_site_to_site_data_transfer_spokes(self, required_for_new_site_to_site_data_transfer_spokes):
        """Sets the required_for_new_site_to_site_data_transfer_spokes of this RoutingVPC.

        Output only. If true, indicates that this VPC network is currently associated with spokes that use the data transfer feature (spokes where the site_to_site_data_transfer field is set to true). If you create new spokes that use data transfer, they must be associated with this VPC network. At most, one VPC network will have this field set to true.

        :param required_for_new_site_to_site_data_transfer_spokes: The required_for_new_site_to_site_data_transfer_spokes of this RoutingVPC.
        :type required_for_new_site_to_site_data_transfer_spokes: bool
        """

        self._required_for_new_site_to_site_data_transfer_spokes = required_for_new_site_to_site_data_transfer_spokes

    @property
    def uri(self):
        """Gets the uri of this RoutingVPC.

        The URI of the VPC network.

        :return: The uri of this RoutingVPC.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this RoutingVPC.

        The URI of the VPC network.

        :param uri: The uri of this RoutingVPC.
        :type uri: str
        """

        self._uri = uri
