# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleRpcErrorInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, metadata: Dict[str, str]=None, reason: str=None):
        """GoogleRpcErrorInfo - a model defined in OpenAPI

        :param domain: The domain of this GoogleRpcErrorInfo.
        :param metadata: The metadata of this GoogleRpcErrorInfo.
        :param reason: The reason of this GoogleRpcErrorInfo.
        """
        self.openapi_types = {
            'domain': str,
            'metadata': Dict[str, str],
            'reason': str
        }

        self.attribute_map = {
            'domain': 'domain',
            'metadata': 'metadata',
            'reason': 'reason'
        }

        self._domain = domain
        self._metadata = metadata
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleRpcErrorInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleRpcErrorInfo of this GoogleRpcErrorInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this GoogleRpcErrorInfo.

        The logical grouping to which the \"reason\" belongs. The error domain is typically the registered service name of the tool or product that generates the error. Example: \"pubsub.googleapis.com\". If the error is generated by some common infrastructure, the error domain must be a globally unique value that identifies the infrastructure. For Google API infrastructure, the error domain is \"googleapis.com\".

        :return: The domain of this GoogleRpcErrorInfo.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this GoogleRpcErrorInfo.

        The logical grouping to which the \"reason\" belongs. The error domain is typically the registered service name of the tool or product that generates the error. Example: \"pubsub.googleapis.com\". If the error is generated by some common infrastructure, the error domain must be a globally unique value that identifies the infrastructure. For Google API infrastructure, the error domain is \"googleapis.com\".

        :param domain: The domain of this GoogleRpcErrorInfo.
        :type domain: str
        """

        self._domain = domain

    @property
    def metadata(self):
        """Gets the metadata of this GoogleRpcErrorInfo.

        Additional structured details about this error. Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When identifying the current value of an exceeded limit, the units should be contained in the key, not the value. For example, rather than {\"instanceLimit\": \"100/request\"}, should be returned as, {\"instanceLimitPerRequest\": \"100\"}, if the client exceeds the number of instances that can be created in a single (batch) request.

        :return: The metadata of this GoogleRpcErrorInfo.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleRpcErrorInfo.

        Additional structured details about this error. Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When identifying the current value of an exceeded limit, the units should be contained in the key, not the value. For example, rather than {\"instanceLimit\": \"100/request\"}, should be returned as, {\"instanceLimitPerRequest\": \"100\"}, if the client exceeds the number of instances that can be created in a single (batch) request.

        :param metadata: The metadata of this GoogleRpcErrorInfo.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata

    @property
    def reason(self):
        """Gets the reason of this GoogleRpcErrorInfo.

        The reason of the error. This is a constant value that identifies the proximate cause of the error. Error reasons are unique within a particular domain of errors. This should be at most 63 characters and match a regular expression of `A-Z+[A-Z0-9]`, which represents UPPER_SNAKE_CASE.

        :return: The reason of this GoogleRpcErrorInfo.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this GoogleRpcErrorInfo.

        The reason of the error. This is a constant value that identifies the proximate cause of the error. Error reasons are unique within a particular domain of errors. This should be at most 63 characters and match a regular expression of `A-Z+[A-Z0-9]`, which represents UPPER_SNAKE_CASE.

        :param reason: The reason of this GoogleRpcErrorInfo.
        :type reason: str
        """

        self._reason = reason
