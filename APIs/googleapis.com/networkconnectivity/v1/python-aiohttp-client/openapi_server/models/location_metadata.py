# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LocationMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_features: List[str]=None):
        """LocationMetadata - a model defined in OpenAPI

        :param location_features: The location_features of this LocationMetadata.
        """
        self.openapi_types = {
            'location_features': List[str]
        }

        self.attribute_map = {
            'location_features': 'locationFeatures'
        }

        self._location_features = location_features

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocationMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocationMetadata of this LocationMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_features(self):
        """Gets the location_features of this LocationMetadata.

        List of supported features

        :return: The location_features of this LocationMetadata.
        :rtype: List[str]
        """
        return self._location_features

    @location_features.setter
    def location_features(self, location_features):
        """Sets the location_features of this LocationMetadata.

        List of supported features

        :param location_features: The location_features of this LocationMetadata.
        :type location_features: List[str]
        """
        allowed_values = ["LOCATION_FEATURE_UNSPECIFIED", "SITE_TO_CLOUD_SPOKES", "SITE_TO_SITE_SPOKES"]  # noqa: E501
        if not set(location_features).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `location_features` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(location_features) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._location_features = location_features
