# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.router_appliance_instance import RouterApplianceInstance
from openapi_server import util


class LinkedRouterApplianceInstances(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instances: List[RouterApplianceInstance]=None, site_to_site_data_transfer: bool=None, vpc_network: str=None):
        """LinkedRouterApplianceInstances - a model defined in OpenAPI

        :param instances: The instances of this LinkedRouterApplianceInstances.
        :param site_to_site_data_transfer: The site_to_site_data_transfer of this LinkedRouterApplianceInstances.
        :param vpc_network: The vpc_network of this LinkedRouterApplianceInstances.
        """
        self.openapi_types = {
            'instances': List[RouterApplianceInstance],
            'site_to_site_data_transfer': bool,
            'vpc_network': str
        }

        self.attribute_map = {
            'instances': 'instances',
            'site_to_site_data_transfer': 'siteToSiteDataTransfer',
            'vpc_network': 'vpcNetwork'
        }

        self._instances = instances
        self._site_to_site_data_transfer = site_to_site_data_transfer
        self._vpc_network = vpc_network

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinkedRouterApplianceInstances':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinkedRouterApplianceInstances of this LinkedRouterApplianceInstances.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instances(self):
        """Gets the instances of this LinkedRouterApplianceInstances.

        The list of router appliance instances.

        :return: The instances of this LinkedRouterApplianceInstances.
        :rtype: List[RouterApplianceInstance]
        """
        return self._instances

    @instances.setter
    def instances(self, instances):
        """Sets the instances of this LinkedRouterApplianceInstances.

        The list of router appliance instances.

        :param instances: The instances of this LinkedRouterApplianceInstances.
        :type instances: List[RouterApplianceInstance]
        """

        self._instances = instances

    @property
    def site_to_site_data_transfer(self):
        """Gets the site_to_site_data_transfer of this LinkedRouterApplianceInstances.

        A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).

        :return: The site_to_site_data_transfer of this LinkedRouterApplianceInstances.
        :rtype: bool
        """
        return self._site_to_site_data_transfer

    @site_to_site_data_transfer.setter
    def site_to_site_data_transfer(self, site_to_site_data_transfer):
        """Sets the site_to_site_data_transfer of this LinkedRouterApplianceInstances.

        A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).

        :param site_to_site_data_transfer: The site_to_site_data_transfer of this LinkedRouterApplianceInstances.
        :type site_to_site_data_transfer: bool
        """

        self._site_to_site_data_transfer = site_to_site_data_transfer

    @property
    def vpc_network(self):
        """Gets the vpc_network of this LinkedRouterApplianceInstances.

        Output only. The VPC network where these router appliance instances are located.

        :return: The vpc_network of this LinkedRouterApplianceInstances.
        :rtype: str
        """
        return self._vpc_network

    @vpc_network.setter
    def vpc_network(self, vpc_network):
        """Sets the vpc_network of this LinkedRouterApplianceInstances.

        Output only. The VPC network where these router appliance instances are located.

        :param vpc_network: The vpc_network of this LinkedRouterApplianceInstances.
        :type vpc_network: str
        """

        self._vpc_network = vpc_network
