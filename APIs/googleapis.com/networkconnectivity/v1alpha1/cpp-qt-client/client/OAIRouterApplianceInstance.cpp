/**
 * Network Connectivity API
 * This API enables connectivity with and between Google Cloud resources.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRouterApplianceInstance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRouterApplianceInstance::OAIRouterApplianceInstance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRouterApplianceInstance::OAIRouterApplianceInstance() {
    this->initializeModel();
}

OAIRouterApplianceInstance::~OAIRouterApplianceInstance() {}

void OAIRouterApplianceInstance::initializeModel() {

    m_ip_address_isSet = false;
    m_ip_address_isValid = false;

    m_network_interface_isSet = false;
    m_network_interface_isValid = false;

    m_virtual_machine_isSet = false;
    m_virtual_machine_isValid = false;
}

void OAIRouterApplianceInstance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRouterApplianceInstance::fromJsonObject(QJsonObject json) {

    m_ip_address_isValid = ::OpenAPI::fromJsonValue(m_ip_address, json[QString("ipAddress")]);
    m_ip_address_isSet = !json[QString("ipAddress")].isNull() && m_ip_address_isValid;

    m_network_interface_isValid = ::OpenAPI::fromJsonValue(m_network_interface, json[QString("networkInterface")]);
    m_network_interface_isSet = !json[QString("networkInterface")].isNull() && m_network_interface_isValid;

    m_virtual_machine_isValid = ::OpenAPI::fromJsonValue(m_virtual_machine, json[QString("virtualMachine")]);
    m_virtual_machine_isSet = !json[QString("virtualMachine")].isNull() && m_virtual_machine_isValid;
}

QString OAIRouterApplianceInstance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRouterApplianceInstance::asJsonObject() const {
    QJsonObject obj;
    if (m_ip_address_isSet) {
        obj.insert(QString("ipAddress"), ::OpenAPI::toJsonValue(m_ip_address));
    }
    if (m_network_interface_isSet) {
        obj.insert(QString("networkInterface"), ::OpenAPI::toJsonValue(m_network_interface));
    }
    if (m_virtual_machine_isSet) {
        obj.insert(QString("virtualMachine"), ::OpenAPI::toJsonValue(m_virtual_machine));
    }
    return obj;
}

QString OAIRouterApplianceInstance::getIpAddress() const {
    return m_ip_address;
}
void OAIRouterApplianceInstance::setIpAddress(const QString &ip_address) {
    m_ip_address = ip_address;
    m_ip_address_isSet = true;
}

bool OAIRouterApplianceInstance::is_ip_address_Set() const{
    return m_ip_address_isSet;
}

bool OAIRouterApplianceInstance::is_ip_address_Valid() const{
    return m_ip_address_isValid;
}

QString OAIRouterApplianceInstance::getNetworkInterface() const {
    return m_network_interface;
}
void OAIRouterApplianceInstance::setNetworkInterface(const QString &network_interface) {
    m_network_interface = network_interface;
    m_network_interface_isSet = true;
}

bool OAIRouterApplianceInstance::is_network_interface_Set() const{
    return m_network_interface_isSet;
}

bool OAIRouterApplianceInstance::is_network_interface_Valid() const{
    return m_network_interface_isValid;
}

QString OAIRouterApplianceInstance::getVirtualMachine() const {
    return m_virtual_machine;
}
void OAIRouterApplianceInstance::setVirtualMachine(const QString &virtual_machine) {
    m_virtual_machine = virtual_machine;
    m_virtual_machine_isSet = true;
}

bool OAIRouterApplianceInstance::is_virtual_machine_Set() const{
    return m_virtual_machine_isSet;
}

bool OAIRouterApplianceInstance::is_virtual_machine_Valid() const{
    return m_virtual_machine_isValid;
}

bool OAIRouterApplianceInstance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_interface_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_virtual_machine_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRouterApplianceInstance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
