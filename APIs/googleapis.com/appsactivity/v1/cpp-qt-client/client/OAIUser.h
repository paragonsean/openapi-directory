/**
 * Drive Activity API
 * Provides a historical view of activity.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser.h
 *
 * A representation of a user.
 */

#ifndef OAIUser_H
#define OAIUser_H

#include <QJsonObject>

#include "OAIPhoto.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPhoto;

class OAIUser : public OAIObject {
public:
    OAIUser();
    OAIUser(QString json);
    ~OAIUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsDeleted() const;
    void setIsDeleted(const bool &is_deleted);
    bool is_is_deleted_Set() const;
    bool is_is_deleted_Valid() const;

    bool isIsMe() const;
    void setIsMe(const bool &is_me);
    bool is_is_me_Set() const;
    bool is_is_me_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPermissionId() const;
    void setPermissionId(const QString &permission_id);
    bool is_permission_id_Set() const;
    bool is_permission_id_Valid() const;

    OAIPhoto getPhoto() const;
    void setPhoto(const OAIPhoto &photo);
    bool is_photo_Set() const;
    bool is_photo_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_deleted;
    bool m_is_deleted_isSet;
    bool m_is_deleted_isValid;

    bool m_is_me;
    bool m_is_me_isSet;
    bool m_is_me_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_permission_id;
    bool m_permission_id_isSet;
    bool m_permission_id_isValid;

    OAIPhoto m_photo;
    bool m_photo_isSet;
    bool m_photo_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser)

#endif // OAIUser_H
