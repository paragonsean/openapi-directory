/**
 * Drive Activity API
 * Provides a historical view of activity.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvent.h
 *
 * Represents the changes associated with an action taken by a user.
 */

#ifndef OAIEvent_H
#define OAIEvent_H

#include <QJsonObject>

#include "OAIMove.h"
#include "OAIPermissionChange.h"
#include "OAIRename.h"
#include "OAITarget.h"
#include "OAIUser.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMove;
class OAIPermissionChange;
class OAIRename;
class OAITarget;
class OAIUser;

class OAIEvent : public OAIObject {
public:
    OAIEvent();
    OAIEvent(QString json);
    ~OAIEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAdditionalEventTypes() const;
    void setAdditionalEventTypes(const QList<QString> &additional_event_types);
    bool is_additional_event_types_Set() const;
    bool is_additional_event_types_Valid() const;

    QString getEventTimeMillis() const;
    void setEventTimeMillis(const QString &event_time_millis);
    bool is_event_time_millis_Set() const;
    bool is_event_time_millis_Valid() const;

    bool isFromUserDeletion() const;
    void setFromUserDeletion(const bool &from_user_deletion);
    bool is_from_user_deletion_Set() const;
    bool is_from_user_deletion_Valid() const;

    OAIMove getMove() const;
    void setMove(const OAIMove &move);
    bool is_move_Set() const;
    bool is_move_Valid() const;

    QList<OAIPermissionChange> getPermissionChanges() const;
    void setPermissionChanges(const QList<OAIPermissionChange> &permission_changes);
    bool is_permission_changes_Set() const;
    bool is_permission_changes_Valid() const;

    QString getPrimaryEventType() const;
    void setPrimaryEventType(const QString &primary_event_type);
    bool is_primary_event_type_Set() const;
    bool is_primary_event_type_Valid() const;

    OAIRename getRename() const;
    void setRename(const OAIRename &rename);
    bool is_rename_Set() const;
    bool is_rename_Valid() const;

    OAITarget getTarget() const;
    void setTarget(const OAITarget &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_additional_event_types;
    bool m_additional_event_types_isSet;
    bool m_additional_event_types_isValid;

    QString m_event_time_millis;
    bool m_event_time_millis_isSet;
    bool m_event_time_millis_isValid;

    bool m_from_user_deletion;
    bool m_from_user_deletion_isSet;
    bool m_from_user_deletion_isValid;

    OAIMove m_move;
    bool m_move_isSet;
    bool m_move_isValid;

    QList<OAIPermissionChange> m_permission_changes;
    bool m_permission_changes_isSet;
    bool m_permission_changes_isValid;

    QString m_primary_event_type;
    bool m_primary_event_type_isSet;
    bool m_primary_event_type_isValid;

    OAIRename m_rename;
    bool m_rename_isSet;
    bool m_rename_isValid;

    OAITarget m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvent)

#endif // OAIEvent_H
