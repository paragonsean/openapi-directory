/**
 * Drive Activity API
 * Provides a historical view of activity.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMove.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMove::OAIMove(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMove::OAIMove() {
    this->initializeModel();
}

OAIMove::~OAIMove() {}

void OAIMove::initializeModel() {

    m_added_parents_isSet = false;
    m_added_parents_isValid = false;

    m_removed_parents_isSet = false;
    m_removed_parents_isValid = false;
}

void OAIMove::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMove::fromJsonObject(QJsonObject json) {

    m_added_parents_isValid = ::OpenAPI::fromJsonValue(m_added_parents, json[QString("addedParents")]);
    m_added_parents_isSet = !json[QString("addedParents")].isNull() && m_added_parents_isValid;

    m_removed_parents_isValid = ::OpenAPI::fromJsonValue(m_removed_parents, json[QString("removedParents")]);
    m_removed_parents_isSet = !json[QString("removedParents")].isNull() && m_removed_parents_isValid;
}

QString OAIMove::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMove::asJsonObject() const {
    QJsonObject obj;
    if (m_added_parents.size() > 0) {
        obj.insert(QString("addedParents"), ::OpenAPI::toJsonValue(m_added_parents));
    }
    if (m_removed_parents.size() > 0) {
        obj.insert(QString("removedParents"), ::OpenAPI::toJsonValue(m_removed_parents));
    }
    return obj;
}

QList<OAIParent> OAIMove::getAddedParents() const {
    return m_added_parents;
}
void OAIMove::setAddedParents(const QList<OAIParent> &added_parents) {
    m_added_parents = added_parents;
    m_added_parents_isSet = true;
}

bool OAIMove::is_added_parents_Set() const{
    return m_added_parents_isSet;
}

bool OAIMove::is_added_parents_Valid() const{
    return m_added_parents_isValid;
}

QList<OAIParent> OAIMove::getRemovedParents() const {
    return m_removed_parents;
}
void OAIMove::setRemovedParents(const QList<OAIParent> &removed_parents) {
    m_removed_parents = removed_parents;
    m_removed_parents_isSet = true;
}

bool OAIMove::is_removed_parents_Set() const{
    return m_removed_parents_isSet;
}

bool OAIMove::is_removed_parents_Valid() const{
    return m_removed_parents_isValid;
}

bool OAIMove::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_added_parents.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_removed_parents.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMove::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
