# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.parent import Parent
from openapi_server import util


class Move(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, added_parents: List[Parent]=None, removed_parents: List[Parent]=None):
        """Move - a model defined in OpenAPI

        :param added_parents: The added_parents of this Move.
        :param removed_parents: The removed_parents of this Move.
        """
        self.openapi_types = {
            'added_parents': List[Parent],
            'removed_parents': List[Parent]
        }

        self.attribute_map = {
            'added_parents': 'addedParents',
            'removed_parents': 'removedParents'
        }

        self._added_parents = added_parents
        self._removed_parents = removed_parents

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Move':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Move of this Move.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def added_parents(self):
        """Gets the added_parents of this Move.

        The added parent(s).

        :return: The added_parents of this Move.
        :rtype: List[Parent]
        """
        return self._added_parents

    @added_parents.setter
    def added_parents(self, added_parents):
        """Sets the added_parents of this Move.

        The added parent(s).

        :param added_parents: The added_parents of this Move.
        :type added_parents: List[Parent]
        """

        self._added_parents = added_parents

    @property
    def removed_parents(self):
        """Gets the removed_parents of this Move.

        The removed parent(s).

        :return: The removed_parents of this Move.
        :rtype: List[Parent]
        """
        return self._removed_parents

    @removed_parents.setter
    def removed_parents(self, removed_parents):
        """Sets the removed_parents of this Move.

        The removed parent(s).

        :param removed_parents: The removed_parents of this Move.
        :type removed_parents: List[Parent]
        """

        self._removed_parents = removed_parents
