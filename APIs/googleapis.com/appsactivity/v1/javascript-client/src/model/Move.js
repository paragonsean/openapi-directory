/**
 * Drive Activity API
 * Provides a historical view of activity.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Parent from './Parent';

/**
 * The Move model module.
 * @module model/Move
 * @version v1
 */
class Move {
    /**
     * Constructs a new <code>Move</code>.
     * Contains information about changes in an object&#39;s parents as a result of a move type event.
     * @alias module:model/Move
     */
    constructor() { 
        
        Move.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Move</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Move} obj Optional instance to populate.
     * @return {module:model/Move} The populated <code>Move</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Move();

            if (data.hasOwnProperty('addedParents')) {
                obj['addedParents'] = ApiClient.convertToType(data['addedParents'], [Parent]);
            }
            if (data.hasOwnProperty('removedParents')) {
                obj['removedParents'] = ApiClient.convertToType(data['removedParents'], [Parent]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Move</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Move</code>.
     */
    static validateJSON(data) {
        if (data['addedParents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['addedParents'])) {
                throw new Error("Expected the field `addedParents` to be an array in the JSON data but got " + data['addedParents']);
            }
            // validate the optional field `addedParents` (array)
            for (const item of data['addedParents']) {
                Parent.validateJSON(item);
            };
        }
        if (data['removedParents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['removedParents'])) {
                throw new Error("Expected the field `removedParents` to be an array in the JSON data but got " + data['removedParents']);
            }
            // validate the optional field `removedParents` (array)
            for (const item of data['removedParents']) {
                Parent.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The added parent(s).
 * @member {Array.<module:model/Parent>} addedParents
 */
Move.prototype['addedParents'] = undefined;

/**
 * The removed parent(s).
 * @member {Array.<module:model/Parent>} removedParents
 */
Move.prototype['removedParents'] = undefined;






export default Move;

