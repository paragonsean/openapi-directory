/**
 * Drive Activity API
 * Provides a historical view of activity.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListActivitiesResponse from '../model/ListActivitiesResponse';

/**
* Activities service.
* @module api/ActivitiesApi
* @version v1
*/
export default class ActivitiesApi {

    /**
    * Constructs a new ActivitiesApi. 
    * @alias module:api/ActivitiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appsactivityActivitiesList operation.
     * @callback module:api/ActivitiesApi~appsactivityActivitiesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListActivitiesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of activities visible to the current logged in user. Visible activities are determined by the visibility settings of the object that was acted on, e.g. Drive files a user can see. An activity is a record of past events. Multiple events may be merged if they are similar. A request is scoped to activities from a given Google service using the source parameter.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [driveAncestorId] Identifies the Drive folder containing the items for which to return activities.
     * @param {String} [driveFileId] Identifies the Drive item to return activities for.
     * @param {module:model/String} [groupingStrategy] Indicates the strategy to use when grouping singleEvents items in the associated combinedEvent object.
     * @param {Number} [pageSize] The maximum number of events to return on a page. The response includes a continuation token if there are more events.
     * @param {String} [pageToken] A token to retrieve a specific page of results.
     * @param {String} [source] The Google service from which to return activities. Possible values of source are:  - drive.google.com
     * @param {String} [userId] The ID used for ACL checks (does not filter the resulting event list by the assigned value). Use the special value me to indicate the currently authenticated user.
     * @param {module:api/ActivitiesApi~appsactivityActivitiesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListActivitiesResponse}
     */
    appsactivityActivitiesList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'drive.ancestorId': opts['driveAncestorId'],
        'drive.fileId': opts['driveFileId'],
        'groupingStrategy': opts['groupingStrategy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'source': opts['source'],
        'userId': opts['userId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListActivitiesResponse;
      return this.apiClient.callApi(
        '/activities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
