/*
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Image;
import org.openapitools.client.model.LocalizedString;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FlightCarrier
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:24.677339-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FlightCarrier {
  public static final String SERIALIZED_NAME_AIRLINE_ALLIANCE_LOGO = "airlineAllianceLogo";
  @SerializedName(SERIALIZED_NAME_AIRLINE_ALLIANCE_LOGO)
  private Image airlineAllianceLogo;

  public static final String SERIALIZED_NAME_AIRLINE_LOGO = "airlineLogo";
  @SerializedName(SERIALIZED_NAME_AIRLINE_LOGO)
  private Image airlineLogo;

  public static final String SERIALIZED_NAME_AIRLINE_NAME = "airlineName";
  @SerializedName(SERIALIZED_NAME_AIRLINE_NAME)
  private LocalizedString airlineName;

  public static final String SERIALIZED_NAME_CARRIER_IATA_CODE = "carrierIataCode";
  @SerializedName(SERIALIZED_NAME_CARRIER_IATA_CODE)
  private String carrierIataCode;

  public static final String SERIALIZED_NAME_CARRIER_ICAO_CODE = "carrierIcaoCode";
  @SerializedName(SERIALIZED_NAME_CARRIER_ICAO_CODE)
  private String carrierIcaoCode;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_WIDE_AIRLINE_LOGO = "wideAirlineLogo";
  @SerializedName(SERIALIZED_NAME_WIDE_AIRLINE_LOGO)
  private Image wideAirlineLogo;

  public FlightCarrier() {
  }

  public FlightCarrier airlineAllianceLogo(Image airlineAllianceLogo) {
    this.airlineAllianceLogo = airlineAllianceLogo;
    return this;
  }

  /**
   * Get airlineAllianceLogo
   * @return airlineAllianceLogo
   */
  @javax.annotation.Nullable
  public Image getAirlineAllianceLogo() {
    return airlineAllianceLogo;
  }

  public void setAirlineAllianceLogo(Image airlineAllianceLogo) {
    this.airlineAllianceLogo = airlineAllianceLogo;
  }


  public FlightCarrier airlineLogo(Image airlineLogo) {
    this.airlineLogo = airlineLogo;
    return this;
  }

  /**
   * Get airlineLogo
   * @return airlineLogo
   */
  @javax.annotation.Nullable
  public Image getAirlineLogo() {
    return airlineLogo;
  }

  public void setAirlineLogo(Image airlineLogo) {
    this.airlineLogo = airlineLogo;
  }


  public FlightCarrier airlineName(LocalizedString airlineName) {
    this.airlineName = airlineName;
    return this;
  }

  /**
   * Get airlineName
   * @return airlineName
   */
  @javax.annotation.Nullable
  public LocalizedString getAirlineName() {
    return airlineName;
  }

  public void setAirlineName(LocalizedString airlineName) {
    this.airlineName = airlineName;
  }


  public FlightCarrier carrierIataCode(String carrierIataCode) {
    this.carrierIataCode = carrierIataCode;
    return this;
  }

  /**
   * Two character IATA airline code of the marketing carrier (as opposed to operating carrier). Exactly one of this or &#x60;carrierIcaoCode&#x60; needs to be provided for &#x60;carrier&#x60; and &#x60;operatingCarrier&#x60;. eg: \&quot;LX\&quot; for Swiss Air
   * @return carrierIataCode
   */
  @javax.annotation.Nullable
  public String getCarrierIataCode() {
    return carrierIataCode;
  }

  public void setCarrierIataCode(String carrierIataCode) {
    this.carrierIataCode = carrierIataCode;
  }


  public FlightCarrier carrierIcaoCode(String carrierIcaoCode) {
    this.carrierIcaoCode = carrierIcaoCode;
    return this;
  }

  /**
   * Three character ICAO airline code of the marketing carrier (as opposed to operating carrier). Exactly one of this or &#x60;carrierIataCode&#x60; needs to be provided for &#x60;carrier&#x60; and &#x60;operatingCarrier&#x60;. eg: \&quot;EZY\&quot; for Easy Jet
   * @return carrierIcaoCode
   */
  @javax.annotation.Nullable
  public String getCarrierIcaoCode() {
    return carrierIcaoCode;
  }

  public void setCarrierIcaoCode(String carrierIcaoCode) {
    this.carrierIcaoCode = carrierIcaoCode;
  }


  @Deprecated
  public FlightCarrier kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string &#x60;\&quot;walletobjects#flightCarrier\&quot;&#x60;.
   * @return kind
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  @Deprecated
  public void setKind(String kind) {
    this.kind = kind;
  }


  public FlightCarrier wideAirlineLogo(Image wideAirlineLogo) {
    this.wideAirlineLogo = wideAirlineLogo;
    return this;
  }

  /**
   * Get wideAirlineLogo
   * @return wideAirlineLogo
   */
  @javax.annotation.Nullable
  public Image getWideAirlineLogo() {
    return wideAirlineLogo;
  }

  public void setWideAirlineLogo(Image wideAirlineLogo) {
    this.wideAirlineLogo = wideAirlineLogo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlightCarrier flightCarrier = (FlightCarrier) o;
    return Objects.equals(this.airlineAllianceLogo, flightCarrier.airlineAllianceLogo) &&
        Objects.equals(this.airlineLogo, flightCarrier.airlineLogo) &&
        Objects.equals(this.airlineName, flightCarrier.airlineName) &&
        Objects.equals(this.carrierIataCode, flightCarrier.carrierIataCode) &&
        Objects.equals(this.carrierIcaoCode, flightCarrier.carrierIcaoCode) &&
        Objects.equals(this.kind, flightCarrier.kind) &&
        Objects.equals(this.wideAirlineLogo, flightCarrier.wideAirlineLogo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(airlineAllianceLogo, airlineLogo, airlineName, carrierIataCode, carrierIcaoCode, kind, wideAirlineLogo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlightCarrier {\n");
    sb.append("    airlineAllianceLogo: ").append(toIndentedString(airlineAllianceLogo)).append("\n");
    sb.append("    airlineLogo: ").append(toIndentedString(airlineLogo)).append("\n");
    sb.append("    airlineName: ").append(toIndentedString(airlineName)).append("\n");
    sb.append("    carrierIataCode: ").append(toIndentedString(carrierIataCode)).append("\n");
    sb.append("    carrierIcaoCode: ").append(toIndentedString(carrierIcaoCode)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    wideAirlineLogo: ").append(toIndentedString(wideAirlineLogo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("airlineAllianceLogo");
    openapiFields.add("airlineLogo");
    openapiFields.add("airlineName");
    openapiFields.add("carrierIataCode");
    openapiFields.add("carrierIcaoCode");
    openapiFields.add("kind");
    openapiFields.add("wideAirlineLogo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FlightCarrier
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FlightCarrier.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FlightCarrier is not found in the empty JSON string", FlightCarrier.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FlightCarrier.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FlightCarrier` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `airlineAllianceLogo`
      if (jsonObj.get("airlineAllianceLogo") != null && !jsonObj.get("airlineAllianceLogo").isJsonNull()) {
        Image.validateJsonElement(jsonObj.get("airlineAllianceLogo"));
      }
      // validate the optional field `airlineLogo`
      if (jsonObj.get("airlineLogo") != null && !jsonObj.get("airlineLogo").isJsonNull()) {
        Image.validateJsonElement(jsonObj.get("airlineLogo"));
      }
      // validate the optional field `airlineName`
      if (jsonObj.get("airlineName") != null && !jsonObj.get("airlineName").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("airlineName"));
      }
      if ((jsonObj.get("carrierIataCode") != null && !jsonObj.get("carrierIataCode").isJsonNull()) && !jsonObj.get("carrierIataCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrierIataCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrierIataCode").toString()));
      }
      if ((jsonObj.get("carrierIcaoCode") != null && !jsonObj.get("carrierIcaoCode").isJsonNull()) && !jsonObj.get("carrierIcaoCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrierIcaoCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrierIcaoCode").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // validate the optional field `wideAirlineLogo`
      if (jsonObj.get("wideAirlineLogo") != null && !jsonObj.get("wideAirlineLogo").isJsonNull()) {
        Image.validateJsonElement(jsonObj.get("wideAirlineLogo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FlightCarrier.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FlightCarrier' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FlightCarrier> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FlightCarrier.class));

       return (TypeAdapter<T>) new TypeAdapter<FlightCarrier>() {
           @Override
           public void write(JsonWriter out, FlightCarrier value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FlightCarrier read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FlightCarrier given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FlightCarrier
   * @throws IOException if the JSON string is invalid with respect to FlightCarrier
   */
  public static FlightCarrier fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FlightCarrier.class);
  }

  /**
   * Convert an instance of FlightCarrier to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

