/*
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AppLinkData;
import org.openapitools.client.model.Barcode;
import org.openapitools.client.model.GroupingInfo;
import org.openapitools.client.model.Image;
import org.openapitools.client.model.ImageModuleData;
import org.openapitools.client.model.InfoModuleData;
import org.openapitools.client.model.LatLongPoint;
import org.openapitools.client.model.LinksModuleData;
import org.openapitools.client.model.LoyaltyClass;
import org.openapitools.client.model.LoyaltyPoints;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.PassConstraints;
import org.openapitools.client.model.RotatingBarcode;
import org.openapitools.client.model.TextModuleData;
import org.openapitools.client.model.TimeInterval;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for LoyaltyObject
 */
public class LoyaltyObjectTest {
    private final LoyaltyObject model = new LoyaltyObject();

    /**
     * Model tests for LoyaltyObject
     */
    @Test
    public void testLoyaltyObject() {
        // TODO: test LoyaltyObject
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'accountName'
     */
    @Test
    public void accountNameTest() {
        // TODO: test accountName
    }

    /**
     * Test the property 'appLinkData'
     */
    @Test
    public void appLinkDataTest() {
        // TODO: test appLinkData
    }

    /**
     * Test the property 'barcode'
     */
    @Test
    public void barcodeTest() {
        // TODO: test barcode
    }

    /**
     * Test the property 'classId'
     */
    @Test
    public void classIdTest() {
        // TODO: test classId
    }

    /**
     * Test the property 'classReference'
     */
    @Test
    public void classReferenceTest() {
        // TODO: test classReference
    }

    /**
     * Test the property 'disableExpirationNotification'
     */
    @Test
    public void disableExpirationNotificationTest() {
        // TODO: test disableExpirationNotification
    }

    /**
     * Test the property 'groupingInfo'
     */
    @Test
    public void groupingInfoTest() {
        // TODO: test groupingInfo
    }

    /**
     * Test the property 'hasLinkedDevice'
     */
    @Test
    public void hasLinkedDeviceTest() {
        // TODO: test hasLinkedDevice
    }

    /**
     * Test the property 'hasUsers'
     */
    @Test
    public void hasUsersTest() {
        // TODO: test hasUsers
    }

    /**
     * Test the property 'heroImage'
     */
    @Test
    public void heroImageTest() {
        // TODO: test heroImage
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'imageModulesData'
     */
    @Test
    public void imageModulesDataTest() {
        // TODO: test imageModulesData
    }

    /**
     * Test the property 'infoModuleData'
     */
    @Test
    public void infoModuleDataTest() {
        // TODO: test infoModuleData
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'linkedOfferIds'
     */
    @Test
    public void linkedOfferIdsTest() {
        // TODO: test linkedOfferIds
    }

    /**
     * Test the property 'linksModuleData'
     */
    @Test
    public void linksModuleDataTest() {
        // TODO: test linksModuleData
    }

    /**
     * Test the property 'locations'
     */
    @Test
    public void locationsTest() {
        // TODO: test locations
    }

    /**
     * Test the property 'loyaltyPoints'
     */
    @Test
    public void loyaltyPointsTest() {
        // TODO: test loyaltyPoints
    }

    /**
     * Test the property 'messages'
     */
    @Test
    public void messagesTest() {
        // TODO: test messages
    }

    /**
     * Test the property 'passConstraints'
     */
    @Test
    public void passConstraintsTest() {
        // TODO: test passConstraints
    }

    /**
     * Test the property 'rotatingBarcode'
     */
    @Test
    public void rotatingBarcodeTest() {
        // TODO: test rotatingBarcode
    }

    /**
     * Test the property 'secondaryLoyaltyPoints'
     */
    @Test
    public void secondaryLoyaltyPointsTest() {
        // TODO: test secondaryLoyaltyPoints
    }

    /**
     * Test the property 'smartTapRedemptionValue'
     */
    @Test
    public void smartTapRedemptionValueTest() {
        // TODO: test smartTapRedemptionValue
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'textModulesData'
     */
    @Test
    public void textModulesDataTest() {
        // TODO: test textModulesData
    }

    /**
     * Test the property 'validTimeInterval'
     */
    @Test
    public void validTimeIntervalTest() {
        // TODO: test validTimeInterval
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
