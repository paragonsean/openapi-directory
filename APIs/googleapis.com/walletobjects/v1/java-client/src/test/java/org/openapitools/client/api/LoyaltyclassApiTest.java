/*
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddMessageRequest;
import org.openapitools.client.model.LoyaltyClass;
import org.openapitools.client.model.LoyaltyClassAddMessageResponse;
import org.openapitools.client.model.LoyaltyClassListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LoyaltyclassApi
 */
@Disabled
public class LoyaltyclassApiTest {

    private final LoyaltyclassApi api = new LoyaltyclassApi();

    /**
     * Adds a message to the loyalty class referenced by the given class ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletobjectsLoyaltyclassAddmessageTest() throws ApiException {
        String resourceId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        AddMessageRequest addMessageRequest = null;
        LoyaltyClassAddMessageResponse response = api.walletobjectsLoyaltyclassAddmessage(resourceId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, addMessageRequest);
        // TODO: test validations
    }

    /**
     * Returns the loyalty class with the given class ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletobjectsLoyaltyclassGetTest() throws ApiException {
        String resourceId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        LoyaltyClass response = api.walletobjectsLoyaltyclassGet(resourceId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Inserts an loyalty class with the given ID and properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletobjectsLoyaltyclassInsertTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        LoyaltyClass loyaltyClass = null;
        LoyaltyClass response = api.walletobjectsLoyaltyclassInsert($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, loyaltyClass);
        // TODO: test validations
    }

    /**
     * Returns a list of all loyalty classes for a given issuer ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletobjectsLoyaltyclassListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String issuerId = null;
        Integer maxResults = null;
        String token = null;
        LoyaltyClassListResponse response = api.walletobjectsLoyaltyclassList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, issuerId, maxResults, token);
        // TODO: test validations
    }

    /**
     * Updates the loyalty class referenced by the given class ID. This method supports patch semantics.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletobjectsLoyaltyclassPatchTest() throws ApiException {
        String resourceId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        LoyaltyClass loyaltyClass = null;
        LoyaltyClass response = api.walletobjectsLoyaltyclassPatch(resourceId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, loyaltyClass);
        // TODO: test validations
    }

    /**
     * Updates the loyalty class referenced by the given class ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletobjectsLoyaltyclassUpdateTest() throws ApiException {
        String resourceId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        LoyaltyClass loyaltyClass = null;
        LoyaltyClass response = api.walletobjectsLoyaltyclassUpdate(resourceId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, loyaltyClass);
        // TODO: test validations
    }

}
