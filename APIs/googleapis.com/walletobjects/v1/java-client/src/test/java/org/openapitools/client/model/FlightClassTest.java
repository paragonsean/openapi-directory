/*
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AirportInfo;
import org.openapitools.client.model.BoardingAndSeatingPolicy;
import org.openapitools.client.model.CallbackOptions;
import org.openapitools.client.model.ClassTemplateInfo;
import org.openapitools.client.model.FlightHeader;
import org.openapitools.client.model.Image;
import org.openapitools.client.model.ImageModuleData;
import org.openapitools.client.model.InfoModuleData;
import org.openapitools.client.model.LatLongPoint;
import org.openapitools.client.model.LinksModuleData;
import org.openapitools.client.model.LocalizedString;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.Review;
import org.openapitools.client.model.SecurityAnimation;
import org.openapitools.client.model.TextModuleData;
import org.openapitools.client.model.Uri;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for FlightClass
 */
public class FlightClassTest {
    private final FlightClass model = new FlightClass();

    /**
     * Model tests for FlightClass
     */
    @Test
    public void testFlightClass() {
        // TODO: test FlightClass
    }

    /**
     * Test the property 'allowMultipleUsersPerObject'
     */
    @Test
    public void allowMultipleUsersPerObjectTest() {
        // TODO: test allowMultipleUsersPerObject
    }

    /**
     * Test the property 'boardingAndSeatingPolicy'
     */
    @Test
    public void boardingAndSeatingPolicyTest() {
        // TODO: test boardingAndSeatingPolicy
    }

    /**
     * Test the property 'callbackOptions'
     */
    @Test
    public void callbackOptionsTest() {
        // TODO: test callbackOptions
    }

    /**
     * Test the property 'classTemplateInfo'
     */
    @Test
    public void classTemplateInfoTest() {
        // TODO: test classTemplateInfo
    }

    /**
     * Test the property 'countryCode'
     */
    @Test
    public void countryCodeTest() {
        // TODO: test countryCode
    }

    /**
     * Test the property 'destination'
     */
    @Test
    public void destinationTest() {
        // TODO: test destination
    }

    /**
     * Test the property 'enableSmartTap'
     */
    @Test
    public void enableSmartTapTest() {
        // TODO: test enableSmartTap
    }

    /**
     * Test the property 'flightHeader'
     */
    @Test
    public void flightHeaderTest() {
        // TODO: test flightHeader
    }

    /**
     * Test the property 'flightStatus'
     */
    @Test
    public void flightStatusTest() {
        // TODO: test flightStatus
    }

    /**
     * Test the property 'heroImage'
     */
    @Test
    public void heroImageTest() {
        // TODO: test heroImage
    }

    /**
     * Test the property 'hexBackgroundColor'
     */
    @Test
    public void hexBackgroundColorTest() {
        // TODO: test hexBackgroundColor
    }

    /**
     * Test the property 'homepageUri'
     */
    @Test
    public void homepageUriTest() {
        // TODO: test homepageUri
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'imageModulesData'
     */
    @Test
    public void imageModulesDataTest() {
        // TODO: test imageModulesData
    }

    /**
     * Test the property 'infoModuleData'
     */
    @Test
    public void infoModuleDataTest() {
        // TODO: test infoModuleData
    }

    /**
     * Test the property 'issuerName'
     */
    @Test
    public void issuerNameTest() {
        // TODO: test issuerName
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'languageOverride'
     */
    @Test
    public void languageOverrideTest() {
        // TODO: test languageOverride
    }

    /**
     * Test the property 'linksModuleData'
     */
    @Test
    public void linksModuleDataTest() {
        // TODO: test linksModuleData
    }

    /**
     * Test the property 'localBoardingDateTime'
     */
    @Test
    public void localBoardingDateTimeTest() {
        // TODO: test localBoardingDateTime
    }

    /**
     * Test the property 'localEstimatedOrActualArrivalDateTime'
     */
    @Test
    public void localEstimatedOrActualArrivalDateTimeTest() {
        // TODO: test localEstimatedOrActualArrivalDateTime
    }

    /**
     * Test the property 'localEstimatedOrActualDepartureDateTime'
     */
    @Test
    public void localEstimatedOrActualDepartureDateTimeTest() {
        // TODO: test localEstimatedOrActualDepartureDateTime
    }

    /**
     * Test the property 'localGateClosingDateTime'
     */
    @Test
    public void localGateClosingDateTimeTest() {
        // TODO: test localGateClosingDateTime
    }

    /**
     * Test the property 'localScheduledArrivalDateTime'
     */
    @Test
    public void localScheduledArrivalDateTimeTest() {
        // TODO: test localScheduledArrivalDateTime
    }

    /**
     * Test the property 'localScheduledDepartureDateTime'
     */
    @Test
    public void localScheduledDepartureDateTimeTest() {
        // TODO: test localScheduledDepartureDateTime
    }

    /**
     * Test the property 'localizedIssuerName'
     */
    @Test
    public void localizedIssuerNameTest() {
        // TODO: test localizedIssuerName
    }

    /**
     * Test the property 'locations'
     */
    @Test
    public void locationsTest() {
        // TODO: test locations
    }

    /**
     * Test the property 'messages'
     */
    @Test
    public void messagesTest() {
        // TODO: test messages
    }

    /**
     * Test the property 'multipleDevicesAndHoldersAllowedStatus'
     */
    @Test
    public void multipleDevicesAndHoldersAllowedStatusTest() {
        // TODO: test multipleDevicesAndHoldersAllowedStatus
    }

    /**
     * Test the property 'origin'
     */
    @Test
    public void originTest() {
        // TODO: test origin
    }

    /**
     * Test the property 'redemptionIssuers'
     */
    @Test
    public void redemptionIssuersTest() {
        // TODO: test redemptionIssuers
    }

    /**
     * Test the property 'review'
     */
    @Test
    public void reviewTest() {
        // TODO: test review
    }

    /**
     * Test the property 'reviewStatus'
     */
    @Test
    public void reviewStatusTest() {
        // TODO: test reviewStatus
    }

    /**
     * Test the property 'securityAnimation'
     */
    @Test
    public void securityAnimationTest() {
        // TODO: test securityAnimation
    }

    /**
     * Test the property 'textModulesData'
     */
    @Test
    public void textModulesDataTest() {
        // TODO: test textModulesData
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'viewUnlockRequirement'
     */
    @Test
    public void viewUnlockRequirementTest() {
        // TODO: test viewUnlockRequirement
    }

    /**
     * Test the property 'wordMark'
     */
    @Test
    public void wordMarkTest() {
        // TODO: test wordMark
    }

}
