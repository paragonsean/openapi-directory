/*
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ActivationOptions;
import org.openapitools.client.model.CallbackOptions;
import org.openapitools.client.model.ClassTemplateInfo;
import org.openapitools.client.model.Image;
import org.openapitools.client.model.ImageModuleData;
import org.openapitools.client.model.InfoModuleData;
import org.openapitools.client.model.LatLongPoint;
import org.openapitools.client.model.LinksModuleData;
import org.openapitools.client.model.LocalizedString;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.Review;
import org.openapitools.client.model.SecurityAnimation;
import org.openapitools.client.model.TextModuleData;
import org.openapitools.client.model.Uri;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TransitClass
 */
public class TransitClassTest {
    private final TransitClass model = new TransitClass();

    /**
     * Model tests for TransitClass
     */
    @Test
    public void testTransitClass() {
        // TODO: test TransitClass
    }

    /**
     * Test the property 'activationOptions'
     */
    @Test
    public void activationOptionsTest() {
        // TODO: test activationOptions
    }

    /**
     * Test the property 'allowMultipleUsersPerObject'
     */
    @Test
    public void allowMultipleUsersPerObjectTest() {
        // TODO: test allowMultipleUsersPerObject
    }

    /**
     * Test the property 'callbackOptions'
     */
    @Test
    public void callbackOptionsTest() {
        // TODO: test callbackOptions
    }

    /**
     * Test the property 'classTemplateInfo'
     */
    @Test
    public void classTemplateInfoTest() {
        // TODO: test classTemplateInfo
    }

    /**
     * Test the property 'countryCode'
     */
    @Test
    public void countryCodeTest() {
        // TODO: test countryCode
    }

    /**
     * Test the property 'customCarriageLabel'
     */
    @Test
    public void customCarriageLabelTest() {
        // TODO: test customCarriageLabel
    }

    /**
     * Test the property 'customCoachLabel'
     */
    @Test
    public void customCoachLabelTest() {
        // TODO: test customCoachLabel
    }

    /**
     * Test the property 'customConcessionCategoryLabel'
     */
    @Test
    public void customConcessionCategoryLabelTest() {
        // TODO: test customConcessionCategoryLabel
    }

    /**
     * Test the property 'customConfirmationCodeLabel'
     */
    @Test
    public void customConfirmationCodeLabelTest() {
        // TODO: test customConfirmationCodeLabel
    }

    /**
     * Test the property 'customDiscountMessageLabel'
     */
    @Test
    public void customDiscountMessageLabelTest() {
        // TODO: test customDiscountMessageLabel
    }

    /**
     * Test the property 'customFareClassLabel'
     */
    @Test
    public void customFareClassLabelTest() {
        // TODO: test customFareClassLabel
    }

    /**
     * Test the property 'customFareNameLabel'
     */
    @Test
    public void customFareNameLabelTest() {
        // TODO: test customFareNameLabel
    }

    /**
     * Test the property 'customOtherRestrictionsLabel'
     */
    @Test
    public void customOtherRestrictionsLabelTest() {
        // TODO: test customOtherRestrictionsLabel
    }

    /**
     * Test the property 'customPlatformLabel'
     */
    @Test
    public void customPlatformLabelTest() {
        // TODO: test customPlatformLabel
    }

    /**
     * Test the property 'customPurchaseFaceValueLabel'
     */
    @Test
    public void customPurchaseFaceValueLabelTest() {
        // TODO: test customPurchaseFaceValueLabel
    }

    /**
     * Test the property 'customPurchasePriceLabel'
     */
    @Test
    public void customPurchasePriceLabelTest() {
        // TODO: test customPurchasePriceLabel
    }

    /**
     * Test the property 'customPurchaseReceiptNumberLabel'
     */
    @Test
    public void customPurchaseReceiptNumberLabelTest() {
        // TODO: test customPurchaseReceiptNumberLabel
    }

    /**
     * Test the property 'customRouteRestrictionsDetailsLabel'
     */
    @Test
    public void customRouteRestrictionsDetailsLabelTest() {
        // TODO: test customRouteRestrictionsDetailsLabel
    }

    /**
     * Test the property 'customRouteRestrictionsLabel'
     */
    @Test
    public void customRouteRestrictionsLabelTest() {
        // TODO: test customRouteRestrictionsLabel
    }

    /**
     * Test the property 'customSeatLabel'
     */
    @Test
    public void customSeatLabelTest() {
        // TODO: test customSeatLabel
    }

    /**
     * Test the property 'customTicketNumberLabel'
     */
    @Test
    public void customTicketNumberLabelTest() {
        // TODO: test customTicketNumberLabel
    }

    /**
     * Test the property 'customTimeRestrictionsLabel'
     */
    @Test
    public void customTimeRestrictionsLabelTest() {
        // TODO: test customTimeRestrictionsLabel
    }

    /**
     * Test the property 'customTransitTerminusNameLabel'
     */
    @Test
    public void customTransitTerminusNameLabelTest() {
        // TODO: test customTransitTerminusNameLabel
    }

    /**
     * Test the property 'customZoneLabel'
     */
    @Test
    public void customZoneLabelTest() {
        // TODO: test customZoneLabel
    }

    /**
     * Test the property 'enableSingleLegItinerary'
     */
    @Test
    public void enableSingleLegItineraryTest() {
        // TODO: test enableSingleLegItinerary
    }

    /**
     * Test the property 'enableSmartTap'
     */
    @Test
    public void enableSmartTapTest() {
        // TODO: test enableSmartTap
    }

    /**
     * Test the property 'heroImage'
     */
    @Test
    public void heroImageTest() {
        // TODO: test heroImage
    }

    /**
     * Test the property 'hexBackgroundColor'
     */
    @Test
    public void hexBackgroundColorTest() {
        // TODO: test hexBackgroundColor
    }

    /**
     * Test the property 'homepageUri'
     */
    @Test
    public void homepageUriTest() {
        // TODO: test homepageUri
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'imageModulesData'
     */
    @Test
    public void imageModulesDataTest() {
        // TODO: test imageModulesData
    }

    /**
     * Test the property 'infoModuleData'
     */
    @Test
    public void infoModuleDataTest() {
        // TODO: test infoModuleData
    }

    /**
     * Test the property 'issuerName'
     */
    @Test
    public void issuerNameTest() {
        // TODO: test issuerName
    }

    /**
     * Test the property 'languageOverride'
     */
    @Test
    public void languageOverrideTest() {
        // TODO: test languageOverride
    }

    /**
     * Test the property 'linksModuleData'
     */
    @Test
    public void linksModuleDataTest() {
        // TODO: test linksModuleData
    }

    /**
     * Test the property 'localizedIssuerName'
     */
    @Test
    public void localizedIssuerNameTest() {
        // TODO: test localizedIssuerName
    }

    /**
     * Test the property 'locations'
     */
    @Test
    public void locationsTest() {
        // TODO: test locations
    }

    /**
     * Test the property 'logo'
     */
    @Test
    public void logoTest() {
        // TODO: test logo
    }

    /**
     * Test the property 'messages'
     */
    @Test
    public void messagesTest() {
        // TODO: test messages
    }

    /**
     * Test the property 'multipleDevicesAndHoldersAllowedStatus'
     */
    @Test
    public void multipleDevicesAndHoldersAllowedStatusTest() {
        // TODO: test multipleDevicesAndHoldersAllowedStatus
    }

    /**
     * Test the property 'redemptionIssuers'
     */
    @Test
    public void redemptionIssuersTest() {
        // TODO: test redemptionIssuers
    }

    /**
     * Test the property 'review'
     */
    @Test
    public void reviewTest() {
        // TODO: test review
    }

    /**
     * Test the property 'reviewStatus'
     */
    @Test
    public void reviewStatusTest() {
        // TODO: test reviewStatus
    }

    /**
     * Test the property 'securityAnimation'
     */
    @Test
    public void securityAnimationTest() {
        // TODO: test securityAnimation
    }

    /**
     * Test the property 'textModulesData'
     */
    @Test
    public void textModulesDataTest() {
        // TODO: test textModulesData
    }

    /**
     * Test the property 'transitOperatorName'
     */
    @Test
    public void transitOperatorNameTest() {
        // TODO: test transitOperatorName
    }

    /**
     * Test the property 'transitType'
     */
    @Test
    public void transitTypeTest() {
        // TODO: test transitType
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'viewUnlockRequirement'
     */
    @Test
    public void viewUnlockRequirementTest() {
        // TODO: test viewUnlockRequirement
    }

    /**
     * Test the property 'watermark'
     */
    @Test
    public void watermarkTest() {
        // TODO: test watermark
    }

    /**
     * Test the property 'wideLogo'
     */
    @Test
    public void wideLogoTest() {
        // TODO: test wideLogo
    }

    /**
     * Test the property 'wordMark'
     */
    @Test
    public void wordMarkTest() {
        // TODO: test wordMark
    }

}
