/*
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddMessageRequest;
import org.openapitools.client.model.TransitClass;
import org.openapitools.client.model.TransitClassAddMessageResponse;
import org.openapitools.client.model.TransitClassListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransitclassApi
 */
@Disabled
public class TransitclassApiTest {

    private final TransitclassApi api = new TransitclassApi();

    /**
     * Adds a message to the transit class referenced by the given class ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletobjectsTransitclassAddmessageTest() throws ApiException {
        String resourceId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        AddMessageRequest addMessageRequest = null;
        TransitClassAddMessageResponse response = api.walletobjectsTransitclassAddmessage(resourceId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, addMessageRequest);
        // TODO: test validations
    }

    /**
     * Returns the transit class with the given class ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletobjectsTransitclassGetTest() throws ApiException {
        String resourceId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        TransitClass response = api.walletobjectsTransitclassGet(resourceId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Inserts a transit class with the given ID and properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletobjectsTransitclassInsertTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        TransitClass transitClass = null;
        TransitClass response = api.walletobjectsTransitclassInsert($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, transitClass);
        // TODO: test validations
    }

    /**
     * Returns a list of all transit classes for a given issuer ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletobjectsTransitclassListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String issuerId = null;
        Integer maxResults = null;
        String token = null;
        TransitClassListResponse response = api.walletobjectsTransitclassList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, issuerId, maxResults, token);
        // TODO: test validations
    }

    /**
     * Updates the transit class referenced by the given class ID. This method supports patch semantics.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletobjectsTransitclassPatchTest() throws ApiException {
        String resourceId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        TransitClass transitClass = null;
        TransitClass response = api.walletobjectsTransitclassPatch(resourceId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, transitClass);
        // TODO: test validations
    }

    /**
     * Updates the transit class referenced by the given class ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletobjectsTransitclassUpdateTest() throws ApiException {
        String resourceId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        TransitClass transitClass = null;
        TransitClass response = api.walletobjectsTransitclassUpdate(resourceId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, transitClass);
        // TODO: test validations
    }

}
