/**
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlightObject.h
 *
 * 
 */

#ifndef OAIFlightObject_H
#define OAIFlightObject_H

#include <QJsonObject>

#include "OAIAppLinkData.h"
#include "OAIBarcode.h"
#include "OAIBoardingAndSeatingInfo.h"
#include "OAIFlightClass.h"
#include "OAIGroupingInfo.h"
#include "OAIImage.h"
#include "OAIImageModuleData.h"
#include "OAIInfoModuleData.h"
#include "OAILatLongPoint.h"
#include "OAILinksModuleData.h"
#include "OAIMessage.h"
#include "OAIPassConstraints.h"
#include "OAIReservationInfo.h"
#include "OAIRotatingBarcode.h"
#include "OAITextModuleData.h"
#include "OAITimeInterval.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAppLinkData;
class OAIBarcode;
class OAIBoardingAndSeatingInfo;
class OAIFlightClass;
class OAIGroupingInfo;
class OAIImage;
class OAIImageModuleData;
class OAIInfoModuleData;
class OAILinksModuleData;
class OAILatLongPoint;
class OAIMessage;
class OAIPassConstraints;
class OAIReservationInfo;
class OAIRotatingBarcode;
class OAITextModuleData;
class OAITimeInterval;

class OAIFlightObject : public OAIObject {
public:
    OAIFlightObject();
    OAIFlightObject(QString json);
    ~OAIFlightObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAppLinkData getAppLinkData() const;
    void setAppLinkData(const OAIAppLinkData &app_link_data);
    bool is_app_link_data_Set() const;
    bool is_app_link_data_Valid() const;

    OAIBarcode getBarcode() const;
    void setBarcode(const OAIBarcode &barcode);
    bool is_barcode_Set() const;
    bool is_barcode_Valid() const;

    OAIBoardingAndSeatingInfo getBoardingAndSeatingInfo() const;
    void setBoardingAndSeatingInfo(const OAIBoardingAndSeatingInfo &boarding_and_seating_info);
    bool is_boarding_and_seating_info_Set() const;
    bool is_boarding_and_seating_info_Valid() const;

    QString getClassId() const;
    void setClassId(const QString &class_id);
    bool is_class_id_Set() const;
    bool is_class_id_Valid() const;

    OAIFlightClass getClassReference() const;
    void setClassReference(const OAIFlightClass &class_reference);
    bool is_class_reference_Set() const;
    bool is_class_reference_Valid() const;

    bool isDisableExpirationNotification() const;
    void setDisableExpirationNotification(const bool &disable_expiration_notification);
    bool is_disable_expiration_notification_Set() const;
    bool is_disable_expiration_notification_Valid() const;

    OAIGroupingInfo getGroupingInfo() const;
    void setGroupingInfo(const OAIGroupingInfo &grouping_info);
    bool is_grouping_info_Set() const;
    bool is_grouping_info_Valid() const;

    bool isHasLinkedDevice() const;
    void setHasLinkedDevice(const bool &has_linked_device);
    bool is_has_linked_device_Set() const;
    bool is_has_linked_device_Valid() const;

    bool isHasUsers() const;
    void setHasUsers(const bool &has_users);
    bool is_has_users_Set() const;
    bool is_has_users_Valid() const;

    OAIImage getHeroImage() const;
    void setHeroImage(const OAIImage &hero_image);
    bool is_hero_image_Set() const;
    bool is_hero_image_Valid() const;

    QString getHexBackgroundColor() const;
    void setHexBackgroundColor(const QString &hex_background_color);
    bool is_hex_background_color_Set() const;
    bool is_hex_background_color_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIImageModuleData> getImageModulesData() const;
    void setImageModulesData(const QList<OAIImageModuleData> &image_modules_data);
    bool is_image_modules_data_Set() const;
    bool is_image_modules_data_Valid() const;

    OAIInfoModuleData getInfoModuleData() const;
    void setInfoModuleData(const OAIInfoModuleData &info_module_data);
    bool is_info_module_data_Set() const;
    bool is_info_module_data_Valid() const;

    Q_DECL_DEPRECATED QString getKind() const;
    Q_DECL_DEPRECATED void setKind(const QString &kind);
    Q_DECL_DEPRECATED bool is_kind_Set() const;
    Q_DECL_DEPRECATED bool is_kind_Valid() const;

    OAILinksModuleData getLinksModuleData() const;
    void setLinksModuleData(const OAILinksModuleData &links_module_data);
    bool is_links_module_data_Set() const;
    bool is_links_module_data_Valid() const;

    QList<OAILatLongPoint> getLocations() const;
    void setLocations(const QList<OAILatLongPoint> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    QList<OAIMessage> getMessages() const;
    void setMessages(const QList<OAIMessage> &messages);
    bool is_messages_Set() const;
    bool is_messages_Valid() const;

    OAIPassConstraints getPassConstraints() const;
    void setPassConstraints(const OAIPassConstraints &pass_constraints);
    bool is_pass_constraints_Set() const;
    bool is_pass_constraints_Valid() const;

    QString getPassengerName() const;
    void setPassengerName(const QString &passenger_name);
    bool is_passenger_name_Set() const;
    bool is_passenger_name_Valid() const;

    OAIReservationInfo getReservationInfo() const;
    void setReservationInfo(const OAIReservationInfo &reservation_info);
    bool is_reservation_info_Set() const;
    bool is_reservation_info_Valid() const;

    OAIRotatingBarcode getRotatingBarcode() const;
    void setRotatingBarcode(const OAIRotatingBarcode &rotating_barcode);
    bool is_rotating_barcode_Set() const;
    bool is_rotating_barcode_Valid() const;

    OAIImage getSecurityProgramLogo() const;
    void setSecurityProgramLogo(const OAIImage &security_program_logo);
    bool is_security_program_logo_Set() const;
    bool is_security_program_logo_Valid() const;

    QString getSmartTapRedemptionValue() const;
    void setSmartTapRedemptionValue(const QString &smart_tap_redemption_value);
    bool is_smart_tap_redemption_value_Set() const;
    bool is_smart_tap_redemption_value_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QList<OAITextModuleData> getTextModulesData() const;
    void setTextModulesData(const QList<OAITextModuleData> &text_modules_data);
    bool is_text_modules_data_Set() const;
    bool is_text_modules_data_Valid() const;

    OAITimeInterval getValidTimeInterval() const;
    void setValidTimeInterval(const OAITimeInterval &valid_time_interval);
    bool is_valid_time_interval_Set() const;
    bool is_valid_time_interval_Valid() const;

    Q_DECL_DEPRECATED QString getVersion() const;
    Q_DECL_DEPRECATED void setVersion(const QString &version);
    Q_DECL_DEPRECATED bool is_version_Set() const;
    Q_DECL_DEPRECATED bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAppLinkData m_app_link_data;
    bool m_app_link_data_isSet;
    bool m_app_link_data_isValid;

    OAIBarcode m_barcode;
    bool m_barcode_isSet;
    bool m_barcode_isValid;

    OAIBoardingAndSeatingInfo m_boarding_and_seating_info;
    bool m_boarding_and_seating_info_isSet;
    bool m_boarding_and_seating_info_isValid;

    QString m_class_id;
    bool m_class_id_isSet;
    bool m_class_id_isValid;

    OAIFlightClass m_class_reference;
    bool m_class_reference_isSet;
    bool m_class_reference_isValid;

    bool m_disable_expiration_notification;
    bool m_disable_expiration_notification_isSet;
    bool m_disable_expiration_notification_isValid;

    OAIGroupingInfo m_grouping_info;
    bool m_grouping_info_isSet;
    bool m_grouping_info_isValid;

    bool m_has_linked_device;
    bool m_has_linked_device_isSet;
    bool m_has_linked_device_isValid;

    bool m_has_users;
    bool m_has_users_isSet;
    bool m_has_users_isValid;

    OAIImage m_hero_image;
    bool m_hero_image_isSet;
    bool m_hero_image_isValid;

    QString m_hex_background_color;
    bool m_hex_background_color_isSet;
    bool m_hex_background_color_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIImageModuleData> m_image_modules_data;
    bool m_image_modules_data_isSet;
    bool m_image_modules_data_isValid;

    OAIInfoModuleData m_info_module_data;
    bool m_info_module_data_isSet;
    bool m_info_module_data_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAILinksModuleData m_links_module_data;
    bool m_links_module_data_isSet;
    bool m_links_module_data_isValid;

    QList<OAILatLongPoint> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    QList<OAIMessage> m_messages;
    bool m_messages_isSet;
    bool m_messages_isValid;

    OAIPassConstraints m_pass_constraints;
    bool m_pass_constraints_isSet;
    bool m_pass_constraints_isValid;

    QString m_passenger_name;
    bool m_passenger_name_isSet;
    bool m_passenger_name_isValid;

    OAIReservationInfo m_reservation_info;
    bool m_reservation_info_isSet;
    bool m_reservation_info_isValid;

    OAIRotatingBarcode m_rotating_barcode;
    bool m_rotating_barcode_isSet;
    bool m_rotating_barcode_isValid;

    OAIImage m_security_program_logo;
    bool m_security_program_logo_isSet;
    bool m_security_program_logo_isValid;

    QString m_smart_tap_redemption_value;
    bool m_smart_tap_redemption_value_isSet;
    bool m_smart_tap_redemption_value_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QList<OAITextModuleData> m_text_modules_data;
    bool m_text_modules_data_isSet;
    bool m_text_modules_data_isValid;

    OAITimeInterval m_valid_time_interval;
    bool m_valid_time_interval_isSet;
    bool m_valid_time_interval_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlightObject)

#endif // OAIFlightObject_H
