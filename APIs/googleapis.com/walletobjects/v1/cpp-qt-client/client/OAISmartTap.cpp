/**
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISmartTap.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISmartTap::OAISmartTap(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISmartTap::OAISmartTap() {
    this->initializeModel();
}

OAISmartTap::~OAISmartTap() {}

void OAISmartTap::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_infos_isSet = false;
    m_infos_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_merchant_id_isSet = false;
    m_merchant_id_isValid = false;
}

void OAISmartTap::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISmartTap::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_infos_isValid = ::OpenAPI::fromJsonValue(m_infos, json[QString("infos")]);
    m_infos_isSet = !json[QString("infos")].isNull() && m_infos_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_id, json[QString("merchantId")]);
    m_merchant_id_isSet = !json[QString("merchantId")].isNull() && m_merchant_id_isValid;
}

QString OAISmartTap::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISmartTap::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_infos.size() > 0) {
        obj.insert(QString("infos"), ::OpenAPI::toJsonValue(m_infos));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_merchant_id_isSet) {
        obj.insert(QString("merchantId"), ::OpenAPI::toJsonValue(m_merchant_id));
    }
    return obj;
}

QString OAISmartTap::getId() const {
    return m_id;
}
void OAISmartTap::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISmartTap::is_id_Set() const{
    return m_id_isSet;
}

bool OAISmartTap::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAIIssuerToUserInfo> OAISmartTap::getInfos() const {
    return m_infos;
}
void OAISmartTap::setInfos(const QList<OAIIssuerToUserInfo> &infos) {
    m_infos = infos;
    m_infos_isSet = true;
}

bool OAISmartTap::is_infos_Set() const{
    return m_infos_isSet;
}

bool OAISmartTap::is_infos_Valid() const{
    return m_infos_isValid;
}

QString OAISmartTap::getKind() const {
    return m_kind;
}
void OAISmartTap::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAISmartTap::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAISmartTap::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAISmartTap::getMerchantId() const {
    return m_merchant_id;
}
void OAISmartTap::setMerchantId(const QString &merchant_id) {
    m_merchant_id = merchant_id;
    m_merchant_id_isSet = true;
}

bool OAISmartTap::is_merchant_id_Set() const{
    return m_merchant_id_isSet;
}

bool OAISmartTap::is_merchant_id_Valid() const{
    return m_merchant_id_isValid;
}

bool OAISmartTap::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_infos.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISmartTap::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
