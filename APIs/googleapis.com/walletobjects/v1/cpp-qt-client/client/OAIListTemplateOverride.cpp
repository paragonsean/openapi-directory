/**
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListTemplateOverride.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListTemplateOverride::OAIListTemplateOverride(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListTemplateOverride::OAIListTemplateOverride() {
    this->initializeModel();
}

OAIListTemplateOverride::~OAIListTemplateOverride() {}

void OAIListTemplateOverride::initializeModel() {

    m_first_row_option_isSet = false;
    m_first_row_option_isValid = false;

    m_second_row_option_isSet = false;
    m_second_row_option_isValid = false;

    m_third_row_option_isSet = false;
    m_third_row_option_isValid = false;
}

void OAIListTemplateOverride::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListTemplateOverride::fromJsonObject(QJsonObject json) {

    m_first_row_option_isValid = ::OpenAPI::fromJsonValue(m_first_row_option, json[QString("firstRowOption")]);
    m_first_row_option_isSet = !json[QString("firstRowOption")].isNull() && m_first_row_option_isValid;

    m_second_row_option_isValid = ::OpenAPI::fromJsonValue(m_second_row_option, json[QString("secondRowOption")]);
    m_second_row_option_isSet = !json[QString("secondRowOption")].isNull() && m_second_row_option_isValid;

    m_third_row_option_isValid = ::OpenAPI::fromJsonValue(m_third_row_option, json[QString("thirdRowOption")]);
    m_third_row_option_isSet = !json[QString("thirdRowOption")].isNull() && m_third_row_option_isValid;
}

QString OAIListTemplateOverride::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListTemplateOverride::asJsonObject() const {
    QJsonObject obj;
    if (m_first_row_option.isSet()) {
        obj.insert(QString("firstRowOption"), ::OpenAPI::toJsonValue(m_first_row_option));
    }
    if (m_second_row_option.isSet()) {
        obj.insert(QString("secondRowOption"), ::OpenAPI::toJsonValue(m_second_row_option));
    }
    if (m_third_row_option.isSet()) {
        obj.insert(QString("thirdRowOption"), ::OpenAPI::toJsonValue(m_third_row_option));
    }
    return obj;
}

OAIFirstRowOption OAIListTemplateOverride::getFirstRowOption() const {
    return m_first_row_option;
}
void OAIListTemplateOverride::setFirstRowOption(const OAIFirstRowOption &first_row_option) {
    m_first_row_option = first_row_option;
    m_first_row_option_isSet = true;
}

bool OAIListTemplateOverride::is_first_row_option_Set() const{
    return m_first_row_option_isSet;
}

bool OAIListTemplateOverride::is_first_row_option_Valid() const{
    return m_first_row_option_isValid;
}

OAIFieldSelector OAIListTemplateOverride::getSecondRowOption() const {
    return m_second_row_option;
}
void OAIListTemplateOverride::setSecondRowOption(const OAIFieldSelector &second_row_option) {
    m_second_row_option = second_row_option;
    m_second_row_option_isSet = true;
}

bool OAIListTemplateOverride::is_second_row_option_Set() const{
    return m_second_row_option_isSet;
}

bool OAIListTemplateOverride::is_second_row_option_Valid() const{
    return m_second_row_option_isValid;
}

OAIFieldSelector OAIListTemplateOverride::getThirdRowOption() const {
    return m_third_row_option;
}
void OAIListTemplateOverride::setThirdRowOption(const OAIFieldSelector &third_row_option) {
    m_third_row_option = third_row_option;
    m_third_row_option_isSet = true;
}

bool OAIListTemplateOverride::is_third_row_option_Set() const{
    return m_third_row_option_isSet;
}

bool OAIListTemplateOverride::is_third_row_option_Valid() const{
    return m_third_row_option_isValid;
}

bool OAIListTemplateOverride::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_row_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_second_row_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_third_row_option.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListTemplateOverride::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
