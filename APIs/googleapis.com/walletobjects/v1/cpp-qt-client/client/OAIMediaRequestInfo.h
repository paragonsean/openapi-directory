/**
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMediaRequestInfo.h
 *
 * Extra information added to operations that support Scotty media requests.
 */

#ifndef OAIMediaRequestInfo_H
#define OAIMediaRequestInfo_H

#include <QJsonObject>

#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMediaRequestInfo : public OAIObject {
public:
    OAIMediaRequestInfo();
    OAIMediaRequestInfo(QString json);
    ~OAIMediaRequestInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrentBytes() const;
    void setCurrentBytes(const QString &current_bytes);
    bool is_current_bytes_Set() const;
    bool is_current_bytes_Valid() const;

    QString getCustomData() const;
    void setCustomData(const QString &custom_data);
    bool is_custom_data_Set() const;
    bool is_custom_data_Valid() const;

    QString getDiffObjectVersion() const;
    void setDiffObjectVersion(const QString &diff_object_version);
    bool is_diff_object_version_Set() const;
    bool is_diff_object_version_Valid() const;

    qint32 getFinalStatus() const;
    void setFinalStatus(const qint32 &final_status);
    bool is_final_status_Set() const;
    bool is_final_status_Valid() const;

    QString getNotificationType() const;
    void setNotificationType(const QString &notification_type);
    bool is_notification_type_Set() const;
    bool is_notification_type_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QByteArray getRequestReceivedParamsServingInfo() const;
    void setRequestReceivedParamsServingInfo(const QByteArray &request_received_params_serving_info);
    bool is_request_received_params_serving_info_Set() const;
    bool is_request_received_params_serving_info_Valid() const;

    QString getTotalBytes() const;
    void setTotalBytes(const QString &total_bytes);
    bool is_total_bytes_Set() const;
    bool is_total_bytes_Valid() const;

    bool isTotalBytesIsEstimated() const;
    void setTotalBytesIsEstimated(const bool &total_bytes_is_estimated);
    bool is_total_bytes_is_estimated_Set() const;
    bool is_total_bytes_is_estimated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_current_bytes;
    bool m_current_bytes_isSet;
    bool m_current_bytes_isValid;

    QString m_custom_data;
    bool m_custom_data_isSet;
    bool m_custom_data_isValid;

    QString m_diff_object_version;
    bool m_diff_object_version_isSet;
    bool m_diff_object_version_isValid;

    qint32 m_final_status;
    bool m_final_status_isSet;
    bool m_final_status_isValid;

    QString m_notification_type;
    bool m_notification_type_isSet;
    bool m_notification_type_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QByteArray m_request_received_params_serving_info;
    bool m_request_received_params_serving_info_isSet;
    bool m_request_received_params_serving_info_isValid;

    QString m_total_bytes;
    bool m_total_bytes_isSet;
    bool m_total_bytes_isValid;

    bool m_total_bytes_is_estimated;
    bool m_total_bytes_is_estimated_isSet;
    bool m_total_bytes_is_estimated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMediaRequestInfo)

#endif // OAIMediaRequestInfo_H
