/**
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDetailsItemInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDetailsItemInfo::OAIDetailsItemInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDetailsItemInfo::OAIDetailsItemInfo() {
    this->initializeModel();
}

OAIDetailsItemInfo::~OAIDetailsItemInfo() {}

void OAIDetailsItemInfo::initializeModel() {

    m_item_isSet = false;
    m_item_isValid = false;
}

void OAIDetailsItemInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDetailsItemInfo::fromJsonObject(QJsonObject json) {

    m_item_isValid = ::OpenAPI::fromJsonValue(m_item, json[QString("item")]);
    m_item_isSet = !json[QString("item")].isNull() && m_item_isValid;
}

QString OAIDetailsItemInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDetailsItemInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_item.isSet()) {
        obj.insert(QString("item"), ::OpenAPI::toJsonValue(m_item));
    }
    return obj;
}

OAITemplateItem OAIDetailsItemInfo::getItem() const {
    return m_item;
}
void OAIDetailsItemInfo::setItem(const OAITemplateItem &item) {
    m_item = item;
    m_item_isSet = true;
}

bool OAIDetailsItemInfo::is_item_Set() const{
    return m_item_isSet;
}

bool OAIDetailsItemInfo::is_item_Valid() const{
    return m_item_isValid;
}

bool OAIDetailsItemInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_item.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDetailsItemInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
