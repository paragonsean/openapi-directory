/**
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppLinkData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppLinkData::OAIAppLinkData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppLinkData::OAIAppLinkData() {
    this->initializeModel();
}

OAIAppLinkData::~OAIAppLinkData() {}

void OAIAppLinkData::initializeModel() {

    m_android_app_link_info_isSet = false;
    m_android_app_link_info_isValid = false;

    m_ios_app_link_info_isSet = false;
    m_ios_app_link_info_isValid = false;

    m_web_app_link_info_isSet = false;
    m_web_app_link_info_isValid = false;
}

void OAIAppLinkData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppLinkData::fromJsonObject(QJsonObject json) {

    m_android_app_link_info_isValid = ::OpenAPI::fromJsonValue(m_android_app_link_info, json[QString("androidAppLinkInfo")]);
    m_android_app_link_info_isSet = !json[QString("androidAppLinkInfo")].isNull() && m_android_app_link_info_isValid;

    m_ios_app_link_info_isValid = ::OpenAPI::fromJsonValue(m_ios_app_link_info, json[QString("iosAppLinkInfo")]);
    m_ios_app_link_info_isSet = !json[QString("iosAppLinkInfo")].isNull() && m_ios_app_link_info_isValid;

    m_web_app_link_info_isValid = ::OpenAPI::fromJsonValue(m_web_app_link_info, json[QString("webAppLinkInfo")]);
    m_web_app_link_info_isSet = !json[QString("webAppLinkInfo")].isNull() && m_web_app_link_info_isValid;
}

QString OAIAppLinkData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppLinkData::asJsonObject() const {
    QJsonObject obj;
    if (m_android_app_link_info.isSet()) {
        obj.insert(QString("androidAppLinkInfo"), ::OpenAPI::toJsonValue(m_android_app_link_info));
    }
    if (m_ios_app_link_info.isSet()) {
        obj.insert(QString("iosAppLinkInfo"), ::OpenAPI::toJsonValue(m_ios_app_link_info));
    }
    if (m_web_app_link_info.isSet()) {
        obj.insert(QString("webAppLinkInfo"), ::OpenAPI::toJsonValue(m_web_app_link_info));
    }
    return obj;
}

OAIAppLinkDataAppLinkInfo OAIAppLinkData::getAndroidAppLinkInfo() const {
    return m_android_app_link_info;
}
void OAIAppLinkData::setAndroidAppLinkInfo(const OAIAppLinkDataAppLinkInfo &android_app_link_info) {
    m_android_app_link_info = android_app_link_info;
    m_android_app_link_info_isSet = true;
}

bool OAIAppLinkData::is_android_app_link_info_Set() const{
    return m_android_app_link_info_isSet;
}

bool OAIAppLinkData::is_android_app_link_info_Valid() const{
    return m_android_app_link_info_isValid;
}

OAIAppLinkDataAppLinkInfo OAIAppLinkData::getIosAppLinkInfo() const {
    return m_ios_app_link_info;
}
void OAIAppLinkData::setIosAppLinkInfo(const OAIAppLinkDataAppLinkInfo &ios_app_link_info) {
    m_ios_app_link_info = ios_app_link_info;
    m_ios_app_link_info_isSet = true;
}

bool OAIAppLinkData::is_ios_app_link_info_Set() const{
    return m_ios_app_link_info_isSet;
}

bool OAIAppLinkData::is_ios_app_link_info_Valid() const{
    return m_ios_app_link_info_isValid;
}

OAIAppLinkDataAppLinkInfo OAIAppLinkData::getWebAppLinkInfo() const {
    return m_web_app_link_info;
}
void OAIAppLinkData::setWebAppLinkInfo(const OAIAppLinkDataAppLinkInfo &web_app_link_info) {
    m_web_app_link_info = web_app_link_info;
    m_web_app_link_info_isSet = true;
}

bool OAIAppLinkData::is_web_app_link_info_Set() const{
    return m_web_app_link_info_isSet;
}

bool OAIAppLinkData::is_web_app_link_info_Valid() const{
    return m_web_app_link_info_isValid;
}

bool OAIAppLinkData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_android_app_link_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ios_app_link_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_app_link_info.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppLinkData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
