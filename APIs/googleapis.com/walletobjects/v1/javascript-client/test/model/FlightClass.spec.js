/**
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleWalletApi);
  }
}(this, function(expect, GoogleWalletApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleWalletApi.FlightClass();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FlightClass', function() {
    it('should create an instance of FlightClass', function() {
      // uncomment below and update the code to test FlightClass
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be.a(GoogleWalletApi.FlightClass);
    });

    it('should have the property allowMultipleUsersPerObject (base name: "allowMultipleUsersPerObject")', function() {
      // uncomment below and update the code to test the property allowMultipleUsersPerObject
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property boardingAndSeatingPolicy (base name: "boardingAndSeatingPolicy")', function() {
      // uncomment below and update the code to test the property boardingAndSeatingPolicy
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property callbackOptions (base name: "callbackOptions")', function() {
      // uncomment below and update the code to test the property callbackOptions
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property classTemplateInfo (base name: "classTemplateInfo")', function() {
      // uncomment below and update the code to test the property classTemplateInfo
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "countryCode")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property destination (base name: "destination")', function() {
      // uncomment below and update the code to test the property destination
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property enableSmartTap (base name: "enableSmartTap")', function() {
      // uncomment below and update the code to test the property enableSmartTap
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property flightHeader (base name: "flightHeader")', function() {
      // uncomment below and update the code to test the property flightHeader
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property flightStatus (base name: "flightStatus")', function() {
      // uncomment below and update the code to test the property flightStatus
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property heroImage (base name: "heroImage")', function() {
      // uncomment below and update the code to test the property heroImage
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property hexBackgroundColor (base name: "hexBackgroundColor")', function() {
      // uncomment below and update the code to test the property hexBackgroundColor
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property homepageUri (base name: "homepageUri")', function() {
      // uncomment below and update the code to test the property homepageUri
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property imageModulesData (base name: "imageModulesData")', function() {
      // uncomment below and update the code to test the property imageModulesData
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property infoModuleData (base name: "infoModuleData")', function() {
      // uncomment below and update the code to test the property infoModuleData
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property issuerName (base name: "issuerName")', function() {
      // uncomment below and update the code to test the property issuerName
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property languageOverride (base name: "languageOverride")', function() {
      // uncomment below and update the code to test the property languageOverride
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property linksModuleData (base name: "linksModuleData")', function() {
      // uncomment below and update the code to test the property linksModuleData
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property localBoardingDateTime (base name: "localBoardingDateTime")', function() {
      // uncomment below and update the code to test the property localBoardingDateTime
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property localEstimatedOrActualArrivalDateTime (base name: "localEstimatedOrActualArrivalDateTime")', function() {
      // uncomment below and update the code to test the property localEstimatedOrActualArrivalDateTime
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property localEstimatedOrActualDepartureDateTime (base name: "localEstimatedOrActualDepartureDateTime")', function() {
      // uncomment below and update the code to test the property localEstimatedOrActualDepartureDateTime
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property localGateClosingDateTime (base name: "localGateClosingDateTime")', function() {
      // uncomment below and update the code to test the property localGateClosingDateTime
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property localScheduledArrivalDateTime (base name: "localScheduledArrivalDateTime")', function() {
      // uncomment below and update the code to test the property localScheduledArrivalDateTime
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property localScheduledDepartureDateTime (base name: "localScheduledDepartureDateTime")', function() {
      // uncomment below and update the code to test the property localScheduledDepartureDateTime
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property localizedIssuerName (base name: "localizedIssuerName")', function() {
      // uncomment below and update the code to test the property localizedIssuerName
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property locations (base name: "locations")', function() {
      // uncomment below and update the code to test the property locations
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property messages (base name: "messages")', function() {
      // uncomment below and update the code to test the property messages
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property multipleDevicesAndHoldersAllowedStatus (base name: "multipleDevicesAndHoldersAllowedStatus")', function() {
      // uncomment below and update the code to test the property multipleDevicesAndHoldersAllowedStatus
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property origin (base name: "origin")', function() {
      // uncomment below and update the code to test the property origin
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property redemptionIssuers (base name: "redemptionIssuers")', function() {
      // uncomment below and update the code to test the property redemptionIssuers
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property review (base name: "review")', function() {
      // uncomment below and update the code to test the property review
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property reviewStatus (base name: "reviewStatus")', function() {
      // uncomment below and update the code to test the property reviewStatus
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property securityAnimation (base name: "securityAnimation")', function() {
      // uncomment below and update the code to test the property securityAnimation
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property textModulesData (base name: "textModulesData")', function() {
      // uncomment below and update the code to test the property textModulesData
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property viewUnlockRequirement (base name: "viewUnlockRequirement")', function() {
      // uncomment below and update the code to test the property viewUnlockRequirement
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

    it('should have the property wordMark (base name: "wordMark")', function() {
      // uncomment below and update the code to test the property wordMark
      //var instance = new GoogleWalletApi.FlightClass();
      //expect(instance).to.be();
    });

  });

}));
