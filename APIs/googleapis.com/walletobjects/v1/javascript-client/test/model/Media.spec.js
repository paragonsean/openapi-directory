/**
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleWalletApi);
  }
}(this, function(expect, GoogleWalletApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleWalletApi.Media();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Media', function() {
    it('should create an instance of Media', function() {
      // uncomment below and update the code to test Media
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be.a(GoogleWalletApi.Media);
    });

    it('should have the property algorithm (base name: "algorithm")', function() {
      // uncomment below and update the code to test the property algorithm
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property bigstoreObjectRef (base name: "bigstoreObjectRef")', function() {
      // uncomment below and update the code to test the property bigstoreObjectRef
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property blobRef (base name: "blobRef")', function() {
      // uncomment below and update the code to test the property blobRef
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property blobstore2Info (base name: "blobstore2Info")', function() {
      // uncomment below and update the code to test the property blobstore2Info
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property compositeMedia (base name: "compositeMedia")', function() {
      // uncomment below and update the code to test the property compositeMedia
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property contentType (base name: "contentType")', function() {
      // uncomment below and update the code to test the property contentType
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property contentTypeInfo (base name: "contentTypeInfo")', function() {
      // uncomment below and update the code to test the property contentTypeInfo
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property cosmoBinaryReference (base name: "cosmoBinaryReference")', function() {
      // uncomment below and update the code to test the property cosmoBinaryReference
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property crc32cHash (base name: "crc32cHash")', function() {
      // uncomment below and update the code to test the property crc32cHash
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property diffChecksumsResponse (base name: "diffChecksumsResponse")', function() {
      // uncomment below and update the code to test the property diffChecksumsResponse
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property diffDownloadResponse (base name: "diffDownloadResponse")', function() {
      // uncomment below and update the code to test the property diffDownloadResponse
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property diffUploadRequest (base name: "diffUploadRequest")', function() {
      // uncomment below and update the code to test the property diffUploadRequest
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property diffUploadResponse (base name: "diffUploadResponse")', function() {
      // uncomment below and update the code to test the property diffUploadResponse
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property diffVersionResponse (base name: "diffVersionResponse")', function() {
      // uncomment below and update the code to test the property diffVersionResponse
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property downloadParameters (base name: "downloadParameters")', function() {
      // uncomment below and update the code to test the property downloadParameters
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property filename (base name: "filename")', function() {
      // uncomment below and update the code to test the property filename
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property hash (base name: "hash")', function() {
      // uncomment below and update the code to test the property hash
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property hashVerified (base name: "hashVerified")', function() {
      // uncomment below and update the code to test the property hashVerified
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property inline (base name: "inline")', function() {
      // uncomment below and update the code to test the property inline
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property isPotentialRetry (base name: "isPotentialRetry")', function() {
      // uncomment below and update the code to test the property isPotentialRetry
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property length (base name: "length")', function() {
      // uncomment below and update the code to test the property length
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property md5Hash (base name: "md5Hash")', function() {
      // uncomment below and update the code to test the property md5Hash
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property mediaId (base name: "mediaId")', function() {
      // uncomment below and update the code to test the property mediaId
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property objectId (base name: "objectId")', function() {
      // uncomment below and update the code to test the property objectId
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property path (base name: "path")', function() {
      // uncomment below and update the code to test the property path
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property referenceType (base name: "referenceType")', function() {
      // uncomment below and update the code to test the property referenceType
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property sha1Hash (base name: "sha1Hash")', function() {
      // uncomment below and update the code to test the property sha1Hash
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property sha256Hash (base name: "sha256Hash")', function() {
      // uncomment below and update the code to test the property sha256Hash
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

    it('should have the property token (base name: "token")', function() {
      // uncomment below and update the code to test the property token
      //var instance = new GoogleWalletApi.Media();
      //expect(instance).to.be();
    });

  });

}));
