/**
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';

/**
 * The LoyaltyPointsBalance model module.
 * @module model/LoyaltyPointsBalance
 * @version v1
 */
class LoyaltyPointsBalance {
    /**
     * Constructs a new <code>LoyaltyPointsBalance</code>.
     * @alias module:model/LoyaltyPointsBalance
     */
    constructor() { 
        
        LoyaltyPointsBalance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoyaltyPointsBalance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltyPointsBalance} obj Optional instance to populate.
     * @return {module:model/LoyaltyPointsBalance} The populated <code>LoyaltyPointsBalance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltyPointsBalance();

            if (data.hasOwnProperty('double')) {
                obj['double'] = ApiClient.convertToType(data['double'], 'Number');
            }
            if (data.hasOwnProperty('int')) {
                obj['int'] = ApiClient.convertToType(data['int'], 'Number');
            }
            if (data.hasOwnProperty('money')) {
                obj['money'] = Money.constructFromObject(data['money']);
            }
            if (data.hasOwnProperty('string')) {
                obj['string'] = ApiClient.convertToType(data['string'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoyaltyPointsBalance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoyaltyPointsBalance</code>.
     */
    static validateJSON(data) {
        // validate the optional field `money`
        if (data['money']) { // data not null
          Money.validateJSON(data['money']);
        }
        // ensure the json data is a string
        if (data['string'] && !(typeof data['string'] === 'string' || data['string'] instanceof String)) {
            throw new Error("Expected the field `string` to be a primitive type in the JSON string but got " + data['string']);
        }

        return true;
    }


}



/**
 * The double form of a balance. Only one of these subtypes (string, int, double, money) should be populated.
 * @member {Number} double
 */
LoyaltyPointsBalance.prototype['double'] = undefined;

/**
 * The integer form of a balance. Only one of these subtypes (string, int, double, money) should be populated.
 * @member {Number} int
 */
LoyaltyPointsBalance.prototype['int'] = undefined;

/**
 * @member {module:model/Money} money
 */
LoyaltyPointsBalance.prototype['money'] = undefined;

/**
 * The string form of a balance. Only one of these subtypes (string, int, double, money) should be populated.
 * @member {String} string
 */
LoyaltyPointsBalance.prototype['string'] = undefined;






export default LoyaltyPointsBalance;

