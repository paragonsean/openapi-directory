/**
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActivationOptions model module.
 * @module model/ActivationOptions
 * @version v1
 */
class ActivationOptions {
    /**
     * Constructs a new <code>ActivationOptions</code>.
     * ActivationOptions for the class
     * @alias module:model/ActivationOptions
     */
    constructor() { 
        
        ActivationOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActivationOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivationOptions} obj Optional instance to populate.
     * @return {module:model/ActivationOptions} The populated <code>ActivationOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivationOptions();

            if (data.hasOwnProperty('activationUrl')) {
                obj['activationUrl'] = ApiClient.convertToType(data['activationUrl'], 'String');
            }
            if (data.hasOwnProperty('allowReactivation')) {
                obj['allowReactivation'] = ApiClient.convertToType(data['allowReactivation'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActivationOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActivationOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activationUrl'] && !(typeof data['activationUrl'] === 'string' || data['activationUrl'] instanceof String)) {
            throw new Error("Expected the field `activationUrl` to be a primitive type in the JSON string but got " + data['activationUrl']);
        }

        return true;
    }


}



/**
 * HTTPS URL that supports REST semantics. Would be used for requesting activation from partners for given valuable, triggered by the users.
 * @member {String} activationUrl
 */
ActivationOptions.prototype['activationUrl'] = undefined;

/**
 * Flag to allow users to make activation call from different device. This allows client to render the activation button enabled even if the activationStatus is ACTIVATED but the requested device is different than the current device.
 * @member {Boolean} allowReactivation
 */
ActivationOptions.prototype['allowReactivation'] = undefined;






export default ActivationOptions;

