/**
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExpiryNotification from './ExpiryNotification';
import UpcomingNotification from './UpcomingNotification';

/**
 * The Notifications model module.
 * @module model/Notifications
 * @version v1
 */
class Notifications {
    /**
     * Constructs a new <code>Notifications</code>.
     * Indicates if the object needs to have notification enabled. We support only one of ExpiryNotification/UpcomingNotification. &#x60;expiryNotification&#x60; takes precedence over &#x60;upcomingNotification&#x60;. In other words if &#x60;expiryNotification&#x60; is set, we ignore the &#x60;upcomingNotification&#x60; field.
     * @alias module:model/Notifications
     */
    constructor() { 
        
        Notifications.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Notifications</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Notifications} obj Optional instance to populate.
     * @return {module:model/Notifications} The populated <code>Notifications</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Notifications();

            if (data.hasOwnProperty('expiryNotification')) {
                obj['expiryNotification'] = ExpiryNotification.constructFromObject(data['expiryNotification']);
            }
            if (data.hasOwnProperty('upcomingNotification')) {
                obj['upcomingNotification'] = UpcomingNotification.constructFromObject(data['upcomingNotification']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Notifications</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Notifications</code>.
     */
    static validateJSON(data) {
        // validate the optional field `expiryNotification`
        if (data['expiryNotification']) { // data not null
          ExpiryNotification.validateJSON(data['expiryNotification']);
        }
        // validate the optional field `upcomingNotification`
        if (data['upcomingNotification']) { // data not null
          UpcomingNotification.validateJSON(data['upcomingNotification']);
        }

        return true;
    }


}



/**
 * @member {module:model/ExpiryNotification} expiryNotification
 */
Notifications.prototype['expiryNotification'] = undefined;

/**
 * @member {module:model/UpcomingNotification} upcomingNotification
 */
Notifications.prototype['upcomingNotification'] = undefined;






export default Notifications;

