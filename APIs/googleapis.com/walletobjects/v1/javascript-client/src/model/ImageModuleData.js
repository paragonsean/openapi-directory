/**
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Image from './Image';

/**
 * The ImageModuleData model module.
 * @module model/ImageModuleData
 * @version v1
 */
class ImageModuleData {
    /**
     * Constructs a new <code>ImageModuleData</code>.
     * @alias module:model/ImageModuleData
     */
    constructor() { 
        
        ImageModuleData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageModuleData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageModuleData} obj Optional instance to populate.
     * @return {module:model/ImageModuleData} The populated <code>ImageModuleData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageModuleData();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('mainImage')) {
                obj['mainImage'] = Image.constructFromObject(data['mainImage']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageModuleData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageModuleData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `mainImage`
        if (data['mainImage']) { // data not null
          Image.validateJSON(data['mainImage']);
        }

        return true;
    }


}



/**
 * The ID associated with an image module. This field is here to enable ease of management of image modules.
 * @member {String} id
 */
ImageModuleData.prototype['id'] = undefined;

/**
 * @member {module:model/Image} mainImage
 */
ImageModuleData.prototype['mainImage'] = undefined;






export default ImageModuleData;

