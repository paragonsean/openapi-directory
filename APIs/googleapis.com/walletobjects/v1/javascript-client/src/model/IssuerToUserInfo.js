/**
 * Google Wallet API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SignUpInfo from './SignUpInfo';

/**
 * The IssuerToUserInfo model module.
 * @module model/IssuerToUserInfo
 * @version v1
 */
class IssuerToUserInfo {
    /**
     * Constructs a new <code>IssuerToUserInfo</code>.
     * @alias module:model/IssuerToUserInfo
     */
    constructor() { 
        
        IssuerToUserInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IssuerToUserInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssuerToUserInfo} obj Optional instance to populate.
     * @return {module:model/IssuerToUserInfo} The populated <code>IssuerToUserInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssuerToUserInfo();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('signUpInfo')) {
                obj['signUpInfo'] = SignUpInfo.constructFromObject(data['signUpInfo']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssuerToUserInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssuerToUserInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // validate the optional field `signUpInfo`
        if (data['signUpInfo']) { // data not null
          SignUpInfo.validateJSON(data['signUpInfo']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * @member {module:model/IssuerToUserInfo.ActionEnum} action
 */
IssuerToUserInfo.prototype['action'] = undefined;

/**
 * @member {module:model/SignUpInfo} signUpInfo
 */
IssuerToUserInfo.prototype['signUpInfo'] = undefined;

/**
 * Currently not used, consider deprecating.
 * @member {String} url
 */
IssuerToUserInfo.prototype['url'] = undefined;

/**
 * JSON web token for action S2AP.
 * @member {String} value
 */
IssuerToUserInfo.prototype['value'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
IssuerToUserInfo['ActionEnum'] = {

    /**
     * value: "ACTION_UNSPECIFIED"
     * @const
     */
    "ACTION_UNSPECIFIED": "ACTION_UNSPECIFIED",

    /**
     * value: "S2AP"
     * @const
     */
    "S2AP": "S2AP",

    /**
     * value: "s2ap"
     * @const
     */
    "s2ap": "s2ap",

    /**
     * value: "SIGN_UP"
     * @const
     */
    "SIGN_UP": "SIGN_UP",

    /**
     * value: "signUp"
     * @const
     */
    "signUp": "signUp"
};



export default IssuerToUserInfo;

