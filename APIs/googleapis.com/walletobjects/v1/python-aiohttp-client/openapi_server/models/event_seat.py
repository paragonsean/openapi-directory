# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.localized_string import LocalizedString
from openapi_server import util


class EventSeat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gate: LocalizedString=None, kind: str=None, row: LocalizedString=None, seat: LocalizedString=None, section: LocalizedString=None):
        """EventSeat - a model defined in OpenAPI

        :param gate: The gate of this EventSeat.
        :param kind: The kind of this EventSeat.
        :param row: The row of this EventSeat.
        :param seat: The seat of this EventSeat.
        :param section: The section of this EventSeat.
        """
        self.openapi_types = {
            'gate': LocalizedString,
            'kind': str,
            'row': LocalizedString,
            'seat': LocalizedString,
            'section': LocalizedString
        }

        self.attribute_map = {
            'gate': 'gate',
            'kind': 'kind',
            'row': 'row',
            'seat': 'seat',
            'section': 'section'
        }

        self._gate = gate
        self._kind = kind
        self._row = row
        self._seat = seat
        self._section = section

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventSeat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventSeat of this EventSeat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gate(self):
        """Gets the gate of this EventSeat.


        :return: The gate of this EventSeat.
        :rtype: LocalizedString
        """
        return self._gate

    @gate.setter
    def gate(self, gate):
        """Sets the gate of this EventSeat.


        :param gate: The gate of this EventSeat.
        :type gate: LocalizedString
        """

        self._gate = gate

    @property
    def kind(self):
        """Gets the kind of this EventSeat.

        Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventSeat\"`.

        :return: The kind of this EventSeat.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this EventSeat.

        Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventSeat\"`.

        :param kind: The kind of this EventSeat.
        :type kind: str
        """

        self._kind = kind

    @property
    def row(self):
        """Gets the row of this EventSeat.


        :return: The row of this EventSeat.
        :rtype: LocalizedString
        """
        return self._row

    @row.setter
    def row(self, row):
        """Sets the row of this EventSeat.


        :param row: The row of this EventSeat.
        :type row: LocalizedString
        """

        self._row = row

    @property
    def seat(self):
        """Gets the seat of this EventSeat.


        :return: The seat of this EventSeat.
        :rtype: LocalizedString
        """
        return self._seat

    @seat.setter
    def seat(self, seat):
        """Sets the seat of this EventSeat.


        :param seat: The seat of this EventSeat.
        :type seat: LocalizedString
        """

        self._seat = seat

    @property
    def section(self):
        """Gets the section of this EventSeat.


        :return: The section of this EventSeat.
        :rtype: LocalizedString
        """
        return self._section

    @section.setter
    def section(self, section):
        """Sets the section of this EventSeat.


        :param section: The section of this EventSeat.
        :type section: LocalizedString
        """

        self._section = section
