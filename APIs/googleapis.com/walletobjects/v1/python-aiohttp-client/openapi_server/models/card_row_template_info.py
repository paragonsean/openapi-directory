# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.card_row_one_item import CardRowOneItem
from openapi_server.models.card_row_three_items import CardRowThreeItems
from openapi_server.models.card_row_two_items import CardRowTwoItems
from openapi_server import util


class CardRowTemplateInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, one_item: CardRowOneItem=None, three_items: CardRowThreeItems=None, two_items: CardRowTwoItems=None):
        """CardRowTemplateInfo - a model defined in OpenAPI

        :param one_item: The one_item of this CardRowTemplateInfo.
        :param three_items: The three_items of this CardRowTemplateInfo.
        :param two_items: The two_items of this CardRowTemplateInfo.
        """
        self.openapi_types = {
            'one_item': CardRowOneItem,
            'three_items': CardRowThreeItems,
            'two_items': CardRowTwoItems
        }

        self.attribute_map = {
            'one_item': 'oneItem',
            'three_items': 'threeItems',
            'two_items': 'twoItems'
        }

        self._one_item = one_item
        self._three_items = three_items
        self._two_items = two_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CardRowTemplateInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CardRowTemplateInfo of this CardRowTemplateInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def one_item(self):
        """Gets the one_item of this CardRowTemplateInfo.


        :return: The one_item of this CardRowTemplateInfo.
        :rtype: CardRowOneItem
        """
        return self._one_item

    @one_item.setter
    def one_item(self, one_item):
        """Sets the one_item of this CardRowTemplateInfo.


        :param one_item: The one_item of this CardRowTemplateInfo.
        :type one_item: CardRowOneItem
        """

        self._one_item = one_item

    @property
    def three_items(self):
        """Gets the three_items of this CardRowTemplateInfo.


        :return: The three_items of this CardRowTemplateInfo.
        :rtype: CardRowThreeItems
        """
        return self._three_items

    @three_items.setter
    def three_items(self, three_items):
        """Sets the three_items of this CardRowTemplateInfo.


        :param three_items: The three_items of this CardRowTemplateInfo.
        :type three_items: CardRowThreeItems
        """

        self._three_items = three_items

    @property
    def two_items(self):
        """Gets the two_items of this CardRowTemplateInfo.


        :return: The two_items of this CardRowTemplateInfo.
        :rtype: CardRowTwoItems
        """
        return self._two_items

    @two_items.setter
    def two_items(self, two_items):
        """Sets the two_items of this CardRowTemplateInfo.


        :param two_items: The two_items of this CardRowTemplateInfo.
        :type two_items: CardRowTwoItems
        """

        self._two_items = two_items
