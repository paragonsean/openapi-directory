# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.callback_options import CallbackOptions
from openapi_server.models.issuer_contact_info import IssuerContactInfo
from openapi_server.models.smart_tap_merchant_data import SmartTapMerchantData
from openapi_server import util


class Issuer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, callback_options: CallbackOptions=None, contact_info: IssuerContactInfo=None, homepage_url: str=None, issuer_id: str=None, name: str=None, smart_tap_merchant_data: SmartTapMerchantData=None):
        """Issuer - a model defined in OpenAPI

        :param callback_options: The callback_options of this Issuer.
        :param contact_info: The contact_info of this Issuer.
        :param homepage_url: The homepage_url of this Issuer.
        :param issuer_id: The issuer_id of this Issuer.
        :param name: The name of this Issuer.
        :param smart_tap_merchant_data: The smart_tap_merchant_data of this Issuer.
        """
        self.openapi_types = {
            'callback_options': CallbackOptions,
            'contact_info': IssuerContactInfo,
            'homepage_url': str,
            'issuer_id': str,
            'name': str,
            'smart_tap_merchant_data': SmartTapMerchantData
        }

        self.attribute_map = {
            'callback_options': 'callbackOptions',
            'contact_info': 'contactInfo',
            'homepage_url': 'homepageUrl',
            'issuer_id': 'issuerId',
            'name': 'name',
            'smart_tap_merchant_data': 'smartTapMerchantData'
        }

        self._callback_options = callback_options
        self._contact_info = contact_info
        self._homepage_url = homepage_url
        self._issuer_id = issuer_id
        self._name = name
        self._smart_tap_merchant_data = smart_tap_merchant_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Issuer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Issuer of this Issuer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def callback_options(self):
        """Gets the callback_options of this Issuer.


        :return: The callback_options of this Issuer.
        :rtype: CallbackOptions
        """
        return self._callback_options

    @callback_options.setter
    def callback_options(self, callback_options):
        """Sets the callback_options of this Issuer.


        :param callback_options: The callback_options of this Issuer.
        :type callback_options: CallbackOptions
        """

        self._callback_options = callback_options

    @property
    def contact_info(self):
        """Gets the contact_info of this Issuer.


        :return: The contact_info of this Issuer.
        :rtype: IssuerContactInfo
        """
        return self._contact_info

    @contact_info.setter
    def contact_info(self, contact_info):
        """Sets the contact_info of this Issuer.


        :param contact_info: The contact_info of this Issuer.
        :type contact_info: IssuerContactInfo
        """

        self._contact_info = contact_info

    @property
    def homepage_url(self):
        """Gets the homepage_url of this Issuer.

        URL for the issuer's home page.

        :return: The homepage_url of this Issuer.
        :rtype: str
        """
        return self._homepage_url

    @homepage_url.setter
    def homepage_url(self, homepage_url):
        """Sets the homepage_url of this Issuer.

        URL for the issuer's home page.

        :param homepage_url: The homepage_url of this Issuer.
        :type homepage_url: str
        """

        self._homepage_url = homepage_url

    @property
    def issuer_id(self):
        """Gets the issuer_id of this Issuer.

        The unique identifier for an issuer account. This is automatically generated when the issuer is inserted.

        :return: The issuer_id of this Issuer.
        :rtype: str
        """
        return self._issuer_id

    @issuer_id.setter
    def issuer_id(self, issuer_id):
        """Sets the issuer_id of this Issuer.

        The unique identifier for an issuer account. This is automatically generated when the issuer is inserted.

        :param issuer_id: The issuer_id of this Issuer.
        :type issuer_id: str
        """

        self._issuer_id = issuer_id

    @property
    def name(self):
        """Gets the name of this Issuer.

        The account name of the issuer.

        :return: The name of this Issuer.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Issuer.

        The account name of the issuer.

        :param name: The name of this Issuer.
        :type name: str
        """

        self._name = name

    @property
    def smart_tap_merchant_data(self):
        """Gets the smart_tap_merchant_data of this Issuer.


        :return: The smart_tap_merchant_data of this Issuer.
        :rtype: SmartTapMerchantData
        """
        return self._smart_tap_merchant_data

    @smart_tap_merchant_data.setter
    def smart_tap_merchant_data(self, smart_tap_merchant_data):
        """Sets the smart_tap_merchant_data of this Issuer.


        :param smart_tap_merchant_data: The smart_tap_merchant_data of this Issuer.
        :type smart_tap_merchant_data: SmartTapMerchantData
        """

        self._smart_tap_merchant_data = smart_tap_merchant_data
