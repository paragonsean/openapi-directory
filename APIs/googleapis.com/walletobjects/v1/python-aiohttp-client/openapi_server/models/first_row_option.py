# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.field_selector import FieldSelector
from openapi_server import util


class FirstRowOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_option: FieldSelector=None, transit_option: str=None):
        """FirstRowOption - a model defined in OpenAPI

        :param field_option: The field_option of this FirstRowOption.
        :param transit_option: The transit_option of this FirstRowOption.
        """
        self.openapi_types = {
            'field_option': FieldSelector,
            'transit_option': str
        }

        self.attribute_map = {
            'field_option': 'fieldOption',
            'transit_option': 'transitOption'
        }

        self._field_option = field_option
        self._transit_option = transit_option

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FirstRowOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FirstRowOption of this FirstRowOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_option(self):
        """Gets the field_option of this FirstRowOption.


        :return: The field_option of this FirstRowOption.
        :rtype: FieldSelector
        """
        return self._field_option

    @field_option.setter
    def field_option(self, field_option):
        """Sets the field_option of this FirstRowOption.


        :param field_option: The field_option of this FirstRowOption.
        :type field_option: FieldSelector
        """

        self._field_option = field_option

    @property
    def transit_option(self):
        """Gets the transit_option of this FirstRowOption.


        :return: The transit_option of this FirstRowOption.
        :rtype: str
        """
        return self._transit_option

    @transit_option.setter
    def transit_option(self, transit_option):
        """Sets the transit_option of this FirstRowOption.


        :param transit_option: The transit_option of this FirstRowOption.
        :type transit_option: str
        """
        allowed_values = ["TRANSIT_OPTION_UNSPECIFIED", "ORIGIN_AND_DESTINATION_NAMES", "originAndDestinationNames", "ORIGIN_AND_DESTINATION_CODES", "originAndDestinationCodes", "ORIGIN_NAME", "originName"]  # noqa: E501
        if transit_option not in allowed_values:
            raise ValueError(
                "Invalid value for `transit_option` ({0}), must be one of {1}"
                .format(transit_option, allowed_values)
            )

        self._transit_option = transit_option
