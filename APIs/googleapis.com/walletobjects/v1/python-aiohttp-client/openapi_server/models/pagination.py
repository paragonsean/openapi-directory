# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Pagination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, next_page_token: str=None, results_per_page: int=None):
        """Pagination - a model defined in OpenAPI

        :param kind: The kind of this Pagination.
        :param next_page_token: The next_page_token of this Pagination.
        :param results_per_page: The results_per_page of this Pagination.
        """
        self.openapi_types = {
            'kind': str,
            'next_page_token': str,
            'results_per_page': int
        }

        self.attribute_map = {
            'kind': 'kind',
            'next_page_token': 'nextPageToken',
            'results_per_page': 'resultsPerPage'
        }

        self._kind = kind
        self._next_page_token = next_page_token
        self._results_per_page = results_per_page

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Pagination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Pagination of this Pagination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this Pagination.

        Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#pagination\"`.

        :return: The kind of this Pagination.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Pagination.

        Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#pagination\"`.

        :param kind: The kind of this Pagination.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this Pagination.

        Page token to send to fetch the next page.

        :return: The next_page_token of this Pagination.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this Pagination.

        Page token to send to fetch the next page.

        :param next_page_token: The next_page_token of this Pagination.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def results_per_page(self):
        """Gets the results_per_page of this Pagination.

        Number of results returned in this page.

        :return: The results_per_page of this Pagination.
        :rtype: int
        """
        return self._results_per_page

    @results_per_page.setter
    def results_per_page(self, results_per_page):
        """Sets the results_per_page of this Pagination.

        Number of results returned in this page.

        :param results_per_page: The results_per_page of this Pagination.
        :type results_per_page: int
        """

        self._results_per_page = results_per_page
