/**
 * Contact Center AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactCenterQuota.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactCenterQuota::OAIContactCenterQuota(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactCenterQuota::OAIContactCenterQuota() {
    this->initializeModel();
}

OAIContactCenterQuota::~OAIContactCenterQuota() {}

void OAIContactCenterQuota::initializeModel() {

    m_contact_center_count_limit_isSet = false;
    m_contact_center_count_limit_isValid = false;

    m_contact_center_count_sum_isSet = false;
    m_contact_center_count_sum_isValid = false;

    m_quotas_isSet = false;
    m_quotas_isValid = false;
}

void OAIContactCenterQuota::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactCenterQuota::fromJsonObject(QJsonObject json) {

    m_contact_center_count_limit_isValid = ::OpenAPI::fromJsonValue(m_contact_center_count_limit, json[QString("contactCenterCountLimit")]);
    m_contact_center_count_limit_isSet = !json[QString("contactCenterCountLimit")].isNull() && m_contact_center_count_limit_isValid;

    m_contact_center_count_sum_isValid = ::OpenAPI::fromJsonValue(m_contact_center_count_sum, json[QString("contactCenterCountSum")]);
    m_contact_center_count_sum_isSet = !json[QString("contactCenterCountSum")].isNull() && m_contact_center_count_sum_isValid;

    m_quotas_isValid = ::OpenAPI::fromJsonValue(m_quotas, json[QString("quotas")]);
    m_quotas_isSet = !json[QString("quotas")].isNull() && m_quotas_isValid;
}

QString OAIContactCenterQuota::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactCenterQuota::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_center_count_limit_isSet) {
        obj.insert(QString("contactCenterCountLimit"), ::OpenAPI::toJsonValue(m_contact_center_count_limit));
    }
    if (m_contact_center_count_sum_isSet) {
        obj.insert(QString("contactCenterCountSum"), ::OpenAPI::toJsonValue(m_contact_center_count_sum));
    }
    if (m_quotas.size() > 0) {
        obj.insert(QString("quotas"), ::OpenAPI::toJsonValue(m_quotas));
    }
    return obj;
}

qint32 OAIContactCenterQuota::getContactCenterCountLimit() const {
    return m_contact_center_count_limit;
}
void OAIContactCenterQuota::setContactCenterCountLimit(const qint32 &contact_center_count_limit) {
    m_contact_center_count_limit = contact_center_count_limit;
    m_contact_center_count_limit_isSet = true;
}

bool OAIContactCenterQuota::is_contact_center_count_limit_Set() const{
    return m_contact_center_count_limit_isSet;
}

bool OAIContactCenterQuota::is_contact_center_count_limit_Valid() const{
    return m_contact_center_count_limit_isValid;
}

qint32 OAIContactCenterQuota::getContactCenterCountSum() const {
    return m_contact_center_count_sum;
}
void OAIContactCenterQuota::setContactCenterCountSum(const qint32 &contact_center_count_sum) {
    m_contact_center_count_sum = contact_center_count_sum;
    m_contact_center_count_sum_isSet = true;
}

bool OAIContactCenterQuota::is_contact_center_count_sum_Set() const{
    return m_contact_center_count_sum_isSet;
}

bool OAIContactCenterQuota::is_contact_center_count_sum_Valid() const{
    return m_contact_center_count_sum_isValid;
}

QList<OAIQuota> OAIContactCenterQuota::getQuotas() const {
    return m_quotas;
}
void OAIContactCenterQuota::setQuotas(const QList<OAIQuota> &quotas) {
    m_quotas = quotas;
    m_quotas_isSet = true;
}

bool OAIContactCenterQuota::is_quotas_Set() const{
    return m_quotas_isSet;
}

bool OAIContactCenterQuota::is_quotas_Valid() const{
    return m_quotas_isValid;
}

bool OAIContactCenterQuota::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_center_count_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_center_count_sum_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quotas.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactCenterQuota::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
