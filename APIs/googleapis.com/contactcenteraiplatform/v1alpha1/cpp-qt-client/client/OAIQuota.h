/**
 * Contact Center AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuota.h
 *
 * Quota details.
 */

#ifndef OAIQuota_H
#define OAIQuota_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQuota : public OAIObject {
public:
    OAIQuota();
    OAIQuota(QString json);
    ~OAIQuota() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getContactCenterCountLimit() const;
    void setContactCenterCountLimit(const qint32 &contact_center_count_limit);
    bool is_contact_center_count_limit_Set() const;
    bool is_contact_center_count_limit_Valid() const;

    qint32 getContactCenterCountSum() const;
    void setContactCenterCountSum(const qint32 &contact_center_count_sum);
    bool is_contact_center_count_sum_Set() const;
    bool is_contact_center_count_sum_Valid() const;

    QString getContactCenterInstanceSize() const;
    void setContactCenterInstanceSize(const QString &contact_center_instance_size);
    bool is_contact_center_instance_size_Set() const;
    bool is_contact_center_instance_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_contact_center_count_limit;
    bool m_contact_center_count_limit_isSet;
    bool m_contact_center_count_limit_isValid;

    qint32 m_contact_center_count_sum;
    bool m_contact_center_count_sum_isSet;
    bool m_contact_center_count_sum_isValid;

    QString m_contact_center_instance_size;
    bool m_contact_center_instance_size_isSet;
    bool m_contact_center_instance_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuota)

#endif // OAIQuota_H
