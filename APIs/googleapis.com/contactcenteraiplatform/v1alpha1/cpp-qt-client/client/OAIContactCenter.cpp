/**
 * Contact Center AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactCenter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactCenter::OAIContactCenter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactCenter::OAIContactCenter() {
    this->initializeModel();
}

OAIContactCenter::~OAIContactCenter() {}

void OAIContactCenter::initializeModel() {

    m_admin_user_isSet = false;
    m_admin_user_isValid = false;

    m_ccaip_managed_users_isSet = false;
    m_ccaip_managed_users_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_customer_domain_prefix_isSet = false;
    m_customer_domain_prefix_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_instance_config_isSet = false;
    m_instance_config_isValid = false;

    m_kms_key_isSet = false;
    m_kms_key_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_private_components_isSet = false;
    m_private_components_isValid = false;

    m_saml_params_isSet = false;
    m_saml_params_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_uris_isSet = false;
    m_uris_isValid = false;

    m_user_email_isSet = false;
    m_user_email_isValid = false;
}

void OAIContactCenter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactCenter::fromJsonObject(QJsonObject json) {

    m_admin_user_isValid = ::OpenAPI::fromJsonValue(m_admin_user, json[QString("adminUser")]);
    m_admin_user_isSet = !json[QString("adminUser")].isNull() && m_admin_user_isValid;

    m_ccaip_managed_users_isValid = ::OpenAPI::fromJsonValue(m_ccaip_managed_users, json[QString("ccaipManagedUsers")]);
    m_ccaip_managed_users_isSet = !json[QString("ccaipManagedUsers")].isNull() && m_ccaip_managed_users_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_customer_domain_prefix_isValid = ::OpenAPI::fromJsonValue(m_customer_domain_prefix, json[QString("customerDomainPrefix")]);
    m_customer_domain_prefix_isSet = !json[QString("customerDomainPrefix")].isNull() && m_customer_domain_prefix_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_instance_config_isValid = ::OpenAPI::fromJsonValue(m_instance_config, json[QString("instanceConfig")]);
    m_instance_config_isSet = !json[QString("instanceConfig")].isNull() && m_instance_config_isValid;

    m_kms_key_isValid = ::OpenAPI::fromJsonValue(m_kms_key, json[QString("kmsKey")]);
    m_kms_key_isSet = !json[QString("kmsKey")].isNull() && m_kms_key_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_private_components_isValid = ::OpenAPI::fromJsonValue(m_private_components, json[QString("privateComponents")]);
    m_private_components_isSet = !json[QString("privateComponents")].isNull() && m_private_components_isValid;

    m_saml_params_isValid = ::OpenAPI::fromJsonValue(m_saml_params, json[QString("samlParams")]);
    m_saml_params_isSet = !json[QString("samlParams")].isNull() && m_saml_params_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_uris_isValid = ::OpenAPI::fromJsonValue(m_uris, json[QString("uris")]);
    m_uris_isSet = !json[QString("uris")].isNull() && m_uris_isValid;

    m_user_email_isValid = ::OpenAPI::fromJsonValue(m_user_email, json[QString("userEmail")]);
    m_user_email_isSet = !json[QString("userEmail")].isNull() && m_user_email_isValid;
}

QString OAIContactCenter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactCenter::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_user.isSet()) {
        obj.insert(QString("adminUser"), ::OpenAPI::toJsonValue(m_admin_user));
    }
    if (m_ccaip_managed_users_isSet) {
        obj.insert(QString("ccaipManagedUsers"), ::OpenAPI::toJsonValue(m_ccaip_managed_users));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_customer_domain_prefix_isSet) {
        obj.insert(QString("customerDomainPrefix"), ::OpenAPI::toJsonValue(m_customer_domain_prefix));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_instance_config.isSet()) {
        obj.insert(QString("instanceConfig"), ::OpenAPI::toJsonValue(m_instance_config));
    }
    if (m_kms_key_isSet) {
        obj.insert(QString("kmsKey"), ::OpenAPI::toJsonValue(m_kms_key));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_private_components.size() > 0) {
        obj.insert(QString("privateComponents"), ::OpenAPI::toJsonValue(m_private_components));
    }
    if (m_saml_params.isSet()) {
        obj.insert(QString("samlParams"), ::OpenAPI::toJsonValue(m_saml_params));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_uris.isSet()) {
        obj.insert(QString("uris"), ::OpenAPI::toJsonValue(m_uris));
    }
    if (m_user_email_isSet) {
        obj.insert(QString("userEmail"), ::OpenAPI::toJsonValue(m_user_email));
    }
    return obj;
}

OAIAdminUser OAIContactCenter::getAdminUser() const {
    return m_admin_user;
}
void OAIContactCenter::setAdminUser(const OAIAdminUser &admin_user) {
    m_admin_user = admin_user;
    m_admin_user_isSet = true;
}

bool OAIContactCenter::is_admin_user_Set() const{
    return m_admin_user_isSet;
}

bool OAIContactCenter::is_admin_user_Valid() const{
    return m_admin_user_isValid;
}

bool OAIContactCenter::isCcaipManagedUsers() const {
    return m_ccaip_managed_users;
}
void OAIContactCenter::setCcaipManagedUsers(const bool &ccaip_managed_users) {
    m_ccaip_managed_users = ccaip_managed_users;
    m_ccaip_managed_users_isSet = true;
}

bool OAIContactCenter::is_ccaip_managed_users_Set() const{
    return m_ccaip_managed_users_isSet;
}

bool OAIContactCenter::is_ccaip_managed_users_Valid() const{
    return m_ccaip_managed_users_isValid;
}

QString OAIContactCenter::getCreateTime() const {
    return m_create_time;
}
void OAIContactCenter::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIContactCenter::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIContactCenter::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIContactCenter::getCustomerDomainPrefix() const {
    return m_customer_domain_prefix;
}
void OAIContactCenter::setCustomerDomainPrefix(const QString &customer_domain_prefix) {
    m_customer_domain_prefix = customer_domain_prefix;
    m_customer_domain_prefix_isSet = true;
}

bool OAIContactCenter::is_customer_domain_prefix_Set() const{
    return m_customer_domain_prefix_isSet;
}

bool OAIContactCenter::is_customer_domain_prefix_Valid() const{
    return m_customer_domain_prefix_isValid;
}

QString OAIContactCenter::getDisplayName() const {
    return m_display_name;
}
void OAIContactCenter::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIContactCenter::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIContactCenter::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIInstanceConfig OAIContactCenter::getInstanceConfig() const {
    return m_instance_config;
}
void OAIContactCenter::setInstanceConfig(const OAIInstanceConfig &instance_config) {
    m_instance_config = instance_config;
    m_instance_config_isSet = true;
}

bool OAIContactCenter::is_instance_config_Set() const{
    return m_instance_config_isSet;
}

bool OAIContactCenter::is_instance_config_Valid() const{
    return m_instance_config_isValid;
}

QString OAIContactCenter::getKmsKey() const {
    return m_kms_key;
}
void OAIContactCenter::setKmsKey(const QString &kms_key) {
    m_kms_key = kms_key;
    m_kms_key_isSet = true;
}

bool OAIContactCenter::is_kms_key_Set() const{
    return m_kms_key_isSet;
}

bool OAIContactCenter::is_kms_key_Valid() const{
    return m_kms_key_isValid;
}

QMap<QString, QString> OAIContactCenter::getLabels() const {
    return m_labels;
}
void OAIContactCenter::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIContactCenter::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIContactCenter::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIContactCenter::getName() const {
    return m_name;
}
void OAIContactCenter::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIContactCenter::is_name_Set() const{
    return m_name_isSet;
}

bool OAIContactCenter::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAIContactCenter::getPrivateComponents() const {
    return m_private_components;
}
void OAIContactCenter::setPrivateComponents(const QList<QString> &private_components) {
    m_private_components = private_components;
    m_private_components_isSet = true;
}

bool OAIContactCenter::is_private_components_Set() const{
    return m_private_components_isSet;
}

bool OAIContactCenter::is_private_components_Valid() const{
    return m_private_components_isValid;
}

OAISAMLParams OAIContactCenter::getSamlParams() const {
    return m_saml_params;
}
void OAIContactCenter::setSamlParams(const OAISAMLParams &saml_params) {
    m_saml_params = saml_params;
    m_saml_params_isSet = true;
}

bool OAIContactCenter::is_saml_params_Set() const{
    return m_saml_params_isSet;
}

bool OAIContactCenter::is_saml_params_Valid() const{
    return m_saml_params_isValid;
}

QString OAIContactCenter::getState() const {
    return m_state;
}
void OAIContactCenter::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIContactCenter::is_state_Set() const{
    return m_state_isSet;
}

bool OAIContactCenter::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIContactCenter::getUpdateTime() const {
    return m_update_time;
}
void OAIContactCenter::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIContactCenter::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIContactCenter::is_update_time_Valid() const{
    return m_update_time_isValid;
}

OAIURIs OAIContactCenter::getUris() const {
    return m_uris;
}
void OAIContactCenter::setUris(const OAIURIs &uris) {
    m_uris = uris;
    m_uris_isSet = true;
}

bool OAIContactCenter::is_uris_Set() const{
    return m_uris_isSet;
}

bool OAIContactCenter::is_uris_Valid() const{
    return m_uris_isValid;
}

QString OAIContactCenter::getUserEmail() const {
    return m_user_email;
}
void OAIContactCenter::setUserEmail(const QString &user_email) {
    m_user_email = user_email;
    m_user_email_isSet = true;
}

bool OAIContactCenter::is_user_email_Set() const{
    return m_user_email_isSet;
}

bool OAIContactCenter::is_user_email_Valid() const{
    return m_user_email_isValid;
}

bool OAIContactCenter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_user.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ccaip_managed_users_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_domain_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_components.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_saml_params.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uris.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_email_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactCenter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
