/*
 * Contact Center AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Message storing the URIs of the ContactCenter.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:21.672665-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class URIs {
  public static final String SERIALIZED_NAME_CHAT_BOT_URI = "chatBotUri";
  @SerializedName(SERIALIZED_NAME_CHAT_BOT_URI)
  private String chatBotUri;

  public static final String SERIALIZED_NAME_MEDIA_URI = "mediaUri";
  @SerializedName(SERIALIZED_NAME_MEDIA_URI)
  private String mediaUri;

  public static final String SERIALIZED_NAME_ROOT_URI = "rootUri";
  @SerializedName(SERIALIZED_NAME_ROOT_URI)
  private String rootUri;

  public static final String SERIALIZED_NAME_VIRTUAL_AGENT_STREAMING_SERVICE_URI = "virtualAgentStreamingServiceUri";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_AGENT_STREAMING_SERVICE_URI)
  private String virtualAgentStreamingServiceUri;

  public URIs() {
  }

  public URIs chatBotUri(String chatBotUri) {
    this.chatBotUri = chatBotUri;
    return this;
  }

  /**
   * Chat Bot Uri of the ContactCenter
   * @return chatBotUri
   */
  @javax.annotation.Nullable
  public String getChatBotUri() {
    return chatBotUri;
  }

  public void setChatBotUri(String chatBotUri) {
    this.chatBotUri = chatBotUri;
  }


  public URIs mediaUri(String mediaUri) {
    this.mediaUri = mediaUri;
    return this;
  }

  /**
   * Media Uri of the ContactCenter.
   * @return mediaUri
   */
  @javax.annotation.Nullable
  public String getMediaUri() {
    return mediaUri;
  }

  public void setMediaUri(String mediaUri) {
    this.mediaUri = mediaUri;
  }


  public URIs rootUri(String rootUri) {
    this.rootUri = rootUri;
    return this;
  }

  /**
   * Root Uri of the ContactCenter.
   * @return rootUri
   */
  @javax.annotation.Nullable
  public String getRootUri() {
    return rootUri;
  }

  public void setRootUri(String rootUri) {
    this.rootUri = rootUri;
  }


  public URIs virtualAgentStreamingServiceUri(String virtualAgentStreamingServiceUri) {
    this.virtualAgentStreamingServiceUri = virtualAgentStreamingServiceUri;
    return this;
  }

  /**
   * Virtual Agent Streaming Service Uri of the ContactCenter.
   * @return virtualAgentStreamingServiceUri
   */
  @javax.annotation.Nullable
  public String getVirtualAgentStreamingServiceUri() {
    return virtualAgentStreamingServiceUri;
  }

  public void setVirtualAgentStreamingServiceUri(String virtualAgentStreamingServiceUri) {
    this.virtualAgentStreamingServiceUri = virtualAgentStreamingServiceUri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    URIs urIs = (URIs) o;
    return Objects.equals(this.chatBotUri, urIs.chatBotUri) &&
        Objects.equals(this.mediaUri, urIs.mediaUri) &&
        Objects.equals(this.rootUri, urIs.rootUri) &&
        Objects.equals(this.virtualAgentStreamingServiceUri, urIs.virtualAgentStreamingServiceUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chatBotUri, mediaUri, rootUri, virtualAgentStreamingServiceUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class URIs {\n");
    sb.append("    chatBotUri: ").append(toIndentedString(chatBotUri)).append("\n");
    sb.append("    mediaUri: ").append(toIndentedString(mediaUri)).append("\n");
    sb.append("    rootUri: ").append(toIndentedString(rootUri)).append("\n");
    sb.append("    virtualAgentStreamingServiceUri: ").append(toIndentedString(virtualAgentStreamingServiceUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("chatBotUri");
    openapiFields.add("mediaUri");
    openapiFields.add("rootUri");
    openapiFields.add("virtualAgentStreamingServiceUri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to URIs
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!URIs.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in URIs is not found in the empty JSON string", URIs.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!URIs.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `URIs` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("chatBotUri") != null && !jsonObj.get("chatBotUri").isJsonNull()) && !jsonObj.get("chatBotUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chatBotUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chatBotUri").toString()));
      }
      if ((jsonObj.get("mediaUri") != null && !jsonObj.get("mediaUri").isJsonNull()) && !jsonObj.get("mediaUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mediaUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mediaUri").toString()));
      }
      if ((jsonObj.get("rootUri") != null && !jsonObj.get("rootUri").isJsonNull()) && !jsonObj.get("rootUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rootUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rootUri").toString()));
      }
      if ((jsonObj.get("virtualAgentStreamingServiceUri") != null && !jsonObj.get("virtualAgentStreamingServiceUri").isJsonNull()) && !jsonObj.get("virtualAgentStreamingServiceUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `virtualAgentStreamingServiceUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("virtualAgentStreamingServiceUri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!URIs.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'URIs' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<URIs> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(URIs.class));

       return (TypeAdapter<T>) new TypeAdapter<URIs>() {
           @Override
           public void write(JsonWriter out, URIs value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public URIs read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of URIs given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of URIs
   * @throws IOException if the JSON string is invalid with respect to URIs
   */
  public static URIs fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, URIs.class);
  }

  /**
   * Convert an instance of URIs to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

