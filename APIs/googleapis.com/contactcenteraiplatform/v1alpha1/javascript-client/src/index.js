/**
 * Contact Center AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdminUser from './model/AdminUser';
import ContactCenter from './model/ContactCenter';
import ContactCenterQuota from './model/ContactCenterQuota';
import GoogleCloudCommonOperationMetadata from './model/GoogleCloudCommonOperationMetadata';
import InstanceConfig from './model/InstanceConfig';
import ListContactCentersResponse from './model/ListContactCentersResponse';
import ListLocationsResponse from './model/ListLocationsResponse';
import ListOperationsResponse from './model/ListOperationsResponse';
import Location from './model/Location';
import Operation from './model/Operation';
import OperationMetadata from './model/OperationMetadata';
import Quota from './model/Quota';
import SAMLParams from './model/SAMLParams';
import Status from './model/Status';
import URIs from './model/URIs';
import ProjectsApi from './api/ProjectsApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ContactCenterAiPlatformApi = require('index'); // See note below*.
* var xxxSvc = new ContactCenterAiPlatformApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ContactCenterAiPlatformApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ContactCenterAiPlatformApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ContactCenterAiPlatformApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1alpha1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdminUser model constructor.
     * @property {module:model/AdminUser}
     */
    AdminUser,

    /**
     * The ContactCenter model constructor.
     * @property {module:model/ContactCenter}
     */
    ContactCenter,

    /**
     * The ContactCenterQuota model constructor.
     * @property {module:model/ContactCenterQuota}
     */
    ContactCenterQuota,

    /**
     * The GoogleCloudCommonOperationMetadata model constructor.
     * @property {module:model/GoogleCloudCommonOperationMetadata}
     */
    GoogleCloudCommonOperationMetadata,

    /**
     * The InstanceConfig model constructor.
     * @property {module:model/InstanceConfig}
     */
    InstanceConfig,

    /**
     * The ListContactCentersResponse model constructor.
     * @property {module:model/ListContactCentersResponse}
     */
    ListContactCentersResponse,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationMetadata model constructor.
     * @property {module:model/OperationMetadata}
     */
    OperationMetadata,

    /**
     * The Quota model constructor.
     * @property {module:model/Quota}
     */
    Quota,

    /**
     * The SAMLParams model constructor.
     * @property {module:model/SAMLParams}
     */
    SAMLParams,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The URIs model constructor.
     * @property {module:model/URIs}
     */
    URIs,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
