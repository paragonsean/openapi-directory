/**
 * Contact Center AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Quota from './Quota';

/**
 * The ContactCenterQuota model module.
 * @module model/ContactCenterQuota
 * @version v1alpha1
 */
class ContactCenterQuota {
    /**
     * Constructs a new <code>ContactCenterQuota</code>.
     * Represents a quota for contact centers.
     * @alias module:model/ContactCenterQuota
     */
    constructor() { 
        
        ContactCenterQuota.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContactCenterQuota</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContactCenterQuota} obj Optional instance to populate.
     * @return {module:model/ContactCenterQuota} The populated <code>ContactCenterQuota</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContactCenterQuota();

            if (data.hasOwnProperty('contactCenterCountLimit')) {
                obj['contactCenterCountLimit'] = ApiClient.convertToType(data['contactCenterCountLimit'], 'Number');
            }
            if (data.hasOwnProperty('contactCenterCountSum')) {
                obj['contactCenterCountSum'] = ApiClient.convertToType(data['contactCenterCountSum'], 'Number');
            }
            if (data.hasOwnProperty('quotas')) {
                obj['quotas'] = ApiClient.convertToType(data['quotas'], [Quota]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContactCenterQuota</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContactCenterQuota</code>.
     */
    static validateJSON(data) {
        if (data['quotas']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['quotas'])) {
                throw new Error("Expected the field `quotas` to be an array in the JSON data but got " + data['quotas']);
            }
            // validate the optional field `quotas` (array)
            for (const item of data['quotas']) {
                Quota.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Deprecated: Use the Quota fields instead. Reflects the count limit of contact centers on a billing account.
 * @member {Number} contactCenterCountLimit
 */
ContactCenterQuota.prototype['contactCenterCountLimit'] = undefined;

/**
 * Deprecated: Use the Quota fields instead. Reflects the count sum of contact centers on a billing account.
 * @member {Number} contactCenterCountSum
 */
ContactCenterQuota.prototype['contactCenterCountSum'] = undefined;

/**
 * Quota details per contact center instance type.
 * @member {Array.<module:model/Quota>} quotas
 */
ContactCenterQuota.prototype['quotas'] = undefined;






export default ContactCenterQuota;

