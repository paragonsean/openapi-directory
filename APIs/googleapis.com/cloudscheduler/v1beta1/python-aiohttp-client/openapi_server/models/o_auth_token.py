# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OAuthToken(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scope: str=None, service_account_email: str=None):
        """OAuthToken - a model defined in OpenAPI

        :param scope: The scope of this OAuthToken.
        :param service_account_email: The service_account_email of this OAuthToken.
        """
        self.openapi_types = {
            'scope': str,
            'service_account_email': str
        }

        self.attribute_map = {
            'scope': 'scope',
            'service_account_email': 'serviceAccountEmail'
        }

        self._scope = scope
        self._service_account_email = service_account_email

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OAuthToken':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OAuthToken of this OAuthToken.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scope(self):
        """Gets the scope of this OAuthToken.

        OAuth scope to be used for generating OAuth access token. If not specified, \"https://www.googleapis.com/auth/cloud-platform\" will be used.

        :return: The scope of this OAuthToken.
        :rtype: str
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this OAuthToken.

        OAuth scope to be used for generating OAuth access token. If not specified, \"https://www.googleapis.com/auth/cloud-platform\" will be used.

        :param scope: The scope of this OAuthToken.
        :type scope: str
        """

        self._scope = scope

    @property
    def service_account_email(self):
        """Gets the service_account_email of this OAuthToken.

        [Service account email](https://cloud.google.com/iam/docs/service-accounts) to be used for generating OAuth token. The service account must be within the same project as the job. The caller must have iam.serviceAccounts.actAs permission for the service account.

        :return: The service_account_email of this OAuthToken.
        :rtype: str
        """
        return self._service_account_email

    @service_account_email.setter
    def service_account_email(self, service_account_email):
        """Sets the service_account_email of this OAuthToken.

        [Service account email](https://cloud.google.com/iam/docs/service-accounts) to be used for generating OAuth token. The service account must be within the same project as the job. The caller must have iam.serviceAccounts.actAs permission for the service account.

        :param service_account_email: The service_account_email of this OAuthToken.
        :type service_account_email: str
        """

        self._service_account_email = service_account_email
