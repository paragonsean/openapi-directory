/**
 * Cloud Scheduler API
 * Creates and manages jobs run on a regular recurring schedule.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PubsubTarget model module.
 * @module model/PubsubTarget
 * @version v1beta1
 */
class PubsubTarget {
    /**
     * Constructs a new <code>PubsubTarget</code>.
     * Pub/Sub target. The job will be delivered by publishing a message to the given Pub/Sub topic.
     * @alias module:model/PubsubTarget
     */
    constructor() { 
        
        PubsubTarget.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PubsubTarget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PubsubTarget} obj Optional instance to populate.
     * @return {module:model/PubsubTarget} The populated <code>PubsubTarget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PubsubTarget();

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': 'String'});
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], 'Blob');
            }
            if (data.hasOwnProperty('topicName')) {
                obj['topicName'] = ApiClient.convertToType(data['topicName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PubsubTarget</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PubsubTarget</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['topicName'] && !(typeof data['topicName'] === 'string' || data['topicName'] instanceof String)) {
            throw new Error("Expected the field `topicName` to be a primitive type in the JSON string but got " + data['topicName']);
        }

        return true;
    }


}



/**
 * Attributes for PubsubMessage. Pubsub message must contain either non-empty data, or at least one attribute.
 * @member {Object.<String, String>} attributes
 */
PubsubTarget.prototype['attributes'] = undefined;

/**
 * The message payload for PubsubMessage. Pubsub message must contain either non-empty data, or at least one attribute.
 * @member {Blob} data
 */
PubsubTarget.prototype['data'] = undefined;

/**
 * Required. The name of the Cloud Pub/Sub topic to which messages will be published when a job is delivered. The topic name must be in the same format as required by Pub/Sub's [PublishRequest.name](https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#publishrequest), for example `projects/PROJECT_ID/topics/TOPIC_ID`. The topic must be in the same project as the Cloud Scheduler job.
 * @member {String} topicName
 */
PubsubTarget.prototype['topicName'] = undefined;






export default PubsubTarget;

