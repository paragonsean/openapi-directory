# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.trace import Trace
from openapi_server import util


class Traces(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, traces: List[Trace]=None):
        """Traces - a model defined in OpenAPI

        :param traces: The traces of this Traces.
        """
        self.openapi_types = {
            'traces': List[Trace]
        }

        self.attribute_map = {
            'traces': 'traces'
        }

        self._traces = traces

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Traces':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Traces of this Traces.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def traces(self):
        """Gets the traces of this Traces.

        List of traces.

        :return: The traces of this Traces.
        :rtype: List[Trace]
        """
        return self._traces

    @traces.setter
    def traces(self, traces):
        """Sets the traces of this Traces.

        List of traces.

        :param traces: The traces of this Traces.
        :type traces: List[Trace]
        """

        self._traces = traces
