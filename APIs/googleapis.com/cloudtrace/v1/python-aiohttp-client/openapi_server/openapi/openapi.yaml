openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "Sends application trace data to Cloud Trace for viewing. Trace data\
    \ is collected for all App Engine applications by default. Trace data from other\
    \ applications can be provided using this API. This library is used to interact\
    \ with the Cloud Trace API directly. If you are looking to instrument your application\
    \ for Cloud Trace, we recommend using OpenTelemetry. "
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Trace API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://cloudtrace.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: cloudtrace
externalDocs:
  url: https://cloud.google.com/trace
servers:
- url: https://cloudtrace.googleapis.com/
tags:
- name: projects
paths:
  /v1/projects/{projectId}/traces:
    get:
      description: Returns a list of traces that match the specified filter conditions.
      operationId: cloudtrace_projects_traces_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. ID of the Cloud project where the trace data is stored.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: End of the time interval (inclusive) during which the trace data
          was collected from the application.
        explode: true
        in: query
        name: endTime
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A filter against labels for the request. By default,\
          \ searches use prefix matching. To specify exact match, prepend a plus symbol\
          \ (`+`) to the search term. Multiple terms are ANDed. Syntax: * `root:NAME_PREFIX`\
          \ or `NAME_PREFIX`: Return traces where any root span starts with `NAME_PREFIX`.\
          \ * `+root:NAME` or `+NAME`: Return traces where any root span's name is\
          \ exactly `NAME`. * `span:NAME_PREFIX`: Return traces where any span starts\
          \ with `NAME_PREFIX`. * `+span:NAME`: Return traces where any span's name\
          \ is exactly `NAME`. * `latency:DURATION`: Return traces whose overall latency\
          \ is greater or equal to than `DURATION`. Accepted units are nanoseconds\
          \ (`ns`), milliseconds (`ms`), and seconds (`s`). Default is `ms`. For example,\
          \ `latency:24ms` returns traces whose overall latency is greater than or\
          \ equal to 24 milliseconds. * `label:LABEL_KEY`: Return all traces containing\
          \ the specified label key (exact match, case-sensitive) regardless of the\
          \ key:value pair's value (including empty values). * `LABEL_KEY:VALUE_PREFIX`:\
          \ Return all traces containing the specified label key (exact match, case-sensitive)\
          \ whose value starts with `VALUE_PREFIX`. Both a key and a value must be\
          \ specified. * `+LABEL_KEY:VALUE`: Return all traces containing a key:value\
          \ pair exactly matching the specified text. Both a key and a value must\
          \ be specified. * `method:VALUE`: Equivalent to `/http/method:VALUE`. *\
          \ `url:VALUE`: Equivalent to `/http/url:VALUE`."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Field used to sort the returned traces. Can be one\
          \ of the following: * `trace_id` * `name` (`name` field of root span in\
          \ the trace) * `duration` (difference between `end_time` and `start_time`\
          \ fields of the root span) * `start` (`start_time` field of the root span)\
          \ Descending order can be specified by appending `desc` to the sort field\
          \ (for example, `name desc`). Only one sort field is permitted."
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Maximum number of traces to return. If not specified\
          \ or <= 0, the implementation selects a reasonable value. The implementation\
          \ may return fewer traces than the requested page size."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Token identifying the page of results to return. If provided,\
          \ use the value of the `next_page_token` field from a previous request."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: Start of the time interval (inclusive) during which the trace
          data was collected from the application.
        explode: true
        in: query
        name: startTime
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Type of data returned for traces in the list. Default
          is `MINIMAL`.
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_TYPE_UNSPECIFIED
          - MINIMAL
          - ROOTSPAN
          - COMPLETE
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTracesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/trace.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/trace.readonly
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    patch:
      description: "Sends new traces to Cloud Trace or updates existing traces. If\
        \ the ID of a trace that you send matches that of an existing trace, any fields\
        \ in the existing trace and its spans are overwritten by the provided values,\
        \ and any new fields provided are merged with the existing trace data. If\
        \ the ID does not match, a new trace is created."
      operationId: cloudtrace_projects_patch_traces
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. ID of the Cloud project where the trace data is stored.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Traces'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/trace.append
        Oauth2c:
        - https://www.googleapis.com/auth/trace.append
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/projects/{projectId}/traces/{traceId}:
    get:
      description: Gets a single trace by its ID.
      operationId: cloudtrace_projects_traces_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. ID of the Cloud project where the trace data is stored.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: Required. ID of the trace to return.
        explode: false
        in: path
        name: traceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trace'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/trace.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/trace.readonly
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    ListTracesResponse:
      description: The response message for the `ListTraces` method.
      example:
        nextPageToken: nextPageToken
        traces:
        - traceId: traceId
          spans:
          - spanId: spanId
            kind: SPAN_KIND_UNSPECIFIED
            name: name
            startTime: startTime
            endTime: endTime
            parentSpanId: parentSpanId
            labels:
              key: labels
          - spanId: spanId
            kind: SPAN_KIND_UNSPECIFIED
            name: name
            startTime: startTime
            endTime: endTime
            parentSpanId: parentSpanId
            labels:
              key: labels
          projectId: projectId
        - traceId: traceId
          spans:
          - spanId: spanId
            kind: SPAN_KIND_UNSPECIFIED
            name: name
            startTime: startTime
            endTime: endTime
            parentSpanId: parentSpanId
            labels:
              key: labels
          - spanId: spanId
            kind: SPAN_KIND_UNSPECIFIED
            name: name
            startTime: startTime
            endTime: endTime
            parentSpanId: parentSpanId
            labels:
              key: labels
          projectId: projectId
      properties:
        nextPageToken:
          description: "If defined, indicates that there are more traces that match\
            \ the request and that this value should be passed to the next request\
            \ to continue retrieving additional traces."
          title: nextPageToken
          type: string
        traces:
          description: List of trace records as specified by the view parameter.
          items:
            $ref: '#/components/schemas/Trace'
          title: traces
          type: array
      title: ListTracesResponse
      type: object
    Trace:
      description: "A trace describes how long it takes for an application to perform\
        \ an operation. It consists of a set of spans, each of which represent a single\
        \ timed event within the operation."
      example:
        traceId: traceId
        spans:
        - spanId: spanId
          kind: SPAN_KIND_UNSPECIFIED
          name: name
          startTime: startTime
          endTime: endTime
          parentSpanId: parentSpanId
          labels:
            key: labels
        - spanId: spanId
          kind: SPAN_KIND_UNSPECIFIED
          name: name
          startTime: startTime
          endTime: endTime
          parentSpanId: parentSpanId
          labels:
            key: labels
        projectId: projectId
      properties:
        projectId:
          description: Project ID of the Cloud project where the trace data is stored.
          title: projectId
          type: string
        spans:
          description: Collection of spans in the trace.
          items:
            $ref: '#/components/schemas/TraceSpan'
          title: spans
          type: array
        traceId:
          description: "Globally unique identifier for the trace. This identifier\
            \ is a 128-bit numeric value formatted as a 32-byte hex string. For example,\
            \ `382d4f4c6b7bb2f4a972559d9085001d`. The numeric value should not be\
            \ zero."
          title: traceId
          type: string
      title: Trace
      type: object
    TraceSpan:
      description: "A span represents a single timed event within a trace. Spans can\
        \ be nested and form a trace tree. Often, a trace contains a root span that\
        \ describes the end-to-end latency of an operation and, optionally, one or\
        \ more subspans for its suboperations. Spans do not need to be contiguous.\
        \ There may be gaps between spans in a trace."
      example:
        spanId: spanId
        kind: SPAN_KIND_UNSPECIFIED
        name: name
        startTime: startTime
        endTime: endTime
        parentSpanId: parentSpanId
        labels:
          key: labels
      properties:
        endTime:
          description: End time of the span in seconds and nanoseconds from the UNIX
            epoch.
          format: google-datetime
          title: endTime
          type: string
        kind:
          description: "Distinguishes between spans generated in a particular context.\
            \ For example, two spans with the same name may be distinguished using\
            \ `RPC_CLIENT` and `RPC_SERVER` to identify queueing latency associated\
            \ with the span."
          enum:
          - SPAN_KIND_UNSPECIFIED
          - RPC_SERVER
          - RPC_CLIENT
          title: kind
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Collection of labels associated with the span. Label keys\
            \ must be less than 128 bytes. Label values must be less than 16 kilobytes\
            \ (10MB for `/stacktrace` values). Some predefined label keys exist, or\
            \ you may create your own. When creating your own, we recommend the following\
            \ formats: * `/category/product/key` for agents of well-known products\
            \ (e.g. `/db/mongodb/read_size`). * `short_host/path/key` for domain-specific\
            \ keys (e.g. `foo.com/myproduct/bar`) Predefined labels include: * `/agent`\
            \ * `/component` * `/error/message` * `/error/name` * `/http/client_city`\
            \ * `/http/client_country` * `/http/client_protocol` * `/http/client_region`\
            \ * `/http/host` * `/http/method` * `/http/path` * `/http/redirected_url`\
            \ * `/http/request/size` * `/http/response/size` * `/http/route` * `/http/status_code`\
            \ * `/http/url` * `/http/user_agent` * `/pid` * `/stacktrace` * `/tid`"
          title: labels
          type: object
        name:
          description: "Name of the span. Must be less than 128 bytes. The span name\
            \ is sanitized and displayed in the Trace tool in the Google Cloud Platform\
            \ Console. The name may be a method name or some other per-call site name.\
            \ For the same executable and the same call point, a best practice is\
            \ to use a consistent name, which makes it easier to correlate cross-trace\
            \ spans."
          title: name
          type: string
        parentSpanId:
          description: "Optional. ID of the parent span, if any."
          format: uint64
          title: parentSpanId
          type: string
        spanId:
          description: "Identifier for the span. Must be a 64-bit integer other than\
            \ 0 and unique within a trace. For example, `2205310701640571284`."
          format: uint64
          title: spanId
          type: string
        startTime:
          description: Start time of the span in seconds and nanoseconds from the
            UNIX epoch.
          format: google-datetime
          title: startTime
          type: string
      title: TraceSpan
      type: object
    Traces:
      description: List of new or updated traces.
      example:
        traces:
        - traceId: traceId
          spans:
          - spanId: spanId
            kind: SPAN_KIND_UNSPECIFIED
            name: name
            startTime: startTime
            endTime: endTime
            parentSpanId: parentSpanId
            labels:
              key: labels
          - spanId: spanId
            kind: SPAN_KIND_UNSPECIFIED
            name: name
            startTime: startTime
            endTime: endTime
            parentSpanId: parentSpanId
            labels:
              key: labels
          projectId: projectId
        - traceId: traceId
          spans:
          - spanId: spanId
            kind: SPAN_KIND_UNSPECIFIED
            name: name
            startTime: startTime
            endTime: endTime
            parentSpanId: parentSpanId
            labels:
              key: labels
          - spanId: spanId
            kind: SPAN_KIND_UNSPECIFIED
            name: name
            startTime: startTime
            endTime: endTime
            parentSpanId: parentSpanId
            labels:
              key: labels
          projectId: projectId
      properties:
        traces:
          description: List of traces.
          items:
            $ref: '#/components/schemas/Trace'
          title: traces
          type: array
      title: Traces
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/trace.append: Write Trace data for a project
              or application
            https://www.googleapis.com/auth/trace.readonly: Read Trace data for a
              project or application
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/trace.append: Write Trace data for a project
              or application
            https://www.googleapis.com/auth/trace.readonly: Read Trace data for a
              project or application
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
