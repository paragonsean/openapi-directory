/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrace.h
 *
 * A trace describes how long it takes for an application to perform an operation. It consists of a set of spans, each of which represent a single timed event within the operation.
 */

#ifndef OAITrace_H
#define OAITrace_H

#include <QJsonObject>

#include "OAITraceSpan.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITraceSpan;

class OAITrace : public OAIObject {
public:
    OAITrace();
    OAITrace(QString json);
    ~OAITrace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QList<OAITraceSpan> getSpans() const;
    void setSpans(const QList<OAITraceSpan> &spans);
    bool is_spans_Set() const;
    bool is_spans_Valid() const;

    QString getTraceId() const;
    void setTraceId(const QString &trace_id);
    bool is_trace_id_Set() const;
    bool is_trace_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QList<OAITraceSpan> m_spans;
    bool m_spans_isSet;
    bool m_spans_isValid;

    QString m_trace_id;
    bool m_trace_id_isSet;
    bool m_trace_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrace)

#endif // OAITrace_H
