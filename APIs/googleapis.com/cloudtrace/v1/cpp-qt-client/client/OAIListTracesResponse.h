/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListTracesResponse.h
 *
 * The response message for the &#x60;ListTraces&#x60; method.
 */

#ifndef OAIListTracesResponse_H
#define OAIListTracesResponse_H

#include <QJsonObject>

#include "OAITrace.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITrace;

class OAIListTracesResponse : public OAIObject {
public:
    OAIListTracesResponse();
    OAIListTracesResponse(QString json);
    ~OAIListTracesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QList<OAITrace> getTraces() const;
    void setTraces(const QList<OAITrace> &traces);
    bool is_traces_Set() const;
    bool is_traces_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QList<OAITrace> m_traces;
    bool m_traces_isSet;
    bool m_traces_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListTracesResponse)

#endif // OAIListTracesResponse_H
