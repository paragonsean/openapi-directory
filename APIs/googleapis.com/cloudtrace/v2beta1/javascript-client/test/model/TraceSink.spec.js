/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudTraceApi);
  }
}(this, function(expect, CloudTraceApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudTraceApi.TraceSink();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TraceSink', function() {
    it('should create an instance of TraceSink', function() {
      // uncomment below and update the code to test TraceSink
      //var instance = new CloudTraceApi.TraceSink();
      //expect(instance).to.be.a(CloudTraceApi.TraceSink);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudTraceApi.TraceSink();
      //expect(instance).to.be();
    });

    it('should have the property outputConfig (base name: "outputConfig")', function() {
      // uncomment below and update the code to test the property outputConfig
      //var instance = new CloudTraceApi.TraceSink();
      //expect(instance).to.be();
    });

    it('should have the property writerIdentity (base name: "writerIdentity")', function() {
      // uncomment below and update the code to test the property writerIdentity
      //var instance = new CloudTraceApi.TraceSink();
      //expect(instance).to.be();
    });

  });

}));
