# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.output_config import OutputConfig
from openapi_server import util


class TraceSink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, output_config: OutputConfig=None, writer_identity: str=None):
        """TraceSink - a model defined in OpenAPI

        :param name: The name of this TraceSink.
        :param output_config: The output_config of this TraceSink.
        :param writer_identity: The writer_identity of this TraceSink.
        """
        self.openapi_types = {
            'name': str,
            'output_config': OutputConfig,
            'writer_identity': str
        }

        self.attribute_map = {
            'name': 'name',
            'output_config': 'outputConfig',
            'writer_identity': 'writerIdentity'
        }

        self._name = name
        self._output_config = output_config
        self._writer_identity = writer_identity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TraceSink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TraceSink of this TraceSink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this TraceSink.

        Required. The canonical sink resource name, unique within the project. Must be of the form: projects/[PROJECT_NUMBER]/traceSinks/[SINK_ID]. E.g.: `\"projects/12345/traceSinks/my-project-trace-sink\"`. Sink identifiers are limited to 256 characters and can include only the following characters: upper and lower-case alphanumeric characters, underscores, hyphens, and periods.

        :return: The name of this TraceSink.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TraceSink.

        Required. The canonical sink resource name, unique within the project. Must be of the form: projects/[PROJECT_NUMBER]/traceSinks/[SINK_ID]. E.g.: `\"projects/12345/traceSinks/my-project-trace-sink\"`. Sink identifiers are limited to 256 characters and can include only the following characters: upper and lower-case alphanumeric characters, underscores, hyphens, and periods.

        :param name: The name of this TraceSink.
        :type name: str
        """

        self._name = name

    @property
    def output_config(self):
        """Gets the output_config of this TraceSink.


        :return: The output_config of this TraceSink.
        :rtype: OutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this TraceSink.


        :param output_config: The output_config of this TraceSink.
        :type output_config: OutputConfig
        """

        self._output_config = output_config

    @property
    def writer_identity(self):
        """Gets the writer_identity of this TraceSink.

        Output only. A service account name for exporting the data. This field is set by sinks.create and sinks.update. The service account will need to be granted write access to the destination specified in the output configuration, see [Granting access for a resource](/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource). To create tables and to write data, this account needs the `dataEditor` role. Read more about roles in the [BigQuery documentation](https://cloud.google.com/bigquery/docs/access-control). E.g.: \"service-00000001@00000002.iam.gserviceaccount.com\"

        :return: The writer_identity of this TraceSink.
        :rtype: str
        """
        return self._writer_identity

    @writer_identity.setter
    def writer_identity(self, writer_identity):
        """Sets the writer_identity of this TraceSink.

        Output only. A service account name for exporting the data. This field is set by sinks.create and sinks.update. The service account will need to be granted write access to the destination specified in the output configuration, see [Granting access for a resource](/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource). To create tables and to write data, this account needs the `dataEditor` role. Read more about roles in the [BigQuery documentation](https://cloud.google.com/bigquery/docs/access-control). E.g.: \"service-00000001@00000002.iam.gserviceaccount.com\"

        :param writer_identity: The writer_identity of this TraceSink.
        :type writer_identity: str
        """

        self._writer_identity = writer_identity
