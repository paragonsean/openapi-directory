# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.truncatable_string import TruncatableString
from openapi_server import util


class AttributeValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bool_value: bool=None, int_value: str=None, string_value: TruncatableString=None):
        """AttributeValue - a model defined in OpenAPI

        :param bool_value: The bool_value of this AttributeValue.
        :param int_value: The int_value of this AttributeValue.
        :param string_value: The string_value of this AttributeValue.
        """
        self.openapi_types = {
            'bool_value': bool,
            'int_value': str,
            'string_value': TruncatableString
        }

        self.attribute_map = {
            'bool_value': 'boolValue',
            'int_value': 'intValue',
            'string_value': 'stringValue'
        }

        self._bool_value = bool_value
        self._int_value = int_value
        self._string_value = string_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttributeValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AttributeValue of this AttributeValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bool_value(self):
        """Gets the bool_value of this AttributeValue.

        A Boolean value represented by `true` or `false`.

        :return: The bool_value of this AttributeValue.
        :rtype: bool
        """
        return self._bool_value

    @bool_value.setter
    def bool_value(self, bool_value):
        """Sets the bool_value of this AttributeValue.

        A Boolean value represented by `true` or `false`.

        :param bool_value: The bool_value of this AttributeValue.
        :type bool_value: bool
        """

        self._bool_value = bool_value

    @property
    def int_value(self):
        """Gets the int_value of this AttributeValue.

        A 64-bit signed integer.

        :return: The int_value of this AttributeValue.
        :rtype: str
        """
        return self._int_value

    @int_value.setter
    def int_value(self, int_value):
        """Sets the int_value of this AttributeValue.

        A 64-bit signed integer.

        :param int_value: The int_value of this AttributeValue.
        :type int_value: str
        """

        self._int_value = int_value

    @property
    def string_value(self):
        """Gets the string_value of this AttributeValue.


        :return: The string_value of this AttributeValue.
        :rtype: TruncatableString
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this AttributeValue.


        :param string_value: The string_value of this AttributeValue.
        :type string_value: TruncatableString
        """

        self._string_value = string_value
